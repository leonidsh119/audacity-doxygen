<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_lyrics_8cpp" kind="file" language="C++">
    <compoundname>Lyrics.cpp</compoundname>
    <includes local="no">math.h</includes>
    <includes local="no">wx/defs.h</includes>
    <includes local="no">wx/dcmemory.h</includes>
    <includes local="no">wx/mimetype.h</includes>
    <includes refid="_lyrics_8h" local="yes">Lyrics.h</includes>
    <includes refid="_internat_8h" local="yes">Internat.h</includes>
    <includes refid="_project_8h" local="yes">Project.h</includes>
    <includes refid="_label_track_8h" local="yes">LabelTrack.h</includes>
    <includes local="no">wx/arrimpl.cpp</includes>
    <incdepgraph>
      <node id="48013">
        <label>wx/dir.h</label>
      </node>
      <node id="48022">
        <label>wx/choice.h</label>
      </node>
      <node id="47993">
        <label>wx/hashmap.h</label>
      </node>
      <node id="48050">
        <label>toolbars/SelectionBarListener.h</label>
        <link refid="_selection_bar_listener_8h"/>
      </node>
      <node id="48048">
        <label>wx/gauge.h</label>
      </node>
      <node id="48014">
        <label>wx/event.h</label>
      </node>
      <node id="47999">
        <label>wx/ffile.h</label>
      </node>
      <node id="48062">
        <label>wx/font.h</label>
      </node>
      <node id="48039">
        <label>audacity/ModuleInterface.h</label>
        <link refid="_module_interface_8h"/>
        <childnode refid="47995" relation="include">
        </childnode>
        <childnode refid="48031" relation="include">
        </childnode>
        <childnode refid="48040" relation="include">
        </childnode>
      </node>
      <node id="48055">
        <label>wx/dcclient.h</label>
      </node>
      <node id="48012">
        <label>wx/cmdline.h</label>
      </node>
      <node id="48057">
        <label>LabelTrack.h</label>
        <link refid="_label_track_8h"/>
        <childnode refid="48002" relation="include">
        </childnode>
        <childnode refid="48058" relation="include">
        </childnode>
        <childnode refid="48061" relation="include">
        </childnode>
        <childnode refid="48014" relation="include">
        </childnode>
        <childnode refid="48062" relation="include">
        </childnode>
        <childnode refid="48063" relation="include">
        </childnode>
        <childnode refid="47981" relation="include">
        </childnode>
        <childnode refid="47986" relation="include">
        </childnode>
        <childnode refid="48064" relation="include">
        </childnode>
      </node>
      <node id="48030">
        <label>audacity/EffectInterface.h</label>
        <link refid="_effect_interface_8h"/>
        <childnode refid="47995" relation="include">
        </childnode>
        <childnode refid="48031" relation="include">
        </childnode>
        <childnode refid="48032" relation="include">
        </childnode>
        <childnode refid="48033" relation="include">
        </childnode>
        <childnode refid="48028" relation="include">
        </childnode>
      </node>
      <node id="47984">
        <label>Internat.h</label>
        <link refid="_internat_8h"/>
        <childnode refid="47985" relation="include">
        </childnode>
        <childnode refid="47986" relation="include">
        </childnode>
        <childnode refid="47987" relation="include">
        </childnode>
      </node>
      <node id="47996">
        <label>xml/XMLTagHandler.h</label>
        <link refid="_x_m_l_tag_handler_8h"/>
        <childnode refid="47980" relation="include">
        </childnode>
        <childnode refid="47986" relation="include">
        </childnode>
        <childnode refid="47997" relation="include">
        </childnode>
        <childnode refid="47998" relation="include">
        </childnode>
      </node>
      <node id="48004">
        <label>TrackPanelListener.h</label>
        <link refid="_track_panel_listener_8h"/>
      </node>
      <node id="48003">
        <label>wx/wxchar.h</label>
      </node>
      <node id="48063">
        <label>wx/pen.h</label>
      </node>
      <node id="48054">
        <label>wx/frame.h</label>
      </node>
      <node id="48025">
        <label>ondemand/ODTaskThread.h</label>
        <link refid="_o_d_task_thread_8h"/>
        <childnode refid="48026" relation="include">
        </childnode>
        <childnode refid="47980" relation="include">
        </childnode>
      </node>
      <node id="48032">
        <label>audacity/ConfigInterface.h</label>
        <link refid="_config_interface_8h"/>
        <childnode refid="47995" relation="include">
        </childnode>
      </node>
      <node id="47978">
        <label>wx/mimetype.h</label>
      </node>
      <node id="47994">
        <label>wx/utils.h</label>
      </node>
      <node id="47979">
        <label>Lyrics.h</label>
        <link refid="_lyrics_8h"/>
        <childnode refid="47980" relation="include">
        </childnode>
        <childnode refid="47981" relation="include">
        </childnode>
        <childnode refid="47982" relation="include">
        </childnode>
        <childnode refid="47983" relation="include">
        </childnode>
      </node>
      <node id="48047">
        <label>wx/evtloop.h</label>
      </node>
      <node id="47989">
        <label>Experimental.h</label>
        <link refid="_experimental_8h"/>
        <childnode refid="47976" relation="include">
        </childnode>
      </node>
      <node id="47974">
        <label>C:/_dev/OpenU/Audacity/audacity/src/Lyrics.cpp</label>
        <link refid="Lyrics.cpp"/>
        <childnode refid="47975" relation="include">
        </childnode>
        <childnode refid="47976" relation="include">
        </childnode>
        <childnode refid="47977" relation="include">
        </childnode>
        <childnode refid="47978" relation="include">
        </childnode>
        <childnode refid="47979" relation="include">
        </childnode>
        <childnode refid="47984" relation="include">
        </childnode>
        <childnode refid="47988" relation="include">
        </childnode>
        <childnode refid="48057" relation="include">
        </childnode>
        <childnode refid="48065" relation="include">
        </childnode>
      </node>
      <node id="48020">
        <label>wx/timer.h</label>
      </node>
      <node id="48059">
        <label>wx/gdicmn.h</label>
      </node>
      <node id="48000">
        <label>ViewInfo.h</label>
        <link refid="_view_info_8h"/>
        <childnode refid="48001" relation="include">
        </childnode>
        <childnode refid="48002" relation="include">
        </childnode>
      </node>
      <node id="48045">
        <label>../Shuttle.h</label>
        <link refid="_shuttle_8h"/>
      </node>
      <node id="48035">
        <label>wx/fileconf.h</label>
      </node>
      <node id="48037">
        <label>map</label>
      </node>
      <node id="48040">
        <label>audacity/PluginInterface.h</label>
        <link refid="_plugin_interface_8h"/>
        <childnode refid="47995" relation="include">
        </childnode>
        <childnode refid="48032" relation="include">
        </childnode>
        <childnode refid="48030" relation="include">
        </childnode>
        <childnode refid="48031" relation="include">
        </childnode>
        <childnode refid="48038" relation="include">
        </childnode>
        <childnode refid="48039" relation="include">
        </childnode>
      </node>
      <node id="48051">
        <label>toolbars/SpectralSelectionBarListener.h</label>
        <link refid="_spectral_selection_bar_listener_8h"/>
        <childnode refid="47980" relation="include">
        </childnode>
      </node>
      <node id="48049">
        <label>wx/stattext.h</label>
      </node>
      <node id="48019">
        <label>wx/socket.h</label>
      </node>
      <node id="48053">
        <label>wx/generic/dragimgg.h</label>
      </node>
      <node id="48031">
        <label>audacity/IdentInterface.h</label>
        <link refid="_ident_interface_8h"/>
        <childnode refid="47995" relation="include">
        </childnode>
      </node>
      <node id="47991">
        <label>wx/list.h</label>
      </node>
      <node id="48009">
        <label>wx/menu.h</label>
      </node>
      <node id="47976">
        <label>wx/defs.h</label>
      </node>
      <node id="48024">
        <label>wx/window.h</label>
      </node>
      <node id="48016">
        <label>wx/intl.h</label>
      </node>
      <node id="48046">
        <label>../widgets/ProgressDialog.h</label>
        <link refid="_progress_dialog_8h"/>
        <childnode refid="47980" relation="include">
        </childnode>
        <childnode refid="47976" relation="include">
        </childnode>
        <childnode refid="48028" relation="include">
        </childnode>
        <childnode refid="48047" relation="include">
        </childnode>
        <childnode refid="48048" relation="include">
        </childnode>
        <childnode refid="48049" relation="include">
        </childnode>
        <childnode refid="47994" relation="include">
        </childnode>
      </node>
      <node id="48043">
        <label>wx/bmpbuttn.h</label>
      </node>
      <node id="47995">
        <label>audacity/Types.h</label>
        <link refid="include_2audacity_2_types_8h"/>
        <childnode refid="47986" relation="include">
        </childnode>
        <childnode refid="47985" relation="include">
        </childnode>
      </node>
      <node id="48036">
        <label>../PluginManager.h</label>
        <link refid="_plugin_manager_8h"/>
        <childnode refid="47976" relation="include">
        </childnode>
        <childnode refid="47981" relation="include">
        </childnode>
        <childnode refid="48035" relation="include">
        </childnode>
        <childnode refid="47986" relation="include">
        </childnode>
        <childnode refid="48037" relation="include">
        </childnode>
        <childnode refid="48030" relation="include">
        </childnode>
        <childnode refid="48038" relation="include">
        </childnode>
        <childnode refid="48039" relation="include">
        </childnode>
        <childnode refid="48040" relation="include">
        </childnode>
      </node>
      <node id="48028">
        <label>wx/dialog.h</label>
      </node>
      <node id="47992">
        <label>wx/filename.h</label>
      </node>
      <node id="48027">
        <label>effects/EffectManager.h</label>
        <link refid="_effect_manager_8h"/>
        <childnode refid="47989" relation="include">
        </childnode>
        <childnode refid="48022" relation="include">
        </childnode>
        <childnode refid="48028" relation="include">
        </childnode>
        <childnode refid="48014" relation="include">
        </childnode>
        <childnode refid="48029" relation="include">
        </childnode>
        <childnode refid="47986" relation="include">
        </childnode>
        <childnode refid="48030" relation="include">
        </childnode>
        <childnode refid="48036" relation="include">
        </childnode>
        <childnode refid="48041" relation="include">
        </childnode>
      </node>
      <node id="48033">
        <label>audacity/EffectAutomationParameters.h</label>
        <link refid="_effect_automation_parameters_8h"/>
        <childnode refid="48034" relation="include">
        </childnode>
        <childnode refid="48012" relation="include">
        </childnode>
        <childnode refid="48035" relation="include">
        </childnode>
        <childnode refid="48016" relation="include">
        </childnode>
      </node>
      <node id="48061">
        <label>wx/brush.h</label>
      </node>
      <node id="48006">
        <label>commands/CommandManager.h</label>
        <link refid="_command_manager_8h"/>
        <childnode refid="47989" relation="include">
        </childnode>
        <childnode refid="48007" relation="include">
        </childnode>
        <childnode refid="48001" relation="include">
        </childnode>
        <childnode refid="47986" relation="include">
        </childnode>
        <childnode refid="47981" relation="include">
        </childnode>
        <childnode refid="48009" relation="include">
        </childnode>
        <childnode refid="47993" relation="include">
        </childnode>
        <childnode refid="48010" relation="include">
        </childnode>
        <childnode refid="47996" relation="include">
        </childnode>
        <childnode refid="47995" relation="include">
        </childnode>
      </node>
      <node id="47980">
        <label>Audacity.h</label>
        <link refid="_audacity_8h"/>
      </node>
      <node id="48023">
        <label>wx/grid.h</label>
      </node>
      <node id="48001">
        <label>vector</label>
      </node>
      <node id="48041">
        <label>Effect.h</label>
        <link refid="src_2effects_2_effect_8h"/>
        <childnode refid="47980" relation="include">
        </childnode>
        <childnode refid="48007" relation="include">
        </childnode>
        <childnode refid="48042" relation="include">
        </childnode>
        <childnode refid="48043" relation="include">
        </childnode>
        <childnode refid="47981" relation="include">
        </childnode>
        <childnode refid="48016" relation="include">
        </childnode>
        <childnode refid="47986" relation="include">
        </childnode>
        <childnode refid="48044" relation="include">
        </childnode>
        <childnode refid="48032" relation="include">
        </childnode>
        <childnode refid="48030" relation="include">
        </childnode>
        <childnode refid="47989" relation="include">
        </childnode>
        <childnode refid="48002" relation="include">
        </childnode>
        <childnode refid="48045" relation="include">
        </childnode>
        <childnode refid="47984" relation="include">
        </childnode>
        <childnode refid="48046" relation="include">
        </childnode>
      </node>
      <node id="47981">
        <label>wx/dynarray.h</label>
      </node>
      <node id="47988">
        <label>Project.h</label>
        <link refid="_project_8h"/>
        <childnode refid="47980" relation="include">
        </childnode>
        <childnode refid="47989" relation="include">
        </childnode>
        <childnode refid="47990" relation="include">
        </childnode>
        <childnode refid="48000" relation="include">
        </childnode>
        <childnode refid="48004" relation="include">
        </childnode>
        <childnode refid="48005" relation="include">
        </childnode>
        <childnode refid="48006" relation="include">
        </childnode>
        <childnode refid="48027" relation="include">
        </childnode>
        <childnode refid="47996" relation="include">
        </childnode>
        <childnode refid="48050" relation="include">
        </childnode>
        <childnode refid="48051" relation="include">
        </childnode>
        <childnode refid="47976" relation="include">
        </childnode>
        <childnode refid="48014" relation="include">
        </childnode>
        <childnode refid="48018" relation="include">
        </childnode>
        <childnode refid="48052" relation="include">
        </childnode>
        <childnode refid="48053" relation="include">
        </childnode>
        <childnode refid="48054" relation="include">
        </childnode>
        <childnode refid="48016" relation="include">
        </childnode>
        <childnode refid="48055" relation="include">
        </childnode>
        <childnode refid="48056" relation="include">
        </childnode>
      </node>
      <node id="48038">
        <label>audacity/ImporterInterface.h</label>
        <link refid="_importer_interface_8h"/>
        <childnode refid="47995" relation="include">
        </childnode>
        <childnode refid="48032" relation="include">
        </childnode>
        <childnode refid="48031" relation="include">
        </childnode>
      </node>
      <node id="47986">
        <label>wx/string.h</label>
      </node>
      <node id="48010">
        <label>../AudacityApp.h</label>
        <link refid="_audacity_app_8h"/>
        <childnode refid="47980" relation="include">
        </childnode>
        <childnode refid="48011" relation="include">
        </childnode>
        <childnode refid="48012" relation="include">
        </childnode>
        <childnode refid="48013" relation="include">
        </childnode>
        <childnode refid="48014" relation="include">
        </childnode>
        <childnode refid="48015" relation="include">
        </childnode>
        <childnode refid="48016" relation="include">
        </childnode>
        <childnode refid="48017" relation="include">
        </childnode>
        <childnode refid="48018" relation="include">
        </childnode>
        <childnode refid="48019" relation="include">
        </childnode>
        <childnode refid="48020" relation="include">
        </childnode>
        <childnode refid="48021" relation="include">
        </childnode>
        <childnode refid="48025" relation="include">
        </childnode>
        <childnode refid="47989" relation="include">
        </childnode>
      </node>
      <node id="48029">
        <label>wx/listbox.h</label>
      </node>
      <node id="48018">
        <label>wx/log.h</label>
      </node>
      <node id="47975">
        <label>math.h</label>
      </node>
      <node id="47990">
        <label>DirManager.h</label>
        <link refid="_dir_manager_8h"/>
        <childnode refid="47991" relation="include">
        </childnode>
        <childnode refid="47986" relation="include">
        </childnode>
        <childnode refid="47992" relation="include">
        </childnode>
        <childnode refid="47993" relation="include">
        </childnode>
        <childnode refid="47994" relation="include">
        </childnode>
        <childnode refid="47995" relation="include">
        </childnode>
        <childnode refid="47996" relation="include">
        </childnode>
      </node>
      <node id="48002">
        <label>SelectedRegion.h</label>
        <link refid="_selected_region_8h"/>
        <childnode refid="47980" relation="include">
        </childnode>
        <childnode refid="47989" relation="include">
        </childnode>
        <childnode refid="47976" relation="include">
        </childnode>
        <childnode refid="48003" relation="include">
        </childnode>
        <childnode refid="47975" relation="include">
        </childnode>
      </node>
      <node id="47985">
        <label>wx/arrstr.h</label>
      </node>
      <node id="48017">
        <label>wx/snglinst.h</label>
      </node>
      <node id="48058">
        <label>Track.h</label>
        <link refid="src_2track_8h"/>
        <childnode refid="47980" relation="include">
        </childnode>
        <childnode refid="48007" relation="include">
        </childnode>
        <childnode refid="48001" relation="include">
        </childnode>
        <childnode refid="47981" relation="include">
        </childnode>
        <childnode refid="48014" relation="include">
        </childnode>
        <childnode refid="48059" relation="include">
        </childnode>
        <childnode refid="47987" relation="include">
        </childnode>
        <childnode refid="47986" relation="include">
        </childnode>
        <childnode refid="47989" relation="include">
        </childnode>
        <childnode refid="48060" relation="include">
        </childnode>
        <childnode refid="47996" relation="include">
        </childnode>
      </node>
      <node id="48026">
        <label>wx/thread.h</label>
      </node>
      <node id="48052">
        <label>wx/dragimag.h</label>
      </node>
      <node id="48044">
        <label>wx/tglbtn.h</label>
      </node>
      <node id="48064">
        <label>wx/clipbrd.h</label>
      </node>
      <node id="48007">
        <label>../MemoryX.h</label>
        <link refid="_memory_x_8h"/>
        <childnode refid="48008" relation="include">
        </childnode>
      </node>
      <node id="48021">
        <label>widgets/FileHistory.h</label>
        <link refid="_file_history_8h"/>
        <childnode refid="47976" relation="include">
        </childnode>
        <childnode refid="48022" relation="include">
        </childnode>
        <childnode refid="47981" relation="include">
        </childnode>
        <childnode refid="48014" relation="include">
        </childnode>
        <childnode refid="48023" relation="include">
        </childnode>
        <childnode refid="47986" relation="include">
        </childnode>
        <childnode refid="48024" relation="include">
        </childnode>
      </node>
      <node id="48042">
        <label>set</label>
      </node>
      <node id="48056">
        <label>Menus.h</label>
        <link refid="_menus_8h"/>
        <childnode refid="47989" relation="include">
        </childnode>
      </node>
      <node id="48011">
        <label>wx/app.h</label>
        <link refid="app_8h"/>
      </node>
      <node id="47987">
        <label>wx/longlong.h</label>
      </node>
      <node id="47982">
        <label>wx/panel.h</label>
      </node>
      <node id="47997">
        <label>stdio.h</label>
      </node>
      <node id="47983">
        <label>wx/textctrl.h</label>
      </node>
      <node id="48060">
        <label>SampleFormat.h</label>
        <link refid="_sample_format_8h"/>
        <childnode refid="47980" relation="include">
        </childnode>
        <childnode refid="47976" relation="include">
        </childnode>
        <childnode refid="47995" relation="include">
        </childnode>
      </node>
      <node id="48034">
        <label>locale.h</label>
      </node>
      <node id="48015">
        <label>wx/docview.h</label>
      </node>
      <node id="47977">
        <label>wx/dcmemory.h</label>
      </node>
      <node id="48065">
        <label>wx/arrimpl.cpp</label>
      </node>
      <node id="48008">
        <label>memory</label>
      </node>
      <node id="47998">
        <label>XMLWriter.h</label>
        <link refid="_x_m_l_writer_8h"/>
        <childnode refid="47985" relation="include">
        </childnode>
        <childnode refid="47981" relation="include">
        </childnode>
        <childnode refid="47999" relation="include">
        </childnode>
      </node>
      <node id="48005">
        <label>AudioIOListener.h</label>
        <link refid="_audio_i_o_listener_8h"/>
        <childnode refid="47986" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="_lyrics_8cpp_1a1cc2b7d1a58127d4b8dd8e100817cf6a" prot="public" static="no">
        <name>I_FIRST_REAL_SYLLABLE</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Lyrics.cpp" line="119" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Lyrics.cpp" bodystart="119" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_lyrics_8cpp_1a5dd231596104ecb8f4e872011e8c35ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>WX_DEFINE_OBJARRAY</definition>
        <argsstring>(SyllableArray)</argsstring>
        <name>WX_DEFINE_OBJARRAY</name>
        <param>
          <type>SyllableArray</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Lyrics.cpp" line="24" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>Audacity:<sp/>A<sp/>Digital<sp/>Audio<sp/>Editor</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>Lyrics.cpp</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>Dominic<sp/>Mazzoni</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/>Vaughan<sp/>Johnson</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment">**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/defs.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/dcmemory.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/mimetype.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_lyrics_8h" kindref="compound">Lyrics.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_internat_8h" kindref="compound">Internat.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_project_8h" kindref="compound">Project.h</ref>&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>for<sp/>GetActiveProject</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_label_track_8h" kindref="compound">LabelTrack.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/arrimpl.cpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><ref refid="_lyrics_8cpp_1a5dd231596104ecb8f4e872011e8c35ea" kindref="member">WX_DEFINE_OBJARRAY</ref>(SyllableArray);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal">BEGIN_EVENT_TABLE(<ref refid="class_highlight_text_ctrl" kindref="compound">HighlightTextCtrl</ref>,<sp/>wxTextCtrl)</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/>EVT_MOUSE_EVENTS(<ref refid="class_highlight_text_ctrl" kindref="compound">HighlightTextCtrl</ref>::OnMouseEvent)</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><ref refid="_batch_command_dialog_8cpp_1a8c3469324b3e5d3e6c44c23a418ab937" kindref="member">END_EVENT_TABLE</ref>()</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="class_highlight_text_ctrl_1a752c52ff4032145a0a9c22ef5b66f3ed" refkind="member"><highlight class="normal"><ref refid="class_highlight_text_ctrl" kindref="compound">HighlightTextCtrl</ref>::<ref refid="class_highlight_text_ctrl" kindref="compound">HighlightTextCtrl</ref>(<ref refid="class_lyrics" kindref="compound">Lyrics</ref>*<sp/>parent,</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxWindowID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref><sp/>wxString&amp;<sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref><sp/></highlight><highlight class="comment">/*=<sp/>&quot;&quot;*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref><sp/>wxPoint&amp;<sp/>pos<sp/></highlight><highlight class="comment">/*=<sp/>wxDefaultPosition*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref><sp/>wxSize&amp;<sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref><sp/></highlight><highlight class="comment">/*=<sp/>wxDefaultSize*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="36"><highlight class="normal">:<sp/>wxTextCtrl(parent,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="comment">//<sp/>wxWindow*<sp/>parent,<sp/>wxWindowID<sp/>id,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value,<sp/></highlight><highlight class="comment">//<sp/>const<sp/>wxString&amp;<sp/>value<sp/>=<sp/>&quot;&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/></highlight><highlight class="comment">//<sp/>const<sp/>wxPoint&amp;<sp/>pos<sp/>=<sp/>wxDefaultPosition,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref>,<sp/></highlight><highlight class="comment">//<sp/>const<sp/>wxSize&amp;<sp/>size<sp/>=<sp/>wxDefaultSize,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxTE_MULTILINE<sp/>|<sp/>wxTE_READONLY<sp/>|<sp/>wxTE_RICH<sp/>|<sp/>wxTE_RICH2<sp/>|<sp/>wxTE_AUTO_URL<sp/>|<sp/>wxTE_NOHIDESEL),<sp/></highlight><highlight class="comment">//v<sp/>|<sp/>wxHSCROLL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/>mLyrics(parent)</highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="class_highlight_text_ctrl_1a0e63b8ca90943641a67db28a395f15c4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_highlight_text_ctrl_1a0e63b8ca90943641a67db28a395f15c4" kindref="member">HighlightTextCtrl::OnMouseEvent</ref>(wxMouseEvent&amp;<sp/>event)</highlight></codeline>
<codeline lineno="46"><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event.ButtonUp())</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="nasm_8h_1a5f350118b553429484632e5603292389" kindref="member">from</ref>,<sp/>to;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;GetSelection(&amp;from,<sp/>&amp;to);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nCurSyl<sp/>=<sp/>mLyrics-&gt;<ref refid="class_lyrics_1ab010edfac00895ee15bf7d0ccd704ec4" kindref="member">GetCurrentSyllableIndex</ref>();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nNewSyl<sp/>=<sp/>mLyrics-&gt;<ref refid="class_lyrics_1a8814f6dca2b713111c0da252fbeeca9b" kindref="member">FindSyllable</ref>(from);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nNewSyl<sp/>!=<sp/>nCurSyl)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_syllable" kindref="compound">Syllable</ref>*<sp/>pCurSyl<sp/>=<sp/>mLyrics-&gt;<ref refid="class_lyrics_1a129d876127960557d784780a6437e71a" kindref="member">GetSyllable</ref>(nNewSyl);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_audacity_project" kindref="compound">AudacityProject</ref>*<sp/>pProj<sp/>=<sp/><ref refid="_project_8cpp_1a897aa047b58617a9acc187fc882e3bb4" kindref="member">GetActiveProject</ref>();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pProj-&gt;<ref refid="class_audacity_project_1a4d97279f9ddf37332418c32d1079ff62" kindref="member">SetSel0</ref>(pCurSyl-&gt;<ref refid="struct_syllable_1a8bda2fd870861df184ec61fd0d5c4f24" kindref="member">t</ref>);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//v<sp/>Should<sp/>probably<sp/>select<sp/>to<sp/>end<sp/>as<sp/>in<sp/>AudacityProject::OnSelectCursorEnd,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>better<sp/>to<sp/>generalize<sp/>that<sp/>in<sp/>AudacityProject<sp/>methods.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pProj-&gt;<ref refid="class_audacity_project_1aefe314298c89d89d301515e586d3c2fc" kindref="member">mViewInfo</ref>.<ref refid="class_view_info_1a07895f02c517d048cc1ca855b0efa54e" kindref="member">selectedRegion</ref>.<ref refid="class_selected_region_1ae32e3f4d254e58372548619e069da39c" kindref="member">setT1</ref>(pCurSyl-&gt;<ref refid="struct_syllable_1a8bda2fd870861df184ec61fd0d5c4f24" kindref="member">t</ref>);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.Skip();</highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">//v<sp/>static<sp/>const<sp/>kHighlightTextCtrlID<sp/>=<sp/>7654;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal">BEGIN_EVENT_TABLE(<ref refid="class_lyrics" kindref="compound">Lyrics</ref>,<sp/>wxPanel)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/>EVT_KEY_DOWN(<ref refid="class_lyrics_1a09eed60dd30269a498d2a0d9e95d860e" kindref="member">Lyrics::OnKeyEvent</ref>)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/>EVT_PAINT(<ref refid="class_lyrics_1a91f125733c01cd66fde1c22d66ba0e63" kindref="member">Lyrics::OnPaint</ref>)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/>EVT_SIZE(<ref refid="class_lyrics_1af10cbd70e788faf9ef457042f0833230" kindref="member">Lyrics::OnSize</ref>)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//v<sp/>Doesn&apos;t<sp/>seem<sp/>to<sp/>be<sp/>a<sp/>way<sp/>to<sp/>capture<sp/>a<sp/>selection<sp/>event<sp/>in<sp/>a<sp/>read-only<sp/>wxTextCtrl.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>EVT_COMMAND_LEFT_CLICK(kHighlightTextCtrlID,<sp/>Lyrics::OnHighlightTextCtrl)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><ref refid="_batch_command_dialog_8cpp_1a8c3469324b3e5d3e6c44c23a418ab937" kindref="member">END_EVENT_TABLE</ref>()</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><ref refid="_control_tool_bar_8cpp_1a20dff99539b6fbb2e3cfcb6e9e51d4ae" kindref="member">IMPLEMENT_CLASS</ref>(<ref refid="class_lyrics" kindref="compound">Lyrics</ref>,<sp/>wxPanel)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="class_lyrics_1a48e44b9bfff5a386a368f80e5734aca1" refkind="member"><highlight class="normal"><ref refid="class_lyrics" kindref="compound">Lyrics</ref>::<ref refid="class_lyrics" kindref="compound">Lyrics</ref>(wxWindow*<sp/>parent,<sp/>wxWindowID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref><sp/>wxPoint&amp;<sp/>pos<sp/></highlight><highlight class="comment">/*=<sp/>wxDefaultPosition*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref><sp/>wxSize&amp;<sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref><sp/></highlight><highlight class="comment">/*=<sp/>wxDefaultSize*/</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/>wxPanel(parent,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>pos,<sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref>),</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/>mWidth(<ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref>.<ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>),<sp/>mHeight(<ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref>.y)</highlight></codeline>
<codeline lineno="88"><highlight class="normal">{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/>mKaraokeHeight<sp/>=<sp/>mHeight;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/>mLyricsStyle<sp/>=<sp/>kBouncingBallLyrics;<sp/></highlight><highlight class="comment">//<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/>mKaraokeFontSize<sp/>=<sp/>this-&gt;GetDefaultFontSize();<sp/></highlight><highlight class="comment">//<sp/>Call<sp/>only<sp/>after<sp/>mLyricsStyle<sp/>is<sp/>set.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/>this-&gt;SetBackgroundColour(*wxWHITE);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/>mHighlightTextCtrl<sp/>=</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_audacity_8h_1a5bfa31d993e8d629ec6ebdeaa41b5955" kindref="member">safenew</ref><sp/><ref refid="class_highlight_text_ctrl_1a752c52ff4032145a0a9c22ef5b66f3ed" kindref="member">HighlightTextCtrl</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>-1,<sp/></highlight><highlight class="comment">//<sp/>wxWindow*<sp/>parent,<sp/>wxWindowID<sp/>id,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="comment">//<sp/>const<sp/>wxString&amp;<sp/>value<sp/>=<sp/>wxT(&quot;&quot;),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxPoint(0,<sp/>0),<sp/></highlight><highlight class="comment">//<sp/>const<sp/>wxPoint&amp;<sp/>pos<sp/>=<sp/>wxDefaultPosition,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref>);<sp/></highlight><highlight class="comment">//<sp/>const<sp/>wxSize&amp;<sp/>size<sp/>=<sp/>wxDefaultSize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/>this-&gt;SetHighlightFont();</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/>mHighlightTextCtrl-&gt;Show(mLyricsStyle<sp/>==<sp/>kHighlightLyrics);<sp/></highlight><highlight class="comment">//<sp/>test,<sp/>in<sp/>case<sp/>we<sp/>conditionalize<sp/>the<sp/>default,<sp/>above</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/>mT<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/>Clear();</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/>Finish(0.0);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifdef<sp/>__WXMAC__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxSizeEvent<sp/>dummyEvent;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>OnSize(dummyEvent);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="class_lyrics_1a207ab80e935a295c59a5c4c2c4f36ec3" refkind="member"><highlight class="normal"><ref refid="class_lyrics_1a207ab80e935a295c59a5c4c2c4f36ec3" kindref="member">Lyrics::~Lyrics</ref>()</highlight></codeline>
<codeline lineno="116"><highlight class="normal">{</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="_lyrics_8cpp_1a1cc2b7d1a58127d4b8dd8e100817cf6a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>I_FIRST_REAL_SYLLABLE<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="class_lyrics_1a73c832028b80cb8a68d42a82a59b94ba" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_lyrics_1a73c832028b80cb8a68d42a82a59b94ba" kindref="member">Lyrics::Clear</ref>()</highlight></codeline>
<codeline lineno="122"><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/>mSyllables.Clear();</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/>mText<sp/>=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>two<sp/>dummy<sp/>syllables<sp/>at<sp/>the<sp/>beginning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/>mSyllables.Add(<ref refid="struct_syllable" kindref="compound">Syllable</ref>());</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/>mSyllables[0].t<sp/>=<sp/>-2.0;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/>mSyllables.Add(<ref refid="struct_syllable" kindref="compound">Syllable</ref>());</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/>mSyllables[1].t<sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/>mHighlightTextCtrl-&gt;Clear();</highlight></codeline>
<codeline lineno="133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="class_lyrics_1aba719df567f4ae9934a85c5e7881f654" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_lyrics_1aba719df567f4ae9934a85c5e7881f654" kindref="member">Lyrics::AddLabels</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_label_track" kindref="compound">LabelTrack</ref><sp/>*pLT)</highlight></codeline>
<codeline lineno="136"><highlight class="normal">{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>numLabels<sp/>=<sp/>pLT-&gt;<ref refid="class_label_track_1a94ca622c101401002bd01fc47c464d1f" kindref="member">GetNumLabels</ref>();</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>highlightText;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ii<sp/>=<sp/>0;<sp/>ii<sp/>&lt;<sp/>numLabels;<sp/>++ii)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_label_struct" kindref="compound">LabelStruct</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pLabel<sp/>=<sp/>pLT-&gt;<ref refid="class_label_track_1a03a362d6ca8cefb4dc964c787509e779" kindref="member">GetLabel</ref>(ii);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Add(pLabel-&gt;<ref refid="class_label_struct_1a5b45743875b4220d8173e34bf9b0f54b" kindref="member">getT0</ref>(),<sp/>pLabel-&gt;<ref refid="class_label_struct_1ab3b60ea3a2f089605a60277c1d7ecab3" kindref="member">title</ref>,<sp/>highlightText);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/>mHighlightTextCtrl-&gt;AppendText(highlightText);</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Lyrics::Add(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;syllable,<sp/>wxString<sp/>&amp;highlightText)</highlight></codeline>
<codeline lineno="147"><highlight class="normal">{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>mSyllables.GetCount();</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_syllable" kindref="compound">Syllable</ref><sp/>&amp;prevSyllable<sp/>=<sp/>mSyllables[i<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prevSyllable.<ref refid="struct_syllable_1a8bda2fd870861df184ec61fd0d5c4f24" kindref="member">t</ref><sp/>==<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>)<sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can&apos;t<sp/>have<sp/>two<sp/>syllables<sp/>with<sp/>the<sp/>same<sp/>time,<sp/>so<sp/>append</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>to<sp/>the<sp/>end<sp/>of<sp/>the<sp/>previous<sp/>one<sp/>if<sp/>they&apos;re<sp/>at<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>same<sp/>time.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prevSyllable.<ref refid="struct_syllable_1a59be29e552e2652ec239635fee387ba7" kindref="member">text</ref><sp/>+=<sp/>syllable;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prevSyllable.<ref refid="struct_syllable_1a7a39786f83b0ace0db6d80f9ee7c7f61" kindref="member">textWithSpace</ref><sp/>+=<sp/>syllable;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prevSyllable.<ref refid="struct_syllable_1acb38e4d950a9a8a2b0f726806bfa6702" kindref="member">char1</ref><sp/>+=<sp/>syllable.Length();</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/>mSyllables.Add(<ref refid="struct_syllable" kindref="compound">Syllable</ref>());</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_syllable" kindref="compound">Syllable</ref><sp/>&amp;thisSyllable<sp/>=<sp/>mSyllables[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/>thisSyllable.<ref refid="struct_syllable_1a8bda2fd870861df184ec61fd0d5c4f24" kindref="member">t</ref><sp/>=<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/>thisSyllable.<ref refid="struct_syllable_1a59be29e552e2652ec239635fee387ba7" kindref="member">text</ref><sp/>=<sp/>syllable;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/>thisSyllable.<ref refid="struct_syllable_1adc9a564a55ae8b2b3ca6dbffeef8d7db" kindref="member">char0</ref><sp/>=<sp/>mText.Length();</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Put<sp/>a<sp/>space<sp/>between<sp/>syllables<sp/>unless<sp/>the<sp/>previous<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ended<sp/>in<sp/>a<sp/>hyphen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mSyllables[i-1].text.Length()<sp/>&gt;<sp/>0<sp/>&amp;&amp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mSyllables[i<sp/>-<sp/>1].text.Right(1)<sp/>!=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>thisSyllable.<ref refid="struct_syllable_1a7a39786f83b0ace0db6d80f9ee7c7f61" kindref="member">textWithSpace</ref><sp/>=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>syllable;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>thisSyllable.<ref refid="struct_syllable_1a7a39786f83b0ace0db6d80f9ee7c7f61" kindref="member">textWithSpace</ref><sp/>=<sp/>syllable;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/>mText<sp/>+=<sp/>thisSyllable.<ref refid="struct_syllable_1a7a39786f83b0ace0db6d80f9ee7c7f61" kindref="member">textWithSpace</ref>;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/>thisSyllable.<ref refid="struct_syllable_1acb38e4d950a9a8a2b0f726806bfa6702" kindref="member">char1</ref><sp/>=<sp/>mText.Length();</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nTextLen<sp/>=<sp/>thisSyllable.<ref refid="struct_syllable_1a7a39786f83b0ace0db6d80f9ee7c7f61" kindref="member">textWithSpace</ref>.Length();</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((nTextLen<sp/>&gt;<sp/>0)<sp/>&amp;&amp;<sp/>(thisSyllable.<ref refid="struct_syllable_1a7a39786f83b0ace0db6d80f9ee7c7f61" kindref="member">textWithSpace</ref>.Right(1)<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>highlightText<sp/>+=<sp/>(thisSyllable.<ref refid="struct_syllable_1a7a39786f83b0ace0db6d80f9ee7c7f61" kindref="member">textWithSpace</ref>.Left(nTextLen<sp/>-<sp/>1)<sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>highlightText<sp/>+=<sp/>thisSyllable.<ref refid="struct_syllable_1a7a39786f83b0ace0db6d80f9ee7c7f61" kindref="member">textWithSpace</ref>;</highlight></codeline>
<codeline lineno="188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190" refid="class_lyrics_1ae9b25288591a5834de1479e3c9e75e43" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_lyrics_1ae9b25288591a5834de1479e3c9e75e43" kindref="member">Lyrics::Finish</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>finalT)</highlight></codeline>
<codeline lineno="191"><highlight class="normal">{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>3<sp/>dummy<sp/>syllables<sp/>at<sp/>the<sp/>end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>mSyllables.GetCount();</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/>mSyllables.Add(<ref refid="struct_syllable" kindref="compound">Syllable</ref>());</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/>mSyllables[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].t<sp/>=<sp/>finalT<sp/>+<sp/>1.0;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/>mSyllables.Add(<ref refid="struct_syllable" kindref="compound">Syllable</ref>());</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/>mSyllables[i+1].t<sp/>=<sp/>finalT<sp/>+<sp/>2.0;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/>mSyllables.Add(<ref refid="struct_syllable" kindref="compound">Syllable</ref>());</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/>mSyllables[i+2].t<sp/>=<sp/>finalT<sp/>+<sp/>3.0;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Mark<sp/>measurements<sp/>as<sp/>invalid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/>mMeasurementsDone<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>only<sp/>for<sp/>drawn<sp/>text</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/>mCurrentSyllable<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/>mHighlightTextCtrl-&gt;ShowPosition(0);</highlight></codeline>
<codeline lineno="205"><highlight class="normal">}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Binary-search<sp/>for<sp/>the<sp/>syllable<sp/>syllable<sp/>whose<sp/>char0<sp/>&lt;=<sp/>startChar<sp/>&lt;=<sp/>char1.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208" refid="class_lyrics_1a8814f6dca2b713111c0da252fbeeca9b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_lyrics_1a8814f6dca2b713111c0da252fbeeca9b" kindref="member">Lyrics::FindSyllable</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>startChar)</highlight></codeline>
<codeline lineno="209"><highlight class="normal">{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="convtest_8m_1aec25a56c89da9b37e346ecc7a8fc68e5" kindref="member">i1</ref>,<sp/>i2;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/>i1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/>i2<sp/>=<sp/>mSyllables.GetCount();</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i2<sp/>&gt;<sp/>i1+1)<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pmid<sp/>=<sp/>(i1+i2)/2;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mSyllables[pmid].char0<sp/>&gt;<sp/>startChar)</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i2<sp/>=<sp/>pmid;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i1<sp/>=<sp/>pmid;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i1<sp/>&lt;<sp/>2)</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i1<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i1<sp/>&gt;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(mSyllables.GetCount())<sp/>-<sp/>3)</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i1<sp/>=<sp/>mSyllables.GetCount()<sp/>-<sp/>3;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="convtest_8m_1aec25a56c89da9b37e346ecc7a8fc68e5" kindref="member">i1</ref>;</highlight></codeline>
<codeline lineno="228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230" refid="class_lyrics_1af9478f7f21585e3dd492da747a6fad71" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_lyrics_1af9478f7f21585e3dd492da747a6fad71" kindref="member">Lyrics::SetLyricsStyle</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>LyricsStyle<sp/>newLyricsStyle)</highlight></codeline>
<codeline lineno="231"><highlight class="normal">{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mLyricsStyle<sp/>==<sp/>newLyricsStyle)</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/>mLyricsStyle<sp/>=<sp/>newLyricsStyle;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/>mHighlightTextCtrl-&gt;Show(mLyricsStyle<sp/>==<sp/>kHighlightLyrics);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/>wxSizeEvent<sp/>ignore;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/>this-&gt;OnSize(ignore);</highlight></codeline>
<codeline lineno="240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Lyrics::GetDefaultFontSize()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="244"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(mLyricsStyle<sp/>==<sp/>kBouncingBallLyrics)<sp/>?<sp/>48<sp/>:<sp/>10;</highlight></codeline>
<codeline lineno="246"><highlight class="normal">}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Lyrics::SetDrawnFont(wxDC<sp/>*dc)</highlight></codeline>
<codeline lineno="249"><highlight class="normal">{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/>dc-&gt;SetFont(wxFont(mKaraokeFontSize,<sp/>wxFONTFAMILY_SWISS,<sp/>wxFONTSTYLE_NORMAL,<sp/>wxFONTWEIGHT_NORMAL));</highlight></codeline>
<codeline lineno="251"><highlight class="normal">}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Lyrics::SetHighlightFont()<sp/></highlight><highlight class="comment">//<sp/>for<sp/>kHighlightLyrics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal">{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/>wxFont<sp/>newFont(mKaraokeFontSize,<sp/>wxFONTFAMILY_SWISS,<sp/>wxFONTSTYLE_NORMAL,<sp/>wxFONTWEIGHT_NORMAL);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/>mHighlightTextCtrl-&gt;SetDefaultStyle(wxTextAttr(wxNullColour,<sp/>wxNullColour,<sp/>newFont));</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/>mHighlightTextCtrl-&gt;SetStyle(0,<sp/>mHighlightTextCtrl-&gt;GetLastPosition(),</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxTextAttr(wxNullColour,<sp/>wxNullColour,<sp/>newFont));</highlight></codeline>
<codeline lineno="259"><highlight class="normal">}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Lyrics::Measure(wxDC<sp/>*dc)<sp/></highlight><highlight class="comment">//<sp/>only<sp/>for<sp/>drawn<sp/>text</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal">{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/>this-&gt;SetDrawnFont(dc);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width<sp/>=<sp/>0,<sp/>height<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kIndent<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref><sp/>=<sp/>2*kIndent;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;<sp/>i&lt;mSyllables.GetCount();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((i<sp/>&lt;<sp/><ref refid="_lyrics_8cpp_1a1cc2b7d1a58127d4b8dd8e100817cf6a" kindref="member">I_FIRST_REAL_SYLLABLE</ref>)<sp/>||<sp/></highlight><highlight class="comment">//<sp/>Clear()<sp/>starts<sp/>the<sp/>list<sp/>with<sp/>I_FIRST_REAL_SYLLABLE<sp/>dummies.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(i<sp/>&gt;=<sp/>mSyllables.GetCount()-3))<sp/></highlight><highlight class="comment">//<sp/>Finish()<sp/>ends<sp/>with<sp/>3<sp/>dummies.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc-&gt;GetTextExtent(wxT(</highlight><highlight class="stringliteral">&quot;DUMMY&quot;</highlight><highlight class="normal">),<sp/>&amp;width,<sp/>&amp;height);<sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>correct<sp/>height<sp/>even<sp/>if<sp/>we&apos;re<sp/>at<sp/>i=0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc-&gt;GetTextExtent(mSyllables[i].textWithSpace,<sp/>&amp;width,<sp/>&amp;height);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>some<sp/>space<sp/>between<sp/>words;<sp/>the<sp/>space<sp/>is<sp/>normally<sp/>small<sp/>but</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>when<sp/>there&apos;s<sp/>a<sp/>long<sp/>pause<sp/>relative<sp/>to<sp/>the<sp/>previous<sp/>word,<sp/>insert</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>extra<sp/>space.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>extraWidth;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;=<sp/><ref refid="_lyrics_8cpp_1a1cc2b7d1a58127d4b8dd8e100817cf6a" kindref="member">I_FIRST_REAL_SYLLABLE</ref><sp/>&amp;&amp;<sp/>i<sp/>&lt;<sp/>mSyllables.GetCount()-2)</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>deltaThis<sp/>=<sp/>mSyllables[i+1].t<sp/>-<sp/>mSyllables[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].t;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>deltaPrev<sp/>=<sp/>mSyllables[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].t<sp/>-<sp/>mSyllables[i-1].t;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ratio;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(deltaPrev<sp/>&gt;<sp/>0.0)</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ratio<sp/>=<sp/>deltaThis<sp/>/<sp/>deltaPrev;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ratio<sp/>=<sp/>deltaThis;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ratio<sp/>&gt;<sp/>2.0)</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>extraWidth<sp/>=<sp/>15<sp/>+<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)(15.0<sp/>*<sp/>ratio);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>extraWidth<sp/>=<sp/>15;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>extraWidth<sp/>=<sp/>20;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mSyllables[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].width<sp/>=<sp/>width<sp/>+<sp/>extraWidth;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mSyllables[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].leftX<sp/>=<sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mSyllables[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].x<sp/>=<sp/>x<sp/>+<sp/>width/2;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>+=<sp/>mSyllables[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].width;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/>mTextHeight<sp/>=<sp/>height;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/>mMeasurementsDone<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="313"><highlight class="normal">}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Binary-search<sp/>for<sp/>the<sp/>syllable<sp/>with<sp/>the<sp/>largest<sp/>time<sp/>not<sp/>greater<sp/>than<sp/>t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_lyrics_1a8814f6dca2b713111c0da252fbeeca9b" kindref="member">Lyrics::FindSyllable</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>)</highlight></codeline>
<codeline lineno="317"><highlight class="normal">{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="convtest_8m_1aec25a56c89da9b37e346ecc7a8fc68e5" kindref="member">i1</ref>,<sp/>i2;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/>i1<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/>i2<sp/>=<sp/>mSyllables.GetCount();</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i2<sp/>&gt;<sp/>i1+1)<sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pmid<sp/>=<sp/>(i1+i2)/2;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mSyllables[pmid].t<sp/>&gt;<sp/>t)</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i2<sp/>=<sp/>pmid;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i1<sp/>=<sp/>pmid;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i1<sp/>&lt;<sp/>2)</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i1<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i1<sp/>&gt;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(mSyllables.GetCount())<sp/>-<sp/>3)</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i1<sp/>=<sp/>mSyllables.GetCount()<sp/>-<sp/>3;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="convtest_8m_1aec25a56c89da9b37e346ecc7a8fc68e5" kindref="member">i1</ref>;</highlight></codeline>
<codeline lineno="336"><highlight class="normal">}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Bouncing<sp/>Ball:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Given<sp/>the<sp/>current<sp/>time<sp/>t,<sp/>returns<sp/>the<sp/>x/y<sp/>position<sp/>of<sp/>the<sp/>scrolling</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="comment">//<sp/>karaoke<sp/>display.<sp/><sp/>For<sp/>some<sp/>syllable<sp/>i,<sp/>when<sp/>t==mSyllables[i].t,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="comment">//<sp/>it<sp/>will<sp/>return<sp/>mSyllables[i].x<sp/>for<sp/>outX<sp/>and<sp/>0<sp/>for<sp/>outY.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="comment">//<sp/>In-between<sp/>words,<sp/>outX<sp/>is<sp/>interpolated<sp/>using<sp/>smooth<sp/>acceleration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="comment">//<sp/>between<sp/>the<sp/>two<sp/>neighboring<sp/>words,<sp/>and<sp/>y<sp/>is<sp/>a<sp/>positive<sp/>number<sp/>indicating</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>bouncing<sp/>ball<sp/>height</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Lyrics::GetKaraokePosition(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>,</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*outX,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*outY)</highlight></codeline>
<codeline lineno="347"><highlight class="normal">{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/>*outX<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/>*outY<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref><sp/>&lt;<sp/>mSyllables[<ref refid="_lyrics_8cpp_1a1cc2b7d1a58127d4b8dd8e100817cf6a" kindref="member">I_FIRST_REAL_SYLLABLE</ref>].<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref><sp/>||<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref><sp/>&gt;<sp/>mSyllables[mSyllables.GetCount()-3].t)</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i0,<sp/><ref refid="convtest_8m_1aec25a56c89da9b37e346ecc7a8fc68e5" kindref="member">i1</ref>,<sp/>i2,<sp/>i3;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x0,<sp/>x1,<sp/>x2,<sp/>x3;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0,<sp/>t1,<sp/>t2,<sp/>t3;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/>i1<sp/>=<sp/>FindSyllable(<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/>i2<sp/>=<sp/>i1<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Because<sp/>we&apos;ve<sp/>padded<sp/>the<sp/>syllables<sp/>with<sp/>two<sp/>dummies<sp/>at<sp/>the<sp/>beginning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>end,<sp/>we<sp/>know<sp/>that<sp/>i0...i3<sp/>will<sp/>always<sp/>exist.<sp/><sp/>Also,<sp/>we&apos;ve<sp/>made</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sure<sp/>that<sp/>we<sp/>don&apos;t<sp/>ever<sp/>have<sp/>two<sp/>of<sp/>the<sp/>same<sp/>time,<sp/>so<sp/>t2&gt;t1<sp/>strictly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>time:<sp/><sp/>t0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pos:<sp/><sp/><sp/>x0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>index:<sp/>i0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>vel:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vel1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vel2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/>i0<sp/>=<sp/>i1<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/>i3<sp/>=<sp/>i2<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/>x0<sp/>=<sp/>mSyllables[i0].x;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/>x1<sp/>=<sp/>mSyllables[<ref refid="convtest_8m_1aec25a56c89da9b37e346ecc7a8fc68e5" kindref="member">i1</ref>].x;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/>x2<sp/>=<sp/>mSyllables[i2].x;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/>x3<sp/>=<sp/>mSyllables[i3].x;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/>t0<sp/>=<sp/>mSyllables[i0].t;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/>t1<sp/>=<sp/>mSyllables[<ref refid="convtest_8m_1aec25a56c89da9b37e346ecc7a8fc68e5" kindref="member">i1</ref>].t;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/>t2<sp/>=<sp/>mSyllables[i2].t;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/>t3<sp/>=<sp/>mSyllables[i3].t;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>linear_vel0<sp/>=<sp/>(x1<sp/>-<sp/>x0)<sp/>/<sp/>(t1<sp/>-<sp/>t0);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>linear_vel1<sp/>=<sp/>(x2<sp/>-<sp/>x1)<sp/>/<sp/>(t2<sp/>-<sp/>t1);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>linear_vel2<sp/>=<sp/>(x3<sp/>-<sp/>x2)<sp/>/<sp/>(t3<sp/>-<sp/>t2);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>average<sp/>velocities</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v1<sp/>=<sp/>(linear_vel0<sp/>+<sp/>linear_vel1)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v2<sp/>=<sp/>(linear_vel1<sp/>+<sp/>linear_vel2)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Solve<sp/>a<sp/>cubic<sp/>equation<sp/>f(t)<sp/>=<sp/>at^3<sp/>+<sp/>bt^2<sp/>+<sp/>ct<sp/>+<sp/>d</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>gives<sp/>the<sp/>position<sp/>x<sp/>as<sp/>a<sp/>function<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(t<sp/>-<sp/>t1),<sp/>by<sp/>constraining<sp/>f(0),<sp/>f&apos;(0),<sp/>f(t2-t1),<sp/>f&apos;(t2-t1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>delta_t<sp/>=<sp/>t2<sp/>-<sp/>t1;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>delta_x<sp/>=<sp/>x2<sp/>-<sp/>x1;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/>v1<sp/>*=<sp/>delta_t;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/>v2<sp/>*=<sp/>delta_t;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref><sp/>=<sp/>v1<sp/>+<sp/>v2<sp/>-<sp/>2*delta_x;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref><sp/>=<sp/>3*delta_x<sp/>-<sp/>2*v1<sp/>-<sp/>v2;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref><sp/>=<sp/>v1;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1a2530554172d8629149ec56816eeaa947" kindref="member">d</ref><sp/>=<sp/>x1;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref><sp/>=<sp/>(<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref><sp/>-<sp/>t1)<sp/>/<sp/>(t2<sp/>-<sp/>t1);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xx<sp/>=<sp/>a*<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>*<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>*<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref><sp/>+<sp/>b*<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>*<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref><sp/>+<sp/>c*<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref><sp/>+<sp/><ref refid="poly-fir_8h_1a2530554172d8629149ec56816eeaa947" kindref="member">d</ref>;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Unfortunately<sp/>sometimes<sp/>our<sp/>cubic<sp/>goes<sp/>backwards.<sp/><sp/>This<sp/>is<sp/>a<sp/>quick</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>hack<sp/>to<sp/>stop<sp/>that<sp/>from<sp/>happening.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xx<sp/>&lt;<sp/>x1)</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xx<sp/>=<sp/>x1;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/>*outX<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)xx;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>y<sp/>position<sp/>is<sp/>a<sp/>simple<sp/>cosine<sp/>curve;<sp/>the<sp/>max<sp/>height<sp/>is<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>function<sp/>of<sp/>the<sp/>time.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>height<sp/>=<sp/>t2<sp/>-<sp/>t1<sp/>&gt;<sp/>4.0?<sp/>1.0:<sp/>sqrt((t2-t1)/4.0);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/>*outY<sp/>=<sp/>height<sp/>*<sp/><ref refid="pffft_8c_1a28642ecbd9d1e77ab5a140a460f47d83" kindref="member">sin</ref>(<ref refid="mathematics_8h_1ae71449b1cc6e6250b91f539153a7a0d3" kindref="member">M_PI</ref><sp/>*<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>);</highlight></codeline>
<codeline lineno="418"><highlight class="normal">}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420" refid="class_lyrics_1a1a3f7ded50fbbbf5476ba13ff50bba21" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_lyrics_1a1a3f7ded50fbbbf5476ba13ff50bba21" kindref="member">Lyrics::Update</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>)</highlight></codeline>
<codeline lineno="421"><highlight class="normal">{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t<sp/>&lt;<sp/>0.0)</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TrackPanel::OnTimer<sp/>passes<sp/>gAudioIO-&gt;GetStreamTime(),<sp/>which<sp/>is<sp/>-1000000000<sp/>if<sp/>!IsStreamActive().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>that<sp/>case,<sp/>use<sp/>the<sp/>selection<sp/>start<sp/>time.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_audacity_project" kindref="compound">AudacityProject</ref>*<sp/>pProj<sp/>=<sp/><ref refid="_project_8cpp_1a897aa047b58617a9acc187fc882e3bb4" kindref="member">GetActiveProject</ref>();</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mT<sp/>=<sp/>pProj-&gt;<ref refid="class_audacity_project_1a9f4b0e77b655711fb8f2eb09bcba31f7" kindref="member">GetSel0</ref>();</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mT<sp/>=<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mLyricsStyle<sp/>==<sp/>kBouncingBallLyrics)</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxRect<sp/>karaokeRect(0,<sp/>0,<sp/>mWidth,<sp/>mKaraokeHeight);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;Refresh(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>&amp;karaokeRect);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>FindSyllable(mT);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>mCurrentSyllable)</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/>mCurrentSyllable<sp/>=<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mLyricsStyle<sp/>==<sp/>kHighlightLyrics)</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mHighlightTextCtrl-&gt;SetSelection(mSyllables[i].char0,<sp/>mSyllables[i].char1);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//v<sp/>No<sp/>trail<sp/>for<sp/>now.</highlight></codeline>
<codeline lineno="450"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(i<sp/>==<sp/>I_FIRST_REAL_SYLLABLE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>//<sp/>Reset<sp/>the<sp/>trail<sp/>to<sp/>zero.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>mHighlightTextCtrl-&gt;SetStyle(0,<sp/>mHighlightTextCtrl-&gt;GetLastPosition(),<sp/>wxTextAttr(wxNullColour,<sp/>*wxWHITE));</highlight></codeline>
<codeline lineno="454"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//mHighlightTextCtrl-&gt;SetStyle(mSyllables[i].char0,<sp/>mSyllables[i].char1,<sp/>wxTextAttr(wxNullColour,<sp/>*wxLIGHT_GREY));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//v<sp/>Too<sp/>much<sp/>flicker:<sp/><sp/><sp/>mHighlightTextCtrl-&gt;ShowPosition(mSyllables[i].char0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="458"><highlight class="normal">}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460" refid="class_lyrics_1a09eed60dd30269a498d2a0d9e95d860e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_lyrics_1a09eed60dd30269a498d2a0d9e95d860e" kindref="member">Lyrics::OnKeyEvent</ref>(wxKeyEvent<sp/>&amp;<sp/>event)</highlight></codeline>
<codeline lineno="461"><highlight class="normal">{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_audacity_project" kindref="compound">AudacityProject</ref><sp/>*project<sp/>=<sp/><ref refid="_project_8cpp_1a897aa047b58617a9acc187fc882e3bb4" kindref="member">GetActiveProject</ref>();</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/>project-&gt;<ref refid="class_audacity_project_1ab917fcaa9c189654c7bdf6b8eba992cf" kindref="member">GetCommandManager</ref>()-&gt;<ref refid="class_command_manager_1a53b3920c43591ee4af2918aab7be04a0" kindref="member">FilterKeyEvent</ref>(project,<sp/>event,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="464"><highlight class="normal">}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466" refid="class_lyrics_1a91f125733c01cd66fde1c22d66ba0e63" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_lyrics_1a91f125733c01cd66fde1c22d66ba0e63" kindref="member">Lyrics::OnPaint</ref>(wxPaintEvent<sp/>&amp;<sp/>WXUNUSED(event))</highlight></codeline>
<codeline lineno="467"><highlight class="normal">{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this-&gt;GetParent()-&gt;IsShown())</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mLyricsStyle<sp/>==<sp/>kBouncingBallLyrics)</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxPaintDC<sp/>dc(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mMeasurementsDone)</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Measure(&amp;dc);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#ifdef<sp/>__WXMAC__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Mac<sp/>OS<sp/>X<sp/>automatically<sp/>double-buffers<sp/>the<sp/>screen<sp/>for<sp/>you,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>our<sp/>bitmap<sp/>is<sp/>unneccessary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HandlePaint(dc);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxBitmap<sp/>bitmap(mWidth,<sp/>mKaraokeHeight);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxMemoryDC<sp/>memDC;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memDC.SelectObject(bitmap);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HandlePaint(memDC);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.Blit(0,<sp/>0,<sp/>mWidth,<sp/>mKaraokeHeight,<sp/>&amp;memDC,<sp/>0,<sp/>0,<sp/>wxCOPY,<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>(mLyricsStyle<sp/>==<sp/>kHighlightLyrics)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//v<sp/>causes<sp/>flicker<sp/>in<sp/>ported<sp/>version</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>this-&gt;SetHighlightFont();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="495"><highlight class="normal">}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497" refid="class_lyrics_1af10cbd70e788faf9ef457042f0833230" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_lyrics_1af10cbd70e788faf9ef457042f0833230" kindref="member">Lyrics::OnSize</ref>(wxSizeEvent<sp/>&amp;<sp/>WXUNUSED(event))</highlight></codeline>
<codeline lineno="498"><highlight class="normal">{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/>GetClientSize(&amp;mWidth,<sp/>&amp;mHeight);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/>mKaraokeHeight<sp/>=<sp/>mHeight;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/>mKaraokeFontSize<sp/>=</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)(this-&gt;GetDefaultFontSize()<sp/>*<sp/>mHeight)<sp/>/<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<ref refid="_lyrics_8h_1a89cffd09e97bd857098a456aa0510285" kindref="member">LYRICS_DEFAULT_HEIGHT</ref>);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Usually<sp/>don&apos;t<sp/>get<sp/>the<sp/>size<sp/>window<sp/>we<sp/>want,<sp/>usually<sp/>less<sp/>than</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LYRICS_DEFAULT_HEIGHT,<sp/>so<sp/>bump<sp/>it<sp/>a<sp/>little.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/>mKaraokeFontSize<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mLyricsStyle<sp/>==<sp/>kBouncingBallLyrics)</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mMeasurementsDone<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxPaintEvent<sp/>ignore;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;OnPaint(ignore);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>(mLyricsStyle<sp/>==<sp/>kHighlightLyrics)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mHighlightTextCtrl-&gt;SetSize(mWidth,<sp/>mKaraokeHeight);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;SetHighlightFont();</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/>this-&gt;Refresh(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="522"><highlight class="normal">}</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight><highlight class="comment">//v<sp/>Doesn&apos;t<sp/>seem<sp/>to<sp/>be<sp/>a<sp/>way<sp/>to<sp/>capture<sp/>a<sp/>selection<sp/>event<sp/>in<sp/>a<sp/>read-only<sp/>wxTextCtrl.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight><highlight class="comment">//void<sp/>Lyrics::OnHighlightTextCtrl(wxCommandEvent<sp/>&amp;<sp/>event)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>long<sp/>from,<sp/>to;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>mHighlightTextCtrl-&gt;GetSelection(&amp;from,<sp/>&amp;to);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>//<sp/>TODO:<sp/>Find<sp/>the<sp/>start<sp/>time<sp/>of<sp/>the<sp/>corresponding<sp/>syllable<sp/>and<sp/>set<sp/>playback<sp/>to<sp/>start<sp/>there.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533" refid="class_lyrics_1a9bd5601bef046acd6b6112cb7b5228ec" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_lyrics_1a9bd5601bef046acd6b6112cb7b5228ec" kindref="member">Lyrics::HandlePaint</ref>(wxDC<sp/>&amp;dc)</highlight></codeline>
<codeline lineno="534"><highlight class="normal">{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/>wxASSERT(mLyricsStyle<sp/>==<sp/>kBouncingBallLyrics);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/>dc.SetBrush(*wxWHITE_BRUSH);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/>dc.DrawRectangle(0,<sp/>0,<sp/>mWidth,<sp/>mKaraokeHeight);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/>this-&gt;HandlePaint_BouncingBall(dc);</highlight></codeline>
<codeline lineno="540"><highlight class="normal">}</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542" refid="class_lyrics_1a3c1b172f768750b915a0acfb74a2b74e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_lyrics_1a3c1b172f768750b915a0acfb74a2b74e" kindref="member">Lyrics::HandlePaint_BouncingBall</ref>(wxDC<sp/>&amp;dc)</highlight></codeline>
<codeline lineno="543"><highlight class="normal">{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ctr<sp/>=<sp/>mWidth<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/>GetKaraokePosition(mT,<sp/>&amp;x,<sp/>&amp;y);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/>dc.SetTextForeground(wxColour(238,<sp/>0,<sp/>102));</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>changedColor<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/>SetDrawnFont(&amp;dc);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/>wxCoord<sp/>yTextTop<sp/>=<sp/>mKaraokeHeight<sp/>-<sp/>mTextHeight<sp/>-<sp/>4;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;<sp/>i&lt;mSyllables.GetCount();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mSyllables[i].x<sp/>+<sp/>mSyllables[i].width<sp/>&lt;<sp/>(x<sp/>-<sp/>ctr))</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mSyllables[i].x<sp/>&gt;<sp/>x<sp/>+<sp/>ctr)</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!changedColor<sp/>&amp;&amp;<sp/>mSyllables[i].x<sp/>&gt;=<sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dc.SetTextForeground(*wxBLACK);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>changedColor<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/>text<sp/>=<sp/>mSyllables[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].text;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(text.Length()<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>text.Right(1)<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>text<sp/>=<sp/>text.Left(text.Length()<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dc.DrawText(text,</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mSyllables[i].leftX<sp/>+<sp/>ctr<sp/>-<sp/>x,</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yTextTop);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ballRadius<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)(mTextHeight<sp/>/<sp/>8.0);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bounceTop<sp/>=<sp/>ballRadius<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bounceHeight<sp/>=<sp/>yTextTop<sp/>-<sp/>bounceTop;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yi<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)(yTextTop<sp/>-<sp/>4<sp/>-<sp/>(y<sp/>*<sp/>bounceHeight));</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mT<sp/>&gt;=<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxRect<sp/>ball(ctr<sp/>-<sp/>ballRadius,<sp/>yi<sp/>-<sp/>ballRadius,<sp/>2<sp/>*<sp/>ballRadius,<sp/>2<sp/>*<sp/>ballRadius);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dc.SetBrush(wxBrush(wxColour(238,<sp/>0,<sp/>102),<sp/>wxSOLID));</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dc.DrawEllipse(ball);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="586"><highlight class="normal">}</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/src/Lyrics.cpp"/>
  </compounddef>
</doxygen>
