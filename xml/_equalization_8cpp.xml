<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_equalization_8cpp" kind="file" language="C++">
    <compoundname>Equalization.cpp</compoundname>
    <includes refid="_audacity_8h" local="yes">../Audacity.h</includes>
    <includes refid="_equalization_8h" local="yes">Equalization.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">vector</includes>
    <includes local="no">wx/bitmap.h</includes>
    <includes local="no">wx/button.h</includes>
    <includes local="no">wx/msgdlg.h</includes>
    <includes local="no">wx/brush.h</includes>
    <includes local="no">wx/dcmemory.h</includes>
    <includes local="no">wx/event.h</includes>
    <includes local="no">wx/image.h</includes>
    <includes local="no">wx/intl.h</includes>
    <includes local="no">wx/choice.h</includes>
    <includes local="no">wx/radiobut.h</includes>
    <includes local="no">wx/stattext.h</includes>
    <includes local="no">wx/string.h</includes>
    <includes local="no">wx/textdlg.h</includes>
    <includes local="no">wx/ffile.h</includes>
    <includes local="no">wx/filefn.h</includes>
    <includes local="no">wx/stdpaths.h</includes>
    <includes local="no">wx/settings.h</includes>
    <includes local="no">wx/checkbox.h</includes>
    <includes local="no">wx/tooltip.h</includes>
    <includes local="no">wx/utils.h</includes>
    <includes refid="_experimental_8h" local="yes">../Experimental.h</includes>
    <includes refid="_a_color_8h" local="yes">../AColor.h</includes>
    <includes refid="_shuttle_gui_8h" local="yes">../ShuttleGui.h</includes>
    <includes refid="_platform_compatibility_8h" local="yes">../PlatformCompatibility.h</includes>
    <includes refid="_file_names_8h" local="yes">../FileNames.h</includes>
    <includes refid="src_2_envelope_8h" local="yes">../Envelope.h</includes>
    <includes refid="_linking_html_window_8h" local="yes">../widgets/LinkingHtmlWindow.h</includes>
    <includes refid="_error_dialog_8h" local="yes">../widgets/ErrorDialog.h</includes>
    <includes refid="src_2fft_8h" local="yes">../FFT.h</includes>
    <includes refid="_prefs_8h" local="yes">../Prefs.h</includes>
    <includes refid="_project_8h" local="yes">../Project.h</includes>
    <includes refid="_wave_track_8h" local="yes">../WaveTrack.h</includes>
    <includes refid="_ruler_8h" local="yes">../widgets/Ruler.h</includes>
    <includes refid="_x_m_l_file_reader_8h" local="yes">../xml/XMLFileReader.h</includes>
    <includes refid="_theme_8h" local="yes">../Theme.h</includes>
    <includes refid="_all_theme_resources_8h" local="yes">../AllThemeResources.h</includes>
    <includes refid="float__cast_8h" local="yes">../float_cast.h</includes>
    <includes refid="_file_dialog_8h" local="yes">FileDialog.h</includes>
    <includes local="no">wx/arrimpl.cpp</includes>
    <incdepgraph>
      <node id="41754">
        <label>C:/_dev/OpenU/Audacity/audacity/src/effects/Equalization.cpp</label>
        <link refid="Equalization.cpp"/>
        <childnode refid="41755" relation="include">
        </childnode>
        <childnode refid="41756" relation="include">
        </childnode>
        <childnode refid="41790" relation="include">
        </childnode>
        <childnode refid="41811" relation="include">
        </childnode>
        <childnode refid="41769" relation="include">
        </childnode>
        <childnode refid="41759" relation="include">
        </childnode>
        <childnode refid="41812" relation="include">
        </childnode>
        <childnode refid="41813" relation="include">
        </childnode>
        <childnode refid="41808" relation="include">
        </childnode>
        <childnode refid="41803" relation="include">
        </childnode>
        <childnode refid="41814" relation="include">
        </childnode>
        <childnode refid="41763" relation="include">
        </childnode>
        <childnode refid="41770" relation="include">
        </childnode>
        <childnode refid="41771" relation="include">
        </childnode>
        <childnode refid="41765" relation="include">
        </childnode>
        <childnode refid="41768" relation="include">
        </childnode>
        <childnode refid="41815" relation="include">
        </childnode>
        <childnode refid="41801" relation="include">
        </childnode>
        <childnode refid="41816" relation="include">
        </childnode>
        <childnode refid="41817" relation="include">
        </childnode>
        <childnode refid="41818" relation="include">
        </childnode>
        <childnode refid="41772" relation="include">
        </childnode>
        <childnode refid="41819" relation="include">
        </childnode>
        <childnode refid="41797" relation="include">
        </childnode>
        <childnode refid="41757" relation="include">
        </childnode>
        <childnode refid="41820" relation="include">
        </childnode>
        <childnode refid="41822" relation="include">
        </childnode>
        <childnode refid="41825" relation="include">
        </childnode>
        <childnode refid="41826" relation="include">
        </childnode>
        <childnode refid="41827" relation="include">
        </childnode>
        <childnode refid="41830" relation="include">
        </childnode>
        <childnode refid="41834" relation="include">
        </childnode>
        <childnode refid="41835" relation="include">
        </childnode>
        <childnode refid="41836" relation="include">
        </childnode>
        <childnode refid="41838" relation="include">
        </childnode>
        <childnode refid="41872" relation="include">
        </childnode>
        <childnode refid="41806" relation="include">
        </childnode>
        <childnode refid="41878" relation="include">
        </childnode>
        <childnode refid="41880" relation="include">
        </childnode>
        <childnode refid="41882" relation="include">
        </childnode>
        <childnode refid="41884" relation="include">
        </childnode>
        <childnode refid="41885" relation="include">
        </childnode>
        <childnode refid="41888" relation="include">
        </childnode>
      </node>
      <node id="41850">
        <label>wx/dir.h</label>
      </node>
      <node id="41770">
        <label>wx/choice.h</label>
      </node>
      <node id="41816">
        <label>wx/filefn.h</label>
      </node>
      <node id="41876">
        <label>WaveClip.h</label>
        <link refid="_wave_clip_8h"/>
        <childnode refid="41755" relation="include">
        </childnode>
        <childnode refid="41875" relation="include">
        </childnode>
        <childnode refid="41794" relation="include">
        </childnode>
        <childnode refid="41857" relation="include">
        </childnode>
        <childnode refid="41798" relation="include">
        </childnode>
        <childnode refid="41757" relation="include">
        </childnode>
        <childnode refid="41810" relation="include">
        </childnode>
        <childnode refid="41874" relation="include">
        </childnode>
        <childnode refid="41793" relation="include">
        </childnode>
        <childnode refid="41840" relation="include">
        </childnode>
        <childnode refid="41812" relation="include">
        </childnode>
        <childnode refid="41811" relation="include">
        </childnode>
      </node>
      <node id="41831">
        <label>wx/html/htmlwin.h</label>
      </node>
      <node id="41830">
        <label>../widgets/LinkingHtmlWindow.h</label>
        <link refid="_linking_html_window_8h"/>
        <childnode refid="41761" relation="include">
        </childnode>
        <childnode refid="41831" relation="include">
        </childnode>
        <childnode refid="41832" relation="include">
        </childnode>
        <childnode refid="41833" relation="include">
        </childnode>
      </node>
      <node id="41842">
        <label>wx/hashmap.h</label>
      </node>
      <node id="41866">
        <label>toolbars/SelectionBarListener.h</label>
        <link refid="_selection_bar_listener_8h"/>
      </node>
      <node id="41796">
        <label>wx/gauge.h</label>
      </node>
      <node id="41803">
        <label>wx/event.h</label>
      </node>
      <node id="41801">
        <label>wx/ffile.h</label>
      </node>
      <node id="41809">
        <label>wx/font.h</label>
      </node>
      <node id="41864">
        <label>audacity/ModuleInterface.h</label>
        <link refid="_module_interface_8h"/>
        <childnode refid="41780" relation="include">
        </childnode>
        <childnode refid="41783" relation="include">
        </childnode>
        <childnode refid="41865" relation="include">
        </childnode>
      </node>
      <node id="41870">
        <label>wx/dcclient.h</label>
      </node>
      <node id="41786">
        <label>wx/cmdline.h</label>
      </node>
      <node id="41817">
        <label>wx/stdpaths.h</label>
      </node>
      <node id="41766">
        <label>wx/slider.h</label>
      </node>
      <node id="41835">
        <label>../FFT.h</label>
        <link refid="src_2fft_8h"/>
        <childnode refid="41758" relation="include">
        </childnode>
        <childnode refid="41789" relation="include">
        </childnode>
        <childnode refid="41757" relation="include">
        </childnode>
      </node>
      <node id="41782">
        <label>audacity/EffectInterface.h</label>
        <link refid="_effect_interface_8h"/>
        <childnode refid="41780" relation="include">
        </childnode>
        <childnode refid="41783" relation="include">
        </childnode>
        <childnode refid="41779" relation="include">
        </childnode>
        <childnode refid="41784" relation="include">
        </childnode>
        <childnode refid="41761" relation="include">
        </childnode>
      </node>
      <node id="41756">
        <label>Equalization.h</label>
        <link refid="_equalization_8h"/>
        <childnode refid="41757" relation="include">
        </childnode>
        <childnode refid="41759" relation="include">
        </childnode>
        <childnode refid="41760" relation="include">
        </childnode>
        <childnode refid="41761" relation="include">
        </childnode>
        <childnode refid="41762" relation="include">
        </childnode>
        <childnode refid="41763" relation="include">
        </childnode>
        <childnode refid="41764" relation="include">
        </childnode>
        <childnode refid="41765" relation="include">
        </childnode>
        <childnode refid="41766" relation="include">
        </childnode>
        <childnode refid="41767" relation="include">
        </childnode>
        <childnode refid="41768" relation="include">
        </childnode>
        <childnode refid="41769" relation="include">
        </childnode>
        <childnode refid="41770" relation="include">
        </childnode>
        <childnode refid="41771" relation="include">
        </childnode>
        <childnode refid="41772" relation="include">
        </childnode>
        <childnode refid="41773" relation="include">
        </childnode>
        <childnode refid="41798" relation="include">
        </childnode>
        <childnode refid="41802" relation="include">
        </childnode>
        <childnode refid="41806" relation="include">
        </childnode>
        <childnode refid="41810" relation="include">
        </childnode>
      </node>
      <node id="41879">
        <label>expat.h</label>
      </node>
      <node id="41792">
        <label>../Internat.h</label>
        <link refid="_internat_8h"/>
        <childnode refid="41781" relation="include">
        </childnode>
        <childnode refid="41768" relation="include">
        </childnode>
        <childnode refid="41793" relation="include">
        </childnode>
      </node>
      <node id="41798">
        <label>../xml/XMLTagHandler.h</label>
        <link refid="_x_m_l_tag_handler_8h"/>
        <childnode refid="41755" relation="include">
        </childnode>
        <childnode refid="41768" relation="include">
        </childnode>
        <childnode refid="41799" relation="include">
        </childnode>
        <childnode refid="41800" relation="include">
        </childnode>
      </node>
      <node id="41828">
        <label>stdlib.h</label>
      </node>
      <node id="41844">
        <label>TrackPanelListener.h</label>
        <link refid="_track_panel_listener_8h"/>
      </node>
      <node id="41789">
        <label>wx/wxchar.h</label>
      </node>
      <node id="41814">
        <label>wx/image.h</label>
      </node>
      <node id="41821">
        <label>wx/pen.h</label>
      </node>
      <node id="41832">
        <label>wx/frame.h</label>
      </node>
      <node id="41857">
        <label>ondemand/ODTaskThread.h</label>
        <link refid="_o_d_task_thread_8h"/>
        <childnode refid="41858" relation="include">
        </childnode>
        <childnode refid="41755" relation="include">
        </childnode>
      </node>
      <node id="41779">
        <label>audacity/ConfigInterface.h</label>
        <link refid="_config_interface_8h"/>
        <childnode refid="41780" relation="include">
        </childnode>
      </node>
      <node id="41797">
        <label>wx/utils.h</label>
      </node>
      <node id="41795">
        <label>wx/evtloop.h</label>
      </node>
      <node id="41823">
        <label>WrappedType.h</label>
        <link refid="_wrapped_type_8h"/>
        <childnode refid="41755" relation="include">
        </childnode>
      </node>
      <node id="41757">
        <label>../Experimental.h</label>
        <link refid="_experimental_8h"/>
        <childnode refid="41758" relation="include">
        </childnode>
      </node>
      <node id="41855">
        <label>wx/timer.h</label>
      </node>
      <node id="41874">
        <label>wx/gdicmn.h</label>
      </node>
      <node id="41843">
        <label>ViewInfo.h</label>
        <link refid="_view_info_8h"/>
        <childnode refid="41811" relation="include">
        </childnode>
        <childnode refid="41788" relation="include">
        </childnode>
      </node>
      <node id="41791">
        <label>../Shuttle.h</label>
        <link refid="_shuttle_8h"/>
      </node>
      <node id="41787">
        <label>wx/fileconf.h</label>
      </node>
      <node id="41862">
        <label>map</label>
      </node>
      <node id="41883">
        <label>MacroMagic.h</label>
        <link refid="_macro_magic_8h"/>
        <childnode refid="41880" relation="include">
        </childnode>
      </node>
      <node id="41877">
        <label>WaveTrackLocation.h</label>
        <link refid="_wave_track_location_8h"/>
      </node>
      <node id="41865">
        <label>audacity/PluginInterface.h</label>
        <link refid="_plugin_interface_8h"/>
        <childnode refid="41780" relation="include">
        </childnode>
        <childnode refid="41779" relation="include">
        </childnode>
        <childnode refid="41782" relation="include">
        </childnode>
        <childnode refid="41783" relation="include">
        </childnode>
        <childnode refid="41863" relation="include">
        </childnode>
        <childnode refid="41864" relation="include">
        </childnode>
      </node>
      <node id="41824">
        <label>wx/scrolbar.h</label>
      </node>
      <node id="41807">
        <label>wx/dc.h</label>
      </node>
      <node id="41810">
        <label>../RealFFTf.h</label>
        <link refid="_real_f_f_tf_8h"/>
        <childnode refid="41757" relation="include">
        </childnode>
      </node>
      <node id="41834">
        <label>../widgets/ErrorDialog.h</label>
        <link refid="_error_dialog_8h"/>
        <childnode refid="41755" relation="include">
        </childnode>
        <childnode refid="41758" relation="include">
        </childnode>
        <childnode refid="41805" relation="include">
        </childnode>
      </node>
      <node id="41867">
        <label>toolbars/SpectralSelectionBarListener.h</label>
        <link refid="_spectral_selection_bar_listener_8h"/>
        <childnode refid="41755" relation="include">
        </childnode>
      </node>
      <node id="41765">
        <label>wx/stattext.h</label>
      </node>
      <node id="41854">
        <label>wx/socket.h</label>
      </node>
      <node id="41869">
        <label>wx/generic/dragimgg.h</label>
      </node>
      <node id="41882">
        <label>../AllThemeResources.h</label>
        <link refid="_all_theme_resources_8h"/>
        <childnode refid="41757" relation="include">
        </childnode>
        <childnode refid="41883" relation="include">
        </childnode>
      </node>
      <node id="41818">
        <label>wx/settings.h</label>
      </node>
      <node id="41783">
        <label>audacity/IdentInterface.h</label>
        <link refid="_ident_interface_8h"/>
        <childnode refid="41780" relation="include">
        </childnode>
      </node>
      <node id="41840">
        <label>wx/list.h</label>
      </node>
      <node id="41772">
        <label>wx/checkbox.h</label>
      </node>
      <node id="41847">
        <label>wx/menu.h</label>
      </node>
      <node id="41833">
        <label>HtmlWindow.h</label>
        <link refid="_html_window_8h"/>
        <childnode refid="41755" relation="include">
        </childnode>
        <childnode refid="41758" relation="include">
        </childnode>
        <childnode refid="41831" relation="include">
        </childnode>
      </node>
      <node id="41758">
        <label>wx/defs.h</label>
      </node>
      <node id="41805">
        <label>wx/window.h</label>
      </node>
      <node id="41771">
        <label>wx/radiobut.h</label>
      </node>
      <node id="41763">
        <label>wx/intl.h</label>
      </node>
      <node id="41819">
        <label>wx/tooltip.h</label>
      </node>
      <node id="41794">
        <label>../widgets/ProgressDialog.h</label>
        <link refid="_progress_dialog_8h"/>
        <childnode refid="41755" relation="include">
        </childnode>
        <childnode refid="41758" relation="include">
        </childnode>
        <childnode refid="41761" relation="include">
        </childnode>
        <childnode refid="41795" relation="include">
        </childnode>
        <childnode refid="41796" relation="include">
        </childnode>
        <childnode refid="41765" relation="include">
        </childnode>
        <childnode refid="41797" relation="include">
        </childnode>
      </node>
      <node id="41777">
        <label>wx/bmpbuttn.h</label>
      </node>
      <node id="41780">
        <label>audacity/Types.h</label>
        <link refid="include_2audacity_2_types_8h"/>
        <childnode refid="41768" relation="include">
        </childnode>
        <childnode refid="41781" relation="include">
        </childnode>
      </node>
      <node id="41861">
        <label>../PluginManager.h</label>
        <link refid="_plugin_manager_8h"/>
        <childnode refid="41758" relation="include">
        </childnode>
        <childnode refid="41762" relation="include">
        </childnode>
        <childnode refid="41787" relation="include">
        </childnode>
        <childnode refid="41768" relation="include">
        </childnode>
        <childnode refid="41862" relation="include">
        </childnode>
        <childnode refid="41782" relation="include">
        </childnode>
        <childnode refid="41863" relation="include">
        </childnode>
        <childnode refid="41864" relation="include">
        </childnode>
        <childnode refid="41865" relation="include">
        </childnode>
      </node>
      <node id="41761">
        <label>wx/dialog.h</label>
      </node>
      <node id="41764">
        <label>wx/listctrl.h</label>
      </node>
      <node id="41841">
        <label>wx/filename.h</label>
      </node>
      <node id="41859">
        <label>effects/EffectManager.h</label>
        <link refid="_effect_manager_8h"/>
        <childnode refid="41757" relation="include">
        </childnode>
        <childnode refid="41770" relation="include">
        </childnode>
        <childnode refid="41761" relation="include">
        </childnode>
        <childnode refid="41803" relation="include">
        </childnode>
        <childnode refid="41860" relation="include">
        </childnode>
        <childnode refid="41768" relation="include">
        </childnode>
        <childnode refid="41782" relation="include">
        </childnode>
        <childnode refid="41861" relation="include">
        </childnode>
        <childnode refid="41773" relation="include">
        </childnode>
      </node>
      <node id="41886">
        <label>wx/filectrl.h</label>
      </node>
      <node id="41881">
        <label>wx/colour.h</label>
      </node>
      <node id="41784">
        <label>audacity/EffectAutomationParameters.h</label>
        <link refid="_effect_automation_parameters_8h"/>
        <childnode refid="41785" relation="include">
        </childnode>
        <childnode refid="41786" relation="include">
        </childnode>
        <childnode refid="41787" relation="include">
        </childnode>
        <childnode refid="41763" relation="include">
        </childnode>
      </node>
      <node id="41836">
        <label>../Prefs.h</label>
        <link refid="_prefs_8h"/>
        <childnode refid="41755" relation="include">
        </childnode>
        <childnode refid="41837" relation="include">
        </childnode>
        <childnode refid="41787" relation="include">
        </childnode>
      </node>
      <node id="41813">
        <label>wx/brush.h</label>
      </node>
      <node id="41846">
        <label>commands/CommandManager.h</label>
        <link refid="_command_manager_8h"/>
        <childnode refid="41757" relation="include">
        </childnode>
        <childnode refid="41774" relation="include">
        </childnode>
        <childnode refid="41811" relation="include">
        </childnode>
        <childnode refid="41768" relation="include">
        </childnode>
        <childnode refid="41762" relation="include">
        </childnode>
        <childnode refid="41847" relation="include">
        </childnode>
        <childnode refid="41842" relation="include">
        </childnode>
        <childnode refid="41848" relation="include">
        </childnode>
        <childnode refid="41798" relation="include">
        </childnode>
        <childnode refid="41780" relation="include">
        </childnode>
      </node>
      <node id="41755">
        <label>../Audacity.h</label>
        <link refid="_audacity_8h"/>
      </node>
      <node id="41804">
        <label>wx/grid.h</label>
      </node>
      <node id="41811">
        <label>vector</label>
      </node>
      <node id="41773">
        <label>Effect.h</label>
        <link refid="src_2effects_2_effect_8h"/>
        <childnode refid="41755" relation="include">
        </childnode>
        <childnode refid="41774" relation="include">
        </childnode>
        <childnode refid="41776" relation="include">
        </childnode>
        <childnode refid="41777" relation="include">
        </childnode>
        <childnode refid="41762" relation="include">
        </childnode>
        <childnode refid="41763" relation="include">
        </childnode>
        <childnode refid="41768" relation="include">
        </childnode>
        <childnode refid="41778" relation="include">
        </childnode>
        <childnode refid="41779" relation="include">
        </childnode>
        <childnode refid="41782" relation="include">
        </childnode>
        <childnode refid="41757" relation="include">
        </childnode>
        <childnode refid="41788" relation="include">
        </childnode>
        <childnode refid="41791" relation="include">
        </childnode>
        <childnode refid="41792" relation="include">
        </childnode>
        <childnode refid="41794" relation="include">
        </childnode>
      </node>
      <node id="41887">
        <label>wx/filedlg.h</label>
      </node>
      <node id="41762">
        <label>wx/dynarray.h</label>
      </node>
      <node id="41838">
        <label>../Project.h</label>
        <link refid="_project_8h"/>
        <childnode refid="41755" relation="include">
        </childnode>
        <childnode refid="41757" relation="include">
        </childnode>
        <childnode refid="41839" relation="include">
        </childnode>
        <childnode refid="41843" relation="include">
        </childnode>
        <childnode refid="41844" relation="include">
        </childnode>
        <childnode refid="41845" relation="include">
        </childnode>
        <childnode refid="41846" relation="include">
        </childnode>
        <childnode refid="41859" relation="include">
        </childnode>
        <childnode refid="41798" relation="include">
        </childnode>
        <childnode refid="41866" relation="include">
        </childnode>
        <childnode refid="41867" relation="include">
        </childnode>
        <childnode refid="41758" relation="include">
        </childnode>
        <childnode refid="41803" relation="include">
        </childnode>
        <childnode refid="41853" relation="include">
        </childnode>
        <childnode refid="41868" relation="include">
        </childnode>
        <childnode refid="41869" relation="include">
        </childnode>
        <childnode refid="41832" relation="include">
        </childnode>
        <childnode refid="41763" relation="include">
        </childnode>
        <childnode refid="41870" relation="include">
        </childnode>
        <childnode refid="41871" relation="include">
        </childnode>
      </node>
      <node id="41825">
        <label>../PlatformCompatibility.h</label>
        <link refid="_platform_compatibility_8h"/>
        <childnode refid="41768" relation="include">
        </childnode>
      </node>
      <node id="41863">
        <label>audacity/ImporterInterface.h</label>
        <link refid="_importer_interface_8h"/>
        <childnode refid="41780" relation="include">
        </childnode>
        <childnode refid="41779" relation="include">
        </childnode>
        <childnode refid="41783" relation="include">
        </childnode>
      </node>
      <node id="41880">
        <label>../Theme.h</label>
        <link refid="_theme_8h"/>
        <childnode refid="41755" relation="include">
        </childnode>
        <childnode refid="41769" relation="include">
        </childnode>
        <childnode refid="41881" relation="include">
        </childnode>
        <childnode refid="41758" relation="include">
        </childnode>
        <childnode refid="41762" relation="include">
        </childnode>
        <childnode refid="41809" relation="include">
        </childnode>
        <childnode refid="41814" relation="include">
        </childnode>
      </node>
      <node id="41820">
        <label>../AColor.h</label>
        <link refid="_a_color_8h"/>
        <childnode refid="41813" relation="include">
        </childnode>
        <childnode refid="41821" relation="include">
        </childnode>
      </node>
      <node id="41768">
        <label>wx/string.h</label>
      </node>
      <node id="41848">
        <label>../AudacityApp.h</label>
        <link refid="_audacity_app_8h"/>
        <childnode refid="41755" relation="include">
        </childnode>
        <childnode refid="41849" relation="include">
        </childnode>
        <childnode refid="41786" relation="include">
        </childnode>
        <childnode refid="41850" relation="include">
        </childnode>
        <childnode refid="41803" relation="include">
        </childnode>
        <childnode refid="41851" relation="include">
        </childnode>
        <childnode refid="41763" relation="include">
        </childnode>
        <childnode refid="41852" relation="include">
        </childnode>
        <childnode refid="41853" relation="include">
        </childnode>
        <childnode refid="41854" relation="include">
        </childnode>
        <childnode refid="41855" relation="include">
        </childnode>
        <childnode refid="41856" relation="include">
        </childnode>
        <childnode refid="41857" relation="include">
        </childnode>
        <childnode refid="41757" relation="include">
        </childnode>
      </node>
      <node id="41860">
        <label>wx/listbox.h</label>
      </node>
      <node id="41812">
        <label>wx/msgdlg.h</label>
      </node>
      <node id="41827">
        <label>../Envelope.h</label>
        <link refid="src_2_envelope_8h"/>
        <childnode refid="41828" relation="include">
        </childnode>
        <childnode refid="41829" relation="include">
        </childnode>
        <childnode refid="41811" relation="include">
        </childnode>
        <childnode refid="41762" relation="include">
        </childnode>
        <childnode refid="41813" relation="include">
        </childnode>
        <childnode refid="41821" relation="include">
        </childnode>
        <childnode refid="41798" relation="include">
        </childnode>
        <childnode refid="41792" relation="include">
        </childnode>
      </node>
      <node id="41853">
        <label>wx/log.h</label>
      </node>
      <node id="41790">
        <label>math.h</label>
      </node>
      <node id="41839">
        <label>DirManager.h</label>
        <link refid="_dir_manager_8h"/>
        <childnode refid="41840" relation="include">
        </childnode>
        <childnode refid="41768" relation="include">
        </childnode>
        <childnode refid="41841" relation="include">
        </childnode>
        <childnode refid="41842" relation="include">
        </childnode>
        <childnode refid="41797" relation="include">
        </childnode>
        <childnode refid="41780" relation="include">
        </childnode>
        <childnode refid="41798" relation="include">
        </childnode>
      </node>
      <node id="41815">
        <label>wx/textdlg.h</label>
      </node>
      <node id="41788">
        <label>../SelectedRegion.h</label>
        <link refid="_selected_region_8h"/>
        <childnode refid="41755" relation="include">
        </childnode>
        <childnode refid="41757" relation="include">
        </childnode>
        <childnode refid="41758" relation="include">
        </childnode>
        <childnode refid="41789" relation="include">
        </childnode>
        <childnode refid="41790" relation="include">
        </childnode>
      </node>
      <node id="41781">
        <label>wx/arrstr.h</label>
      </node>
      <node id="41837">
        <label>wx/config.h</label>
      </node>
      <node id="41767">
        <label>wx/sizer.h</label>
      </node>
      <node id="41802">
        <label>../widgets/Grid.h</label>
        <link refid="_grid_8h"/>
        <childnode refid="41758" relation="include">
        </childnode>
        <childnode refid="41770" relation="include">
        </childnode>
        <childnode refid="41762" relation="include">
        </childnode>
        <childnode refid="41803" relation="include">
        </childnode>
        <childnode refid="41804" relation="include">
        </childnode>
        <childnode refid="41768" relation="include">
        </childnode>
        <childnode refid="41805" relation="include">
        </childnode>
      </node>
      <node id="41852">
        <label>wx/snglinst.h</label>
      </node>
      <node id="41884">
        <label>../float_cast.h</label>
        <link refid="float__cast_8h"/>
        <childnode refid="41755" relation="include">
        </childnode>
        <childnode refid="41790" relation="include">
        </childnode>
      </node>
      <node id="41873">
        <label>Track.h</label>
        <link refid="src_2track_8h"/>
        <childnode refid="41755" relation="include">
        </childnode>
        <childnode refid="41774" relation="include">
        </childnode>
        <childnode refid="41811" relation="include">
        </childnode>
        <childnode refid="41762" relation="include">
        </childnode>
        <childnode refid="41803" relation="include">
        </childnode>
        <childnode refid="41874" relation="include">
        </childnode>
        <childnode refid="41793" relation="include">
        </childnode>
        <childnode refid="41768" relation="include">
        </childnode>
        <childnode refid="41757" relation="include">
        </childnode>
        <childnode refid="41875" relation="include">
        </childnode>
        <childnode refid="41798" relation="include">
        </childnode>
      </node>
      <node id="41858">
        <label>wx/thread.h</label>
      </node>
      <node id="41868">
        <label>wx/dragimag.h</label>
      </node>
      <node id="41826">
        <label>../FileNames.h</label>
        <link refid="_file_names_8h"/>
        <childnode refid="41768" relation="include">
        </childnode>
        <childnode refid="41755" relation="include">
        </childnode>
      </node>
      <node id="41778">
        <label>wx/tglbtn.h</label>
      </node>
      <node id="41774">
        <label>../MemoryX.h</label>
        <link refid="_memory_x_8h"/>
        <childnode refid="41775" relation="include">
        </childnode>
      </node>
      <node id="41759">
        <label>wx/button.h</label>
      </node>
      <node id="41822">
        <label>../ShuttleGui.h</label>
        <link refid="_shuttle_gui_8h"/>
        <childnode refid="41755" relation="include">
        </childnode>
        <childnode refid="41774" relation="include">
        </childnode>
        <childnode refid="41804" relation="include">
        </childnode>
        <childnode refid="41767" relation="include">
        </childnode>
        <childnode refid="41768" relation="include">
        </childnode>
        <childnode refid="41823" relation="include">
        </childnode>
        <childnode refid="41824" relation="include">
        </childnode>
      </node>
      <node id="41856">
        <label>widgets/FileHistory.h</label>
        <link refid="_file_history_8h"/>
        <childnode refid="41758" relation="include">
        </childnode>
        <childnode refid="41770" relation="include">
        </childnode>
        <childnode refid="41762" relation="include">
        </childnode>
        <childnode refid="41803" relation="include">
        </childnode>
        <childnode refid="41804" relation="include">
        </childnode>
        <childnode refid="41768" relation="include">
        </childnode>
        <childnode refid="41805" relation="include">
        </childnode>
      </node>
      <node id="41776">
        <label>set</label>
      </node>
      <node id="41871">
        <label>Menus.h</label>
        <link refid="_menus_8h"/>
        <childnode refid="41757" relation="include">
        </childnode>
      </node>
      <node id="41849">
        <label>wx/app.h</label>
        <link refid="app_8h"/>
      </node>
      <node id="41793">
        <label>wx/longlong.h</label>
      </node>
      <node id="41760">
        <label>wx/panel.h</label>
      </node>
      <node id="41872">
        <label>../WaveTrack.h</label>
        <link refid="_wave_track_8h"/>
        <childnode refid="41873" relation="include">
        </childnode>
        <childnode refid="41875" relation="include">
        </childnode>
        <childnode refid="41876" relation="include">
        </childnode>
        <childnode refid="41757" relation="include">
        </childnode>
        <childnode refid="41794" relation="include">
        </childnode>
        <childnode refid="41811" relation="include">
        </childnode>
        <childnode refid="41874" relation="include">
        </childnode>
        <childnode refid="41793" relation="include">
        </childnode>
        <childnode refid="41858" relation="include">
        </childnode>
        <childnode refid="41877" relation="include">
        </childnode>
      </node>
      <node id="41885">
        <label>FileDialog.h</label>
        <link refid="_file_dialog_8h"/>
        <childnode refid="41758" relation="include">
        </childnode>
        <childnode refid="41886" relation="include">
        </childnode>
        <childnode refid="41887" relation="include">
        </childnode>
      </node>
      <node id="41769">
        <label>wx/bitmap.h</label>
      </node>
      <node id="41829">
        <label>algorithm</label>
      </node>
      <node id="41799">
        <label>stdio.h</label>
      </node>
      <node id="41875">
        <label>SampleFormat.h</label>
        <link refid="_sample_format_8h"/>
        <childnode refid="41755" relation="include">
        </childnode>
        <childnode refid="41758" relation="include">
        </childnode>
        <childnode refid="41780" relation="include">
        </childnode>
      </node>
      <node id="41785">
        <label>locale.h</label>
      </node>
      <node id="41851">
        <label>wx/docview.h</label>
      </node>
      <node id="41808">
        <label>wx/dcmemory.h</label>
      </node>
      <node id="41888">
        <label>wx/arrimpl.cpp</label>
      </node>
      <node id="41806">
        <label>../widgets/Ruler.h</label>
        <link refid="_ruler_8h"/>
        <childnode refid="41769" relation="include">
        </childnode>
        <childnode refid="41807" relation="include">
        </childnode>
        <childnode refid="41808" relation="include">
        </childnode>
        <childnode refid="41803" relation="include">
        </childnode>
        <childnode refid="41809" relation="include">
        </childnode>
        <childnode refid="41760" relation="include">
        </childnode>
        <childnode refid="41805" relation="include">
        </childnode>
        <childnode refid="41757" relation="include">
        </childnode>
      </node>
      <node id="41775">
        <label>memory</label>
      </node>
      <node id="41800">
        <label>XMLWriter.h</label>
        <link refid="_x_m_l_writer_8h"/>
        <childnode refid="41781" relation="include">
        </childnode>
        <childnode refid="41762" relation="include">
        </childnode>
        <childnode refid="41801" relation="include">
        </childnode>
      </node>
      <node id="41878">
        <label>../xml/XMLFileReader.h</label>
        <link refid="_x_m_l_file_reader_8h"/>
        <childnode refid="41755" relation="include">
        </childnode>
        <childnode refid="41811" relation="include">
        </childnode>
        <childnode refid="41879" relation="include">
        </childnode>
        <childnode refid="41798" relation="include">
        </childnode>
      </node>
      <node id="41845">
        <label>AudioIOListener.h</label>
        <link refid="_audio_i_o_listener_8h"/>
        <childnode refid="41768" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="_equalization_8cpp_1ae8267842038c7a32f5c84b202c8d1078" prot="public" static="no">
        <name>EQCURVES_VERSION</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/Equalization.cpp" line="144" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/effects/Equalization.cpp" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_equalization_8cpp_1a12aaeb8993c5880d76854c50eed444af" prot="public" static="no">
        <name>EQCURVES_REVISION</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/Equalization.cpp" line="145" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/effects/Equalization.cpp" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_equalization_8cpp_1a5a09d43668bf6dde077f6d66994a1924" prot="public" static="no">
        <name>UPDATE_ALL</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/Equalization.cpp" line="146" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/effects/Equalization.cpp" bodystart="146" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="_equalization_8cpp_1a6813be44df52c18b08debbebca7d09a8" prot="public" static="no">
        <name>@287</name>
        <enumvalue id="_equalization_8cpp_1a6813be44df52c18b08debbebca7d09a8a865e8f0678202cf761a01e00822a46b3" prot="public">
          <name>ID_Length</name>
          <initializer>= 10000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_equalization_8cpp_1a6813be44df52c18b08debbebca7d09a8a44294da3b88eb67ae53b40b0fdf731e3" prot="public">
          <name>ID_dBMax</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_equalization_8cpp_1a6813be44df52c18b08debbebca7d09a8afd50f9a85f9c0fb88de067a32ced5770" prot="public">
          <name>ID_dBMin</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_equalization_8cpp_1a6813be44df52c18b08debbebca7d09a8aca7b2d755da0797c0bde5ed9301bca70" prot="public">
          <name>ID_Clear</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_equalization_8cpp_1a6813be44df52c18b08debbebca7d09a8a4ad50a93b4d88734e3ed5d0c1b1b54b3" prot="public">
          <name>ID_Invert</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_equalization_8cpp_1a6813be44df52c18b08debbebca7d09a8a38c42b561d34c3591d595b1b31c5c26b" prot="public">
          <name>ID_Mode</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_equalization_8cpp_1a6813be44df52c18b08debbebca7d09a8acaf86695a7ac58759c70efaef597ddf9" prot="public">
          <name>ID_Draw</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_equalization_8cpp_1a6813be44df52c18b08debbebca7d09a8a29a2ac63cb4b8af03529a09714c74fad" prot="public">
          <name>ID_Graphic</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_equalization_8cpp_1a6813be44df52c18b08debbebca7d09a8a6644a2a240ed67dc4854400fd5cd1eb9" prot="public">
          <name>ID_Interp</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_equalization_8cpp_1a6813be44df52c18b08debbebca7d09a8a8d60d95e842d2313104dd0c678c6c156" prot="public">
          <name>ID_Linear</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_equalization_8cpp_1a6813be44df52c18b08debbebca7d09a8a6809b33964d31898a8fbcf15761e7708" prot="public">
          <name>ID_Grid</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_equalization_8cpp_1a6813be44df52c18b08debbebca7d09a8a0a13d84560debae75635aa710581b2d3" prot="public">
          <name>ID_Curve</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_equalization_8cpp_1a6813be44df52c18b08debbebca7d09a8ab2267510288e8de373c84b3d4d7ef637" prot="public">
          <name>ID_Manage</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_equalization_8cpp_1a6813be44df52c18b08debbebca7d09a8a205d9324ba15e225d56bc8ede59dd7a7" prot="public">
          <name>ID_Delete</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_equalization_8cpp_1a6813be44df52c18b08debbebca7d09a8a973bbe1ccd5c880428d852aa95597c1e" prot="public">
          <name>ID_Slider</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/Equalization.cpp" line="109" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/effects/Equalization.cpp" bodystart="108" bodyend="133"/>
      </memberdef>
      <memberdef kind="enum" id="_equalization_8cpp_1a671f746774a3e3e4b9315ee9fc7eaf3a" prot="public" static="no">
        <name>kInterpolations</name>
        <enumvalue id="_equalization_8cpp_1a671f746774a3e3e4b9315ee9fc7eaf3aaa46e4fdcc138a549e384640823b4b360" prot="public">
          <name>kBspline</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_equalization_8cpp_1a671f746774a3e3e4b9315ee9fc7eaf3aaa160b4c3dcdb22ac16fe192d1904a049" prot="public">
          <name>kCosine</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_equalization_8cpp_1a671f746774a3e3e4b9315ee9fc7eaf3aa49f7e2a4145afb40a6eba4ad063a2b01" prot="public">
          <name>kCubic</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_equalization_8cpp_1a671f746774a3e3e4b9315ee9fc7eaf3aad98ef34cc74602dd8b0ed0787d9b4fe8" prot="public">
          <name>kNumInterpolations</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_tone_gen_8cpp_1a671f746774a3e3e4b9315ee9fc7eaf3aac188c019178783e5be55110601309d7d" prot="public">
          <name>kLinear</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_tone_gen_8cpp_1a671f746774a3e3e4b9315ee9fc7eaf3aab3cdeeb0a68f089a01a04a855610ca49" prot="public">
          <name>kLogarithmic</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_tone_gen_8cpp_1a671f746774a3e3e4b9315ee9fc7eaf3aad98ef34cc74602dd8b0ed0787d9b4fe8" prot="public">
          <name>kNumInterpolations</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/Equalization.cpp" line="136" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/effects/Equalization.cpp" bodystart="135" bodyend="141"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_equalization_8cpp_1ad28075adc871243c650ec5739541da7a" prot="public" static="yes" mutable="no">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> wxString</type>
        <definition>const wxString kInterpStrings[kNumInterpolations]</definition>
        <argsstring>[kNumInterpolations]</argsstring>
        <name>kInterpStrings</name>
        <initializer>=
{
   
   <ref refid="_theme_8cpp_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(&quot;B-spline&quot;),
   XO(&quot;Cosine&quot;),

}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/Equalization.cpp" line="148" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/effects/Equalization.cpp" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_equalization_8cpp_1a97559b0778e001cb0e5e9e22adb9d3c9" prot="public" static="yes" mutable="no">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> double</type>
        <definition>const double kThirdOct[]</definition>
        <argsstring>[]</argsstring>
        <name>kThirdOct</name>
        <initializer>=
{
   20., 25., 31., 40., 50., 63., 80., 100., 125., 160., 200.,
   250., 315., 400., 500., 630., 800., 1000., 1250., 1600., 2000.,
   2500., 3150., 4000., 5000., 6300., 8000., 10000., 12500., 16000., 20000.,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/Equalization.cpp" line="156" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/effects/Equalization.cpp" bodystart="156" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_equalization_8cpp_1a6e92acea45b553e7085d017e1de6a0ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Param</definition>
        <argsstring>(FilterLength, int, XO(&quot;FilterLength&quot;), 4001, 21, 8191, 0)</argsstring>
        <name>Param</name>
        <param>
          <type>FilterLength</type>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        </param>
        <param>
          <type><ref refid="_theme_8cpp_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(&quot;FilterLength&quot;)</type>
        </param>
        <param>
          <type>4001</type>
        </param>
        <param>
          <type>21</type>
        </param>
        <param>
          <type>8191</type>
        </param>
        <param>
          <type>0</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/Equalization.cpp" line="166" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_equalization_8cpp_1a5ad215fbf578a9e7643e8334ed2b8faa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Param</definition>
        <argsstring>(CurveName, wxChar *, XO(&quot;CurveName&quot;), wxT(&quot;unnamed&quot;), wxT(&quot;&quot;), wxT(&quot;&quot;), wxT(&quot;&quot;))</argsstring>
        <name>Param</name>
        <param>
          <type>CurveName</type>
        </param>
        <param>
          <type>wxChar *</type>
        </param>
        <param>
          <type><ref refid="_theme_8cpp_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(&quot;CurveName&quot;)</type>
        </param>
        <param>
          <type>wxT(&quot;unnamed&quot;)</type>
        </param>
        <param>
          <type>wxT(&quot;&quot;)</type>
        </param>
        <param>
          <type>wxT(&quot;&quot;)</type>
        </param>
        <param>
          <type>wxT(&quot;&quot;)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/Equalization.cpp" line="167" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_equalization_8cpp_1a9c0f627236c04727bf628dc4493ca72f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Param</definition>
        <argsstring>(InterpLin, bool, XO(&quot;InterpolateLin&quot;), false, false, true, false)</argsstring>
        <name>Param</name>
        <param>
          <type>InterpLin</type>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        </param>
        <param>
          <type><ref refid="_theme_8cpp_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(&quot;InterpolateLin&quot;)</type>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1a65e9886d74aaee76545e83dd09011727" kindref="member">false</ref></type>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1a65e9886d74aaee76545e83dd09011727" kindref="member">false</ref></type>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7" kindref="member">true</ref></type>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1a65e9886d74aaee76545e83dd09011727" kindref="member">false</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/Equalization.cpp" line="168" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_equalization_8cpp_1a4254d953daace9e07b75c0ad744a5fd8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Param</definition>
        <argsstring>(InterpMeth, int, XO(&quot;InterpolationMethod&quot;), 0, 0, 0, 0)</argsstring>
        <name>Param</name>
        <param>
          <type>InterpMeth</type>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        </param>
        <param>
          <type><ref refid="_theme_8cpp_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(&quot;InterpolationMethod&quot;)</type>
        </param>
        <param>
          <type>0</type>
        </param>
        <param>
          <type>0</type>
        </param>
        <param>
          <type>0</type>
        </param>
        <param>
          <type>0</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/Equalization.cpp" line="169" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_equalization_8cpp_1a426e4b1b1fb6591c645237d7012de176" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Param</definition>
        <argsstring>(DrawMode, bool, wxT(&quot;&quot;), true, false, true, false)</argsstring>
        <name>Param</name>
        <param>
          <type>DrawMode</type>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        </param>
        <param>
          <type>wxT(&quot;&quot;)</type>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7" kindref="member">true</ref></type>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1a65e9886d74aaee76545e83dd09011727" kindref="member">false</ref></type>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7" kindref="member">true</ref></type>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1a65e9886d74aaee76545e83dd09011727" kindref="member">false</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/Equalization.cpp" line="170" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_equalization_8cpp_1a0a2cf2e933dd9808ae564eabc3e8561f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Param</definition>
        <argsstring>(DrawGrid, bool, wxT(&quot;&quot;), true, false, true, false)</argsstring>
        <name>Param</name>
        <param>
          <type>DrawGrid</type>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        </param>
        <param>
          <type>wxT(&quot;&quot;)</type>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7" kindref="member">true</ref></type>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1a65e9886d74aaee76545e83dd09011727" kindref="member">false</ref></type>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7" kindref="member">true</ref></type>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1a65e9886d74aaee76545e83dd09011727" kindref="member">false</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/Equalization.cpp" line="171" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_equalization_8cpp_1af9a1cff1ad3341c5be5d190e214e714b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Param</definition>
        <argsstring>(dBMin, float, wxT(&quot;&quot;),-30.0,-120.0,-10.0, 0)</argsstring>
        <name>Param</name>
        <param>
          <type>dBMin</type>
        </param>
        <param>
          <type>float</type>
        </param>
        <param>
          <type>wxT(&quot;&quot;)</type>
        </param>
        <param>
          <type>-30.</type>
          <declname>0</declname>
        </param>
        <param>
          <type>-120.</type>
          <declname>0</declname>
        </param>
        <param>
          <type>-10.</type>
          <declname>0</declname>
        </param>
        <param>
          <type>0</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/Equalization.cpp" line="172" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_equalization_8cpp_1abf13b30605744fb1dc17dec0fdf9b052" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Param</definition>
        <argsstring>(dBMax, float, wxT(&quot;&quot;), 30.0, 0.0, 60.0, 0)</argsstring>
        <name>Param</name>
        <param>
          <type>dBMax</type>
        </param>
        <param>
          <type>float</type>
        </param>
        <param>
          <type>wxT(&quot;&quot;)</type>
        </param>
        <param>
          <type>30.</type>
          <declname>0</declname>
        </param>
        <param>
          <type>0.</type>
          <declname>0</declname>
        </param>
        <param>
          <type>60.</type>
          <declname>0</declname>
        </param>
        <param>
          <type>0</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/Equalization.cpp" line="173" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_equalization_8cpp_1aba2263c3424d7897d4fcf09772295e1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>WX_DEFINE_OBJARRAY</definition>
        <argsstring>(EQPointArray)</argsstring>
        <name>WX_DEFINE_OBJARRAY</name>
        <param>
          <type>EQPointArray</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/Equalization.cpp" line="176" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_equalization_8cpp_1abd1cf3408071da87ddf659a1ff33adcc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>WX_DEFINE_OBJARRAY</definition>
        <argsstring>(EQCurveArray)</argsstring>
        <name>WX_DEFINE_OBJARRAY</name>
        <param>
          <type>EQCurveArray</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/Equalization.cpp" line="177" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_equalization_8cpp_1a3bad134df05c84f76c87f9188852e456" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>EVT_COMMAND_RANGE</definition>
        <argsstring>(ID_Slider, ID_Slider+NUMBER_OF_BANDS-1, wxEVT_COMMAND_SLIDER_UPDATED, EffectEqualization::OnSlider) EffectEqualization</argsstring>
        <name>EVT_COMMAND_RANGE</name>
        <param>
          <type><ref refid="_nyquist_8cpp_1a0efc1b13f14c790dd3d59de11e12bc6da973bbe1ccd5c880428d852aa95597c1e" kindref="member">ID_Slider</ref></type>
        </param>
        <param>
          <type><ref refid="_nyquist_8cpp_1a0efc1b13f14c790dd3d59de11e12bc6da973bbe1ccd5c880428d852aa95597c1e" kindref="member">ID_Slider</ref>+<ref refid="_equalization_8h_1acc848db7792c76f398f7a28e797369c3" kindref="member">NUMBER_OF_BANDS</ref>-</type>
          <declname>1</declname>
        </param>
        <param>
          <type>wxEVT_COMMAND_SLIDER_UPDATED</type>
        </param>
        <param>
          <type>EffectEqualization::OnSlider</type>
        </param>
        <briefdescription>
<para><hruler/>
 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/Equalization.cpp" line="189" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/effects/Equalization.cpp" bodystart="189" bodyend="289"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Implements EffectEqualiztaion, EqualizationDialog, <ref refid="class_equalization_panel" kindref="compound">EqualizationPanel</ref>, <ref refid="class_e_q_curve" kindref="compound">EQCurve</ref> and <ref refid="class_e_q_point" kindref="compound">EQPoint</ref>. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/>Audacity:<sp/>A<sp/>Digital<sp/>Audio<sp/>Editor</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/>EffectEqualization.cpp</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/>Mitch<sp/>Golden</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/><sp/>Vaughan<sp/>Johnson<sp/>(Preview)</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/><sp/>Martyn<sp/>Shaw<sp/>(FIR<sp/>filters,<sp/>response<sp/>curve,<sp/>graphic<sp/>EQ)</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight></codeline>
<codeline lineno="11"><highlight class="comment">*******************************************************************/</highlight><highlight class="comment">/****************************************************************/</highlight><highlight class="comment">/****************************************************************/</highlight><highlight class="comment">/****************************************************************/</highlight><highlight class="comment">/****************************************************************/</highlight><highlight class="comment">/*******************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Audacity.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_equalization_8h" kindref="compound">Equalization.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/bitmap.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/button.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/msgdlg.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/brush.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/button.h&gt;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>really<sp/>needed<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/dcmemory.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/event.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/image.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/intl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/choice.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/radiobut.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/stattext.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/textdlg.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/ffile.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/filefn.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/stdpaths.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/settings.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/checkbox.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/tooltip.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/utils.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Experimental.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../AColor.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../ShuttleGui.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../PlatformCompatibility.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../FileNames.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Envelope.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../widgets/LinkingHtmlWindow.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../widgets/ErrorDialog.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../FFT.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Prefs.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Project.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../WaveTrack.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../widgets/Ruler.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../xml/XMLFileReader.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Theme.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../AllThemeResources.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../float_cast.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_file_dialog_8h" kindref="compound">FileDialog.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_EQ_SSE_THREADED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_equalization48x_8h" kindref="compound">Equalization48x.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal">{</highlight></codeline>
<codeline lineno="110" refid="_equalization_8cpp_1a6813be44df52c18b08debbebca7d09a8a865e8f0678202cf761a01e00822a46b3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="_equalization_8cpp_1a6813be44df52c18b08debbebca7d09a8a865e8f0678202cf761a01e00822a46b3" kindref="member">ID_Length</ref><sp/>=<sp/>10000,</highlight></codeline>
<codeline lineno="111" refid="_equalization_8cpp_1a6813be44df52c18b08debbebca7d09a8a44294da3b88eb67ae53b40b0fdf731e3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="_equalization_8cpp_1a6813be44df52c18b08debbebca7d09a8a44294da3b88eb67ae53b40b0fdf731e3" kindref="member">ID_dBMax</ref>,</highlight></codeline>
<codeline lineno="112" refid="_equalization_8cpp_1a6813be44df52c18b08debbebca7d09a8afd50f9a85f9c0fb88de067a32ced5770" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="_equalization_8cpp_1a6813be44df52c18b08debbebca7d09a8afd50f9a85f9c0fb88de067a32ced5770" kindref="member">ID_dBMin</ref>,</highlight></codeline>
<codeline lineno="113" refid="_equalization_8cpp_1a6813be44df52c18b08debbebca7d09a8aca7b2d755da0797c0bde5ed9301bca70" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="_equalization_8cpp_1a6813be44df52c18b08debbebca7d09a8aca7b2d755da0797c0bde5ed9301bca70" kindref="member">ID_Clear</ref>,</highlight></codeline>
<codeline lineno="114" refid="_equalization_8cpp_1a6813be44df52c18b08debbebca7d09a8a4ad50a93b4d88734e3ed5d0c1b1b54b3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="_equalization_8cpp_1a6813be44df52c18b08debbebca7d09a8a4ad50a93b4d88734e3ed5d0c1b1b54b3" kindref="member">ID_Invert</ref>,</highlight></codeline>
<codeline lineno="115" refid="_equalization_8cpp_1a6813be44df52c18b08debbebca7d09a8a38c42b561d34c3591d595b1b31c5c26b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="_equalization_8cpp_1a6813be44df52c18b08debbebca7d09a8a38c42b561d34c3591d595b1b31c5c26b" kindref="member">ID_Mode</ref>,</highlight></codeline>
<codeline lineno="116" refid="_equalization_8cpp_1a6813be44df52c18b08debbebca7d09a8acaf86695a7ac58759c70efaef597ddf9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="_equalization_8cpp_1a6813be44df52c18b08debbebca7d09a8acaf86695a7ac58759c70efaef597ddf9" kindref="member">ID_Draw</ref>,</highlight></codeline>
<codeline lineno="117" refid="_equalization_8cpp_1a6813be44df52c18b08debbebca7d09a8a29a2ac63cb4b8af03529a09714c74fad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="_equalization_8cpp_1a6813be44df52c18b08debbebca7d09a8a29a2ac63cb4b8af03529a09714c74fad" kindref="member">ID_Graphic</ref>,</highlight></codeline>
<codeline lineno="118" refid="_equalization_8cpp_1a6813be44df52c18b08debbebca7d09a8a6644a2a240ed67dc4854400fd5cd1eb9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="_equalization_8cpp_1a6813be44df52c18b08debbebca7d09a8a6644a2a240ed67dc4854400fd5cd1eb9" kindref="member">ID_Interp</ref>,</highlight></codeline>
<codeline lineno="119" refid="_equalization_8cpp_1a6813be44df52c18b08debbebca7d09a8a8d60d95e842d2313104dd0c678c6c156" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="_equalization_8cpp_1a6813be44df52c18b08debbebca7d09a8a8d60d95e842d2313104dd0c678c6c156" kindref="member">ID_Linear</ref>,</highlight></codeline>
<codeline lineno="120" refid="_equalization_8cpp_1a6813be44df52c18b08debbebca7d09a8a6809b33964d31898a8fbcf15761e7708" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="_equalization_8cpp_1a6813be44df52c18b08debbebca7d09a8a6809b33964d31898a8fbcf15761e7708" kindref="member">ID_Grid</ref>,</highlight></codeline>
<codeline lineno="121" refid="_equalization_8cpp_1a6813be44df52c18b08debbebca7d09a8a0a13d84560debae75635aa710581b2d3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="_equalization_8cpp_1a6813be44df52c18b08debbebca7d09a8a0a13d84560debae75635aa710581b2d3" kindref="member">ID_Curve</ref>,</highlight></codeline>
<codeline lineno="122" refid="_equalization_8cpp_1a6813be44df52c18b08debbebca7d09a8ab2267510288e8de373c84b3d4d7ef637" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="_equalization_8cpp_1a6813be44df52c18b08debbebca7d09a8ab2267510288e8de373c84b3d4d7ef637" kindref="member">ID_Manage</ref>,</highlight></codeline>
<codeline lineno="123" refid="_equalization_8cpp_1a6813be44df52c18b08debbebca7d09a8a205d9324ba15e225d56bc8ede59dd7a7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="_equalization_8cpp_1a6813be44df52c18b08debbebca7d09a8a205d9324ba15e225d56bc8ede59dd7a7" kindref="member">ID_Delete</ref>,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_EQ_SSE_THREADED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/>ID_DefaultMath,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/>ID_SSE,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/>ID_SSEThreaded,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/>ID_AVX,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/>ID_AVXThreaded,</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/>ID_Bench,</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="_equalization_8cpp_1a6813be44df52c18b08debbebca7d09a8a973bbe1ccd5c880428d852aa95597c1e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="_equalization_8cpp_1a6813be44df52c18b08debbebca7d09a8a973bbe1ccd5c880428d852aa95597c1e" kindref="member">ID_Slider</ref>,<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>needs<sp/>to<sp/>come<sp/>last</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal">};</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="_equalization_8cpp_1a671f746774a3e3e4b9315ee9fc7eaf3a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="_equalization_8cpp_1a671f746774a3e3e4b9315ee9fc7eaf3a" kindref="member">kInterpolations</ref></highlight></codeline>
<codeline lineno="136"><highlight class="normal">{</highlight></codeline>
<codeline lineno="137" refid="_equalization_8cpp_1a671f746774a3e3e4b9315ee9fc7eaf3aaa46e4fdcc138a549e384640823b4b360" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="_equalization_8cpp_1a671f746774a3e3e4b9315ee9fc7eaf3aaa46e4fdcc138a549e384640823b4b360" kindref="member">kBspline</ref>,</highlight></codeline>
<codeline lineno="138" refid="_equalization_8cpp_1a671f746774a3e3e4b9315ee9fc7eaf3aaa160b4c3dcdb22ac16fe192d1904a049" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="_equalization_8cpp_1a671f746774a3e3e4b9315ee9fc7eaf3aaa160b4c3dcdb22ac16fe192d1904a049" kindref="member">kCosine</ref>,</highlight></codeline>
<codeline lineno="139" refid="_equalization_8cpp_1a671f746774a3e3e4b9315ee9fc7eaf3aa49f7e2a4145afb40a6eba4ad063a2b01" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="_equalization_8cpp_1a671f746774a3e3e4b9315ee9fc7eaf3aa49f7e2a4145afb40a6eba4ad063a2b01" kindref="member">kCubic</ref>,</highlight></codeline>
<codeline lineno="140" refid="_equalization_8cpp_1a671f746774a3e3e4b9315ee9fc7eaf3aad98ef34cc74602dd8b0ed0787d9b4fe8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="_equalization_8cpp_1a671f746774a3e3e4b9315ee9fc7eaf3aad98ef34cc74602dd8b0ed0787d9b4fe8" kindref="member">kNumInterpolations</ref></highlight></codeline>
<codeline lineno="141"><highlight class="normal">};</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Increment<sp/>whenever<sp/>EQCurves.xml<sp/>is<sp/>updated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="_equalization_8cpp_1ae8267842038c7a32f5c84b202c8d1078" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EQCURVES_VERSION<sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="_equalization_8cpp_1a12aaeb8993c5880d76854c50eed444af" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EQCURVES_REVISION<sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146" refid="_equalization_8cpp_1a5a09d43668bf6dde077f6d66994a1924" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UPDATE_ALL<sp/>0<sp/>//<sp/>0<sp/>=<sp/>merge<sp/>new<sp/>presets<sp/>only,<sp/>1<sp/>=<sp/>Update<sp/>all<sp/>factory<sp/>presets.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>kInterpStrings[<ref refid="_equalization_8cpp_1a671f746774a3e3e4b9315ee9fc7eaf3aad98ef34cc74602dd8b0ed0787d9b4fe8" kindref="member">kNumInterpolations</ref>]<sp/>=</highlight></codeline>
<codeline lineno="149"><highlight class="normal">{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>i18n-hint:<sp/>Technical<sp/>term<sp/>for<sp/>a<sp/>kind<sp/>of<sp/>curve.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><ref refid="_audacity_8h_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(</highlight><highlight class="stringliteral">&quot;B-spline&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><ref refid="_audacity_8h_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(</highlight><highlight class="stringliteral">&quot;Cosine&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><ref refid="_audacity_8h_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(</highlight><highlight class="stringliteral">&quot;Cubic&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="154"><highlight class="normal">};</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>kThirdOct[]<sp/>=</highlight></codeline>
<codeline lineno="157"><highlight class="normal">{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/>20.,<sp/>25.,<sp/>31.,<sp/>40.,<sp/>50.,<sp/>63.,<sp/>80.,<sp/>100.,<sp/>125.,<sp/>160.,<sp/>200.,</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/>250.,<sp/>315.,<sp/>400.,<sp/>500.,<sp/>630.,<sp/>800.,<sp/>1000.,<sp/>1250.,<sp/>1600.,<sp/>2000.,</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/>2500.,<sp/>3150.,<sp/>4000.,<sp/>5000.,<sp/>6300.,<sp/>8000.,<sp/>10000.,<sp/>12500.,<sp/>16000.,<sp/>20000.,</highlight></codeline>
<codeline lineno="161"><highlight class="normal">};</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Define<sp/>keys,<sp/>defaults,<sp/>minimums,<sp/>and<sp/>maximums<sp/>for<sp/>the<sp/>effect<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>Name<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Key<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Def<sp/><sp/><sp/><sp/><sp/><sp/>Min<sp/><sp/><sp/><sp/><sp/><sp/>Max<sp/><sp/><sp/><sp/><sp/><sp/>Scale</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><ref refid="_equalization_8cpp_1a6e92acea45b553e7085d017e1de6a0ba" kindref="member">Param</ref>(<sp/>FilterLength,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><ref refid="_audacity_8h_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(</highlight><highlight class="stringliteral">&quot;FilterLength&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4001,<sp/><sp/><sp/><sp/>21,<sp/><sp/><sp/><sp/><sp/><sp/>8191,<sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><ref refid="_equalization_8cpp_1a6e92acea45b553e7085d017e1de6a0ba" kindref="member">Param</ref>(<sp/>CurveName,<sp/><sp/><sp/><sp/>wxChar*,<sp/><ref refid="_audacity_8h_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(</highlight><highlight class="stringliteral">&quot;CurveName&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxT(</highlight><highlight class="stringliteral">&quot;unnamed&quot;</highlight><highlight class="normal">),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><ref refid="_equalization_8cpp_1a6e92acea45b553e7085d017e1de6a0ba" kindref="member">Param</ref>(<sp/>InterpLin,<sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><ref refid="_audacity_8h_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(</highlight><highlight class="stringliteral">&quot;InterpolateLin&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/><sp/><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><ref refid="_equalization_8cpp_1a6e92acea45b553e7085d017e1de6a0ba" kindref="member">Param</ref>(<sp/>InterpMeth,<sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><ref refid="_audacity_8h_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(</highlight><highlight class="stringliteral">&quot;InterpolationMethod&quot;</highlight><highlight class="normal">),<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><ref refid="_equalization_8cpp_1a6e92acea45b553e7085d017e1de6a0ba" kindref="member">Param</ref>(<sp/>DrawMode,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/><sp/><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><ref refid="_equalization_8cpp_1a6e92acea45b553e7085d017e1de6a0ba" kindref="member">Param</ref>(<sp/>DrawGrid,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/><sp/><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/><sp/>);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><ref refid="_equalization_8cpp_1a6e92acea45b553e7085d017e1de6a0ba" kindref="member">Param</ref>(<sp/>dBMin,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">,<sp/><sp/><sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-30.0,<sp/><sp/><sp/>-120.0,<sp/><sp/>-10.0,<sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><ref refid="_equalization_8cpp_1a6e92acea45b553e7085d017e1de6a0ba" kindref="member">Param</ref>(<sp/>dBMax,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">,<sp/><sp/><sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>30.0,<sp/><sp/><sp/><sp/>0.0,<sp/><sp/><sp/><sp/><sp/>60.0,<sp/><sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/arrimpl.cpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><ref refid="_equalization_8cpp_1aba2263c3424d7897d4fcf09772295e1a" kindref="member">WX_DEFINE_OBJARRAY</ref>(<sp/>EQPointArray<sp/>);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><ref refid="_equalization_8cpp_1aba2263c3424d7897d4fcf09772295e1a" kindref="member">WX_DEFINE_OBJARRAY</ref>(<sp/>EQCurveArray<sp/>);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="comment">//<sp/>EffectEqualization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal">BEGIN_EVENT_TABLE(<ref refid="class_effect_equalization" kindref="compound">EffectEqualization</ref>,<sp/>wxEvtHandler)</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/>EVT_SIZE(<sp/>EffectEqualization::OnSize<sp/>)</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/>EVT_SLIDER(<sp/><ref refid="_equalization_8cpp_1a6813be44df52c18b08debbebca7d09a8a865e8f0678202cf761a01e00822a46b3" kindref="member">ID_Length</ref>,<sp/>EffectEqualization::OnSliderM<sp/>)</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/>EVT_SLIDER(<sp/><ref refid="_equalization_8cpp_1a6813be44df52c18b08debbebca7d09a8a44294da3b88eb67ae53b40b0fdf731e3" kindref="member">ID_dBMax</ref>,<sp/>EffectEqualization::OnSliderDBMAX<sp/>)</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/>EVT_SLIDER(<sp/><ref refid="_equalization_8cpp_1a6813be44df52c18b08debbebca7d09a8afd50f9a85f9c0fb88de067a32ced5770" kindref="member">ID_dBMin</ref>,<sp/>EffectEqualization::OnSliderDBMIN<sp/>)</highlight></codeline>
<codeline lineno="189" refid="_equalization_8cpp_1a3bad134df05c84f76c87f9188852e456" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="_equalization_8cpp_1a3bad134df05c84f76c87f9188852e456" kindref="member">EVT_COMMAND_RANGE</ref>(<ref refid="_equalization_8cpp_1a6813be44df52c18b08debbebca7d09a8a973bbe1ccd5c880428d852aa95597c1e" kindref="member">ID_Slider</ref>,</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_equalization_8cpp_1a6813be44df52c18b08debbebca7d09a8a973bbe1ccd5c880428d852aa95597c1e" kindref="member">ID_Slider</ref><sp/>+<sp/><ref refid="_equalization_8h_1acc848db7792c76f398f7a28e797369c3" kindref="member">NUMBER_OF_BANDS</ref><sp/>-<sp/>1,</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxEVT_COMMAND_SLIDER_UPDATED,</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_effect_equalization" kindref="compound">EffectEqualization</ref>::OnSlider)</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/>EVT_CHOICE(<sp/><ref refid="_equalization_8cpp_1a6813be44df52c18b08debbebca7d09a8a6644a2a240ed67dc4854400fd5cd1eb9" kindref="member">ID_Interp</ref>,<sp/><ref refid="class_effect_equalization" kindref="compound">EffectEqualization</ref>::OnInterp<sp/>)</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/>EVT_CHOICE(<sp/><ref refid="_equalization_8cpp_1a6813be44df52c18b08debbebca7d09a8a0a13d84560debae75635aa710581b2d3" kindref="member">ID_Curve</ref>,<sp/><ref refid="class_effect_equalization" kindref="compound">EffectEqualization</ref>::OnCurve<sp/>)</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><ref refid="_dependencies_8cpp_1a6f995727bd5033aa9a6968dbe152927f" kindref="member">EVT_BUTTON</ref>(<sp/><ref refid="_equalization_8cpp_1a6813be44df52c18b08debbebca7d09a8ab2267510288e8de373c84b3d4d7ef637" kindref="member">ID_Manage</ref>,<sp/><ref refid="class_effect_equalization" kindref="compound">EffectEqualization</ref>::OnManage<sp/>)</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><ref refid="_dependencies_8cpp_1a6f995727bd5033aa9a6968dbe152927f" kindref="member">EVT_BUTTON</ref>(<sp/><ref refid="_equalization_8cpp_1a6813be44df52c18b08debbebca7d09a8aca7b2d755da0797c0bde5ed9301bca70" kindref="member">ID_Clear</ref>,<sp/><ref refid="class_effect_equalization" kindref="compound">EffectEqualization</ref>::OnClear<sp/>)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><ref refid="_dependencies_8cpp_1a6f995727bd5033aa9a6968dbe152927f" kindref="member">EVT_BUTTON</ref>(<sp/><ref refid="_equalization_8cpp_1a6813be44df52c18b08debbebca7d09a8a4ad50a93b4d88734e3ed5d0c1b1b54b3" kindref="member">ID_Invert</ref>,<sp/><ref refid="class_effect_equalization" kindref="compound">EffectEqualization</ref>::OnInvert<sp/>)</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/>EVT_RADIOBUTTON(<ref refid="_equalization_8cpp_1a6813be44df52c18b08debbebca7d09a8acaf86695a7ac58759c70efaef597ddf9" kindref="member">ID_Draw</ref>,<sp/><ref refid="class_effect_equalization" kindref="compound">EffectEqualization</ref>::OnDrawMode)</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/>EVT_RADIOBUTTON(<ref refid="_equalization_8cpp_1a6813be44df52c18b08debbebca7d09a8a29a2ac63cb4b8af03529a09714c74fad" kindref="member">ID_Graphic</ref>,<sp/><ref refid="class_effect_equalization" kindref="compound">EffectEqualization</ref>::OnGraphicMode)</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/>EVT_CHECKBOX(<ref refid="_equalization_8cpp_1a6813be44df52c18b08debbebca7d09a8a8d60d95e842d2313104dd0c678c6c156" kindref="member">ID_Linear</ref>,<sp/><ref refid="class_effect_equalization" kindref="compound">EffectEqualization</ref>::OnLinFreq)</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/>EVT_CHECKBOX(<ref refid="_equalization_8cpp_1a6813be44df52c18b08debbebca7d09a8a6809b33964d31898a8fbcf15761e7708" kindref="member">ID_Grid</ref>,<sp/><ref refid="class_effect_equalization" kindref="compound">EffectEqualization</ref>::OnGridOnOff)</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_EQ_SSE_THREADED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/>EVT_RADIOBUTTON(ID_DefaultMath,<sp/>EffectEqualization::OnProcessingRadio)</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/>EVT_RADIOBUTTON(ID_SSE,<sp/><ref refid="class_effect_equalization" kindref="compound">EffectEqualization</ref>::OnProcessingRadio)</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/>EVT_RADIOBUTTON(ID_SSEThreaded,<sp/><ref refid="class_effect_equalization" kindref="compound">EffectEqualization</ref>::OnProcessingRadio)</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/>EVT_RADIOBUTTON(ID_AVX,<sp/><ref refid="class_effect_equalization" kindref="compound">EffectEqualization</ref>::OnProcessingRadio)</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/>EVT_RADIOBUTTON(ID_AVXThreaded,<sp/><ref refid="class_effect_equalization" kindref="compound">EffectEqualization</ref>::OnProcessingRadio)</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><ref refid="_dependencies_8cpp_1a6f995727bd5033aa9a6968dbe152927f" kindref="member">EVT_BUTTON</ref>(ID_Bench,<sp/><ref refid="class_effect_equalization" kindref="compound">EffectEqualization</ref>::OnBench)</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><ref refid="_batch_command_dialog_8cpp_1a8c3469324b3e5d3e6c44c23a418ab937" kindref="member">END_EVENT_TABLE</ref>()</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><ref refid="class_effect_equalization" kindref="compound">EffectEqualization</ref>::<ref refid="class_effect_equalization" kindref="compound">EffectEqualization</ref>()</highlight></codeline>
<codeline lineno="216"><highlight class="normal">{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/>mCurve<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/>mPanel<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/>hFFT<sp/>=<sp/><ref refid="_real_f_f_tf_8cpp_1a2b189c2319fd7e3a60cce2cdcdaafe02" kindref="member">InitializeFFT</ref>(windowSize);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/>mFFTBuffer<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[windowSize];</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/>mFilterFuncR<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[windowSize];</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/>mFilterFuncI<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[windowSize];</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/>SetLinearEffectFlag(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_EQ_SSE_THREADED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/>mEffectEqualization48x=<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/>mM<sp/>=<sp/>DEF_FilterLength;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/>mLin<sp/>=<sp/>DEF_InterpLin;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/>mInterp<sp/>=<sp/>DEF_InterpMeth;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/>mCurveName<sp/>=<sp/>DEF_CurveName;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/>GetPrivateConfig(GetCurrentSettingsGroup(),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;dBMin&quot;</highlight><highlight class="normal">),<sp/>mdBMin,<sp/>DEF_dBMin);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/>GetPrivateConfig(GetCurrentSettingsGroup(),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;dBMax&quot;</highlight><highlight class="normal">),<sp/>mdBMax,<sp/>DEF_dBMax);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/>GetPrivateConfig(GetCurrentSettingsGroup(),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;DrawMode&quot;</highlight><highlight class="normal">),<sp/>mDrawMode,<sp/>DEF_DrawMode);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/>GetPrivateConfig(GetCurrentSettingsGroup(),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;DrawGrid&quot;</highlight><highlight class="normal">),<sp/>mDrawGrid,<sp/>DEF_DrawGrid);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/><ref refid="_equalization_8cpp_1a671f746774a3e3e4b9315ee9fc7eaf3aad98ef34cc74602dd8b0ed0787d9b4fe8" kindref="member">kNumInterpolations</ref>;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mInterpolations.Add(wxGetTranslation(kInterpStrings[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]));</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/>mLogEnvelope<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_envelope" kindref="compound">Envelope</ref>();</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/>mLogEnvelope-&gt;SetInterpolateDB(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/>mLogEnvelope-&gt;Mirror(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/>mLogEnvelope-&gt;SetRange(MIN_dBMin,<sp/>MAX_dBMax);<sp/></highlight><highlight class="comment">//<sp/>MB:<sp/>this<sp/>is<sp/>the<sp/>highest<sp/>possible<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/>mLinEnvelope<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_envelope" kindref="compound">Envelope</ref>();</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/>mLinEnvelope-&gt;SetInterpolateDB(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/>mLinEnvelope-&gt;Mirror(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/>mLinEnvelope-&gt;SetRange(MIN_dBMin,<sp/>MAX_dBMax);<sp/></highlight><highlight class="comment">//<sp/>MB:<sp/>this<sp/>is<sp/>the<sp/>highest<sp/>possible<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/>mEnvelope<sp/>=<sp/>(mLin<sp/>?<sp/>mLinEnvelope<sp/>:<sp/>mLogEnvelope);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/>mWindowSize<sp/>=<sp/>windowSize;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/>mDirty<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/>mDisallowCustom<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>the<sp/>EQ<sp/>curves</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/>LoadCurves();</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>initial<sp/>curve<sp/>is<sp/>set<sp/>in<sp/>TransferDataToWindow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/>mBandsInUse<sp/>=<sp/><ref refid="_equalization_8h_1acc848db7792c76f398f7a28e797369c3" kindref="member">NUMBER_OF_BANDS</ref>;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//double<sp/>loLog<sp/>=<sp/>log10(mLoFreq);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//double<sp/>stepLog<sp/>=<sp/>(log10(mHiFreq)<sp/>-<sp/>loLog)/((double)NUM_PTS-1.);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>&lt;<ref refid="_equalization_8h_1a3c04b19568bbb4a55aecbabecec45dd2" kindref="member">NUM_PTS</ref>-1;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mWhens[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>/(NUM_PTS-1.);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/>mWhens[NUM_PTS-1]<sp/>=<sp/>1.;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/>mWhenSliders[<ref refid="_equalization_8h_1acc848db7792c76f398f7a28e797369c3" kindref="member">NUMBER_OF_BANDS</ref>]<sp/>=<sp/>1.;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/>mEQVals[<ref refid="_equalization_8h_1acc848db7792c76f398f7a28e797369c3" kindref="member">NUMBER_OF_BANDS</ref>]<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_EQ_SSE_THREADED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useSSE;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/>GetPrivateConfig(GetCurrentSettingsGroup(),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;/SSE/GUI&quot;</highlight><highlight class="normal">),<sp/>useSSE,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(useSSE<sp/>&amp;&amp;<sp/>!mEffectEqualization48x)</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mEffectEqualization48x=</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>EffectEqualization48x;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!useSSE<sp/>&amp;&amp;<sp/>mEffectEqualization48x)<sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>mEffectEqualization48x;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mEffectEqualization48x=<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/>mBench=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal">}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292" refid="class_effect_equalization_1a2a263426296dee56bbd2cbcc889f909d" refkind="member"><highlight class="normal"><ref refid="class_effect_equalization_1a2a263426296dee56bbd2cbcc889f909d" kindref="member">EffectEqualization::~EffectEqualization</ref>()</highlight></codeline>
<codeline lineno="293"><highlight class="normal">{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mLogEnvelope)</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>mLogEnvelope;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/>mLogEnvelope<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mLinEnvelope)</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>mLinEnvelope;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/>mLinEnvelope<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hFFT)</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_real_f_f_tf_8cpp_1ad005674cde11c0f9189a415b438053aa" kindref="member">EndFFT</ref>(hFFT);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/>hFFT<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mFFTBuffer)</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>mFFTBuffer;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/>mFFTBuffer<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mFilterFuncR)</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>mFilterFuncR;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mFilterFuncI)</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>mFilterFuncI;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/>mFilterFuncR<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/>mFilterFuncI<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_EQ_SSE_THREADED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mEffectEqualization48x)</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>mEffectEqualization48x;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal">}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="comment">//<sp/>IdentInterface<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321" refid="class_effect_equalization_1a68b52864362138263cffe9e79ce94838" refkind="member"><highlight class="normal">wxString<sp/><ref refid="class_effect_equalization_1a68b52864362138263cffe9e79ce94838" kindref="member">EffectEqualization::GetSymbol</ref>()</highlight></codeline>
<codeline lineno="322"><highlight class="normal">{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_equalization_8h_1ad20e9106c7d892fb14769b3b346cb053" kindref="member">EQUALIZATION_PLUGIN_SYMBOL</ref>;</highlight></codeline>
<codeline lineno="324"><highlight class="normal">}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326" refid="class_effect_equalization_1a1fea1cf7f0f5c8e334547299c28938c5" refkind="member"><highlight class="normal">wxString<sp/><ref refid="class_effect_equalization_1a1fea1cf7f0f5c8e334547299c28938c5" kindref="member">EffectEqualization::GetDescription</ref>()</highlight></codeline>
<codeline lineno="327"><highlight class="normal">{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_audacity_8h_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(</highlight><highlight class="stringliteral">&quot;Adjusts<sp/>the<sp/>volume<sp/>levels<sp/>of<sp/>particular<sp/>frequencies&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="329"><highlight class="normal">}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EffectIdentInterface<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333" refid="class_effect_equalization_1af48f25f528ffc9336b7dcc722d707f0d" refkind="member"><highlight class="normal"><ref refid="_effect_interface_8h_1a4809a7bb3fd1a421902a667cc1405d43" kindref="member">EffectType</ref><sp/><ref refid="class_effect_equalization_1af48f25f528ffc9336b7dcc722d707f0d" kindref="member">EffectEqualization::GetType</ref>()</highlight></codeline>
<codeline lineno="334"><highlight class="normal">{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_effect_interface_8h_1a4809a7bb3fd1a421902a667cc1405d43afd0f1aa24555662b091206287d30521b" kindref="member">EffectTypeProcess</ref>;</highlight></codeline>
<codeline lineno="336"><highlight class="normal">}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EffectClientInterface<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340" refid="class_effect_equalization_1ad3be9f18cd948df8b777164f5a478882" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_effect_equalization_1ad3be9f18cd948df8b777164f5a478882" kindref="member">EffectEqualization::GetAutomationParameters</ref>(<ref refid="class_effect_automation_parameters" kindref="compound">EffectAutomationParameters</ref><sp/>&amp;<sp/>parms)</highlight></codeline>
<codeline lineno="341"><highlight class="normal">{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/>parms.Write(KEY_FilterLength,<sp/>mM);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/>parms.Write(KEY_CurveName,<sp/>mCurveName);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/>parms.Write(KEY_InterpLin,<sp/>mLin);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/>parms.<ref refid="class_effect_automation_parameters_1ae60ebf611660043e085b7b2881393d81" kindref="member">WriteEnum</ref>(KEY_InterpMeth,<sp/>mInterp,<sp/>wxArrayString(<ref refid="_equalization_8cpp_1a671f746774a3e3e4b9315ee9fc7eaf3aad98ef34cc74602dd8b0ed0787d9b4fe8" kindref="member">kNumInterpolations</ref>,<sp/>kInterpStrings));</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="348"><highlight class="normal">}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350" refid="class_effect_equalization_1a8a3a0756adee96ff2b570f2b7c391999" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_effect_equalization_1a8a3a0756adee96ff2b570f2b7c391999" kindref="member">EffectEqualization::SetAutomationParameters</ref>(<ref refid="class_effect_automation_parameters" kindref="compound">EffectAutomationParameters</ref><sp/>&amp;<sp/>parms)</highlight></codeline>
<codeline lineno="351"><highlight class="normal">{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pretty<sp/>sure<sp/>the<sp/>interpolation<sp/>name<sp/>shouldn&apos;t<sp/>have<sp/>been<sp/>interpreted<sp/>when</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>specified<sp/>in<sp/>chains,<sp/>but<sp/>must<sp/>keep<sp/>it<sp/>that<sp/>way<sp/>for<sp/>compatibility.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/>wxArrayString<sp/>interpolations(mInterpolations);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/><ref refid="_equalization_8cpp_1a671f746774a3e3e4b9315ee9fc7eaf3aad98ef34cc74602dd8b0ed0787d9b4fe8" kindref="member">kNumInterpolations</ref>;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>interpolations.Add(kInterpStrings[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><ref refid="src_2effects_2_effect_8h_1a3a8eba4aa8859f1570057d1be02d5f4b" kindref="member">ReadAndVerifyInt</ref>(FilterLength);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><ref refid="src_2effects_2_effect_8h_1a2a2d59730301a653018cd11cf04c5cf8" kindref="member">ReadAndVerifyString</ref>(CurveName);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><ref refid="src_2effects_2_effect_8h_1a43f199fdc7a828221d649fd0cd76dd1e" kindref="member">ReadAndVerifyBool</ref>(InterpLin);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><ref refid="src_2effects_2_effect_8h_1a7f66a6fc07a71dc42f7d8bf7248d210e" kindref="member">ReadAndVerifyEnum</ref>(InterpMeth,<sp/>interpolations);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/>mM<sp/>=<sp/>FilterLength;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/>mCurveName<sp/>=<sp/>CurveName;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/>mLin<sp/>=<sp/>InterpLin;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/>mInterp<sp/>=<sp/>InterpMeth;</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(InterpMeth<sp/>&gt;=<sp/>kNumInterpolations)</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>InterpMeth<sp/>-=<sp/><ref refid="_equalization_8cpp_1a671f746774a3e3e4b9315ee9fc7eaf3aad98ef34cc74602dd8b0ed0787d9b4fe8" kindref="member">kNumInterpolations</ref>;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/>mEnvelope<sp/>=<sp/>(mLin<sp/>?<sp/>mLinEnvelope<sp/>:<sp/>mLogEnvelope);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="378"><highlight class="normal">}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380" refid="class_effect_equalization_1a769f846631805c557f940353d6704a9c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_effect_equalization_1a769f846631805c557f940353d6704a9c" kindref="member">EffectEqualization::LoadFactoryDefaults</ref>()</highlight></codeline>
<codeline lineno="381"><highlight class="normal">{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/>mdBMin<sp/>=<sp/>DEF_dBMin;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/>mdBMax<sp/>=<sp/>DEF_dBMax;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/>mDrawMode<sp/>=<sp/>DEF_DrawMode;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/>mDrawGrid<sp/>=<sp/>DEF_DrawGrid;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_effect_1a29827d153ead224ad480b33bd82b624b" kindref="member">Effect::LoadFactoryDefaults</ref>();</highlight></codeline>
<codeline lineno="388"><highlight class="normal">}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EffectUIClientInterface<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392" refid="class_effect_equalization_1a1defcf863397160bb35f244c8e1fdfaa" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_effect_equalization_1a1defcf863397160bb35f244c8e1fdfaa" kindref="member">EffectEqualization::ValidateUI</ref>()</highlight></codeline>
<codeline lineno="393"><highlight class="normal">{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>editing<sp/>a<sp/>batch<sp/>chain,<sp/>we<sp/>don&apos;t<sp/>want<sp/>to<sp/>be<sp/>using<sp/>the<sp/>unnamed<sp/>curve<sp/>so</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>offer<sp/>to<sp/>save<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(mDisallowCustom<sp/>&amp;&amp;<sp/>mCurveName.IsSameAs(wxT(</highlight><highlight class="stringliteral">&quot;unnamed&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxMessageBox(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;To<sp/>use<sp/>this<sp/>EQ<sp/>curve<sp/>in<sp/>a<sp/>batch<sp/>chain,<sp/>please<sp/>choose<sp/>a<sp/>new<sp/>name<sp/>for<sp/>it.\nChoose<sp/>the<sp/>&apos;Save/Manage<sp/>Curves...&apos;<sp/>button<sp/>and<sp/>rename<sp/>the<sp/>&apos;unnamed&apos;<sp/>curve,<sp/>then<sp/>use<sp/>that<sp/>one.&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;EQ<sp/>Curve<sp/>needs<sp/>a<sp/>different<sp/>name&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxOK<sp/>|<sp/>wxCENTRE,</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_effect_1a72092c469d5f0e82f16fbac57e38229f" kindref="member">mUIParent</ref>);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>unnamed<sp/>curve<sp/>(so<sp/>it&apos;s<sp/>there<sp/>for<sp/>next<sp/>time)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//(done<sp/>in<sp/>a<sp/>hurry,<sp/>may<sp/>not<sp/>be<sp/>the<sp/>neatest<sp/>-MJS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mDirty<sp/>&amp;&amp;<sp/>!mDrawMode)</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numPoints<sp/>=<sp/>mLogEnvelope-&gt;<ref refid="class_envelope_1adfc11a49a3ca8a9a5f4b51ff4131c9c1" kindref="member">GetNumberOfPoints</ref>();</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*when<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[numPoints];</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[numPoints];</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mLogEnvelope-&gt;<ref refid="class_envelope_1a43bdb8e0be30685682f11beaf1c051f1" kindref="member">GetPoints</ref>(when,<sp/>value,<sp/>numPoints);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0,<sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>numPoints<sp/>-<sp/>2;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++,<sp/>j++)</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((value[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>&lt;<sp/>value[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>+<sp/>1]<sp/>+<sp/>.05)<sp/>&amp;&amp;<sp/>(value[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>&gt;<sp/>value[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>+<sp/>1]<sp/>-<sp/>.05)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(value[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>+<sp/>1]<sp/>&lt;<sp/>value[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>+<sp/>2]<sp/>+<sp/>.05)<sp/>&amp;&amp;<sp/>(value[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>+<sp/>1]<sp/>&gt;<sp/>value[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>+<sp/>2]<sp/>-<sp/>.05))</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>within<sp/>&lt;<sp/>0.05<sp/>dB?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLogEnvelope-&gt;<ref refid="class_envelope_1a9f1b3d27d312bc44e97e8b2268bedef8" kindref="member">Delete</ref>(j<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numPoints--;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j--;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>when;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Select((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>mCurves.GetCount()<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/>SaveCurves();</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_effect_1a710b20ab9885fbb37a06cc77f86c9ec8" kindref="member">SetPrivateConfig</ref>(<ref refid="class_effect_1a058541101e2a9496372810d0ef4d7fe4" kindref="member">GetCurrentSettingsGroup</ref>(),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;dBMin&quot;</highlight><highlight class="normal">),<sp/>mdBMin);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_effect_1a710b20ab9885fbb37a06cc77f86c9ec8" kindref="member">SetPrivateConfig</ref>(<ref refid="class_effect_1a058541101e2a9496372810d0ef4d7fe4" kindref="member">GetCurrentSettingsGroup</ref>(),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;dBMax&quot;</highlight><highlight class="normal">),<sp/>mdBMax);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_effect_1a710b20ab9885fbb37a06cc77f86c9ec8" kindref="member">SetPrivateConfig</ref>(<ref refid="class_effect_1a058541101e2a9496372810d0ef4d7fe4" kindref="member">GetCurrentSettingsGroup</ref>(),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;DrawMode&quot;</highlight><highlight class="normal">),<sp/>mDrawMode);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_effect_1a710b20ab9885fbb37a06cc77f86c9ec8" kindref="member">SetPrivateConfig</ref>(<ref refid="class_effect_1a058541101e2a9496372810d0ef4d7fe4" kindref="member">GetCurrentSettingsGroup</ref>(),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;DrawGrid&quot;</highlight><highlight class="normal">),<sp/>mDrawGrid);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="435"><highlight class="normal">}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Effect<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439" refid="class_effect_equalization_1a61c334e6c981c3a39fb83dc0a0a4b56a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_effect_equalization_1a61c334e6c981c3a39fb83dc0a0a4b56a" kindref="member">EffectEqualization::Startup</ref>()</highlight></codeline>
<codeline lineno="440"><highlight class="normal">{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/><ref refid="lib_2expat_8h_1a938e186c531ea86ae9adf3c0a649d8fc" kindref="member">base</ref><sp/>=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;/Effects/Equalization/&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Migrate<sp/>settings<sp/>from<sp/>2.1.0<sp/>or<sp/>before</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Already<sp/>migrated,<sp/>so<sp/>bail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Exists(base<sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;Migrated&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>the<sp/>old<sp/>&quot;current&quot;<sp/>settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Exists(base))</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>get<sp/>saved<sp/>to<sp/>the<sp/>current<sp/>preset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(base<sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;FilterLength&quot;</highlight><highlight class="normal">),<sp/>&amp;mM,<sp/>4001);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((mM<sp/>&lt;<sp/>21)<sp/>||<sp/>(mM<sp/>&gt;<sp/>8191))<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>corrupted<sp/>Prefs?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mM<sp/>=<sp/>4001;<sp/><sp/></highlight><highlight class="comment">//default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(base<sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;CurveName&quot;</highlight><highlight class="normal">),<sp/>&amp;mCurveName,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;unnamed&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(base<sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;Lin&quot;</highlight><highlight class="normal">),<sp/>&amp;mLin,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(base<sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;Interp&quot;</highlight><highlight class="normal">),<sp/>&amp;mInterp,<sp/>0);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_effect_1a6e3578fd544c99167a7462c6c3839c3c" kindref="member">SaveUserPreset</ref>(<ref refid="class_effect_1a058541101e2a9496372810d0ef4d7fe4" kindref="member">GetCurrentSettingsGroup</ref>());</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>persist<sp/>across<sp/>preset<sp/>changes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dBMin;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(base<sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;dBMin&quot;</highlight><highlight class="normal">),<sp/>&amp;dBMin,<sp/>-30.0);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((dBMin<sp/>&lt;<sp/>-120)<sp/>||<sp/>(dBMin<sp/>&gt;<sp/>-10))<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>corrupted<sp/>Prefs?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dBMin<sp/>=<sp/>-30;<sp/><sp/></highlight><highlight class="comment">//default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mdBMin<sp/>=<sp/>dBMin;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_effect_1a710b20ab9885fbb37a06cc77f86c9ec8" kindref="member">SetPrivateConfig</ref>(<ref refid="class_effect_1a058541101e2a9496372810d0ef4d7fe4" kindref="member">GetCurrentSettingsGroup</ref>(),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;dBMin&quot;</highlight><highlight class="normal">),<sp/>mdBMin);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dBMax;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(base<sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;dBMax&quot;</highlight><highlight class="normal">),<sp/>&amp;dBMax,<sp/>30.);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((dBMax<sp/>&lt;<sp/>0)<sp/>||<sp/>(dBMax<sp/>&gt;<sp/>60))<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>corrupted<sp/>Prefs?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dBMax<sp/>=<sp/>30;<sp/><sp/></highlight><highlight class="comment">//default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mdBMax<sp/>=<sp/>dBMax;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_effect_1a710b20ab9885fbb37a06cc77f86c9ec8" kindref="member">SetPrivateConfig</ref>(<ref refid="class_effect_1a058541101e2a9496372810d0ef4d7fe4" kindref="member">GetCurrentSettingsGroup</ref>(),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;dBMax&quot;</highlight><highlight class="normal">),<sp/>mdBMax);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(base<sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;DrawMode&quot;</highlight><highlight class="normal">),<sp/>&amp;mDrawMode,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_effect_1a710b20ab9885fbb37a06cc77f86c9ec8" kindref="member">SetPrivateConfig</ref>(<ref refid="class_effect_1a058541101e2a9496372810d0ef4d7fe4" kindref="member">GetCurrentSettingsGroup</ref>(),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;DrawMode&quot;</highlight><highlight class="normal">),<sp/>mDrawMode);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(base<sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;DrawGrid&quot;</highlight><highlight class="normal">),<sp/>&amp;mDrawGrid,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_effect_1a710b20ab9885fbb37a06cc77f86c9ec8" kindref="member">SetPrivateConfig</ref>(<ref refid="class_effect_1a058541101e2a9496372810d0ef4d7fe4" kindref="member">GetCurrentSettingsGroup</ref>(),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;DrawGrid&quot;</highlight><highlight class="normal">),<sp/>mDrawGrid);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>not<sp/>migrate<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Write(base<sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;Migrated&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Flush();</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="494"><highlight class="normal">}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496" refid="class_effect_equalization_1afa103d8e1331c9ee3b7bd12c779ec09f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_effect_equalization_1afa103d8e1331c9ee3b7bd12c779ec09f" kindref="member">EffectEqualization::Init</ref>()</highlight></codeline>
<codeline lineno="497"><highlight class="normal">{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>selcount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="test__lib_f_l_a_c_2format_8c_1a960ad82c3ba394a46f17f5f6146c93ea" kindref="member">rate</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_list_iterator" kindref="compound">TrackListIterator</ref><sp/>iter(<ref refid="_project_8cpp_1a897aa047b58617a9acc187fc882e3bb4" kindref="member">GetActiveProject</ref>()-&gt;GetTracks());</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref><sp/>=<sp/>iter.<ref refid="class_track_list_iterator_1a81e19731fba5e1b83552aaf36c6f227c" kindref="member">First</ref>();</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(t)<sp/>{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t-&gt;<ref refid="class_track_1ac01a2b30ea7a2574d724bae023427905" kindref="member">GetSelected</ref>()<sp/>&amp;&amp;<sp/>t-&gt;<ref refid="class_track_1ad71d0460cf42bcde59dcf600af7ef6b7" kindref="member">GetKind</ref>()<sp/>==<sp/><ref refid="class_track_1a4a6604845139575dfc25be299aeb60efab39033be088537a007532668cb6d16a8" kindref="member">Track::Wave</ref>)<sp/>{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*track<sp/>=<sp/>(<ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*)t;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(selcount==0)<sp/>{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rate<sp/>=<sp/>track-&gt;<ref refid="class_wave_track_1a18bbe6e1bb4b1016c3a3de835c33b8fa" kindref="member">GetRate</ref>();</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(track-&gt;<ref refid="class_wave_track_1a18bbe6e1bb4b1016c3a3de835c33b8fa" kindref="member">GetRate</ref>()<sp/>!=<sp/><ref refid="test__lib_f_l_a_c_2format_8c_1a960ad82c3ba394a46f17f5f6146c93ea" kindref="member">rate</ref>)<sp/>{</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxMessageBox(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;To<sp/>apply<sp/>Equalization,<sp/>all<sp/>selected<sp/>tracks<sp/>must<sp/>have<sp/>the<sp/>same<sp/>sample<sp/>rate.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>selcount++;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>iter.<ref refid="class_track_list_iterator_1a2f22c9a396a8803881ca6d9784039706" kindref="member">Next</ref>();</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/>mHiFreq<sp/>=<sp/>rate<sp/>/<sp/>2.0;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Unlikely,<sp/>but<sp/>better<sp/>than<sp/>crashing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mHiFreq<sp/>&lt;=<sp/>loFreqI)<sp/>{</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxMessageBox(<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Track<sp/>sample<sp/>rate<sp/>is<sp/>too<sp/>low<sp/>for<sp/>this<sp/>effect.&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Effect<sp/>Unavailable&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxOK<sp/>|<sp/>wxCENTRE);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/>mLoFreq<sp/>=<sp/>loFreqI;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/>mBandsInUse<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(kThirdOct[mBandsInUse]<sp/>&lt;=<sp/>mHiFreq)<sp/>{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mBandsInUse++;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mBandsInUse<sp/>==<sp/><ref refid="_equalization_8h_1acc848db7792c76f398f7a28e797369c3" kindref="member">NUMBER_OF_BANDS</ref>)</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/>mEnvelope<sp/>=<sp/>(mLin<sp/>?<sp/>mLinEnvelope<sp/>:<sp/>mLogEnvelope);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/>setCurve(mCurveName);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/>CalcFilter();</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="544"><highlight class="normal">}</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546" refid="class_effect_equalization_1a27bdb34a377680159997eeaeae1986ab" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_effect_equalization_1a27bdb34a377680159997eeaeae1986ab" kindref="member">EffectEqualization::Process</ref>()</highlight></codeline>
<codeline lineno="547"><highlight class="normal">{</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_EQ_SSE_THREADED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mEffectEqualization48x)</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mBench)<sp/>{</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBench=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mEffectEqualization48x-&gt;Benchmark(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mEffectEqualization48x-&gt;Process(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/>this-&gt;<ref refid="class_effect_1a039810b41ba1f3e233360caeb48f769d" kindref="member">CopyInputTracks</ref>();<sp/></highlight><highlight class="comment">//<sp/>Set<sp/>up<sp/>mOutputTracks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bGoodResult<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_selected_track_list_of_kind_iterator" kindref="compound">SelectedTrackListOfKindIterator</ref><sp/>iter(<ref refid="class_track_1a4a6604845139575dfc25be299aeb60efab39033be088537a007532668cb6d16a8" kindref="member">Track::Wave</ref>,<sp/><ref refid="class_effect_1a9fc18f5889f07570bf0f5dff7bb0f625" kindref="member">mOutputTracks</ref>);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*track<sp/>=<sp/>(<ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*)<sp/>iter.<ref refid="class_track_list_cond_iterator_1a1b09130ef5d92e19a60db05933d89ad5" kindref="member">First</ref>();</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(track)<sp/>{</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>trackStart<sp/>=<sp/>track-&gt;<ref refid="class_wave_track_1acd39f4f01272e112a2d132e48b60678e" kindref="member">GetStartTime</ref>();</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>trackEnd<sp/>=<sp/>track-&gt;<ref refid="class_wave_track_1a73f81dee4dcb79e0df3bb6a85b866ae1" kindref="member">GetEndTime</ref>();</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0<sp/>=<sp/><ref refid="class_effect_1ae83563966df5c0b3aba90dd183b15b53" kindref="member">mT0</ref><sp/>&lt;<sp/>trackStart?<sp/>trackStart:<sp/><ref refid="class_effect_1ae83563966df5c0b3aba90dd183b15b53" kindref="member">mT0</ref>;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1<sp/>=<sp/><ref refid="class_effect_1a7681f0ae7a8245659b002078e78ef146" kindref="member">mT1</ref><sp/>&gt;<sp/>trackEnd?<sp/>trackEnd:<sp/><ref refid="class_effect_1a7681f0ae7a8245659b002078e78ef146" kindref="member">mT1</ref>;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t1<sp/>&gt;<sp/>t0)<sp/>{</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref><sp/>=<sp/>track-&gt;<ref refid="class_wave_track_1afe621ba06a0396725da44e937143972f" kindref="member">TimeToLongSamples</ref>(t0);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref><sp/>=<sp/>track-&gt;<ref refid="class_wave_track_1afe621ba06a0396725da44e937143972f" kindref="member">TimeToLongSamples</ref>(t1);</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref><sp/>=<sp/>(<ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref>)(end<sp/>-<sp/>start);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ProcessOne(count,<sp/>track,<sp/>start,<sp/>len))</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bGoodResult<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>track<sp/>=<sp/>(<ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*)<sp/>iter.<ref refid="class_track_list_cond_iterator_1a9e3f44333f6cc2d0171315d389fb6582" kindref="member">Next</ref>();</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>count++;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/>this-&gt;<ref refid="class_effect_1af97713f3d7ca2c647d19e1ec4501d12e" kindref="member">ReplaceProcessedTracks</ref>(bGoodResult);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bGoodResult;</highlight></codeline>
<codeline lineno="586"><highlight class="normal">}</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="588" refid="class_effect_equalization_1a0098acb678737d07cf4ca2d8f53f4617" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_effect_equalization_1a0098acb678737d07cf4ca2d8f53f4617" kindref="member">EffectEqualization::PopulateUI</ref>(wxWindow<sp/>*parent)</highlight></codeline>
<codeline lineno="589"><highlight class="normal">{</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_effect_1a72092c469d5f0e82f16fbac57e38229f" kindref="member">mUIParent</ref><sp/>=<sp/>parent;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_effect_1a72092c469d5f0e82f16fbac57e38229f" kindref="member">mUIParent</ref>-&gt;PushEventHandler(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_effect_1abded9e6e396235d7f7c70261b76eed79" kindref="member">LoadUserPreset</ref>(<ref refid="class_effect_1a058541101e2a9496372810d0ef4d7fe4" kindref="member">GetCurrentSettingsGroup</ref>());</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_shuttle_gui" kindref="compound">ShuttleGui</ref><sp/><ref refid="xlftab_8c_1af933676109efed7ab34cea71d748a517" kindref="member">S</ref>(<ref refid="class_effect_1a72092c469d5f0e82f16fbac57e38229f" kindref="member">mUIParent</ref>,<sp/><ref refid="_shuttle_gui_8h_1a0c8bf96cca5e5b020b22818e8490b964a25601c4255a6f5c0cb7e8251080b069a" kindref="member">eIsCreating</ref>);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_effect_equalization_1a276b0214475e309953c3677bd033750a" kindref="member">PopulateOrExchange</ref>(S);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="599"><highlight class="normal">}</highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight></codeline>
<codeline lineno="601" refid="class_effect_equalization_1aaef7d61c6e7cdaa7cf59e99107660120" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_effect_equalization_1aaef7d61c6e7cdaa7cf59e99107660120" kindref="member">EffectEqualization::CloseUI</ref>()</highlight></codeline>
<codeline lineno="602"><highlight class="normal">{</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_effect_1a72092c469d5f0e82f16fbac57e38229f" kindref="member">mUIParent</ref>-&gt;RemoveEventHandler(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_effect_1a72092c469d5f0e82f16fbac57e38229f" kindref="member">mUIParent</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/>mCurve<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/>mPanel<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="611"><highlight class="normal">}</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613" refid="class_effect_equalization_1a276b0214475e309953c3677bd033750a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_effect_equalization_1a276b0214475e309953c3677bd033750a" kindref="member">EffectEqualization::PopulateOrExchange</ref>(<ref refid="class_shuttle_gui" kindref="compound">ShuttleGui</ref><sp/>&amp;<sp/><ref refid="xlftab_8c_1af933676109efed7ab34cea71d748a517" kindref="member">S</ref>)</highlight></codeline>
<codeline lineno="614"><highlight class="normal">{</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/>wxWindow<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>parent<sp/>=<sp/>S.<ref refid="class_shuttle_gui_base_1a8cf9a32c04e6cbbe231e629b1902871d" kindref="member">GetParent</ref>();</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/>LoadCurves();</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_list_of_kind_iterator" kindref="compound">TrackListOfKindIterator</ref><sp/>iter(<ref refid="class_track_1a4a6604845139575dfc25be299aeb60efab39033be088537a007532668cb6d16a8" kindref="member">Track::Wave</ref>,<sp/><ref refid="class_effect_1a5617560453677f895be8d2d7b5d7e19d" kindref="member">mTracks</ref>);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref><sp/>=<sp/>(<ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*)<sp/>iter.<ref refid="class_track_list_cond_iterator_1a1b09130ef5d92e19a60db05933d89ad5" kindref="member">First</ref>();</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/>mHiFreq<sp/>=<sp/>(t<sp/>?<sp/>t-&gt;<ref refid="class_wave_track_1a18bbe6e1bb4b1016c3a3de835c33b8fa" kindref="member">GetRate</ref>()<sp/>:<sp/><ref refid="_project_8cpp_1a897aa047b58617a9acc187fc882e3bb4" kindref="member">GetActiveProject</ref>()-&gt;<ref refid="class_audacity_project_1a73a477249a9746f99bd0f72e9d9fe531" kindref="member">GetRate</ref>())<sp/>/<sp/>2.0;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/>mLoFreq<sp/>=<sp/>loFreqI;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a026838575f360f2d1d8414827d18457d" kindref="member">SetBorder</ref>(0);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a7ed44a99f25ebbdc1b91bce086e5e46d" kindref="member">SetSizerProportion</ref>(1);</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1ae71efe4837e02680f854a905b3b27120" kindref="member">StartMultiColumn</ref>(1,<sp/>wxEXPAND);</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1ad4cabbeae683420ffe6ee2e279ede56f" kindref="member">SetStretchyCol</ref>(0);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a6f1a3303037df4c49caf2fd1804a6b19" kindref="member">SetStretchyRow</ref>(1);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>szrV<sp/>=<sp/>S.<ref refid="class_shuttle_gui_base_1aea125766f6a197bfb4677ef1e6cd738f" kindref="member">GetSizer</ref>();</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ROW<sp/>1:<sp/>Top<sp/>border</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_1a3a5b4056473e3a9f240a8e9b173424fe" kindref="member">AddSpace</ref>(5);</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a7ed44a99f25ebbdc1b91bce086e5e46d" kindref="member">SetSizerProportion</ref>(1);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1ae71efe4837e02680f854a905b3b27120" kindref="member">StartMultiColumn</ref>(3,<sp/>wxEXPAND);</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1ad4cabbeae683420ffe6ee2e279ede56f" kindref="member">SetStretchyCol</ref>(1);</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a6f1a3303037df4c49caf2fd1804a6b19" kindref="member">SetStretchyRow</ref>(0);</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>szr1<sp/>=<sp/>S.<ref refid="class_shuttle_gui_base_1aea125766f6a197bfb4677ef1e6cd738f" kindref="member">GetSizer</ref>();</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ROW<sp/>2:<sp/>Equalization<sp/>panel<sp/>and<sp/>sliders<sp/>for<sp/>vertical<sp/>scale</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a6f8c4113388aa33dbb64204cd5ab1571" kindref="member">StartVerticalLay</ref>();</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mdBRuler<sp/>=<sp/><ref refid="_audacity_8h_1a5bfa31d993e8d629ec6ebdeaa41b5955" kindref="member">safenew</ref><sp/><ref refid="class_ruler_panel" kindref="compound">RulerPanel</ref>(parent,<sp/>wxID_ANY);</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mdBRuler-&gt;<ref refid="class_ruler_panel_1a07edcc2559cee8311d68fd33ec93e140" kindref="member">ruler</ref>.<ref refid="class_ruler_1ac0cd3f26225eb23922e5c6399b39a2aa" kindref="member">SetBounds</ref>(0,<sp/>0,<sp/>100,<sp/>100);<sp/></highlight><highlight class="comment">//<sp/>Ruler<sp/>can&apos;t<sp/>handle<sp/>small<sp/>sizes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mdBRuler-&gt;<ref refid="class_ruler_panel_1a07edcc2559cee8311d68fd33ec93e140" kindref="member">ruler</ref>.<ref refid="class_ruler_1a6db8b4c35435ae7636fde05b7dbf3ce7" kindref="member">SetOrientation</ref>(wxVERTICAL);</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mdBRuler-&gt;<ref refid="class_ruler_panel_1a07edcc2559cee8311d68fd33ec93e140" kindref="member">ruler</ref>.<ref refid="class_ruler_1ad99f5a5adeeb2ca290a7df7760ded7bc" kindref="member">SetRange</ref>(60.0,<sp/>-120.0);</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mdBRuler-&gt;<ref refid="class_ruler_panel_1a07edcc2559cee8311d68fd33ec93e140" kindref="member">ruler</ref>.<ref refid="class_ruler_1ae26ec61780ad8b9a696a5125194355da" kindref="member">SetFormat</ref>(<ref refid="class_ruler_1af58442bc79afc26e7b9f7735e1f6e198a95750ee90dccdfc672979587e4182859" kindref="member">Ruler::LinearDBFormat</ref>);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mdBRuler-&gt;<ref refid="class_ruler_panel_1a07edcc2559cee8311d68fd33ec93e140" kindref="member">ruler</ref>.<ref refid="class_ruler_1af898251ccb1b0c9c981f777c28fc9116" kindref="member">SetUnits</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;dB&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mdBRuler-&gt;<ref refid="class_ruler_panel_1a07edcc2559cee8311d68fd33ec93e140" kindref="member">ruler</ref>.<ref refid="class_ruler_1aa89718940d9126ca92100db6f2c8945e" kindref="member">SetLabelEdges</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mdBRuler-&gt;<ref refid="class_ruler_panel_1a07edcc2559cee8311d68fd33ec93e140" kindref="member">ruler</ref>.<ref refid="class_ruler_1ab26f0f7159425ba42f51d9a4349a5523" kindref="member">mbTicksAtExtremes</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mdBRuler-&gt;<ref refid="class_ruler_panel_1a07edcc2559cee8311d68fd33ec93e140" kindref="member">ruler</ref>.<ref refid="class_ruler_1abd258d34d82c33e51c066e6ecdab724f" kindref="member">GetMaxSize</ref>(&amp;w,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mdBRuler-&gt;SetMinSize(wxSize(w,<sp/>150));<sp/><sp/></highlight><highlight class="comment">//<sp/>height<sp/>needed<sp/>for<sp/>wxGTK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_1a9b08b8ed4659c593cef65df97f0e0c13" kindref="member">Prop</ref>(1);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_1a3a5b4056473e3a9f240a8e9b173424fe" kindref="member">AddSpace</ref>(0,<sp/>1);</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1ab9c4e1935a85180c4aff8b056b29c418" kindref="member">AddWindow</ref>(mdBRuler,<sp/>wxEXPAND<sp/>|<sp/>wxALIGN_RIGHT);</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_1a3a5b4056473e3a9f240a8e9b173424fe" kindref="member">AddSpace</ref>(0,<sp/>1);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a0286cb0ae146afcf8c589ceb16b37144" kindref="member">EndVerticalLay</ref>();</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mPanel<sp/>=<sp/><ref refid="_audacity_8h_1a5bfa31d993e8d629ec6ebdeaa41b5955" kindref="member">safenew</ref><sp/><ref refid="class_effect_equalization_1a2e4782c298f7e0f22608a5a5d5a55e69" kindref="member">EqualizationPanel</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>parent);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_1a9b08b8ed4659c593cef65df97f0e0c13" kindref="member">Prop</ref>(1);</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1ab9c4e1935a85180c4aff8b056b29c418" kindref="member">AddWindow</ref>(mPanel,<sp/>wxEXPAND<sp/>|<sp/>wxALIGN_LEFT<sp/>|<sp/>wxALIGN_TOP);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_1a80bb6fc1ac47561ff1716904fb73041c" kindref="member">SetSizeHints</ref>(wxDefaultCoord,<sp/>wxDefaultCoord);</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a026838575f360f2d1d8414827d18457d" kindref="member">SetBorder</ref>(5);</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a6f8c4113388aa33dbb64204cd5ab1571" kindref="member">StartVerticalLay</ref>();</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a8ba6dd56c6623a20eec280355d930967" kindref="member">AddVariableText</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;+<sp/>dB&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>wxCENTER);</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a3afc5aecba69ad749aac2f740e34a471" kindref="member">SetStyle</ref>(wxSL_VERTICAL<sp/>|<sp/>wxSL_INVERSE);</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mdBMaxSlider<sp/>=<sp/>S.<ref refid="class_shuttle_gui_1a0db2f531b7bd17f72c211883151f5640" kindref="member">Id</ref>(<ref refid="_equalization_8cpp_1a6813be44df52c18b08debbebca7d09a8a44294da3b88eb67ae53b40b0fdf731e3" kindref="member">ID_dBMax</ref>).<ref refid="class_shuttle_gui_base_1ab5483f256392246255a5b5f6c4638c5e" kindref="member">AddSlider</ref>(wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),<sp/>30,<sp/>60,<sp/>0);</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>wxUSE_ACCESSIBILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mdBMaxSlider-&gt;SetName(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Max<sp/>dB&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mdBMaxSlider-&gt;SetAccessible(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>SliderAx(mdBMaxSlider,<sp/>wxString(wxT(</highlight><highlight class="stringliteral">&quot;%d<sp/>&quot;</highlight><highlight class="normal">))<sp/>+<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;dB&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a3afc5aecba69ad749aac2f740e34a471" kindref="member">SetStyle</ref>(wxSL_VERTICAL<sp/>|<sp/>wxSL_INVERSE);</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mdBMinSlider<sp/>=<sp/>S.<ref refid="class_shuttle_gui_1a0db2f531b7bd17f72c211883151f5640" kindref="member">Id</ref>(<ref refid="_equalization_8cpp_1a6813be44df52c18b08debbebca7d09a8afd50f9a85f9c0fb88de067a32ced5770" kindref="member">ID_dBMin</ref>).<ref refid="class_shuttle_gui_base_1ab5483f256392246255a5b5f6c4638c5e" kindref="member">AddSlider</ref>(wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),<sp/>-30,<sp/>-10,<sp/>-120);</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a8ba6dd56c6623a20eec280355d930967" kindref="member">AddVariableText</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;-<sp/>dB&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>wxCENTER);</highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>wxUSE_ACCESSIBILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mdBMinSlider-&gt;SetName(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Min<sp/>dB&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mdBMinSlider-&gt;SetAccessible(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>SliderAx(mdBMinSlider,<sp/>wxString(wxT(</highlight><highlight class="stringliteral">&quot;%d<sp/>&quot;</highlight><highlight class="normal">))<sp/>+<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;dB&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a0286cb0ae146afcf8c589ceb16b37144" kindref="member">EndVerticalLay</ref>();</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a026838575f360f2d1d8414827d18457d" kindref="member">SetBorder</ref>(0);</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ROW<sp/>3:<sp/>Frequency<sp/>ruler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Column<sp/>1<sp/>is<sp/>empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_1a3a5b4056473e3a9f240a8e9b173424fe" kindref="member">AddSpace</ref>(1,<sp/>1);</highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mFreqRuler<sp/><sp/>=<sp/><ref refid="_audacity_8h_1a5bfa31d993e8d629ec6ebdeaa41b5955" kindref="member">safenew</ref><sp/><ref refid="class_ruler_panel" kindref="compound">RulerPanel</ref>(parent,<sp/>wxID_ANY);</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mFreqRuler-&gt;<ref refid="class_ruler_panel_1a07edcc2559cee8311d68fd33ec93e140" kindref="member">ruler</ref>.<ref refid="class_ruler_1ac0cd3f26225eb23922e5c6399b39a2aa" kindref="member">SetBounds</ref>(0,<sp/>0,<sp/>100,<sp/>100);<sp/></highlight><highlight class="comment">//<sp/>Ruler<sp/>can&apos;t<sp/>handle<sp/>small<sp/>sizes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mFreqRuler-&gt;<ref refid="class_ruler_panel_1a07edcc2559cee8311d68fd33ec93e140" kindref="member">ruler</ref>.<ref refid="class_ruler_1a6db8b4c35435ae7636fde05b7dbf3ce7" kindref="member">SetOrientation</ref>(wxHORIZONTAL);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mFreqRuler-&gt;<ref refid="class_ruler_panel_1a07edcc2559cee8311d68fd33ec93e140" kindref="member">ruler</ref>.<ref refid="class_ruler_1aa8ce98e8d2f905e2b53196473e0b57dd" kindref="member">SetLog</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mFreqRuler-&gt;<ref refid="class_ruler_panel_1a07edcc2559cee8311d68fd33ec93e140" kindref="member">ruler</ref>.<ref refid="class_ruler_1ad99f5a5adeeb2ca290a7df7760ded7bc" kindref="member">SetRange</ref>(mLoFreq,<sp/>mHiFreq);</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mFreqRuler-&gt;<ref refid="class_ruler_panel_1a07edcc2559cee8311d68fd33ec93e140" kindref="member">ruler</ref>.<ref refid="class_ruler_1ae26ec61780ad8b9a696a5125194355da" kindref="member">SetFormat</ref>(<ref refid="class_ruler_1af58442bc79afc26e7b9f7735e1f6e198aba68a1adce860f0e30519cfc2b280272" kindref="member">Ruler::IntFormat</ref>);</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mFreqRuler-&gt;<ref refid="class_ruler_panel_1a07edcc2559cee8311d68fd33ec93e140" kindref="member">ruler</ref>.<ref refid="class_ruler_1af898251ccb1b0c9c981f777c28fc9116" kindref="member">SetUnits</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Hz&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mFreqRuler-&gt;<ref refid="class_ruler_panel_1a07edcc2559cee8311d68fd33ec93e140" kindref="member">ruler</ref>.<ref refid="class_ruler_1a36bc3f3483f08885a6e12523dfab6460" kindref="member">SetFlip</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mFreqRuler-&gt;<ref refid="class_ruler_panel_1a07edcc2559cee8311d68fd33ec93e140" kindref="member">ruler</ref>.<ref refid="class_ruler_1aa89718940d9126ca92100db6f2c8945e" kindref="member">SetLabelEdges</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mFreqRuler-&gt;<ref refid="class_ruler_panel_1a07edcc2559cee8311d68fd33ec93e140" kindref="member">ruler</ref>.<ref refid="class_ruler_1ab26f0f7159425ba42f51d9a4349a5523" kindref="member">mbTicksAtExtremes</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h;</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mFreqRuler-&gt;<ref refid="class_ruler_panel_1a07edcc2559cee8311d68fd33ec93e140" kindref="member">ruler</ref>.<ref refid="class_ruler_1abd258d34d82c33e51c066e6ecdab724f" kindref="member">GetMaxSize</ref>(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>&amp;h);</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mFreqRuler-&gt;SetMinSize(wxSize(wxDefaultCoord,<sp/>h));</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_1a9b08b8ed4659c593cef65df97f0e0c13" kindref="member">Prop</ref>(1);</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a026838575f360f2d1d8414827d18457d" kindref="member">SetBorder</ref>(1);</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1ab9c4e1935a85180c4aff8b056b29c418" kindref="member">AddWindow</ref>(mFreqRuler,<sp/>wxEXPAND<sp/>|<sp/>wxALIGN_LEFT<sp/>|<sp/>wxALIGN_TOP<sp/>|<sp/>wxLEFT);</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a026838575f360f2d1d8414827d18457d" kindref="member">SetBorder</ref>(0);</highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Column<sp/>3<sp/>is<sp/>empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_1a3a5b4056473e3a9f240a8e9b173424fe" kindref="member">AddSpace</ref>(1,<sp/>1);</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a1a676a57ca191fde04599e4199e3f7f4" kindref="member">EndMultiColumn</ref>();</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ROW<sp/>3:<sp/>Graphic<sp/>EQ<sp/>-<sp/>this<sp/>gets<sp/>laid<sp/>out<sp/>horizontally<sp/>in<sp/>onSize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1aa456756283f789e26c6841eb3ca55c72" kindref="member">StartHorizontalLay</ref>(wxEXPAND,<sp/>0);</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>szrG<sp/>=<sp/>S.<ref refid="class_shuttle_gui_base_1aea125766f6a197bfb4677ef1e6cd738f" kindref="member">GetSizer</ref>();</highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Panel<sp/>used<sp/>to<sp/>host<sp/>the<sp/>sliders<sp/>since<sp/>they<sp/>will<sp/>be<sp/>positioned<sp/>manually.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mGraphicPanel<sp/>=<sp/><ref refid="_audacity_8h_1a5bfa31d993e8d629ec6ebdeaa41b5955" kindref="member">safenew</ref><sp/>wxPanel(parent,<sp/>wxID_ANY,<sp/>wxDefaultPosition,<sp/>wxSize(-1,<sp/>150));</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_1a9b08b8ed4659c593cef65df97f0e0c13" kindref="member">Prop</ref>(1).<ref refid="class_shuttle_gui_base_1ab9c4e1935a85180c4aff8b056b29c418" kindref="member">AddWindow</ref>(mGraphicPanel,<sp/>wxEXPAND);</highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/>(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/><ref refid="_equalization_8h_1acc848db7792c76f398f7a28e797369c3" kindref="member">NUMBER_OF_BANDS</ref>)<sp/>&amp;&amp;<sp/>(kThirdOct[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>&lt;=<sp/>mHiFreq);<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mSliders[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/><ref refid="_audacity_8h_1a5bfa31d993e8d629ec6ebdeaa41b5955" kindref="member">safenew</ref><sp/>wxSlider(mGraphicPanel,<sp/><ref refid="_equalization_8cpp_1a6813be44df52c18b08debbebca7d09a8a973bbe1ccd5c880428d852aa95597c1e" kindref="member">ID_Slider</ref><sp/>+<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/>0,<sp/>-20,<sp/>+20,</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxDefaultPosition,<sp/>wxDefaultSize,<sp/>wxSL_VERTICAL<sp/>|<sp/>wxSL_INVERSE);</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mSliders[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;Connect(wxEVT_ERASE_BACKGROUND,<sp/>wxEraseEventHandler(EffectEqualization::OnErase));</highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>wxUSE_ACCESSIBILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/><ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>kThirdOct[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>&lt;<sp/>1000.)</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name.Printf(wxString(wxT(</highlight><highlight class="stringliteral">&quot;%d<sp/>&quot;</highlight><highlight class="normal">))<sp/>+<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Hz&quot;</highlight><highlight class="normal">),<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)kThirdOct[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]);</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name.Printf(wxString(wxT(</highlight><highlight class="stringliteral">&quot;%g<sp/>&quot;</highlight><highlight class="normal">))<sp/>+<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;kHz&quot;</highlight><highlight class="normal">),<sp/>kThirdOct[i]/1000.);</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mSliders[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;SetName(name);</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mSliders[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;SetAccessible(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>SliderAx(mSliders[i],<sp/>wxString(wxT(</highlight><highlight class="stringliteral">&quot;%d<sp/>&quot;</highlight><highlight class="normal">))<sp/>+<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;dB&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mSlidersOld[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mEQVals[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a80917a37e36156f398a24436c1f3dba9" kindref="member">EndHorizontalLay</ref>();</highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1ae71efe4837e02680f854a905b3b27120" kindref="member">StartMultiColumn</ref>(7,<sp/>wxALIGN_CENTER_HORIZONTAL);</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a026838575f360f2d1d8414827d18457d" kindref="member">SetBorder</ref>(5);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ROWS<sp/>4:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_1a3a5b4056473e3a9f240a8e9b173424fe" kindref="member">AddSpace</ref>(5,<sp/>5);</highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1aa456756283f789e26c6841eb3ca55c72" kindref="member">StartHorizontalLay</ref>(wxALIGN_RIGHT<sp/>|<sp/>wxALIGN_CENTER_VERTICAL);</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1aa64878f881c9394090275f01296888c6" kindref="member">AddPrompt</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;&amp;EQ<sp/>Type:&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a80917a37e36156f398a24436c1f3dba9" kindref="member">EndHorizontalLay</ref>();</highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1aa456756283f789e26c6841eb3ca55c72" kindref="member">StartHorizontalLay</ref>(wxALIGN_LEFT<sp/>|<sp/>wxALIGN_CENTER_VERTICAL,<sp/>1);</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1aa456756283f789e26c6841eb3ca55c72" kindref="member">StartHorizontalLay</ref>(wxALIGN_LEFT<sp/>|<sp/>wxALIGN_CENTER_VERTICAL,<sp/>1);</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mDraw<sp/>=<sp/>S.<ref refid="class_shuttle_gui_1a0db2f531b7bd17f72c211883151f5640" kindref="member">Id</ref>(<ref refid="_equalization_8cpp_1a6813be44df52c18b08debbebca7d09a8acaf86695a7ac58759c70efaef597ddf9" kindref="member">ID_Draw</ref>).<ref refid="class_shuttle_gui_base_1a7f7670bb731cda2f9c1da83640ba2e2d" kindref="member">AddRadioButton</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;&amp;Draw&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mDraw-&gt;SetName(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Draw<sp/>Curves&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mGraphic<sp/>=<sp/>S.<ref refid="class_shuttle_gui_1a0db2f531b7bd17f72c211883151f5640" kindref="member">Id</ref>(<ref refid="_equalization_8cpp_1a6813be44df52c18b08debbebca7d09a8a29a2ac63cb4b8af03529a09714c74fad" kindref="member">ID_Graphic</ref>).<ref refid="class_shuttle_gui_base_1a061bfd950a17f1da00c06bc353e04f44" kindref="member">AddRadioButtonToGroup</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;&amp;Graphic&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mGraphic-&gt;SetName(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Graphic<sp/>EQ&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a80917a37e36156f398a24436c1f3dba9" kindref="member">EndHorizontalLay</ref>();</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a80917a37e36156f398a24436c1f3dba9" kindref="member">EndHorizontalLay</ref>();</highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1aa456756283f789e26c6841eb3ca55c72" kindref="member">StartHorizontalLay</ref>(wxALIGN_LEFT<sp/>|<sp/>wxALIGN_CENTER_VERTICAL,<sp/>1);</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>szrH<sp/>=<sp/>S.<ref refid="class_shuttle_gui_base_1aea125766f6a197bfb4677ef1e6cd738f" kindref="member">GetSizer</ref>();</highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1aa456756283f789e26c6841eb3ca55c72" kindref="member">StartHorizontalLay</ref>(wxALIGN_LEFT<sp/>|<sp/>wxALIGN_CENTER_VERTICAL,<sp/>1);</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>szrI<sp/>=<sp/>S.<ref refid="class_shuttle_gui_base_1aea125766f6a197bfb4677ef1e6cd738f" kindref="member">GetSizer</ref>();</highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mInterpChoice<sp/>=<sp/>S.<ref refid="class_shuttle_gui_1a0db2f531b7bd17f72c211883151f5640" kindref="member">Id</ref>(<ref refid="_equalization_8cpp_1a6813be44df52c18b08debbebca7d09a8a6644a2a240ed67dc4854400fd5cd1eb9" kindref="member">ID_Interp</ref>).<ref refid="class_shuttle_gui_base_1af7a1f08500177bfe4cb37255043aebc0" kindref="member">AddChoice</ref>(wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),<sp/>&amp;mInterpolations);</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mInterpChoice-&gt;SetName(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Interpolation<sp/>type&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mInterpChoice-&gt;SetSelection(0);</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a80917a37e36156f398a24436c1f3dba9" kindref="member">EndHorizontalLay</ref>();</highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1aa456756283f789e26c6841eb3ca55c72" kindref="member">StartHorizontalLay</ref>(wxALIGN_LEFT<sp/>|<sp/>wxALIGN_CENTER_VERTICAL,<sp/>1);</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>szrL<sp/>=<sp/>S.<ref refid="class_shuttle_gui_base_1aea125766f6a197bfb4677ef1e6cd738f" kindref="member">GetSizer</ref>();</highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLinFreq<sp/>=<sp/>S.<ref refid="class_shuttle_gui_1a0db2f531b7bd17f72c211883151f5640" kindref="member">Id</ref>(<ref refid="_equalization_8cpp_1a6813be44df52c18b08debbebca7d09a8a8d60d95e842d2313104dd0c678c6c156" kindref="member">ID_Linear</ref>).<ref refid="class_shuttle_gui_base_1a8c68a737f8ab224fefa8b4f452c38073" kindref="member">AddCheckBox</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Li&amp;near<sp/>Frequency<sp/>Scale&quot;</highlight><highlight class="normal">),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;false&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLinFreq-&gt;SetName(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Linear<sp/>Frequency<sp/>Scale&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a80917a37e36156f398a24436c1f3dba9" kindref="member">EndHorizontalLay</ref>();</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a80917a37e36156f398a24436c1f3dba9" kindref="member">EndHorizontalLay</ref>();</highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Filter<sp/>length<sp/>grouping</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1aa456756283f789e26c6841eb3ca55c72" kindref="member">StartHorizontalLay</ref>(wxEXPAND,<sp/>1);</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1aa456756283f789e26c6841eb3ca55c72" kindref="member">StartHorizontalLay</ref>(wxALIGN_LEFT<sp/>|<sp/>wxALIGN_CENTER_VERTICAL,<sp/>0);</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1aa64878f881c9394090275f01296888c6" kindref="member">AddPrompt</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Length<sp/>of<sp/>&amp;Filter:&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a80917a37e36156f398a24436c1f3dba9" kindref="member">EndHorizontalLay</ref>();</highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1aa456756283f789e26c6841eb3ca55c72" kindref="member">StartHorizontalLay</ref>(wxEXPAND,<sp/>1);</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a3afc5aecba69ad749aac2f740e34a471" kindref="member">SetStyle</ref>(wxSL_HORIZONTAL);</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mMSlider<sp/>=<sp/>S.<ref refid="class_shuttle_gui_1a0db2f531b7bd17f72c211883151f5640" kindref="member">Id</ref>(<ref refid="_equalization_8cpp_1a6813be44df52c18b08debbebca7d09a8a865e8f0678202cf761a01e00822a46b3" kindref="member">ID_Length</ref>).<ref refid="class_shuttle_gui_base_1ab5483f256392246255a5b5f6c4638c5e" kindref="member">AddSlider</ref>(wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),<sp/>(mM<sp/>-1)<sp/>/<sp/>2,<sp/>4095,<sp/>10);</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mMSlider-&gt;SetName(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Length<sp/>of<sp/>Filter&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a80917a37e36156f398a24436c1f3dba9" kindref="member">EndHorizontalLay</ref>();</highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1aa456756283f789e26c6841eb3ca55c72" kindref="member">StartHorizontalLay</ref>(wxALIGN_LEFT<sp/>|<sp/>wxALIGN_CENTER_VERTICAL,<sp/>0);</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/><ref refid="_tags_8cpp_1a0a3345b0d4574d7adffe113dacd8ccec" kindref="member">label</ref>;</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>label.Printf(wxT(</highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">),<sp/>mM);</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mMText<sp/>=<sp/>S.<ref refid="class_shuttle_gui_base_1a8ba6dd56c6623a20eec280355d930967" kindref="member">AddVariableText</ref>(label);</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mMText-&gt;SetName(label);<sp/></highlight><highlight class="comment">//<sp/>fix<sp/>for<sp/>bug<sp/>577<sp/>(NVDA/Narrator<sp/>screen<sp/>readers<sp/>do<sp/>not<sp/>read<sp/>static<sp/>text<sp/>in<sp/>dialogs)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a80917a37e36156f398a24436c1f3dba9" kindref="member">EndHorizontalLay</ref>();</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a80917a37e36156f398a24436c1f3dba9" kindref="member">EndHorizontalLay</ref>();</highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_1a3a5b4056473e3a9f240a8e9b173424fe" kindref="member">AddSpace</ref>(1,<sp/>1);</highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_1a3a5b4056473e3a9f240a8e9b173424fe" kindref="member">AddSpace</ref>(5,<sp/>5);</highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ROW<sp/>5:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_1a3a5b4056473e3a9f240a8e9b173424fe" kindref="member">AddSpace</ref>(5,<sp/>5);</highlight></codeline>
<codeline lineno="854"><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1aa456756283f789e26c6841eb3ca55c72" kindref="member">StartHorizontalLay</ref>(wxALIGN_RIGHT<sp/>|<sp/>wxALIGN_CENTER_VERTICAL);</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1aa64878f881c9394090275f01296888c6" kindref="member">AddPrompt</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;&amp;Select<sp/>Curve:&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a80917a37e36156f398a24436c1f3dba9" kindref="member">EndHorizontalLay</ref>();</highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1aa456756283f789e26c6841eb3ca55c72" kindref="member">StartHorizontalLay</ref>(wxALIGN_LEFT<sp/>|<sp/>wxALIGN_CENTER_VERTICAL,<sp/>1);</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1aa456756283f789e26c6841eb3ca55c72" kindref="member">StartHorizontalLay</ref>(wxALIGN_LEFT<sp/>|<sp/>wxALIGN_CENTER_VERTICAL,<sp/>1);</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxArrayString<sp/>curves;</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0,<sp/>cnt<sp/>=<sp/>mCurves.GetCount();<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>cnt;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curves.Add(mCurves[<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>].Name);</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mCurve<sp/>=<sp/>S.<ref refid="class_shuttle_gui_1a0db2f531b7bd17f72c211883151f5640" kindref="member">Id</ref>(<ref refid="_equalization_8cpp_1a6813be44df52c18b08debbebca7d09a8a0a13d84560debae75635aa710581b2d3" kindref="member">ID_Curve</ref>).<ref refid="class_shuttle_gui_base_1af7a1f08500177bfe4cb37255043aebc0" kindref="member">AddChoice</ref>(wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),<sp/>&amp;curves);</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mCurve-&gt;SetName(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Select<sp/>Curve&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a80917a37e36156f398a24436c1f3dba9" kindref="member">EndHorizontalLay</ref>();</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a80917a37e36156f398a24436c1f3dba9" kindref="member">EndHorizontalLay</ref>();</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_1a0db2f531b7bd17f72c211883151f5640" kindref="member">Id</ref>(<ref refid="_equalization_8cpp_1a6813be44df52c18b08debbebca7d09a8ab2267510288e8de373c84b3d4d7ef637" kindref="member">ID_Manage</ref>).<ref refid="class_shuttle_gui_base_1a88b56806bad47b9301a6efad9b7c9eff" kindref="member">AddButton</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;S&amp;ave/Manage<sp/>Curves...&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="878"><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1aa456756283f789e26c6841eb3ca55c72" kindref="member">StartHorizontalLay</ref>(wxALIGN_LEFT<sp/>|<sp/>wxALIGN_CENTER_VERTICAL,<sp/>1);</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_1a0db2f531b7bd17f72c211883151f5640" kindref="member">Id</ref>(<ref refid="_equalization_8cpp_1a6813be44df52c18b08debbebca7d09a8aca7b2d755da0797c0bde5ed9301bca70" kindref="member">ID_Clear</ref>).<ref refid="class_shuttle_gui_base_1a88b56806bad47b9301a6efad9b7c9eff" kindref="member">AddButton</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Fla&amp;tten&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_1a0db2f531b7bd17f72c211883151f5640" kindref="member">Id</ref>(<ref refid="_equalization_8cpp_1a6813be44df52c18b08debbebca7d09a8a4ad50a93b4d88734e3ed5d0c1b1b54b3" kindref="member">ID_Invert</ref>).<ref refid="class_shuttle_gui_base_1a88b56806bad47b9301a6efad9b7c9eff" kindref="member">AddButton</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;&amp;Invert&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mGridOnOff<sp/>=<sp/>S.<ref refid="class_shuttle_gui_1a0db2f531b7bd17f72c211883151f5640" kindref="member">Id</ref>(<ref refid="_equalization_8cpp_1a6813be44df52c18b08debbebca7d09a8a6809b33964d31898a8fbcf15761e7708" kindref="member">ID_Grid</ref>).<ref refid="class_shuttle_gui_base_1a8c68a737f8ab224fefa8b4f452c38073" kindref="member">AddCheckBox</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Show<sp/>g&amp;rid<sp/>lines&quot;</highlight><highlight class="normal">),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;false&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mGridOnOff-&gt;SetName(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Show<sp/>grid<sp/>lines&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a80917a37e36156f398a24436c1f3dba9" kindref="member">EndHorizontalLay</ref>();</highlight></codeline>
<codeline lineno="888"><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_1a3a5b4056473e3a9f240a8e9b173424fe" kindref="member">AddSpace</ref>(5,<sp/>5);</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a1a676a57ca191fde04599e4199e3f7f4" kindref="member">EndMultiColumn</ref>();</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a1a676a57ca191fde04599e4199e3f7f4" kindref="member">EndMultiColumn</ref>();</highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_EQ_SSE_THREADED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_pEffect-&gt;mEffectEqualization48x)</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ROW<sp/>6:<sp/>Processing<sp/>routine<sp/>selection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Column<sp/>1<sp/>is<sp/>blank</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_1a3a5b4056473e3a9f240a8e9b173424fe" kindref="member">AddSpace</ref>(1,<sp/>1);</highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1aa456756283f789e26c6841eb3ca55c72" kindref="member">StartHorizontalLay</ref>();</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a54816a02cbcc4d09b3d40c2b731ba9e5" kindref="member">AddUnits</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;&amp;Processing:<sp/>&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mMathProcessingType[0]<sp/>=<sp/>S.<ref refid="class_shuttle_gui_1a0db2f531b7bd17f72c211883151f5640" kindref="member">Id</ref>(ID_DefaultMath).</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddRadioButton(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;D&amp;efault&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mMathProcessingType[1]<sp/>=<sp/>S.<ref refid="class_shuttle_gui_1a0db2f531b7bd17f72c211883151f5640" kindref="member">Id</ref>(ID_SSE).</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddRadioButtonToGroup(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;&amp;SSE&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mMathProcessingType[2]<sp/>=<sp/>S.<ref refid="class_shuttle_gui_1a0db2f531b7bd17f72c211883151f5640" kindref="member">Id</ref>(ID_SSEThreaded).</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddRadioButtonToGroup(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;SSE<sp/>&amp;Threaded&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mMathProcessingType[3]<sp/>=<sp/>S.<ref refid="class_shuttle_gui_1a0db2f531b7bd17f72c211883151f5640" kindref="member">Id</ref>(ID_AVX).</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddRadioButtonToGroup(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;A&amp;VX&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mMathProcessingType[4]<sp/>=<sp/>S.<ref refid="class_shuttle_gui_1a0db2f531b7bd17f72c211883151f5640" kindref="member">Id</ref>(ID_AVXThreaded).</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>AddRadioButtonToGroup(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;AV&amp;X<sp/>Threaded&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="919"><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!EffectEqualization48x::GetMathCaps()-&gt;<ref refid="lame_8h_1a64edf7f08faddc31c2ce52a2e04a4707a403b03371fd04961f31f99b254cf8e57" kindref="member">SSE</ref>)</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mMathProcessingType[1]-&gt;Disable();</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mMathProcessingType[2]-&gt;Disable();</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/><sp/></highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mMathProcessingType[3]-&gt;Disable();</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mMathProcessingType[4]-&gt;Disable();</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>the<sp/>control<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mMathProcessingType[0]-&gt;SetValue(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mathPath=EffectEqualization48x::GetMathPath();</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mathPath&amp;MATH_FUNCTION_SSE)</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mMathProcessingType[1]-&gt;SetValue(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mathPath&amp;MATH_FUNCTION_THREADED)</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mMathProcessingType[2]-&gt;SetValue(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/></highlight><highlight class="comment">//mathPath&amp;MATH_FUNCTION_AVX)<sp/>{<sp/>not<sp/>implemented</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mMathProcessingType[3]-&gt;SetValue(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mathPath&amp;MATH_FUNCTION_THREADED)</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mMathProcessingType[4]-&gt;SetValue(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_1a0db2f531b7bd17f72c211883151f5640" kindref="member">Id</ref>(ID_Bench).<ref refid="class_shuttle_gui_base_1a88b56806bad47b9301a6efad9b7c9eff" kindref="member">AddButton</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;&amp;Bench&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a80917a37e36156f398a24436c1f3dba9" kindref="member">EndHorizontalLay</ref>();</highlight></codeline>
<codeline lineno="948"><highlight class="normal"></highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Column<sp/>3<sp/>is<sp/>blank</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_1a3a5b4056473e3a9f240a8e9b173424fe" kindref="member">AddSpace</ref>(1,<sp/>1);</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="952"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="953"><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_effect_1a72092c469d5f0e82f16fbac57e38229f" kindref="member">mUIParent</ref>-&gt;SetAutoLayout(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_effect_1a72092c469d5f0e82f16fbac57e38229f" kindref="member">mUIParent</ref>-&gt;Layout();</highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/>szrV-&gt;Show(szrG,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/>szrH-&gt;Show(szrI,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/>szrH-&gt;Show(szrL,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="960"><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_effect_1a72092c469d5f0e82f16fbac57e38229f" kindref="member">mUIParent</ref>-&gt;SetSizeHints(<ref refid="class_effect_1a72092c469d5f0e82f16fbac57e38229f" kindref="member">mUIParent</ref>-&gt;GetBestSize());</highlight></codeline>
<codeline lineno="962"><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>szrL-&gt;SetMinSize(<sp/>szrI-&gt;GetSize()<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/>szrV-&gt;Show(szrG,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/>szrH-&gt;Show(szrI,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/>szrH-&gt;Show(szrL,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="968"><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="970"><highlight class="normal">}</highlight></codeline>
<codeline lineno="971"><highlight class="normal"></highlight></codeline>
<codeline lineno="972"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Populate<sp/>the<sp/>window<sp/>with<sp/>relevant<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="974"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="975" refid="class_effect_equalization_1a82051ea0ba3eaa408d2f83ef8e48fde8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_effect_equalization_1a82051ea0ba3eaa408d2f83ef8e48fde8" kindref="member">EffectEqualization::TransferDataToWindow</ref>()</highlight></codeline>
<codeline lineno="976"><highlight class="normal">{</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>log<sp/>or<sp/>lin<sp/>freq<sp/>scale<sp/>(affects<sp/>interpolation<sp/>as<sp/>well)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/>mLinFreq-&gt;SetValue(<sp/>mLin<sp/>);</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/>wxCommandEvent<sp/>dummyEvent;</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/>OnLinFreq(dummyEvent);<sp/><sp/></highlight><highlight class="comment">//<sp/>causes<sp/>a<sp/>CalcFilter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="981"><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/>mGridOnOff-&gt;SetValue(<sp/>mDrawGrid<sp/>);<sp/></highlight><highlight class="comment">//<sp/>checks/unchecks<sp/>the<sp/>box<sp/>on<sp/>the<sp/>interface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/>mMSlider-&gt;SetValue((mM-1)/2);</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/>mM<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>force<sp/>refresh<sp/>in<sp/>TransferDataFromWindow()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="986"><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/>mdBMinSlider-&gt;SetValue((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)mdBMin);</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/>mdBMin<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>force<sp/>refresh<sp/>in<sp/>TransferDataFromWindow()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="989"><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/>mdBMaxSlider-&gt;SetValue((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)mdBMax);</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/>mdBMax<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>force<sp/>refresh<sp/>in<sp/>TransferDataFromWindow()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reload<sp/>the<sp/>curve<sp/>names</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/>UpdateCurves();</highlight></codeline>
<codeline lineno="995"><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>graphic<sp/>interpolation<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/>mInterpChoice-&gt;SetSelection(mInterp);</highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>Graphic<sp/>(Fader)<sp/>or<sp/>Draw<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mDrawMode)</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mDraw-&gt;SetValue(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mGraphic-&gt;SetValue(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_effect_equalization_1a5f6741452d8e743492b94bd529870887" kindref="member">TransferDataFromWindow</ref>();</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_effect_1a72092c469d5f0e82f16fbac57e38229f" kindref="member">mUIParent</ref>-&gt;Layout();</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/>wxGetTopLevelParent(<ref refid="class_effect_1a72092c469d5f0e82f16fbac57e38229f" kindref="member">mUIParent</ref>)-&gt;Layout();</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"></highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1015"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1018"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Retrieve<sp/>data<sp/>from<sp/>the<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1019"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1020" refid="class_effect_equalization_1a5f6741452d8e743492b94bd529870887" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_effect_equalization_1a5f6741452d8e743492b94bd529870887" kindref="member">EffectEqualization::TransferDataFromWindow</ref>()</highlight></codeline>
<codeline lineno="1021"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>tip;</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"></highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rr<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dB<sp/>=<sp/>(float)<sp/>mdBMinSlider-&gt;GetValue();</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dB<sp/>!=<sp/>mdBMin)<sp/>{</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rr<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mdBMin<sp/>=<sp/>dB;</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tip.Printf(wxString(wxT(</highlight><highlight class="stringliteral">&quot;%d<sp/>&quot;</highlight><highlight class="normal">))<sp/>+<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;dB&quot;</highlight><highlight class="normal">),(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)mdBMin);</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mdBMinSlider-&gt;SetToolTip(tip);</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/>dB<sp/>=<sp/>(float)<sp/>mdBMaxSlider-&gt;GetValue();</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dB<sp/>!=<sp/>mdBMax)<sp/>{</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rr<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mdBMax<sp/>=<sp/>dB;</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tip.Printf(wxString(wxT(</highlight><highlight class="stringliteral">&quot;%d<sp/>&quot;</highlight><highlight class="normal">))<sp/>+<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;dB&quot;</highlight><highlight class="normal">),(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)mdBMax);</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mdBMaxSlider-&gt;SetToolTip(tip);</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Refresh<sp/>ruler<sp/>if<sp/>values<sp/>have<sp/>changed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rr)<sp/>{</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w1,<sp/>w2,<sp/>h;</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mdBRuler-&gt;<ref refid="class_ruler_panel_1a07edcc2559cee8311d68fd33ec93e140" kindref="member">ruler</ref>.<ref refid="class_ruler_1abd258d34d82c33e51c066e6ecdab724f" kindref="member">GetMaxSize</ref>(&amp;w1,<sp/>&amp;h);</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mdBRuler-&gt;<ref refid="class_ruler_panel_1a07edcc2559cee8311d68fd33ec93e140" kindref="member">ruler</ref>.<ref refid="class_ruler_1ad99f5a5adeeb2ca290a7df7760ded7bc" kindref="member">SetRange</ref>(mdBMax,<sp/>mdBMin);</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mdBRuler-&gt;<ref refid="class_ruler_panel_1a07edcc2559cee8311d68fd33ec93e140" kindref="member">ruler</ref>.<ref refid="class_ruler_1abd258d34d82c33e51c066e6ecdab724f" kindref="member">GetMaxSize</ref>(&amp;w2,<sp/>&amp;h);</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>w1<sp/>!=<sp/>w2<sp/>)<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reduces<sp/>flicker</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mdBRuler-&gt;SetSize(wxSize(w2,h));</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LayoutEQSliders();</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mFreqRuler-&gt;Refresh(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mdBRuler-&gt;Refresh(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mPanel-&gt;Refresh(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"></highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="layer3_8c_1a4b8bfe70f28d6faddcb10d6ecf8c1989" kindref="member">m</ref><sp/>=<sp/>2<sp/>*<sp/>mMSlider-&gt;GetValue()<sp/>+<sp/>1;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>odd<sp/>numbers<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m<sp/>!=<sp/>mM)<sp/>{</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mM<sp/>=<sp/><ref refid="layer3_8c_1a4b8bfe70f28d6faddcb10d6ecf8c1989" kindref="member">m</ref>;</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ForceRecalc();</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"></highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tip.Printf(wxT(</highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">),<sp/>mM);</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mMText-&gt;SetLabel(tip);</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mMText-&gt;SetName(mMText-&gt;GetLabel());<sp/></highlight><highlight class="comment">//<sp/>fix<sp/>for<sp/>bug<sp/>577<sp/>(NVDA/Narrator<sp/>screen<sp/>readers<sp/>do<sp/>not<sp/>read<sp/>static<sp/>text<sp/>in<sp/>dialogs)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mMSlider-&gt;SetToolTip(tip);</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"></highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1070"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"></highlight></codeline>
<codeline lineno="1072"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EffectEqualization<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1073"><highlight class="normal"></highlight></codeline>
<codeline lineno="1074"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>EffectEqualization::ProcessOne(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref>,<sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>,</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>,<sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>)</highlight></codeline>
<codeline lineno="1076"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>a<sp/>NEW<sp/>WaveTrack<sp/>to<sp/>hold<sp/>all<sp/>of<sp/>the<sp/>output,<sp/>including<sp/>&apos;tails&apos;<sp/>each<sp/>end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_audacity_project" kindref="compound">AudacityProject</ref><sp/>*<ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref><sp/>=<sp/><ref refid="_project_8cpp_1a897aa047b58617a9acc187fc882e3bb4" kindref="member">GetActiveProject</ref>();</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*<ref refid="namespacelv2specgen_1a653e2b7722801dea4d25040ac958b631" kindref="member">output</ref><sp/>=<sp/>p-&gt;<ref refid="class_audacity_project_1a05d3d9ac4cafb63f987d3b2306c9059d" kindref="member">GetTrackFactory</ref>()-&gt;<ref refid="class_track_factory_1ab1cb74f7da7619abac80e7aa5ebaa5f2" kindref="member">NewWaveTrack</ref>(<ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>,<sp/>t-&gt;<ref refid="class_wave_track_1a18bbe6e1bb4b1016c3a3de835c33b8fa" kindref="member">GetRate</ref>());</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"></highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>L<sp/>=<sp/>windowSize<sp/>-<sp/>(mM<sp/>-<sp/>1);<sp/><sp/><sp/></highlight><highlight class="comment">//Process<sp/>L<sp/>samples<sp/>at<sp/>a<sp/>go</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref><sp/>=<sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>;</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>idealBlockLen<sp/>=<sp/>t-&gt;<ref refid="class_wave_track_1a59ca00cf8abf1c28d043effec2866870" kindref="member">GetMaxBlockSize</ref>()<sp/>*<sp/>4;</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(idealBlockLen<sp/>%<sp/>L<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>idealBlockLen<sp/>+=<sp/>(L<sp/>-<sp/>(idealBlockLen<sp/>%<sp/>L));</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"></highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[idealBlockLen];</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"></highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*window1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[windowSize];</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*window2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[windowSize];</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*thisWindow<sp/>=<sp/>window1;</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*lastWindow<sp/>=<sp/>window2;</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>originalLen<sp/>=<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"></highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,j;</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;<sp/>i&lt;windowSize;<sp/>i++)</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lastWindow[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"></highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_effect_1ab24b2dba2e1279c914b0445a1b6129e1" kindref="member">TrackProgress</ref>(count,<sp/>0.);</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bLoopSuccess<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wcopy<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="layer12_8c_1a33d71f23ba2052d17f0b754dc35265b0" kindref="member">offset</ref><sp/>=<sp/>(mM<sp/>-<sp/>1)/2;</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(len)</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="structblock" kindref="compound">block</ref><sp/>=<sp/>idealBlockLen;</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(block<sp/>&gt;<sp/>len)</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block<sp/>=<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"></highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t-&gt;<ref refid="class_wave_track_1a989e55726466fa1d8ec9aa4322f1c950" kindref="member">Get</ref>((<ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref>)buffer,<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>,<sp/>s,<sp/>block);</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;<sp/>i&lt;block;<sp/>i+=L)<sp/><sp/><sp/></highlight><highlight class="comment">//go<sp/>through<sp/>block<sp/>in<sp/>lumps<sp/>of<sp/>length<sp/>L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wcopy<sp/>=<sp/>L;</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>+<sp/>wcopy<sp/>&gt;<sp/>block)<sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>last<sp/>lump<sp/>would<sp/>exceed<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wcopy<sp/>=<sp/>block<sp/>-<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;<sp/><sp/><sp/></highlight><highlight class="comment">//shorten<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;<sp/>j&lt;wcopy;<sp/>j++)</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thisWindow[j]<sp/>=<sp/>buffer[i+j];<sp/><sp/><sp/></highlight><highlight class="comment">//copy<sp/>the<sp/>L<sp/>(or<sp/>remaining)<sp/>samples</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=wcopy;<sp/>j&lt;windowSize;<sp/>j++)</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thisWindow[j]<sp/>=<sp/>0;<sp/><sp/><sp/></highlight><highlight class="comment">//this<sp/>includes<sp/>the<sp/>padding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1122"><highlight class="normal"></highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_filter" kindref="compound">Filter</ref>(windowSize,<sp/>thisWindow);</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"></highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Overlap<sp/>-<sp/>Add</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;<sp/>(j&lt;mM-1)<sp/>&amp;&amp;<sp/>(j&lt;wcopy);<sp/>j++)</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[i+j]<sp/>=<sp/>thisWindow[j]<sp/>+<sp/>lastWindow[L<sp/>+<sp/>j];</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=mM-1;<sp/>j&lt;wcopy;<sp/>j++)</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[i+j]<sp/>=<sp/>thisWindow[j];</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"></highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*tempP<sp/>=<sp/>thisWindow;</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thisWindow<sp/>=<sp/>lastWindow;</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastWindow<sp/>=<sp/>tempP;</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/></highlight><highlight class="comment">//next<sp/>i,<sp/>lump<sp/>of<sp/>this<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1135"><highlight class="normal"></highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>output-&gt;<ref refid="class_wave_track_1adc09591a8d9b92cbbed08d8ccf28bac5" kindref="member">Append</ref>((<ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref>)buffer,<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>,<sp/>block);</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>-=<sp/>block;</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>+=<sp/>block;</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"></highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_effect_1ab24b2dba2e1279c914b0445a1b6129e1" kindref="member">TrackProgress</ref>(count,<sp/>(s-start)/(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)originalLen))</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bLoopSuccess<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"></highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bLoopSuccess)</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mM-1<sp/>samples<sp/>of<sp/>&apos;tail&apos;<sp/>left<sp/>in<sp/>lastWindow,<sp/>get<sp/>them<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(wcopy<sp/>&lt;<sp/>(mM-1))<sp/>{</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Still<sp/>have<sp/>some<sp/>overlap<sp/>left<sp/>to<sp/>process</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(note<sp/>that<sp/>lastWindow<sp/>and<sp/>thisWindow<sp/>have<sp/>been<sp/>exchanged<sp/>at<sp/>this<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>so<sp/>that<sp/>&apos;thisWindow&apos;<sp/>is<sp/>really<sp/>the<sp/>window<sp/>prior<sp/>to<sp/>&apos;lastWindow&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;<sp/>j&lt;mM-1-wcopy;<sp/>j++)</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[j]<sp/>=<sp/>lastWindow[wcopy<sp/>+<sp/>j]<sp/>+<sp/>thisWindow[L<sp/>+<sp/>wcopy<sp/>+<sp/>j];</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>And<sp/>fill<sp/>in<sp/>the<sp/>remainder<sp/>after<sp/>the<sp/>overlap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>;<sp/>j&lt;mM-1;<sp/>j++)</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[j]<sp/>=<sp/>lastWindow[wcopy<sp/>+<sp/>j];</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;<sp/>j&lt;mM-1;<sp/>j++)</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[j]<sp/>=<sp/>lastWindow[wcopy<sp/>+<sp/>j];</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>output-&gt;<ref refid="class_wave_track_1adc09591a8d9b92cbbed08d8ccf28bac5" kindref="member">Append</ref>((<ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref>)buffer,<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>,<sp/>mM-1);</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>output-&gt;<ref refid="class_wave_track_1af2ca2143f5fec142410d26cf064ec37c" kindref="member">Flush</ref>();</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"></highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>move<sp/>the<sp/>appropriate<sp/>bit<sp/>of<sp/>the<sp/>output<sp/>back<sp/>to<sp/>the<sp/>track</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(this<sp/>could<sp/>be<sp/>enhanced<sp/>in<sp/>the<sp/>future<sp/>to<sp/>use<sp/>the<sp/>tails)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>offsetT0<sp/>=<sp/>t-&gt;<ref refid="class_wave_track_1a16171cfb9bd446a6d16e0e5ac1695318" kindref="member">LongSamplesToTime</ref>((<ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref>)offset);</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lenT<sp/>=<sp/>t-&gt;<ref refid="class_wave_track_1a16171cfb9bd446a6d16e0e5ac1695318" kindref="member">LongSamplesToTime</ref>(originalLen);</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&apos;start&apos;<sp/>is<sp/>the<sp/>sample<sp/>offset<sp/>in<sp/>&apos;t&apos;,<sp/>the<sp/>passed<sp/>in<sp/>track</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&apos;startT&apos;<sp/>is<sp/>the<sp/>equivalent<sp/>time<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&apos;output&apos;<sp/>starts<sp/>at<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>startT<sp/>=<sp/>t-&gt;<ref refid="class_wave_track_1a16171cfb9bd446a6d16e0e5ac1695318" kindref="member">LongSamplesToTime</ref>(start);</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//output<sp/>has<sp/>one<sp/>waveclip<sp/>for<sp/>the<sp/>total<sp/>length,<sp/>even<sp/>though</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//t<sp/>might<sp/>have<sp/>whitespace<sp/>seperating<sp/>multiple<sp/>clips</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//we<sp/>want<sp/>to<sp/>maintain<sp/>the<sp/>original<sp/>clip<sp/>structure,<sp/>so</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//only<sp/>paste<sp/>the<sp/>intersections<sp/>of<sp/>the<sp/>NEW<sp/>clip.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1179"><highlight class="normal"></highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Find<sp/>the<sp/>bits<sp/>of<sp/>clips<sp/>that<sp/>need<sp/>replacing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::pair&lt;double,<sp/>double&gt;<sp/>&gt;<sp/>clipStartEndTimes;</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::pair&lt;double,<sp/>double&gt;<sp/>&gt;<sp/>clipRealStartEndTimes;<sp/></highlight><highlight class="comment">//the<sp/>above<sp/>may<sp/>be<sp/>truncated<sp/>due<sp/>to<sp/>a<sp/>clip<sp/>being<sp/>partially<sp/>selected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(WaveClipList::compatibility_iterator<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>=t-&gt;<ref refid="class_wave_track_1a40a351c828128e85e2ba993107b96ef3" kindref="member">GetClipIterator</ref>();<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>;<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>=<ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetNext())</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref><sp/>*clip;</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>clipStartT;</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>clipEndT;</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"></highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clip<sp/>=<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetData();</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clipStartT<sp/>=<sp/>clip-&gt;<ref refid="class_wave_clip_1a839a293df9246f7a9bb6fcf4d8be7b40" kindref="member">GetStartTime</ref>();</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clipEndT<sp/>=<sp/>clip-&gt;<ref refid="class_wave_clip_1a7c878143bdd7641be183325944d02f39" kindref="member">GetEndTime</ref>();</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>clipEndT<sp/>&lt;=<sp/>startT<sp/>)</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clip<sp/>is<sp/>not<sp/>within<sp/>selection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>clipStartT<sp/>&gt;=<sp/>startT<sp/>+<sp/>lenT<sp/>)</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clip<sp/>is<sp/>not<sp/>within<sp/>selection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1196"><highlight class="normal"></highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//save<sp/>the<sp/>actual<sp/>clip<sp/>start/end<sp/>so<sp/>that<sp/>we<sp/>can<sp/>rejoin<sp/>them<sp/>after<sp/>we<sp/>paste.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clipRealStartEndTimes.push_back(std::pair&lt;double,double&gt;(clipStartT,clipEndT));</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"></highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>clipStartT<sp/>&lt;<sp/>startT<sp/>)<sp/><sp/></highlight><highlight class="comment">//<sp/>does<sp/>selection<sp/>cover<sp/>the<sp/>whole<sp/>clip?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clipStartT<sp/>=<sp/>startT;<sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>copy<sp/>all<sp/>the<sp/>NEW<sp/>clip</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>clipEndT<sp/>&gt;<sp/>startT<sp/>+<sp/>lenT<sp/>)<sp/><sp/></highlight><highlight class="comment">//<sp/>does<sp/>selection<sp/>cover<sp/>the<sp/>whole<sp/>clip?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clipEndT<sp/>=<sp/>startT<sp/>+<sp/>lenT;<sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>copy<sp/>all<sp/>the<sp/>NEW<sp/>clip</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1204"><highlight class="normal"></highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//save<sp/>them</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clipStartEndTimes.push_back(std::pair&lt;double,double&gt;(clipStartT,clipEndT));</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//now<sp/>go<sp/>thru<sp/>and<sp/>replace<sp/>the<sp/>old<sp/>clips<sp/>with<sp/>NEW</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;clipStartEndTimes.size();i++)</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*toClipOutput;</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//remove<sp/>the<sp/>old<sp/>audio<sp/>and<sp/>get<sp/>the<sp/>NEW</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t-&gt;<ref refid="class_wave_track_1a0643176c8e3d2b4de917b002af73e0ea" kindref="member">Clear</ref>(clipStartEndTimes[i].first,clipStartEndTimes[i].second);</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output-&gt;<ref refid="class_wave_track_1a80d2c62c76195237b5412fa22aae8b46" kindref="member">Copy</ref>(clipStartEndTimes[i].first-startT+offsetT0,clipStartEndTimes[i].second-startT+offsetT0,<sp/>&amp;toClipOutput);</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(toClipOutput)</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//put<sp/>the<sp/>processed<sp/>audio<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bResult<sp/>=<sp/>t-&gt;<ref refid="class_wave_track_1a98b8e8311e6b12bffd18a16b30302c8b" kindref="member">Paste</ref>(clipStartEndTimes[i].first,<sp/>toClipOutput);</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxASSERT(bResult);<sp/></highlight><highlight class="comment">//<sp/>TO<sp/>DO:<sp/>Actually<sp/>handle<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxUnusedVar(bResult);</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>the<sp/>clip<sp/>was<sp/>only<sp/>partially<sp/>selected,<sp/>the<sp/>Paste<sp/>will<sp/>have<sp/>created<sp/>a<sp/>split<sp/>line.<sp/><sp/>Join<sp/>is<sp/>needed<sp/>to<sp/>take<sp/>care<sp/>of<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//This<sp/>is<sp/>not<sp/>true<sp/>when<sp/>the<sp/>selection<sp/>is<sp/>fully<sp/>contained<sp/>within<sp/>one<sp/>clip<sp/>(second<sp/>half<sp/>of<sp/>conditional)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(clipRealStartEndTimes[i].first<sp/><sp/>!=<sp/>clipStartEndTimes[i].first<sp/>||</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clipRealStartEndTimes[i].second<sp/>!=<sp/>clipStartEndTimes[i].second)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!(clipRealStartEndTimes[i].first<sp/>&lt;=<sp/>startT<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clipRealStartEndTimes[i].second<sp/>&gt;=<sp/>startT+lenT)<sp/>)</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t-&gt;<ref refid="class_wave_track_1a7109457670c515101a52f625c0c14334" kindref="member">Join</ref>(clipRealStartEndTimes[i].first,clipRealStartEndTimes[i].second);</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>toClipOutput;</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"></highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/><ref refid="recplay_8c_1adbbab5cb2248179d231690a1a02ff977" kindref="member">buffer</ref>;</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>window1;</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>window2;</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="namespacelv2specgen_1a653e2b7722801dea4d25040ac958b631" kindref="member">output</ref>;</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"></highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bLoopSuccess;</highlight></codeline>
<codeline lineno="1239"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"></highlight></codeline>
<codeline lineno="1241"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>EffectEqualization::CalcFilter()</highlight></codeline>
<codeline lineno="1242"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>loLog<sp/>=<sp/>log10(mLoFreq);</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>hiLog<sp/>=<sp/>log10(mHiFreq);</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>denom<sp/>=<sp/>hiLog<sp/>-<sp/>loLog;</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"></highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>delta<sp/>=<sp/>mHiFreq<sp/>/<sp/>((double)(mWindowSize/2.));</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val0;</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val1;</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"></highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>IsLinear()<sp/>)</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>val0<sp/>=<sp/>mLinEnvelope-&gt;<ref refid="class_envelope_1ac5729053c923e47b43f0f063845c2ce9" kindref="member">GetValue</ref>(0.0);<sp/><sp/><sp/></highlight><highlight class="comment">//no<sp/>scaling<sp/>required<sp/>-<sp/>saved<sp/>as<sp/>dB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>val1<sp/>=<sp/>mLinEnvelope-&gt;<ref refid="class_envelope_1ac5729053c923e47b43f0f063845c2ce9" kindref="member">GetValue</ref>(1.0);</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>val0<sp/>=<sp/>mLogEnvelope-&gt;<ref refid="class_envelope_1ac5729053c923e47b43f0f063845c2ce9" kindref="member">GetValue</ref>(0.0);<sp/><sp/><sp/></highlight><highlight class="comment">//no<sp/>scaling<sp/>required<sp/>-<sp/>saved<sp/>as<sp/>dB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>val1<sp/>=<sp/>mLogEnvelope-&gt;<ref refid="class_envelope_1ac5729053c923e47b43f0f063845c2ce9" kindref="member">GetValue</ref>(1.0);</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/>mFilterFuncR[0]<sp/>=<sp/>val0;</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>freq<sp/>=<sp/>delta;</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"></highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=1;<sp/>i&lt;=mWindowSize/2;<sp/>i++)</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>when;</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>IsLinear()<sp/>)</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>when<sp/>=<sp/>freq/mHiFreq;</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>when<sp/>=<sp/>(log10(freq)<sp/>-<sp/>loLog)/denom;</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(when<sp/>&lt;<sp/>0.)</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mFilterFuncR[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>val0;</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(when<sp/>&gt;<sp/>1.0)</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mFilterFuncR[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>val1;</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>IsLinear()<sp/>)</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mFilterFuncR[i]<sp/>=<sp/>mLinEnvelope-&gt;<ref refid="class_envelope_1ac5729053c923e47b43f0f063845c2ce9" kindref="member">GetValue</ref>(when);</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mFilterFuncR[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>mLogEnvelope-&gt;<ref refid="class_envelope_1ac5729053c923e47b43f0f063845c2ce9" kindref="member">GetValue</ref>(when);</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>freq<sp/>+=<sp/>delta;</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/>mFilterFuncR[mWindowSize/2]<sp/>=<sp/>val1;</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"></highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/>mFilterFuncR[0]<sp/>=<sp/><ref refid="_audacity_8h_1ae65fedb390ed942548ca02213e6a2813" kindref="member">DB_TO_LINEAR</ref>(mFilterFuncR[0]);</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=1;i&lt;mWindowSize/2;i++)</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mFilterFuncR[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/><ref refid="_audacity_8h_1ae65fedb390ed942548ca02213e6a2813" kindref="member">DB_TO_LINEAR</ref>(mFilterFuncR[i]);</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mFilterFuncR[mWindowSize-<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]=mFilterFuncR[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];<sp/><sp/><sp/></highlight><highlight class="comment">//Fill<sp/>entire<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/>mFilterFuncR[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/><ref refid="_audacity_8h_1ae65fedb390ed942548ca02213e6a2813" kindref="member">DB_TO_LINEAR</ref>(mFilterFuncR[i]);<sp/><sp/><sp/></highlight><highlight class="comment">//do<sp/>last<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1298"><highlight class="normal"></highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//transfer<sp/>to<sp/>time<sp/>domain<sp/>to<sp/>do<sp/>the<sp/>padding<sp/>and<sp/>windowing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*outr<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[mWindowSize];</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*outi<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[mWindowSize];</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_USE_REALFFTF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><ref refid="src_2_f_f_t_8cpp_1a47f4d941ab874bbac2ac000dfd9aef65" kindref="member">InverseRealFFT</ref>(mWindowSize,<sp/>mFilterFuncR,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>outr);<sp/></highlight><highlight class="comment">//<sp/>To<sp/>time<sp/>domain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1304"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><ref refid="src_2_f_f_t_8cpp_1a2e6a370e8fb32b62ccce6a44d05b7d06" kindref="member">FFT</ref>(mWindowSize,</highlight><highlight class="keyword">true</highlight><highlight class="normal">,mFilterFuncR,<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,outr,outi);<sp/><sp/><sp/></highlight><highlight class="comment">//To<sp/>time<sp/>domain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1306"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1307"><highlight class="normal"></highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;=(mM-1)/2;i++)</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/>{<sp/><sp/></highlight><highlight class="comment">//Windowing<sp/>-<sp/>could<sp/>give<sp/>a<sp/>choice,<sp/>fixed<sp/>for<sp/>now<sp/>-<sp/>MJS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>mult=0.54-0.46*cos(2*M_PI*(i+(mM-1)/2.0)/(mM-1));<sp/><sp/><sp/>//Hamming</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Blackman</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mult=0.42-0.5*<ref refid="pffft_8c_1a57a66355e043ccefc17aca9338a2b748" kindref="member">cos</ref>(2*<ref refid="mathematics_8h_1ae71449b1cc6e6250b91f539153a7a0d3" kindref="member">M_PI</ref>*(i+(mM-1)/2.0)/(mM-1))+.08*<ref refid="pffft_8c_1a57a66355e043ccefc17aca9338a2b748" kindref="member">cos</ref>(4*<ref refid="mathematics_8h_1ae71449b1cc6e6250b91f539153a7a0d3" kindref="member">M_PI</ref>*(i+(mM-1)/2.0)/(mM-1));</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outr[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]*=mult;</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i!=0){</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outr[mWindowSize-<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]*=mult;</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(;i&lt;=mWindowSize/2;i++)</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="comment">//Padding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outr[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]=0;</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outr[mWindowSize-<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]=0;</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*tempr<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[mM];</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;(mM-1)/2;i++)</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="comment">//shift<sp/>so<sp/>that<sp/>padding<sp/>on<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tempr[(mM-1)/2+i]=outr[i];</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tempr[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]=outr[mWindowSize-(mM-1)/2+i];</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/>tempr[(mM-1)/2+i]=outr[i];</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"></highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;mM;i++)</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="comment">//and<sp/>copy<sp/>useful<sp/>values<sp/>back</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outr[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]=tempr[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=mM;i&lt;mWindowSize;i++)</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="comment">//rest<sp/>is<sp/>padding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outr[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]=0.;</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"></highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Back<sp/>to<sp/>the<sp/>frequency<sp/>domain<sp/>so<sp/>we<sp/>can<sp/>use<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><ref refid="src_2_f_f_t_8cpp_1a04c380365be207b671ee839633af0e3d" kindref="member">RealFFT</ref>(mWindowSize,outr,mFilterFuncR,mFilterFuncI);</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"></highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>outr;</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>outi;</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>tempr;</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"></highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="1348"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"></highlight></codeline>
<codeline lineno="1350"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectEqualization::Filter(<ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>len,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref>)</highlight></codeline>
<codeline lineno="1351"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>re,im;</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>FFT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><ref refid="_real_f_f_tf_8cpp_1abb12cd04470120d0f8154f4b0175ec92" kindref="member">RealFFTf</ref>(buffer,<sp/>hFFT);</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//FFT(len,<sp/>false,<sp/>inr,<sp/>NULL,<sp/>outr,<sp/>outi);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1357"><highlight class="normal"></highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>filter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DC<sp/>component<sp/>is<sp/>purely<sp/>real</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/>mFFTBuffer[0]<sp/>=<sp/>buffer[0]<sp/>*<sp/>mFilterFuncR[0];</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=1;<sp/>i&lt;(len/2);<sp/>i++)</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>re=buffer[hFFT-&gt;<ref refid="struct_f_f_t_param_1a2dbb35052a4a8d023a83decfc8d97c8a" kindref="member">BitReversed</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/><sp/>];</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>im=buffer[hFFT-&gt;<ref refid="struct_f_f_t_param_1a2dbb35052a4a8d023a83decfc8d97c8a" kindref="member">BitReversed</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]+1];</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mFFTBuffer[2*<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/><sp/>]<sp/>=<sp/>re*mFilterFuncR[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>-<sp/>im*mFilterFuncI[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mFFTBuffer[2*i+1]<sp/>=<sp/>re*mFilterFuncI[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>+<sp/>im*mFilterFuncR[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fs/2<sp/>component<sp/>is<sp/>purely<sp/>real</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/>mFFTBuffer[1]<sp/>=<sp/>buffer[1]<sp/>*<sp/>mFilterFuncR[len/2];</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"></highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Inverse<sp/>FFT<sp/>and<sp/>normalization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><ref refid="_real_f_f_tf_8cpp_1a8ca4ddedc63a09ab210ebf984d616373" kindref="member">InverseRealFFTf</ref>(mFFTBuffer,<sp/>hFFT);</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><ref refid="_real_f_f_tf_8cpp_1aa5ce61e9aa6455ab5703b3c0ce906121" kindref="member">ReorderToTime</ref>(hFFT,<sp/>mFFTBuffer,<sp/>buffer);</highlight></codeline>
<codeline lineno="1374"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"></highlight></codeline>
<codeline lineno="1376"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1377"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Load<sp/>external<sp/>curves<sp/>with<sp/>fallback<sp/>to<sp/>default,<sp/>then<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1378"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1379"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectEqualization::LoadCurves(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;fileName,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>append)</highlight></codeline>
<codeline lineno="1380"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>normal<sp/>curve<sp/>filename</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LLL:<sp/><sp/>Wouldn&apos;t<sp/>you<sp/>know<sp/>that<sp/>as<sp/>of<sp/>WX<sp/>2.6.2,<sp/>there<sp/>is<sp/>a<sp/>conflict</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>between<sp/>wxStandardPaths<sp/>and<sp/>wxConfig<sp/>under<sp/>Linux.<sp/><sp/>The<sp/>latter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>creates<sp/>a<sp/>normal<sp/>file<sp/>as<sp/>&quot;$HOME/.audacity&quot;,<sp/>while<sp/>the<sp/>former</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>expects<sp/>the<sp/>&quot;.audacity&quot;<sp/>portion<sp/>to<sp/>be<sp/>a<sp/>directory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MJS:<sp/><sp/>I<sp/>don&apos;t<sp/>know<sp/>what<sp/>the<sp/>above<sp/>means,<sp/>or<sp/>if<sp/>I<sp/>have<sp/>broken<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/>wxFileName<sp/><ref refid="filters_8h_1af9d9c04c1350b9a6f62c9a09d378b91b" kindref="member">fn</ref>;</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"></highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fileName<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>presets<sp/>are<sp/>up<sp/>to<sp/>date.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/>eqCurvesCurrentVersion<sp/>=<sp/>wxString::Format(wxT(</highlight><highlight class="stringliteral">&quot;%d.%d&quot;</highlight><highlight class="normal">),<sp/><ref refid="_equalization_8cpp_1ae8267842038c7a32f5c84b202c8d1078" kindref="member">EQCURVES_VERSION</ref>,<sp/><ref refid="_equalization_8cpp_1a12aaeb8993c5880d76854c50eed444af" kindref="member">EQCURVES_REVISION</ref>);</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/>eqCurvesInstalledVersion<sp/>=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(wxT(</highlight><highlight class="stringliteral">&quot;/Effects/Equalization/PresetVersion&quot;</highlight><highlight class="normal">),<sp/>&amp;eqCurvesInstalledVersion,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"></highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>needUpdate<sp/>=<sp/>(eqCurvesCurrentVersion<sp/>!=<sp/>eqCurvesInstalledVersion);</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>UpdateDefaultCurves<sp/>allows<sp/>us<sp/>to<sp/>import<sp/>new<sp/>factory<sp/>presets<sp/>only,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>or<sp/>update<sp/>all<sp/>factory<sp/>preset<sp/>curves.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(needUpdate)</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdateDefaultCurves(<sp/><ref refid="_equalization_8cpp_1a5a09d43668bf6dde077f6d66994a1924" kindref="member">UPDATE_ALL</ref><sp/>!=<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fn<sp/>=<sp/>wxFileName(<sp/><ref refid="class_file_names_1a6bf904497b02ca522212443c42945a47" kindref="member">FileNames::DataDir</ref>(),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;EQCurves.xml&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fn<sp/>=<sp/>wxFileName(fileName);<sp/></highlight><highlight class="comment">//<sp/>user<sp/>is<sp/>loading<sp/>a<sp/>specific<sp/>set<sp/>of<sp/>curves</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"></highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>requested<sp/>file<sp/>doesn&apos;t<sp/>exist...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!fn.FileExists()<sp/>&amp;&amp;<sp/>!GetDefaultFileName(fn)<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mCurves.Clear();</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mCurves.Add(<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;unnamed&quot;</highlight><highlight class="normal">)<sp/>);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>still<sp/>need<sp/>a<sp/>default<sp/>curve<sp/>to<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"></highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_e_q_curve" kindref="compound">EQCurve</ref><sp/>tempCustom(wxT(</highlight><highlight class="stringliteral">&quot;temp&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>append<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>)<sp/></highlight><highlight class="comment">//<sp/>Start<sp/>from<sp/>scratch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mCurves.Clear();</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>appending<sp/>so<sp/>copy<sp/>and<sp/>remove<sp/>&apos;unnamed&apos;,<sp/>to<sp/>replace<sp/>later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tempCustom.<ref refid="class_e_q_curve_1a3dacc6899796ffc4386d3c368720f38c" kindref="member">points</ref><sp/>=<sp/>mCurves.Last().points;</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mCurves.RemoveAt(mCurves.Count()-1);</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"></highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>the<sp/>curves</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_x_m_l_file_reader" kindref="compound">XMLFileReader</ref><sp/>reader;</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!reader.<ref refid="class_x_m_l_file_reader_1a00c578f6fa3a9a883ef5ced465404642" kindref="member">Parse</ref>(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>fn.GetFullPath()<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/>msg;</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>i18n-hint:<sp/>EQ<sp/>stands<sp/>for<sp/>&apos;Equalization&apos;.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>msg.Printf(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>Loading<sp/>EQ<sp/>Curves<sp/>from<sp/>file:\n%s\nError<sp/>message<sp/>says:\n%s&quot;</highlight><highlight class="normal">),<sp/>fn.GetFullPath().c_str(),<sp/>reader.<ref refid="class_x_m_l_file_reader_1a923720cb3b6e405d82ccfa8c71b4dc57" kindref="member">GetErrorStr</ref>().c_str());</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Inform<sp/>user<sp/>of<sp/>load<sp/>failure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxMessageBox(<sp/>msg,</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>Loading<sp/>EQ<sp/>Curves&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxOK<sp/>|<sp/>wxCENTRE);</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mCurves.Add(<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;unnamed&quot;</highlight><highlight class="normal">)<sp/>);<sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>always<sp/>need<sp/>a<sp/>default<sp/>curve<sp/>to<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"></highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Move<sp/>&quot;unnamed&quot;<sp/>to<sp/>end,<sp/>if<sp/>it<sp/>exists<sp/>in<sp/>current<sp/>language.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numCurves<sp/>=<sp/>mCurves.GetCount();</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>curve;</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_e_q_curve" kindref="compound">EQCurve</ref><sp/>tempUnnamed(wxT(</highlight><highlight class="stringliteral">&quot;tempUnnamed&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>curve<sp/>=<sp/>0;<sp/>curve<sp/>&lt;<sp/>numCurves-1;<sp/>curve++<sp/>)</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>mCurves[curve].Name<sp/>==<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;unnamed&quot;</highlight><highlight class="normal">)<sp/>)</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempUnnamed.<ref refid="class_e_q_curve_1a3dacc6899796ffc4386d3c368720f38c" kindref="member">points</ref><sp/>=<sp/>mCurves[curve].points;</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mCurves.RemoveAt(curve);</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mCurves.Add(<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;unnamed&quot;</highlight><highlight class="normal">)<sp/>);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>&apos;unnamed&apos;<sp/>back<sp/>at<sp/>the<sp/>end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mCurves.Last().points<sp/>=<sp/>tempUnnamed.<ref refid="class_e_q_curve_1a3dacc6899796ffc4386d3c368720f38c" kindref="member">points</ref>;</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"></highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>mCurves.Last().Name<sp/>!=<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;unnamed&quot;</highlight><highlight class="normal">)<sp/>)</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mCurves.Add(<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;unnamed&quot;</highlight><highlight class="normal">)<sp/>);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>always<sp/>need<sp/>a<sp/>default<sp/>curve<sp/>to<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>append<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mCurves.Last().points<sp/>=<sp/>tempCustom.<ref refid="class_e_q_curve_1a3dacc6899796ffc4386d3c368720f38c" kindref="member">points</ref>;</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"></highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1462"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"></highlight></codeline>
<codeline lineno="1464"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1465"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Update<sp/>presets<sp/>to<sp/>match<sp/>Audacity<sp/>version.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1466"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1467"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectEqualization::UpdateDefaultCurves(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>updateAll<sp/></highlight><highlight class="comment">/*<sp/>false<sp/>*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1468"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mCurves.GetCount()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"></highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>i18n-hint:<sp/>name<sp/>of<sp/>the<sp/>&apos;unnamed&apos;<sp/>custom<sp/>curve<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>unnamed<sp/>=<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;unnamed&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"></highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>the<sp/>&quot;unnamed&quot;<sp/>curve<sp/>and<sp/>remove<sp/>it<sp/>so<sp/>we<sp/>can<sp/>add<sp/>it<sp/>back<sp/>as<sp/>the<sp/>final<sp/>curve.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_e_q_curve" kindref="compound">EQCurve</ref><sp/>userUnnamed(wxT(</highlight><highlight class="stringliteral">&quot;temp&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/>userUnnamed<sp/>=<sp/>mCurves.Last();</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/>mCurves.RemoveAt(mCurves.Count()-1);</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"></highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/>EQCurveArray<sp/>userCurves<sp/>=<sp/>mCurves;</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/>mCurves.Clear();</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>only<sp/>wamt<sp/>to<sp/>look<sp/>for<sp/>the<sp/>shipped<sp/>EQDefaultCurves.xml</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/>wxFileName<sp/><ref refid="filters_8h_1af9d9c04c1350b9a6f62c9a09d378b91b" kindref="member">fn</ref><sp/>=<sp/>wxFileName(wxStandardPaths::Get().GetResourcesDir(),</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxT(</highlight><highlight class="stringliteral">&quot;EQDefaultCurves.xml&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/>wxLogDebug(wxT(</highlight><highlight class="stringliteral">&quot;Attempting<sp/>to<sp/>load<sp/>EQDefaultCurves.xml<sp/>from<sp/>%s&quot;</highlight><highlight class="normal">),wxStandardPaths::Get().GetResourcesDir().c_str());</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_x_m_l_file_reader" kindref="compound">XMLFileReader</ref><sp/>reader;</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"></highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!reader.<ref refid="class_x_m_l_file_reader_1a00c578f6fa3a9a883ef5ced465404642" kindref="member">Parse</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>fn.GetFullPath()))<sp/>{</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxLogError(wxT(</highlight><highlight class="stringliteral">&quot;EQDefaultCurves.xml<sp/>could<sp/>not<sp/>be<sp/>read.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxLogDebug(wxT(</highlight><highlight class="stringliteral">&quot;Loading<sp/>EQDefaultCurves.xml<sp/>successful.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"></highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/>EQCurveArray<sp/>defaultCurves<sp/>=<sp/>mCurves;</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/>mCurves.Clear();<sp/></highlight><highlight class="comment">//<sp/>clear<sp/>now<sp/>so<sp/>that<sp/>we<sp/>can<sp/>sort<sp/>then<sp/>add<sp/>back.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1498"><highlight class="normal"></highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>&quot;unnamed&quot;<sp/>if<sp/>it<sp/>exists.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(defaultCurves.Last().Name<sp/>==<sp/>unnamed)<sp/>{</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>defaultCurves.RemoveAt(defaultCurves.Count()-1);</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxLogError(wxT(</highlight><highlight class="stringliteral">&quot;Error<sp/>in<sp/>EQDefaultCurves.xml&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"></highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numUserCurves<sp/>=<sp/>userCurves.GetCount();</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numDefaultCurves<sp/>=<sp/>defaultCurves.GetCount();</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_e_q_curve" kindref="compound">EQCurve</ref><sp/>tempCurve(wxT(</highlight><highlight class="stringliteral">&quot;test&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"></highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(updateAll)<sp/>{</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>all<sp/>factory<sp/>preset<sp/>curves.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Sort<sp/>and<sp/>add<sp/>factory<sp/>defaults<sp/>first;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mCurves<sp/>=<sp/>defaultCurves;</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mCurves.Sort(SortCurvesByName);</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>then<sp/>add<sp/>remaining<sp/>user<sp/>curves:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>curveCount<sp/>=<sp/>0;<sp/>curveCount<sp/>&lt;<sp/>numUserCurves;<sp/>curveCount++)<sp/>{</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isCustom<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempCurve<sp/>=<sp/>userCurves[curveCount];</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>the<sp/>name<sp/>in<sp/>the<sp/>dfault<sp/>set?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>defCurveCount<sp/>=<sp/>0;<sp/>defCurveCount<sp/>&lt;<sp/>numDefaultCurves;<sp/>defCurveCount++)<sp/>{</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tempCurve.<ref refid="class_e_q_curve_1af8cebcc572f4e40f6dd0dde6d6d49786" kindref="member">Name</ref><sp/>==<sp/>mCurves[defCurveCount].Name)<sp/>{</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isCustom<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>tempCurve<sp/>is<sp/>not<sp/>in<sp/>the<sp/>default<sp/>set,<sp/>add<sp/>it<sp/>to<sp/>mCurves.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isCustom)<sp/>{</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mCurves.Add(tempCurve);</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Import<sp/>new<sp/>factory<sp/>defaults<sp/>but<sp/>retain<sp/>all<sp/>user<sp/>modified<sp/>curves.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>defCurveCount<sp/>=<sp/>0;<sp/>defCurveCount<sp/>&lt;<sp/>numDefaultCurves;<sp/>defCurveCount++)<sp/>{</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isUserCurve<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>if<sp/>the<sp/>curve<sp/>is<sp/>in<sp/>the<sp/>user&apos;s<sp/>set<sp/>(preserve<sp/>user&apos;s<sp/>copy)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>userCurveCount<sp/>=<sp/>0;<sp/>userCurveCount<sp/>&lt;<sp/>numUserCurves;<sp/>userCurveCount++)<sp/>{</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(userCurves[userCurveCount].Name<sp/>==<sp/>defaultCurves[defCurveCount].Name)<sp/>{</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isUserCurve<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mCurves.Add(userCurves[userCurveCount]);</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!isUserCurve)<sp/>{</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mCurves.Add(defaultCurves[defCurveCount]);</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mCurves.Sort(SortCurvesByName);</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>now<sp/>add<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>user&apos;s<sp/>curves.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>userCurveCount<sp/>=<sp/>0;<sp/>userCurveCount<sp/>&lt;<sp/>numUserCurves;<sp/>userCurveCount++)<sp/>{</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isDefaultCurve<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tempCurve<sp/>=<sp/>userCurves[userCurveCount];</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>defCurveCount<sp/>=<sp/>0;<sp/>defCurveCount<sp/>&lt;<sp/>numDefaultCurves;<sp/>defCurveCount++)<sp/>{</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tempCurve.<ref refid="class_e_q_curve_1af8cebcc572f4e40f6dd0dde6d6d49786" kindref="member">Name</ref><sp/>==<sp/>defaultCurves[defCurveCount].Name)<sp/>{</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isDefaultCurve<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!isDefaultCurve)<sp/>{</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mCurves.Add(tempCurve);</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/>defaultCurves.Clear();</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/>userCurves.Clear();</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"></highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>back<sp/>old<sp/>&quot;unnamed&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(userUnnamed.<ref refid="class_e_q_curve_1af8cebcc572f4e40f6dd0dde6d6d49786" kindref="member">Name</ref><sp/>==<sp/>unnamed)<sp/>{</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mCurves.Add(<sp/>userUnnamed<sp/>);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>always<sp/>need<sp/>a<sp/>default<sp/>curve<sp/>to<sp/>use</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"></highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/>SaveCurves();</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"></highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>current<sp/>EqCurve<sp/>version<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Probably<sp/>better<sp/>if<sp/>we<sp/>used<sp/>pluginregistry.cfg</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>eqCurvesCurrentVersion<sp/>=<sp/>wxString::Format(wxT(</highlight><highlight class="stringliteral">&quot;%d.%d&quot;</highlight><highlight class="normal">),<sp/><ref refid="_equalization_8cpp_1ae8267842038c7a32f5c84b202c8d1078" kindref="member">EQCURVES_VERSION</ref>,<sp/><ref refid="_equalization_8cpp_1a12aaeb8993c5880d76854c50eed444af" kindref="member">EQCURVES_REVISION</ref>);</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Write(wxT(</highlight><highlight class="stringliteral">&quot;/Effects/Equalization/PresetVersion&quot;</highlight><highlight class="normal">),<sp/>eqCurvesCurrentVersion);</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Flush();</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"></highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1582"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"></highlight></codeline>
<codeline lineno="1584"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1585"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Get<sp/>fully<sp/>qualified<sp/>filename<sp/>of<sp/>EQDefaultCurves.xml</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1586"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1587"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>EffectEqualization::GetDefaultFileName(wxFileName<sp/>&amp;fileName)</highlight></codeline>
<codeline lineno="1588"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>look<sp/>in<sp/>data<sp/>dir<sp/>first,<sp/>in<sp/>case<sp/>the<sp/>user<sp/>has<sp/>their<sp/>own<sp/>defaults<sp/>(maybe<sp/>downloaded<sp/>ones)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/>fileName<sp/>=<sp/>wxFileName(<sp/><ref refid="class_file_names_1a6bf904497b02ca522212443c42945a47" kindref="member">FileNames::DataDir</ref>(),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;EQDefaultCurves.xml&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!fileName.FileExists()<sp/>)</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>Default<sp/>file<sp/>not<sp/>found<sp/>in<sp/>the<sp/>data<sp/>dir.<sp/><sp/>Fall<sp/>back<sp/>to<sp/>Resources<sp/>dir.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>See<sp/>http://docs.wxwidgets.org/trunk/classwx_standard_paths.html#5514bf6288ee9f5a0acaf065762ad95d</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>wxString<sp/>resourcesDir;</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>resourcesDir<sp/>=<sp/>wxStandardPaths::Get().GetResourcesDir();</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fileName<sp/>=<sp/>wxFileName(<sp/>resourcesDir,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;EQDefaultCurves.xml&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!fileName.FileExists()<sp/>)</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LLL:<sp/><sp/>Is<sp/>there<sp/>really<sp/>a<sp/>need<sp/>for<sp/>an<sp/>error<sp/>message<sp/>at<sp/>all???</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//wxString<sp/>errorMessage;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//errorMessage.Printf(_(&quot;EQCurves.xml<sp/>and<sp/>EQDefaultCurves.xml<sp/>were<sp/>not<sp/>found<sp/>on<sp/>your<sp/>system.\nPlease<sp/>press<sp/>&apos;help&apos;<sp/>to<sp/>visit<sp/>the<sp/>download<sp/>page.\n\nSave<sp/>the<sp/>curves<sp/>at<sp/>%s&quot;),<sp/>FileNames::DataDir().c_str());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ShowErrorDialog(mUIParent,<sp/>_(&quot;EQCurves.xml<sp/>and<sp/>EQDefaultCurves.xml<sp/>missing&quot;),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>errorMessage,<sp/>wxT(&quot;http://wiki.audacityteam.org/wiki/EQCurvesDownload&quot;),<sp/>false);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1605"><highlight class="normal"></highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Have<sp/>another<sp/>go<sp/>at<sp/>finding<sp/>EQCurves.xml<sp/>in<sp/>the<sp/>data<sp/>dir,<sp/>in<sp/>case<sp/>&apos;help&apos;<sp/>helped</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fileName<sp/>=<sp/>wxFileName(<sp/><ref refid="class_file_names_1a6bf904497b02ca522212443c42945a47" kindref="member">FileNames::DataDir</ref>(),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;EQDefaultCurves.xml&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(fileName.FileExists());</highlight></codeline>
<codeline lineno="1610"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"></highlight></codeline>
<codeline lineno="1612"><highlight class="normal"></highlight></codeline>
<codeline lineno="1613"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1614"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Save<sp/>curves<sp/>to<sp/>external<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1615"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1616"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectEqualization::SaveCurves(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;fileName)</highlight></codeline>
<codeline lineno="1617"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/>wxFileName<sp/><ref refid="filters_8h_1af9d9c04c1350b9a6f62c9a09d378b91b" kindref="member">fn</ref>;</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>fileName<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>default<sp/>curve<sp/>filename</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LLL:<sp/><sp/>Wouldn&apos;t<sp/>you<sp/>know<sp/>that<sp/>as<sp/>of<sp/>WX<sp/>2.6.2,<sp/>there<sp/>is<sp/>a<sp/>conflict</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>between<sp/>wxStandardPaths<sp/>and<sp/>wxConfig<sp/>under<sp/>Linux.<sp/><sp/>The<sp/>latter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>creates<sp/>a<sp/>normal<sp/>file<sp/>as<sp/>&quot;$HOME/.audacity&quot;,<sp/>while<sp/>the<sp/>former</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>expects<sp/>the<sp/>&quot;.audacity&quot;<sp/>portion<sp/>to<sp/>be<sp/>a<sp/>directory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fn<sp/>=<sp/>wxFileName(<sp/><ref refid="class_file_names_1a6bf904497b02ca522212443c42945a47" kindref="member">FileNames::DataDir</ref>(),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;EQCurves.xml&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"></highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>directory<sp/>doesn&apos;t<sp/>exist...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!fn.DirExists()<sp/>)</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Attempt<sp/>to<sp/>create<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!fn.Mkdir(<sp/>fn.GetPath(),<sp/>511,<sp/>wxPATH_MKDIR_FULL<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MkDir()<sp/>will<sp/>emit<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fn<sp/>=<sp/>wxFileName(fileName);</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"></highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create/Open<sp/>the<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_x_m_l_file_writer" kindref="compound">XMLFileWriter</ref><sp/>eqFile;</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"></highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eqFile.<ref refid="class_x_m_l_file_writer_1ac29a957aba98be58e7401ffee2ec2082" kindref="member">Open</ref>(<sp/>fn.GetFullPath(),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;wb&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"></highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>the<sp/>curves</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>WriteXML(<sp/>eqFile<sp/>);</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"></highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Close<sp/>the<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>eqFile.<ref refid="class_x_m_l_file_writer_1a3a0d868ea5a8fba069b32b67646af5a9" kindref="member">Close</ref>();</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_x_m_l_file_writer_exception" kindref="compound">XMLFileWriterException</ref><sp/>&amp;exception)</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxMessageBox(wxString::Format(</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Couldn&apos;t<sp/>write<sp/>to<sp/>file<sp/>\&quot;%s\&quot;:<sp/>%s&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn.GetFullPath().c_str(),<sp/>exception.<ref refid="class_x_m_l_file_writer_exception_1a0866105969b12f6d9ab6e21d8210c1a8" kindref="member">GetMessage</ref>().c_str()),</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Error<sp/>Saving<sp/>Equalization<sp/>Curves&quot;</highlight><highlight class="normal">),<sp/>wxICON_ERROR,<sp/><ref refid="class_effect_1a72092c469d5f0e82f16fbac57e38229f" kindref="member">mUIParent</ref>);</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1663"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"></highlight></codeline>
<codeline lineno="1665"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1666"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Make<sp/>the<sp/>passed<sp/>curve<sp/>index<sp/>the<sp/>active<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1667"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1668"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectEqualization::setCurve(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>currentCurve)</highlight></codeline>
<codeline lineno="1669"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>current<sp/>choice</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/>Select(currentCurve);</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/>wxASSERT(<sp/>currentCurve<sp/>&lt;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>mCurves.GetCount()<sp/>);</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"></highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_envelope" kindref="compound">Envelope</ref><sp/>*env;</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numPoints<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)<sp/>mCurves[currentCurve].points.GetCount();</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"></highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mLin)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>linear<sp/>freq<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>env<sp/>=<sp/>mLinEnvelope;</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>log<sp/>freq<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>env<sp/>=<sp/>mLogEnvelope;</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/>env-&gt;<ref refid="class_envelope_1afd222aeb08ec8c091cf576b8bf0c7a3b" kindref="member">Flatten</ref>(0.);</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/>env-&gt;SetTrackLen(1.0);</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"></highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Handle<sp/>special<sp/>case<sp/>of<sp/>no<sp/>points.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numPoints<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ForceRecalc();</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"></highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>when,<sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"></highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Handle<sp/>special<sp/>case<sp/>1<sp/>point.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numPoints<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>only<sp/>one<sp/>point,<sp/>so<sp/>ensure<sp/>it<sp/>is<sp/>in<sp/>range<sp/>then<sp/>return.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>when<sp/>=<sp/>mCurves[currentCurve].points[0].Freq;</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mLin)<sp/>{</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>when<sp/>=<sp/>when<sp/>/<sp/>mHiFreq;</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>log<sp/>scale</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>don&apos;t<sp/>go<sp/>below<sp/>loFreqI<sp/>(20<sp/>Hz)<sp/>in<sp/>log<sp/>view.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>loLog<sp/>=<sp/>log10((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)loFreqI);</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>hiLog<sp/>=<sp/>log10(mHiFreq);</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>denom<sp/>=<sp/>hiLog<sp/>-<sp/>loLog;</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>when<sp/>=<sp/>(log10(<ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">std::max</ref>((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<sp/>loFreqI,<sp/>when))<sp/>-<sp/>loLog)/denom;</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>mCurves[currentCurve].points[0].dB;</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>env-&gt;Insert(<ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">std::min</ref>(1.0,<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">std::max</ref>(0.0,<sp/>when)),<sp/>value);</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ForceRecalc();</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"></highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>have<sp/>at<sp/>least<sp/>two<sp/>points,<sp/>so<sp/>ensure<sp/>they<sp/>are<sp/>in<sp/>frequency<sp/>order.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/>mCurves[currentCurve].points.Sort(SortCurvePoints);</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"></highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mCurves[currentCurve].points[0].Freq<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Corrupt<sp/>or<sp/>invalid<sp/>curve,<sp/>so<sp/>bail.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ForceRecalc();</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"></highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mLin)<sp/>{<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>linear<sp/>Hz<sp/>scale</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pointCount<sp/>=<sp/>0;<sp/>pointCount<sp/>&lt;<sp/>numPoints;<sp/>pointCount++)<sp/>{</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>when<sp/>=<sp/>mCurves[currentCurve].points[pointCount].Freq<sp/>/<sp/>mHiFreq;</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>mCurves[currentCurve].points[pointCount].dB;</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(when<sp/>&lt;=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env-&gt;Insert(when,<sp/>value);</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>There<sp/>are<sp/>more<sp/>points<sp/>at<sp/>higher<sp/>freqs,<sp/>so<sp/>interpolate<sp/>next<sp/>one<sp/>then<sp/>stop.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>when<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lastF<sp/>=<sp/>mCurves[currentCurve].points[pointCount-1].Freq;</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>nextF<sp/>=<sp/>mCurves[currentCurve].points[pointCount].Freq;</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lastDB<sp/>=<sp/>mCurves[currentCurve].points[pointCount-1].dB;</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>nextDB<sp/>=<sp/>mCurves[currentCurve].points[pointCount].dB;</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>lastDB<sp/>+<sp/>((nextDB<sp/>-<sp/>lastDB)<sp/>*<sp/>((mHiFreq<sp/>-<sp/>lastF)<sp/>/<sp/>(nextF<sp/>-<sp/>lastF)));</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env-&gt;Insert(when,<sp/>value);</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>log<sp/>Hz<sp/>scale</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>loLog<sp/>=<sp/>log10((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<sp/>loFreqI);</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>hiLog<sp/>=<sp/>log10(mHiFreq);</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>denom<sp/>=<sp/>hiLog<sp/>-<sp/>loLog;</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>firstAbove20Hz;</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"></highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>log<sp/>scale<sp/>EQ<sp/>starts<sp/>at<sp/>20<sp/>Hz<sp/>(threshold<sp/>of<sp/>hearing).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>find<sp/>the<sp/>first<sp/>point<sp/>(if<sp/>any)<sp/>above<sp/>20<sp/>Hz.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(firstAbove20Hz<sp/>=<sp/>0;<sp/>firstAbove20Hz<sp/>&lt;<sp/>numPoints;<sp/>firstAbove20Hz++)<sp/>{</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mCurves[currentCurve].points[firstAbove20Hz].Freq<sp/>&gt;<sp/>loFreqI)</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"></highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(firstAbove20Hz<sp/>==<sp/>numPoints)<sp/>{</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>All<sp/>points<sp/>below<sp/>20<sp/>Hz,<sp/>so<sp/>just<sp/>use<sp/>final<sp/>point.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>when<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>mCurves[currentCurve].points[numPoints-1].dB;</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env-&gt;Insert(when,<sp/>value);</highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ForceRecalc();</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"></highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(firstAbove20Hz<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>At<sp/>least<sp/>one<sp/>point<sp/>is<sp/>before<sp/>20<sp/>Hz<sp/>and<sp/>there<sp/>are<sp/>more</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>beyond<sp/>20<sp/>Hz,<sp/>so<sp/>interpolate<sp/>the<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>prevF<sp/>=<sp/>mCurves[currentCurve].points[firstAbove20Hz-1].Freq;</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prevF<sp/>=<sp/>log10(<ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">std::max</ref>(1.0,<sp/>prevF));<sp/></highlight><highlight class="comment">//<sp/>log<sp/>zero<sp/>is<sp/>bad.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>prevDB<sp/>=<sp/>mCurves[currentCurve].points[firstAbove20Hz-1].dB;</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>nextF<sp/>=<sp/>log10(mCurves[currentCurve].points[firstAbove20Hz].Freq);</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>nextDB<sp/>=<sp/>mCurves[currentCurve].points[firstAbove20Hz].dB;</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>when<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="1774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>nextDB<sp/>-<sp/>((nextDB<sp/>-<sp/>prevDB)<sp/>*<sp/>((nextF<sp/>-<sp/>loLog)<sp/>/<sp/>(nextF<sp/>-<sp/>prevF)));</highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env-&gt;Insert(when,<sp/>value);</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"></highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>get<sp/>the<sp/>rest.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pointCount<sp/>=<sp/>firstAbove20Hz;<sp/>pointCount<sp/>&lt;<sp/>numPoints;<sp/>pointCount++)</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>flog<sp/>=<sp/>log10(mCurves[currentCurve].points[pointCount].Freq);</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxASSERT(mCurves[currentCurve].points[pointCount].Freq<sp/>&gt;=<sp/>loFreqI);</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"></highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>when<sp/>=<sp/>(flog<sp/>-<sp/>loLog)/denom;</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>mCurves[currentCurve].points[pointCount].dB;</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(when<sp/>&lt;=<sp/>1.0)<sp/>{</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env-&gt;Insert(when,<sp/>value);</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>looks<sp/>weird<sp/>when<sp/>adjusting<sp/>curve<sp/>in<sp/>Draw<sp/>mode<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>there<sp/>is<sp/>a<sp/>point<sp/>off-screen.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1792"><highlight class="normal"></highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1794"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>we<sp/>have<sp/>a<sp/>point<sp/>beyond<sp/>fs/2.<sp/><sp/>Insert<sp/>it<sp/>so<sp/>that<sp/>env<sp/>code<sp/>can<sp/>use<sp/>it.</highlight></codeline>
<codeline lineno="1795"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>but<sp/>just<sp/>this<sp/>one,<sp/>we<sp/>have<sp/>no<sp/>use<sp/>for<sp/>the<sp/>rest</highlight></codeline>
<codeline lineno="1796"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env-&gt;SetTrackLen(when);<sp/>//<sp/>can&apos;t<sp/>Insert<sp/>if<sp/>the<sp/>envelope<sp/>isn&apos;t<sp/>long<sp/>enough</highlight></codeline>
<codeline lineno="1797"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env-&gt;Insert(when,<sp/>value);</highlight></codeline>
<codeline lineno="1798"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight></codeline>
<codeline lineno="1799"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1800"><highlight class="normal"></highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>interpolate<sp/>the<sp/>final<sp/>point<sp/>instead</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>when<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>logLastF<sp/>=<sp/>log10(mCurves[currentCurve].points[pointCount-1].Freq);</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lastDB<sp/>=<sp/>mCurves[currentCurve].points[pointCount-1].dB;</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>lastDB<sp/>+<sp/>((value<sp/>-<sp/>lastDB)<sp/>*<sp/>((log10(mHiFreq)<sp/>-<sp/>logLastF)<sp/>/<sp/>(flog<sp/>-<sp/>logLastF)));</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env-&gt;Insert(when,<sp/>value);</highlight></codeline>
<codeline lineno="1807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/>ForceRecalc();</highlight></codeline>
<codeline lineno="1812"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"></highlight></codeline>
<codeline lineno="1814"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectEqualization::setCurve()</highlight></codeline>
<codeline lineno="1815"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/><sp/>setCurve((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>mCurves.GetCount()-1);</highlight></codeline>
<codeline lineno="1817"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1818"><highlight class="normal"></highlight></codeline>
<codeline lineno="1819"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectEqualization::setCurve(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;curveName)</highlight></codeline>
<codeline lineno="1820"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>mCurves.GetCount();<sp/>i++<sp/>)</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>curveName<sp/>==<sp/>mCurves[<sp/>i<sp/>].Name<sp/>)</highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>i<sp/>==<sp/>mCurves.GetCount())</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxMessageBox(<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Requested<sp/>curve<sp/>not<sp/>found,<sp/>using<sp/>&apos;unnamed&apos;&quot;</highlight><highlight class="normal">),<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Curve<sp/>not<sp/>found&quot;</highlight><highlight class="normal">),<sp/>wxOK|wxICON_ERROR<sp/>);</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setCurve((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>mCurves.GetCount()-1);</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setCurve(<sp/>i<sp/>);</highlight></codeline>
<codeline lineno="1832"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"></highlight></codeline>
<codeline lineno="1834"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1835"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Set<sp/>NEW<sp/>curve<sp/>selection<sp/>(safe<sp/>to<sp/>call<sp/>outside<sp/>of<sp/>the<sp/>UI)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1836"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1837"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectEqualization::Select(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>curve<sp/>)</highlight></codeline>
<codeline lineno="1838"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>current<sp/>choice</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mCurve)</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mCurve-&gt;SetSelection(<sp/>curve<sp/>);</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mCurveName<sp/>=<sp/>mCurves[<sp/>curve<sp/>].Name;</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1845"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"></highlight></codeline>
<codeline lineno="1847"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1848"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Tell<sp/>panel<sp/>to<sp/>recalc<sp/>(safe<sp/>to<sp/>call<sp/>outside<sp/>of<sp/>UI)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1849"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1850"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectEqualization::ForceRecalc()</highlight></codeline>
<codeline lineno="1851"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mPanel)</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mPanel-&gt;<ref refid="class_equalization_panel_1ac6c15ac3c6557e532345999e64c541f9" kindref="member">ForceRecalc</ref>();</highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1856"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"></highlight></codeline>
<codeline lineno="1858"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1859"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Capture<sp/>updated<sp/>envelope</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1860"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1861"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectEqualization::EnvelopeUpdated()</highlight></codeline>
<codeline lineno="1862"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsLinear())</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EnvelopeUpdated(mLinEnvelope,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EnvelopeUpdated(mLogEnvelope,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1871"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"></highlight></codeline>
<codeline lineno="1873"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectEqualization::EnvelopeUpdated(<ref refid="class_envelope" kindref="compound">Envelope</ref><sp/>*env,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>lin)</highlight></codeline>
<codeline lineno="1874"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Allocate<sp/>and<sp/>populate<sp/>point<sp/>arrays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numPoints<sp/>=<sp/>env-&gt;<ref refid="class_envelope_1adfc11a49a3ca8a9a5f4b51ff4131c9c1" kindref="member">GetNumberOfPoints</ref>();</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*when<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[<sp/>numPoints<sp/>];</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[<sp/>numPoints<sp/>];</highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/><sp/>env-&gt;<ref refid="class_envelope_1a43bdb8e0be30685682f11beaf1c051f1" kindref="member">GetPoints</ref>(<sp/>when,<sp/>value,<sp/>numPoints<sp/>);</highlight></codeline>
<codeline lineno="1880"><highlight class="normal"></highlight></codeline>
<codeline lineno="1881"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>the<sp/>unnamed<sp/>curve</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>curve<sp/>=<sp/>mCurves.GetCount()-1;</highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><sp/><sp/><sp/>mCurves[<sp/>curve<sp/>].points.Clear();</highlight></codeline>
<codeline lineno="1884"><highlight class="normal"></highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(lin)</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>and<sp/>convert<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>point;</highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>point<sp/>=<sp/>0;<sp/>point<sp/>&lt;<sp/>numPoints;<sp/>point++<sp/>)</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>freq<sp/>=<sp/>when[<sp/>point<sp/>]<sp/>*<sp/>mHiFreq;</highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>db<sp/>=<sp/>value[<sp/>point<sp/>];</highlight></codeline>
<codeline lineno="1893"><highlight class="normal"></highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>it<sp/>to<sp/>the<sp/>curve</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mCurves[<sp/>curve<sp/>].points.Add(<sp/><ref refid="class_e_q_point" kindref="compound">EQPoint</ref>(<sp/>freq,<sp/>db<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>loLog<sp/>=<sp/>log10(<sp/>20.<sp/>);</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>hiLog<sp/>=<sp/>log10(<sp/>mHiFreq<sp/>);</highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>denom<sp/>=<sp/>hiLog<sp/>-<sp/>loLog;</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"></highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>and<sp/>convert<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>point;</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>point<sp/>=<sp/>0;<sp/>point<sp/>&lt;<sp/>numPoints;<sp/>point++<sp/>)</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>freq<sp/>=<sp/>pow(<sp/>10.,<sp/>(<sp/>(<sp/>when[<sp/>point<sp/>]<sp/>*<sp/>denom<sp/>)<sp/>+<sp/>loLog<sp/>));</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>db<sp/>=<sp/>value[<sp/>point<sp/>];</highlight></codeline>
<codeline lineno="1910"><highlight class="normal"></highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>it<sp/>to<sp/>the<sp/>curve</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mCurves[<sp/>curve<sp/>].points.Add(<sp/><ref refid="class_e_q_point" kindref="compound">EQPoint</ref>(<sp/>freq,<sp/>db<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remember<sp/>that<sp/>we&apos;ve<sp/>updated<sp/>the<sp/>unnamed<sp/>curve</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/><sp/>mDirty<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"></highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>&apos;unnamed&apos;<sp/>as<sp/>the<sp/>selected<sp/>curve</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/><sp/>Select(<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>mCurves.GetCount()-1<sp/>);</highlight></codeline>
<codeline lineno="1920"><highlight class="normal"></highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clean<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>when;</highlight></codeline>
<codeline lineno="1923"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="1924"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1925"><highlight class="normal"></highlight></codeline>
<codeline lineno="1926"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1927"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1928"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1929"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>EffectEqualization::IsLinear()</highlight></codeline>
<codeline lineno="1930"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mDrawMode<sp/>&amp;&amp;<sp/>mLin;</highlight></codeline>
<codeline lineno="1932"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"></highlight></codeline>
<codeline lineno="1934"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1935"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Flatten<sp/>the<sp/>curve</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1936"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1937"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectEqualization::Flatten()</highlight></codeline>
<codeline lineno="1938"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/><sp/>mLogEnvelope-&gt;<ref refid="class_envelope_1afd222aeb08ec8c091cf576b8bf0c7a3b" kindref="member">Flatten</ref>(0.);</highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/><sp/>mLogEnvelope-&gt;<ref refid="class_envelope_1a45f0a9c67e5e9a66acc9debd4bdc6a37" kindref="member">SetTrackLen</ref>(1.0);</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/><sp/>mLinEnvelope-&gt;<ref refid="class_envelope_1afd222aeb08ec8c091cf576b8bf0c7a3b" kindref="member">Flatten</ref>(0.);</highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/><sp/>mLinEnvelope-&gt;<ref refid="class_envelope_1a45f0a9c67e5e9a66acc9debd4bdc6a37" kindref="member">SetTrackLen</ref>(1.0);</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/><sp/>ForceRecalc();</highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!mDrawMode<sp/>)</highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>&lt;<sp/>mBandsInUse;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mSliders[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;SetValue(0);</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mSlidersOld[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mEQVals[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="1951"><highlight class="normal"></highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/>tip;</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>kThirdOct[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>&lt;<sp/>1000.)</highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tip.Printf(<sp/>wxT(</highlight><highlight class="stringliteral">&quot;%dHz\n%.1fdB&quot;</highlight><highlight class="normal">),<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)kThirdOct[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>],<sp/>0.<sp/>);</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tip.Printf(<sp/>wxT(</highlight><highlight class="stringliteral">&quot;%gkHz\n%.1fdB&quot;</highlight><highlight class="normal">),<sp/>kThirdOct[i]/1000.,<sp/>0.<sp/>);</highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mSliders[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;SetToolTip(tip);</highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/><sp/>EnvelopeUpdated();</highlight></codeline>
<codeline lineno="1961"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1962"><highlight class="normal"></highlight></codeline>
<codeline lineno="1963"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1964"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Process<sp/>XML<sp/>tags<sp/>and<sp/>handle<sp/>the<sp/>ones<sp/>we<sp/>recognize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1965"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1966"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>EffectEqualization::HandleXMLTag(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxChar<sp/>*<ref refid="structtag" kindref="compound">tag</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxChar<sp/>**attrs)</highlight></codeline>
<codeline lineno="1967"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>May<sp/>want<sp/>to<sp/>add<sp/>a<sp/>version<sp/>strings...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1969"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!wxStrcmp(<sp/>tag,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;equalizationeffect&quot;</highlight><highlight class="normal">)<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="1970"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1973"><highlight class="normal"></highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Located<sp/>a<sp/>NEW<sp/>curve</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1975"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!wxStrcmp(tag,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;curve&quot;</highlight><highlight class="normal">)<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="1976"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Process<sp/>the<sp/>attributes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>*attrs<sp/>)</highlight></codeline>
<codeline lineno="1979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Cache<sp/>attr/value<sp/>and<sp/>bump<sp/>to<sp/>next</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxChar<sp/>*attr<sp/>=<sp/>*attrs++;</highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxChar<sp/>*<ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref><sp/>=<sp/>*attrs++;</highlight></codeline>
<codeline lineno="1983"><highlight class="normal"></highlight></codeline>
<codeline lineno="1984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>NEW<sp/>curve<sp/>and<sp/>name<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!wxStrcmp(<sp/>attr,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">)<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>strValue<sp/>=<sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_x_m_l_value_checker_1adf2bcfece118875538ca2bdd528b8c23" kindref="member">XMLValueChecker::IsGoodString</ref>(strValue))</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>for<sp/>a<sp/>duplicate<sp/>name<sp/>and<sp/>add<sp/>(n)<sp/>if<sp/>there<sp/>is<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/>strValueTemp<sp/>=<sp/>strValue;</highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>exists;</highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exists<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>&lt;mCurves.GetCount();<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="1998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(n&gt;0)</highlight></codeline>
<codeline lineno="2000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strValueTemp.Printf(wxT(</highlight><highlight class="stringliteral">&quot;%s<sp/>(%d)&quot;</highlight><highlight class="normal">),strValue.c_str(),n);</highlight></codeline>
<codeline lineno="2001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mCurves[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].Name<sp/>==<sp/>strValueTemp)</highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exists<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n++;</highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(exists<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"></highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mCurves.Add(<sp/><ref refid="class_e_q_curve" kindref="compound">EQCurve</ref>(<sp/>strValueTemp<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2014"><highlight class="normal"></highlight></codeline>
<codeline lineno="2015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Tell<sp/>caller<sp/>it<sp/>was<sp/>processed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2017"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2018"><highlight class="normal"></highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Located<sp/>a<sp/>NEW<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!wxStrcmp(<sp/>tag,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;point&quot;</highlight><highlight class="normal">)<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>defaults<sp/>in<sp/>case<sp/>attributes<sp/>are<sp/>missing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1a2530554172d8629149ec56816eeaa947" kindref="member">d</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="2025"><highlight class="normal"></highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Process<sp/>the<sp/>attributes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dblValue;</highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>*attrs<sp/>)</highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Cache<sp/>attr/value<sp/>and<sp/>bump<sp/>to<sp/>next</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxChar<sp/>*attr<sp/>=<sp/>*attrs++;</highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxChar<sp/>*<ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref><sp/>=<sp/>*attrs++;</highlight></codeline>
<codeline lineno="2032"><highlight class="normal"></highlight></codeline>
<codeline lineno="2033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>strValue<sp/>=<sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="2034"><highlight class="normal"></highlight></codeline>
<codeline lineno="2035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>frequency</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!wxStrcmp(<sp/>attr,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;f&quot;</highlight><highlight class="normal">)<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="2037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_x_m_l_value_checker_1adf2bcfece118875538ca2bdd528b8c23" kindref="member">XMLValueChecker::IsGoodString</ref>(strValue)<sp/>||</highlight></codeline>
<codeline lineno="2039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="class_internat_1ab79e779c79e9ddf82270cb78e78d638d" kindref="member">Internat::CompatibleToDouble</ref>(strValue,<sp/>&amp;dblValue))</highlight></codeline>
<codeline lineno="2040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f<sp/>=<sp/>dblValue;</highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>dB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!wxStrcmp(<sp/>attr,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;d&quot;</highlight><highlight class="normal">)<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_x_m_l_value_checker_1adf2bcfece118875538ca2bdd528b8c23" kindref="member">XMLValueChecker::IsGoodString</ref>(strValue)<sp/>||</highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="class_internat_1ab79e779c79e9ddf82270cb78e78d638d" kindref="member">Internat::CompatibleToDouble</ref>(strValue,<sp/>&amp;dblValue))</highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>=<sp/>dblValue;</highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2052"><highlight class="normal"></highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>NEW<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mCurves[<sp/>mCurves.GetCount()<sp/>-<sp/>1<sp/>].points.Add(<sp/><ref refid="class_e_q_point" kindref="compound">EQPoint</ref>(<sp/>f,<sp/>d<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2055"><highlight class="normal"></highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Tell<sp/>caller<sp/>it<sp/>was<sp/>processed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2059"><highlight class="normal"></highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Tell<sp/>caller<sp/>we<sp/>didn&apos;t<sp/>understand<sp/>the<sp/>tag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2062"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2063"><highlight class="normal"></highlight></codeline>
<codeline lineno="2064"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2065"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Return<sp/>handler<sp/>for<sp/>recognized<sp/>tags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2066"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><ref refid="class_x_m_l_tag_handler" kindref="compound">XMLTagHandler</ref><sp/>*EffectEqualization::HandleXMLChild(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxChar<sp/>*tag)</highlight></codeline>
<codeline lineno="2068"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2069"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!wxStrcmp(<sp/>tag,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;equalizationeffect&quot;</highlight><highlight class="normal">)<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="2070"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2072"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2073"><highlight class="normal"></highlight></codeline>
<codeline lineno="2074"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!wxStrcmp(<sp/>tag,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;curve&quot;</highlight><highlight class="normal">)<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="2075"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2077"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2078"><highlight class="normal"></highlight></codeline>
<codeline lineno="2079"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!wxStrcmp(<sp/>tag,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;point&quot;</highlight><highlight class="normal">)<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="2080"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2083"><highlight class="normal"></highlight></codeline>
<codeline lineno="2084"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="2085"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"></highlight></codeline>
<codeline lineno="2087"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2088"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Write<sp/>all<sp/>of<sp/>the<sp/>curves<sp/>to<sp/>the<sp/>XML<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2089"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2090"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectEqualization::WriteXML(<ref refid="class_x_m_l_writer" kindref="compound">XMLWriter</ref><sp/>&amp;xmlFile)</highlight></codeline>
<codeline lineno="2091"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2092"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>our<sp/>heirarchy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a38abb8ecc4a15db0272d43ff8bec1369" kindref="member">StartTag</ref>(<sp/>wxT(<sp/></highlight><highlight class="stringliteral">&quot;equalizationeffect&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2094"><highlight class="normal"></highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>all<sp/>curves</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2096"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numCurves<sp/>=<sp/>mCurves.GetCount();</highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>curve;</highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>curve<sp/>=<sp/>0;<sp/>curve<sp/>&lt;<sp/>numCurves;<sp/>curve++<sp/>)</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>a<sp/>NEW<sp/>curve</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a38abb8ecc4a15db0272d43ff8bec1369" kindref="member">StartTag</ref>(<sp/>wxT(<sp/></highlight><highlight class="stringliteral">&quot;curve&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a631a2d04a50680a64f0ae48a61d4a4d1" kindref="member">WriteAttr</ref>(<sp/>wxT(<sp/></highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal"><sp/>),<sp/>mCurves[<sp/>curve<sp/>].Name<sp/>);</highlight></codeline>
<codeline lineno="2103"><highlight class="normal"></highlight></codeline>
<codeline lineno="2104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>all<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numPoints<sp/>=<sp/>mCurves[<sp/>curve<sp/>].points.GetCount();</highlight></codeline>
<codeline lineno="2106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>point;</highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>point<sp/>=<sp/>0;<sp/>point<sp/>&lt;<sp/>numPoints;<sp/>point++<sp/>)</highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>NEW<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a38abb8ecc4a15db0272d43ff8bec1369" kindref="member">StartTag</ref>(<sp/>wxT(<sp/></highlight><highlight class="stringliteral">&quot;point&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a631a2d04a50680a64f0ae48a61d4a4d1" kindref="member">WriteAttr</ref>(<sp/>wxT(<sp/></highlight><highlight class="stringliteral">&quot;f&quot;</highlight><highlight class="normal"><sp/>),<sp/>mCurves[<sp/>curve<sp/>].points[<sp/>point<sp/>].Freq,<sp/>12<sp/>);</highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a631a2d04a50680a64f0ae48a61d4a4d1" kindref="member">WriteAttr</ref>(<sp/>wxT(<sp/></highlight><highlight class="stringliteral">&quot;d&quot;</highlight><highlight class="normal"><sp/>),<sp/>mCurves[<sp/>curve<sp/>].points[<sp/>point<sp/>].dB,<sp/>12<sp/>);</highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a5c4e63c2c9762b6a04ad4e48bb117678" kindref="member">EndTag</ref>(<sp/>wxT(<sp/></highlight><highlight class="stringliteral">&quot;point&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"></highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Terminate<sp/>curve</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a5c4e63c2c9762b6a04ad4e48bb117678" kindref="member">EndTag</ref>(<sp/>wxT(<sp/></highlight><highlight class="stringliteral">&quot;curve&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2119"><highlight class="normal"></highlight></codeline>
<codeline lineno="2120"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Terminate<sp/>our<sp/>heirarchy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2121"><highlight class="normal"><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a5c4e63c2c9762b6a04ad4e48bb117678" kindref="member">EndTag</ref>(<sp/>wxT(<sp/></highlight><highlight class="stringliteral">&quot;equalizationeffect&quot;</highlight><highlight class="normal"><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="2122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2123"><highlight class="normal"></highlight></codeline>
<codeline lineno="2125"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2126"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>EffectEqualization<sp/>methods<sp/>beyond<sp/>this<sp/>point<sp/>interact<sp/>with<sp/>the<sp/>UI,<sp/>so</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2127"><highlight class="normal"></highlight><highlight class="comment">//<sp/>can&apos;t<sp/>be<sp/>called<sp/>while<sp/>the<sp/>UI<sp/>is<sp/>not<sp/>displayed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2128"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="2130"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2131"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectEqualization::LayoutEQSliders()</highlight></codeline>
<codeline lineno="2132"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2133"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>layout<sp/>the<sp/>Graphic<sp/>EQ<sp/>sliders<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2134"><highlight class="normal"><sp/><sp/><sp/>wxRect<sp/>rulerR<sp/>=<sp/>mFreqRuler-&gt;GetRect();</highlight></codeline>
<codeline lineno="2135"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sliderW<sp/>=<sp/>mSliders[0]-&gt;GetSize().GetWidth();</highlight></codeline>
<codeline lineno="2136"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sliderH<sp/>=<sp/>mGraphicPanel-&gt;GetRect().GetHeight();</highlight></codeline>
<codeline lineno="2137"><highlight class="normal"></highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start<sp/>=<sp/>rulerR.GetLeft()<sp/>-<sp/>(sliderW<sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="2139"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>range<sp/>=<sp/>rulerR.GetWidth();</highlight></codeline>
<codeline lineno="2140"><highlight class="normal"></highlight></codeline>
<codeline lineno="2141"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>loLog<sp/>=<sp/>log10(mLoFreq);</highlight></codeline>
<codeline lineno="2142"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>hiLog<sp/>=<sp/>log10(mHiFreq);</highlight></codeline>
<codeline lineno="2143"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>denom<sp/>=<sp/>hiLog<sp/>-<sp/>loLog;</highlight></codeline>
<codeline lineno="2144"><highlight class="normal"></highlight></codeline>
<codeline lineno="2145"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/>(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/><ref refid="_equalization_8h_1acc848db7792c76f398f7a28e797369c3" kindref="member">NUMBER_OF_BANDS</ref>)<sp/>&amp;&amp;<sp/>(kThirdOct[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>&lt;=<sp/>mHiFreq);<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)</highlight></codeline>
<codeline lineno="2146"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>centre<sp/>of<sp/>this<sp/>slider,<sp/>from<sp/>start</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>posn<sp/>=<sp/>range<sp/>*<sp/>(log10(kThirdOct[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>])<sp/>-<sp/>loLog)<sp/>/<sp/>denom;</highlight></codeline>
<codeline lineno="2149"><highlight class="normal"></highlight></codeline>
<codeline lineno="2150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mSliders[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;SetSize(start<sp/>+<sp/>(posn<sp/>+<sp/>0.5),<sp/>0,<sp/>sliderW,<sp/>sliderH);</highlight></codeline>
<codeline lineno="2151"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2152"><highlight class="normal"></highlight></codeline>
<codeline lineno="2153"><highlight class="normal"><sp/><sp/><sp/>mGraphicPanel-&gt;Refresh();</highlight></codeline>
<codeline lineno="2154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"></highlight></codeline>
<codeline lineno="2156"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectEqualization::UpdateCurves()</highlight></codeline>
<codeline lineno="2157"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2158"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reload<sp/>the<sp/>curve<sp/>names</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/><sp/>mCurve-&gt;Clear();</highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0,<sp/>cnt<sp/>=<sp/>mCurves.GetCount();<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>cnt;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="2161"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mCurve-&gt;Append(mCurves[<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>].Name);</highlight></codeline>
<codeline lineno="2163"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2164"><highlight class="normal"><sp/><sp/><sp/>mCurve-&gt;SetStringSelection(mCurveName);</highlight></codeline>
<codeline lineno="2165"><highlight class="normal"></highlight></codeline>
<codeline lineno="2166"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Allow<sp/>the<sp/>control<sp/>to<sp/>resize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2167"><highlight class="normal"><sp/><sp/><sp/>mCurve-&gt;SetSizeHints(-1,<sp/>-1);</highlight></codeline>
<codeline lineno="2168"><highlight class="normal"></highlight></codeline>
<codeline lineno="2169"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>initial<sp/>curve</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2170"><highlight class="normal"><sp/><sp/><sp/>setCurve(<sp/>mCurveName<sp/>);</highlight></codeline>
<codeline lineno="2171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2172"><highlight class="normal"></highlight></codeline>
<codeline lineno="2173"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectEqualization::UpdateDraw()</highlight></codeline>
<codeline lineno="2174"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2175"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numPoints<sp/>=<sp/>mLogEnvelope-&gt;<ref refid="class_envelope_1adfc11a49a3ca8a9a5f4b51ff4131c9c1" kindref="member">GetNumberOfPoints</ref>();</highlight></codeline>
<codeline lineno="2176"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*when<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[<sp/>numPoints<sp/>];</highlight></codeline>
<codeline lineno="2177"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[<sp/>numPoints<sp/>];</highlight></codeline>
<codeline lineno="2178"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>deltadB<sp/>=<sp/>0.1;</highlight></codeline>
<codeline lineno="2179"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dx,<sp/>dy,<sp/>dx1,<sp/>dy1,<sp/>err;</highlight></codeline>
<codeline lineno="2180"><highlight class="normal"></highlight></codeline>
<codeline lineno="2181"><highlight class="normal"><sp/><sp/><sp/>mLogEnvelope-&gt;<ref refid="class_envelope_1a43bdb8e0be30685682f11beaf1c051f1" kindref="member">GetPoints</ref>(<sp/>when,<sp/>value,<sp/>numPoints<sp/>);</highlight></codeline>
<codeline lineno="2182"><highlight class="normal"></highlight></codeline>
<codeline lineno="2183"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>&apos;unnamed&apos;<sp/>as<sp/>the<sp/>selected<sp/>curve</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2184"><highlight class="normal"><sp/><sp/><sp/>EnvelopeUpdated();</highlight></codeline>
<codeline lineno="2185"><highlight class="normal"></highlight></codeline>
<codeline lineno="2186"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>flag<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2187"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(flag)</highlight></codeline>
<codeline lineno="2188"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>flag<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numDeleted<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mLogEnvelope-&gt;<ref refid="class_envelope_1a43bdb8e0be30685682f11beaf1c051f1" kindref="member">GetPoints</ref>(<sp/>when,<sp/>value,<sp/>numPoints<sp/>);</highlight></codeline>
<codeline lineno="2192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;j&lt;numPoints-2;j++)</highlight></codeline>
<codeline lineno="2193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dx<sp/>=<sp/>when[j+2+numDeleted]<sp/>-<sp/>when[j+numDeleted];</highlight></codeline>
<codeline lineno="2195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dy<sp/>=<sp/>value[j+2+numDeleted]<sp/>-<sp/>value[j+numDeleted];</highlight></codeline>
<codeline lineno="2196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dx1<sp/>=<sp/>when[j+numDeleted+1]<sp/>-<sp/>when[j+numDeleted];</highlight></codeline>
<codeline lineno="2197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dy1<sp/>=<sp/>dy<sp/>*<sp/>dx1<sp/>/<sp/>dx;</highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>fabs(value[j+numDeleted+1]<sp/>-<sp/>(value[j+numDeleted]<sp/>+<sp/>dy1));</highlight></codeline>
<codeline lineno="2199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>err<sp/>&lt;<sp/>deltadB<sp/>)</highlight></codeline>
<codeline lineno="2200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>within<sp/>&lt;<sp/>deltadB<sp/>dB?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLogEnvelope-&gt;<ref refid="class_envelope_1a9f1b3d27d312bc44e97e8b2268bedef8" kindref="member">Delete</ref>(j+1);</highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numPoints--;</highlight></codeline>
<codeline lineno="2203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numDeleted++;</highlight></codeline>
<codeline lineno="2204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flag<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2208"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>when;</highlight></codeline>
<codeline lineno="2209"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="2210"><highlight class="normal"></highlight></codeline>
<codeline lineno="2211"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mLin)<sp/></highlight><highlight class="comment">//<sp/>do<sp/>not<sp/>use<sp/>IsLinear()<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2212"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EnvLogToLin();</highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mEnvelope<sp/>=<sp/>mLinEnvelope;</highlight></codeline>
<codeline lineno="2215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mFreqRuler-&gt;<ref refid="class_ruler_panel_1a07edcc2559cee8311d68fd33ec93e140" kindref="member">ruler</ref>.<ref refid="class_ruler_1aa8ce98e8d2f905e2b53196473e0b57dd" kindref="member">SetLog</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mFreqRuler-&gt;<ref refid="class_ruler_panel_1a07edcc2559cee8311d68fd33ec93e140" kindref="member">ruler</ref>.<ref refid="class_ruler_1ad99f5a5adeeb2ca290a7df7760ded7bc" kindref="member">SetRange</ref>(0,<sp/>mHiFreq);</highlight></codeline>
<codeline lineno="2217"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2218"><highlight class="normal"></highlight></codeline>
<codeline lineno="2219"><highlight class="normal"><sp/><sp/><sp/>szrV-&gt;Show(szrG,</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2220"><highlight class="normal"><sp/><sp/><sp/>szrH-&gt;Show(szrI,</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2221"><highlight class="normal"><sp/><sp/><sp/>szrH-&gt;Show(szrL,</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2222"><highlight class="normal"></highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_effect_1a72092c469d5f0e82f16fbac57e38229f" kindref="member">mUIParent</ref>-&gt;Layout();</highlight></codeline>
<codeline lineno="2224"><highlight class="normal"><sp/><sp/><sp/>wxGetTopLevelParent(<ref refid="class_effect_1a72092c469d5f0e82f16fbac57e38229f" kindref="member">mUIParent</ref>)-&gt;Layout();</highlight></codeline>
<codeline lineno="2225"><highlight class="normal"><sp/><sp/><sp/>ForceRecalc();<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>may<sp/>have<sp/>changed<sp/>slightly<sp/>due<sp/>to<sp/>the<sp/>deletion<sp/>of<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2226"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2227"><highlight class="normal"></highlight></codeline>
<codeline lineno="2228"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectEqualization::UpdateGraphic()</highlight></codeline>
<codeline lineno="2229"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2230"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>loLog<sp/>=<sp/>log10(mLoFreq);</highlight></codeline>
<codeline lineno="2231"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>hiLog<sp/>=<sp/>log10(mHiFreq);</highlight></codeline>
<codeline lineno="2232"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>denom<sp/>=<sp/>hiLog<sp/>-<sp/>loLog;</highlight></codeline>
<codeline lineno="2233"><highlight class="normal"></highlight></codeline>
<codeline lineno="2234"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mLin)<sp/><sp/></highlight><highlight class="comment">//going<sp/>from<sp/>lin<sp/>to<sp/>log<sp/>freq<sp/>scale<sp/>-<sp/>do<sp/>not<sp/>use<sp/>IsLinear()<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2235"><highlight class="normal"><sp/><sp/><sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>some<sp/>extra<sp/>points<sp/>to<sp/>the<sp/>linear<sp/>envelope<sp/>for<sp/>the<sp/>graphic<sp/>to<sp/>follow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>step<sp/>=<sp/>pow(2.,<sp/>1./12.);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>twelve<sp/>steps<sp/>per<sp/>octave</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>when,<ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="2238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>freq=10.;<sp/>freq&lt;mHiFreq;<sp/>freq*=step)</highlight></codeline>
<codeline lineno="2239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>when<sp/>=<sp/>freq/mHiFreq;</highlight></codeline>
<codeline lineno="2241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>mLinEnvelope-&gt;<ref refid="class_envelope_1ac5729053c923e47b43f0f063845c2ce9" kindref="member">GetValue</ref>(when);</highlight></codeline>
<codeline lineno="2242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLinEnvelope-&gt;<ref refid="class_envelope_1aa0d5f77099711f3843108dbce4cf4ed2" kindref="member">Insert</ref>(when,<sp/>value);</highlight></codeline>
<codeline lineno="2243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2244"><highlight class="normal"></highlight></codeline>
<codeline lineno="2245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EnvLinToLog();</highlight></codeline>
<codeline lineno="2246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mEnvelope<sp/>=<sp/>mLogEnvelope;</highlight></codeline>
<codeline lineno="2247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mFreqRuler-&gt;<ref refid="class_ruler_panel_1a07edcc2559cee8311d68fd33ec93e140" kindref="member">ruler</ref>.<ref refid="class_ruler_1aa8ce98e8d2f905e2b53196473e0b57dd" kindref="member">SetLog</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mFreqRuler-&gt;<ref refid="class_ruler_panel_1a07edcc2559cee8311d68fd33ec93e140" kindref="member">ruler</ref>.<ref refid="class_ruler_1ad99f5a5adeeb2ca290a7df7760ded7bc" kindref="member">SetRange</ref>(mLoFreq,<sp/>mHiFreq);</highlight></codeline>
<codeline lineno="2249"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2250"><highlight class="normal"></highlight></codeline>
<codeline lineno="2251"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>mBandsInUse;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="2252"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>kThirdOct[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>==<sp/>mLoFreq<sp/>)</highlight></codeline>
<codeline lineno="2254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mWhenSliders[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="2255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mWhenSliders[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>(log10(kThirdOct[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>])-loLog)/denom;</highlight></codeline>
<codeline lineno="2257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mEQVals[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>mLogEnvelope-&gt;<ref refid="class_envelope_1ac5729053c923e47b43f0f063845c2ce9" kindref="member">GetValue</ref>(mWhenSliders[i]);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//set<sp/>initial<sp/>values<sp/>of<sp/>sliders</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>mEQVals[i]<sp/>&gt;<sp/>20.)</highlight></codeline>
<codeline lineno="2259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mEQVals[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>20.;</highlight></codeline>
<codeline lineno="2260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>mEQVals[i]<sp/>&lt;<sp/>-20.)</highlight></codeline>
<codeline lineno="2261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mEQVals[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>-20.;</highlight></codeline>
<codeline lineno="2262"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2263"><highlight class="normal"><sp/><sp/><sp/>ErrMin();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//move<sp/>sliders<sp/>to<sp/>minimise<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2264"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>mBandsInUse;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="2265"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mSliders[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;SetValue(<ref refid="real_8h_1a01a38abe6848b3731344a2891c357d42" kindref="member">lrint</ref>(mEQVals[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]));<sp/></highlight><highlight class="comment">//actually<sp/>set<sp/>slider<sp/>positions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mSlidersOld[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>mSliders[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;GetValue();</highlight></codeline>
<codeline lineno="2268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/>tip;</highlight></codeline>
<codeline lineno="2269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>kThirdOct[i]<sp/>&lt;<sp/>1000.)</highlight></codeline>
<codeline lineno="2270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tip.Printf(<sp/>wxT(</highlight><highlight class="stringliteral">&quot;%dHz\n%.1fdB&quot;</highlight><highlight class="normal">),<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)kThirdOct[i],<sp/>mEQVals[i]<sp/>);</highlight></codeline>
<codeline lineno="2271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tip.Printf(<sp/>wxT(</highlight><highlight class="stringliteral">&quot;%gkHz\n%.1fdB&quot;</highlight><highlight class="normal">),<sp/>kThirdOct[i]/1000.,<sp/>mEQVals[i]<sp/>);</highlight></codeline>
<codeline lineno="2273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mSliders[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;SetToolTip(tip);</highlight></codeline>
<codeline lineno="2274"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2275"><highlight class="normal"></highlight></codeline>
<codeline lineno="2276"><highlight class="normal"><sp/><sp/><sp/>szrV-&gt;Show(szrG,</highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/><sp/></highlight><highlight class="comment">//<sp/>eq<sp/>sliders</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2277"><highlight class="normal"><sp/><sp/><sp/>szrH-&gt;Show(szrI,</highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/><sp/></highlight><highlight class="comment">//<sp/>interpolation<sp/>choice</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2278"><highlight class="normal"><sp/><sp/><sp/>szrH-&gt;Show(szrL,</highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>linear<sp/>freq<sp/>checkbox</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2279"><highlight class="normal"></highlight></codeline>
<codeline lineno="2280"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_effect_1a72092c469d5f0e82f16fbac57e38229f" kindref="member">mUIParent</ref>-&gt;Layout();</highlight></codeline>
<codeline lineno="2281"><highlight class="normal"><sp/><sp/><sp/>wxGetTopLevelParent(<ref refid="class_effect_1a72092c469d5f0e82f16fbac57e38229f" kindref="member">mUIParent</ref>)-&gt;Layout();</highlight></codeline>
<codeline lineno="2282"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>mUIParent-&gt;Layout();<sp/><sp/><sp/><sp/>//<sp/>Make<sp/>all<sp/>sizers<sp/>get<sp/>resized<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2283"><highlight class="normal"><sp/><sp/><sp/>LayoutEQSliders();<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Then<sp/>layout<sp/>sliders</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2284"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_effect_1a72092c469d5f0e82f16fbac57e38229f" kindref="member">mUIParent</ref>-&gt;Layout();</highlight></codeline>
<codeline lineno="2285"><highlight class="normal"><sp/><sp/><sp/>wxGetTopLevelParent(<ref refid="class_effect_1a72092c469d5f0e82f16fbac57e38229f" kindref="member">mUIParent</ref>)-&gt;Layout();</highlight></codeline>
<codeline lineno="2286"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>mUIParent-&gt;Layout();<sp/><sp/><sp/><sp/>//<sp/>And<sp/>layout<sp/>again<sp/>to<sp/>resize<sp/>dialog</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2287"><highlight class="normal"></highlight></codeline>
<codeline lineno="2288"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2289"><highlight class="normal"><sp/><sp/><sp/>wxSize<sp/>wsz<sp/>=<sp/><ref refid="class_effect_1a72092c469d5f0e82f16fbac57e38229f" kindref="member">mUIParent</ref>-&gt;GetSize();</highlight></codeline>
<codeline lineno="2290"><highlight class="normal"><sp/><sp/><sp/>wxSize<sp/>ssz<sp/>=<sp/>szrV-&gt;GetSize();</highlight></codeline>
<codeline lineno="2291"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ssz.x<sp/>&gt;<sp/>wsz.x<sp/>||<sp/>ssz.y<sp/>&gt;<sp/>wsz.y)</highlight></codeline>
<codeline lineno="2292"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_effect_1a72092c469d5f0e82f16fbac57e38229f" kindref="member">mUIParent</ref>-&gt;Fit();</highlight></codeline>
<codeline lineno="2294"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2295"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2296"><highlight class="normal"><sp/><sp/><sp/>GraphicEQ(mLogEnvelope);</highlight></codeline>
<codeline lineno="2297"><highlight class="normal"><sp/><sp/><sp/>mDrawMode<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2298"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2299"><highlight class="normal"></highlight></codeline>
<codeline lineno="2300"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectEqualization::EnvLogToLin(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2301"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2302"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numPoints<sp/>=<sp/>mLogEnvelope-&gt;<ref refid="class_envelope_1adfc11a49a3ca8a9a5f4b51ff4131c9c1" kindref="member">GetNumberOfPoints</ref>();</highlight></codeline>
<codeline lineno="2303"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>numPoints<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="2304"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2306"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2307"><highlight class="normal"></highlight></codeline>
<codeline lineno="2308"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*when<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[<sp/>numPoints<sp/>];</highlight></codeline>
<codeline lineno="2309"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[<sp/>numPoints<sp/>];</highlight></codeline>
<codeline lineno="2310"><highlight class="normal"></highlight></codeline>
<codeline lineno="2311"><highlight class="normal"><sp/><sp/><sp/>mLinEnvelope-&gt;<ref refid="class_envelope_1afd222aeb08ec8c091cf576b8bf0c7a3b" kindref="member">Flatten</ref>(0.);</highlight></codeline>
<codeline lineno="2312"><highlight class="normal"><sp/><sp/><sp/>mLinEnvelope-&gt;<ref refid="class_envelope_1a45f0a9c67e5e9a66acc9debd4bdc6a37" kindref="member">SetTrackLen</ref>(1.0);</highlight></codeline>
<codeline lineno="2313"><highlight class="normal"><sp/><sp/><sp/>mLogEnvelope-&gt;<ref refid="class_envelope_1a43bdb8e0be30685682f11beaf1c051f1" kindref="member">GetPoints</ref>(<sp/>when,<sp/>value,<sp/>numPoints<sp/>);</highlight></codeline>
<codeline lineno="2314"><highlight class="normal"><sp/><sp/><sp/>mLinEnvelope-&gt;<ref refid="class_envelope_1a5bb5b7edd16d65b896b585e4f9bed968" kindref="member">Move</ref>(0.,<sp/>value[0]);</highlight></codeline>
<codeline lineno="2315"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>loLog<sp/>=<sp/>log10(20.);</highlight></codeline>
<codeline lineno="2316"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>hiLog<sp/>=<sp/>log10(mHiFreq);</highlight></codeline>
<codeline lineno="2317"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>denom<sp/>=<sp/>hiLog<sp/>-<sp/>loLog;</highlight></codeline>
<codeline lineno="2318"><highlight class="normal"></highlight></codeline>
<codeline lineno="2319"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>numPoints;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="2320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mLinEnvelope-&gt;<ref refid="class_envelope_1aa0d5f77099711f3843108dbce4cf4ed2" kindref="member">Insert</ref>(pow(<sp/>10.,<sp/>((when[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>*<sp/>denom)<sp/>+<sp/>loLog))/mHiFreq<sp/>,<sp/>value[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]);</highlight></codeline>
<codeline lineno="2321"><highlight class="normal"><sp/><sp/><sp/>mLinEnvelope-&gt;<ref refid="class_envelope_1a5bb5b7edd16d65b896b585e4f9bed968" kindref="member">Move</ref>(1.,<sp/>value[numPoints-1]);</highlight></codeline>
<codeline lineno="2322"><highlight class="normal"></highlight></codeline>
<codeline lineno="2323"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>when;</highlight></codeline>
<codeline lineno="2324"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="2325"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2326"><highlight class="normal"></highlight></codeline>
<codeline lineno="2327"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectEqualization::EnvLinToLog(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2328"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2329"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numPoints<sp/>=<sp/>mLinEnvelope-&gt;<ref refid="class_envelope_1adfc11a49a3ca8a9a5f4b51ff4131c9c1" kindref="member">GetNumberOfPoints</ref>();</highlight></codeline>
<codeline lineno="2330"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>numPoints<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="2331"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2333"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2334"><highlight class="normal"></highlight></codeline>
<codeline lineno="2335"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*when<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[<sp/>numPoints<sp/>];</highlight></codeline>
<codeline lineno="2336"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[<sp/>numPoints<sp/>];</highlight></codeline>
<codeline lineno="2337"><highlight class="normal"></highlight></codeline>
<codeline lineno="2338"><highlight class="normal"><sp/><sp/><sp/>mLogEnvelope-&gt;<ref refid="class_envelope_1afd222aeb08ec8c091cf576b8bf0c7a3b" kindref="member">Flatten</ref>(0.);</highlight></codeline>
<codeline lineno="2339"><highlight class="normal"><sp/><sp/><sp/>mLogEnvelope-&gt;<ref refid="class_envelope_1a45f0a9c67e5e9a66acc9debd4bdc6a37" kindref="member">SetTrackLen</ref>(1.0);</highlight></codeline>
<codeline lineno="2340"><highlight class="normal"><sp/><sp/><sp/>mLinEnvelope-&gt;<ref refid="class_envelope_1a43bdb8e0be30685682f11beaf1c051f1" kindref="member">GetPoints</ref>(<sp/>when,<sp/>value,<sp/>numPoints<sp/>);</highlight></codeline>
<codeline lineno="2341"><highlight class="normal"><sp/><sp/><sp/>mLogEnvelope-&gt;<ref refid="class_envelope_1a5bb5b7edd16d65b896b585e4f9bed968" kindref="member">Move</ref>(0.,<sp/>value[0]);</highlight></codeline>
<codeline lineno="2342"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>loLog<sp/>=<sp/>log10(20.);</highlight></codeline>
<codeline lineno="2343"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>hiLog<sp/>=<sp/>log10(mHiFreq);</highlight></codeline>
<codeline lineno="2344"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>denom<sp/>=<sp/>hiLog<sp/>-<sp/>loLog;</highlight></codeline>
<codeline lineno="2345"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>changed<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2346"><highlight class="normal"></highlight></codeline>
<codeline lineno="2347"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>numPoints;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="2348"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>when[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]*mHiFreq<sp/>&gt;=<sp/>20<sp/>)</highlight></codeline>
<codeline lineno="2350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Caution:<sp/>on<sp/>Linux,<sp/>when<sp/>when<sp/>==<sp/>20,<sp/>the<sp/>log<sp/>calulation<sp/>rounds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>just<sp/>under<sp/>zero,<sp/>which<sp/>causes<sp/>an<sp/>assert<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>flog<sp/>=<sp/>(log10(when[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]*mHiFreq)-loLog)/denom;</highlight></codeline>
<codeline lineno="2354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLogEnvelope-&gt;<ref refid="class_envelope_1aa0d5f77099711f3843108dbce4cf4ed2" kindref="member">Insert</ref>(<ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">std::max</ref>(0.0,<sp/>flog)<sp/>,<sp/>value[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]);</highlight></codeline>
<codeline lineno="2355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/></highlight><highlight class="comment">//get<sp/>the<sp/>first<sp/>point<sp/>as<sp/>close<sp/>as<sp/>we<sp/>can<sp/>to<sp/>the<sp/>last<sp/>point<sp/>requested</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>changed<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>value[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="2360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLogEnvelope-&gt;<ref refid="class_envelope_1aa0d5f77099711f3843108dbce4cf4ed2" kindref="member">Insert</ref>(0.,<sp/>v);</highlight></codeline>
<codeline lineno="2361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2362"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2363"><highlight class="normal"><sp/><sp/><sp/>mLogEnvelope-&gt;<ref refid="class_envelope_1a5bb5b7edd16d65b896b585e4f9bed968" kindref="member">Move</ref>(1.,<sp/>value[numPoints-1]);</highlight></codeline>
<codeline lineno="2364"><highlight class="normal"></highlight></codeline>
<codeline lineno="2365"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>when;</highlight></codeline>
<codeline lineno="2366"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="2367"><highlight class="normal"></highlight></codeline>
<codeline lineno="2368"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(changed)</highlight></codeline>
<codeline lineno="2369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EnvelopeUpdated(mLogEnvelope,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2370"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2371"><highlight class="normal"></highlight></codeline>
<codeline lineno="2372"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectEqualization::ErrMin(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2373"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2374"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>vals[<ref refid="_equalization_8h_1a3c04b19568bbb4a55aecbabecec45dd2" kindref="member">NUM_PTS</ref>];</highlight></codeline>
<codeline lineno="2375"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="2376"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="2377"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>oldError<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="2378"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mEQValsOld<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="2379"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>correction<sp/>=<sp/>1.6;</highlight></codeline>
<codeline lineno="2380"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>flag;</highlight></codeline>
<codeline lineno="2381"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;</highlight></codeline>
<codeline lineno="2382"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_envelope" kindref="compound">Envelope</ref><sp/>testEnvelope;</highlight></codeline>
<codeline lineno="2383"><highlight class="normal"><sp/><sp/><sp/>testEnvelope.<ref refid="class_envelope_1ad2ed64914b2d02981f892b813c72707f" kindref="member">SetInterpolateDB</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2384"><highlight class="normal"><sp/><sp/><sp/>testEnvelope.<ref refid="class_envelope_1a8dec76fbda8fa4dafacd5053fcd21bfc" kindref="member">Mirror</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2385"><highlight class="normal"><sp/><sp/><sp/>testEnvelope.<ref refid="class_envelope_1aecfc3bd5b11d5b7a8eebdeedaab11e8e" kindref="member">SetRange</ref>(-120.0,<sp/>60.0);</highlight></codeline>
<codeline lineno="2386"><highlight class="normal"><sp/><sp/><sp/>testEnvelope.<ref refid="class_envelope_1afd222aeb08ec8c091cf576b8bf0c7a3b" kindref="member">Flatten</ref>(0.);</highlight></codeline>
<codeline lineno="2387"><highlight class="normal"><sp/><sp/><sp/>testEnvelope.<ref refid="class_envelope_1a45f0a9c67e5e9a66acc9debd4bdc6a37" kindref="member">SetTrackLen</ref>(1.0);</highlight></codeline>
<codeline lineno="2388"><highlight class="normal"><sp/><sp/><sp/>testEnvelope.<ref refid="class_envelope_1a8cd3c5f0d2d7497be273995f757e78da" kindref="member">CopyFrom</ref>(mLogEnvelope,<sp/>0.0,<sp/>1.0);</highlight></codeline>
<codeline lineno="2389"><highlight class="normal"></highlight></codeline>
<codeline lineno="2390"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;<sp/>i<sp/>&lt;<sp/><ref refid="_equalization_8h_1a3c04b19568bbb4a55aecbabecec45dd2" kindref="member">NUM_PTS</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="2391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vals[i]<sp/>=<sp/>testEnvelope.<ref refid="class_envelope_1ac5729053c923e47b43f0f063845c2ce9" kindref="member">GetValue</ref>(mWhens[i]);</highlight></codeline>
<codeline lineno="2392"><highlight class="normal"></highlight></codeline>
<codeline lineno="2393"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>Do<sp/>error<sp/>minimisation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2394"><highlight class="normal"><sp/><sp/><sp/>error<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="2395"><highlight class="normal"><sp/><sp/><sp/>GraphicEQ(&amp;testEnvelope);</highlight></codeline>
<codeline lineno="2396"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;<sp/>i<sp/>&lt;<sp/><ref refid="_equalization_8h_1a3c04b19568bbb4a55aecbabecec45dd2" kindref="member">NUM_PTS</ref>;<sp/>i++)<sp/><sp/><sp/></highlight><highlight class="comment">//calc<sp/>initial<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2397"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>err<sp/>=<sp/>vals[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>-<sp/>testEnvelope.<ref refid="class_envelope_1ac5729053c923e47b43f0f063845c2ce9" kindref="member">GetValue</ref>(mWhens[i]);</highlight></codeline>
<codeline lineno="2399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>+=<sp/>err*err;</highlight></codeline>
<codeline lineno="2400"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2401"><highlight class="normal"><sp/><sp/><sp/>oldError<sp/>=<sp/>error;</highlight></codeline>
<codeline lineno="2402"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>j<sp/>&lt;<sp/>mBandsInUse*12<sp/>)<sp/><sp/></highlight><highlight class="comment">//loop<sp/>over<sp/>the<sp/>sliders<sp/>a<sp/>number<sp/>of<sp/>times</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2403"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>j%mBandsInUse;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//use<sp/>this<sp/>slider</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(j<sp/>&gt;<sp/>0)<sp/>&amp;<sp/>(i<sp/>==<sp/>0)<sp/>)<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>we&apos;ve<sp/>come<sp/>back<sp/>to<sp/>the<sp/>first<sp/>slider<sp/>again...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>correction<sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="2408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>correction<sp/>=<sp/>-correction;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//go<sp/>down</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>correction<sp/>=<sp/>-correction/2.;<sp/><sp/></highlight><highlight class="comment">//go<sp/>up<sp/>half<sp/>as<sp/>much</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>flag<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>we&apos;ve<sp/>hit<sp/>the<sp/>slider<sp/>limit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oldError<sp/>=<sp/>error;</highlight></codeline>
<codeline lineno="2416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mEQValsOld<sp/>=<sp/>mEQVals[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="2417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mEQVals[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>+=<sp/>correction;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//move<sp/>fader<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>mEQVals[i]<sp/>&gt;<sp/>20.<sp/>)</highlight></codeline>
<codeline lineno="2419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mEQVals[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>20.;</highlight></codeline>
<codeline lineno="2421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flag<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>mEQVals[i]<sp/>&lt;<sp/>-20.<sp/>)</highlight></codeline>
<codeline lineno="2424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mEQVals[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>-20.;</highlight></codeline>
<codeline lineno="2426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flag<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GraphicEQ(&amp;testEnvelope);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//calculate<sp/>envelope</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="2430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>=0;<sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref><sp/>&lt;<sp/><ref refid="_equalization_8h_1a3c04b19568bbb4a55aecbabecec45dd2" kindref="member">NUM_PTS</ref>;<sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>++)<sp/><sp/></highlight><highlight class="comment">//calculate<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>err<sp/>=<sp/>vals[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>]<sp/>-<sp/>testEnvelope.<ref refid="class_envelope_1ac5729053c923e47b43f0f063845c2ce9" kindref="member">GetValue</ref>(mWhens[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>]);</highlight></codeline>
<codeline lineno="2433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>+=<sp/>err*err;</highlight></codeline>
<codeline lineno="2434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>(error<sp/>&lt;<sp/>oldError)<sp/>&amp;<sp/>flag<sp/>);</highlight></codeline>
<codeline lineno="2437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>error<sp/>&gt;<sp/>oldError<sp/>)</highlight></codeline>
<codeline lineno="2438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mEQVals[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>mEQValsOld;<sp/><sp/><sp/></highlight><highlight class="comment">//last<sp/>one<sp/>didn&apos;t<sp/>work</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>oldError;</highlight></codeline>
<codeline lineno="2441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oldError<sp/>=<sp/>error;</highlight></codeline>
<codeline lineno="2444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>error<sp/>&lt;<sp/>.0025<sp/>*<sp/>mBandsInUse)</highlight></codeline>
<codeline lineno="2445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>close<sp/>enuff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>j++;<sp/><sp/></highlight><highlight class="comment">//try<sp/>next<sp/>slider</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2447"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2448"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>error<sp/>&gt;<sp/>.0025<sp/>*<sp/>mBandsInUse<sp/>)<sp/></highlight><highlight class="comment">//<sp/>not<sp/>within<sp/>0.05dB<sp/>on<sp/>each<sp/>slider,<sp/>on<sp/>average</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2449"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Select(<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>mCurves.GetCount()-1<sp/>);</highlight></codeline>
<codeline lineno="2451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EnvelopeUpdated(&amp;testEnvelope,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2452"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2453"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2454"><highlight class="normal"></highlight></codeline>
<codeline lineno="2455"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectEqualization::GraphicEQ(<ref refid="class_envelope" kindref="compound">Envelope</ref><sp/>*env)</highlight></codeline>
<codeline lineno="2456"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2457"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>JKC:<sp/>&apos;value&apos;<sp/>is<sp/>for<sp/>height<sp/>of<sp/>curve.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2458"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>0.0<sp/>initial<sp/>value<sp/>would<sp/>only<sp/>get<sp/>used<sp/>if<sp/>NUM_PTS<sp/>were<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2459"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="2460"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_scripting_1ade42ef48015fcded2eb15f341967ff47" kindref="member">dist</ref>,<sp/>span,<sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>;</highlight></codeline>
<codeline lineno="2461"><highlight class="normal"></highlight></codeline>
<codeline lineno="2462"><highlight class="normal"><sp/><sp/><sp/>env-&gt;<ref refid="class_envelope_1afd222aeb08ec8c091cf576b8bf0c7a3b" kindref="member">Flatten</ref>(0.);</highlight></codeline>
<codeline lineno="2463"><highlight class="normal"><sp/><sp/><sp/>env-&gt;<ref refid="class_envelope_1a45f0a9c67e5e9a66acc9debd4bdc6a37" kindref="member">SetTrackLen</ref>(1.0);</highlight></codeline>
<codeline lineno="2464"><highlight class="normal"></highlight></codeline>
<codeline lineno="2465"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<sp/>mInterp<sp/>)</highlight></codeline>
<codeline lineno="2466"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2467"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_equalization_8cpp_1a671f746774a3e3e4b9315ee9fc7eaf3aaa46e4fdcc138a549e384640823b4b360" kindref="member">kBspline</ref>:<sp/><sp/></highlight><highlight class="comment">//<sp/>B-spline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minF<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>&lt;<ref refid="_equalization_8h_1a3c04b19568bbb4a55aecbabecec45dd2" kindref="member">NUM_PTS</ref>;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="2471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>(mWhenSliders[minF]<sp/>&lt;=<sp/>mWhens[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>])<sp/>&amp;<sp/>(minF<sp/>&lt;<sp/>mBandsInUse)<sp/>)</highlight></codeline>
<codeline lineno="2473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minF++;</highlight></codeline>
<codeline lineno="2474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minF--;</highlight></codeline>
<codeline lineno="2475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>minF<sp/>&lt;<sp/>0<sp/>)<sp/></highlight><highlight class="comment">//before<sp/>first<sp/>slider</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dist<sp/>=<sp/>mWhens[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>-<sp/>mWhenSliders[0];</highlight></codeline>
<codeline lineno="2478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>span<sp/>=<sp/>mWhenSliders[1]<sp/>-<sp/>mWhenSliders[0];</highlight></codeline>
<codeline lineno="2479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>dist/span;</highlight></codeline>
<codeline lineno="2480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>s<sp/>&lt;<sp/>-1.5<sp/>)</highlight></codeline>
<codeline lineno="2481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="2482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>s<sp/>&lt;<sp/>-.5<sp/>)</highlight></codeline>
<codeline lineno="2483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>mEQVals[0]*(s<sp/>+<sp/>1.5)*(s<sp/>+<sp/>1.5)/2.;</highlight></codeline>
<codeline lineno="2484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>mEQVals[0]*(.75<sp/>-<sp/>s*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>)<sp/>+<sp/>mEQVals[1]*(s<sp/>+<sp/>.5)*(s<sp/>+<sp/>.5)/2.;</highlight></codeline>
<codeline lineno="2486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>mWhens[i]<sp/>&gt;<sp/>mWhenSliders[mBandsInUse-1]<sp/>)<sp/><sp/><sp/></highlight><highlight class="comment">//after<sp/>last<sp/>fader</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dist<sp/>=<sp/>mWhens[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>-<sp/>mWhenSliders[mBandsInUse-1];</highlight></codeline>
<codeline lineno="2492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>span<sp/>=<sp/>mWhenSliders[mBandsInUse-1]<sp/>-<sp/>mWhenSliders[mBandsInUse-2];</highlight></codeline>
<codeline lineno="2493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>dist/span;</highlight></codeline>
<codeline lineno="2494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>s<sp/>&gt;<sp/>1.5<sp/>)</highlight></codeline>
<codeline lineno="2495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="2496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>s<sp/>&gt;<sp/>.5<sp/>)</highlight></codeline>
<codeline lineno="2497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>mEQVals[mBandsInUse-1]*(s<sp/>-<sp/>1.5)*(s<sp/>-<sp/>1.5)/2.;</highlight></codeline>
<codeline lineno="2498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>mEQVals[mBandsInUse-1]*(.75<sp/>-<sp/>s*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>)<sp/>+</highlight></codeline>
<codeline lineno="2500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mEQVals[mBandsInUse-2]*(s<sp/>-<sp/>.5)*(s<sp/>-<sp/>.5)/2.;</highlight></codeline>
<codeline lineno="2501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//normal<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dist<sp/>=<sp/>mWhens[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>-<sp/>mWhenSliders[minF];</highlight></codeline>
<codeline lineno="2505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>span<sp/>=<sp/>mWhenSliders[minF+1]<sp/>-<sp/>mWhenSliders[minF];</highlight></codeline>
<codeline lineno="2506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>dist/span;</highlight></codeline>
<codeline lineno="2507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(s<sp/>&lt;<sp/>.5<sp/>)</highlight></codeline>
<codeline lineno="2508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>mEQVals[minF]*(0.75<sp/>-<sp/>s*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>);</highlight></codeline>
<codeline lineno="2510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>minF+1<sp/>&lt;<sp/>mBandsInUse<sp/>)</highlight></codeline>
<codeline lineno="2511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>+=<sp/>mEQVals[minF+1]*(s+.5)*(s+.5)/2.;</highlight></codeline>
<codeline lineno="2512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>minF-1<sp/>&gt;=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="2513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>+=<sp/>mEQVals[minF-1]*(s-.5)*(s-.5)/2.;</highlight></codeline>
<codeline lineno="2514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>mEQVals[minF]*(s-1.5)*(s-1.5)/2.;</highlight></codeline>
<codeline lineno="2518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>minF+1<sp/>&lt;<sp/>mBandsInUse<sp/>)</highlight></codeline>
<codeline lineno="2519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>+=<sp/>mEQVals[minF+1]*(.75-(1.-<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>)*(1.-s));</highlight></codeline>
<codeline lineno="2520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>minF+2<sp/>&lt;<sp/>mBandsInUse<sp/>)</highlight></codeline>
<codeline lineno="2521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>+=<sp/>mEQVals[minF+2]*(s-.5)*(s-.5)/2.;</highlight></codeline>
<codeline lineno="2522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mWhens[i]&lt;=0.)</highlight></codeline>
<codeline lineno="2526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env-&gt;<ref refid="class_envelope_1a5bb5b7edd16d65b896b585e4f9bed968" kindref="member">Move</ref>(<sp/>0.,<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="2527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env-&gt;<ref refid="class_envelope_1aa0d5f77099711f3843108dbce4cf4ed2" kindref="member">Insert</ref>(<sp/>mWhens[i],<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="2528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env-&gt;<ref refid="class_envelope_1a5bb5b7edd16d65b896b585e4f9bed968" kindref="member">Move</ref>(<sp/>1.,<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="2530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2532"><highlight class="normal"></highlight></codeline>
<codeline lineno="2533"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_equalization_8cpp_1a671f746774a3e3e4b9315ee9fc7eaf3aaa160b4c3dcdb22ac16fe192d1904a049" kindref="member">kCosine</ref>:<sp/><sp/></highlight><highlight class="comment">//<sp/>Cosine<sp/>squared</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minF<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>&lt;<ref refid="_equalization_8h_1a3c04b19568bbb4a55aecbabecec45dd2" kindref="member">NUM_PTS</ref>;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="2537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>(mWhenSliders[minF]<sp/>&lt;=<sp/>mWhens[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>])<sp/>&amp;<sp/>(minF<sp/>&lt;<sp/>mBandsInUse)<sp/>)</highlight></codeline>
<codeline lineno="2539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minF++;</highlight></codeline>
<codeline lineno="2540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minF--;</highlight></codeline>
<codeline lineno="2541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>minF<sp/>&lt;<sp/>0<sp/>)<sp/></highlight><highlight class="comment">//before<sp/>first<sp/>slider</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dist<sp/>=<sp/>mWhenSliders[0]<sp/>-<sp/>mWhens[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="2544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>span<sp/>=<sp/>mWhenSliders[1]<sp/>-<sp/>mWhenSliders[0];</highlight></codeline>
<codeline lineno="2545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>dist<sp/>&lt;<sp/>span<sp/>)</highlight></codeline>
<codeline lineno="2546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>mEQVals[0]*(1.<sp/>+<sp/><ref refid="pffft_8c_1a57a66355e043ccefc17aca9338a2b748" kindref="member">cos</ref>(<ref refid="mathematics_8h_1ae71449b1cc6e6250b91f539153a7a0d3" kindref="member">M_PI</ref>*dist/span))/2.;</highlight></codeline>
<codeline lineno="2547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="2549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>mWhens[i]<sp/>&gt;<sp/>mWhenSliders[mBandsInUse-1]<sp/>)<sp/><sp/><sp/></highlight><highlight class="comment">//after<sp/>last<sp/>fader</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>span<sp/>=<sp/>mWhenSliders[mBandsInUse-1]<sp/>-<sp/>mWhenSliders[mBandsInUse-2];</highlight></codeline>
<codeline lineno="2555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dist<sp/>=<sp/>mWhens[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>-<sp/>mWhenSliders[mBandsInUse-1];</highlight></codeline>
<codeline lineno="2556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>dist<sp/>&lt;<sp/>span<sp/>)</highlight></codeline>
<codeline lineno="2557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>mEQVals[mBandsInUse-1]*(1.<sp/>+<sp/><ref refid="pffft_8c_1a57a66355e043ccefc17aca9338a2b748" kindref="member">cos</ref>(<ref refid="mathematics_8h_1ae71449b1cc6e6250b91f539153a7a0d3" kindref="member">M_PI</ref>*dist/span))/2.;</highlight></codeline>
<codeline lineno="2558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="2560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//normal<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>span<sp/>=<sp/>mWhenSliders[minF+1]<sp/>-<sp/>mWhenSliders[minF];</highlight></codeline>
<codeline lineno="2564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dist<sp/>=<sp/>mWhenSliders[minF+1]<sp/>-<sp/>mWhens[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="2565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>mEQVals[minF]*(1.<sp/>+<sp/><ref refid="pffft_8c_1a57a66355e043ccefc17aca9338a2b748" kindref="member">cos</ref>(<ref refid="mathematics_8h_1ae71449b1cc6e6250b91f539153a7a0d3" kindref="member">M_PI</ref>*(span-dist)/span))/2.<sp/>+</highlight></codeline>
<codeline lineno="2566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mEQVals[minF+1]*(1.<sp/>+<sp/><ref refid="pffft_8c_1a57a66355e043ccefc17aca9338a2b748" kindref="member">cos</ref>(<ref refid="mathematics_8h_1ae71449b1cc6e6250b91f539153a7a0d3" kindref="member">M_PI</ref>*dist/span))/2.;</highlight></codeline>
<codeline lineno="2567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mWhens[i]&lt;=0.)</highlight></codeline>
<codeline lineno="2570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env-&gt;<ref refid="class_envelope_1a5bb5b7edd16d65b896b585e4f9bed968" kindref="member">Move</ref>(<sp/>0.,<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="2571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env-&gt;<ref refid="class_envelope_1aa0d5f77099711f3843108dbce4cf4ed2" kindref="member">Insert</ref>(<sp/>mWhens[i],<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="2572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env-&gt;<ref refid="class_envelope_1a5bb5b7edd16d65b896b585e4f9bed968" kindref="member">Move</ref>(<sp/>1.,<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="2574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2576"><highlight class="normal"></highlight></codeline>
<codeline lineno="2577"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_equalization_8cpp_1a671f746774a3e3e4b9315ee9fc7eaf3aa49f7e2a4145afb40a6eba4ad063a2b01" kindref="member">kCubic</ref>:<sp/><sp/></highlight><highlight class="comment">//<sp/>Cubic<sp/>Spline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y2[<ref refid="_equalization_8h_1acc848db7792c76f398f7a28e797369c3" kindref="member">NUMBER_OF_BANDS</ref>+1];</highlight></codeline>
<codeline lineno="2580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mEQVals[mBandsInUse]<sp/>=<sp/>mEQVals[mBandsInUse-1];</highlight></codeline>
<codeline lineno="2581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spline(mWhenSliders,<sp/>mEQVals,<sp/>mBandsInUse+1,<sp/>y2);</highlight></codeline>
<codeline lineno="2582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xf=0;<sp/>xf&lt;1.;<sp/>xf+=1./<ref refid="_equalization_8h_1a3c04b19568bbb4a55aecbabecec45dd2" kindref="member">NUM_PTS</ref>)</highlight></codeline>
<codeline lineno="2583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env-&gt;<ref refid="class_envelope_1aa0d5f77099711f3843108dbce4cf4ed2" kindref="member">Insert</ref>(xf,<sp/>splint(mWhenSliders,<sp/>mEQVals,<sp/>mBandsInUse+1,<sp/>y2,<sp/>xf));</highlight></codeline>
<codeline lineno="2585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2588"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2589"><highlight class="normal"></highlight></codeline>
<codeline lineno="2590"><highlight class="normal"><sp/><sp/><sp/>ForceRecalc();</highlight></codeline>
<codeline lineno="2591"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2592"><highlight class="normal"></highlight></codeline>
<codeline lineno="2593"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectEqualization::spline(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>[],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y2[])</highlight></codeline>
<codeline lineno="2594"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2595"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="2596"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>,<sp/>sig,<sp/>*u<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[n];</highlight></codeline>
<codeline lineno="2597"><highlight class="normal"></highlight></codeline>
<codeline lineno="2598"><highlight class="normal"><sp/><sp/><sp/>y2[0]<sp/>=<sp/>0.;<sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2599"><highlight class="normal"><sp/><sp/><sp/>u[0]<sp/>=<sp/>0.;<sp/><sp/><sp/></highlight><highlight class="comment">//&apos;natural&apos;<sp/>boundary<sp/>conditions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2600"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=1;i&lt;n-1;i++)</highlight></codeline>
<codeline lineno="2601"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sig<sp/>=<sp/>(<sp/>x[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>-<sp/>x[i-1]<sp/>)<sp/>/<sp/>(<sp/>x[i+1]<sp/>-<sp/>x[i-1]<sp/>);</highlight></codeline>
<codeline lineno="2603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>sig<sp/>*<sp/>y2[i-1]<sp/>+<sp/>2.;</highlight></codeline>
<codeline lineno="2604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y2[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>(sig<sp/>-<sp/>1.)/<ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="2605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>u[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>(<sp/>y[i+1]<sp/>-<sp/>y[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>)<sp/>/<sp/>(<sp/>x[i+1]<sp/>-<sp/>x[i]<sp/>)<sp/>-<sp/>(<sp/>y[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>-<sp/>y[i-1]<sp/>)<sp/>/<sp/>(<sp/>x[i]<sp/>-<sp/>x[i-1]<sp/>);</highlight></codeline>
<codeline lineno="2606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>u[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>(6.*u[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]/(<sp/>x[i+1]<sp/>-<sp/>x[i-1]<sp/>)<sp/>-<sp/>sig<sp/>*<sp/>u[i-1])<sp/>/<sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="2607"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2608"><highlight class="normal"><sp/><sp/><sp/>y2[n-1]<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="2609"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=n-2;i&gt;=0;i--)</highlight></codeline>
<codeline lineno="2610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y2[i]<sp/>=<sp/>y2[i]*y2[i+1]<sp/>+<sp/>u[i];</highlight></codeline>
<codeline lineno="2611"><highlight class="normal"></highlight></codeline>
<codeline lineno="2612"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>u;</highlight></codeline>
<codeline lineno="2613"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2614"><highlight class="normal"></highlight></codeline>
<codeline lineno="2615"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>EffectEqualization::splint(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x[],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y2[],<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>xr)</highlight></codeline>
<codeline lineno="2616"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2617"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>,<sp/><ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>,<sp/>h;</highlight></codeline>
<codeline lineno="2618"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="xlftab_8c_1a2070b82b42fc387c0fa2fc032063dc2d" kindref="member">xlast</ref><sp/>=<sp/>0.;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>remember<sp/>last<sp/>x<sp/>value<sp/>requested</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2619"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref><sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>which<sp/>interval<sp/>we<sp/>were<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2620"><highlight class="normal"></highlight></codeline>
<codeline lineno="2621"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>xr<sp/>&lt;<sp/>xlast<sp/>)</highlight></codeline>
<codeline lineno="2622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>gone<sp/>back<sp/>to<sp/>start,<sp/>(or<sp/>somewhere<sp/>to<sp/>the<sp/>left)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2623"><highlight class="normal"><sp/><sp/><sp/>xlast<sp/>=<sp/>xr;</highlight></codeline>
<codeline lineno="2624"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>(x[k]<sp/>&lt;=<sp/>xr)<sp/>&amp;&amp;<sp/>(k<sp/>&lt;<sp/>n-1)<sp/>)</highlight></codeline>
<codeline lineno="2625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>k++;</highlight></codeline>
<codeline lineno="2626"><highlight class="normal"><sp/><sp/><sp/>k--;</highlight></codeline>
<codeline lineno="2627"><highlight class="normal"><sp/><sp/><sp/>h<sp/>=<sp/>x[k+1]<sp/>-<sp/>x[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>];</highlight></codeline>
<codeline lineno="2628"><highlight class="normal"><sp/><sp/><sp/>a<sp/>=<sp/>(<sp/>x[k+1]<sp/>-<sp/>xr<sp/>)/h;</highlight></codeline>
<codeline lineno="2629"><highlight class="normal"><sp/><sp/><sp/>b<sp/>=<sp/>(xr<sp/>-<sp/>x[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>])/h;</highlight></codeline>
<codeline lineno="2630"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<sp/>a*y[k]+b*y[k+1]+((a*a*a-a)*y2[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>]+(b*b*b-<ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>)*y2[k+1])*h*h/6.);</highlight></codeline>
<codeline lineno="2631"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2632"><highlight class="normal"></highlight></codeline>
<codeline lineno="2633"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectEqualization::OnSize(wxSizeEvent<sp/>&amp;<sp/>event)</highlight></codeline>
<codeline lineno="2634"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2635"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_effect_1a72092c469d5f0e82f16fbac57e38229f" kindref="member">mUIParent</ref>-&gt;Layout();</highlight></codeline>
<codeline lineno="2636"><highlight class="normal"></highlight></codeline>
<codeline lineno="2637"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mDrawMode)</highlight></codeline>
<codeline lineno="2638"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>LayoutEQSliders();</highlight></codeline>
<codeline lineno="2640"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2641"><highlight class="normal"></highlight></codeline>
<codeline lineno="2642"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.Skip();</highlight></codeline>
<codeline lineno="2643"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2644"><highlight class="normal"></highlight></codeline>
<codeline lineno="2645"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectEqualization::OnErase(wxEraseEvent<sp/>&amp;<sp/>WXUNUSED(event))</highlight></codeline>
<codeline lineno="2646"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2647"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ignore<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2648"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2649"><highlight class="normal"></highlight></codeline>
<codeline lineno="2650"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectEqualization::OnSlider(wxCommandEvent<sp/>&amp;<sp/>event)</highlight></codeline>
<codeline lineno="2651"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2652"><highlight class="normal"><sp/><sp/><sp/>wxSlider<sp/>*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref><sp/>=<sp/>(wxSlider<sp/>*)event.GetEventObject();</highlight></codeline>
<codeline lineno="2653"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>mBandsInUse;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="2654"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>s<sp/>==<sp/>mSliders[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>])</highlight></codeline>
<codeline lineno="2656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>posn<sp/>=<sp/>mSliders[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;GetValue();</highlight></codeline>
<codeline lineno="2658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><ref refid="window_8cpp_1a82a18ac43492bfb375604c41b71ce84f" kindref="member">wxGetKeyState</ref>(WXK_SHIFT)<sp/>)</highlight></codeline>
<codeline lineno="2659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>posn<sp/>&gt;<sp/>mSlidersOld[i]<sp/>)</highlight></codeline>
<codeline lineno="2661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mEQVals[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>+=<sp/>(float).1;</highlight></codeline>
<codeline lineno="2662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>posn<sp/>&lt;<sp/>mSlidersOld[i]<sp/>)</highlight></codeline>
<codeline lineno="2664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mEQVals[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>-=<sp/>.1f;</highlight></codeline>
<codeline lineno="2665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mEQVals[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>+=<sp/>(posn<sp/>-<sp/>mSlidersOld[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]);</highlight></codeline>
<codeline lineno="2668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>mEQVals[i]<sp/>&gt;<sp/>20.<sp/>)</highlight></codeline>
<codeline lineno="2669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mEQVals[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>20.;</highlight></codeline>
<codeline lineno="2670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>mEQVals[i]<sp/>&lt;<sp/>-20.<sp/>)</highlight></codeline>
<codeline lineno="2671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mEQVals[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>-20.;</highlight></codeline>
<codeline lineno="2672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newPosn<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)mEQVals[i];</highlight></codeline>
<codeline lineno="2673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mSliders[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;SetValue(<sp/>newPosn<sp/>);</highlight></codeline>
<codeline lineno="2674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mSlidersOld[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>newPosn;</highlight></codeline>
<codeline lineno="2675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/>tip;</highlight></codeline>
<codeline lineno="2676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>kThirdOct[i]<sp/>&lt;<sp/>1000.)</highlight></codeline>
<codeline lineno="2677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tip.Printf(<sp/>wxT(</highlight><highlight class="stringliteral">&quot;%dHz\n%.1fdB&quot;</highlight><highlight class="normal">),<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)kThirdOct[i],<sp/>mEQVals[i]<sp/>);</highlight></codeline>
<codeline lineno="2678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tip.Printf(<sp/>wxT(</highlight><highlight class="stringliteral">&quot;%gkHz\n%.1fdB&quot;</highlight><highlight class="normal">),<sp/>kThirdOct[i]/1000.,<sp/>mEQVals[i]<sp/>);</highlight></codeline>
<codeline lineno="2680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;SetToolTip(tip);</highlight></codeline>
<codeline lineno="2681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2683"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2684"><highlight class="normal"><sp/><sp/><sp/>GraphicEQ(mLogEnvelope);</highlight></codeline>
<codeline lineno="2685"><highlight class="normal"><sp/><sp/><sp/>EnvelopeUpdated();</highlight></codeline>
<codeline lineno="2686"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2687"><highlight class="normal"></highlight></codeline>
<codeline lineno="2688"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectEqualization::OnInterp(wxCommandEvent<sp/>&amp;<sp/>WXUNUSED(event))</highlight></codeline>
<codeline lineno="2689"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2690"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mGraphic-&gt;GetValue())</highlight></codeline>
<codeline lineno="2691"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GraphicEQ(mLogEnvelope);</highlight></codeline>
<codeline lineno="2693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EnvelopeUpdated();</highlight></codeline>
<codeline lineno="2694"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2695"><highlight class="normal"><sp/><sp/><sp/>mInterp<sp/>=<sp/>mInterpChoice-&gt;GetSelection();</highlight></codeline>
<codeline lineno="2696"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2697"><highlight class="normal"></highlight></codeline>
<codeline lineno="2698"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectEqualization::OnDrawMode(wxCommandEvent<sp/>&amp;<sp/>WXUNUSED(event))</highlight></codeline>
<codeline lineno="2699"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2700"><highlight class="normal"><sp/><sp/><sp/>UpdateDraw();</highlight></codeline>
<codeline lineno="2701"><highlight class="normal"></highlight></codeline>
<codeline lineno="2702"><highlight class="normal"><sp/><sp/><sp/>mDrawMode<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2703"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2704"><highlight class="normal"></highlight></codeline>
<codeline lineno="2705"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectEqualization::OnGraphicMode(wxCommandEvent<sp/>&amp;<sp/>WXUNUSED(event))</highlight></codeline>
<codeline lineno="2706"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2707"><highlight class="normal"><sp/><sp/><sp/>UpdateGraphic();</highlight></codeline>
<codeline lineno="2708"><highlight class="normal"></highlight></codeline>
<codeline lineno="2709"><highlight class="normal"><sp/><sp/><sp/>mDrawMode<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2710"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2711"><highlight class="normal"></highlight></codeline>
<codeline lineno="2712"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectEqualization::OnSliderM(wxCommandEvent<sp/>&amp;<sp/>WXUNUSED(event))</highlight></codeline>
<codeline lineno="2713"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2714"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_effect_equalization_1a5f6741452d8e743492b94bd529870887" kindref="member">TransferDataFromWindow</ref>();</highlight></codeline>
<codeline lineno="2715"><highlight class="normal"><sp/><sp/><sp/>ForceRecalc();</highlight></codeline>
<codeline lineno="2716"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2717"><highlight class="normal"></highlight></codeline>
<codeline lineno="2718"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectEqualization::OnSliderDBMIN(wxCommandEvent<sp/>&amp;<sp/>WXUNUSED(event))</highlight></codeline>
<codeline lineno="2719"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2720"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_effect_equalization_1a5f6741452d8e743492b94bd529870887" kindref="member">TransferDataFromWindow</ref>();</highlight></codeline>
<codeline lineno="2721"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2722"><highlight class="normal"></highlight></codeline>
<codeline lineno="2723"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectEqualization::OnSliderDBMAX(wxCommandEvent<sp/>&amp;<sp/>WXUNUSED(event))</highlight></codeline>
<codeline lineno="2724"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2725"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_effect_equalization_1a5f6741452d8e743492b94bd529870887" kindref="member">TransferDataFromWindow</ref>();</highlight></codeline>
<codeline lineno="2726"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2727"><highlight class="normal"></highlight></codeline>
<codeline lineno="2728"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2729"><highlight class="normal"></highlight><highlight class="comment">//<sp/>New<sp/>curve<sp/>was<sp/>selected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2730"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2731"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectEqualization::OnCurve(wxCommandEvent<sp/>&amp;<sp/>WXUNUSED(event))</highlight></codeline>
<codeline lineno="2732"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2733"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Select<sp/>NEW<sp/>curve</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2734"><highlight class="normal"><sp/><sp/><sp/>setCurve(<sp/>mCurve-&gt;GetCurrentSelection()<sp/>);</highlight></codeline>
<codeline lineno="2735"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!mDrawMode<sp/>)</highlight></codeline>
<codeline lineno="2736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>UpdateGraphic();</highlight></codeline>
<codeline lineno="2737"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2738"><highlight class="normal"></highlight></codeline>
<codeline lineno="2739"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2740"><highlight class="normal"></highlight><highlight class="comment">//<sp/>User<sp/>wants<sp/>to<sp/>modify<sp/>the<sp/>list<sp/>in<sp/>some<sp/>way</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2741"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2742"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectEqualization::OnManage(wxCommandEvent<sp/>&amp;<sp/>WXUNUSED(event))</highlight></codeline>
<codeline lineno="2743"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2744"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_edit_curves_dialog" kindref="compound">EditCurvesDialog</ref><sp/><ref refid="poly-fir_8h_1a2530554172d8629149ec56816eeaa947" kindref="member">d</ref>(<ref refid="class_effect_1a72092c469d5f0e82f16fbac57e38229f" kindref="member">mUIParent</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>mCurve-&gt;GetSelection());</highlight></codeline>
<codeline lineno="2745"><highlight class="normal"><sp/><sp/><sp/><ref refid="poly-fir_8h_1a2530554172d8629149ec56816eeaa947" kindref="member">d</ref>.ShowModal();</highlight></codeline>
<codeline lineno="2746"><highlight class="normal"></highlight></codeline>
<codeline lineno="2747"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reload<sp/>the<sp/>curve<sp/>names</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2748"><highlight class="normal"><sp/><sp/><sp/>UpdateCurves();</highlight></codeline>
<codeline lineno="2749"><highlight class="normal"></highlight></codeline>
<codeline lineno="2750"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Allow<sp/>control<sp/>to<sp/>resize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2751"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_effect_1a72092c469d5f0e82f16fbac57e38229f" kindref="member">mUIParent</ref>-&gt;Layout();</highlight></codeline>
<codeline lineno="2752"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2753"><highlight class="normal"></highlight></codeline>
<codeline lineno="2754"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectEqualization::OnClear(wxCommandEvent<sp/>&amp;<sp/>WXUNUSED(event))</highlight></codeline>
<codeline lineno="2755"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2756"><highlight class="normal"><sp/><sp/><sp/>Flatten();</highlight></codeline>
<codeline lineno="2757"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2758"><highlight class="normal"></highlight></codeline>
<codeline lineno="2759"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectEqualization::OnInvert(wxCommandEvent<sp/>&amp;<sp/>WXUNUSED(event))<sp/></highlight><highlight class="comment">//<sp/>Inverts<sp/>any<sp/>curve</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2760"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2761"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!mDrawMode)<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Graphic<sp/>(Slider)<sp/>mode.<sp/>Invert<sp/>the<sp/>sliders.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2762"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>mBandsInUse;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="2764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mEQVals[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>-mEQVals[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="2766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newPosn<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)mEQVals[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="2767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mSliders[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;SetValue(<sp/>newPosn<sp/>);</highlight></codeline>
<codeline lineno="2768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mSlidersOld[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>newPosn;</highlight></codeline>
<codeline lineno="2769"><highlight class="normal"></highlight></codeline>
<codeline lineno="2770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/>tip;</highlight></codeline>
<codeline lineno="2771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>kThirdOct[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>&lt;<sp/>1000.)</highlight></codeline>
<codeline lineno="2772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tip.Printf(<sp/>wxT(</highlight><highlight class="stringliteral">&quot;%dHz\n%.1fdB&quot;</highlight><highlight class="normal">),<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)kThirdOct[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>],<sp/>mEQVals[i]<sp/>);</highlight></codeline>
<codeline lineno="2773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tip.Printf(<sp/>wxT(</highlight><highlight class="stringliteral">&quot;%gkHz\n%.1fdB&quot;</highlight><highlight class="normal">),<sp/>kThirdOct[i]/1000.,<sp/>mEQVals[i]<sp/>);</highlight></codeline>
<codeline lineno="2775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mSliders[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-&gt;SetToolTip(tip);</highlight></codeline>
<codeline lineno="2776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GraphicEQ(mLogEnvelope);</highlight></codeline>
<codeline lineno="2778"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2779"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>mode.<sp/><sp/>Invert<sp/>the<sp/>points.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2780"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>lin<sp/>=<sp/>IsLinear();<sp/></highlight><highlight class="comment">//<sp/>refers<sp/>to<sp/>the<sp/>&apos;log&apos;<sp/>or<sp/>&apos;lin&apos;<sp/>of<sp/>the<sp/>frequency<sp/>scale,<sp/>not<sp/>the<sp/>amplitude</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numPoints;<sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>points<sp/>in<sp/>the<sp/>curve/envelope</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2783"><highlight class="normal"></highlight></codeline>
<codeline lineno="2784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>determine<sp/>if<sp/>log<sp/>or<sp/>lin<sp/>curve<sp/>is<sp/>the<sp/>current<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>find<sp/>out<sp/>how<sp/>many<sp/>points<sp/>are<sp/>in<sp/>the<sp/>curve</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(lin)<sp/><sp/></highlight><highlight class="comment">//<sp/>lin<sp/>freq<sp/>scale<sp/>and<sp/>so<sp/>envelope</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numPoints<sp/>=<sp/>mLinEnvelope-&gt;<ref refid="class_envelope_1adfc11a49a3ca8a9a5f4b51ff4131c9c1" kindref="member">GetNumberOfPoints</ref>();</highlight></codeline>
<codeline lineno="2789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numPoints<sp/>=<sp/>mLogEnvelope-&gt;<ref refid="class_envelope_1adfc11a49a3ca8a9a5f4b51ff4131c9c1" kindref="member">GetNumberOfPoints</ref>();</highlight></codeline>
<codeline lineno="2793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2794"><highlight class="normal"></highlight></codeline>
<codeline lineno="2795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>numPoints<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="2796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2797"><highlight class="normal"></highlight></codeline>
<codeline lineno="2798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*when<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[<sp/>numPoints<sp/>];</highlight></codeline>
<codeline lineno="2799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[<sp/>numPoints<sp/>];</highlight></codeline>
<codeline lineno="2800"><highlight class="normal"></highlight></codeline>
<codeline lineno="2801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(lin)</highlight></codeline>
<codeline lineno="2802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLinEnvelope-&gt;<ref refid="class_envelope_1a43bdb8e0be30685682f11beaf1c051f1" kindref="member">GetPoints</ref>(<sp/>when,<sp/>value,<sp/>numPoints<sp/>);</highlight></codeline>
<codeline lineno="2803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLogEnvelope-&gt;<ref refid="class_envelope_1a43bdb8e0be30685682f11beaf1c051f1" kindref="member">GetPoints</ref>(<sp/>when,<sp/>value,<sp/>numPoints<sp/>);</highlight></codeline>
<codeline lineno="2805"><highlight class="normal"></highlight></codeline>
<codeline lineno="2806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>invert<sp/>the<sp/>curve</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>numPoints;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="2808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(lin)</highlight></codeline>
<codeline lineno="2810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLinEnvelope-&gt;<ref refid="class_envelope_1a5bb5b7edd16d65b896b585e4f9bed968" kindref="member">Move</ref>(when[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>,<sp/>-value[i]);</highlight></codeline>
<codeline lineno="2811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLogEnvelope-&gt;<ref refid="class_envelope_1a5bb5b7edd16d65b896b585e4f9bed968" kindref="member">Move</ref>(when[i]<sp/>,<sp/>-value[i]);</highlight></codeline>
<codeline lineno="2813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2814"><highlight class="normal"></highlight></codeline>
<codeline lineno="2815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>when;</highlight></codeline>
<codeline lineno="2816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="2817"><highlight class="normal"></highlight></codeline>
<codeline lineno="2818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>it<sp/>back<sp/>to<sp/>the<sp/>other<sp/>one<sp/>(just<sp/>in<sp/>case)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(lin)</highlight></codeline>
<codeline lineno="2820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EnvLinToLog();</highlight></codeline>
<codeline lineno="2821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EnvLogToLin();</highlight></codeline>
<codeline lineno="2823"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2824"><highlight class="normal"></highlight></codeline>
<codeline lineno="2825"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>update<sp/>the<sp/>display<sp/>etc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2826"><highlight class="normal"><sp/><sp/><sp/>ForceRecalc();</highlight></codeline>
<codeline lineno="2827"><highlight class="normal"><sp/><sp/><sp/>EnvelopeUpdated();</highlight></codeline>
<codeline lineno="2828"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2829"><highlight class="normal"></highlight></codeline>
<codeline lineno="2830"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectEqualization::OnGridOnOff(wxCommandEvent<sp/>&amp;<sp/>WXUNUSED(event))</highlight></codeline>
<codeline lineno="2831"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2832"><highlight class="normal"><sp/><sp/><sp/>mDrawGrid<sp/>=<sp/>mGridOnOff-&gt;IsChecked();</highlight></codeline>
<codeline lineno="2833"><highlight class="normal"><sp/><sp/><sp/>mPanel-&gt;Refresh(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2834"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2835"><highlight class="normal"></highlight></codeline>
<codeline lineno="2836"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectEqualization::OnLinFreq(wxCommandEvent<sp/>&amp;<sp/>WXUNUSED(event))</highlight></codeline>
<codeline lineno="2837"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2838"><highlight class="normal"><sp/><sp/><sp/>mLin<sp/>=<sp/>mLinFreq-&gt;IsChecked();</highlight></codeline>
<codeline lineno="2839"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(IsLinear())<sp/><sp/></highlight><highlight class="comment">//going<sp/>from<sp/>log<sp/>to<sp/>lin<sp/>freq<sp/>scale</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2840"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mFreqRuler-&gt;<ref refid="class_ruler_panel_1a07edcc2559cee8311d68fd33ec93e140" kindref="member">ruler</ref>.<ref refid="class_ruler_1aa8ce98e8d2f905e2b53196473e0b57dd" kindref="member">SetLog</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mFreqRuler-&gt;<ref refid="class_ruler_panel_1a07edcc2559cee8311d68fd33ec93e140" kindref="member">ruler</ref>.<ref refid="class_ruler_1ad99f5a5adeeb2ca290a7df7760ded7bc" kindref="member">SetRange</ref>(0,<sp/>mHiFreq);</highlight></codeline>
<codeline lineno="2843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EnvLogToLin();</highlight></codeline>
<codeline lineno="2844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mEnvelope<sp/>=<sp/>mLinEnvelope;</highlight></codeline>
<codeline lineno="2845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mLin<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2846"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2847"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//going<sp/>from<sp/>lin<sp/>to<sp/>log<sp/>freq<sp/>scale</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2848"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mFreqRuler-&gt;<ref refid="class_ruler_panel_1a07edcc2559cee8311d68fd33ec93e140" kindref="member">ruler</ref>.<ref refid="class_ruler_1aa8ce98e8d2f905e2b53196473e0b57dd" kindref="member">SetLog</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mFreqRuler-&gt;<ref refid="class_ruler_panel_1a07edcc2559cee8311d68fd33ec93e140" kindref="member">ruler</ref>.<ref refid="class_ruler_1ad99f5a5adeeb2ca290a7df7760ded7bc" kindref="member">SetRange</ref>(mLoFreq,<sp/>mHiFreq);</highlight></codeline>
<codeline lineno="2851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EnvLinToLog();</highlight></codeline>
<codeline lineno="2852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mEnvelope<sp/>=<sp/>mLogEnvelope;</highlight></codeline>
<codeline lineno="2853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mLin<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2854"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2855"><highlight class="normal"><sp/><sp/><sp/>mFreqRuler-&gt;Refresh(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2856"><highlight class="normal"><sp/><sp/><sp/>ForceRecalc();</highlight></codeline>
<codeline lineno="2857"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2858"><highlight class="normal"></highlight></codeline>
<codeline lineno="2859"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_EQ_SSE_THREADED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2860"><highlight class="normal"></highlight></codeline>
<codeline lineno="2861"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectEqualization::OnProcessingRadio(wxCommandEvent<sp/>&amp;<sp/>event)</highlight></codeline>
<codeline lineno="2862"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2863"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>testEvent=</highlight><highlight class="keyword">event</highlight><highlight class="normal">.GetId();</highlight></codeline>
<codeline lineno="2864"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(testEvent)</highlight></codeline>
<codeline lineno="2865"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2866"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>defaultMathRadioID:<sp/>EffectEqualization48x::SetMathPath(MATH_FUNCTION_ORIGINAL);</highlight></codeline>
<codeline lineno="2867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2868"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>sSERadioID:<sp/>EffectEqualization48x::SetMathPath(MATH_FUNCTION_SSE);</highlight></codeline>
<codeline lineno="2869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2870"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>sSEThreadedRadioID:<sp/>EffectEqualization48x::SetMathPath(MATH_FUNCTION_THREADED<sp/>|<sp/>MATH_FUNCTION_SSE);</highlight></codeline>
<codeline lineno="2871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2872"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>aVXRadioID:<sp/>testEvent=2;</highlight></codeline>
<codeline lineno="2873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2874"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>aVXThreadedRadioID:<sp/>testEvent=2;</highlight></codeline>
<codeline lineno="2875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2876"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2877"><highlight class="normal"></highlight></codeline>
<codeline lineno="2878"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2879"><highlight class="normal"></highlight></codeline>
<codeline lineno="2880"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectEqualization::OnBench(<sp/>wxCommandEvent<sp/>&amp;<sp/>event)</highlight></codeline>
<codeline lineno="2881"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2882"><highlight class="normal"><sp/><sp/><sp/>m_pEffect-&gt;mBench=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2883"><highlight class="normal"><sp/><sp/><sp/>OnOk(event);</highlight></codeline>
<codeline lineno="2884"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2885"><highlight class="normal"></highlight></codeline>
<codeline lineno="2886"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2887"><highlight class="normal"></highlight></codeline>
<codeline lineno="2888"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2889"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EqualizationPanel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2890"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2891"><highlight class="normal"></highlight></codeline>
<codeline lineno="2892"><highlight class="normal">BEGIN_EVENT_TABLE(<ref refid="class_equalization_panel" kindref="compound">EqualizationPanel</ref>,<sp/>wxPanel)</highlight></codeline>
<codeline lineno="2893"><highlight class="normal"><sp/><sp/><sp/>EVT_PAINT(EqualizationPanel::OnPaint)</highlight></codeline>
<codeline lineno="2894"><highlight class="normal"><sp/><sp/><sp/>EVT_MOUSE_EVENTS(EqualizationPanel::OnMouseEvent)</highlight></codeline>
<codeline lineno="2895"><highlight class="normal"><sp/><sp/><sp/>EVT_MOUSE_CAPTURE_LOST(EqualizationPanel::OnCaptureLost)</highlight></codeline>
<codeline lineno="2896"><highlight class="normal"><sp/><sp/><sp/>EVT_SIZE(EqualizationPanel::OnSize)</highlight></codeline>
<codeline lineno="2897"><highlight class="normal"><ref refid="_batch_command_dialog_8cpp_1a8c3469324b3e5d3e6c44c23a418ab937" kindref="member">END_EVENT_TABLE</ref>()</highlight></codeline>
<codeline lineno="2898"><highlight class="normal"></highlight></codeline>
<codeline lineno="2899" refid="class_equalization_panel_1a3eb73ccb04f015d80c9256a2ddbb34ef" refkind="member"><highlight class="normal"><ref refid="class_equalization_panel" kindref="compound">EqualizationPanel</ref>::<ref refid="class_equalization_panel" kindref="compound">EqualizationPanel</ref>(<ref refid="class_effect_equalization" kindref="compound">EffectEqualization</ref><sp/>*effect,<sp/>wxWindow<sp/>*parent)</highlight></codeline>
<codeline lineno="2900"><highlight class="normal">:<sp/><sp/>wxPanel(parent)</highlight></codeline>
<codeline lineno="2901"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2902"><highlight class="normal"><sp/><sp/><sp/>mParent<sp/>=<sp/>parent;</highlight></codeline>
<codeline lineno="2903"><highlight class="normal"><sp/><sp/><sp/>mEffect<sp/>=<sp/>effect;</highlight></codeline>
<codeline lineno="2904"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2905"><highlight class="normal"><sp/><sp/><sp/>mOutr<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="2906"><highlight class="normal"><sp/><sp/><sp/>mOuti<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="2907"><highlight class="normal"></highlight></codeline>
<codeline lineno="2908"><highlight class="normal"><sp/><sp/><sp/>mBitmap<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="2909"><highlight class="normal"><sp/><sp/><sp/>mWidth<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2910"><highlight class="normal"><sp/><sp/><sp/>mHeight<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2911"><highlight class="normal"></highlight></codeline>
<codeline lineno="2912"><highlight class="normal"><sp/><sp/><sp/>mEffect-&gt;mEnvelope-&gt;Flatten(0.);</highlight></codeline>
<codeline lineno="2913"><highlight class="normal"><sp/><sp/><sp/>mEffect-&gt;mEnvelope-&gt;Mirror(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2914"><highlight class="normal"><sp/><sp/><sp/>mEffect-&gt;mEnvelope-&gt;SetTrackLen(1.0);</highlight></codeline>
<codeline lineno="2915"><highlight class="normal"></highlight></codeline>
<codeline lineno="2916"><highlight class="normal"><sp/><sp/><sp/>ForceRecalc();</highlight></codeline>
<codeline lineno="2917"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2918"><highlight class="normal"></highlight></codeline>
<codeline lineno="2919" refid="class_equalization_panel_1af197c7ba08a4aaca9732009491a55bba" refkind="member"><highlight class="normal"><ref refid="class_equalization_panel_1af197c7ba08a4aaca9732009491a55bba" kindref="member">EqualizationPanel::~EqualizationPanel</ref>()</highlight></codeline>
<codeline lineno="2920"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2921"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mBitmap)</highlight></codeline>
<codeline lineno="2922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>mBitmap;</highlight></codeline>
<codeline lineno="2923"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mOuti)</highlight></codeline>
<codeline lineno="2924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>mOuti;</highlight></codeline>
<codeline lineno="2925"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mOutr)</highlight></codeline>
<codeline lineno="2926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>mOutr;</highlight></codeline>
<codeline lineno="2927"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2928"><highlight class="normal"></highlight></codeline>
<codeline lineno="2929" refid="class_equalization_panel_1ac6c15ac3c6557e532345999e64c541f9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_equalization_panel_1ac6c15ac3c6557e532345999e64c541f9" kindref="member">EqualizationPanel::ForceRecalc</ref>()</highlight></codeline>
<codeline lineno="2930"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2931"><highlight class="normal"><sp/><sp/><sp/>mRecalcRequired<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2932"><highlight class="normal"><sp/><sp/><sp/>Refresh(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2933"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2934"><highlight class="normal"></highlight></codeline>
<codeline lineno="2935"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EqualizationPanel::Recalc()</highlight></codeline>
<codeline lineno="2936"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2937"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mOutr)</highlight></codeline>
<codeline lineno="2938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>mOutr;</highlight></codeline>
<codeline lineno="2939"><highlight class="normal"><sp/><sp/><sp/>mOutr<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[mEffect-&gt;mWindowSize];</highlight></codeline>
<codeline lineno="2940"><highlight class="normal"></highlight></codeline>
<codeline lineno="2941"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mOuti)</highlight></codeline>
<codeline lineno="2942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>mOuti;</highlight></codeline>
<codeline lineno="2943"><highlight class="normal"><sp/><sp/><sp/>mOuti<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[mEffect-&gt;mWindowSize];</highlight></codeline>
<codeline lineno="2944"><highlight class="normal"></highlight></codeline>
<codeline lineno="2945"><highlight class="normal"><sp/><sp/><sp/>mEffect-&gt;CalcFilter();<sp/><sp/><sp/></highlight><highlight class="comment">//to<sp/>calculate<sp/>the<sp/>actual<sp/>response</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2946"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_USE_REALFFTF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2947"><highlight class="normal"><sp/><sp/><sp/><ref refid="src_2_f_f_t_8cpp_1a47f4d941ab874bbac2ac000dfd9aef65" kindref="member">InverseRealFFT</ref>(mEffect-&gt;mWindowSize,<sp/>mEffect-&gt;mFilterFuncR,<sp/>mEffect-&gt;mFilterFuncI,<sp/>mOutr);</highlight></codeline>
<codeline lineno="2948"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2949"><highlight class="normal"><sp/><sp/><sp/><ref refid="src_2_f_f_t_8cpp_1a2e6a370e8fb32b62ccce6a44d05b7d06" kindref="member">FFT</ref>(mWindowSize,</highlight><highlight class="keyword">true</highlight><highlight class="normal">,mFilterFuncR,mFilterFuncI,mOutr,mOuti);<sp/><sp/><sp/></highlight><highlight class="comment">//work<sp/>out<sp/>FIR<sp/>response<sp/>-<sp/>note<sp/>mOuti<sp/>will<sp/>be<sp/>all<sp/>zeros</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2950"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>EXPERIMENTAL_USE_REALFFTF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2951"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2952"><highlight class="normal"></highlight></codeline>
<codeline lineno="2953"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EqualizationPanel::OnSize(wxSizeEvent<sp/>&amp;<sp/><sp/>WXUNUSED(event))</highlight></codeline>
<codeline lineno="2954"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2955"><highlight class="normal"><sp/><sp/><sp/>Refresh(<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="2956"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2957"><highlight class="normal"></highlight></codeline>
<codeline lineno="2958"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EqualizationPanel::OnPaint(wxPaintEvent<sp/>&amp;<sp/><sp/>WXUNUSED(event))</highlight></codeline>
<codeline lineno="2959"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2960"><highlight class="normal"><sp/><sp/><sp/>wxPaintDC<sp/>dc(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2961"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mRecalcRequired)<sp/>{</highlight></codeline>
<codeline lineno="2962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Recalc();</highlight></codeline>
<codeline lineno="2963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mRecalcRequired<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2964"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2965"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/>height;</highlight></codeline>
<codeline lineno="2966"><highlight class="normal"><sp/><sp/><sp/>GetSize(&amp;width,<sp/>&amp;height);</highlight></codeline>
<codeline lineno="2967"><highlight class="normal"></highlight></codeline>
<codeline lineno="2968"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mBitmap<sp/>||<sp/>mWidth!=width<sp/>||<sp/>mHeight!=height)</highlight></codeline>
<codeline lineno="2969"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mBitmap)</highlight></codeline>
<codeline lineno="2971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>mBitmap;</highlight></codeline>
<codeline lineno="2972"><highlight class="normal"></highlight></codeline>
<codeline lineno="2973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mWidth<sp/>=<sp/>width;</highlight></codeline>
<codeline lineno="2974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mHeight<sp/>=<sp/>height;</highlight></codeline>
<codeline lineno="2975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mBitmap<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>wxBitmap(mWidth,<sp/>mHeight);</highlight></codeline>
<codeline lineno="2976"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2977"><highlight class="normal"></highlight></codeline>
<codeline lineno="2978"><highlight class="normal"><sp/><sp/><sp/>wxBrush<sp/>bkgndBrush(wxSystemSettings::GetColour(wxSYS_COLOUR_3DFACE));</highlight></codeline>
<codeline lineno="2979"><highlight class="normal"></highlight></codeline>
<codeline lineno="2980"><highlight class="normal"><sp/><sp/><sp/>wxMemoryDC<sp/>memDC;</highlight></codeline>
<codeline lineno="2981"><highlight class="normal"><sp/><sp/><sp/>memDC.SelectObject(*mBitmap);</highlight></codeline>
<codeline lineno="2982"><highlight class="normal"></highlight></codeline>
<codeline lineno="2983"><highlight class="normal"><sp/><sp/><sp/>wxRect<sp/>bkgndRect;</highlight></codeline>
<codeline lineno="2984"><highlight class="normal"><sp/><sp/><sp/>bkgndRect.x<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2985"><highlight class="normal"><sp/><sp/><sp/>bkgndRect.y<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2986"><highlight class="normal"><sp/><sp/><sp/>bkgndRect.width<sp/>=<sp/>mWidth;</highlight></codeline>
<codeline lineno="2987"><highlight class="normal"><sp/><sp/><sp/>bkgndRect.height<sp/>=<sp/>mHeight;</highlight></codeline>
<codeline lineno="2988"><highlight class="normal"><sp/><sp/><sp/>memDC.SetBrush(bkgndBrush);</highlight></codeline>
<codeline lineno="2989"><highlight class="normal"><sp/><sp/><sp/>memDC.SetPen(*wxTRANSPARENT_PEN);</highlight></codeline>
<codeline lineno="2990"><highlight class="normal"><sp/><sp/><sp/>memDC.DrawRectangle(bkgndRect);</highlight></codeline>
<codeline lineno="2991"><highlight class="normal"></highlight></codeline>
<codeline lineno="2992"><highlight class="normal"><sp/><sp/><sp/>bkgndRect.y<sp/>=<sp/>mHeight;</highlight></codeline>
<codeline lineno="2993"><highlight class="normal"><sp/><sp/><sp/>memDC.DrawRectangle(bkgndRect);</highlight></codeline>
<codeline lineno="2994"><highlight class="normal"></highlight></codeline>
<codeline lineno="2995"><highlight class="normal"><sp/><sp/><sp/>wxRect<sp/>border;</highlight></codeline>
<codeline lineno="2996"><highlight class="normal"><sp/><sp/><sp/>border.x<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2997"><highlight class="normal"><sp/><sp/><sp/>border.y<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2998"><highlight class="normal"><sp/><sp/><sp/>border.width<sp/>=<sp/>mWidth;</highlight></codeline>
<codeline lineno="2999"><highlight class="normal"><sp/><sp/><sp/>border.height<sp/>=<sp/>mHeight;</highlight></codeline>
<codeline lineno="3000"><highlight class="normal"></highlight></codeline>
<codeline lineno="3001"><highlight class="normal"><sp/><sp/><sp/>memDC.SetBrush(*wxWHITE_BRUSH);</highlight></codeline>
<codeline lineno="3002"><highlight class="normal"><sp/><sp/><sp/>memDC.SetPen(*wxBLACK_PEN);</highlight></codeline>
<codeline lineno="3003"><highlight class="normal"><sp/><sp/><sp/>memDC.DrawRectangle(border);</highlight></codeline>
<codeline lineno="3004"><highlight class="normal"></highlight></codeline>
<codeline lineno="3005"><highlight class="normal"><sp/><sp/><sp/>mEnvRect<sp/>=<sp/>border;</highlight></codeline>
<codeline lineno="3006"><highlight class="normal"><sp/><sp/><sp/>mEnvRect.Deflate(<ref refid="_equalization_8h_1a5a8f3227e45fb096909b871b8e882ba7" kindref="member">PANELBORDER</ref>,<sp/><ref refid="_equalization_8h_1a5a8f3227e45fb096909b871b8e882ba7" kindref="member">PANELBORDER</ref>);</highlight></codeline>
<codeline lineno="3007"><highlight class="normal"></highlight></codeline>
<codeline lineno="3008"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pure<sp/>blue<sp/>x-axis<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3009"><highlight class="normal"><sp/><sp/><sp/>memDC.SetPen(wxPen(<ref refid="_theme_8cpp_1a778dd1fa4ed7e54e48ec7b65aba2363e" kindref="member">theTheme</ref>.<ref refid="class_theme_base_1a13757bf24e6ed4f5807baa848fa2021c" kindref="member">Colour</ref>(<sp/>clrGraphLines<sp/>),<sp/>1,<sp/>wxSOLID));</highlight></codeline>
<codeline lineno="3010"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>center<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)<sp/>(mEnvRect.height<sp/>*<sp/>mEffect-&gt;mdBMax/(mEffect-&gt;mdBMax-mEffect-&gt;mdBMin)<sp/>+<sp/>.5);</highlight></codeline>
<codeline lineno="3011"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_a_color_1a37c16741ff103f9bc70a0c4591ddde05" kindref="member">AColor::Line</ref>(memDC,</highlight></codeline>
<codeline lineno="3012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mEnvRect.GetLeft(),<sp/>mEnvRect.y<sp/>+<sp/>center,</highlight></codeline>
<codeline lineno="3013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mEnvRect.GetRight(),<sp/>mEnvRect.y<sp/>+<sp/>center);</highlight></codeline>
<codeline lineno="3014"><highlight class="normal"></highlight></codeline>
<codeline lineno="3015"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>the<sp/>grid,<sp/>if<sp/>asked<sp/>for.<sp/><sp/>Do<sp/>it<sp/>now<sp/>so<sp/>it&apos;s<sp/>underneath<sp/>the<sp/>main<sp/>plots.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3016"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>mEffect-&gt;mDrawGrid<sp/>)</highlight></codeline>
<codeline lineno="3017"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mEffect-&gt;mFreqRuler-&gt;ruler.DrawGrid(memDC,<sp/>mEnvRect.height,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><ref refid="_equalization_8h_1a5a8f3227e45fb096909b871b8e882ba7" kindref="member">PANELBORDER</ref>,<sp/><ref refid="_equalization_8h_1a5a8f3227e45fb096909b871b8e882ba7" kindref="member">PANELBORDER</ref>);</highlight></codeline>
<codeline lineno="3019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mEffect-&gt;mdBRuler-&gt;ruler.DrawGrid(memDC,<sp/>mEnvRect.width,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><ref refid="_equalization_8h_1a5a8f3227e45fb096909b871b8e882ba7" kindref="member">PANELBORDER</ref>,<sp/><ref refid="_equalization_8h_1a5a8f3227e45fb096909b871b8e882ba7" kindref="member">PANELBORDER</ref>);</highlight></codeline>
<codeline lineno="3020"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3021"><highlight class="normal"></highlight></codeline>
<codeline lineno="3022"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Med-blue<sp/>envelope<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3023"><highlight class="normal"><sp/><sp/><sp/>memDC.SetPen(wxPen(<ref refid="_theme_8cpp_1a778dd1fa4ed7e54e48ec7b65aba2363e" kindref="member">theTheme</ref>.<ref refid="class_theme_base_1a13757bf24e6ed4f5807baa848fa2021c" kindref="member">Colour</ref>(<sp/>clrGraphLines<sp/>),<sp/>3,<sp/>wxSOLID));</highlight></codeline>
<codeline lineno="3024"><highlight class="normal"></highlight></codeline>
<codeline lineno="3025"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Draw<sp/>envelope</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3026"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*values<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">[mEnvRect.width];</highlight></codeline>
<codeline lineno="3027"><highlight class="normal"><sp/><sp/><sp/>mEffect-&gt;mEnvelope-&gt;GetValues(values,<sp/>mEnvRect.width,<sp/>0.0,<sp/>1.0/mEnvRect.width);</highlight></codeline>
<codeline lineno="3028"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>,<sp/>y,<sp/><ref refid="xlftab_8c_1a2070b82b42fc387c0fa2fc032063dc2d" kindref="member">xlast</ref><sp/>=<sp/>0,<sp/>ylast<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3029"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>off<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>off1<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3030"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>&lt;mEnvRect.width;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="3031"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>mEnvRect.x<sp/>+<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="3033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/><ref refid="real_8h_1a01a38abe6848b3731344a2891c357d42" kindref="member">lrint</ref>(mEnvRect.height*((mEffect-&gt;mdBMax-values[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>])/(mEffect-&gt;mdBMax-mEffect-&gt;mdBMin))<sp/>+<sp/>.25<sp/>);<sp/></highlight><highlight class="comment">//needs<sp/>more<sp/>optimising,<sp/>along<sp/>with&apos;what<sp/>you<sp/>get&apos;?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>y<sp/>&gt;=<sp/>mEnvRect.height)</highlight></codeline>
<codeline lineno="3035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>mEnvRect.height<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="3037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>off<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>off<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>off1<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>(i<sp/>!=<sp/>0)<sp/>&amp;<sp/>(!off1)<sp/>)</highlight></codeline>
<codeline lineno="3045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_color_1a37c16741ff103f9bc70a0c4591ddde05" kindref="member">AColor::Line</ref>(memDC,<sp/>xlast,<sp/>ylast,</highlight></codeline>
<codeline lineno="3047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x,<sp/>mEnvRect.y<sp/>+<sp/>y);</highlight></codeline>
<codeline lineno="3048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>off1<sp/>=<sp/>off;</highlight></codeline>
<codeline lineno="3050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xlast<sp/>=<sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="3051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ylast<sp/>=<sp/>mEnvRect.y<sp/>+<sp/>y;</highlight></codeline>
<codeline lineno="3052"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3053"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>values;</highlight></codeline>
<codeline lineno="3054"><highlight class="normal"></highlight></codeline>
<codeline lineno="3055"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Now<sp/>draw<sp/>the<sp/>actual<sp/>response<sp/>that<sp/>you<sp/>will<sp/>get.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3056"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//mFilterFunc<sp/>has<sp/>a<sp/>linear<sp/>scale,<sp/>window<sp/>has<sp/>a<sp/>log<sp/>one<sp/>so<sp/>we<sp/>have<sp/>to<sp/>fiddle<sp/>about</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3057"><highlight class="normal"><sp/><sp/><sp/>memDC.SetPen(wxPen(<ref refid="_theme_8cpp_1a778dd1fa4ed7e54e48ec7b65aba2363e" kindref="member">theTheme</ref>.<ref refid="class_theme_base_1a13757bf24e6ed4f5807baa848fa2021c" kindref="member">Colour</ref>(<sp/>clrResponseLines<sp/>),<sp/>1,<sp/>wxSOLID));</highlight></codeline>
<codeline lineno="3058"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="seqread_8c_1aa2a8c6fbe5ed24f9523eb4e01368e4bc" kindref="member">scale</ref><sp/>=<sp/>(double)mEnvRect.height/(mEffect-&gt;mdBMax-mEffect-&gt;mdBMin);<sp/><sp/><sp/></highlight><highlight class="comment">//pixels<sp/>per<sp/>dB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3059"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>yF;<sp/><sp/><sp/></highlight><highlight class="comment">//gain<sp/>at<sp/>this<sp/>freq</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3060"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>delta<sp/>=<sp/>mEffect-&gt;mHiFreq/(((double)mEffect-&gt;mWindowSize/2.));<sp/><sp/><sp/></highlight><highlight class="comment">//size<sp/>of<sp/>each<sp/>freq<sp/>bin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3061"><highlight class="normal"></highlight></codeline>
<codeline lineno="3062"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>lin<sp/>=<sp/>mEffect-&gt;IsLinear();<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>log<sp/>or<sp/>lin<sp/>scale?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3063"><highlight class="normal"></highlight></codeline>
<codeline lineno="3064"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>loLog<sp/>=<sp/>log10(mEffect-&gt;mLoFreq);</highlight></codeline>
<codeline lineno="3065"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>step<sp/>=<sp/>lin<sp/>?<sp/>mEffect-&gt;mHiFreq<sp/>:<sp/>(log10(mEffect-&gt;mHiFreq)<sp/>-<sp/>loLog);</highlight></codeline>
<codeline lineno="3066"><highlight class="normal"><sp/><sp/><sp/>step<sp/>/=<sp/>((double)mEnvRect.width-1.);</highlight></codeline>
<codeline lineno="3067"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>freq;<sp/><sp/><sp/></highlight><highlight class="comment">//actual<sp/>freq<sp/>corresponding<sp/>to<sp/>x<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3068"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>halfM<sp/>=<sp/>(mEffect-&gt;mM-1)/2;</highlight></codeline>
<codeline lineno="3069"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n;<sp/><sp/><sp/></highlight><highlight class="comment">//index<sp/>to<sp/>mFreqFunc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3070"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>&lt;mEnvRect.width;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="3071"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>mEnvRect.x<sp/>+<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="3073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>freq<sp/>=<sp/>lin<sp/>?<sp/>step*<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>:<sp/>pow(10.,<sp/>loLog<sp/>+<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>*step);<sp/><sp/><sp/></highlight><highlight class="comment">//Hz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(<sp/>lin<sp/>?<sp/>step<sp/>:<sp/>(pow(10.,<sp/>loLog<sp/>+<sp/>(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>+1)*step)-freq)<sp/>)<sp/>&lt;<sp/>delta)</highlight></codeline>
<codeline lineno="3075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="comment">//not<sp/>enough<sp/>resolution<sp/>in<sp/>FFT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>up<sp/>for<sp/>calculating<sp/>cos<sp/>using<sp/>recurrance<sp/>-<sp/>faster<sp/>than<sp/>calculating<sp/>it<sp/>directly<sp/>each<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>theta<sp/>=<sp/><ref refid="mathematics_8h_1ae71449b1cc6e6250b91f539153a7a0d3" kindref="member">M_PI</ref>*freq/mEffect-&gt;mHiFreq;<sp/><sp/><sp/></highlight><highlight class="comment">//radians,<sp/>normalized</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>wtemp<sp/>=<sp/><ref refid="pffft_8c_1a28642ecbd9d1e77ab5a140a460f47d83" kindref="member">sin</ref>(0.5<sp/>*<sp/>theta);</highlight></codeline>
<codeline lineno="3079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>wpr<sp/>=<sp/>-2.0<sp/>*<sp/>wtemp<sp/>*<sp/>wtemp;</highlight></codeline>
<codeline lineno="3080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>wpi<sp/>=<sp/>-1.0<sp/>*<sp/><ref refid="pffft_8c_1a28642ecbd9d1e77ab5a140a460f47d83" kindref="member">sin</ref>(theta);</highlight></codeline>
<codeline lineno="3081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>wr<sp/>=<sp/><ref refid="pffft_8c_1a57a66355e043ccefc17aca9338a2b748" kindref="member">cos</ref>(theta*halfM);</highlight></codeline>
<codeline lineno="3082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>wi<sp/>=<sp/><ref refid="pffft_8c_1a28642ecbd9d1e77ab5a140a460f47d83" kindref="member">sin</ref>(theta*halfM);</highlight></codeline>
<codeline lineno="3083"><highlight class="normal"></highlight></codeline>
<codeline lineno="3084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yF<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="3085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;j&lt;halfM;j++)</highlight></codeline>
<codeline lineno="3086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yF<sp/>+=<sp/>2.<sp/>*<sp/>mOutr[j]<sp/>*<sp/>wr;<sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>works<sp/>for<sp/>me,<sp/>compared<sp/>to<sp/>the<sp/>previous<sp/>version.<sp/><sp/>Compare<sp/>wr<sp/>to<sp/>cos(theta*(halfM-j)).<sp/><sp/>Works<sp/>for<sp/>me.<sp/><sp/>Keep<sp/>everything<sp/>as<sp/>doubles<sp/>though.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>do<sp/>recurrance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wr<sp/>=<sp/>(wtemp<sp/>=<sp/>wr)<sp/>*<sp/>wpr<sp/>-<sp/>wi<sp/>*<sp/>wpi<sp/>+<sp/>wr;</highlight></codeline>
<codeline lineno="3090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wi<sp/>=<sp/>wi<sp/>*<sp/>wpr<sp/>+<sp/>wtemp<sp/>*<sp/>wpi<sp/>+<sp/>wi;</highlight></codeline>
<codeline lineno="3091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yF<sp/>+=<sp/>mOutr[halfM];</highlight></codeline>
<codeline lineno="3093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yF<sp/>=<sp/>fabs(yF);</highlight></codeline>
<codeline lineno="3094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(yF!=0.)</highlight></codeline>
<codeline lineno="3095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yF<sp/>=<sp/><ref refid="_audacity_8h_1a6dfdc8f6b4fa2e8f244f18cedb607b8e" kindref="member">LINEAR_TO_DB</ref>(yF);</highlight></codeline>
<codeline lineno="3096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yF<sp/>=<sp/>mEffect-&gt;mdBMin;</highlight></codeline>
<codeline lineno="3098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="comment">//use<sp/>FFT,<sp/>it<sp/>has<sp/>enough<sp/>resolution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)(freq/delta<sp/>+<sp/>.5);</highlight></codeline>
<codeline lineno="3102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pow(mEffect-&gt;mFilterFuncR[n],2)+pow(mEffect-&gt;mFilterFuncI[n],2)!=0.)</highlight></codeline>
<codeline lineno="3103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yF<sp/>=<sp/>10.0*log10(pow(mEffect-&gt;mFilterFuncR[n],2)+pow(mEffect-&gt;mFilterFuncI[n],2));<sp/><sp/><sp/></highlight><highlight class="comment">//10<sp/>here,<sp/>a<sp/>power</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yF<sp/>=<sp/>mEffect-&gt;mdBMin;</highlight></codeline>
<codeline lineno="3106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(yF<sp/>&lt;<sp/>mEffect-&gt;mdBMin)</highlight></codeline>
<codeline lineno="3108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yF<sp/>=<sp/>mEffect-&gt;mdBMin;</highlight></codeline>
<codeline lineno="3109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>yF<sp/>=<sp/>center-scale*yF;</highlight></codeline>
<codeline lineno="3110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(yF&gt;mEnvRect.height)</highlight></codeline>
<codeline lineno="3111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yF<sp/>=<sp/>mEnvRect.height<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="3112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(yF&lt;0.)</highlight></codeline>
<codeline lineno="3113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>yF=0.;</highlight></codeline>
<codeline lineno="3114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)(yF+.5);</highlight></codeline>
<codeline lineno="3115"><highlight class="normal"></highlight></codeline>
<codeline lineno="3116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="3117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_a_color_1a37c16741ff103f9bc70a0c4591ddde05" kindref="member">AColor::Line</ref>(memDC,<sp/>xlast,<sp/>ylast,<sp/>x,<sp/>mEnvRect.y<sp/>+<sp/>y);</highlight></codeline>
<codeline lineno="3119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xlast<sp/>=<sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="3121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ylast<sp/>=<sp/>mEnvRect.y<sp/>+<sp/>y;</highlight></codeline>
<codeline lineno="3122"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3123"><highlight class="normal"></highlight></codeline>
<codeline lineno="3124"><highlight class="normal"><sp/><sp/><sp/>memDC.SetPen(*wxBLACK_PEN);</highlight></codeline>
<codeline lineno="3125"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>mEffect-&gt;mDraw-&gt;GetValue()<sp/>)</highlight></codeline>
<codeline lineno="3126"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mEffect-&gt;mEnvelope-&gt;DrawPoints(memDC,<sp/>mEnvRect,<sp/><ref refid="class_zoom_info" kindref="compound">ZoomInfo</ref>(0.0,<sp/>mEnvRect.width-1),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>0.0,</highlight></codeline>
<codeline lineno="3128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mEffect-&gt;mdBMin,<sp/>mEffect-&gt;mdBMax);</highlight></codeline>
<codeline lineno="3129"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3130"><highlight class="normal"></highlight></codeline>
<codeline lineno="3131"><highlight class="normal"><sp/><sp/><sp/>dc.Blit(0,<sp/>0,<sp/>mWidth,<sp/>mHeight,<sp/>&amp;memDC,<sp/>0,<sp/>0,<sp/>wxCOPY,<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="3132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3133"><highlight class="normal"></highlight></codeline>
<codeline lineno="3134"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EqualizationPanel::OnMouseEvent(wxMouseEvent<sp/>&amp;<sp/>event)</highlight></codeline>
<codeline lineno="3135"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3136"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mEffect-&gt;mDrawMode)</highlight></codeline>
<codeline lineno="3137"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3139"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3140"><highlight class="normal"></highlight></codeline>
<codeline lineno="3141"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event.ButtonDown()<sp/>&amp;&amp;<sp/>!HasCapture())</highlight></codeline>
<codeline lineno="3142"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CaptureMouse();</highlight></codeline>
<codeline lineno="3144"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3145"><highlight class="normal"></highlight></codeline>
<codeline lineno="3146"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mEffect-&gt;mEnvelope-&gt;MouseEvent(event,<sp/>mEnvRect,<sp/><ref refid="class_zoom_info" kindref="compound">ZoomInfo</ref>(0.0,<sp/>mEnvRect.width),</highlight></codeline>
<codeline lineno="3147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>0.0,</highlight></codeline>
<codeline lineno="3148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mEffect-&gt;mdBMin,<sp/>mEffect-&gt;mdBMax))</highlight></codeline>
<codeline lineno="3149"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mEffect-&gt;EnvelopeUpdated();</highlight></codeline>
<codeline lineno="3151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ForceRecalc();</highlight></codeline>
<codeline lineno="3152"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3153"><highlight class="normal"></highlight></codeline>
<codeline lineno="3154"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event.ButtonUp()<sp/>&amp;&amp;<sp/>HasCapture())</highlight></codeline>
<codeline lineno="3155"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ReleaseMouse();</highlight></codeline>
<codeline lineno="3157"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3159"><highlight class="normal"></highlight></codeline>
<codeline lineno="3160"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EqualizationPanel::OnCaptureLost(wxMouseCaptureLostEvent<sp/>&amp;<sp/>WXUNUSED(event))</highlight></codeline>
<codeline lineno="3161"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3162"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(HasCapture())</highlight></codeline>
<codeline lineno="3163"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ReleaseMouse();</highlight></codeline>
<codeline lineno="3165"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3167"><highlight class="normal"></highlight></codeline>
<codeline lineno="3168"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3169"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EditCurvesDialog</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3170"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3171"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>the<sp/>&apos;modified&apos;<sp/>curve<sp/>used<sp/>to<sp/>be<sp/>called<sp/>&apos;custom&apos;<sp/>but<sp/>is<sp/>now<sp/>called<sp/>&apos;unnamed&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3172"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Some<sp/>things<sp/>that<sp/>deal<sp/>with<sp/>&apos;unnamed&apos;<sp/>curves<sp/>still<sp/>use,<sp/>for<sp/>example,<sp/>&apos;mCustomBackup&apos;<sp/>as<sp/>variable<sp/>names.</highlight></codeline>
<codeline lineno="3174"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3175"><highlight class="normal">BEGIN_EVENT_TABLE(<ref refid="class_edit_curves_dialog" kindref="compound">EditCurvesDialog</ref>,<sp/>wxDialog)</highlight></codeline>
<codeline lineno="3176"><highlight class="normal"><sp/><sp/><sp/><ref refid="_dependencies_8cpp_1a6f995727bd5033aa9a6968dbe152927f" kindref="member">EVT_BUTTON</ref>(<ref refid="_batch_process_dialog_8cpp_1ad89246e8564c62fdd9c7d38de122beb5a09d388ab8fbe708bfd91d7ad748b57c2" kindref="member">UpButtonID</ref>,<sp/>EditCurvesDialog::OnUp)</highlight></codeline>
<codeline lineno="3177"><highlight class="normal"><sp/><sp/><sp/><ref refid="_dependencies_8cpp_1a6f995727bd5033aa9a6968dbe152927f" kindref="member">EVT_BUTTON</ref>(<ref refid="_batch_process_dialog_8cpp_1ad89246e8564c62fdd9c7d38de122beb5a31833b7f97bda0031ac81ddca8ad4bb6" kindref="member">DownButtonID</ref>,<sp/>EditCurvesDialog::OnDown)</highlight></codeline>
<codeline lineno="3178"><highlight class="normal"><sp/><sp/><sp/><ref refid="_dependencies_8cpp_1a6f995727bd5033aa9a6968dbe152927f" kindref="member">EVT_BUTTON</ref>(<ref refid="_batch_process_dialog_8cpp_1ad89246e8564c62fdd9c7d38de122beb5a4e8929b0692bec3b987e9c7ec343b7da" kindref="member">RenameButtonID</ref>,<sp/>EditCurvesDialog::OnRename)</highlight></codeline>
<codeline lineno="3179"><highlight class="normal"><sp/><sp/><sp/><ref refid="_dependencies_8cpp_1a6f995727bd5033aa9a6968dbe152927f" kindref="member">EVT_BUTTON</ref>(<ref refid="_batch_process_dialog_8cpp_1ad89246e8564c62fdd9c7d38de122beb5abbf7fe72072236f531b0c42681ba697d" kindref="member">DeleteButtonID</ref>,<sp/>EditCurvesDialog::OnDelete)</highlight></codeline>
<codeline lineno="3180"><highlight class="normal"><sp/><sp/><sp/><ref refid="_dependencies_8cpp_1a6f995727bd5033aa9a6968dbe152927f" kindref="member">EVT_BUTTON</ref>(<ref refid="_batch_process_dialog_8cpp_1ad89246e8564c62fdd9c7d38de122beb5a16d36d3c075936ced9848f72cc64e658" kindref="member">ImportButtonID</ref>,<sp/>EditCurvesDialog::OnImport)</highlight></codeline>
<codeline lineno="3181"><highlight class="normal"><sp/><sp/><sp/><ref refid="_dependencies_8cpp_1a6f995727bd5033aa9a6968dbe152927f" kindref="member">EVT_BUTTON</ref>(<ref refid="_batch_process_dialog_8cpp_1ad89246e8564c62fdd9c7d38de122beb5aec895e82820919cab9fc156544845f5d" kindref="member">ExportButtonID</ref>,<sp/>EditCurvesDialog::OnExport)</highlight></codeline>
<codeline lineno="3182"><highlight class="normal"><sp/><sp/><sp/><ref refid="_dependencies_8cpp_1a6f995727bd5033aa9a6968dbe152927f" kindref="member">EVT_BUTTON</ref>(LibraryButtonID,<sp/>EditCurvesDialog::OnLibrary)</highlight></codeline>
<codeline lineno="3183"><highlight class="normal"><sp/><sp/><sp/><ref refid="_dependencies_8cpp_1a6f995727bd5033aa9a6968dbe152927f" kindref="member">EVT_BUTTON</ref>(<ref refid="_batch_process_dialog_8cpp_1ad89246e8564c62fdd9c7d38de122beb5a701f1a4df785f5a3c8fee1c7a22f5a11" kindref="member">DefaultsButtonID</ref>,<sp/>EditCurvesDialog::OnDefaults)</highlight></codeline>
<codeline lineno="3184"><highlight class="normal"><sp/><sp/><sp/><ref refid="_dependencies_8cpp_1a6f995727bd5033aa9a6968dbe152927f" kindref="member">EVT_BUTTON</ref>(wxID_OK,<sp/>EditCurvesDialog::OnOK)</highlight></codeline>
<codeline lineno="3185"><highlight class="normal"><ref refid="_batch_command_dialog_8cpp_1a8c3469324b3e5d3e6c44c23a418ab937" kindref="member">END_EVENT_TABLE</ref>()</highlight></codeline>
<codeline lineno="3186"><highlight class="normal"></highlight></codeline>
<codeline lineno="3187" refid="class_edit_curves_dialog_1afb95af59729b739882797dd5d77be376" refkind="member"><highlight class="normal"><ref refid="class_edit_curves_dialog" kindref="compound">EditCurvesDialog</ref>::<ref refid="class_edit_curves_dialog" kindref="compound">EditCurvesDialog</ref>(wxWindow<sp/>*<sp/>parent,<sp/><ref refid="class_effect_equalization" kindref="compound">EffectEqualization</ref><sp/>*<sp/>effect,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structposition" kindref="compound">position</ref>):</highlight></codeline>
<codeline lineno="3188"><highlight class="normal">wxDialog(parent,<sp/>wxID_ANY,<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(&quot;Manage<sp/>Curves<sp/>List&quot;),</highlight></codeline>
<codeline lineno="3189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxDefaultPosition,<sp/>wxDefaultSize,</highlight></codeline>
<codeline lineno="3190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxDEFAULT_DIALOG_STYLE<sp/>|<sp/>wxRESIZE_BORDER)</highlight></codeline>
<codeline lineno="3191"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3192"><highlight class="normal"><sp/><sp/><sp/>SetLabel(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Manage<sp/>Curves&quot;</highlight><highlight class="normal">));<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Provide<sp/>visual<sp/>label</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3193"><highlight class="normal"><sp/><sp/><sp/>SetName(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Manage<sp/>Curves<sp/>List&quot;</highlight><highlight class="normal">));<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Provide<sp/>audible<sp/>label</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3194"><highlight class="normal"><sp/><sp/><sp/>mParent<sp/>=<sp/>parent;</highlight></codeline>
<codeline lineno="3195"><highlight class="normal"><sp/><sp/><sp/>mEffect<sp/>=<sp/>effect;</highlight></codeline>
<codeline lineno="3196"><highlight class="normal"><sp/><sp/><sp/>mPosition<sp/>=<sp/><ref refid="xmlparse_8c_1a38975acbb6db0fe600f77477050279a4" kindref="member">position</ref>;</highlight></codeline>
<codeline lineno="3197"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>make<sp/>a<sp/>copy<sp/>of<sp/>mEffect-&gt;mCurves<sp/>here<sp/>to<sp/>muck<sp/>about<sp/>with.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3198"><highlight class="normal"><sp/><sp/><sp/>mEditCurves.Clear();</highlight></codeline>
<codeline lineno="3199"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>mEffect-&gt;mCurves.GetCount();<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="3200"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mEditCurves.Add(mEffect-&gt;mCurves[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].Name);</highlight></codeline>
<codeline lineno="3202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mEditCurves[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].points<sp/>=<sp/>mEffect-&gt;mCurves[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].points;</highlight></codeline>
<codeline lineno="3203"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3204"><highlight class="normal"></highlight></codeline>
<codeline lineno="3205"><highlight class="normal"><sp/><sp/><sp/>Populate();</highlight></codeline>
<codeline lineno="3206"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3207"><highlight class="normal"></highlight></codeline>
<codeline lineno="3208" refid="class_edit_curves_dialog_1a4d3f86b886eb6e97b1bd26297a8cd8d0" refkind="member"><highlight class="normal"><ref refid="class_edit_curves_dialog_1a4d3f86b886eb6e97b1bd26297a8cd8d0" kindref="member">EditCurvesDialog::~EditCurvesDialog</ref>()</highlight></codeline>
<codeline lineno="3209"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3211"><highlight class="normal"></highlight></codeline>
<codeline lineno="3213"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EditCurvesDialog::Populate()</highlight></codeline>
<codeline lineno="3214"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3215"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//-------------------------<sp/>Main<sp/>section<sp/>--------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3216"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_shuttle_gui" kindref="compound">ShuttleGui</ref><sp/><ref refid="xlftab_8c_1af933676109efed7ab34cea71d748a517" kindref="member">S</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="_shuttle_gui_8h_1a0c8bf96cca5e5b020b22818e8490b964a25601c4255a6f5c0cb7e8251080b069a" kindref="member">eIsCreating</ref>);</highlight></codeline>
<codeline lineno="3217"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_effect_equalization_1a276b0214475e309953c3677bd033750a" kindref="member">PopulateOrExchange</ref>(S);</highlight></codeline>
<codeline lineno="3218"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-----------------------<sp/>End<sp/>of<sp/>main<sp/>section<sp/>--------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3220"><highlight class="normal"></highlight></codeline>
<codeline lineno="3222"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EditCurvesDialog::PopulateOrExchange(<ref refid="class_shuttle_gui" kindref="compound">ShuttleGui</ref><sp/>&amp;<sp/><ref refid="xlftab_8c_1af933676109efed7ab34cea71d748a517" kindref="member">S</ref>)</highlight></codeline>
<codeline lineno="3223"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3224"><highlight class="normal"><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1aa456756283f789e26c6841eb3ca55c72" kindref="member">StartHorizontalLay</ref>(wxEXPAND);</highlight></codeline>
<codeline lineno="3225"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1af3077c7ec169ef519b6d7afa80ec9a64" kindref="member">StartStatic</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;&amp;Curves&quot;</highlight><highlight class="normal">),<sp/>1);</highlight></codeline>
<codeline lineno="3227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a3afc5aecba69ad749aac2f740e34a471" kindref="member">SetStyle</ref>(wxSUNKEN_BORDER<sp/>|<sp/>wxLC_REPORT<sp/>|<sp/>wxLC_HRULES<sp/>|<sp/>wxLC_VRULES<sp/>);</highlight></codeline>
<codeline lineno="3229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mList<sp/>=<sp/>S.<ref refid="class_shuttle_gui_1a0db2f531b7bd17f72c211883151f5640" kindref="member">Id</ref>(CurvesListID).<ref refid="class_shuttle_gui_base_1a01ff9997e519c505a1d83d2afbd2102b" kindref="member">AddListControlReportMode</ref>();</highlight></codeline>
<codeline lineno="3230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mList-&gt;InsertColumn(0,<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Curve<sp/>Name&quot;</highlight><highlight class="normal">),<sp/>wxLIST_FORMAT_RIGHT);</highlight></codeline>
<codeline lineno="3231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1ac6ae219c1f976c24fc88a07ffdaee4cd" kindref="member">EndStatic</ref>();</highlight></codeline>
<codeline lineno="3233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a6f8c4113388aa33dbb64204cd5ab1571" kindref="member">StartVerticalLay</ref>(0);</highlight></codeline>
<codeline lineno="3234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_1a0db2f531b7bd17f72c211883151f5640" kindref="member">Id</ref>(<ref refid="_batch_process_dialog_8cpp_1ad89246e8564c62fdd9c7d38de122beb5a09d388ab8fbe708bfd91d7ad748b57c2" kindref="member">UpButtonID</ref>).<ref refid="class_shuttle_gui_base_1a88b56806bad47b9301a6efad9b7c9eff" kindref="member">AddButton</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Move<sp/>&amp;Up&quot;</highlight><highlight class="normal">),<sp/>wxALIGN_LEFT);</highlight></codeline>
<codeline lineno="3236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_1a0db2f531b7bd17f72c211883151f5640" kindref="member">Id</ref>(<ref refid="_batch_process_dialog_8cpp_1ad89246e8564c62fdd9c7d38de122beb5a31833b7f97bda0031ac81ddca8ad4bb6" kindref="member">DownButtonID</ref>).<ref refid="class_shuttle_gui_base_1a88b56806bad47b9301a6efad9b7c9eff" kindref="member">AddButton</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Move<sp/>&amp;Down&quot;</highlight><highlight class="normal">),<sp/>wxALIGN_LEFT);</highlight></codeline>
<codeline lineno="3237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_1a0db2f531b7bd17f72c211883151f5640" kindref="member">Id</ref>(<ref refid="_batch_process_dialog_8cpp_1ad89246e8564c62fdd9c7d38de122beb5a4e8929b0692bec3b987e9c7ec343b7da" kindref="member">RenameButtonID</ref>).<ref refid="class_shuttle_gui_base_1a88b56806bad47b9301a6efad9b7c9eff" kindref="member">AddButton</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;&amp;Rename...&quot;</highlight><highlight class="normal">),<sp/>wxALIGN_LEFT);</highlight></codeline>
<codeline lineno="3238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_1a0db2f531b7bd17f72c211883151f5640" kindref="member">Id</ref>(<ref refid="_batch_process_dialog_8cpp_1ad89246e8564c62fdd9c7d38de122beb5abbf7fe72072236f531b0c42681ba697d" kindref="member">DeleteButtonID</ref>).<ref refid="class_shuttle_gui_base_1a88b56806bad47b9301a6efad9b7c9eff" kindref="member">AddButton</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;D&amp;elete...&quot;</highlight><highlight class="normal">),<sp/>wxALIGN_LEFT);</highlight></codeline>
<codeline lineno="3239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_1a0db2f531b7bd17f72c211883151f5640" kindref="member">Id</ref>(<ref refid="_batch_process_dialog_8cpp_1ad89246e8564c62fdd9c7d38de122beb5a16d36d3c075936ced9848f72cc64e658" kindref="member">ImportButtonID</ref>).<ref refid="class_shuttle_gui_base_1a88b56806bad47b9301a6efad9b7c9eff" kindref="member">AddButton</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;I&amp;mport...&quot;</highlight><highlight class="normal">),<sp/>wxALIGN_LEFT);</highlight></codeline>
<codeline lineno="3240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_1a0db2f531b7bd17f72c211883151f5640" kindref="member">Id</ref>(<ref refid="_batch_process_dialog_8cpp_1ad89246e8564c62fdd9c7d38de122beb5aec895e82820919cab9fc156544845f5d" kindref="member">ExportButtonID</ref>).<ref refid="class_shuttle_gui_base_1a88b56806bad47b9301a6efad9b7c9eff" kindref="member">AddButton</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;E&amp;xport...&quot;</highlight><highlight class="normal">),<sp/>wxALIGN_LEFT);</highlight></codeline>
<codeline lineno="3241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_1a0db2f531b7bd17f72c211883151f5640" kindref="member">Id</ref>(LibraryButtonID).<ref refid="class_shuttle_gui_base_1a88b56806bad47b9301a6efad9b7c9eff" kindref="member">AddButton</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;&amp;Get<sp/>More...&quot;</highlight><highlight class="normal">),<sp/>wxALIGN_LEFT);</highlight></codeline>
<codeline lineno="3242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_1a0db2f531b7bd17f72c211883151f5640" kindref="member">Id</ref>(<ref refid="_batch_process_dialog_8cpp_1ad89246e8564c62fdd9c7d38de122beb5a701f1a4df785f5a3c8fee1c7a22f5a11" kindref="member">DefaultsButtonID</ref>).<ref refid="class_shuttle_gui_base_1a88b56806bad47b9301a6efad9b7c9eff" kindref="member">AddButton</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;De&amp;faults&quot;</highlight><highlight class="normal">),<sp/>wxALIGN_LEFT);</highlight></codeline>
<codeline lineno="3243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a0286cb0ae146afcf8c589ceb16b37144" kindref="member">EndVerticalLay</ref>();</highlight></codeline>
<codeline lineno="3245"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3246"><highlight class="normal"><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a80917a37e36156f398a24436c1f3dba9" kindref="member">EndHorizontalLay</ref>();</highlight></codeline>
<codeline lineno="3247"><highlight class="normal"><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_1a213ba484f310ae2851d118ccafb08f34" kindref="member">AddStandardButtons</ref>();</highlight></codeline>
<codeline lineno="3248"><highlight class="normal"><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1af3077c7ec169ef519b6d7afa80ec9a64" kindref="member">StartStatic</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Help&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3249"><highlight class="normal"><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a7c71cba69d98f41064d12f23df2b88dc" kindref="member">AddConstTextBox</ref>(wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Rename<sp/>&apos;unnamed&apos;<sp/>to<sp/>save<sp/>a<sp/>new<sp/>entry.\n&apos;OK&apos;<sp/>saves<sp/>all<sp/>changes,<sp/>&apos;Cancel&apos;<sp/>doesn&apos;t.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3250"><highlight class="normal"><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1ac6ae219c1f976c24fc88a07ffdaee4cd" kindref="member">EndStatic</ref>();</highlight></codeline>
<codeline lineno="3251"><highlight class="normal"><sp/><sp/><sp/>PopulateList(mPosition);</highlight></codeline>
<codeline lineno="3252"><highlight class="normal"><sp/><sp/><sp/>Fit();</highlight></codeline>
<codeline lineno="3253"><highlight class="normal"></highlight></codeline>
<codeline lineno="3254"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3255"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3256"><highlight class="normal"></highlight></codeline>
<codeline lineno="3257"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EditCurvesDialog::PopulateList(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structposition" kindref="compound">position</ref>)</highlight></codeline>
<codeline lineno="3258"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3259"><highlight class="normal"><sp/><sp/><sp/>mList-&gt;DeleteAllItems();</highlight></codeline>
<codeline lineno="3260"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>mEditCurves.GetCount();<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="3261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mList-&gt;InsertItem(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/>mEditCurves[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].Name);</highlight></codeline>
<codeline lineno="3262"><highlight class="normal"><sp/><sp/><sp/>mList-&gt;SetColumnWidth(0,<sp/>wxLIST_AUTOSIZE);</highlight></codeline>
<codeline lineno="3263"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>curvesWidth<sp/>=<sp/>mList-&gt;GetColumnWidth(0);</highlight></codeline>
<codeline lineno="3264"><highlight class="normal"><sp/><sp/><sp/>mList-&gt;SetColumnWidth(0,<sp/>wxLIST_AUTOSIZE_USEHEADER);</highlight></codeline>
<codeline lineno="3265"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>headerWidth<sp/>=<sp/>mList-&gt;GetColumnWidth(0);</highlight></codeline>
<codeline lineno="3266"><highlight class="normal"><sp/><sp/><sp/>mList-&gt;SetColumnWidth(0,<sp/>wxMax(headerWidth,<sp/>curvesWidth));</highlight></codeline>
<codeline lineno="3267"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>&apos;position&apos;<sp/>to<sp/>set<sp/>focus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3268"><highlight class="normal"><sp/><sp/><sp/>mList-&gt;EnsureVisible(position);</highlight></codeline>
<codeline lineno="3269"><highlight class="normal"><sp/><sp/><sp/>mList-&gt;SetItemState(position,<sp/>wxLIST_STATE_SELECTED|wxLIST_STATE_FOCUSED,<sp/>wxLIST_STATE_SELECTED|wxLIST_STATE_FOCUSED);</highlight></codeline>
<codeline lineno="3270"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3271"><highlight class="normal"></highlight></codeline>
<codeline lineno="3272"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EditCurvesDialog::OnUp(wxCommandEvent<sp/>&amp;<sp/>WXUNUSED(event))</highlight></codeline>
<codeline lineno="3273"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3274"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>item<sp/>=<sp/>mList-&gt;GetNextItem(-1,<sp/>wxLIST_NEXT_ALL,<sp/>wxLIST_STATE_SELECTED);</highlight></codeline>
<codeline lineno="3275"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>item<sp/>==<sp/>-1<sp/>)</highlight></codeline>
<codeline lineno="3276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>items<sp/>selected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3277"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>item<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="3278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>item<sp/>=<sp/>mList-&gt;GetNextItem(item,<sp/>wxLIST_NEXT_ALL,<sp/>wxLIST_STATE_SELECTED);<sp/></highlight><highlight class="comment">//<sp/>top<sp/>item<sp/>selected,<sp/>can&apos;t<sp/>move<sp/>up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3279"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>state;</highlight></codeline>
<codeline lineno="3280"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>item<sp/>!=<sp/>-1<sp/>)</highlight></codeline>
<codeline lineno="3281"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>item<sp/>==<sp/>mList-&gt;GetItemCount()-1)</highlight></codeline>
<codeline lineno="3283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>&apos;unnamed&apos;<sp/>always<sp/>stays<sp/>at<sp/>the<sp/>bottom</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxMessageBox(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;&apos;unnamed&apos;<sp/>always<sp/>stays<sp/>at<sp/>the<sp/>bottom<sp/>of<sp/>the<sp/>list&quot;</highlight><highlight class="normal">),<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;&apos;unnamed&apos;<sp/>is<sp/>special&quot;</highlight><highlight class="normal">));<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>these<sp/>could<sp/>get<sp/>tedious!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>=<sp/>mList-&gt;GetItemState(item-1,<sp/>wxLIST_STATE_SELECTED);</highlight></codeline>
<codeline lineno="3288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>state<sp/>!=<sp/>wxLIST_STATE_SELECTED<sp/>)</highlight></codeline>
<codeline lineno="3289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>swap<sp/>this<sp/>with<sp/>one<sp/>above<sp/>but<sp/>only<sp/>if<sp/>it<sp/>isn&apos;t<sp/>selected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_e_q_curve" kindref="compound">EQCurve</ref><sp/>temp(wxT(</highlight><highlight class="stringliteral">&quot;temp&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp.<ref refid="class_e_q_curve_1af8cebcc572f4e40f6dd0dde6d6d49786" kindref="member">Name</ref><sp/>=<sp/>mEditCurves[item].Name;</highlight></codeline>
<codeline lineno="3292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp.<ref refid="class_e_q_curve_1a3dacc6899796ffc4386d3c368720f38c" kindref="member">points</ref><sp/>=<sp/>mEditCurves[item].points;</highlight></codeline>
<codeline lineno="3293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mEditCurves[item].Name<sp/>=<sp/>mEditCurves[item-1].Name;</highlight></codeline>
<codeline lineno="3294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mEditCurves[item].points<sp/>=<sp/>mEditCurves[item-1].points;</highlight></codeline>
<codeline lineno="3295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mEditCurves[item-1].Name<sp/>=<sp/>temp.<ref refid="class_e_q_curve_1af8cebcc572f4e40f6dd0dde6d6d49786" kindref="member">Name</ref>;</highlight></codeline>
<codeline lineno="3296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mEditCurves[item-1].points<sp/>=<sp/>temp.<ref refid="class_e_q_curve_1a3dacc6899796ffc4386d3c368720f38c" kindref="member">points</ref>;</highlight></codeline>
<codeline lineno="3297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/>sTemp<sp/>=<sp/>mList-&gt;GetItemText(item);</highlight></codeline>
<codeline lineno="3298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mList-&gt;SetItem(item,<sp/>0,<sp/>mList-&gt;GetItemText(item-1));</highlight></codeline>
<codeline lineno="3299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mList-&gt;SetItem(item-1,<sp/>0,<sp/>sTemp);</highlight></codeline>
<codeline lineno="3300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mList-&gt;SetItemState(item,<sp/>0,<sp/>wxLIST_STATE_SELECTED);</highlight></codeline>
<codeline lineno="3301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mList-&gt;SetItemState(item-1,<sp/>wxLIST_STATE_SELECTED,<sp/>wxLIST_STATE_SELECTED);</highlight></codeline>
<codeline lineno="3302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>item<sp/>=<sp/>mList-&gt;GetNextItem(item,<sp/>wxLIST_NEXT_ALL,<sp/>wxLIST_STATE_SELECTED);</highlight></codeline>
<codeline lineno="3304"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3305"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3306"><highlight class="normal"></highlight></codeline>
<codeline lineno="3307"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EditCurvesDialog::OnDown(wxCommandEvent<sp/>&amp;<sp/>WXUNUSED(event))</highlight></codeline>
<codeline lineno="3308"><highlight class="normal">{<sp/><sp/></highlight><highlight class="comment">//<sp/>looks<sp/>harder<sp/>than<sp/>OnUp<sp/>as<sp/>we<sp/>need<sp/>to<sp/>seek<sp/>backwards<sp/>up<sp/>the<sp/>list,<sp/>hence<sp/>GetPreviousItem</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3309"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>item<sp/>=<sp/>GetPreviousItem(mList-&gt;GetItemCount());</highlight></codeline>
<codeline lineno="3310"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>item<sp/>==<sp/>-1<sp/>)</highlight></codeline>
<codeline lineno="3311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>nothing<sp/>selected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3312"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>state;</highlight></codeline>
<codeline lineno="3313"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>item<sp/>!=<sp/>-1<sp/>)</highlight></codeline>
<codeline lineno="3314"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(item<sp/>!=<sp/>mList-&gt;GetItemCount()-1)<sp/>&amp;&amp;<sp/>(item<sp/>!=<sp/>mList-&gt;GetItemCount()-2)<sp/>)</highlight></codeline>
<codeline lineno="3316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>can&apos;t<sp/>move<sp/>&apos;unnamed&apos;<sp/>down,<sp/>or<sp/>the<sp/>one<sp/>above<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state<sp/>=<sp/>mList-&gt;GetItemState(item+1,<sp/>wxLIST_STATE_SELECTED);</highlight></codeline>
<codeline lineno="3318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>state<sp/>!=<sp/>wxLIST_STATE_SELECTED<sp/>)</highlight></codeline>
<codeline lineno="3319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">//<sp/>swap<sp/>this<sp/>with<sp/>one<sp/>below<sp/>but<sp/>only<sp/>if<sp/>it<sp/>isn&apos;t<sp/>selected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_e_q_curve" kindref="compound">EQCurve</ref><sp/>temp(wxT(</highlight><highlight class="stringliteral">&quot;temp&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp.<ref refid="class_e_q_curve_1af8cebcc572f4e40f6dd0dde6d6d49786" kindref="member">Name</ref><sp/>=<sp/>mEditCurves[item].Name;</highlight></codeline>
<codeline lineno="3322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp.<ref refid="class_e_q_curve_1a3dacc6899796ffc4386d3c368720f38c" kindref="member">points</ref><sp/>=<sp/>mEditCurves[item].points;</highlight></codeline>
<codeline lineno="3323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mEditCurves[item].Name<sp/>=<sp/>mEditCurves[item+1].Name;</highlight></codeline>
<codeline lineno="3324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mEditCurves[item].points<sp/>=<sp/>mEditCurves[item+1].points;</highlight></codeline>
<codeline lineno="3325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mEditCurves[item+1].Name<sp/>=<sp/>temp.<ref refid="class_e_q_curve_1af8cebcc572f4e40f6dd0dde6d6d49786" kindref="member">Name</ref>;</highlight></codeline>
<codeline lineno="3326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mEditCurves[item+1].points<sp/>=<sp/>temp.<ref refid="class_e_q_curve_1a3dacc6899796ffc4386d3c368720f38c" kindref="member">points</ref>;</highlight></codeline>
<codeline lineno="3327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/>sTemp<sp/>=<sp/>mList-&gt;GetItemText(item);</highlight></codeline>
<codeline lineno="3328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mList-&gt;SetItem(item,<sp/>0,<sp/>mList-&gt;GetItemText(item+1));</highlight></codeline>
<codeline lineno="3329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mList-&gt;SetItem(item+1,<sp/>0,<sp/>sTemp);</highlight></codeline>
<codeline lineno="3330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mList-&gt;SetItemState(item,<sp/>0,<sp/>wxLIST_STATE_SELECTED);</highlight></codeline>
<codeline lineno="3331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mList-&gt;SetItemState(item+1,<sp/>wxLIST_STATE_SELECTED,<sp/>wxLIST_STATE_SELECTED);</highlight></codeline>
<codeline lineno="3332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>item<sp/>=<sp/>GetPreviousItem(item);</highlight></codeline>
<codeline lineno="3335"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3336"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3337"><highlight class="normal"></highlight></codeline>
<codeline lineno="3338"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>EditCurvesDialog::GetPreviousItem(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>item)<sp/><sp/></highlight><highlight class="comment">//<sp/>wx<sp/>doesn&apos;t<sp/>have<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3339"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3340"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>lastItem<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="3341"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>itemTemp<sp/>=<sp/>mList-&gt;GetNextItem(-1,<sp/>wxLIST_NEXT_ALL,</highlight></codeline>
<codeline lineno="3342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxLIST_STATE_SELECTED);</highlight></codeline>
<codeline lineno="3343"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>(itemTemp<sp/>!=<sp/>-1)<sp/>&amp;&amp;<sp/>(itemTemp<sp/>&lt;<sp/>item)<sp/>)</highlight></codeline>
<codeline lineno="3344"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lastItem<sp/>=<sp/>itemTemp;</highlight></codeline>
<codeline lineno="3346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itemTemp<sp/>=<sp/>mList-&gt;GetNextItem(itemTemp,<sp/>wxLIST_NEXT_ALL,<sp/>wxLIST_STATE_SELECTED);</highlight></codeline>
<codeline lineno="3347"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3348"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lastItem;</highlight></codeline>
<codeline lineno="3349"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3350"><highlight class="normal"></highlight></codeline>
<codeline lineno="3351"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Rename<sp/>curve/curves</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3352"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EditCurvesDialog::OnRename(wxCommandEvent<sp/>&amp;<sp/>WXUNUSED(event))</highlight></codeline>
<codeline lineno="3353"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3354"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/><ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="3355"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numCurves<sp/>=<sp/>mEditCurves.GetCount();</highlight></codeline>
<codeline lineno="3356"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>curve<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3357"><highlight class="normal"></highlight></codeline>
<codeline lineno="3358"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>list<sp/>of<sp/>characters<sp/>that<sp/>aren&apos;t<sp/>allowed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3359"><highlight class="normal"><sp/><sp/><sp/>wxArrayString<sp/>exclude;</highlight></codeline>
<codeline lineno="3360"><highlight class="normal"><sp/><sp/><sp/>exclude.Add(<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&lt;&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="3361"><highlight class="normal"><sp/><sp/><sp/>exclude.Add(<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&gt;&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="3362"><highlight class="normal"><sp/><sp/><sp/>exclude.Add(<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&apos;&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="3363"><highlight class="normal"><sp/><sp/><sp/>exclude.Add(<sp/>wxT(</highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="3364"><highlight class="normal"></highlight></codeline>
<codeline lineno="3365"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>first<sp/>one<sp/>to<sp/>be<sp/>renamed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3366"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>item<sp/>=<sp/>mList-&gt;GetNextItem(-1,<sp/>wxLIST_NEXT_ALL,<sp/>wxLIST_STATE_SELECTED);</highlight></codeline>
<codeline lineno="3367"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>firstItem<sp/>=<sp/>item;<sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>reselection<sp/>with<sp/>PopulateList</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3368"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(item<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="3369"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Prompt<sp/>the<sp/>user<sp/>until<sp/>a<sp/>valid<sp/>name<sp/>is<sp/>enter<sp/>or<sp/>cancelled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>overwrite<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="charmaps_8h_1afe308d4985b5e0160df686b81d58a0c1" kindref="member">bad</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<sp/>bad<sp/>)<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>an<sp/>unacceptable<sp/>duplicate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Show<sp/>the<sp/>dialog<sp/>and<sp/>bail<sp/>if<sp/>the<sp/>user<sp/>cancels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bad<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>build<sp/>the<sp/>dialog</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxTextEntryDialog<sp/>dlg(<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Rename<sp/>&apos;&quot;</highlight><highlight class="normal">)<sp/>+<sp/>mEditCurves[<sp/>item<sp/>].Name<sp/>+<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;&apos;<sp/>to...&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="3379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Rename...&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="3380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dlg.SetTextValidator(<sp/>wxFILTER_EXCLUDE_CHAR_LIST<sp/>);</highlight></codeline>
<codeline lineno="3381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dlg.SetName(<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Rename<sp/>&apos;&quot;</highlight><highlight class="normal">)<sp/>+<sp/>mEditCurves[<sp/>item<sp/>].Name<sp/>);</highlight></codeline>
<codeline lineno="3382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxTextValidator<sp/>*tv<sp/>=<sp/>dlg.GetTextValidator();</highlight></codeline>
<codeline lineno="3383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tv-&gt;SetExcludes(<sp/>exclude<sp/>);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Tell<sp/>the<sp/>validator<sp/>about<sp/>excluded<sp/>chars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>dlg.ShowModal()<sp/>==<sp/>wxID_CANCEL<sp/>)</highlight></codeline>
<codeline lineno="3385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bad<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3389"><highlight class="normal"></highlight></codeline>
<codeline lineno="3390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Extract<sp/>the<sp/>name<sp/>from<sp/>the<sp/>dialog</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/>dlg.GetValue();</highlight></codeline>
<codeline lineno="3392"><highlight class="normal"></highlight></codeline>
<codeline lineno="3393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Search<sp/>list<sp/>of<sp/>curves<sp/>for<sp/>a<sp/>duplicate<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>curve<sp/>=<sp/>0;<sp/>curve<sp/>&lt;<sp/>numCurves;<sp/>curve++<sp/>)</highlight></codeline>
<codeline lineno="3395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/>temp<sp/>=<sp/>mEditCurves[<sp/>curve<sp/>].Name;</highlight></codeline>
<codeline lineno="3397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>name.IsSameAs(<sp/>mEditCurves[<sp/>curve<sp/>].Name<sp/>))<sp/></highlight><highlight class="comment">//<sp/>case<sp/>sensitive</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bad<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>curve<sp/>==<sp/>item<sp/>)<sp/><sp/></highlight><highlight class="comment">//<sp/>trying<sp/>to<sp/>rename<sp/>a<sp/>curve<sp/>with<sp/>the<sp/>same<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxMessageBox(<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Name<sp/>is<sp/>the<sp/>same<sp/>as<sp/>the<sp/>original<sp/>one&quot;</highlight><highlight class="normal">),<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Same<sp/>name&quot;</highlight><highlight class="normal">),<sp/>wxOK<sp/>);</highlight></codeline>
<codeline lineno="3403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>answer<sp/>=<sp/>wxMessageBox(<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Overwrite<sp/>existing<sp/>curve<sp/>&apos;&quot;</highlight><highlight class="normal">)<sp/>+<sp/>name<sp/>+<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;&apos;?&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="3406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Curve<sp/>exists&quot;</highlight><highlight class="normal">),<sp/>wxYES_NO<sp/>);</highlight></codeline>
<codeline lineno="3407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(answer<sp/>==<sp/>wxYES)</highlight></codeline>
<codeline lineno="3408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bad<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>overwrite<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>we<sp/>are<sp/>going<sp/>to<sp/>overwrite<sp/>the<sp/>one<sp/>with<sp/>this<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>name<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>||<sp/>name<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;unnamed&quot;</highlight><highlight class="normal">)<sp/>)</highlight></codeline>
<codeline lineno="3416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bad<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3418"><highlight class="normal"></highlight></codeline>
<codeline lineno="3419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>bad,<sp/>we<sp/>cancelled<sp/>the<sp/>rename<sp/>dialog,<sp/>so<sp/>nothing<sp/>to<sp/>do.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bad<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="3421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="3422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(overwrite){</highlight></codeline>
<codeline lineno="3423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Overwrite<sp/>another<sp/>curve.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>JKC:<sp/>because<sp/>&apos;overwrite&apos;<sp/>is<sp/>true,<sp/>&apos;curve&apos;<sp/>is<sp/>the<sp/>number<sp/>of<sp/>the<sp/>curve<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>are<sp/>about<sp/>to<sp/>overwrite.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mEditCurves[<sp/>curve<sp/>].Name<sp/>=<sp/><ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="3427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mEditCurves[<sp/>curve<sp/>].points<sp/>=<sp/>mEditCurves[<sp/>item<sp/>].points;</highlight></codeline>
<codeline lineno="3428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>renaming<sp/>the<sp/>unnamed<sp/>item,<sp/>then<sp/>select<sp/>it,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>otherwise<sp/>get<sp/>rid<sp/>of<sp/>the<sp/>item<sp/>we&apos;ve<sp/>renamed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>item<sp/>==<sp/>(numCurves-1)<sp/>)</highlight></codeline>
<codeline lineno="3431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mList-&gt;SetItem(curve,<sp/>0,<sp/>name);</highlight></codeline>
<codeline lineno="3432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mEditCurves.RemoveAt(<sp/>item<sp/>);</highlight></codeline>
<codeline lineno="3435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numCurves--;</highlight></codeline>
<codeline lineno="3436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>item<sp/>==<sp/>(numCurves-1)<sp/>)<sp/></highlight><highlight class="comment">//<sp/>renaming<sp/>&apos;unnamed&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>NEW<sp/>entry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mEditCurves.Add(<sp/><ref refid="class_e_q_curve" kindref="compound">EQCurve</ref>(<sp/>wxT(</highlight><highlight class="stringliteral">&quot;unnamed&quot;</highlight><highlight class="normal">)<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>over<sp/>the<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mEditCurves[<sp/>numCurves<sp/>].points<sp/>=<sp/>mEditCurves[<sp/>numCurves<sp/>-<sp/>1<sp/>].points;</highlight></codeline>
<codeline lineno="3443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Give<sp/>the<sp/>original<sp/>unnamed<sp/>entry<sp/>the<sp/>NEW<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mEditCurves[<sp/>numCurves<sp/>-<sp/>1<sp/>].Name<sp/>=<sp/><ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="3445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numCurves++;</highlight></codeline>
<codeline lineno="3446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>just<sp/>rename<sp/>(the<sp/>&apos;normal&apos;<sp/>case)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mEditCurves[<sp/>item<sp/>].Name<sp/>=<sp/><ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="3450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mList-&gt;SetItem(item,<sp/>0,<sp/>name);</highlight></codeline>
<codeline lineno="3451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>next<sp/>selected<sp/>item</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>item<sp/>=<sp/>mList-&gt;GetNextItem(item,<sp/>wxLIST_NEXT_ALL,<sp/>wxLIST_STATE_SELECTED);</highlight></codeline>
<codeline lineno="3454"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3455"><highlight class="normal"></highlight></codeline>
<codeline lineno="3456"><highlight class="normal"><sp/><sp/><sp/>PopulateList(firstItem);<sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>only<sp/>saved<sp/>to<sp/>file<sp/>when<sp/>you<sp/>OK<sp/>out<sp/>of<sp/>the<sp/>dialog</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3457"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3458"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3459"><highlight class="normal"></highlight></codeline>
<codeline lineno="3460"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Delete<sp/>curve/curves</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3461"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EditCurvesDialog::OnDelete(wxCommandEvent<sp/>&amp;<sp/>WXUNUSED(event))</highlight></codeline>
<codeline lineno="3462"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3463"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>could<sp/>could<sp/>count<sp/>them<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3464"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>And<sp/>then<sp/>put<sp/>in<sp/>a<sp/>&apos;Delete<sp/>N<sp/>items?&apos;<sp/>prompt.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3465"><highlight class="normal"></highlight></codeline>
<codeline lineno="3466"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0<sp/>//<sp/>&apos;one<sp/>at<sp/>a<sp/>time&apos;<sp/>prompt<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3467"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>first<sp/>one<sp/>to<sp/>be<sp/>deleted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3468"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>item<sp/>=<sp/>mList-&gt;GetNextItem(-1,<sp/>wxLIST_NEXT_ALL,<sp/>wxLIST_STATE_SELECTED);</highlight></codeline>
<codeline lineno="3469"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Take<sp/>care,<sp/>mList<sp/>and<sp/>mEditCurves<sp/>will<sp/>get<sp/>out<sp/>of<sp/>sync<sp/>as<sp/>curves<sp/>are<sp/>deleted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3470"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>deleted<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3471"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>highlight<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="3472"><highlight class="normal"></highlight></codeline>
<codeline lineno="3473"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(item<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="3474"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(item<sp/>==<sp/>mList-&gt;GetItemCount()-1)<sp/><sp/><sp/></highlight><highlight class="comment">//unnamed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxMessageBox(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;You<sp/>cannot<sp/>delete<sp/>the<sp/>&apos;unnamed&apos;<sp/>curve.&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="3478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Can&apos;t<sp/>delete<sp/>&apos;unnamed&apos;&quot;</highlight><highlight class="normal">),<sp/>wxOK<sp/>|<sp/>wxCENTRE,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>prompt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/>quest;</highlight></codeline>
<codeline lineno="3484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>quest<sp/>=<sp/>wxString(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Delete<sp/>&apos;&quot;</highlight><highlight class="normal">))<sp/>+<sp/>mEditCurves[<sp/>item-deleted<sp/>].Name<sp/>+<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;&apos;<sp/>?&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3485"><highlight class="normal"></highlight></codeline>
<codeline lineno="3486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ask<sp/>for<sp/>confirmation<sp/>before<sp/>removal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ans<sp/>=<sp/>wxMessageBox(<sp/>quest,<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Confirm<sp/>Deletion&quot;</highlight><highlight class="normal">),<sp/>wxYES_NO<sp/>|<sp/>wxCENTRE,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>ans<sp/>==<sp/>wxYES<sp/>)</highlight></codeline>
<codeline lineno="3489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>the<sp/>curve<sp/>from<sp/>the<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mEditCurves.RemoveAt(<sp/>item-deleted<sp/>);</highlight></codeline>
<codeline lineno="3491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deleted++;</highlight></codeline>
<codeline lineno="3492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>highlight<sp/>=<sp/>item-deleted;<sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>user<sp/>presses<sp/>&apos;No&apos;,<sp/>select<sp/>that<sp/>curve</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>next<sp/>selected<sp/>item</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>item<sp/>=<sp/>mList-&gt;GetNextItem(item,<sp/>wxLIST_NEXT_ALL,<sp/>wxLIST_STATE_SELECTED);</highlight></codeline>
<codeline lineno="3498"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3499"><highlight class="normal"></highlight></codeline>
<codeline lineno="3500"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(highlight<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="3501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PopulateList(mEditCurves.GetCount()-1);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>&apos;unnamed&apos;<sp/>as<sp/>the<sp/>selected<sp/>curve</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3502"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PopulateList(highlight);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>user<sp/>said<sp/>&apos;No&apos;<sp/>to<sp/>deletion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3504"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/>//<sp/>&apos;DELETE<sp/>all<sp/>N&apos;<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3505"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref><sp/>=<sp/>mList-&gt;GetSelectedItemCount();</highlight></codeline>
<codeline lineno="3506"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>item<sp/>=<sp/>mList-&gt;GetNextItem(-1,<sp/>wxLIST_NEXT_ALL,<sp/>wxLIST_STATE_SELECTED);</highlight></codeline>
<codeline lineno="3507"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>prompt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3508"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>quest;</highlight></codeline>
<codeline lineno="3509"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>count<sp/>&gt;<sp/>1<sp/>)</highlight></codeline>
<codeline lineno="3510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>quest.Printf(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Delete<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>wxString(wxT(</highlight><highlight class="stringliteral">&quot;%d<sp/>&quot;</highlight><highlight class="normal">))<sp/>+<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;items?&quot;</highlight><highlight class="normal">),<sp/>count);</highlight></codeline>
<codeline lineno="3511"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>count<sp/>==<sp/>1<sp/>)</highlight></codeline>
<codeline lineno="3513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>quest<sp/>=<sp/>wxString(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Delete<sp/>&apos;&quot;</highlight><highlight class="normal">))<sp/>+<sp/>mEditCurves[<sp/>item<sp/>].Name<sp/>+<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;&apos;<sp/>?&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3516"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ask<sp/>for<sp/>confirmation<sp/>before<sp/>removal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3517"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ans<sp/>=<sp/>wxMessageBox(<sp/>quest,<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Confirm<sp/>Deletion&quot;</highlight><highlight class="normal">),<sp/>wxYES_NO<sp/>|<sp/>wxCENTRE,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="3518"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>ans<sp/>==<sp/>wxYES<sp/>)</highlight></codeline>
<codeline lineno="3519"><highlight class="normal"><sp/><sp/><sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>the<sp/>curve(s)<sp/>from<sp/>the<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Take<sp/>care,<sp/>mList<sp/>and<sp/>mEditCurves<sp/>will<sp/>get<sp/>out<sp/>of<sp/>sync<sp/>as<sp/>curves<sp/>are<sp/>deleted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>deleted<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(item<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="3523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(item<sp/>==<sp/>mList-&gt;GetItemCount()-1)<sp/><sp/><sp/></highlight><highlight class="comment">//unnamed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxMessageBox(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;You<sp/>cannot<sp/>delete<sp/>the<sp/>&apos;unnamed&apos;<sp/>curve,<sp/>it<sp/>is<sp/>special.&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="3527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Can&apos;t<sp/>delete<sp/>&apos;unnamed&apos;&quot;</highlight><highlight class="normal">),<sp/>wxOK<sp/>|<sp/>wxCENTRE,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mEditCurves.RemoveAt(<sp/>item-deleted<sp/>);</highlight></codeline>
<codeline lineno="3532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deleted++;</highlight></codeline>
<codeline lineno="3533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item<sp/>=<sp/>mList-&gt;GetNextItem(item,<sp/>wxLIST_NEXT_ALL,<sp/>wxLIST_STATE_SELECTED);</highlight></codeline>
<codeline lineno="3535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>PopulateList(mEditCurves.GetCount()-1);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>&apos;unnamed&apos;<sp/>as<sp/>the<sp/>selected<sp/>curve</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3537"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3538"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3539"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3540"><highlight class="normal"></highlight></codeline>
<codeline lineno="3541"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EditCurvesDialog::OnImport(<sp/>wxCommandEvent<sp/>&amp;<sp/>WXUNUSED(event))</highlight></codeline>
<codeline lineno="3542"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3543"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_file_dialog" kindref="compound">FileDialog</ref><sp/>filePicker(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Choose<sp/>an<sp/>EQ<sp/>curve<sp/>file&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_file_names_1a6bf904497b02ca522212443c42945a47" kindref="member">FileNames::DataDir</ref>(),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;xml<sp/>files<sp/>(*.xml;*.XML)|*.xml;*.XML&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3544"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>fileName<sp/>=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3545"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>filePicker.<ref refid="class_file_dialog_1aed3d914162dc51d27750d067f3b420dc" kindref="member">ShowModal</ref>()<sp/>==<sp/>wxID_CANCEL)</highlight></codeline>
<codeline lineno="3546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3547"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fileName<sp/>=<sp/>filePicker.<ref refid="class_file_dialog_1a0646c54c01bbffe2364c5ea81927d286" kindref="member">GetPath</ref>();</highlight></codeline>
<codeline lineno="3549"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>EqualizationDialog::LoadCurves<sp/>to<sp/>read<sp/>into<sp/>(temporary)<sp/>mEditCurves</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3550"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>may<sp/>not<sp/>be<sp/>the<sp/>best<sp/>OOP<sp/>way<sp/>of<sp/>doing<sp/>it,<sp/>but<sp/>I<sp/>don&apos;t<sp/>know<sp/>better<sp/>(MJS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3551"><highlight class="normal"><sp/><sp/><sp/>EQCurveArray<sp/>temp;</highlight></codeline>
<codeline lineno="3552"><highlight class="normal"><sp/><sp/><sp/>temp<sp/>=<sp/>mEffect-&gt;mCurves;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>temp<sp/>copy<sp/>of<sp/>the<sp/>main<sp/>dialog<sp/>curves</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3553"><highlight class="normal"><sp/><sp/><sp/>mEffect-&gt;mCurves<sp/>=<sp/>mEditCurves;<sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>EditCurvesDialog<sp/>to<sp/>main<sp/>interface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3554"><highlight class="normal"><sp/><sp/><sp/>mEffect-&gt;LoadCurves(fileName,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>use<sp/>main<sp/>interface<sp/>to<sp/>load<sp/>imported<sp/>curves</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3555"><highlight class="normal"><sp/><sp/><sp/>mEditCurves<sp/>=<sp/>mEffect-&gt;mCurves;<sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>back<sp/>to<sp/>this<sp/>interface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3556"><highlight class="normal"><sp/><sp/><sp/>mEffect-&gt;mCurves<sp/>=<sp/>temp;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>reset<sp/>the<sp/>main<sp/>interface<sp/>how<sp/>it<sp/>was</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3557"><highlight class="normal"><sp/><sp/><sp/>PopulateList(0);<sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>the<sp/>EditCurvesDialog<sp/>dialog</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3558"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3559"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3560"><highlight class="normal"></highlight></codeline>
<codeline lineno="3561"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EditCurvesDialog::OnExport(<sp/>wxCommandEvent<sp/>&amp;<sp/>WXUNUSED(event))</highlight></codeline>
<codeline lineno="3562"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3563"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_file_dialog" kindref="compound">FileDialog</ref><sp/>filePicker(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Export<sp/>EQ<sp/>curves<sp/>as...&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_file_names_1a6bf904497b02ca522212443c42945a47" kindref="member">FileNames::DataDir</ref>(),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;*.XML&quot;</highlight><highlight class="normal">),<sp/>wxFD_SAVE<sp/>|<sp/>wxFD_OVERWRITE_PROMPT<sp/>|<sp/>wxRESIZE_BORDER);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wxFD_CHANGE_DIR?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3564"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>fileName<sp/>=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3565"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>filePicker.<ref refid="class_file_dialog_1aed3d914162dc51d27750d067f3b420dc" kindref="member">ShowModal</ref>()<sp/>==<sp/>wxID_CANCEL)</highlight></codeline>
<codeline lineno="3566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3567"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fileName<sp/>=<sp/>filePicker.<ref refid="class_file_dialog_1a0646c54c01bbffe2364c5ea81927d286" kindref="member">GetPath</ref>();</highlight></codeline>
<codeline lineno="3569"><highlight class="normal"></highlight></codeline>
<codeline lineno="3570"><highlight class="normal"><sp/><sp/><sp/>EQCurveArray<sp/>temp;</highlight></codeline>
<codeline lineno="3571"><highlight class="normal"><sp/><sp/><sp/>temp<sp/>=<sp/>mEffect-&gt;mCurves;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>backup<sp/>the<sp/>parent&apos;s<sp/>curves</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3572"><highlight class="normal"><sp/><sp/><sp/>EQCurveArray<sp/>exportCurves;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>selected<sp/>curves<sp/>to<sp/>export</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3573"><highlight class="normal"><sp/><sp/><sp/>exportCurves.Clear();</highlight></codeline>
<codeline lineno="3574"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>item<sp/>=<sp/>mList-&gt;GetNextItem(-1,<sp/>wxLIST_NEXT_ALL,<sp/>wxLIST_STATE_SELECTED);</highlight></codeline>
<codeline lineno="3575"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;</highlight></codeline>
<codeline lineno="3576"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(item<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="3577"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(item<sp/>!=<sp/>mList-&gt;GetItemCount()-1)<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>&apos;unnamed&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exportCurves.Add(mEditCurves[item].Name);</highlight></codeline>
<codeline lineno="3581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exportCurves[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].points<sp/>=<sp/>mEditCurves[item].points;</highlight></codeline>
<codeline lineno="3582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="3583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxMessageBox(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;You<sp/>cannot<sp/>export<sp/>&apos;unnamed&apos;<sp/>curve,<sp/>it<sp/>is<sp/>special.&quot;</highlight><highlight class="normal">),<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>Export<sp/>&apos;unnamed&apos;&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>next<sp/>selected<sp/>item</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>item<sp/>=<sp/>mList-&gt;GetNextItem(item,<sp/>wxLIST_NEXT_ALL,<sp/>wxLIST_STATE_SELECTED);</highlight></codeline>
<codeline lineno="3588"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3589"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i&gt;0)</highlight></codeline>
<codeline lineno="3590"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mEffect-&gt;mCurves<sp/>=<sp/>exportCurves;</highlight></codeline>
<codeline lineno="3592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mEffect-&gt;SaveCurves(fileName);</highlight></codeline>
<codeline lineno="3593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mEffect-&gt;mCurves<sp/>=<sp/>temp;</highlight></codeline>
<codeline lineno="3594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/>message;</highlight></codeline>
<codeline lineno="3595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>message.Printf(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;%d<sp/>curves<sp/>exported<sp/>to<sp/>%s&quot;</highlight><highlight class="normal">),<sp/>i,<sp/>fileName.c_str());</highlight></codeline>
<codeline lineno="3596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxMessageBox(message,<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Curves<sp/>exported&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3597"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3598"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxMessageBox(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;No<sp/>curves<sp/>exported&quot;</highlight><highlight class="normal">),<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;No<sp/>curves<sp/>exported&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3600"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3601"><highlight class="normal"></highlight></codeline>
<codeline lineno="3602"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EditCurvesDialog::OnLibrary(<sp/>wxCommandEvent<sp/>&amp;<sp/>WXUNUSED(event))</highlight></codeline>
<codeline lineno="3603"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3604"><highlight class="normal"><sp/><sp/><sp/>wxLaunchDefaultBrowser(wxT(</highlight><highlight class="stringliteral">&quot;http://wiki.audacityteam.org/wiki/EQCurvesDownload&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="3605"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3606"><highlight class="normal"></highlight></codeline>
<codeline lineno="3607"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EditCurvesDialog::OnDefaults(<sp/>wxCommandEvent<sp/>&amp;<sp/>WXUNUSED(event))</highlight></codeline>
<codeline lineno="3608"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3609"><highlight class="normal"><sp/><sp/><sp/>EQCurveArray<sp/>temp;</highlight></codeline>
<codeline lineno="3610"><highlight class="normal"><sp/><sp/><sp/>temp<sp/>=<sp/>mEffect-&gt;mCurves;</highlight></codeline>
<codeline lineno="3611"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>expect<sp/>this<sp/>to<sp/>fail<sp/>in<sp/>LoadCurves<sp/>(due<sp/>to<sp/>a<sp/>lack<sp/>of<sp/>path)<sp/>and<sp/>handle<sp/>that<sp/>there</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3612"><highlight class="normal"><sp/><sp/><sp/>mEffect-&gt;LoadCurves(<sp/>wxT(</highlight><highlight class="stringliteral">&quot;EQDefaultCurves.xml&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="3613"><highlight class="normal"><sp/><sp/><sp/>mEditCurves<sp/>=<sp/>mEffect-&gt;mCurves;</highlight></codeline>
<codeline lineno="3614"><highlight class="normal"><sp/><sp/><sp/>mEffect-&gt;mCurves<sp/>=<sp/>temp;</highlight></codeline>
<codeline lineno="3615"><highlight class="normal"><sp/><sp/><sp/>PopulateList(0);<sp/><sp/></highlight><highlight class="comment">//<sp/>update<sp/>the<sp/>EditCurvesDialog<sp/>dialog</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3616"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3617"><highlight class="normal"></highlight></codeline>
<codeline lineno="3618"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_EQ_SSE_THREADED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3619"><highlight class="normal"></highlight></codeline>
<codeline lineno="3620"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EqualizationDialog::OnProcessingRadio(wxCommandEvent<sp/>&amp;<sp/>event)</highlight></codeline>
<codeline lineno="3621"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3622"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>testEvent=</highlight><highlight class="keyword">event</highlight><highlight class="normal">.GetId();</highlight></codeline>
<codeline lineno="3623"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(testEvent)</highlight></codeline>
<codeline lineno="3624"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3625"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>defaultMathRadioID:<sp/>EffectEqualization48x::SetMathPath(MATH_FUNCTION_ORIGINAL);</highlight></codeline>
<codeline lineno="3626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3627"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>sSERadioID:<sp/>EffectEqualization48x::SetMathPath(MATH_FUNCTION_SSE);</highlight></codeline>
<codeline lineno="3628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3629"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>sSEThreadedRadioID:<sp/>EffectEqualization48x::SetMathPath(MATH_FUNCTION_THREADED<sp/>|<sp/>MATH_FUNCTION_SSE);</highlight></codeline>
<codeline lineno="3630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3631"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>aVXRadioID:<sp/>testEvent=2;</highlight></codeline>
<codeline lineno="3632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3633"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>aVXThreadedRadioID:<sp/>testEvent=2;</highlight></codeline>
<codeline lineno="3634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3635"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3636"><highlight class="normal"></highlight></codeline>
<codeline lineno="3637"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3638"><highlight class="normal"></highlight></codeline>
<codeline lineno="3639"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EqualizationDialog::OnBench(<sp/>wxCommandEvent<sp/>&amp;<sp/>event)</highlight></codeline>
<codeline lineno="3640"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3641"><highlight class="normal"><sp/><sp/><sp/>m_pEffect-&gt;mBench=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3642"><highlight class="normal"><sp/><sp/><sp/>OnOk(event);</highlight></codeline>
<codeline lineno="3643"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3644"><highlight class="normal"></highlight></codeline>
<codeline lineno="3645"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3646"><highlight class="normal"></highlight></codeline>
<codeline lineno="3647"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EditCurvesDialog::OnOK(wxCommandEvent<sp/>&amp;<sp/>WXUNUSED(event))</highlight></codeline>
<codeline lineno="3648"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3649"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>a<sp/>backup<sp/>of<sp/>the<sp/>current<sp/>curves</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3650"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>backupPlace<sp/>=<sp/>wxFileName(<sp/><ref refid="class_file_names_1a6bf904497b02ca522212443c42945a47" kindref="member">FileNames::DataDir</ref>(),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;EQBackup.xml&quot;</highlight><highlight class="normal">)<sp/>).GetFullPath();</highlight></codeline>
<codeline lineno="3651"><highlight class="normal"><sp/><sp/><sp/>mEffect-&gt;SaveCurves(backupPlace);</highlight></codeline>
<codeline lineno="3652"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>back<sp/>into<sp/>the<sp/>main<sp/>dialog</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3653"><highlight class="normal"><sp/><sp/><sp/>mEffect-&gt;mCurves.Clear();</highlight></codeline>
<codeline lineno="3654"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>mEditCurves.GetCount();<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="3655"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mEffect-&gt;mCurves.Add(mEditCurves[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].Name);</highlight></codeline>
<codeline lineno="3657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mEffect-&gt;mCurves[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].points<sp/>=<sp/>mEditCurves[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].points;</highlight></codeline>
<codeline lineno="3658"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3659"><highlight class="normal"><sp/><sp/><sp/>mEffect-&gt;SaveCurves();</highlight></codeline>
<codeline lineno="3660"><highlight class="normal"><sp/><sp/><sp/>mEffect-&gt;LoadCurves();</highlight></codeline>
<codeline lineno="3661"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>mEffect-&gt;CreateChoice();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3662"><highlight class="normal"><sp/><sp/><sp/>wxGetTopLevelParent(mEffect-&gt;mUIParent)-&gt;Layout();</highlight></codeline>
<codeline lineno="3663"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>mEffect-&gt;mUIParent-&gt;Layout();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3664"><highlight class="normal"></highlight></codeline>
<codeline lineno="3665"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Select<sp/>something<sp/>sensible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3666"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>item<sp/>=<sp/>mList-&gt;GetNextItem(-1,</highlight></codeline>
<codeline lineno="3667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxLIST_NEXT_ALL,</highlight></codeline>
<codeline lineno="3668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxLIST_STATE_SELECTED);</highlight></codeline>
<codeline lineno="3669"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(item<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="3670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>item<sp/>=<sp/>mList-&gt;GetItemCount()-1;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>nothing<sp/>selected,<sp/>default<sp/>to<sp/>&apos;unnamed&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3671"><highlight class="normal"><sp/><sp/><sp/>mEffect-&gt;setCurve(item);</highlight></codeline>
<codeline lineno="3672"><highlight class="normal"><sp/><sp/><sp/>EndModal(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3673"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3674"><highlight class="normal"></highlight></codeline>
<codeline lineno="3675"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>wxUSE_ACCESSIBILITY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3676"><highlight class="normal"></highlight></codeline>
<codeline lineno="3677"><highlight class="normal">SliderAx::SliderAx(wxWindow<sp/>*<sp/>window,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;fmt)<sp/>:</highlight></codeline>
<codeline lineno="3678"><highlight class="normal">wxWindowAccessible(<sp/>window<sp/>)</highlight></codeline>
<codeline lineno="3679"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3680"><highlight class="normal"><sp/><sp/><sp/>mParent<sp/>=<sp/>window;</highlight></codeline>
<codeline lineno="3681"><highlight class="normal"><sp/><sp/><sp/>mFmt<sp/>=<sp/>fmt;</highlight></codeline>
<codeline lineno="3682"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3683"><highlight class="normal"></highlight></codeline>
<codeline lineno="3684"><highlight class="normal">SliderAx::~SliderAx()</highlight></codeline>
<codeline lineno="3685"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3686"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3687"><highlight class="normal"></highlight></codeline>
<codeline lineno="3688"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Retrieves<sp/>the<sp/>address<sp/>of<sp/>an<sp/>IDispatch<sp/>interface<sp/>for<sp/>the<sp/>specified<sp/>child.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3689"><highlight class="normal"></highlight><highlight class="comment">//<sp/>All<sp/>objects<sp/>must<sp/>support<sp/>this<sp/>property.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3690"><highlight class="normal">wxAccStatus<sp/>SliderAx::GetChild(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>childId,<sp/>wxAccessible**<sp/>child<sp/>)</highlight></codeline>
<codeline lineno="3691"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3692"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>childId<sp/>==<sp/>wxACC_SELF<sp/>)</highlight></codeline>
<codeline lineno="3693"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*child<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3695"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3696"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3697"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*child<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="3699"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3700"><highlight class="normal"></highlight></codeline>
<codeline lineno="3701"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wxACC_OK;</highlight></codeline>
<codeline lineno="3702"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3703"><highlight class="normal"></highlight></codeline>
<codeline lineno="3704"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Gets<sp/>the<sp/>number<sp/>of<sp/>children.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3705"><highlight class="normal">wxAccStatus<sp/>SliderAx::GetChildCount(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>childCount)</highlight></codeline>
<codeline lineno="3706"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3707"><highlight class="normal"><sp/><sp/><sp/>*childCount<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="3708"><highlight class="normal"></highlight></codeline>
<codeline lineno="3709"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wxACC_OK;</highlight></codeline>
<codeline lineno="3710"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3711"><highlight class="normal"></highlight></codeline>
<codeline lineno="3712"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Gets<sp/>the<sp/>default<sp/>action<sp/>for<sp/>this<sp/>object<sp/>(0)<sp/>or<sp/>&gt;<sp/>0<sp/>(the<sp/>action<sp/>for<sp/>a<sp/>child).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3713"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Return<sp/>wxACC_OK<sp/>even<sp/>if<sp/>there<sp/>is<sp/>no<sp/>action.<sp/>actionName<sp/>is<sp/>the<sp/>action,<sp/>or<sp/>the<sp/>empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3714"><highlight class="normal"></highlight><highlight class="comment">//<sp/>string<sp/>if<sp/>there<sp/>is<sp/>no<sp/>action.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3715"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>retrieved<sp/>string<sp/>describes<sp/>the<sp/>action<sp/>that<sp/>is<sp/>performed<sp/>on<sp/>an<sp/>object,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3716"><highlight class="normal"></highlight><highlight class="comment">//<sp/>not<sp/>what<sp/>the<sp/>object<sp/>does<sp/>as<sp/>a<sp/>result.<sp/>For<sp/>example,<sp/>a<sp/>toolbar<sp/>button<sp/>that<sp/>prints</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3717"><highlight class="normal"></highlight><highlight class="comment">//<sp/>a<sp/>document<sp/>has<sp/>a<sp/>default<sp/>action<sp/>of<sp/>&quot;Press&quot;<sp/>rather<sp/>than<sp/>&quot;Prints<sp/>the<sp/>current<sp/>document.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3718"><highlight class="normal">wxAccStatus<sp/>SliderAx::GetDefaultAction(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>WXUNUSED(childId),<sp/>wxString<sp/>*actionName<sp/>)</highlight></codeline>
<codeline lineno="3719"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3720"><highlight class="normal"><sp/><sp/><sp/>actionName-&gt;Clear();</highlight></codeline>
<codeline lineno="3721"><highlight class="normal"></highlight></codeline>
<codeline lineno="3722"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wxACC_OK;</highlight></codeline>
<codeline lineno="3723"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3724"><highlight class="normal"></highlight></codeline>
<codeline lineno="3725"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>description<sp/>for<sp/>this<sp/>object<sp/>or<sp/>a<sp/>child.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3726"><highlight class="normal">wxAccStatus<sp/>SliderAx::GetDescription(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>WXUNUSED(childId),<sp/>wxString<sp/>*description<sp/>)</highlight></codeline>
<codeline lineno="3727"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3728"><highlight class="normal"><sp/><sp/><sp/>description-&gt;Clear();</highlight></codeline>
<codeline lineno="3729"><highlight class="normal"></highlight></codeline>
<codeline lineno="3730"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wxACC_OK;</highlight></codeline>
<codeline lineno="3731"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3732"><highlight class="normal"></highlight></codeline>
<codeline lineno="3733"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Gets<sp/>the<sp/>window<sp/>with<sp/>the<sp/>keyboard<sp/>focus.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3734"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>childId<sp/>is<sp/>0<sp/>and<sp/>child<sp/>is<sp/>NULL,<sp/>no<sp/>object<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3735"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>subhierarchy<sp/>has<sp/>the<sp/>focus.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3736"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>this<sp/>object<sp/>has<sp/>the<sp/>focus,<sp/>child<sp/>should<sp/>be<sp/>&apos;this&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3737"><highlight class="normal">wxAccStatus<sp/>SliderAx::GetFocus(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>childId,<sp/>wxAccessible**<sp/>child)</highlight></codeline>
<codeline lineno="3738"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3739"><highlight class="normal"><sp/><sp/><sp/>*childId<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3740"><highlight class="normal"><sp/><sp/><sp/>*child<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3741"><highlight class="normal"></highlight></codeline>
<codeline lineno="3742"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wxACC_OK;</highlight></codeline>
<codeline lineno="3743"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3744"><highlight class="normal"></highlight></codeline>
<codeline lineno="3745"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>help<sp/>text<sp/>for<sp/>this<sp/>object<sp/>or<sp/>a<sp/>child,<sp/>similar<sp/>to<sp/>tooltip<sp/>text.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3746"><highlight class="normal">wxAccStatus<sp/>SliderAx::GetHelpText(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>WXUNUSED(childId),<sp/>wxString<sp/>*helpText<sp/>)</highlight></codeline>
<codeline lineno="3747"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3748"><highlight class="normal"><sp/><sp/><sp/>helpText-&gt;Clear();</highlight></codeline>
<codeline lineno="3749"><highlight class="normal"></highlight></codeline>
<codeline lineno="3750"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wxACC_OK;</highlight></codeline>
<codeline lineno="3751"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3752"><highlight class="normal"></highlight></codeline>
<codeline lineno="3753"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>keyboard<sp/>shortcut<sp/>for<sp/>this<sp/>object<sp/>or<sp/>child.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3754"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Return<sp/>e.g.<sp/>ALT+K</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3755"><highlight class="normal">wxAccStatus<sp/>SliderAx::GetKeyboardShortcut(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>WXUNUSED(childId),<sp/>wxString<sp/>*shortcut<sp/>)</highlight></codeline>
<codeline lineno="3756"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3757"><highlight class="normal"><sp/><sp/><sp/>shortcut-&gt;Clear();</highlight></codeline>
<codeline lineno="3758"><highlight class="normal"></highlight></codeline>
<codeline lineno="3759"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wxACC_OK;</highlight></codeline>
<codeline lineno="3760"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3761"><highlight class="normal"></highlight></codeline>
<codeline lineno="3762"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>rectangle<sp/>for<sp/>this<sp/>object<sp/>(id<sp/>=<sp/>0)<sp/>or<sp/>a<sp/>child<sp/>element<sp/>(id<sp/>&gt;<sp/>0).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3763"><highlight class="normal"></highlight><highlight class="comment">//<sp/>rect<sp/>is<sp/>in<sp/>screen<sp/>coordinates.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3764"><highlight class="normal">wxAccStatus<sp/>SliderAx::GetLocation(<sp/>wxRect&amp;<sp/>rect,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>WXUNUSED(elementId)<sp/>)</highlight></codeline>
<codeline lineno="3765"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3766"><highlight class="normal"><sp/><sp/><sp/>wxSlider<sp/>*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref><sp/>=<sp/>wxDynamicCast(<sp/>GetWindow(),<sp/>wxSlider<sp/>);</highlight></codeline>
<codeline lineno="3767"><highlight class="normal"></highlight></codeline>
<codeline lineno="3768"><highlight class="normal"><sp/><sp/><sp/>rect<sp/>=<sp/>s-&gt;GetRect();</highlight></codeline>
<codeline lineno="3769"><highlight class="normal"><sp/><sp/><sp/>rect.SetPosition(<sp/>s-&gt;GetParent()-&gt;ClientToScreen(<sp/>rect.GetPosition()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="3770"><highlight class="normal"></highlight></codeline>
<codeline lineno="3771"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wxACC_OK;</highlight></codeline>
<codeline lineno="3772"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3773"><highlight class="normal"></highlight></codeline>
<codeline lineno="3774"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Gets<sp/>the<sp/>name<sp/>of<sp/>the<sp/>specified<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3775"><highlight class="normal">wxAccStatus<sp/>SliderAx::GetName(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>WXUNUSED(childId),<sp/>wxString*<sp/><ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>)</highlight></codeline>
<codeline lineno="3776"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3777"><highlight class="normal"><sp/><sp/><sp/>wxSlider<sp/>*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref><sp/>=<sp/>wxDynamicCast(<sp/>GetWindow(),<sp/>wxSlider<sp/>);</highlight></codeline>
<codeline lineno="3778"><highlight class="normal"></highlight></codeline>
<codeline lineno="3779"><highlight class="normal"><sp/><sp/><sp/>*name<sp/>=<sp/>s-&gt;GetName();</highlight></codeline>
<codeline lineno="3780"><highlight class="normal"></highlight></codeline>
<codeline lineno="3781"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wxACC_OK;</highlight></codeline>
<codeline lineno="3782"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3783"><highlight class="normal"></highlight></codeline>
<codeline lineno="3784"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>a<sp/>role<sp/>constant.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3785"><highlight class="normal">wxAccStatus<sp/>SliderAx::GetRole(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>childId,<sp/>wxAccRole*<sp/>role)</highlight></codeline>
<codeline lineno="3786"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3787"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<sp/>childId<sp/>)</highlight></codeline>
<codeline lineno="3788"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3789"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="3790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*role<sp/>=<sp/>wxROLE_SYSTEM_SLIDER;</highlight></codeline>
<codeline lineno="3791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3792"><highlight class="normal"></highlight></codeline>
<codeline lineno="3793"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="3794"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="3795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*role<sp/>=<sp/>wxROLE_SYSTEM_PUSHBUTTON;</highlight></codeline>
<codeline lineno="3796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3797"><highlight class="normal"></highlight></codeline>
<codeline lineno="3798"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="3799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*role<sp/>=<sp/>wxROLE_SYSTEM_INDICATOR;</highlight></codeline>
<codeline lineno="3800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3801"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3802"><highlight class="normal"></highlight></codeline>
<codeline lineno="3803"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wxACC_OK;</highlight></codeline>
<codeline lineno="3804"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3805"><highlight class="normal"></highlight></codeline>
<codeline lineno="3806"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Gets<sp/>a<sp/>variant<sp/>representing<sp/>the<sp/>selected<sp/>children</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3807"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>this<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3808"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Acceptable<sp/>values:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3809"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>a<sp/>null<sp/>variant<sp/>(IsNull()<sp/>returns<sp/>TRUE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3810"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>a<sp/>list<sp/>variant<sp/>(GetType()<sp/>==<sp/>wxT(&quot;list&quot;))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3811"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>an<sp/>integer<sp/>representing<sp/>the<sp/>selected<sp/>child<sp/>element,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3812"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>or<sp/>0<sp/>if<sp/>this<sp/>object<sp/>is<sp/>selected<sp/>(GetType()<sp/>==<sp/>wxT(&quot;long&quot;))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3813"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-<sp/>a<sp/>&quot;void*&quot;<sp/>pointer<sp/>to<sp/>a<sp/>wxAccessible<sp/>child<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3814"><highlight class="normal">wxAccStatus<sp/>SliderAx::GetSelections(<sp/>wxVariant<sp/>*<sp/>WXUNUSED(selections)<sp/>)</highlight></codeline>
<codeline lineno="3815"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3816"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wxACC_NOT_IMPLEMENTED;</highlight></codeline>
<codeline lineno="3817"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3818"><highlight class="normal"></highlight></codeline>
<codeline lineno="3819"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>a<sp/>state<sp/>constant.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3820"><highlight class="normal">wxAccStatus<sp/>SliderAx::GetState(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>childId,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">*<sp/>state)</highlight></codeline>
<codeline lineno="3821"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3822"><highlight class="normal"><sp/><sp/><sp/>wxSlider<sp/>*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref><sp/>=<sp/>wxDynamicCast(<sp/>GetWindow(),<sp/>wxSlider<sp/>);</highlight></codeline>
<codeline lineno="3823"><highlight class="normal"></highlight></codeline>
<codeline lineno="3824"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<sp/>childId<sp/>)</highlight></codeline>
<codeline lineno="3825"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3826"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="3827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*state<sp/>=<sp/>wxACC_STATE_SYSTEM_FOCUSABLE;</highlight></codeline>
<codeline lineno="3828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3829"><highlight class="normal"></highlight></codeline>
<codeline lineno="3830"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="3831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>s-&gt;GetValue()<sp/>==<sp/>s-&gt;GetMin()<sp/>)</highlight></codeline>
<codeline lineno="3832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*state<sp/>=<sp/>wxACC_STATE_SYSTEM_INVISIBLE;</highlight></codeline>
<codeline lineno="3834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3836"><highlight class="normal"></highlight></codeline>
<codeline lineno="3837"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="3838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>s-&gt;GetValue()<sp/>==<sp/>s-&gt;GetMax()<sp/>)</highlight></codeline>
<codeline lineno="3839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*state<sp/>=<sp/>wxACC_STATE_SYSTEM_INVISIBLE;</highlight></codeline>
<codeline lineno="3841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3843"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3844"><highlight class="normal"></highlight></codeline>
<codeline lineno="3845"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>not<sp/>use<sp/>mSliderIsFocused<sp/>is<sp/>not<sp/>set<sp/>until<sp/>after<sp/>this<sp/>method</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3846"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>called.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3847"><highlight class="normal"><sp/><sp/><sp/>*state<sp/>|=<sp/>(<sp/>s<sp/>==<sp/>wxWindow::FindFocus()<sp/>?<sp/>wxACC_STATE_SYSTEM_FOCUSED<sp/>:<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="3848"><highlight class="normal"></highlight></codeline>
<codeline lineno="3849"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wxACC_OK;</highlight></codeline>
<codeline lineno="3850"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3851"><highlight class="normal"></highlight></codeline>
<codeline lineno="3852"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>a<sp/>localized<sp/>string<sp/>representing<sp/>the<sp/>value<sp/>for<sp/>the<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3853"><highlight class="normal"></highlight><highlight class="comment">//<sp/>or<sp/>child.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3854"><highlight class="normal">wxAccStatus<sp/>SliderAx::GetValue(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>childId,<sp/>wxString*<sp/>strValue)</highlight></codeline>
<codeline lineno="3855"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3856"><highlight class="normal"><sp/><sp/><sp/>wxSlider<sp/>*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref><sp/>=<sp/>wxDynamicCast(<sp/>GetWindow(),<sp/>wxSlider<sp/>);</highlight></codeline>
<codeline lineno="3857"><highlight class="normal"></highlight></codeline>
<codeline lineno="3858"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>childId<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="3859"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>strValue-&gt;Printf(<sp/>mFmt,<sp/>s-&gt;GetValue()<sp/>);</highlight></codeline>
<codeline lineno="3861"><highlight class="normal"></highlight></codeline>
<codeline lineno="3862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wxACC_OK;</highlight></codeline>
<codeline lineno="3863"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3864"><highlight class="normal"></highlight></codeline>
<codeline lineno="3865"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wxACC_NOT_SUPPORTED;</highlight></codeline>
<codeline lineno="3866"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3867"><highlight class="normal"></highlight></codeline>
<codeline lineno="3868"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3869"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/Equalization.cpp"/>
  </compounddef>
</doxygen>
