<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="twolame_8h" kind="file" language="C++">
    <compoundname>twolame.h</compoundname>
    <includedby refid="frontend_8c" local="no">C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/frontend/frontend.c</includedby>
    <includedby refid="ath_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/ath.c</includedby>
    <includedby refid="twolame_2libtwolame_2common_8h" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/common.h</includedby>
    <includedby refid="availbits_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/availbits.c</includedby>
    <includedby refid="bitbuffer_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/bitbuffer.c</includedby>
    <includedby refid="twolame_2libtwolame_2crc_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/crc.c</includedby>
    <includedby refid="dab_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/dab.c</includedby>
    <includedby refid="twolame_2libtwolame_2encode_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/encode.c</includedby>
    <includedby refid="energy_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/energy.c</includedby>
    <includedby refid="twolame_2libtwolame_2fft_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/fft.c</includedby>
    <includedby refid="get__set_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c</includedby>
    <includedby refid="psycho__0_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/psycho_0.c</includedby>
    <includedby refid="psycho__1_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/psycho_1.c</includedby>
    <includedby refid="psycho__2_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/psycho_2.c</includedby>
    <includedby refid="psycho__3_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/psycho_3.c</includedby>
    <includedby refid="psycho__4_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/psycho_4.c</includedby>
    <includedby refid="psycho__n1_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/psycho_n1.c</includedby>
    <includedby refid="subband_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/subband.c</includedby>
    <includedby refid="twolame_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.c</includedby>
    <includedby refid="twolame_2libtwolame_2util_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/util.c</includedby>
    <includedby refid="simplefrontend_8c" local="no">C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/simplefrontend/simplefrontend.c</includedby>
    <invincdepgraph>
      <node id="32675">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/psycho_2.c</label>
        <link refid="psycho__2_8c"/>
      </node>
      <node id="32670">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.c</label>
        <link refid="twolame_8c"/>
      </node>
      <node id="32658">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h</label>
        <link refid="twolame.h"/>
        <childnode refid="32659" relation="include">
        </childnode>
        <childnode refid="32660" relation="include">
        </childnode>
        <childnode refid="32661" relation="include">
        </childnode>
        <childnode refid="32662" relation="include">
        </childnode>
        <childnode refid="32663" relation="include">
        </childnode>
        <childnode refid="32665" relation="include">
        </childnode>
        <childnode refid="32678" relation="include">
        </childnode>
        <childnode refid="32666" relation="include">
        </childnode>
        <childnode refid="32667" relation="include">
        </childnode>
        <childnode refid="32679" relation="include">
        </childnode>
        <childnode refid="32668" relation="include">
        </childnode>
        <childnode refid="32673" relation="include">
        </childnode>
        <childnode refid="32674" relation="include">
        </childnode>
        <childnode refid="32675" relation="include">
        </childnode>
        <childnode refid="32676" relation="include">
        </childnode>
        <childnode refid="32677" relation="include">
        </childnode>
        <childnode refid="32680" relation="include">
        </childnode>
        <childnode refid="32669" relation="include">
        </childnode>
        <childnode refid="32670" relation="include">
        </childnode>
        <childnode refid="32681" relation="include">
        </childnode>
        <childnode refid="32682" relation="include">
        </childnode>
      </node>
      <node id="32662">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/availbits.c</label>
        <link refid="availbits_8c"/>
      </node>
      <node id="32659">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/frontend/frontend.c</label>
        <link refid="frontend_8c"/>
      </node>
      <node id="32678">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/dab.c</label>
        <link refid="dab_8c"/>
      </node>
      <node id="32681">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/util.c</label>
        <link refid="twolame_2libtwolame_2util_8c"/>
      </node>
      <node id="32676">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/psycho_3.c</label>
        <link refid="psycho__3_8c"/>
      </node>
      <node id="32660">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/ath.c</label>
        <link refid="ath_8c"/>
      </node>
      <node id="32668">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c</label>
        <link refid="get__set_8c"/>
      </node>
      <node id="32666">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/encode.c</label>
        <link refid="twolame_2libtwolame_2encode_8c"/>
      </node>
      <node id="32669">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/subband.c</label>
        <link refid="subband_8c"/>
      </node>
      <node id="32679">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/fft.c</label>
        <link refid="twolame_2libtwolame_2fft_8c"/>
      </node>
      <node id="32677">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/psycho_4.c</label>
        <link refid="psycho__4_8c"/>
      </node>
      <node id="32673">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/psycho_0.c</label>
        <link refid="psycho__0_8c"/>
      </node>
      <node id="32682">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/simplefrontend/simplefrontend.c</label>
        <link refid="simplefrontend_8c"/>
      </node>
      <node id="32680">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/psycho_n1.c</label>
        <link refid="psycho__n1_8c"/>
      </node>
      <node id="32665">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/crc.c</label>
        <link refid="twolame_2libtwolame_2crc_8c"/>
      </node>
      <node id="32663">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/bitbuffer.c</label>
        <link refid="bitbuffer_8c"/>
      </node>
      <node id="32664">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/bitbuffer.h</label>
        <link refid="bitbuffer_8h"/>
        <childnode refid="32663" relation="include">
        </childnode>
        <childnode refid="32665" relation="include">
        </childnode>
        <childnode refid="32666" relation="include">
        </childnode>
        <childnode refid="32667" relation="include">
        </childnode>
        <childnode refid="32668" relation="include">
        </childnode>
        <childnode refid="32669" relation="include">
        </childnode>
        <childnode refid="32670" relation="include">
        </childnode>
      </node>
      <node id="32674">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/psycho_1.c</label>
        <link refid="psycho__1_8c"/>
      </node>
      <node id="32661">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/common.h</label>
        <link refid="twolame_2libtwolame_2common_8h"/>
        <childnode refid="32660" relation="include">
        </childnode>
        <childnode refid="32662" relation="include">
        </childnode>
        <childnode refid="32663" relation="include">
        </childnode>
        <childnode refid="32664" relation="include">
        </childnode>
        <childnode refid="32671" relation="include">
        </childnode>
        <childnode refid="32665" relation="include">
        </childnode>
        <childnode refid="32678" relation="include">
        </childnode>
        <childnode refid="32666" relation="include">
        </childnode>
        <childnode refid="32667" relation="include">
        </childnode>
        <childnode refid="32679" relation="include">
        </childnode>
        <childnode refid="32668" relation="include">
        </childnode>
        <childnode refid="32673" relation="include">
        </childnode>
        <childnode refid="32674" relation="include">
        </childnode>
        <childnode refid="32675" relation="include">
        </childnode>
        <childnode refid="32676" relation="include">
        </childnode>
        <childnode refid="32677" relation="include">
        </childnode>
        <childnode refid="32680" relation="include">
        </childnode>
        <childnode refid="32669" relation="include">
        </childnode>
        <childnode refid="32670" relation="include">
        </childnode>
        <childnode refid="32681" relation="include">
        </childnode>
      </node>
      <node id="32667">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/energy.c</label>
        <link refid="energy_8c"/>
      </node>
      <node id="32672">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/mem.c</label>
        <link refid="twolame_2libtwolame_2mem_8c"/>
      </node>
      <node id="32671">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/mem.h</label>
        <link refid="twolame_2libtwolame_2mem_8h"/>
        <childnode refid="32663" relation="include">
        </childnode>
        <childnode refid="32668" relation="include">
        </childnode>
        <childnode refid="32672" relation="include">
        </childnode>
        <childnode refid="32673" relation="include">
        </childnode>
        <childnode refid="32674" relation="include">
        </childnode>
        <childnode refid="32675" relation="include">
        </childnode>
        <childnode refid="32676" relation="include">
        </childnode>
        <childnode refid="32677" relation="include">
        </childnode>
        <childnode refid="32669" relation="include">
        </childnode>
        <childnode refid="32670" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" prot="public" static="no">
        <name>DLL_EXPORT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="53" column="10" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="twolame_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" prot="public" static="no">
        <name>TRUE</name>
        <initializer>(1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="58" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="twolame_8h_1aa93f0eb578d23995850d61f7d61c55c1" prot="public" static="no">
        <name>FALSE</name>
        <initializer>(0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="62" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="twolame_8h_1a09bd4a4970ba3c49e9f1327daefeb8c1" prot="public" static="no">
        <name>TWOLAME_SAMPLES_PER_FRAME</name>
        <initializer>(1152)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Number of samples per frame of Layer 2 MPEG Audio </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="111" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="twolame_8h_1a91879045676d9146c9bfcb8b0a30b57f" prot="public" static="no">
        <name>TWOLAME_MPEG_mode</name>
        <enumvalue id="twolame_8h_1a91879045676d9146c9bfcb8b0a30b57fab0b25df193c4be6b5c7bda71166df264" prot="public">
          <name>TWOLAME_AUTO_MODE</name>
          <initializer>= -1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Choose Mode Automatically </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="twolame_8h_1a91879045676d9146c9bfcb8b0a30b57fa785df1b22ebb296610b938793906f66d" prot="public">
          <name>TWOLAME_STEREO</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Stereo </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="twolame_8h_1a91879045676d9146c9bfcb8b0a30b57fa944018843ef67ac47d3e680c749b2967" prot="public">
          <name>TWOLAME_JOINT_STEREO</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Joint Stereo </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="twolame_8h_1a91879045676d9146c9bfcb8b0a30b57fae054f4dcb5762d5c58c3db92e5338601" prot="public">
          <name>TWOLAME_DUAL_CHANNEL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Dual Channel </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="twolame_8h_1a91879045676d9146c9bfcb8b0a30b57fa482d714be97e4cb21c223850ece06456" prot="public">
          <name>TWOLAME_MONO</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Mono </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="twolame_8h_1a91879045676d9146c9bfcb8b0a30b57fa7f4ce5759f5a9e6b24621c96e522f5a7" prot="public">
          <name>TWOLAME_NOT_SET</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>MPEG modes </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="67" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" bodystart="67" bodyend="77"/>
      </memberdef>
      <memberdef kind="enum" id="twolame_8h_1a0f4e287fec57b8ba38e28395996eb6e3" prot="public" static="no">
        <name>TWOLAME_MPEG_version</name>
        <enumvalue id="twolame_8h_1a0f4e287fec57b8ba38e28395996eb6e3a89b91170fa0bb8423f45ff7a1b45b1d8" prot="public">
          <name>TWOLAME_MPEG2</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>MPEG-2 - for sample rates less than 32k </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="twolame_8h_1a0f4e287fec57b8ba38e28395996eb6e3ae8dc89cc37c6203400e64768eb6b59d5" prot="public">
          <name>TWOLAME_MPEG1</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>MPEG-1 </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>MPEG Version.</para><para>MPEG2 is for Lower Sampling Frequencies - LSF &lt; 32000. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="84" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" bodystart="84" bodyend="88"/>
      </memberdef>
      <memberdef kind="enum" id="twolame_8h_1af83f4f73e4c57db45269667b4421730e" prot="public" static="no">
        <name>TWOLAME_Padding</name>
        <enumvalue id="twolame_8h_1af83f4f73e4c57db45269667b4421730eab2dd0f81e433f7f708622c96466dbff3" prot="public">
          <name>TWOLAME_PAD_NO</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>No Padding </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="twolame_8h_1af83f4f73e4c57db45269667b4421730eaecf832eac6e75140fc9397b621e590a8" prot="public">
          <name>TWOLAME_PAD_ALL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Pad all frames </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Padding types. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="92" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" bodystart="92" bodyend="96"/>
      </memberdef>
      <memberdef kind="enum" id="twolame_8h_1a50521fc75f96f949634f8f6536c1be1b" prot="public" static="no">
        <name>TWOLAME_Emphasis</name>
        <enumvalue id="twolame_8h_1a50521fc75f96f949634f8f6536c1be1ba73eced6173758db8e4186d07ee510dd1" prot="public">
          <name>TWOLAME_EMPHASIS_N</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>No Emphasis </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="twolame_8h_1a50521fc75f96f949634f8f6536c1be1baeca80cfc79ece58fd01e06f974394c6e" prot="public">
          <name>TWOLAME_EMPHASIS_5</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>50/15 ms </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="twolame_8h_1a50521fc75f96f949634f8f6536c1be1ba038be927e1993710372565262a73e62d" prot="public">
          <name>TWOLAME_EMPHASIS_C</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>CCIT J.17 </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Emphasis types. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="99" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" bodystart="99" bodyend="107"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" prot="public" static="no">
        <type>struct <ref refid="structtwolame__options__struct" kindref="compound">twolame_options_struct</ref></type>
        <definition>typedef struct twolame_options_struct twolame_options</definition>
        <argsstring></argsstring>
        <name>twolame_options</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Opaque data type for the twolame encoder options. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="908" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="twolame_8h_1a7aef1ecad75ff1bc915b6e5210732d6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref> <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
        <definition>DLL_EXPORT const char* get_twolame_version</definition>
        <argsstring>(void)</argsstring>
        <name>get_twolame_version</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the version number of the TwoLAME library. eg &quot;0.3.1&quot;.</para><para><simplesect kind="return"><para>The version number as a C string </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="129" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/util.c" bodystart="38" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8h_1a90d12a51b6454b43bc4a6baeab2e9c10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref> <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
        <definition>DLL_EXPORT const char* get_twolame_url</definition>
        <argsstring>(void)</argsstring>
        <name>get_twolame_url</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the URL of the TwoLAME homepage. eg &quot;http://www.twolame.org/&quot;.</para><para><simplesect kind="return"><para>The url as a C string </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="137" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/util.c" bodystart="47" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8h_1a5f4a8857014e89457f592de6918f4856" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>DLL_EXPORT void twolame_print_config</definition>
        <argsstring>(twolame_options *glopts)</argsstring>
        <name>twolame_print_config</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Print the library version and encoder parameter settings to STDERR.</para><para>Will display differnent ammounts of information depending on the verbosity setting. If verbosity is set to 0 then no message will be displayed.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>Options pointer created by <ref refid="twolame_8h_1af8fdf11803260a0c16c0cffe946d14fa" kindref="member">twolame_init()</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="150" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/util.c" bodystart="177" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8h_1af8fdf11803260a0c16c0cffe946d14fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref> <ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
        <definition>DLL_EXPORT twolame_options* twolame_init</definition>
        <argsstring>(void)</argsstring>
        <name>twolame_init</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialise the twolame encoder.</para><para>Sets defaults for all parameters. Will return NULL if malloc() failed, otherwise returns a pointer which you then need to pass to all future API calls.</para><para><simplesect kind="return"><para>a pointer to your new options data structure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="162" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.c" bodystart="60" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8h_1a15ec415498c18916ea263a06c2741c9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>DLL_EXPORT int twolame_init_params</definition>
        <argsstring>(twolame_options *glopts)</argsstring>
        <name>twolame_init_params</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Prepare to start encoding.</para><para>You must call <ref refid="twolame_8c_1a479229b288016a4b7b1dd696e4000257" kindref="member">twolame_init_params()</ref> before you start encoding. It will check call your parameters to make sure they are valid, as well as allocating buffers and initising internally used variables.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>Options pointer created by <ref refid="twolame_8c_1ac4cdab0d6542badab38bb4ddf96957fb" kindref="member">twolame_init()</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if all patameters are valid, non-zero if something is invalid</para></simplesect>
This function should actually <emphasis>check</emphasis> the parameters to see if they make sense. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="176" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.c" bodystart="177" bodyend="366"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8h_1aaa714b5fbd2e6fd5a95e7af7e5d640e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>DLL_EXPORT int twolame_encode_buffer</definition>
        <argsstring>(twolame_options *glopts, const short int leftpcm[], const short int rightpcm[], int num_samples, unsigned char *mp2buffer, int mp2buffer_size)</argsstring>
        <name>twolame_encode_buffer</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> short <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>leftpcm</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> short <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>rightpcm</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>num_samples</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>mp2buffer</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>mp2buffer_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Encode some 16-bit PCM audio to MP2.</para><para>Takes 16-bit PCM audio samples from seperate left and right buffers and places encoded audio into mp2buffer.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>twolame options pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>leftpcm</parametername>
</parameternamelist>
<parameterdescription>
<para>Left channel audio samples </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rightpcm</parametername>
</parameternamelist>
<parameterdescription>
<para>Right channel audio samples </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_samples</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of samples per channel </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mp2buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to place encoded audio into </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mp2buffer_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the output buffer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The number of bytes put in output buffer or a negative value on error </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="193" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.c" bodystart="618" bodyend="673"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8h_1a99abbe26ce5b5b21766017d92ff7581d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>DLL_EXPORT int twolame_encode_buffer_interleaved</definition>
        <argsstring>(twolame_options *glopts, const short int pcm[], int num_samples, unsigned char *mp2buffer, int mp2buffer_size)</argsstring>
        <name>twolame_encode_buffer_interleaved</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> short <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>pcm</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>num_samples</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>mp2buffer</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>mp2buffer_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Encode some 16-bit PCM audio to MP2.</para><para>Takes interleaved 16-bit PCM audio samples from a single buffer and places encoded audio into mp2buffer.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>twolame options pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>Audio samples for left AND right channels </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_samples</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of samples per channel </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mp2buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to place encoded audio into </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mp2buffer_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the output buffer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The number of bytes put in output buffer or a negative value on error </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="213" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.c" bodystart="676" bodyend="730"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8h_1a1e851bfce6674e56c649ddd9c990cc31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>DLL_EXPORT int twolame_encode_buffer_float32</definition>
        <argsstring>(twolame_options *glopts, const float leftpcm[], const float rightpcm[], int num_samples, unsigned char *mp2buffer, int mp2buffer_size)</argsstring>
        <name>twolame_encode_buffer_float32</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> float</type>
          <declname>leftpcm</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> float</type>
          <declname>rightpcm</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>num_samples</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>mp2buffer</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>mp2buffer_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Encode some 32-bit PCM audio to MP2.</para><para>Takes 32-bit floating point PCM audio samples from seperate left and right buffers and places encoded audio into mp2buffer.</para><para>Note: the 32-bit samples are currently scaled down to 16-bit samples internally.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>twolame options pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>leftpcm</parametername>
</parameternamelist>
<parameterdescription>
<para>Left channel audio samples </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rightpcm</parametername>
</parameternamelist>
<parameterdescription>
<para>Right channel audio samples </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_samples</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of samples per channel </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mp2buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to place encoded audio into </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mp2buffer_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the output buffer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The number of bytes put in output buffer or a negative value on error </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="236" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.c" bodystart="760" bodyend="815"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8h_1aca716bf42f767e889c0505206c3f1160" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int twolame_encode_buffer_float32_interleaved</definition>
        <argsstring>(twolame_options *glopts, const float pcm[], int num_samples, unsigned char *mp2buffer, int mp2buffer_size)</argsstring>
        <name>twolame_encode_buffer_float32_interleaved</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> float</type>
          <declname>pcm</declname>
          <array>[]</array>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>num_samples</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>mp2buffer</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>mp2buffer_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Encode some 32-bit PCM audio to MP2.</para><para>Takes 32-bit floating point PCM audio samples from a single buffer and places encoded audio into mp2buffer.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>twolame options pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pcm</parametername>
</parameternamelist>
<parameterdescription>
<para>Audio samples for left AND right channels </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_samples</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of samples per channel </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mp2buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to place encoded audio into </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mp2buffer_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the output buffer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The number of bytes put in output buffer or a negative value on error </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="256" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.c" bodystart="818" bodyend="873"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8h_1aa9f0c1b5bafbc471d1549825e6d21257" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>DLL_EXPORT int twolame_encode_flush</definition>
        <argsstring>(twolame_options *glopts, unsigned char *mp2buffer, int mp2buffer_size)</argsstring>
        <name>twolame_encode_flush</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>mp2buffer</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>mp2buffer_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Encode any remains buffered PCM audio to MP2.</para><para>Encodes any remaining audio samples in the libtwolame internal sample buffer. This function will return at most a single frame of MPEG Audio, and at least 0 frames.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>twolame options pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mp2buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Buffer to place encoded audio into </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mp2buffer_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the output buffer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The number of bytes put in output buffer or a negative value on error </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="274" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.c" bodystart="877" bodyend="903"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8h_1a355c6061b15d6ee076c242aadea8e2c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>DLL_EXPORT void twolame_close</definition>
        <argsstring>(twolame_options **glopts)</argsstring>
        <name>twolame_close</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> **</type>
          <declname>glopts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Shut down the twolame encoder.</para><para>Shuts down the twolame encoder and frees all memory that it previously allocated. You should call this once you have finished all your encoding. This function will set your glopts pointer to NULL for you.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="287" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.c" bodystart="908" bodyend="932"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8h_1ad4e979ef0af1c86c614a8bf8d201804b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>DLL_EXPORT int twolame_set_verbosity</definition>
        <argsstring>(twolame_options *glopts, int verbosity)</argsstring>
        <name>twolame_set_verbosity</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>verbosity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the verbosity of the encoder.</para><para>Sets how verbose the encoder is with the debug and informational messages it displays. The higher the number, the more messages it will display. Set to 0 for no status messages to STDERR ( error messages will still be displayed ).</para><para>Default: 1</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>verbosity</parametername>
</parameternamelist>
<parameterdescription>
<para>integer between 0 and 10 </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, non-zero on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="306" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="340" bodyend="348"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8h_1a28f7b0af71d4528684c7743d21285191" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>DLL_EXPORT int twolame_get_verbosity</definition>
        <argsstring>(twolame_options *glopts)</argsstring>
        <name>twolame_get_verbosity</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the verbosity of the encoder.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>integer indicating the verbosity of the encoder (0-10) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="314" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="350" bodyend="353"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8h_1a86b4fad6c27ec3d5c8d4b7740374e0bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>DLL_EXPORT int twolame_set_mode</definition>
        <argsstring>(twolame_options *glopts, TWOLAME_MPEG_mode mode)</argsstring>
        <name>twolame_set_mode</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type><ref refid="twolame_8h_1a91879045676d9146c9bfcb8b0a30b57f" kindref="member">TWOLAME_MPEG_mode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the MPEG Audio Mode (Mono, Stereo, etc) for the output stream.</para><para>Default: TWOLAME_AUTO_MODE</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>the mode to set to </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, non-zero on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="327" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="42" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8h_1a309811c4f28f27a35325efc88f58e7ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref> <ref refid="twolame_8h_1a91879045676d9146c9bfcb8b0a30b57f" kindref="member">TWOLAME_MPEG_mode</ref></type>
        <definition>DLL_EXPORT TWOLAME_MPEG_mode twolame_get_mode</definition>
        <argsstring>(twolame_options *glopts)</argsstring>
        <name>twolame_get_mode</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the MPEG Audio mode of the output stream.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the MPEG audio mode </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="335" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="52" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8h_1a561bb2020ba9dc4fc91256a0087839a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref> <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
        <definition>DLL_EXPORT const char* twolame_get_mode_name</definition>
        <argsstring>(twolame_options *glopts)</argsstring>
        <name>twolame_get_mode_name</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a string name for the current MPEG Audio mode.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the name of the MPEG audio mode as a string </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="343" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="57" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8h_1a09563eaee791ebbc29dbc05624d85d27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>DLL_EXPORT int twolame_set_version</definition>
        <argsstring>(twolame_options *glopts, TWOLAME_MPEG_version version)</argsstring>
        <name>twolame_set_version</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type><ref refid="twolame_8h_1a0f4e287fec57b8ba38e28395996eb6e3" kindref="member">TWOLAME_MPEG_version</ref></type>
          <declname>version</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the MPEG version of the MPEG audio stream.</para><para>Default: TWOLAME_MPEG1</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>version</parametername>
</parameternamelist>
<parameterdescription>
<para>the version to set to </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, non-zero on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="355" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="396" bodyend="402"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8h_1a6f78eecf3a9833fe9b0acdd2007e3dfc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref> <ref refid="twolame_8h_1a0f4e287fec57b8ba38e28395996eb6e3" kindref="member">TWOLAME_MPEG_version</ref></type>
        <definition>DLL_EXPORT TWOLAME_MPEG_version twolame_get_version</definition>
        <argsstring>(twolame_options *glopts)</argsstring>
        <name>twolame_get_version</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the MPEG version of the output stream.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the MPEG version </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="363" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="404" bodyend="407"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8h_1a69bde4f6190a7e8f2e376c54342de74f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref> <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
        <definition>DLL_EXPORT const char* twolame_get_version_name</definition>
        <argsstring>(twolame_options *glopts)</argsstring>
        <name>twolame_get_version_name</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a string name for the current MPEG version.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the name of the MPEG version as a string </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="371" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="409" bodyend="412"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8h_1a169334cc44b490a382233ac1cc7c9f9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>DLL_EXPORT int twolame_get_framelength</definition>
        <argsstring>(twolame_options *glopts)</argsstring>
        <name>twolame_get_framelength</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the number of bytes per MPEG audio frame, for current settings.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the number of bytes per frame </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="380" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/util.c" bodystart="163" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8h_1ad7fc5c1e3507ef7f4d985b009475be99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>DLL_EXPORT int twolame_set_psymodel</definition>
        <argsstring>(twolame_options *glopts, int psymodel)</argsstring>
        <name>twolame_set_psymodel</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>psymodel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the Psychoacoustic Model used to encode the audio.</para><para>Default: 3</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>psymodel</parametername>
</parameternamelist>
<parameterdescription>
<para>the psychoacoustic model number </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, non-zero on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="392" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="69" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8h_1a242856435ba7310070a25fd0dd927e14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>DLL_EXPORT int twolame_get_psymodel</definition>
        <argsstring>(twolame_options *glopts)</argsstring>
        <name>twolame_get_psymodel</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the Psychoacoustic Model used to encode the audio.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the psychoacoustic model number </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="400" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="75" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8h_1a08401d4a34bfe57e7c8857c835938937" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>DLL_EXPORT int twolame_set_num_channels</definition>
        <argsstring>(twolame_options *glopts, int num_channels)</argsstring>
        <name>twolame_set_num_channels</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>num_channels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the number of channels in the input stream.</para><para>If this is different the number of channels in the output stream (set by mode) then the encoder will automatically downmix/upmix the audio.</para><para>Default: 2</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_channels</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of input channels </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, non-zero on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="416" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="82" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8h_1aca0c25dca2162c1b08de81e441b9c8df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>DLL_EXPORT int twolame_get_num_channels</definition>
        <argsstring>(twolame_options *glopts)</argsstring>
        <name>twolame_get_num_channels</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the number of channels in the input stream.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the number of channels </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="424" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="88" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8h_1ac7cc36dc2f7996f28acdfba753ac8002" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>DLL_EXPORT int twolame_set_scale</definition>
        <argsstring>(twolame_options *glopts, float scale)</argsstring>
        <name>twolame_set_scale</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type>float</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the scaling level for audio before encoding.</para><para>Set to 0 to disable.</para><para>Default: 0</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>scale</parametername>
</parameternamelist>
<parameterdescription>
<para>the amount to scale by </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, non-zero on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="438" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="93" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8h_1add70524c31b360ad49f5d283f52c82e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref> float</type>
        <definition>DLL_EXPORT float twolame_get_scale</definition>
        <argsstring>(twolame_options *glopts)</argsstring>
        <name>twolame_get_scale</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the scaling level for audio before encoding.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the amount to scale audio sample by </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="446" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="103" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8h_1a3928e963bd630e3b6c7f31c4a6dd0a53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>DLL_EXPORT int twolame_set_scale_left</definition>
        <argsstring>(twolame_options *glopts, float scale)</argsstring>
        <name>twolame_set_scale_left</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type>float</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the scaling level for left channel audio before encoding.</para><para>Set to 0 to disable.</para><para>Default: 0</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>scale</parametername>
</parameternamelist>
<parameterdescription>
<para>the amount to scale by </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, non-zero on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="459" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="108" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8h_1a635af5f1dea800c594a79ef8ddc83998" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref> float</type>
        <definition>DLL_EXPORT float twolame_get_scale_left</definition>
        <argsstring>(twolame_options *glopts)</argsstring>
        <name>twolame_get_scale_left</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the scaling level for audio left channel before encoding.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the amount to scale left channel audio samples by </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="467" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="118" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8h_1ac736903e14599a9058391d2edec797fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>DLL_EXPORT int twolame_set_scale_right</definition>
        <argsstring>(twolame_options *glopts, float scale)</argsstring>
        <name>twolame_set_scale_right</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type>float</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the scaling level for right channel audio before encoding.</para><para>Set to 0 to disable.</para><para>Default: 0</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>scale</parametername>
</parameternamelist>
<parameterdescription>
<para>the amount to scale by </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, non-zero on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="481" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="123" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8h_1aa65452418e67d13a813f5fab929d366f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref> float</type>
        <definition>DLL_EXPORT float twolame_get_scale_right</definition>
        <argsstring>(twolame_options *glopts)</argsstring>
        <name>twolame_get_scale_right</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the scaling level for audio right channel before encoding.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the amount to scale right channel audio samples by </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="489" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="133" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8h_1ac0bce049d535a5b30da07157e81ec2ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>DLL_EXPORT int twolame_set_in_samplerate</definition>
        <argsstring>(twolame_options *glopts, int samplerate)</argsstring>
        <name>twolame_set_in_samplerate</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>samplerate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the samplerate of the PCM audio input.</para><para>Default: 44100</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>samplerate</parametername>
</parameternamelist>
<parameterdescription>
<para>the samplerate in Hz </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, non-zero on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="501" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="139" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8h_1aa1f8600eec560d783b0387863dfa076b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>DLL_EXPORT int twolame_get_in_samplerate</definition>
        <argsstring>(twolame_options *glopts)</argsstring>
        <name>twolame_get_in_samplerate</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the samplerate of the PCM audio input.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the input samplerate </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="509" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="145" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8h_1a20b8dc08001a9d52a7a9a256a499dcf9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>DLL_EXPORT int twolame_set_out_samplerate</definition>
        <argsstring>(twolame_options *glopts, int samplerate)</argsstring>
        <name>twolame_set_out_samplerate</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>samplerate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the samplerate of the MPEG audio output.</para><para>Default: 44100</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>samplerate</parametername>
</parameternamelist>
<parameterdescription>
<para>the samplerate in Hz </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, non-zero on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="521" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="150" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8h_1ab7cc017a6bd206ca5d651bd42ee13e7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>DLL_EXPORT int twolame_get_out_samplerate</definition>
        <argsstring>(twolame_options *glopts)</argsstring>
        <name>twolame_get_out_samplerate</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the samplerate of the MPEG audio output.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the output samplerate </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="529" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="156" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8h_1a9034da1bbef0ce8055ccc53f59a7e475" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>DLL_EXPORT int twolame_set_bitrate</definition>
        <argsstring>(twolame_options *glopts, int bitrate)</argsstring>
        <name>twolame_set_bitrate</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>bitrate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the bitrate of the MPEG audio output stream.</para><para>Default: 192</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bitrate</parametername>
</parameternamelist>
<parameterdescription>
<para>the bitrate in kbps </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, non-zero on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="541" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="174" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8h_1af0f526bc692b927f75ec31b805702df1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>DLL_EXPORT int twolame_get_bitrate</definition>
        <argsstring>(twolame_options *glopts)</argsstring>
        <name>twolame_get_bitrate</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the bitrate of the MPEG audio output.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the output bitrate in kbps </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="549" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="180" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8h_1a7feebf08521fa56a24b9d4b7e3e9a3b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>DLL_EXPORT int twolame_set_brate</definition>
        <argsstring>(twolame_options *glopts, int bitrate)</argsstring>
        <name>twolame_set_brate</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>bitrate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the bitrate of the MPEG audio output stream (LAME style).</para><para>same as <ref refid="twolame_8h_1a9034da1bbef0ce8055ccc53f59a7e475" kindref="member">twolame_set_bitrate()</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="556" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="161" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8h_1ad52e512028ede9e12c8a78e66f910634" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>DLL_EXPORT int twolame_get_brate</definition>
        <argsstring>(twolame_options *glopts)</argsstring>
        <name>twolame_get_brate</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the bitrate of the MPEG audio output stream (LAME style).</para><para>same as <ref refid="twolame_8h_1af0f526bc692b927f75ec31b805702df1" kindref="member">twolame_get_bitrate()</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="563" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="167" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8h_1aa1db9d57714449fecff3e655d3421628" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>DLL_EXPORT int twolame_set_padding</definition>
        <argsstring>(twolame_options *glopts, TWOLAME_Padding padding)</argsstring>
        <name>twolame_set_padding</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type><ref refid="twolame_8h_1af83f4f73e4c57db45269667b4421730e" kindref="member">TWOLAME_Padding</ref></type>
          <declname>padding</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set frame padding for the MPEG audio output stream.</para><para>i.e. adjust frame sizes to achieve overall target bitrate</para><para>Default: TWOLAME_PAD_NO</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>padding</parametername>
</parameternamelist>
<parameterdescription>
<para>the padding type </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, non-zero on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="577" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="242" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8h_1a86d6b401f8b29fe0ca945409c17e7da0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref> <ref refid="twolame_8h_1af83f4f73e4c57db45269667b4421730e" kindref="member">TWOLAME_Padding</ref></type>
        <definition>DLL_EXPORT TWOLAME_Padding twolame_get_padding</definition>
        <argsstring>(twolame_options *glopts)</argsstring>
        <name>twolame_get_padding</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the padding type of the MPEG audio output.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the output bitrate in kbps </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="584" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="252" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8h_1a150dbbf205f4b9cb4eabc579d57a5693" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>DLL_EXPORT int twolame_set_energy_levels</definition>
        <argsstring>(twolame_options *glopts, int energylevels)</argsstring>
        <name>twolame_set_energy_levels</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>energylevels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable/Disable Energy Level Extension.</para><para>Enable writing the peak PCM level (energy level) at the end of each MPEG audio frame (in the ancillary bits). This function will automatically call <ref refid="twolame_8h_1a8dd1e24a3db3a95b5c2dd15c1c85a692" kindref="member">twolame_set_num_ancillary_bits()</ref> to set the required number of ancillary bits for this feature.</para><para>The energy level extension is commonly used in the broadcast industry for visualising the audio in editing applications without decoding.</para><para>Default: FALSE</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>energylevels</parametername>
</parameternamelist>
<parameterdescription>
<para>energy level extension state (TRUE/FALSE) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, non-zero on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="604" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="379" bodyend="388"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8h_1a358f7e1555bdce77f65c0ac70b3bac17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>DLL_EXPORT int twolame_get_energy_levels</definition>
        <argsstring>(twolame_options *glopts)</argsstring>
        <name>twolame_get_energy_levels</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the Energy Level Extension state.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>state of the Energy Level Extension (TRUE/FALSE) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="612" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="391" bodyend="394"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8h_1a8dd1e24a3db3a95b5c2dd15c1c85a692" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>DLL_EXPORT int twolame_set_num_ancillary_bits</definition>
        <argsstring>(twolame_options *glopts, int num)</argsstring>
        <name>twolame_set_num_ancillary_bits</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set number of Ancillary Bits at end of frame.</para><para>Default: 0</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bits to reserve </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, non-zero on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="624" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="366" bodyend="372"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8h_1a104e50b6db64a846fc7491ea47a7f797" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>DLL_EXPORT int twolame_get_num_ancillary_bits</definition>
        <argsstring>(twolame_options *glopts)</argsstring>
        <name>twolame_get_num_ancillary_bits</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the number of Ancillary Bits at end of frame.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>number of Ancillary Bits at end of frame </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="632" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="374" bodyend="377"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8h_1ae5fcfeeda2669d95a4549b07651e909e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>DLL_EXPORT int twolame_set_emphasis</definition>
        <argsstring>(twolame_options *glopts, TWOLAME_Emphasis emphasis)</argsstring>
        <name>twolame_set_emphasis</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type><ref refid="twolame_8h_1a50521fc75f96f949634f8f6536c1be1b" kindref="member">TWOLAME_Emphasis</ref></type>
          <declname>emphasis</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the type of pre-emphasis to be applied to the decoded audio.</para><para>Default: TWOLAME_EMPHASIS_N</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>emphasis</parametername>
</parameternamelist>
<parameterdescription>
<para>the type of pre-emphasis </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, non-zero on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="645" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="186" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8h_1a641614d6127eb6dc5b5a826467a9bafe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref> <ref refid="twolame_8h_1a50521fc75f96f949634f8f6536c1be1b" kindref="member">TWOLAME_Emphasis</ref></type>
        <definition>DLL_EXPORT TWOLAME_Emphasis twolame_get_emphasis</definition>
        <argsstring>(twolame_options *glopts)</argsstring>
        <name>twolame_get_emphasis</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the type of pre-emphasis to be applied to the decoded audio.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the type of pre-emphasis </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="653" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="195" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8h_1a919f594488579a49be0db56bb25f7da8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>DLL_EXPORT int twolame_set_error_protection</definition>
        <argsstring>(twolame_options *glopts, int err_protection)</argsstring>
        <name>twolame_set_error_protection</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>err_protection</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable/Disable CRC Error Protection.</para><para>Default: FALSE</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err_protection</parametername>
</parameternamelist>
<parameterdescription>
<para>error protection state (TRUE/FALSE) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, non-zero on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="665" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="200" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8h_1a01ce8389e89a0a00b000be8a1e35c5f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>DLL_EXPORT int twolame_get_error_protection</definition>
        <argsstring>(twolame_options *glopts)</argsstring>
        <name>twolame_get_error_protection</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the CRC Error Protection state.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>state of Error Protection (TRUE/FALSE) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="673" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="209" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8h_1a1d5a81398be74b61121bfa214efa8b12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>DLL_EXPORT int twolame_set_copyright</definition>
        <argsstring>(twolame_options *glopts, int copyright)</argsstring>
        <name>twolame_set_copyright</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>copyright</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the MPEG Audio Copyright flag.</para><para>Indicates that MPEG stream is copyrighted.</para><para>Default: FALSE</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>copyright</parametername>
</parameternamelist>
<parameterdescription>
<para>copyright flag state (TRUE/FALSE) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, non-zero on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="687" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="214" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8h_1a4e72eb5e210d91fd3f4c3b610808fbc1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>DLL_EXPORT int twolame_get_copyright</definition>
        <argsstring>(twolame_options *glopts)</argsstring>
        <name>twolame_get_copyright</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the copright flag state</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>state of the copyright flag (TRUE/FALSE) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="695" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="223" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8h_1a0521b5dc1b74240cb2f62a576eeb1433" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>DLL_EXPORT int twolame_set_original</definition>
        <argsstring>(twolame_options *glopts, int original)</argsstring>
        <name>twolame_set_original</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>original</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the MPEG Audio Original flag.</para><para>Default: FALSE</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>original</parametername>
</parameternamelist>
<parameterdescription>
<para>original flag state (TRUE/FALSE) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, non-zero on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="707" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="228" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8h_1a6be4154d7fbb3f4c858b4041c7537032" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>DLL_EXPORT int twolame_get_original</definition>
        <argsstring>(twolame_options *glopts)</argsstring>
        <name>twolame_get_original</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the origianl flag state.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>state of the original flag (TRUE/FALSE) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="715" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="237" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8h_1a6abb3c4847bc08d32270c9cf293ea394" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>DLL_EXPORT int twolame_set_VBR</definition>
        <argsstring>(twolame_options *glopts, int vbr)</argsstring>
        <name>twolame_set_VBR</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>vbr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable/Disable VBR (Variable Bit Rate) mode.</para><para>Default: FALSE</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vbr</parametername>
</parameternamelist>
<parameterdescription>
<para>VBR state (TRUE/FALSE) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, non-zero on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="727" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="257" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8h_1ae918f086d86ccf6382aa0ea8fb445600" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>DLL_EXPORT int twolame_get_VBR</definition>
        <argsstring>(twolame_options *glopts)</argsstring>
        <name>twolame_get_VBR</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the VBR state.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>state of VBR (TRUE/FALSE) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="735" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="266" bodyend="269"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8h_1a3e4a88d187013d6e44545a387c3326c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>DLL_EXPORT int twolame_set_VBR_level</definition>
        <argsstring>(twolame_options *glopts, float level)</argsstring>
        <name>twolame_set_VBR_level</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type>float</type>
          <declname>level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the level/quality of the VBR audio.</para><para>The level value can is a measurement of quality - the higher the level the higher the average bitrate of the resultant file.</para><para>Default: 5.0</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>level</parametername>
</parameternamelist>
<parameterdescription>
<para>quality level (-10 to 10) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, non-zero on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="750" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="271" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8h_1a0334631935eb58f563133cf3396acbd6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref> float</type>
        <definition>DLL_EXPORT float twolame_get_VBR_level</definition>
        <argsstring>(twolame_options *glopts)</argsstring>
        <name>twolame_get_VBR_level</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the level/quality of the VBR audio.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>quality value for VBR </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="758" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="281" bodyend="284"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8h_1afe88254fbe7b2195812de6335992b134" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>DLL_EXPORT int twolame_set_VBR_q</definition>
        <argsstring>(twolame_options *glopts, float level)</argsstring>
        <name>twolame_set_VBR_q</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type>float</type>
          <declname>level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="766" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="287" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8h_1ac2a897697c00d010bb1450ef5b795e17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref> float</type>
        <definition>DLL_EXPORT float twolame_get_VBR_q</definition>
        <argsstring>(twolame_options *glopts)</argsstring>
        <name>twolame_get_VBR_q</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="767" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="298" bodyend="301"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8h_1a1d941eeea058e8175bd4cd40cf6c50f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>DLL_EXPORT int twolame_set_ATH_level</definition>
        <argsstring>(twolame_options *glopts, float level)</argsstring>
        <name>twolame_set_ATH_level</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type>float</type>
          <declname>level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the adjustment (in dB) applied to the ATH for Psycho models 3 and 4.</para><para>Default: 0.0</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>level</parametername>
</parameternamelist>
<parameterdescription>
<para>adjustment level in db </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, non-zero on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="780" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="303" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8h_1a67a7da360de56a15365194f2522132ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref> float</type>
        <definition>DLL_EXPORT float twolame_get_ATH_level</definition>
        <argsstring>(twolame_options *glopts)</argsstring>
        <name>twolame_get_ATH_level</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the adjustment (in dB) applied to the ATH for Psycho models 3 and 4.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>adjustment level in db </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="788" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="309" bodyend="312"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8h_1af903d6283680e4f80793bf18da676ae6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>DLL_EXPORT int twolame_set_VBR_max_bitrate_kbps</definition>
        <argsstring>(twolame_options *glopts, int bitrate)</argsstring>
        <name>twolame_set_VBR_max_bitrate_kbps</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>bitrate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the upper bitrate for VBR</para><para>Default: 0 (off)</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bitrate</parametername>
</parameternamelist>
<parameterdescription>
<para>upper bitrate for VBR </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, non-zero on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="800" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="355" bodyend="359"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8h_1aa8d3f9d79ee8bd34f28c8725a26314aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>DLL_EXPORT int twolame_get_VBR_max_bitrate_kbps</definition>
        <argsstring>(twolame_options *glopts)</argsstring>
        <name>twolame_get_VBR_max_bitrate_kbps</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the upper bitrate for VBR.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the upper bitrate for VBR </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="807" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="361" bodyend="364"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8h_1a3b068f0b95e269f331d646696c940b83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>DLL_EXPORT int twolame_set_quick_mode</definition>
        <argsstring>(twolame_options *glopts, int quickmode)</argsstring>
        <name>twolame_set_quick_mode</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>quickmode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable/Disable the quick mode for psycho model calculation.</para><para>Default: FALSE</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>quickmode</parametername>
</parameternamelist>
<parameterdescription>
<para>the state of quick mode (TRUE/FALSE) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, non-zero on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="819" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="314" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8h_1a1f611603c84e963c6b0b42fa674b0f16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>DLL_EXPORT int twolame_get_quick_mode</definition>
        <argsstring>(twolame_options *glopts)</argsstring>
        <name>twolame_get_quick_mode</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the state of quick mode.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the state of quick mode (TRUE/FALSE) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="826" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="323" bodyend="326"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8h_1a9cae042e9edf58fdff8a385b9d217f23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>DLL_EXPORT int twolame_set_quick_count</definition>
        <argsstring>(twolame_options *glopts, int quickcount)</argsstring>
        <name>twolame_set_quick_count</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>quickcount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set how often the psy model is calculated.</para><para>Default: 10</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>quickcount</parametername>
</parameternamelist>
<parameterdescription>
<para>number of frames between calculations </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, non-zero on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="838" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="328" bodyend="332"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8h_1aaa5dff0b669e79ec92f673f673f0580e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>DLL_EXPORT int twolame_get_quick_count</definition>
        <argsstring>(twolame_options *glopts)</argsstring>
        <name>twolame_get_quick_count</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the how often the psy model is calculated.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>number of frames between calculations </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="845" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="334" bodyend="337"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8h_1aeeaecc4c7a54d334d436cefe8052abcb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>DLL_EXPORT int twolame_set_DAB</definition>
        <argsstring>(twolame_options *glopts, int dab)</argsstring>
        <name>twolame_set_DAB</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>dab</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enable/Disable the Eureka 147 DAB extensions for MP2.</para><para>Default: FALSE</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dab</parametername>
</parameternamelist>
<parameterdescription>
<para>state of DAB extensions (TRUE/FALSE) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, non-zero on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="868" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="421" bodyend="431"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8h_1ad5b84d80062eed15ae4ab502f2f5d3dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>DLL_EXPORT int twolame_get_DAB</definition>
        <argsstring>(twolame_options *glopts)</argsstring>
        <name>twolame_get_DAB</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the state of the DAB extensions</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the state of DAB (TRUE/FALSE) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="875" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="433" bodyend="436"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8h_1acd2aff0699933a56d1029263a39ebc3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>DLL_EXPORT int twolame_set_DAB_xpad_length</definition>
        <argsstring>(twolame_options *glopts, int length)</argsstring>
        <name>twolame_set_DAB_xpad_length</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the number of bytes to reserve for DAB XPAD data.</para><para>Default: 0</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bytes to reserve </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, non-zero on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="887" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="438" bodyend="444"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8h_1aad98306618e5b802aa695bd10b4fcb5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>DLL_EXPORT int twolame_get_DAB_xpad_length</definition>
        <argsstring>(twolame_options *glopts)</argsstring>
        <name>twolame_get_DAB_xpad_length</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the number of bytes reserved for DAB XPAD data.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>number of XPAD bytes </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="895" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="446" bodyend="449"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8h_1a2dbb0183ce39593163c4daa98e3c7dbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>DLL_EXPORT int twolame_set_DAB_crc_length</definition>
        <argsstring>(twolame_options *glopts, int length)</argsstring>
        <name>twolame_set_DAB_crc_length</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the CRC error protection length for DAB.</para><para>Default: 2</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>length of DAB CRC </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if successful, non-zero on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="907" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="451" bodyend="458"/>
      </memberdef>
      <memberdef kind="function" id="twolame_8h_1a25a280dead97ed21118f86fb03f2aeaf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>DLL_EXPORT int twolame_get_DAB_crc_length</definition>
        <argsstring>(twolame_options *glopts)</argsstring>
        <name>twolame_get_DAB_crc_length</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the CRC error protection length for DAB.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>glopts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to twolame options pointer </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>length of DAB CRC </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h" line="915" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/get_set.c" bodystart="460" bodyend="463"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/>TwoLAME:<sp/>an<sp/>optimized<sp/>MPEG<sp/>Audio<sp/>Layer<sp/>Two<sp/>encoder</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>(C)<sp/>2001-2004<sp/>Michael<sp/>Cheng</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>(C)<sp/>2004-2006<sp/>The<sp/>TwoLAME<sp/>Project</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>library<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/>modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/>License<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/>version<sp/>2.1<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>library<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/>License<sp/>along<sp/>with<sp/>this<sp/>library;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/>Foundation,<sp/>Inc.,<sp/>59<sp/>Temple<sp/>Place,<sp/>Suite<sp/>330,<sp/>Boston,<sp/>MA<sp/><sp/>02111-1307<sp/><sp/>USA</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/><sp/>$Id$</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__TWOLAME_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__TWOLAME_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/>ATTENTION<sp/>WIN32<sp/>USERS!</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>By<sp/>default,<sp/>when<sp/>you<sp/>use<sp/>this<sp/>header<sp/>file,<sp/>it<sp/>is<sp/>configured<sp/>to<sp/>use</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>symbols<sp/>from<sp/>the<sp/>&quot;twolame.dll&quot;<sp/>file.<sp/>If<sp/>you<sp/>use<sp/>the<sp/>static<sp/>version<sp/>of</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/>the<sp/>library,<sp/>define<sp/>LIBTWOLAME_STATIC<sp/>prior<sp/>to<sp/>including<sp/>this<sp/>header.</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>LIBTWOLAME_STATIC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DLL_EXPORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>LIBTWOLAME_DLL_EXPORTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DLL_EXPORT<sp/>__declspec(dllexport)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DLL_EXPORT<sp/>__declspec(dllimport)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DLL_EXPORT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>TRUE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="twolame_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TRUE<sp/><sp/><sp/><sp/>(1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FALSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="twolame_8h_1aa93f0eb578d23995850d61f7d61c55c1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FALSE<sp/><sp/><sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="twolame_8h_1a91879045676d9146c9bfcb8b0a30b57f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="68" refid="twolame_8h_1a91879045676d9146c9bfcb8b0a30b57fab0b25df193c4be6b5c7bda71166df264" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a91879045676d9146c9bfcb8b0a30b57fab0b25df193c4be6b5c7bda71166df264" kindref="member">TWOLAME_AUTO_MODE</ref><sp/>=<sp/>-1,</highlight></codeline>
<codeline lineno="70" refid="twolame_8h_1a91879045676d9146c9bfcb8b0a30b57fa785df1b22ebb296610b938793906f66d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a91879045676d9146c9bfcb8b0a30b57fa785df1b22ebb296610b938793906f66d" kindref="member">TWOLAME_STEREO</ref><sp/>=<sp/>0,<sp/></highlight></codeline>
<codeline lineno="71" refid="twolame_8h_1a91879045676d9146c9bfcb8b0a30b57fa944018843ef67ac47d3e680c749b2967" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a91879045676d9146c9bfcb8b0a30b57fa944018843ef67ac47d3e680c749b2967" kindref="member">TWOLAME_JOINT_STEREO</ref>,</highlight></codeline>
<codeline lineno="73" refid="twolame_8h_1a91879045676d9146c9bfcb8b0a30b57fae054f4dcb5762d5c58c3db92e5338601" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a91879045676d9146c9bfcb8b0a30b57fae054f4dcb5762d5c58c3db92e5338601" kindref="member">TWOLAME_DUAL_CHANNEL</ref>,</highlight></codeline>
<codeline lineno="75" refid="twolame_8h_1a91879045676d9146c9bfcb8b0a30b57fa482d714be97e4cb21c223850ece06456" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a91879045676d9146c9bfcb8b0a30b57fa482d714be97e4cb21c223850ece06456" kindref="member">TWOLAME_MONO</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="76" refid="twolame_8h_1a91879045676d9146c9bfcb8b0a30b57fa7f4ce5759f5a9e6b24621c96e522f5a7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a91879045676d9146c9bfcb8b0a30b57fa7f4ce5759f5a9e6b24621c96e522f5a7" kindref="member">TWOLAME_NOT_SET</ref></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><ref refid="twolame_8h_1a91879045676d9146c9bfcb8b0a30b57f" kindref="member">TWOLAME_MPEG_mode</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="twolame_8h_1a0f4e287fec57b8ba38e28395996eb6e3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="85" refid="twolame_8h_1a0f4e287fec57b8ba38e28395996eb6e3a89b91170fa0bb8423f45ff7a1b45b1d8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a0f4e287fec57b8ba38e28395996eb6e3a89b91170fa0bb8423f45ff7a1b45b1d8" kindref="member">TWOLAME_MPEG2</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="87" refid="twolame_8h_1a0f4e287fec57b8ba38e28395996eb6e3ae8dc89cc37c6203400e64768eb6b59d5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a0f4e287fec57b8ba38e28395996eb6e3ae8dc89cc37c6203400e64768eb6b59d5" kindref="member">TWOLAME_MPEG1</ref><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><ref refid="twolame_8h_1a0f4e287fec57b8ba38e28395996eb6e3" kindref="member">TWOLAME_MPEG_version</ref>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="twolame_8h_1af83f4f73e4c57db45269667b4421730e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="93" refid="twolame_8h_1af83f4f73e4c57db45269667b4421730eab2dd0f81e433f7f708622c96466dbff3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1af83f4f73e4c57db45269667b4421730eab2dd0f81e433f7f708622c96466dbff3" kindref="member">TWOLAME_PAD_NO</ref><sp/>=<sp/>0,<sp/></highlight></codeline>
<codeline lineno="94" refid="twolame_8h_1af83f4f73e4c57db45269667b4421730eaecf832eac6e75140fc9397b621e590a8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1af83f4f73e4c57db45269667b4421730eaecf832eac6e75140fc9397b621e590a8" kindref="member">TWOLAME_PAD_ALL</ref><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="95"><highlight class="comment">//<sp/><sp/>TWOLAME_PAD_ADJUST<sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>unsupported<sp/>by<sp/>twolame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><ref refid="twolame_8h_1af83f4f73e4c57db45269667b4421730e" kindref="member">TWOLAME_Padding</ref>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="twolame_8h_1a50521fc75f96f949634f8f6536c1be1b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="100" refid="twolame_8h_1a50521fc75f96f949634f8f6536c1be1ba73eced6173758db8e4186d07ee510dd1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a50521fc75f96f949634f8f6536c1be1ba73eced6173758db8e4186d07ee510dd1" kindref="member">TWOLAME_EMPHASIS_N</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="102" refid="twolame_8h_1a50521fc75f96f949634f8f6536c1be1baeca80cfc79ece58fd01e06f974394c6e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a50521fc75f96f949634f8f6536c1be1baeca80cfc79ece58fd01e06f974394c6e" kindref="member">TWOLAME_EMPHASIS_5</ref><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reserved</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="twolame_8h_1a50521fc75f96f949634f8f6536c1be1ba038be927e1993710372565262a73e62d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a50521fc75f96f949634f8f6536c1be1ba038be927e1993710372565262a73e62d" kindref="member">TWOLAME_EMPHASIS_C</ref><sp/>=<sp/>3</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><ref refid="twolame_8h_1a50521fc75f96f949634f8f6536c1be1b" kindref="member">TWOLAME_Emphasis</ref>;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="twolame_8h_1a09bd4a4970ba3c49e9f1327daefeb8c1" refkind="member"><highlight class="preprocessor">#define<sp/>TWOLAME_SAMPLES_PER_FRAME<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1152)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtwolame__options__struct" kindref="compound">twolame_options_struct</ref>;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structtwolame__options__struct" kindref="compound">twolame_options_struct</ref><sp/><ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="twolame_8h_1a7aef1ecad75ff1bc915b6e5210732d6b" kindref="member">get_twolame_version</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="twolame_8h_1a90d12a51b6454b43bc4a6baeab2e9c10" kindref="member">get_twolame_url</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="twolame_8h_1a5f4a8857014e89457f592de6918f4856" kindref="member">twolame_print_config</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref><sp/><ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<ref refid="twolame_8h_1af8fdf11803260a0c16c0cffe946d14fa" kindref="member">twolame_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="twolame_8h_1a15ec415498c18916ea263a06c2741c9d" kindref="member">twolame_init_params</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="twolame_8h_1aaa714b5fbd2e6fd5a95e7af7e5d640e5" kindref="member">twolame_encode_buffer</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>leftpcm[],</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rightpcm[],</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_samples,</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*mp2buffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mp2buffer_size);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="twolame_8h_1a99abbe26ce5b5b21766017d92ff7581d" kindref="member">twolame_encode_buffer_interleaved</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pcm[],</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_samples,</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*mp2buffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mp2buffer_size);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="twolame_8h_1a1e851bfce6674e56c649ddd9c990cc31" kindref="member">twolame_encode_buffer_float32</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>leftpcm[],</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rightpcm[],</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_samples,</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*mp2buffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mp2buffer_size);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="twolame_8h_1aca716bf42f767e889c0505206c3f1160" kindref="member">twolame_encode_buffer_float32_interleaved</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>pcm[],</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_samples,</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*mp2buffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mp2buffer_size);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="twolame_8h_1aa9f0c1b5bafbc471d1549825e6d21257" kindref="member">twolame_encode_flush</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*mp2buffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mp2buffer_size);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="twolame_8h_1a355c6061b15d6ee076c242aadea8e2c6" kindref="member">twolame_close</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>**<sp/>glopts);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="twolame_8h_1ad4e979ef0af1c86c614a8bf8d201804b" kindref="member">twolame_set_verbosity</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structtwolame__options__struct_1a85004829f276bc6adf993ff2cb3f3fd2" kindref="member">verbosity</ref>);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="twolame_8h_1a28f7b0af71d4528684c7743d21285191" kindref="member">twolame_get_verbosity</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="twolame_8h_1a86b4fad6c27ec3d5c8d4b7740374e0bf" kindref="member">twolame_set_mode</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,<sp/>TWOLAME_MPEG_mode<sp/><ref refid="structtwolame__options__struct_1a9a485b580a62dd91ca9d2b6c51cbddb5" kindref="member">mode</ref>);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref><sp/>TWOLAME_MPEG_mode<sp/><ref refid="twolame_8h_1a309811c4f28f27a35325efc88f58e7ac" kindref="member">twolame_get_mode</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="twolame_8h_1a561bb2020ba9dc4fc91256a0087839a6" kindref="member">twolame_get_mode_name</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="twolame_8h_1a09563eaee791ebbc29dbc05624d85d27" kindref="member">twolame_set_version</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,<sp/>TWOLAME_MPEG_version<sp/><ref refid="lib_2expat_8h_1aec5db107b91447a96c47961ce9df2660" kindref="member">version</ref>);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref><sp/>TWOLAME_MPEG_version<sp/><ref refid="twolame_8h_1a6f78eecf3a9833fe9b0acdd2007e3dfc" kindref="member">twolame_get_version</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="twolame_8h_1a69bde4f6190a7e8f2e376c54342de74f" kindref="member">twolame_get_version_name</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="twolame_8h_1a169334cc44b490a382233ac1cc7c9f9e" kindref="member">twolame_get_framelength</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="twolame_8h_1ad7fc5c1e3507ef7f4d985b009475be99" kindref="member">twolame_set_psymodel</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structtwolame__options__struct_1a3b4099e20d7d3727015bf580a12806cc" kindref="member">psymodel</ref>);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="twolame_8h_1a242856435ba7310070a25fd0dd927e14" kindref="member">twolame_get_psymodel</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="twolame_8h_1a08401d4a34bfe57e7c8857c835938937" kindref="member">twolame_set_num_channels</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_channels);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="twolame_8h_1aca0c25dca2162c1b08de81e441b9c8df" kindref="member">twolame_get_num_channels</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="twolame_8h_1ac7cc36dc2f7996f28acdfba753ac8002" kindref="member">twolame_set_scale</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structtwolame__options__struct_1a84946abd65a959f997ba582eed5da511" kindref="member">scale</ref>);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="twolame_8h_1add70524c31b360ad49f5d283f52c82e8" kindref="member">twolame_get_scale</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="twolame_8h_1a3928e963bd630e3b6c7f31c4a6dd0a53" kindref="member">twolame_set_scale_left</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structtwolame__options__struct_1a84946abd65a959f997ba582eed5da511" kindref="member">scale</ref>);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="twolame_8h_1a635af5f1dea800c594a79ef8ddc83998" kindref="member">twolame_get_scale_left</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="twolame_8h_1ac736903e14599a9058391d2edec797fb" kindref="member">twolame_set_scale_right</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structtwolame__options__struct_1a84946abd65a959f997ba582eed5da511" kindref="member">scale</ref>);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="twolame_8h_1aa65452418e67d13a813f5fab929d366f" kindref="member">twolame_get_scale_right</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="twolame_8h_1ac0bce049d535a5b30da07157e81ec2ef" kindref="member">twolame_set_in_samplerate</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1ac5309ad522c97c94c294347821fdd375" kindref="member">samplerate</ref>);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="twolame_8h_1aa1f8600eec560d783b0387863dfa076b" kindref="member">twolame_get_in_samplerate</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="twolame_8h_1a20b8dc08001a9d52a7a9a256a499dcf9" kindref="member">twolame_set_out_samplerate</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1ac5309ad522c97c94c294347821fdd375" kindref="member">samplerate</ref>);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="twolame_8h_1ab7cc017a6bd206ca5d651bd42ee13e7e" kindref="member">twolame_get_out_samplerate</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="twolame_8h_1a9034da1bbef0ce8055ccc53f59a7e475" kindref="member">twolame_set_bitrate</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structtwolame__options__struct_1ac471f69e776fa200a2032a88dfdee3b0" kindref="member">bitrate</ref>);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="twolame_8h_1af0f526bc692b927f75ec31b805702df1" kindref="member">twolame_get_bitrate</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="twolame_8h_1a7feebf08521fa56a24b9d4b7e3e9a3b1" kindref="member">twolame_set_brate</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structtwolame__options__struct_1ac471f69e776fa200a2032a88dfdee3b0" kindref="member">bitrate</ref>);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="twolame_8h_1ad52e512028ede9e12c8a78e66f910634" kindref="member">twolame_get_brate</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="twolame_8h_1aa1db9d57714449fecff3e655d3421628" kindref="member">twolame_set_padding</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,<sp/>TWOLAME_Padding<sp/><ref refid="src_2flac_2main_8c_1a78dca952886227190969e885fbdd4fb4" kindref="member">padding</ref>);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref><sp/>TWOLAME_Padding<sp/><ref refid="twolame_8h_1a86d6b401f8b29fe0ca945409c17e7da0" kindref="member">twolame_get_padding</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="twolame_8h_1a150dbbf205f4b9cb4eabc579d57a5693" kindref="member">twolame_set_energy_levels</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>energylevels);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="twolame_8h_1a358f7e1555bdce77f65c0ac70b3bac17" kindref="member">twolame_get_energy_levels</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="twolame_8h_1a8dd1e24a3db3a95b5c2dd15c1c85a692" kindref="member">twolame_set_num_ancillary_bits</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="twolame_8h_1a104e50b6db64a846fc7491ea47a7f797" kindref="member">twolame_get_num_ancillary_bits</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="twolame_8h_1ae5fcfeeda2669d95a4549b07651e909e" kindref="member">twolame_set_emphasis</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,<sp/><ref refid="twolame_8h_1a50521fc75f96f949634f8f6536c1be1b" kindref="member">TWOLAME_Emphasis</ref><sp/><ref refid="structtwolame__options__struct_1aaef1bd9b6ed9084ad137b450b1744dc3" kindref="member">emphasis</ref>);</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref><sp/><ref refid="twolame_8h_1a50521fc75f96f949634f8f6536c1be1b" kindref="member">TWOLAME_Emphasis</ref><sp/><ref refid="twolame_8h_1a641614d6127eb6dc5b5a826467a9bafe" kindref="member">twolame_get_emphasis</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts);</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="twolame_8h_1a919f594488579a49be0db56bb25f7da8" kindref="member">twolame_set_error_protection</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err_protection);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="twolame_8h_1a01ce8389e89a0a00b000be8a1e35c5f0" kindref="member">twolame_get_error_protection</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts);</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="twolame_8h_1a1d5a81398be74b61121bfa214efa8b12" kindref="member">twolame_set_copyright</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="nasm_8h_1a28a5e2117dadee782e18077d8d3d7827" kindref="member">copyright</ref>);</highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="twolame_8h_1a4e72eb5e210d91fd3f4c3b610808fbc1" kindref="member">twolame_get_copyright</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts);</highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="twolame_8h_1a0521b5dc1b74240cb2f62a576eeb1433" kindref="member">twolame_set_original</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structtwolame__options__struct_1a7c3f1c30812961d5799392f2e2fe76a9" kindref="member">original</ref>);</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="twolame_8h_1a6be4154d7fbb3f4c858b4041c7537032" kindref="member">twolame_get_original</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts);</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="twolame_8h_1a6abb3c4847bc08d32270c9cf293ea394" kindref="member">twolame_set_VBR</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structtwolame__options__struct_1ac5e4a3519d895e56ff0daebaf255128b" kindref="member">vbr</ref>);</highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="twolame_8h_1ae918f086d86ccf6382aa0ea8fb445600" kindref="member">twolame_get_VBR</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts);</highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="twolame_8h_1a3e4a88d187013d6e44545a387c3326c7" kindref="member">twolame_set_VBR_level</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>level);</highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="twolame_8h_1a0334631935eb58f563133cf3396acbd6" kindref="member">twolame_get_VBR_level</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts);</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight><highlight class="comment">/*<sp/></highlight></codeline>
<codeline lineno="763"><highlight class="comment"><sp/><sp/><sp/>Using<sp/>the<sp/>twolame_set_VBR_q()/twolame_get_VBR_q<sp/>functions<sp/></highlight></codeline>
<codeline lineno="764"><highlight class="comment"><sp/><sp/><sp/>are<sp/>deprecated,<sp/>please<sp/>use<sp/>twolame_set_VBR_level()<sp/>instead.</highlight></codeline>
<codeline lineno="765"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="twolame_8h_1afe88254fbe7b2195812de6335992b134" kindref="member">twolame_set_VBR_q</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>level);</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="twolame_8h_1ac2a897697c00d010bb1450ef5b795e17" kindref="member">twolame_get_VBR_q</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts);</highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="twolame_8h_1a1d941eeea058e8175bd4cd40cf6c50f9" kindref="member">twolame_set_ATH_level</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>level);</highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="twolame_8h_1a67a7da360de56a15365194f2522132ed" kindref="member">twolame_get_ATH_level</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts);</highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="twolame_8h_1af903d6283680e4f80793bf18da676ae6" kindref="member">twolame_set_VBR_max_bitrate_kbps</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structtwolame__options__struct_1ac471f69e776fa200a2032a88dfdee3b0" kindref="member">bitrate</ref>);</highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="twolame_8h_1aa8d3f9d79ee8bd34f28c8725a26314aa" kindref="member">twolame_get_VBR_max_bitrate_kbps</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts);</highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="twolame_8h_1a3b068f0b95e269f331d646696c940b83" kindref="member">twolame_set_quick_mode</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structtwolame__options__struct_1aefd142ad35e687a25dc01dd2238c8e5b" kindref="member">quickmode</ref>);</highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="twolame_8h_1a1f611603c84e963c6b0b42fa674b0f16" kindref="member">twolame_get_quick_mode</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts);</highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="twolame_8h_1a9cae042e9edf58fdff8a385b9d217f23" kindref="member">twolame_set_quick_count</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structtwolame__options__struct_1a39883ae20b9d53fdf154845a0ecd5920" kindref="member">quickcount</ref>);</highlight></codeline>
<codeline lineno="839"><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="twolame_8h_1aaa5dff0b669e79ec92f673f673f0580e" kindref="member">twolame_get_quick_count</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts);</highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>WARNING:<sp/>DAB<sp/>support<sp/>is<sp/>currently<sp/>broken<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="twolame_8h_1aeeaecc4c7a54d334d436cefe8052abcb" kindref="member">twolame_set_DAB</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dab);</highlight></codeline>
<codeline lineno="869"><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="twolame_8h_1ad5b84d80062eed15ae4ab502f2f5d3dc" kindref="member">twolame_get_DAB</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts);</highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="twolame_8h_1acd2aff0699933a56d1029263a39ebc3a" kindref="member">twolame_set_DAB_xpad_length</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="test__lib_f_l_a_c_2format_8c_1ac94dc16b22556ba5fa815655f27442da" kindref="member">length</ref>);</highlight></codeline>
<codeline lineno="888"><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="twolame_8h_1aad98306618e5b802aa695bd10b4fcb5a" kindref="member">twolame_get_DAB_xpad_length</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts);</highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="twolame_8h_1a2dbb0183ce39593163c4daa98e3c7dbd" kindref="member">twolame_set_DAB_crc_length</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="test__lib_f_l_a_c_2format_8c_1ac94dc16b22556ba5fa815655f27442da" kindref="member">length</ref>);</highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_8h_1a1ca888bd091694c05472e1b91df1a97b" kindref="member">DLL_EXPORT</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="twolame_8h_1a25a280dead97ed21118f86fb03f2aeaf" kindref="member">twolame_get_DAB_crc_length</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts);</highlight></codeline>
<codeline lineno="916"><highlight class="normal"></highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal">}</highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>_TWOLAME_H_<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"></highlight><highlight class="comment">//<sp/>vim:ts=4:sw=4:nowrap:</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.h"/>
  </compounddef>
</doxygen>
