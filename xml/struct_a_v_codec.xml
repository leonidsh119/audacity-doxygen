<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="struct_a_v_codec" kind="struct" language="C++" prot="public">
    <compoundname>AVCodec</compoundname>
    <includes refid="avcodec_8h" local="no">avcodec.h</includes>
      <sectiondef kind="user-defined">
      <header>Frame-level threading support functions</header>
      <memberdef kind="variable" id="struct_a_v_codec_1a7f9ba73a1d649c453a34b33d15ad99c3" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref>(*</type>
        <definition>int(* AVCodec::init_thread_copy) (AVCodecContext *)</definition>
        <argsstring>)(AVCodecContext *)</argsstring>
        <name>init_thread_copy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>If defined, called on thread contexts when they are created. If the codec allocates writable tables in <ref refid="struct_a_v_codec_1a76f222be1221210dadda60e4fce08e80" kindref="member">init()</ref>, re-allocate them here. priv_data will be set to a copy of the original. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="3080" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" bodystart="3080" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_codec_1a286e505d913763a6bb9ea2bfee00f2c3" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref>(*</type>
        <definition>int(* AVCodec::update_thread_context) (AVCodecContext *dst, const AVCodecContext *src)</definition>
        <argsstring>)(AVCodecContext *dst, const AVCodecContext *src)</argsstring>
        <name>update_thread_context</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy necessary context variables from a previous thread context to the current one. If not defined, the next thread will start automatically; otherwise, the codec must call ff_thread_finish_setup().</para><para>dst and src will (rarely) point to the same context, in which case memcpy should be skipped. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="3088" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" bodystart="3088" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_a_v_codec_1ad3daa3e729850b573c139a83be8938ca" prot="public" static="no" mutable="no">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
        <definition>const char* AVCodec::name</definition>
        <argsstring></argsstring>
        <name>name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Name of the codec implementation. The name is globally unique among encoders and among decoders (but an encoder and a decoder can share the same name). This is the primary way to find a codec from the user perspective. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="3038" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" bodystart="3038" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_codec_1acb4afcfce3b6541ed70aa7f21d507422" prot="public" static="no" mutable="no">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
        <definition>const char* AVCodec::long_name</definition>
        <argsstring></argsstring>
        <name>long_name</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Descriptive name for the codec, meant to be more human readable than name. You should use the NULL_IF_CONFIG_SMALL() macro to define it. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="3043" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" bodystart="3043" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_codec_1ab539ca86026d043803c24ba06fa84197" prot="public" static="no" mutable="no">
        <type>enum <ref refid="group__lavu__misc_1ga9a84bba4713dfced21a1a56163be1f48" kindref="member">AVMediaType</ref></type>
        <definition>enum AVMediaType AVCodec::type</definition>
        <argsstring></argsstring>
        <name>type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="3043" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" bodystart="3044" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_codec_1a01a53d07936f4c7ee280444793b6967b" prot="public" static="no" mutable="no">
        <type>enum <ref refid="group__lavc__core_1gaadca229ad2c20e060a14fec08a5cc7ce" kindref="member">AVCodecID</ref></type>
        <definition>enum AVCodecID AVCodec::id</definition>
        <argsstring></argsstring>
        <name>id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="3043" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" bodystart="3045" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_codec_1af51f7ff3dac8b730f46b9713e49a2518" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int AVCodec::capabilities</definition>
        <argsstring></argsstring>
        <name>capabilities</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Codec capabilities. see CODEC_CAP_* </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="3050" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" bodystart="3050" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_codec_1a5cc75a0ab41697df21a8cd649662190c" prot="public" static="no" mutable="no">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_a_v_rational" kindref="compound">AVRational</ref> *</type>
        <definition>const AVRational* AVCodec::supported_framerates</definition>
        <argsstring></argsstring>
        <name>supported_framerates</name>
        <briefdescription>
<para>array of supported framerates, or NULL if any, array is terminated by {0,0} </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="3051" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" bodystart="3051" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_codec_1ac2b97bd3c19686025e1b7d577329c250" prot="public" static="no" mutable="no">
        <type>enum <ref refid="pixfmt_8h_1a9a8e335cf3be472042bc9f0cf80cd4c5" kindref="member">AVPixelFormat</ref> *</type>
        <definition>enum AVPixelFormat* AVCodec::pix_fmts</definition>
        <argsstring></argsstring>
        <name>pix_fmts</name>
        <briefdescription>
<para>array of supported pixel formats, or NULL if unknown, array is terminated by -1 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="3052" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" bodystart="3052" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_codec_1aee7a194f1c3251958d3dabed3fa8148e" prot="public" static="no" mutable="no">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
        <definition>const int* AVCodec::supported_samplerates</definition>
        <argsstring></argsstring>
        <name>supported_samplerates</name>
        <briefdescription>
<para>array of supported audio samplerates, or NULL if unknown, array is terminated by 0 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="3053" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" bodystart="3053" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_codec_1aac19f4c45370f715412ad5c7b78daacf" prot="public" static="no" mutable="no">
        <type>enum <ref refid="samplefmt_8h_1af9a51ca15301871723577c730b5865c5" kindref="member">AVSampleFormat</ref> *</type>
        <definition>enum AVSampleFormat* AVCodec::sample_fmts</definition>
        <argsstring></argsstring>
        <name>sample_fmts</name>
        <briefdescription>
<para>array of supported sample formats, or NULL if unknown, array is terminated by -1 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="3054" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" bodystart="3054" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_codec_1a1d4c5152626bbd1f575a3e0014cb59e7" prot="public" static="no" mutable="no">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref> *</type>
        <definition>const uint64_t* AVCodec::channel_layouts</definition>
        <argsstring></argsstring>
        <name>channel_layouts</name>
        <briefdescription>
<para>array of support channel layouts, or NULL if unknown. array is terminated by 0 </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="3055" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" bodystart="3055" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_codec_1afc51006d374ca72dfa3b0e29cbb1d981" prot="public" static="no" mutable="no">
        <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref></type>
        <definition>uint8_t AVCodec::max_lowres</definition>
        <argsstring></argsstring>
        <name>max_lowres</name>
        <briefdescription>
<para>maximum value for lowres supported by the decoder, no direct access, use <ref refid="group__lavc__core_1gafda0a87bc29a129cd12e858b4609cccd" kindref="member">av_codec_get_max_lowres()</ref> </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="3057" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" bodystart="3057" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_codec_1a4ded9f7ec1fa1a73ea3e831428c100fa" prot="public" static="no" mutable="no">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_a_v_class" kindref="compound">AVClass</ref> *</type>
        <definition>const AVClass* AVCodec::priv_class</definition>
        <argsstring></argsstring>
        <name>priv_class</name>
        <briefdescription>
<para><ref refid="struct_a_v_class" kindref="compound">AVClass</ref> for the private context. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="3059" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" bodystart="3059" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_codec_1ac832350f2bac582fe3d174e2e3b1eb5e" prot="public" static="no" mutable="no">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_a_v_profile" kindref="compound">AVProfile</ref> *</type>
        <definition>const AVProfile* AVCodec::profiles</definition>
        <argsstring></argsstring>
        <name>profiles</name>
        <briefdescription>
<para>array of recognized profiles, or NULL if unknown, array is terminated by {FF_PROFILE_UNKNOWN} </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="3060" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" bodystart="3060" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_codec_1aa86c803fcfc0ebb569b15d4645d0e796" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int AVCodec::priv_data_size</definition>
        <argsstring></argsstring>
        <name>priv_data_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="3069" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" bodystart="3069" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_codec_1ab423f961a2ce8ef9442010909a29dbf5" prot="public" static="no" mutable="no">
        <type>struct <ref refid="struct_a_v_codec" kindref="compound">AVCodec</ref> *</type>
        <definition>struct AVCodec* AVCodec::next</definition>
        <argsstring></argsstring>
        <name>next</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="3070" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" bodystart="3070" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_codec_1a16e4be8873bd93ac84c7b7d86455d518" prot="public" static="no" mutable="no">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="group__lavc__core_1ga27561af66de4a75c3da1dc61f8c5cd9a" kindref="member">AVCodecDefault</ref> *</type>
        <definition>const AVCodecDefault* AVCodec::defaults</definition>
        <argsstring></argsstring>
        <name>defaults</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Private codec-specific defaults. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="3094" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" bodystart="3094" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_codec_1a47f02232b1793c788132d0ca0fd2252a" prot="public" static="no" mutable="no">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref>(*</type>
        <definition>void(* AVCodec::init_static_data) (struct AVCodec *codec)</definition>
        <argsstring>)(struct AVCodec *codec)</argsstring>
        <name>init_static_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialize codec static data, called from <ref refid="group__lavc__core_1ga882513208349dbcea177626d9fd7ed92" kindref="member">avcodec_register()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="3099" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" bodystart="3099" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_codec_1a76f222be1221210dadda60e4fce08e80" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref>(*</type>
        <definition>int(* AVCodec::init) (AVCodecContext *)</definition>
        <argsstring>)(AVCodecContext *)</argsstring>
        <name>init</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="3101" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" bodystart="3101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_codec_1a5d108464b7461d2e4f1e27ad685c8c2b" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref>(*</type>
        <definition>int(* AVCodec::encode_sub) (AVCodecContext *, uint8_t *buf, int buf_size, const struct AVSubtitle *sub)</definition>
        <argsstring>)(AVCodecContext *, uint8_t *buf, int buf_size, const struct AVSubtitle *sub)</argsstring>
        <name>encode_sub</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="3102" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" bodystart="3102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_codec_1ac764e717bb18064de8e4608b8dce5ca4" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref>(*</type>
        <definition>int(* AVCodec::encode2) (AVCodecContext *avctx, AVPacket *avpkt, const AVFrame *frame, int *got_packet_ptr)</definition>
        <argsstring>)(AVCodecContext *avctx, AVPacket *avpkt, const AVFrame *frame, int *got_packet_ptr)</argsstring>
        <name>encode2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Encode data to an <ref refid="struct_a_v_packet" kindref="compound">AVPacket</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>avctx</parametername>
</parameternamelist>
<parameterdescription>
<para>codec context </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>avpkt</parametername>
</parameternamelist>
<parameterdescription>
<para>output <ref refid="struct_a_v_packet" kindref="compound">AVPacket</ref> (may contain a user-provided buffer) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">frame</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="struct_a_v_frame" kindref="compound">AVFrame</ref> containing the raw data to be encoded </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">got_packet_ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>encoder sets to 0 or 1 to indicate that a non-empty packet was returned in avpkt. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, negative error code on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="3114" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" bodystart="3114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_codec_1a2e8ca285370a79a060026b9c36f65f0d" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref>(*</type>
        <definition>int(* AVCodec::decode) (AVCodecContext *, void *outdata, int *outdata_size, AVPacket *avpkt)</definition>
        <argsstring>)(AVCodecContext *, void *outdata, int *outdata_size, AVPacket *avpkt)</argsstring>
        <name>decode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="3116" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" bodystart="3116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_codec_1a7e200e27b37d64d1f941260aeffeb265" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref>(*</type>
        <definition>int(* AVCodec::close) (AVCodecContext *)</definition>
        <argsstring>)(AVCodecContext *)</argsstring>
        <name>close</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="3117" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" bodystart="3117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_codec_1a70d96d86e4c055f218d5164f94685647" prot="public" static="no" mutable="no">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref>(*</type>
        <definition>void(* AVCodec::flush) (AVCodecContext *)</definition>
        <argsstring>)(AVCodecContext *)</argsstring>
        <name>flush</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Flush buffers. Will be called when seeking </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="3122" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" bodystart="3122" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><ref refid="struct_a_v_codec" kindref="compound">AVCodec</ref>. </para>    </detaileddescription>
    <collaborationgraph>
      <node id="1167">
        <label>AVCodec</label>
        <link refid="struct_a_v_codec"/>
        <childnode refid="1168" relation="usage">
          <edgelabel>profiles</edgelabel>
        </childnode>
        <childnode refid="1169" relation="usage">
          <edgelabel>priv_class</edgelabel>
        </childnode>
        <childnode refid="1171" relation="usage">
          <edgelabel>supported_framerates</edgelabel>
        </childnode>
        <childnode refid="1167" relation="usage">
          <edgelabel>next</edgelabel>
        </childnode>
      </node>
      <node id="1171">
        <label>AVRational</label>
        <link refid="struct_a_v_rational"/>
      </node>
      <node id="1169">
        <label>AVClass</label>
        <link refid="struct_a_v_class"/>
        <childnode refid="1169" relation="usage">
          <edgelabel>child_class_next</edgelabel>
        </childnode>
        <childnode refid="1170" relation="usage">
          <edgelabel>option</edgelabel>
        </childnode>
      </node>
      <node id="1168">
        <label>AVProfile</label>
        <link refid="struct_a_v_profile"/>
      </node>
      <node id="1170">
        <label>AVOption</label>
        <link refid="struct_a_v_option"/>
        <childnode refid="1171" relation="usage">
          <edgelabel>q</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="3031" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" bodystart="3031" bodyend="3123"/>
    <listofallmembers>
      <member refid="struct_a_v_codec_1af51f7ff3dac8b730f46b9713e49a2518" prot="public" virt="non-virtual"><scope>AVCodec</scope><name>capabilities</name></member>
      <member refid="struct_a_v_codec_1a1d4c5152626bbd1f575a3e0014cb59e7" prot="public" virt="non-virtual"><scope>AVCodec</scope><name>channel_layouts</name></member>
      <member refid="struct_a_v_codec_1a7e200e27b37d64d1f941260aeffeb265" prot="public" virt="non-virtual"><scope>AVCodec</scope><name>close</name></member>
      <member refid="struct_a_v_codec_1a2e8ca285370a79a060026b9c36f65f0d" prot="public" virt="non-virtual"><scope>AVCodec</scope><name>decode</name></member>
      <member refid="struct_a_v_codec_1a16e4be8873bd93ac84c7b7d86455d518" prot="public" virt="non-virtual"><scope>AVCodec</scope><name>defaults</name></member>
      <member refid="struct_a_v_codec_1ac764e717bb18064de8e4608b8dce5ca4" prot="public" virt="non-virtual"><scope>AVCodec</scope><name>encode2</name></member>
      <member refid="struct_a_v_codec_1a5d108464b7461d2e4f1e27ad685c8c2b" prot="public" virt="non-virtual"><scope>AVCodec</scope><name>encode_sub</name></member>
      <member refid="struct_a_v_codec_1a70d96d86e4c055f218d5164f94685647" prot="public" virt="non-virtual"><scope>AVCodec</scope><name>flush</name></member>
      <member refid="struct_a_v_codec_1a01a53d07936f4c7ee280444793b6967b" prot="public" virt="non-virtual"><scope>AVCodec</scope><name>id</name></member>
      <member refid="struct_a_v_codec_1a76f222be1221210dadda60e4fce08e80" prot="public" virt="non-virtual"><scope>AVCodec</scope><name>init</name></member>
      <member refid="struct_a_v_codec_1a47f02232b1793c788132d0ca0fd2252a" prot="public" virt="non-virtual"><scope>AVCodec</scope><name>init_static_data</name></member>
      <member refid="struct_a_v_codec_1a7f9ba73a1d649c453a34b33d15ad99c3" prot="public" virt="non-virtual"><scope>AVCodec</scope><name>init_thread_copy</name></member>
      <member refid="struct_a_v_codec_1acb4afcfce3b6541ed70aa7f21d507422" prot="public" virt="non-virtual"><scope>AVCodec</scope><name>long_name</name></member>
      <member refid="struct_a_v_codec_1afc51006d374ca72dfa3b0e29cbb1d981" prot="public" virt="non-virtual"><scope>AVCodec</scope><name>max_lowres</name></member>
      <member refid="struct_a_v_codec_1ad3daa3e729850b573c139a83be8938ca" prot="public" virt="non-virtual"><scope>AVCodec</scope><name>name</name></member>
      <member refid="struct_a_v_codec_1ab423f961a2ce8ef9442010909a29dbf5" prot="public" virt="non-virtual"><scope>AVCodec</scope><name>next</name></member>
      <member refid="struct_a_v_codec_1ac2b97bd3c19686025e1b7d577329c250" prot="public" virt="non-virtual"><scope>AVCodec</scope><name>pix_fmts</name></member>
      <member refid="struct_a_v_codec_1a4ded9f7ec1fa1a73ea3e831428c100fa" prot="public" virt="non-virtual"><scope>AVCodec</scope><name>priv_class</name></member>
      <member refid="struct_a_v_codec_1aa86c803fcfc0ebb569b15d4645d0e796" prot="public" virt="non-virtual"><scope>AVCodec</scope><name>priv_data_size</name></member>
      <member refid="struct_a_v_codec_1ac832350f2bac582fe3d174e2e3b1eb5e" prot="public" virt="non-virtual"><scope>AVCodec</scope><name>profiles</name></member>
      <member refid="struct_a_v_codec_1aac19f4c45370f715412ad5c7b78daacf" prot="public" virt="non-virtual"><scope>AVCodec</scope><name>sample_fmts</name></member>
      <member refid="struct_a_v_codec_1a5cc75a0ab41697df21a8cd649662190c" prot="public" virt="non-virtual"><scope>AVCodec</scope><name>supported_framerates</name></member>
      <member refid="struct_a_v_codec_1aee7a194f1c3251958d3dabed3fa8148e" prot="public" virt="non-virtual"><scope>AVCodec</scope><name>supported_samplerates</name></member>
      <member refid="struct_a_v_codec_1ab539ca86026d043803c24ba06fa84197" prot="public" virt="non-virtual"><scope>AVCodec</scope><name>type</name></member>
      <member refid="struct_a_v_codec_1a286e505d913763a6bb9ea2bfee00f2c3" prot="public" virt="non-virtual"><scope>AVCodec</scope><name>update_thread_context</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
