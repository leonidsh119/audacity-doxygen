<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="lv2_2plugins_2eg-fifths_8lv2_2waflib_2_tools_2c__config_8py" kind="file" language="Python">
    <compoundname>c_config.py</compoundname>
    <innerclass refid="classwaflib_1_1_tools_1_1c__config_1_1test__exec" prot="public">waflib::Tools::c_config::test_exec</innerclass>
    <innerclass refid="classwaflib_1_1_tools_1_1c__config_1_1cfgtask" prot="public">waflib::Tools::c_config::cfgtask</innerclass>
    <innernamespace refid="namespacewaflib_1_1_tools_1_1c__config">waflib::Tools::c_config</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">#!<sp/>/usr/bin/env<sp/>python</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#<sp/>encoding:<sp/>utf-8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#<sp/>WARNING!<sp/>Do<sp/>not<sp/>edit!<sp/>http://waf.googlecode.com/git/docs/wafbook/single.html#_obtaining_the_waf_file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os,re,shlex,sys</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>waflib<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Build,Utils,Task,Options,Logs,Errors,ConfigSet,Runner</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_task_gen" kindref="compound">waflib.TaskGen</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>after_method,feature</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_configure" kindref="compound">waflib.Configure</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>conf</highlight></codeline>
<codeline lineno="9"><highlight class="normal">WAF_CONFIG_H=</highlight><highlight class="stringliteral">&apos;config.h&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal">DEFKEYS=</highlight><highlight class="stringliteral">&apos;define_key&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal">INCKEYS=</highlight><highlight class="stringliteral">&apos;include_key&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal">cfg_ver={</highlight><highlight class="stringliteral">&apos;atleast-version&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;&gt;=&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;exact-version&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;==&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;max-version&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;&lt;=&apos;</highlight><highlight class="normal">,}</highlight></codeline>
<codeline lineno="13"><highlight class="normal">SNIP_FUNCTION=</highlight><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="14"><highlight class="stringliteral">int<sp/>main(int<sp/>argc,<sp/>char<sp/>**argv)<sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>void<sp/>*p;</highlight></codeline>
<codeline lineno="16"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>(void)argc;<sp/>(void)argv;</highlight></codeline>
<codeline lineno="17"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>p=(void*)(%s);</highlight></codeline>
<codeline lineno="18"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>return<sp/>0;</highlight></codeline>
<codeline lineno="19"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="20"><highlight class="stringliteral">&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal">SNIP_TYPE=</highlight><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="22"><highlight class="stringliteral">int<sp/>main(int<sp/>argc,<sp/>char<sp/>**argv)<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>(void)argc;<sp/>(void)argv;</highlight></codeline>
<codeline lineno="24"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>if<sp/>((%(type_name)s<sp/>*)<sp/>0)<sp/>return<sp/>0;</highlight></codeline>
<codeline lineno="25"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>if<sp/>(sizeof<sp/>(%(type_name)s))<sp/>return<sp/>0;</highlight></codeline>
<codeline lineno="26"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>return<sp/>1;</highlight></codeline>
<codeline lineno="27"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="28"><highlight class="stringliteral">&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal">SNIP_EMPTY_PROGRAM=</highlight><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="30"><highlight class="stringliteral">int<sp/>main(int<sp/>argc,<sp/>char<sp/>**argv)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>(void)argc;<sp/>(void)argv;</highlight></codeline>
<codeline lineno="32"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>return<sp/>0;</highlight></codeline>
<codeline lineno="33"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="34"><highlight class="stringliteral">&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal">SNIP_FIELD=</highlight><highlight class="stringliteral">&apos;&apos;&apos;</highlight></codeline>
<codeline lineno="36"><highlight class="stringliteral">int<sp/>main(int<sp/>argc,<sp/>char<sp/>**argv)<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>char<sp/>*off;</highlight></codeline>
<codeline lineno="38"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>(void)argc;<sp/>(void)argv;</highlight></codeline>
<codeline lineno="39"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>off<sp/>=<sp/>(char*)<sp/>&amp;((%(type_name)s*)0)-&gt;%(field_name)s;</highlight></codeline>
<codeline lineno="40"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>return<sp/>(size_t)<sp/>off<sp/>&lt;<sp/>sizeof(%(type_name)s);</highlight></codeline>
<codeline lineno="41"><highlight class="stringliteral">}</highlight></codeline>
<codeline lineno="42"><highlight class="stringliteral">&apos;&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal">MACRO_TO_DESTOS={</highlight><highlight class="stringliteral">&apos;__linux__&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;linux&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;__GNU__&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;gnu&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;__FreeBSD__&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;freebsd&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;__NetBSD__&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;netbsd&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;__OpenBSD__&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;openbsd&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;__sun&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;sunos&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;__hpux&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;hpux&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;__sgi&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;irix&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;_AIX&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;aix&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;__CYGWIN__&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;cygwin&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;__MSYS__&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;msys&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;_UWIN&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;uwin&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;_WIN64&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;win32&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;_WIN32&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;win32&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;darwin&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;__ENVIRONMENT_IPHONE_OS_VERSION_MIN_REQUIRED__&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;darwin&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;__QNX__&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;qnx&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;__native_client__&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;nacl&apos;</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="44"><highlight class="normal">MACRO_TO_DEST_CPU={</highlight><highlight class="stringliteral">&apos;__x86_64__&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;x86_64&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;__amd64__&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;x86_64&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;__i386__&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;x86&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;__ia64__&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;ia&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;__mips__&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;mips&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;__sparc__&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;sparc&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;__alpha__&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;alpha&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;__aarch64__&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;aarch64&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;__thumb__&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;thumb&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;__arm__&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;arm&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;__hppa__&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;hppa&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;__powerpc__&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;powerpc&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;__ppc__&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;powerpc&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;__convex__&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;convex&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;__m68k__&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;m68k&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;__s390x__&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;s390x&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;__s390__&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;s390&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;__sh__&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;sh&apos;</highlight><highlight class="normal">,}</highlight></codeline>
<codeline lineno="45"><highlight class="normal">@conf</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1c__config_1adf5bcd2436b90068916413371f93e301" kindref="member">parse_flags</ref>(self,line,uselib_store,env=None,force_static=False):</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(isinstance(line,str))</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>env=env<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>self.env</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>app=env.append_value</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>appu=env.append_unique</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>lex=shlex.shlex(line,posix=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>lex.whitespace_split=</highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>lex.commenters=</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>lst=list(lex)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>uselib=uselib_store</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>lst:</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x=lst.pop(0)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st=x[:2]</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ot=x[2:]</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>st==</highlight><highlight class="stringliteral">&apos;-I&apos;</highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>st==</highlight><highlight class="stringliteral">&apos;/I&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>ot:ot=lst.pop(0)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>appu(</highlight><highlight class="stringliteral">&apos;INCLUDES_&apos;</highlight><highlight class="normal">+uselib,[ot])</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>st==</highlight><highlight class="stringliteral">&apos;-include&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp=[x,lst.pop(0)]</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>app(</highlight><highlight class="stringliteral">&apos;CFLAGS&apos;</highlight><highlight class="normal">,tmp)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>app(</highlight><highlight class="stringliteral">&apos;CXXFLAGS&apos;</highlight><highlight class="normal">,tmp)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>st==</highlight><highlight class="stringliteral">&apos;-D&apos;</highlight><highlight class="normal">or(env.CXX_NAME==</highlight><highlight class="stringliteral">&apos;msvc&apos;</highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>st==</highlight><highlight class="stringliteral">&apos;/D&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>ot:ot=lst.pop(0)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>app(</highlight><highlight class="stringliteral">&apos;DEFINES_&apos;</highlight><highlight class="normal">+uselib,[ot])</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>st==</highlight><highlight class="stringliteral">&apos;-l&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>ot:ot=lst.pop(0)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prefix=force_static<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="stringliteral">&apos;STLIB_&apos;</highlight><highlight class="keywordflow">or</highlight><highlight class="stringliteral">&apos;LIB_&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>appu(prefix+uselib,[ot])</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>st==</highlight><highlight class="stringliteral">&apos;-L&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>ot:ot=lst.pop(0)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>appu(</highlight><highlight class="stringliteral">&apos;LIBPATH_&apos;</highlight><highlight class="normal">+uselib,[ot])</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>x.startswith(</highlight><highlight class="stringliteral">&apos;/LIBPATH:&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>appu(</highlight><highlight class="stringliteral">&apos;LIBPATH_&apos;</highlight><highlight class="normal">+uselib,[x.replace(</highlight><highlight class="stringliteral">&apos;/LIBPATH:&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">)])</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>x==</highlight><highlight class="stringliteral">&apos;-pthread&apos;</highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>x.startswith(</highlight><highlight class="stringliteral">&apos;+&apos;</highlight><highlight class="normal">)</highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>x.startswith(</highlight><highlight class="stringliteral">&apos;-std&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>app(</highlight><highlight class="stringliteral">&apos;CFLAGS_&apos;</highlight><highlight class="normal">+uselib,[x])</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>app(</highlight><highlight class="stringliteral">&apos;CXXFLAGS_&apos;</highlight><highlight class="normal">+uselib,[x])</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>app(</highlight><highlight class="stringliteral">&apos;LINKFLAGS_&apos;</highlight><highlight class="normal">+uselib,[x])</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>x==</highlight><highlight class="stringliteral">&apos;-framework&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>appu(</highlight><highlight class="stringliteral">&apos;FRAMEWORK_&apos;</highlight><highlight class="normal">+uselib,[lst.pop(0)])</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>x.startswith(</highlight><highlight class="stringliteral">&apos;-F&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>appu(</highlight><highlight class="stringliteral">&apos;FRAMEWORKPATH_&apos;</highlight><highlight class="normal">+uselib,[x[2:]])</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>x.startswith(</highlight><highlight class="stringliteral">&apos;-Wl&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>app(</highlight><highlight class="stringliteral">&apos;LINKFLAGS_&apos;</highlight><highlight class="normal">+uselib,[x])</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>x.startswith(</highlight><highlight class="stringliteral">&apos;-m&apos;</highlight><highlight class="normal">)</highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>x.startswith(</highlight><highlight class="stringliteral">&apos;-f&apos;</highlight><highlight class="normal">)</highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>x.startswith(</highlight><highlight class="stringliteral">&apos;-dynamic&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>app(</highlight><highlight class="stringliteral">&apos;CFLAGS_&apos;</highlight><highlight class="normal">+uselib,[x])</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>app(</highlight><highlight class="stringliteral">&apos;CXXFLAGS_&apos;</highlight><highlight class="normal">+uselib,[x])</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>x.startswith(</highlight><highlight class="stringliteral">&apos;-bundle&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>app(</highlight><highlight class="stringliteral">&apos;LINKFLAGS_&apos;</highlight><highlight class="normal">+uselib,[x])</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>x.startswith(</highlight><highlight class="stringliteral">&apos;-undefined&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg=lst.pop(0)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>app(</highlight><highlight class="stringliteral">&apos;LINKFLAGS_&apos;</highlight><highlight class="normal">+uselib,[x,arg])</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>x.startswith(</highlight><highlight class="stringliteral">&apos;-arch&apos;</highlight><highlight class="normal">)</highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>x.startswith(</highlight><highlight class="stringliteral">&apos;-isysroot&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp=[x,lst.pop(0)]</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>app(</highlight><highlight class="stringliteral">&apos;CFLAGS_&apos;</highlight><highlight class="normal">+uselib,tmp)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>app(</highlight><highlight class="stringliteral">&apos;CXXFLAGS_&apos;</highlight><highlight class="normal">+uselib,tmp)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>app(</highlight><highlight class="stringliteral">&apos;LINKFLAGS_&apos;</highlight><highlight class="normal">+uselib,tmp)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>x.endswith(</highlight><highlight class="stringliteral">&apos;.a&apos;</highlight><highlight class="normal">)</highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>x.endswith(</highlight><highlight class="stringliteral">&apos;.so&apos;</highlight><highlight class="normal">)</highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>x.endswith(</highlight><highlight class="stringliteral">&apos;.dylib&apos;</highlight><highlight class="normal">)</highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>x.endswith(</highlight><highlight class="stringliteral">&apos;.lib&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>appu(</highlight><highlight class="stringliteral">&apos;LINKFLAGS_&apos;</highlight><highlight class="normal">+uselib,[x])</highlight></codeline>
<codeline lineno="104"><highlight class="normal">@conf</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1c__config_1a924e6953e17a1a202a055b8766ef14f3" kindref="member">ret_msg</ref>(self,f,kw):</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isinstance(f,str):</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>f</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>(kw)</highlight></codeline>
<codeline lineno="109"><highlight class="normal">@conf</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1c__config_1a34a3a7a75758108d6280b678358f4775" kindref="member">validate_cfg</ref>(self,kw):</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="stringliteral">&apos;path&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw:</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.env.PKGCONFIG:</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.find_program(</highlight><highlight class="stringliteral">&apos;pkg-config&apos;</highlight><highlight class="normal">,var=</highlight><highlight class="stringliteral">&apos;PKGCONFIG&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kw[</highlight><highlight class="stringliteral">&apos;path&apos;</highlight><highlight class="normal">]=self.env.PKGCONFIG</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="stringliteral">&apos;atleast_pkgconfig_version&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw:</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="stringliteral">&apos;msg&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw:</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kw[</highlight><highlight class="stringliteral">&apos;msg&apos;</highlight><highlight class="normal">]=</highlight><highlight class="stringliteral">&apos;Checking<sp/>for<sp/>pkg-config<sp/>version<sp/>&gt;=<sp/>%r&apos;</highlight><highlight class="normal">%kw[</highlight><highlight class="stringliteral">&apos;atleast_pkgconfig_version&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="stringliteral">&apos;okmsg&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw:</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kw[</highlight><highlight class="stringliteral">&apos;okmsg&apos;</highlight><highlight class="normal">]=</highlight><highlight class="stringliteral">&apos;yes&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="stringliteral">&apos;errmsg&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw:</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kw[</highlight><highlight class="stringliteral">&apos;errmsg&apos;</highlight><highlight class="normal">]=</highlight><highlight class="stringliteral">&apos;not<sp/>found&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="stringliteral">&apos;modversion&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw:</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="stringliteral">&apos;msg&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw:</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kw[</highlight><highlight class="stringliteral">&apos;msg&apos;</highlight><highlight class="normal">]=</highlight><highlight class="stringliteral">&apos;Checking<sp/>for<sp/>%r<sp/>version&apos;</highlight><highlight class="normal">%kw[</highlight><highlight class="stringliteral">&apos;modversion&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>cfg_ver.keys():</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y=x.replace(</highlight><highlight class="stringliteral">&apos;-&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;_&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>y<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw:</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="stringliteral">&apos;package&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw:</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight><highlight class="stringliteral">&apos;%s<sp/>requires<sp/>a<sp/>package&apos;</highlight><highlight class="normal">%x)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="stringliteral">&apos;msg&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw:</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kw[</highlight><highlight class="stringliteral">&apos;msg&apos;</highlight><highlight class="normal">]=</highlight><highlight class="stringliteral">&apos;Checking<sp/>for<sp/>%r<sp/>%s<sp/>%s&apos;</highlight><highlight class="normal">%(kw[</highlight><highlight class="stringliteral">&apos;package&apos;</highlight><highlight class="normal">],cfg_ver[x],kw[y])</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="stringliteral">&apos;msg&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw:</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kw[</highlight><highlight class="stringliteral">&apos;msg&apos;</highlight><highlight class="normal">]=</highlight><highlight class="stringliteral">&apos;Checking<sp/>for<sp/>%r&apos;</highlight><highlight class="normal">%(kw[</highlight><highlight class="stringliteral">&apos;package&apos;</highlight><highlight class="normal">]</highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>kw[</highlight><highlight class="stringliteral">&apos;path&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="137"><highlight class="normal">@conf</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1c__config_1af864d6c2f284deb99bc53fc66e27e02c" kindref="member">exec_cfg</ref>(self,kw):</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">define_it():</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.define(self.have_define(kw.get(</highlight><highlight class="stringliteral">&apos;uselib_store&apos;</highlight><highlight class="normal">,kw[</highlight><highlight class="stringliteral">&apos;package&apos;</highlight><highlight class="normal">])),1,0)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="stringliteral">&apos;atleast_pkgconfig_version&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw:</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd=[kw[</highlight><highlight class="stringliteral">&apos;path&apos;</highlight><highlight class="normal">],</highlight><highlight class="stringliteral">&apos;--atleast-pkgconfig-version=%s&apos;</highlight><highlight class="normal">%kw[</highlight><highlight class="stringliteral">&apos;atleast_pkgconfig_version&apos;</highlight><highlight class="normal">]]</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.cmd_and_log(cmd)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="stringliteral">&apos;okmsg&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw:</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kw[</highlight><highlight class="stringliteral">&apos;okmsg&apos;</highlight><highlight class="normal">]=</highlight><highlight class="stringliteral">&apos;yes&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>cfg_ver:</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y=x.replace(</highlight><highlight class="stringliteral">&apos;-&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;_&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>y<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw:</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.cmd_and_log([kw[</highlight><highlight class="stringliteral">&apos;path&apos;</highlight><highlight class="normal">],</highlight><highlight class="stringliteral">&apos;--%s=%s&apos;</highlight><highlight class="normal">%(x,kw[y]),kw[</highlight><highlight class="stringliteral">&apos;package&apos;</highlight><highlight class="normal">]])</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="stringliteral">&apos;okmsg&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw:</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kw[</highlight><highlight class="stringliteral">&apos;okmsg&apos;</highlight><highlight class="normal">]=</highlight><highlight class="stringliteral">&apos;yes&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>define_it()</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="stringliteral">&apos;modversion&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw:</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>version=self.cmd_and_log([kw[</highlight><highlight class="stringliteral">&apos;path&apos;</highlight><highlight class="normal">],</highlight><highlight class="stringliteral">&apos;--modversion&apos;</highlight><highlight class="normal">,kw[</highlight><highlight class="stringliteral">&apos;modversion&apos;</highlight><highlight class="normal">]]).strip()</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.define(</highlight><highlight class="stringliteral">&apos;%s_VERSION&apos;</highlight><highlight class="normal">%Utils.quote_define_name(kw.get(</highlight><highlight class="stringliteral">&apos;uselib_store&apos;</highlight><highlight class="normal">,kw[</highlight><highlight class="stringliteral">&apos;modversion&apos;</highlight><highlight class="normal">])),version)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>version</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>lst=[kw[</highlight><highlight class="stringliteral">&apos;path&apos;</highlight><highlight class="normal">]]</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>defi=kw.get(</highlight><highlight class="stringliteral">&apos;define_variable&apos;</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>defi:</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>defi=self.env.PKG_CONFIG_DEFINES<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal">{}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>key,val<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>defi.items():</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lst.append(</highlight><highlight class="stringliteral">&apos;--define-variable=%s=%s&apos;</highlight><highlight class="normal">%(key,val))</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>static=</highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="stringliteral">&apos;args&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw:</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args=Utils.to_list(kw[</highlight><highlight class="stringliteral">&apos;args&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="stringliteral">&apos;--static&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>args<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="stringliteral">&apos;--static-libs&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>args:</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static=</highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lst+=args</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>lst.extend(Utils.to_list(kw[</highlight><highlight class="stringliteral">&apos;package&apos;</highlight><highlight class="normal">]))</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="stringliteral">&apos;variables&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw:</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env=kw.get(</highlight><highlight class="stringliteral">&apos;env&apos;</highlight><highlight class="normal">,self.env)</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uselib=kw.get(</highlight><highlight class="stringliteral">&apos;uselib_store&apos;</highlight><highlight class="normal">,kw[</highlight><highlight class="stringliteral">&apos;package&apos;</highlight><highlight class="normal">].upper())</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vars=Utils.to_list(kw[</highlight><highlight class="stringliteral">&apos;variables&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>v<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>vars:</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val=self.cmd_and_log(lst+[</highlight><highlight class="stringliteral">&apos;--variable=&apos;</highlight><highlight class="normal">+v]).strip()</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var=</highlight><highlight class="stringliteral">&apos;%s_%s&apos;</highlight><highlight class="normal">%(uselib,v)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env[var]=val</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="stringliteral">&apos;okmsg&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw:</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kw[</highlight><highlight class="stringliteral">&apos;okmsg&apos;</highlight><highlight class="normal">]=</highlight><highlight class="stringliteral">&apos;yes&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>ret=self.cmd_and_log(lst)</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="stringliteral">&apos;okmsg&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw:</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kw[</highlight><highlight class="stringliteral">&apos;okmsg&apos;</highlight><highlight class="normal">]=</highlight><highlight class="stringliteral">&apos;yes&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>define_it()</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>self.parse_flags(ret,kw.get(</highlight><highlight class="stringliteral">&apos;uselib_store&apos;</highlight><highlight class="normal">,kw[</highlight><highlight class="stringliteral">&apos;package&apos;</highlight><highlight class="normal">].upper()),kw.get(</highlight><highlight class="stringliteral">&apos;env&apos;</highlight><highlight class="normal">,self.env),force_static=static)</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret</highlight></codeline>
<codeline lineno="189"><highlight class="normal">@conf</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1c__config_1a9777baf7979ba89362dbaf66891281d9" kindref="member">check_cfg</ref>(self,*k,**kw):</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>k:</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lst=k[0].split()</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kw[</highlight><highlight class="stringliteral">&apos;package&apos;</highlight><highlight class="normal">]=lst[0]</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kw[</highlight><highlight class="stringliteral">&apos;args&apos;</highlight><highlight class="normal">]=</highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">.join(lst[1:])</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>self.validate_cfg(kw)</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="stringliteral">&apos;msg&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw:</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.start_msg(kw[</highlight><highlight class="stringliteral">&apos;msg&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>ret=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret=self.exec_cfg(kw)</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>self.errors.WafError:</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="stringliteral">&apos;errmsg&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw:</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.end_msg(kw[</highlight><highlight class="stringliteral">&apos;errmsg&apos;</highlight><highlight class="normal">],</highlight><highlight class="stringliteral">&apos;YELLOW&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>Logs.verbose&gt;1:</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.fatal(</highlight><highlight class="stringliteral">&apos;The<sp/>configuration<sp/>failed&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>ret:</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret=</highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kw[</highlight><highlight class="stringliteral">&apos;success&apos;</highlight><highlight class="normal">]=ret</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="stringliteral">&apos;okmsg&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw:</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.end_msg(self.ret_msg(kw[</highlight><highlight class="stringliteral">&apos;okmsg&apos;</highlight><highlight class="normal">],kw))</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret</highlight></codeline>
<codeline lineno="215"><highlight class="normal">@conf</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1c__config_1aa8c8896ca3170069a0f20b8a27ad2690" kindref="member">validate_c</ref>(self,kw):</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="stringliteral">&apos;env&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw:</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kw[</highlight><highlight class="stringliteral">&apos;env&apos;</highlight><highlight class="normal">]=self.env.derive()</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>env=kw[</highlight><highlight class="stringliteral">&apos;env&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="stringliteral">&apos;compiler&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="stringliteral">&apos;features&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw:</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kw[</highlight><highlight class="stringliteral">&apos;compiler&apos;</highlight><highlight class="normal">]=</highlight><highlight class="stringliteral">&apos;c&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>env[</highlight><highlight class="stringliteral">&apos;CXX_NAME&apos;</highlight><highlight class="normal">]</highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>Task.classes.get(</highlight><highlight class="stringliteral">&apos;cxx&apos;</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kw[</highlight><highlight class="stringliteral">&apos;compiler&apos;</highlight><highlight class="normal">]=</highlight><highlight class="stringliteral">&apos;cxx&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.env[</highlight><highlight class="stringliteral">&apos;CXX&apos;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.fatal(</highlight><highlight class="stringliteral">&apos;a<sp/>c++<sp/>compiler<sp/>is<sp/>required&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.env[</highlight><highlight class="stringliteral">&apos;CC&apos;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.fatal(</highlight><highlight class="stringliteral">&apos;a<sp/>c<sp/>compiler<sp/>is<sp/>required&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="stringliteral">&apos;compile_mode&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw:</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kw[</highlight><highlight class="stringliteral">&apos;compile_mode&apos;</highlight><highlight class="normal">]=</highlight><highlight class="stringliteral">&apos;c&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="stringliteral">&apos;cxx&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>Utils.to_list(kw.get(</highlight><highlight class="stringliteral">&apos;features&apos;</highlight><highlight class="normal">,[]))</highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>kw.get(</highlight><highlight class="stringliteral">&apos;compiler&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">)==</highlight><highlight class="stringliteral">&apos;cxx&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kw[</highlight><highlight class="stringliteral">&apos;compile_mode&apos;</highlight><highlight class="normal">]=</highlight><highlight class="stringliteral">&apos;cxx&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="stringliteral">&apos;type&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw:</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kw[</highlight><highlight class="stringliteral">&apos;type&apos;</highlight><highlight class="normal">]=</highlight><highlight class="stringliteral">&apos;cprogram&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="stringliteral">&apos;features&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw:</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kw[</highlight><highlight class="stringliteral">&apos;features&apos;</highlight><highlight class="normal">]=[kw[</highlight><highlight class="stringliteral">&apos;compile_mode&apos;</highlight><highlight class="normal">],kw[</highlight><highlight class="stringliteral">&apos;type&apos;</highlight><highlight class="normal">]]</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kw[</highlight><highlight class="stringliteral">&apos;features&apos;</highlight><highlight class="normal">]=Utils.to_list(kw[</highlight><highlight class="stringliteral">&apos;features&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="stringliteral">&apos;compile_filename&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw:</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kw[</highlight><highlight class="stringliteral">&apos;compile_filename&apos;</highlight><highlight class="normal">]=</highlight><highlight class="stringliteral">&apos;test.c&apos;</highlight><highlight class="normal">+((kw[</highlight><highlight class="stringliteral">&apos;compile_mode&apos;</highlight><highlight class="normal">]==</highlight><highlight class="stringliteral">&apos;cxx&apos;</highlight><highlight class="normal">)</highlight><highlight class="keywordflow">and</highlight><highlight class="stringliteral">&apos;pp&apos;</highlight><highlight class="keywordflow">or</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">to_header(dct):</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="stringliteral">&apos;header_name&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>dct:</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dct=Utils.to_list(dct[</highlight><highlight class="stringliteral">&apos;header_name&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">.join([</highlight><highlight class="stringliteral">&apos;#include<sp/>&lt;%s&gt;\n&apos;</highlight><highlight class="normal">%x<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>dct])</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="stringliteral">&apos;framework_name&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw:</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fwkname=kw[</highlight><highlight class="stringliteral">&apos;framework_name&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="stringliteral">&apos;uselib_store&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw:</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kw[</highlight><highlight class="stringliteral">&apos;uselib_store&apos;</highlight><highlight class="normal">]=fwkname.upper()</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>kw.get(</highlight><highlight class="stringliteral">&apos;no_header&apos;</highlight><highlight class="normal">,</highlight><highlight class="keyword">False</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="stringliteral">&apos;header_name&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw:</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kw[</highlight><highlight class="stringliteral">&apos;header_name&apos;</highlight><highlight class="normal">]=[]</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fwk=</highlight><highlight class="stringliteral">&apos;%s/%s.h&apos;</highlight><highlight class="normal">%(fwkname,fwkname)</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>kw.get(</highlight><highlight class="stringliteral">&apos;remove_dot_h&apos;</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fwk=fwk[:-2]</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kw[</highlight><highlight class="stringliteral">&apos;header_name&apos;</highlight><highlight class="normal">]=Utils.to_list(kw[</highlight><highlight class="stringliteral">&apos;header_name&apos;</highlight><highlight class="normal">])+[fwk]</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kw[</highlight><highlight class="stringliteral">&apos;msg&apos;</highlight><highlight class="normal">]=</highlight><highlight class="stringliteral">&apos;Checking<sp/>for<sp/>framework<sp/>%s&apos;</highlight><highlight class="normal">%fwkname</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kw[</highlight><highlight class="stringliteral">&apos;framework&apos;</highlight><highlight class="normal">]=fwkname</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="stringliteral">&apos;function_name&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw:</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fu=kw[</highlight><highlight class="stringliteral">&apos;function_name&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="stringliteral">&apos;msg&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw:</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kw[</highlight><highlight class="stringliteral">&apos;msg&apos;</highlight><highlight class="normal">]=</highlight><highlight class="stringliteral">&apos;Checking<sp/>for<sp/>function<sp/>%s&apos;</highlight><highlight class="normal">%fu</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kw[</highlight><highlight class="stringliteral">&apos;code&apos;</highlight><highlight class="normal">]=to_header(kw)+SNIP_FUNCTION%fu</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="stringliteral">&apos;uselib_store&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw:</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kw[</highlight><highlight class="stringliteral">&apos;uselib_store&apos;</highlight><highlight class="normal">]=fu.upper()</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="stringliteral">&apos;define_name&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw:</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kw[</highlight><highlight class="stringliteral">&apos;define_name&apos;</highlight><highlight class="normal">]=self.have_define(fu)</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="stringliteral">&apos;type_name&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw:</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tu=kw[</highlight><highlight class="stringliteral">&apos;type_name&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="stringliteral">&apos;header_name&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw:</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kw[</highlight><highlight class="stringliteral">&apos;header_name&apos;</highlight><highlight class="normal">]=</highlight><highlight class="stringliteral">&apos;stdint.h&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="stringliteral">&apos;field_name&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw:</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field=kw[</highlight><highlight class="stringliteral">&apos;field_name&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kw[</highlight><highlight class="stringliteral">&apos;code&apos;</highlight><highlight class="normal">]=to_header(kw)+SNIP_FIELD%{</highlight><highlight class="stringliteral">&apos;type_name&apos;</highlight><highlight class="normal">:tu,</highlight><highlight class="stringliteral">&apos;field_name&apos;</highlight><highlight class="normal">:field}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="stringliteral">&apos;msg&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw:</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kw[</highlight><highlight class="stringliteral">&apos;msg&apos;</highlight><highlight class="normal">]=</highlight><highlight class="stringliteral">&apos;Checking<sp/>for<sp/>field<sp/>%s<sp/>in<sp/>%s&apos;</highlight><highlight class="normal">%(field,tu)</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="stringliteral">&apos;define_name&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw:</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kw[</highlight><highlight class="stringliteral">&apos;define_name&apos;</highlight><highlight class="normal">]=self.have_define((tu+</highlight><highlight class="stringliteral">&apos;_&apos;</highlight><highlight class="normal">+field).upper())</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kw[</highlight><highlight class="stringliteral">&apos;code&apos;</highlight><highlight class="normal">]=to_header(kw)+SNIP_TYPE%{</highlight><highlight class="stringliteral">&apos;type_name&apos;</highlight><highlight class="normal">:tu}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="stringliteral">&apos;msg&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw:</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kw[</highlight><highlight class="stringliteral">&apos;msg&apos;</highlight><highlight class="normal">]=</highlight><highlight class="stringliteral">&apos;Checking<sp/>for<sp/>type<sp/>%s&apos;</highlight><highlight class="normal">%tu</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="stringliteral">&apos;define_name&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw:</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kw[</highlight><highlight class="stringliteral">&apos;define_name&apos;</highlight><highlight class="normal">]=self.have_define(tu.upper())</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="stringliteral">&apos;header_name&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw:</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="stringliteral">&apos;msg&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw:</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kw[</highlight><highlight class="stringliteral">&apos;msg&apos;</highlight><highlight class="normal">]=</highlight><highlight class="stringliteral">&apos;Checking<sp/>for<sp/>header<sp/>%s&apos;</highlight><highlight class="normal">%kw[</highlight><highlight class="stringliteral">&apos;header_name&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l=Utils.to_list(kw[</highlight><highlight class="stringliteral">&apos;header_name&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>len(l)&gt;0,</highlight><highlight class="stringliteral">&apos;list<sp/>of<sp/>headers<sp/>in<sp/>header_name<sp/>is<sp/>empty&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kw[</highlight><highlight class="stringliteral">&apos;code&apos;</highlight><highlight class="normal">]=to_header(kw)+SNIP_EMPTY_PROGRAM</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="stringliteral">&apos;uselib_store&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw:</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kw[</highlight><highlight class="stringliteral">&apos;uselib_store&apos;</highlight><highlight class="normal">]=l[0].upper()</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="stringliteral">&apos;define_name&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw:</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kw[</highlight><highlight class="stringliteral">&apos;define_name&apos;</highlight><highlight class="normal">]=self.have_define(l[0])</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="stringliteral">&apos;lib&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw:</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="stringliteral">&apos;msg&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw:</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kw[</highlight><highlight class="stringliteral">&apos;msg&apos;</highlight><highlight class="normal">]=</highlight><highlight class="stringliteral">&apos;Checking<sp/>for<sp/>library<sp/>%s&apos;</highlight><highlight class="normal">%kw[</highlight><highlight class="stringliteral">&apos;lib&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="stringliteral">&apos;uselib_store&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw:</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kw[</highlight><highlight class="stringliteral">&apos;uselib_store&apos;</highlight><highlight class="normal">]=kw[</highlight><highlight class="stringliteral">&apos;lib&apos;</highlight><highlight class="normal">].upper()</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="stringliteral">&apos;stlib&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw:</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="stringliteral">&apos;msg&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw:</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kw[</highlight><highlight class="stringliteral">&apos;msg&apos;</highlight><highlight class="normal">]=</highlight><highlight class="stringliteral">&apos;Checking<sp/>for<sp/>static<sp/>library<sp/>%s&apos;</highlight><highlight class="normal">%kw[</highlight><highlight class="stringliteral">&apos;stlib&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="stringliteral">&apos;uselib_store&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw:</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kw[</highlight><highlight class="stringliteral">&apos;uselib_store&apos;</highlight><highlight class="normal">]=kw[</highlight><highlight class="stringliteral">&apos;stlib&apos;</highlight><highlight class="normal">].upper()</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="stringliteral">&apos;fragment&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw:</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kw[</highlight><highlight class="stringliteral">&apos;code&apos;</highlight><highlight class="normal">]=kw[</highlight><highlight class="stringliteral">&apos;fragment&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="stringliteral">&apos;msg&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw:</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kw[</highlight><highlight class="stringliteral">&apos;msg&apos;</highlight><highlight class="normal">]=</highlight><highlight class="stringliteral">&apos;Checking<sp/>for<sp/>code<sp/>snippet&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="stringliteral">&apos;errmsg&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw:</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kw[</highlight><highlight class="stringliteral">&apos;errmsg&apos;</highlight><highlight class="normal">]=</highlight><highlight class="stringliteral">&apos;no&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hashrout_8h_1af69473f95324d0c0f91fdfb1d1a00360" kindref="member">for</ref>(flagsname,flagstype)</highlight><highlight class="keywordflow">in</highlight><highlight class="normal">[(</highlight><highlight class="stringliteral">&apos;cxxflags&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;compiler&apos;</highlight><highlight class="normal">),(</highlight><highlight class="stringliteral">&apos;cflags&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;compiler&apos;</highlight><highlight class="normal">),(</highlight><highlight class="stringliteral">&apos;linkflags&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;linker&apos;</highlight><highlight class="normal">)]:</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>flagsname<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw:</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="stringliteral">&apos;msg&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw:</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kw[</highlight><highlight class="stringliteral">&apos;msg&apos;</highlight><highlight class="normal">]=</highlight><highlight class="stringliteral">&apos;Checking<sp/>for<sp/>%s<sp/>flags<sp/>%s&apos;</highlight><highlight class="normal">%(flagstype,kw[flagsname])</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="stringliteral">&apos;errmsg&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw:</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kw[</highlight><highlight class="stringliteral">&apos;errmsg&apos;</highlight><highlight class="normal">]=</highlight><highlight class="stringliteral">&apos;no&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="stringliteral">&apos;execute&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw:</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kw[</highlight><highlight class="stringliteral">&apos;execute&apos;</highlight><highlight class="normal">]=</highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>kw[</highlight><highlight class="stringliteral">&apos;execute&apos;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kw[</highlight><highlight class="stringliteral">&apos;features&apos;</highlight><highlight class="normal">].append(</highlight><highlight class="stringliteral">&apos;test_exec&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="stringliteral">&apos;errmsg&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw:</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kw[</highlight><highlight class="stringliteral">&apos;errmsg&apos;</highlight><highlight class="normal">]=</highlight><highlight class="stringliteral">&apos;not<sp/>found&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="stringliteral">&apos;okmsg&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw:</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kw[</highlight><highlight class="stringliteral">&apos;okmsg&apos;</highlight><highlight class="normal">]=</highlight><highlight class="stringliteral">&apos;yes&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="stringliteral">&apos;code&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw:</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kw[</highlight><highlight class="stringliteral">&apos;code&apos;</highlight><highlight class="normal">]=SNIP_EMPTY_PROGRAM</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.env[INCKEYS]:</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kw[</highlight><highlight class="stringliteral">&apos;code&apos;</highlight><highlight class="normal">]=</highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal">.join([</highlight><highlight class="stringliteral">&apos;#include<sp/>&lt;%s&gt;&apos;</highlight><highlight class="normal">%x<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.env[INCKEYS]])+</highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal">+kw[</highlight><highlight class="stringliteral">&apos;code&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>kw.get(</highlight><highlight class="stringliteral">&apos;success&apos;</highlight><highlight class="normal">):kw[</highlight><highlight class="stringliteral">&apos;success&apos;</highlight><highlight class="normal">]=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="stringliteral">&apos;define_name&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw:</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.undefine(kw[</highlight><highlight class="stringliteral">&apos;define_name&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="stringliteral">&apos;msg&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw:</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.fatal(</highlight><highlight class="stringliteral">&apos;missing<sp/>&quot;msg&quot;<sp/>in<sp/>conf.check(...)&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="334"><highlight class="normal">@conf</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1c__config_1a007f8b5aab4b03ad5b428be9e9e56fd4" kindref="member">post_check</ref>(self,*k,**kw):</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>is_success=0</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>kw[</highlight><highlight class="stringliteral">&apos;execute&apos;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>kw[</highlight><highlight class="stringliteral">&apos;success&apos;</highlight><highlight class="normal">]</highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>kw.get(</highlight><highlight class="stringliteral">&apos;define_ret&apos;</highlight><highlight class="normal">,</highlight><highlight class="keyword">False</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_success=kw[</highlight><highlight class="stringliteral">&apos;success&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_success=(kw[</highlight><highlight class="stringliteral">&apos;success&apos;</highlight><highlight class="normal">]==0)</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_success=(kw[</highlight><highlight class="stringliteral">&apos;success&apos;</highlight><highlight class="normal">]==0)</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="stringliteral">&apos;define_name&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw:</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="stringliteral">&apos;header_name&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="stringliteral">&apos;function_name&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="stringliteral">&apos;type_name&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="stringliteral">&apos;fragment&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw:</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>kw[</highlight><highlight class="stringliteral">&apos;execute&apos;</highlight><highlight class="normal">]</highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>kw.get(</highlight><highlight class="stringliteral">&apos;define_ret&apos;</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>isinstance(is_success,str):</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.define(kw[</highlight><highlight class="stringliteral">&apos;define_name&apos;</highlight><highlight class="normal">],is_success,quote=kw.get(</highlight><highlight class="stringliteral">&apos;quote&apos;</highlight><highlight class="normal">,1))</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.define_cond(kw[</highlight><highlight class="stringliteral">&apos;define_name&apos;</highlight><highlight class="normal">],is_success)</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.define_cond(kw[</highlight><highlight class="stringliteral">&apos;define_name&apos;</highlight><highlight class="normal">],is_success)</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="stringliteral">&apos;header_name&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw:</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>kw.get(</highlight><highlight class="stringliteral">&apos;auto_add_header_name&apos;</highlight><highlight class="normal">,</highlight><highlight class="keyword">False</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.env.append_value(INCKEYS,Utils.to_list(kw[</highlight><highlight class="stringliteral">&apos;header_name&apos;</highlight><highlight class="normal">]))</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>is_success<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="stringliteral">&apos;uselib_store&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw:</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_tools" kindref="compound">waflib.Tools</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>ccroot</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_vars=set([])</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw[</highlight><highlight class="stringliteral">&apos;features&apos;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>ccroot.USELIB_VARS:</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_vars|=ccroot.USELIB_VARS[x]</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>_vars:</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lk=k.lower()</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>lk<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw:</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val=kw[lk]</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isinstance(val,str):</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val=val.rstrip(os.path.sep)</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.env.append_unique(k+</highlight><highlight class="stringliteral">&apos;_&apos;</highlight><highlight class="normal">+kw[</highlight><highlight class="stringliteral">&apos;uselib_store&apos;</highlight><highlight class="normal">],Utils.to_list(val))</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>is_success</highlight></codeline>
<codeline lineno="370"><highlight class="normal">@conf</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1c__config_1a58859fd21b5419c38f4c77256ce3893b" kindref="member">check</ref>(self,*k,**kw):</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>self.validate_c(kw)</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>self.start_msg(kw[</highlight><highlight class="stringliteral">&apos;msg&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>ret=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret=self.run_c_code(*k,**kw)</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>self.errors.ConfigurationError:</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.end_msg(kw[</highlight><highlight class="stringliteral">&apos;errmsg&apos;</highlight><highlight class="normal">],</highlight><highlight class="stringliteral">&apos;YELLOW&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>Logs.verbose&gt;1:</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.fatal(</highlight><highlight class="stringliteral">&apos;The<sp/>configuration<sp/>failed&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kw[</highlight><highlight class="stringliteral">&apos;success&apos;</highlight><highlight class="normal">]=ret</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>ret=self.post_check(*k,**kw)</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>ret:</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.end_msg(kw[</highlight><highlight class="stringliteral">&apos;errmsg&apos;</highlight><highlight class="normal">],</highlight><highlight class="stringliteral">&apos;YELLOW&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.fatal(</highlight><highlight class="stringliteral">&apos;The<sp/>configuration<sp/>failed<sp/>%r&apos;</highlight><highlight class="normal">%ret)</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.end_msg(self.ret_msg(kw[</highlight><highlight class="stringliteral">&apos;okmsg&apos;</highlight><highlight class="normal">],kw))</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">test_exec(Task.Task):</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>color=</highlight><highlight class="stringliteral">&apos;PINK&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394" refid="classwaflib_1_1_tools_1_1c__config_1_1test__exec_1a280e67dce958364efd2d429905b1d948" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classwaflib_1_1_tools_1_1c__config_1_1test__exec_1a280e67dce958364efd2d429905b1d948" kindref="member">run</ref>(self):</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>getattr(self.<ref refid="classwaflib_1_1_task_1_1_task_base_1ab2845bbbc20cc2212baf138df4f10e9a" kindref="member">generator</ref>,</highlight><highlight class="stringliteral">&apos;rpath&apos;</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>getattr(self.<ref refid="classwaflib_1_1_task_1_1_task_base_1ab2845bbbc20cc2212baf138df4f10e9a" kindref="member">generator</ref>,</highlight><highlight class="stringliteral">&apos;define_ret&apos;</highlight><highlight class="normal">,</highlight><highlight class="keyword">False</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.generator.bld.retval=self.generator.bld.cmd_and_log([self.<ref refid="classwaflib_1_1_task_1_1_task_1a84db2881aae1bcc2ad19c0eecf24804c" kindref="member">inputs</ref>[0].abspath()])</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.generator.bld.retval=self.generator.bld.exec_command([self.<ref refid="classwaflib_1_1_task_1_1_task_1a84db2881aae1bcc2ad19c0eecf24804c" kindref="member">inputs</ref>[0].abspath()])</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env=self.env.env<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal">{}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env.update(dict(os.environ))</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>var<sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>(</highlight><highlight class="stringliteral">&apos;LD_LIBRARY_PATH&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;DYLD_LIBRARY_PATH&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;PATH&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env[var]=self.<ref refid="classwaflib_1_1_task_1_1_task_1a84db2881aae1bcc2ad19c0eecf24804c" kindref="member">inputs</ref>[0].parent.abspath()+os.path.pathsep+env.get(var,</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>getattr(self.<ref refid="classwaflib_1_1_task_1_1_task_base_1ab2845bbbc20cc2212baf138df4f10e9a" kindref="member">generator</ref>,</highlight><highlight class="stringliteral">&apos;define_ret&apos;</highlight><highlight class="normal">,</highlight><highlight class="keyword">False</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.generator.bld.retval=self.generator.bld.cmd_and_log([self.<ref refid="classwaflib_1_1_task_1_1_task_1a84db2881aae1bcc2ad19c0eecf24804c" kindref="member">inputs</ref>[0].abspath()],env=env)</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.generator.bld.retval=self.generator.bld.exec_command([self.<ref refid="classwaflib_1_1_task_1_1_task_1a84db2881aae1bcc2ad19c0eecf24804c" kindref="member">inputs</ref>[0].abspath()],env=env)</highlight></codeline>
<codeline lineno="409"><highlight class="normal">@<ref refid="namespacewaflib_1_1_task_gen_1a839f18f16539f3131cbe573262099bf1" kindref="member">feature</ref>(</highlight><highlight class="stringliteral">&apos;test_exec&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="410"><highlight class="normal">@<ref refid="namespacewaflib_1_1_task_gen_1a3411cecc8687a44154a45078c3224fb7" kindref="member">after_method</ref>(</highlight><highlight class="stringliteral">&apos;apply_link&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1c__config_1aca45fb00c52fe9345fba913b79c465dd" kindref="member">test_exec_fun</ref>(self):</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>self.create_task(</highlight><highlight class="stringliteral">&apos;test_exec&apos;</highlight><highlight class="normal">,self.link_task.outputs[0])</highlight></codeline>
<codeline lineno="413"><highlight class="normal">CACHE_RESULTS=1</highlight></codeline>
<codeline lineno="414"><highlight class="normal">COMPILE_ERRORS=2</highlight></codeline>
<codeline lineno="415"><highlight class="normal">@conf</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1c__config_1acd53ac9edce84551c4bf87b21854c6b8" kindref="member">run_c_code</ref>(self,*k,**kw):</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>lst=[<ref refid="sndfile__save_8m_1a4b99ff73a8a869319570237b5c57ab03" kindref="member">str</ref>(v)<ref refid="hashrout_8h_1af69473f95324d0c0f91fdfb1d1a00360" kindref="member">for</ref>(p,v)</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw.items()</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>p!=</highlight><highlight class="stringliteral">&apos;env&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>h=Utils.h_list(lst)</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>dir=self.bldnode.abspath()+os.sep+(</highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>Utils.is_win32<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="stringliteral">&apos;.&apos;</highlight><highlight class="keywordflow">or</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">)+</highlight><highlight class="stringliteral">&apos;conf_check_&apos;</highlight><highlight class="normal">+Utils.to_hex(h)</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os.makedirs(dir)</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>OSError:</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os.stat(dir)</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>OSError:</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.fatal(</highlight><highlight class="stringliteral">&apos;cannot<sp/>use<sp/>the<sp/>configuration<sp/>test<sp/>folder<sp/>%r&apos;</highlight><highlight class="normal">%dir)</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>cachemode=getattr(Options.options,</highlight><highlight class="stringliteral">&apos;confcache&apos;</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>cachemode==CACHE_RESULTS:</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>proj=<ref refid="classwaflib_1_1_config_set_1_1_config_set" kindref="compound">ConfigSet.ConfigSet</ref>(os.path.join(dir,</highlight><highlight class="stringliteral">&apos;cache_run_c_code&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>OSError:</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret=proj[</highlight><highlight class="stringliteral">&apos;cache_run_c_code&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isinstance(ret,str)</highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>ret.startswith(</highlight><highlight class="stringliteral">&apos;Test<sp/>does<sp/>not<sp/>build&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.fatal(ret)</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>bdir=os.path.join(dir,</highlight><highlight class="stringliteral">&apos;testbuild&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>os.path.exists(bdir):</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os.makedirs(bdir)</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>self.test_bld=bld=<ref refid="classwaflib_1_1_build_1_1_build_context" kindref="compound">Build.BuildContext</ref>(top_dir=dir,out_dir=bdir)</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>bld.init_dirs()</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>bld.progress_bar=0</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>bld.targets=</highlight><highlight class="stringliteral">&apos;*&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>kw[</highlight><highlight class="stringliteral">&apos;compile_filename&apos;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node=bld.srcnode.make_node(kw[</highlight><highlight class="stringliteral">&apos;compile_filename&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node.write(kw[</highlight><highlight class="stringliteral">&apos;code&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>bld.logger=self.logger</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>bld.all_envs.update(self.all_envs)</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>bld.env=kw[</highlight><highlight class="stringliteral">&apos;env&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>o=bld(features=kw[</highlight><highlight class="stringliteral">&apos;features&apos;</highlight><highlight class="normal">],source=kw[</highlight><highlight class="stringliteral">&apos;compile_filename&apos;</highlight><highlight class="normal">],target=</highlight><highlight class="stringliteral">&apos;testprog&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k,v<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>kw.items():</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setattr(o,k,v)</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>self.to_log(</highlight><highlight class="stringliteral">&quot;==&gt;\n%s\n&lt;==&quot;</highlight><highlight class="normal">%kw[</highlight><highlight class="stringliteral">&apos;code&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>bld.targets=</highlight><highlight class="stringliteral">&apos;*&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>ret=-1</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bld.compile()</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/><ref refid="classwaflib_1_1_errors_1_1_waf_error" kindref="compound">Errors.WafError</ref>:</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret=</highlight><highlight class="stringliteral">&apos;Test<sp/>does<sp/>not<sp/>build:<sp/>%s&apos;</highlight><highlight class="normal">%Utils.ex_stack()</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.fatal(ret)</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret=getattr(bld,</highlight><highlight class="stringliteral">&apos;retval&apos;</highlight><highlight class="normal">,0)</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">finally</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>proj=<ref refid="classwaflib_1_1_config_set_1_1_config_set" kindref="compound">ConfigSet.ConfigSet</ref>()</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>proj[</highlight><highlight class="stringliteral">&apos;cache_run_c_code&apos;</highlight><highlight class="normal">]=ret</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>proj.store(os.path.join(dir,</highlight><highlight class="stringliteral">&apos;cache_run_c_code&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret</highlight></codeline>
<codeline lineno="471"><highlight class="normal">@conf</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1c__config_1a56e98ff4881c9fc86bdcfd0075e21967" kindref="member">check_cxx</ref>(self,*k,**kw):</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>kw[</highlight><highlight class="stringliteral">&apos;compiler&apos;</highlight><highlight class="normal">]=</highlight><highlight class="stringliteral">&apos;cxx&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.check(*k,**kw)</highlight></codeline>
<codeline lineno="475"><highlight class="normal">@conf</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1c__config_1aafa88569174a7bd6959eb079e45f9e5f" kindref="member">check_cc</ref>(self,*k,**kw):</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>kw[</highlight><highlight class="stringliteral">&apos;compiler&apos;</highlight><highlight class="normal">]=</highlight><highlight class="stringliteral">&apos;c&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.check(*k,**kw)</highlight></codeline>
<codeline lineno="479"><highlight class="normal">@conf</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1c__config_1aefc8712a0a3e7664272e76d085178811" kindref="member">define</ref>(self,key,val,quote=True):</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>key<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>isinstance(key,str)</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>val<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val=1</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>val<sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>(</highlight><highlight class="keyword">False</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val=0</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isinstance(val,int)</highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>isinstance(val,float):</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s=</highlight><highlight class="stringliteral">&apos;%s=%s&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s=quote<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="stringliteral">&apos;%s=&quot;%s&quot;&apos;</highlight><highlight class="keywordflow">or</highlight><highlight class="stringliteral">&apos;%s=%s&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>app=s%(key,<ref refid="sndfile__save_8m_1a4b99ff73a8a869319570237b5c57ab03" kindref="member">str</ref>(val))</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>ban=key+</highlight><highlight class="stringliteral">&apos;=&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>lst=self.<ref refid="classwaflib_1_1_task_1_1_task_1ace363b3fc9aa947c470a9dd8684e4d2a" kindref="member">env</ref>[</highlight><highlight class="stringliteral">&apos;DEFINES&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>lst:</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>x.startswith(ban):</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lst[lst.index(x)]=app</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.env.append_value(</highlight><highlight class="stringliteral">&apos;DEFINES&apos;</highlight><highlight class="normal">,app)</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>self.env.append_unique(DEFKEYS,key)</highlight></codeline>
<codeline lineno="500"><highlight class="normal">@conf</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1c__config_1aeb8ffd395ba266ee2d8c980363c24a88" kindref="member">undefine</ref>(self,key):</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>key<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>isinstance(key,str)</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>ban=key+</highlight><highlight class="stringliteral">&apos;=&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>lst=[x<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classwaflib_1_1_task_1_1_task_1ace363b3fc9aa947c470a9dd8684e4d2a" kindref="member">env</ref>[</highlight><highlight class="stringliteral">&apos;DEFINES&apos;</highlight><highlight class="normal">]</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>x.startswith(ban)]</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>self.<ref refid="classwaflib_1_1_task_1_1_task_1ace363b3fc9aa947c470a9dd8684e4d2a" kindref="member">env</ref>[</highlight><highlight class="stringliteral">&apos;DEFINES&apos;</highlight><highlight class="normal">]=lst</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/>self.env.append_unique(DEFKEYS,key)</highlight></codeline>
<codeline lineno="507"><highlight class="normal">@conf</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1c__config_1a636c9eacb867877684f412620a6b6b6a" kindref="member">define_cond</ref>(self,key,val):</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>key<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>isinstance(key,str)</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>val:</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.define(key,1)</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.undefine(key)</highlight></codeline>
<codeline lineno="514"><highlight class="normal">@conf</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1c__config_1a1478f0bc62d743d26996a86b25d14a74" kindref="member">is_defined</ref>(self,key):</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>key<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>isinstance(key,str)</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>ban=key+</highlight><highlight class="stringliteral">&apos;=&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classwaflib_1_1_task_1_1_task_1ace363b3fc9aa947c470a9dd8684e4d2a" kindref="member">env</ref>[</highlight><highlight class="stringliteral">&apos;DEFINES&apos;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>x.startswith(ban):</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal">@conf</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1c__config_1a1f04496a9a6d169183ad82bb7b6df607" kindref="member">get_define</ref>(self,key):</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>key<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>isinstance(key,str)</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>ban=key+</highlight><highlight class="stringliteral">&apos;=&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classwaflib_1_1_task_1_1_task_1ace363b3fc9aa947c470a9dd8684e4d2a" kindref="member">env</ref>[</highlight><highlight class="stringliteral">&apos;DEFINES&apos;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>x.startswith(ban):</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x[len(ban):]</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal">@conf</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1c__config_1a10f2fd410b28bac19d8a1cf226150bd2" kindref="member">have_define</ref>(self,key):</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hashrout_8h_1a9842e92184417c07866419916b2b3ce3" kindref="member">return</ref>(self.env.HAVE_PAT<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="stringliteral">&apos;HAVE_%s&apos;</highlight><highlight class="normal">)%Utils.quote_define_name(key)</highlight></codeline>
<codeline lineno="533"><highlight class="normal">@conf</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1c__config_1a431d2b1c6dccecd7d62c51a6348434bc" kindref="member">write_config_header</ref>(self,configfile=&apos;&apos;,guard=&apos;&apos;,top=False,env=None,defines=True,headers=False,remove=True,define_prefix=&apos;&apos;):</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>env:</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Logs.warn(</highlight><highlight class="stringliteral">&apos;Cannot<sp/>pass<sp/>env<sp/>to<sp/>write_config_header&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>configfile:configfile=WAF_CONFIG_H</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/>waf_guard=guard<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="stringliteral">&apos;W_%s_WAF&apos;</highlight><highlight class="normal">%Utils.quote_define_name(configfile)</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>node=top<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>self.bldnode<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>self.path.get_bld()</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>node=node.make_node(configfile)</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>node.parent.mkdir()</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/>lst=[</highlight><highlight class="stringliteral">&apos;/*<sp/>WARNING!<sp/>All<sp/>changes<sp/>made<sp/>to<sp/>this<sp/>file<sp/>will<sp/>be<sp/>lost!<sp/>*/\n&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/>lst.append(</highlight><highlight class="stringliteral">&apos;#ifndef<sp/>%s\n#define<sp/>%s\n&apos;</highlight><highlight class="normal">%(waf_guard,waf_guard))</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>lst.append(self.get_config_header(defines,headers,define_prefix=define_prefix))</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>lst.append(</highlight><highlight class="stringliteral">&apos;\n#endif<sp/>/*<sp/>%s<sp/>*/\n&apos;</highlight><highlight class="normal">%waf_guard)</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>node.write(</highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal">.join(lst))</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>self.env.append_unique(Build.CFG_FILES,[node.abspath()])</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>remove:</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>key<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classwaflib_1_1_task_1_1_task_1ace363b3fc9aa947c470a9dd8684e4d2a" kindref="member">env</ref>[DEFKEYS]:</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.undefine(key)</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classwaflib_1_1_task_1_1_task_1ace363b3fc9aa947c470a9dd8684e4d2a" kindref="member">env</ref>[DEFKEYS]=[]</highlight></codeline>
<codeline lineno="552"><highlight class="normal">@conf</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1c__config_1a0c69508d77befbcea1727b1a135fc83a" kindref="member">get_config_header</ref>(self,defines=True,headers=False,define_prefix=&apos;&apos;):</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/>lst=[]</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>headers:</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classwaflib_1_1_task_1_1_task_1ace363b3fc9aa947c470a9dd8684e4d2a" kindref="member">env</ref>[INCKEYS]:</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lst.append(</highlight><highlight class="stringliteral">&apos;#include<sp/>&lt;%s&gt;&apos;</highlight><highlight class="normal">%x)</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>defines:</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classwaflib_1_1_task_1_1_task_1ace363b3fc9aa947c470a9dd8684e4d2a" kindref="member">env</ref>[DEFKEYS]:</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.is_defined(x):</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val=self.get_define(x)</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lst.append(</highlight><highlight class="stringliteral">&apos;#define<sp/>%s<sp/>%s&apos;</highlight><highlight class="normal">%(define_prefix+x,val))</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lst.append(</highlight><highlight class="stringliteral">&apos;/*<sp/>#undef<sp/>%s<sp/>*/&apos;</highlight><highlight class="normal">%(define_prefix+x))</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">.join(lst)</highlight></codeline>
<codeline lineno="566"><highlight class="normal">@conf</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1c__config_1a60f244c4a4f5fc5f5c97a608ef15a4f9" kindref="member">cc_add_flags</ref>(conf):</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>conf.add_os_flags(</highlight><highlight class="stringliteral">&apos;CPPFLAGS&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;CFLAGS&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>conf.add_os_flags(</highlight><highlight class="stringliteral">&apos;CFLAGS&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="570"><highlight class="normal">@conf</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1c__config_1a68d43a67259ff2dc914e1a4e46a8d876" kindref="member">cxx_add_flags</ref>(conf):</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/>conf.add_os_flags(</highlight><highlight class="stringliteral">&apos;CPPFLAGS&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;CXXFLAGS&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>conf.add_os_flags(</highlight><highlight class="stringliteral">&apos;CXXFLAGS&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="574"><highlight class="normal">@conf</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1c__config_1a3dc8e6c2c3381ead4f4fd243414bd081" kindref="member">link_add_flags</ref>(conf):</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>conf.add_os_flags(</highlight><highlight class="stringliteral">&apos;LINKFLAGS&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>conf.add_os_flags(</highlight><highlight class="stringliteral">&apos;LDFLAGS&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;LINKFLAGS&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="578"><highlight class="normal">@conf</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1c__config_1a4b0405110f79509aa25cf9830827c7ac" kindref="member">cc_load_tools</ref>(conf):</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>conf.env.DEST_OS:</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf.env.DEST_OS=Utils.unversioned_sys_platform()</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>conf.load(</highlight><highlight class="stringliteral">&apos;c&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="583"><highlight class="normal">@conf</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1c__config_1a2c649c982fe806a7c7d612e0fdf9625d" kindref="member">cxx_load_tools</ref>(conf):</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>conf.env.DEST_OS:</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf.env.DEST_OS=Utils.unversioned_sys_platform()</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/>conf.load(</highlight><highlight class="stringliteral">&apos;cxx&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="588"><highlight class="normal">@conf</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1c__config_1a1a7139cf5457328169035081a4e54237" kindref="member">get_cc_version</ref>(conf,cc,gcc=False,icc=False):</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/>cmd=cc+[</highlight><highlight class="stringliteral">&apos;-dM&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;-E&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;-&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/>env=conf.env.env<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p=Utils.subprocess.Popen(cmd,stdin=Utils.subprocess.PIPE,stdout=Utils.subprocess.PIPE,stderr=Utils.subprocess.PIPE,env=env)</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.stdin.write(</highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out=p.communicate()[0]</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception:</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf.fatal(</highlight><highlight class="stringliteral">&apos;Could<sp/>not<sp/>determine<sp/>the<sp/>compiler<sp/>version<sp/>%r&apos;</highlight><highlight class="normal">%cmd)</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>isinstance(out,str):</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out=out.decode(sys.stdout.encoding<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="stringliteral">&apos;iso8859-1&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>gcc:</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>out.find(</highlight><highlight class="stringliteral">&apos;__INTEL_COMPILER&apos;</highlight><highlight class="normal">)&gt;=0:</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf.fatal(</highlight><highlight class="stringliteral">&apos;The<sp/>intel<sp/>compiler<sp/>pretends<sp/>to<sp/>be<sp/>gcc&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>out.find(</highlight><highlight class="stringliteral">&apos;__GNUC__&apos;</highlight><highlight class="normal">)&lt;0<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>out.find(</highlight><highlight class="stringliteral">&apos;__clang__&apos;</highlight><highlight class="normal">)&lt;0:</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf.fatal(</highlight><highlight class="stringliteral">&apos;Could<sp/>not<sp/>determine<sp/>the<sp/>compiler<sp/>type&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>icc<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>out.find(</highlight><highlight class="stringliteral">&apos;__INTEL_COMPILER&apos;</highlight><highlight class="normal">)&lt;0:</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf.fatal(</highlight><highlight class="stringliteral">&apos;Not<sp/>icc/icpc&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/>k={}</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>icc<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>gcc:</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out=out.splitlines()</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>line<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>out:</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lst=shlex.split(line)</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(lst)&gt;2:</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key=lst[1]</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val=lst[2]</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k[key]=val</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">isD(var):</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>var<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>k</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">isT(var):</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>var<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>k<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>k[var]!=</highlight><highlight class="stringliteral">&apos;0&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>conf.env.DEST_OS:</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf.env.DEST_OS=</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>MACRO_TO_DESTOS:</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isD(i):</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf.env.DEST_OS=MACRO_TO_DESTOS[i]</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isD(</highlight><highlight class="stringliteral">&apos;__APPLE__&apos;</highlight><highlight class="normal">)</highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>isD(</highlight><highlight class="stringliteral">&apos;__MACH__&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf.env.DEST_OS=</highlight><highlight class="stringliteral">&apos;darwin&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>isD(</highlight><highlight class="stringliteral">&apos;__unix__&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf.env.DEST_OS=</highlight><highlight class="stringliteral">&apos;generic&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isD(</highlight><highlight class="stringliteral">&apos;__ELF__&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf.env.DEST_BINFMT=</highlight><highlight class="stringliteral">&apos;elf&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>isD(</highlight><highlight class="stringliteral">&apos;__WINNT__&apos;</highlight><highlight class="normal">)</highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>isD(</highlight><highlight class="stringliteral">&apos;__CYGWIN__&apos;</highlight><highlight class="normal">)</highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>isD(</highlight><highlight class="stringliteral">&apos;_WIN32&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf.env.DEST_BINFMT=</highlight><highlight class="stringliteral">&apos;pe&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf.env.LIBDIR=conf.env.BINDIR</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>isD(</highlight><highlight class="stringliteral">&apos;__APPLE__&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf.env.DEST_BINFMT=</highlight><highlight class="stringliteral">&apos;mac-o&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>conf.env.DEST_BINFMT:</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf.env.DEST_BINFMT=Utils.destos_to_binfmt(conf.env.DEST_OS)</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>MACRO_TO_DEST_CPU:</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isD(i):</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf.env.DEST_CPU=MACRO_TO_DEST_CPU[i]</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Logs.debug(</highlight><highlight class="stringliteral">&apos;ccroot:<sp/>dest<sp/>platform:<sp/>&apos;</highlight><highlight class="normal">+</highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">.join([conf.env[x]</highlight><highlight class="keywordflow">or</highlight><highlight class="stringliteral">&apos;?&apos;</highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>(</highlight><highlight class="stringliteral">&apos;DEST_OS&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;DEST_BINFMT&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;DEST_CPU&apos;</highlight><highlight class="normal">)]))</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>icc:</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ver=k[</highlight><highlight class="stringliteral">&apos;__INTEL_COMPILER&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf.env[</highlight><highlight class="stringliteral">&apos;CC_VERSION&apos;</highlight><highlight class="normal">]=(ver[:-2],ver[-2],ver[-1])</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isD(</highlight><highlight class="stringliteral">&apos;__clang__&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf.env[</highlight><highlight class="stringliteral">&apos;CC_VERSION&apos;</highlight><highlight class="normal">]=(k[</highlight><highlight class="stringliteral">&apos;__clang_major__&apos;</highlight><highlight class="normal">],k[</highlight><highlight class="stringliteral">&apos;__clang_minor__&apos;</highlight><highlight class="normal">],k[</highlight><highlight class="stringliteral">&apos;__clang_patchlevel__&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf.env[</highlight><highlight class="stringliteral">&apos;CC_VERSION&apos;</highlight><highlight class="normal">]=(k[</highlight><highlight class="stringliteral">&apos;__GNUC__&apos;</highlight><highlight class="normal">],k[</highlight><highlight class="stringliteral">&apos;__GNUC_MINOR__&apos;</highlight><highlight class="normal">],k[</highlight><highlight class="stringliteral">&apos;__GNUC_PATCHLEVEL__&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>KeyError:</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf.env[</highlight><highlight class="stringliteral">&apos;CC_VERSION&apos;</highlight><highlight class="normal">]=(k[</highlight><highlight class="stringliteral">&apos;__GNUC__&apos;</highlight><highlight class="normal">],k[</highlight><highlight class="stringliteral">&apos;__GNUC_MINOR__&apos;</highlight><highlight class="normal">],0)</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>k</highlight></codeline>
<codeline lineno="657"><highlight class="normal">@conf</highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1c__config_1aa104c14551a53eba46cdf5029fa4fe7c" kindref="member">get_xlc_version</ref>(conf,cc):</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/>cmd=cc+[</highlight><highlight class="stringliteral">&apos;-qversion&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out,err=conf.cmd_and_log(cmd,output=0)</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/><ref refid="classwaflib_1_1_errors_1_1_waf_error" kindref="compound">Errors.WafError</ref>:</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf.fatal(</highlight><highlight class="stringliteral">&apos;Could<sp/>not<sp/>find<sp/>xlc<sp/>%r&apos;</highlight><highlight class="normal">%cmd)</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>v<sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>(</highlight><highlight class="stringliteral">r&quot;IBM<sp/>XL<sp/>C/C\+\+.*<sp/>V(?P&lt;major&gt;\d*)\.(?P&lt;minor&gt;\d*)&quot;</highlight><highlight class="normal">,):</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>version_re=re.compile(v,re.I).search</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match=version_re(out<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>err)</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>match:</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k=match.groupdict()</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf.env[</highlight><highlight class="stringliteral">&apos;CC_VERSION&apos;</highlight><highlight class="normal">]=(k[</highlight><highlight class="stringliteral">&apos;major&apos;</highlight><highlight class="normal">],k[</highlight><highlight class="stringliteral">&apos;minor&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf.fatal(</highlight><highlight class="stringliteral">&apos;Could<sp/>not<sp/>determine<sp/>the<sp/>XLC<sp/>version.&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="673"><highlight class="normal">@conf</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1c__config_1ac52ede426d901fc009aee1736e3c972c" kindref="member">get_suncc_version</ref>(conf,cc):</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/>cmd=cc+[</highlight><highlight class="stringliteral">&apos;-V&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out,err=conf.cmd_and_log(cmd,output=0)</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/><ref refid="classwaflib_1_1_errors_1_1_waf_error" kindref="compound">Errors.WafError</ref><sp/>,e:</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>not(hasattr(e,</highlight><highlight class="stringliteral">&apos;returncode&apos;</highlight><highlight class="normal">)</highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>hasattr(e,</highlight><highlight class="stringliteral">&apos;stdout&apos;</highlight><highlight class="normal">)</highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>hasattr(e,</highlight><highlight class="stringliteral">&apos;stderr&apos;</highlight><highlight class="normal">)):</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf.fatal(</highlight><highlight class="stringliteral">&apos;Could<sp/>not<sp/>find<sp/>suncc<sp/>%r&apos;</highlight><highlight class="normal">%cmd)</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out=e.stdout</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err=e.stderr</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>version=(out<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>err)</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/>version=version.split(</highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal">)[0]</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/>version_re=re.compile(</highlight><highlight class="stringliteral">r&apos;cc:\s+sun\s+(c\+\+|c)\s+(?P&lt;major&gt;\d*)\.(?P&lt;minor&gt;\d*)&apos;</highlight><highlight class="normal">,re.I).search</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/>match=version_re(version)</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>match:</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k=match.groupdict()</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf.env[</highlight><highlight class="stringliteral">&apos;CC_VERSION&apos;</highlight><highlight class="normal">]=(k[</highlight><highlight class="stringliteral">&apos;major&apos;</highlight><highlight class="normal">],k[</highlight><highlight class="stringliteral">&apos;minor&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf.fatal(</highlight><highlight class="stringliteral">&apos;Could<sp/>not<sp/>determine<sp/>the<sp/>suncc<sp/>version.&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="692"><highlight class="normal">@conf</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1c__config_1a2346d9d7babb7db31efbb64c1ee38fba" kindref="member">add_as_needed</ref>(self):</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.env.DEST_BINFMT==</highlight><highlight class="stringliteral">&apos;elf&apos;</highlight><highlight class="keywordflow">and</highlight><highlight class="stringliteral">&apos;gcc&apos;</highlight><highlight class="normal"><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>(self.env.CXX_NAME,self.env.CC_NAME):</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.env.append_unique(</highlight><highlight class="stringliteral">&apos;LINKFLAGS&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;--as-needed&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classwaflib_1_1_tools_1_1c__config_1_1cfgtask" kindref="compound">cfgtask</ref>(<ref refid="classwaflib_1_1_task_1_1_task_base" kindref="compound">Task.TaskBase</ref>):</highlight></codeline>
<codeline lineno="697" refid="classwaflib_1_1_tools_1_1c__config_1_1cfgtask_1aecf986e3bdcfc517a0cd9e4b776d8366" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classwaflib_1_1_tools_1_1c__config_1_1cfgtask_1aecf986e3bdcfc517a0cd9e4b776d8366" kindref="member">display</ref>(self):</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="699" refid="classwaflib_1_1_tools_1_1c__config_1_1cfgtask_1af809af735ae4d53f098dff58980dff43" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classwaflib_1_1_tools_1_1c__config_1_1cfgtask_1af809af735ae4d53f098dff58980dff43" kindref="member">runnable_status</ref>(self):</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Task.RUN_ME</highlight></codeline>
<codeline lineno="701" refid="classwaflib_1_1_tools_1_1c__config_1_1cfgtask_1a97e3028401d435571c7ea130eaff5162" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classwaflib_1_1_tools_1_1c__config_1_1cfgtask_1a97e3028401d435571c7ea130eaff5162" kindref="member">uid</ref>(self):</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Utils.SIG_NIL</highlight></codeline>
<codeline lineno="703" refid="classwaflib_1_1_tools_1_1c__config_1_1cfgtask_1a5621ce914bfed0045cc99f93cf7381af" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classwaflib_1_1_tools_1_1c__config_1_1cfgtask_1a5621ce914bfed0045cc99f93cf7381af" kindref="member">run</ref>(self):</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conf=self.conf</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bld=<ref refid="classwaflib_1_1_build_1_1_build_context" kindref="compound">Build.BuildContext</ref>(top_dir=conf.srcnode.abspath(),out_dir=conf.bldnode.abspath())</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bld.env=conf.env</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bld.init_dirs()</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bld.in_msg=1</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bld.logger=self.logger</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bld.check(**self.args)</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>Exception:</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1</highlight></codeline>
<codeline lineno="714"><highlight class="normal">@conf</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacewaflib_1_1_tools_1_1c__config_1a2fa8b1e700557368498338d9c4821f37" kindref="member">multicheck</ref>(self,*k,**kw):</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/>self.start_msg(kw.get(</highlight><highlight class="stringliteral">&apos;msg&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;Executing<sp/>%d<sp/>configuration<sp/>tests&apos;</highlight><highlight class="normal">%len(k)))</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">par(object):</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classwaflib_1_1_task_1_1_task_base_1add6ae927b00bd1f14d5b87738dd53e70" kindref="member">__init__</ref>(self):</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.keep=</highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.cache_global=Options.cache_global</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.nocache=Options.options.nocache</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.returned_tasks=[]</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.task_sigs={}</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="nyquist_2nyqsrc_2nyx_8c_1a245b65fbced50370bf8a01069e5ee177" kindref="member">total</ref>(self):</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>len(tasks)</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">to_log(self,*k,**kw):</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/>bld=par()</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/>tasks=[]</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>dct<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>k:</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x=cfgtask(bld=bld)</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tasks.append(x)</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x.args=dct</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x.bld=bld</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x.conf=self</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x.args=dct</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x.logger=Logs.make_mem_logger(<ref refid="sndfile__save_8m_1a4b99ff73a8a869319570237b5c57ab03" kindref="member">str</ref>(id(x)),self.logger)</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>():</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">yield</highlight><highlight class="normal"><sp/>tasks</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">yield</highlight><highlight class="normal">[]</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/>p=Runner.Parallel(bld,Options.options.jobs)</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/>p.biter=<ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>()</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/>p.start()</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>tasks:</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x.logger.memhandler.flush()</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>x<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>tasks:</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>x.hasrun!=Task.SUCCESS:</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.end_msg(kw.get(</highlight><highlight class="stringliteral">&apos;errmsg&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;no&apos;</highlight><highlight class="normal">),color=</highlight><highlight class="stringliteral">&apos;YELLOW&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.fatal(kw.get(</highlight><highlight class="stringliteral">&apos;fatalmsg&apos;</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight><highlight class="keywordflow">or</highlight><highlight class="stringliteral">&apos;One<sp/>of<sp/>the<sp/>tests<sp/>has<sp/>failed,<sp/>see<sp/>the<sp/>config.log<sp/>for<sp/>more<sp/>information&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/>self.end_msg(</highlight><highlight class="stringliteral">&apos;ok&apos;</highlight><highlight class="normal">)</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/plugins/eg-fifths.lv2/waflib/Tools/c_config.py"/>
  </compounddef>
</doxygen>
