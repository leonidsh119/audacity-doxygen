<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="jpa__tools_8c" kind="file" language="C++">
    <compoundname>jpa_tools.c</compoundname>
    <includes refid="com__portaudio___port_audio_8h" local="yes">com_portaudio_PortAudio.h</includes>
    <includes refid="portaudio_8h" local="yes">portaudio.h</includes>
    <includes refid="jpa__tools_8h" local="yes">jpa_tools.h</includes>
    <incdepgraph>
      <node id="28729">
        <label>com_portaudio_PortAudio.h</label>
        <link refid="com__portaudio___port_audio_8h"/>
        <childnode refid="28730" relation="include">
        </childnode>
      </node>
      <node id="28731">
        <label>portaudio.h</label>
        <link refid="portaudio_8h"/>
      </node>
      <node id="28730">
        <label>jni.h</label>
      </node>
      <node id="28728">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/bindings/java/c/src/jpa_tools.c</label>
        <link refid="jpa_tools.c"/>
        <childnode refid="28729" relation="include">
        </childnode>
        <childnode refid="28731" relation="include">
        </childnode>
        <childnode refid="28732" relation="include">
        </childnode>
      </node>
      <node id="28732">
        <label>jpa_tools.h</label>
        <link refid="jpa__tools_8h"/>
        <childnode refid="28729" relation="include">
        </childnode>
        <childnode refid="28731" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="jpa__tools_8c_1a4b417c59dd7e276d173d2c0e63ee5f1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jint</type>
        <definition>jint jpa_GetIntField</definition>
        <argsstring>(JNIEnv *env, jclass cls, jobject obj, const char *fieldName)</argsstring>
        <name>jpa_GetIntField</name>
        <param>
          <type>JNIEnv *</type>
          <declname>env</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>cls</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>fieldName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/bindings/java/c/src/jpa_tools.c" line="43" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/bindings/java/c/src/jpa_tools.c" bodystart="43" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="jpa__tools_8c_1aa4179cc1bec196c9568c1d5283d03948" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void jpa_SetIntField</definition>
        <argsstring>(JNIEnv *env, jclass cls, jobject obj, const char *fieldName, jint value)</argsstring>
        <name>jpa_SetIntField</name>
        <param>
          <type>JNIEnv *</type>
          <declname>env</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>cls</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>fieldName</declname>
        </param>
        <param>
          <type>jint</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/bindings/java/c/src/jpa_tools.c" line="58" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/bindings/java/c/src/jpa_tools.c" bodystart="58" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="jpa__tools_8c_1ab80118f18bb28789d5ec62bba1b78155" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jlong</type>
        <definition>jlong jpa_GetLongField</definition>
        <argsstring>(JNIEnv *env, jclass cls, jobject obj, const char *fieldName)</argsstring>
        <name>jpa_GetLongField</name>
        <param>
          <type>JNIEnv *</type>
          <declname>env</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>cls</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>fieldName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/bindings/java/c/src/jpa_tools.c" line="72" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/bindings/java/c/src/jpa_tools.c" bodystart="72" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="jpa__tools_8c_1a6da709dd09a0e2771cfcaead671aab1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void jpa_SetLongField</definition>
        <argsstring>(JNIEnv *env, jclass cls, jobject obj, const char *fieldName, jlong value)</argsstring>
        <name>jpa_SetLongField</name>
        <param>
          <type>JNIEnv *</type>
          <declname>env</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>cls</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>fieldName</declname>
        </param>
        <param>
          <type>jlong</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/bindings/java/c/src/jpa_tools.c" line="87" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/bindings/java/c/src/jpa_tools.c" bodystart="87" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="jpa__tools_8c_1a77d439f9d4194416d34d093ac15c855c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void jpa_SetDoubleField</definition>
        <argsstring>(JNIEnv *env, jclass cls, jobject obj, const char *fieldName, jdouble value)</argsstring>
        <name>jpa_SetDoubleField</name>
        <param>
          <type>JNIEnv *</type>
          <declname>env</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>cls</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>fieldName</declname>
        </param>
        <param>
          <type>jdouble</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/bindings/java/c/src/jpa_tools.c" line="102" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/bindings/java/c/src/jpa_tools.c" bodystart="102" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="jpa__tools_8c_1a5b398a9dd84d613d188491fc584f5994" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jdouble</type>
        <definition>jdouble jpa_GetDoubleField</definition>
        <argsstring>(JNIEnv *env, jclass cls, jobject obj, const char *fieldName)</argsstring>
        <name>jpa_GetDoubleField</name>
        <param>
          <type>JNIEnv *</type>
          <declname>env</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>cls</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>fieldName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/bindings/java/c/src/jpa_tools.c" line="117" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/bindings/java/c/src/jpa_tools.c" bodystart="117" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="jpa__tools_8c_1a42f94e22c6455623dd45ab5f9dced92b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void jpa_SetStringField</definition>
        <argsstring>(JNIEnv *env, jclass cls, jobject obj, const char *fieldName, const char *value)</argsstring>
        <name>jpa_SetStringField</name>
        <param>
          <type>JNIEnv *</type>
          <declname>env</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>cls</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>fieldName</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/bindings/java/c/src/jpa_tools.c" line="132" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/bindings/java/c/src/jpa_tools.c" bodystart="132" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="jpa__tools_8c_1a21a689b864c7462bf1dfcbc4bb9af791" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_pa_stream_parameters" kindref="compound">PaStreamParameters</ref> *</type>
        <definition>PaStreamParameters* jpa_FillStreamParameters</definition>
        <argsstring>(JNIEnv *env, jobject jstreamParam, PaStreamParameters *myParams)</argsstring>
        <name>jpa_FillStreamParameters</name>
        <param>
          <type>JNIEnv *</type>
          <declname>env</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jstreamParam</declname>
        </param>
        <param>
          <type><ref refid="struct_pa_stream_parameters" kindref="compound">PaStreamParameters</ref> *</type>
          <declname>myParams</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/bindings/java/c/src/jpa_tools.c" line="154" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/bindings/java/c/src/jpa_tools.c" bodystart="154" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="jpa__tools_8c_1a5acce41ca8a1b66025f0b4d20c3b040c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jint</type>
        <definition>jint jpa_ThrowError</definition>
        <argsstring>(JNIEnv *env, const char *message)</argsstring>
        <name>jpa_ThrowError</name>
        <param>
          <type>JNIEnv *</type>
          <declname>env</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/bindings/java/c/src/jpa_tools.c" line="172" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/bindings/java/c/src/jpa_tools.c" bodystart="172" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="jpa__tools_8c_1a6ddd698047fe5a3d597faa748a7ef09d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>jint</type>
        <definition>jint jpa_CheckError</definition>
        <argsstring>(JNIEnv *env, PaError err)</argsstring>
        <name>jpa_CheckError</name>
        <param>
          <type>JNIEnv *</type>
          <declname>env</declname>
        </param>
        <param>
          <type><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref></type>
          <declname>err</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/bindings/java/c/src/jpa_tools.c" line="179" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/bindings/java/c/src/jpa_tools.c" bodystart="179" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="jpa__tools_8c_1a039bb3238515e3a1139e94b5bcfe3606" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portaudio_8h_1a19874734f89958fccf86785490d53b4c" kindref="member">PaStream</ref> *</type>
        <definition>PaStream* jpa_GetStreamPointer</definition>
        <argsstring>(JNIEnv *env, jobject blockingStream)</argsstring>
        <name>jpa_GetStreamPointer</name>
        <param>
          <type>JNIEnv *</type>
          <declname>env</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>blockingStream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/bindings/java/c/src/jpa_tools.c" line="204" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/bindings/java/c/src/jpa_tools.c" bodystart="204" bodyend="208"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Portable<sp/>Audio<sp/>I/O<sp/>Library</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Java<sp/>Binding<sp/>for<sp/>PortAudio</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Based<sp/>on<sp/>the<sp/>Open<sp/>Source<sp/>API<sp/>proposed<sp/>by<sp/>Ross<sp/>Bencina</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2008<sp/>Ross<sp/>Bencina</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>The<sp/>text<sp/>above<sp/>constitutes<sp/>the<sp/>entire<sp/>PortAudio<sp/>license;<sp/>however,<sp/></highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>the<sp/>PortAudio<sp/>community<sp/>also<sp/>makes<sp/>the<sp/>following<sp/>non-binding<sp/>requests:</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>Any<sp/>person<sp/>wishing<sp/>to<sp/>distribute<sp/>modifications<sp/>to<sp/>the<sp/>Software<sp/>is</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/>requested<sp/>to<sp/>send<sp/>the<sp/>modifications<sp/>to<sp/>the<sp/>original<sp/>developer<sp/>so<sp/>that</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>they<sp/>can<sp/>be<sp/>incorporated<sp/>into<sp/>the<sp/>canonical<sp/>version.<sp/>It<sp/>is<sp/>also<sp/></highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/>requested<sp/>that<sp/>these<sp/>non-binding<sp/>requests<sp/>be<sp/>included<sp/>along<sp/>with<sp/>the<sp/></highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/>license<sp/>above.</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="com__portaudio___port_audio_8h" kindref="compound">com_portaudio_PortAudio.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="portaudio_8h" kindref="compound">portaudio.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="jpa__tools_8h" kindref="compound">jpa_tools.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="jpa__tools_8h_1a4b417c59dd7e276d173d2c0e63ee5f1b" refkind="member"><highlight class="normal">jint<sp/><ref refid="jpa__tools_8c_1a4b417c59dd7e276d173d2c0e63ee5f1b" kindref="member">jpa_GetIntField</ref>(<sp/>JNIEnv<sp/>*env,<sp/>jclass<sp/>cls,<sp/>jobject<sp/>obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fieldName<sp/>)</highlight></codeline>
<codeline lineno="44"><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Look<sp/>for<sp/>the<sp/>instance<sp/>field<sp/>maxInputChannels<sp/>in<sp/>cls<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>jfieldID<sp/>fid<sp/>=<sp/>(*env)-&gt;GetFieldID(env,<sp/>cls,<sp/>fieldName,<sp/></highlight><highlight class="stringliteral">&quot;I&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fid<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="jpa__tools_8c_1a5acce41ca8a1b66025f0b4d20c3b040c" kindref="member">jpa_ThrowError</ref>(<sp/>env,<sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>find<sp/>integer<sp/>JNI<sp/>field.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*env)-&gt;GetIntField(env,<sp/>obj,<sp/>fid<sp/>);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="jpa__tools_8h_1aa4179cc1bec196c9568c1d5283d03948" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="jpa__tools_8c_1aa4179cc1bec196c9568c1d5283d03948" kindref="member">jpa_SetIntField</ref>(<sp/>JNIEnv<sp/>*env,<sp/>jclass<sp/>cls,<sp/>jobject<sp/>obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fieldName,<sp/>jint<sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref><sp/>)</highlight></codeline>
<codeline lineno="59"><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Look<sp/>for<sp/>the<sp/>instance<sp/>field<sp/>maxInputChannels<sp/>in<sp/>cls<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>jfieldID<sp/>fid<sp/>=<sp/>(*env)-&gt;GetFieldID(env,<sp/>cls,<sp/>fieldName,<sp/></highlight><highlight class="stringliteral">&quot;I&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fid<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="jpa__tools_8c_1a5acce41ca8a1b66025f0b4d20c3b040c" kindref="member">jpa_ThrowError</ref>(<sp/>env,<sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>find<sp/>integer<sp/>JNI<sp/>field.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*env)-&gt;SetIntField(env,<sp/>obj,<sp/>fid,<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="jpa__tools_8h_1ab80118f18bb28789d5ec62bba1b78155" refkind="member"><highlight class="normal">jlong<sp/><ref refid="jpa__tools_8c_1ab80118f18bb28789d5ec62bba1b78155" kindref="member">jpa_GetLongField</ref>(<sp/>JNIEnv<sp/>*env,<sp/>jclass<sp/>cls,<sp/>jobject<sp/>obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fieldName<sp/>)</highlight></codeline>
<codeline lineno="73"><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Look<sp/>for<sp/>the<sp/>instance<sp/>field<sp/>maxInputChannels<sp/>in<sp/>cls<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>jfieldID<sp/>fid<sp/>=<sp/>(*env)-&gt;GetFieldID(env,<sp/>cls,<sp/>fieldName,<sp/></highlight><highlight class="stringliteral">&quot;J&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fid<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="jpa__tools_8c_1a5acce41ca8a1b66025f0b4d20c3b040c" kindref="member">jpa_ThrowError</ref>(<sp/>env,<sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>find<sp/>long<sp/>JNI<sp/>field.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0L;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*env)-&gt;GetLongField(env,<sp/>obj,<sp/>fid<sp/>);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="jpa__tools_8h_1a6da709dd09a0e2771cfcaead671aab1f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="jpa__tools_8c_1a6da709dd09a0e2771cfcaead671aab1f" kindref="member">jpa_SetLongField</ref>(<sp/>JNIEnv<sp/>*env,<sp/>jclass<sp/>cls,<sp/>jobject<sp/>obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fieldName,<sp/>jlong<sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref><sp/>)</highlight></codeline>
<codeline lineno="88"><highlight class="normal">{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Look<sp/>for<sp/>the<sp/>instance<sp/>field<sp/>maxInputChannels<sp/>in<sp/>cls<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>jfieldID<sp/>fid<sp/>=<sp/>(*env)-&gt;GetFieldID(env,<sp/>cls,<sp/>fieldName,<sp/></highlight><highlight class="stringliteral">&quot;J&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fid<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="jpa__tools_8c_1a5acce41ca8a1b66025f0b4d20c3b040c" kindref="member">jpa_ThrowError</ref>(<sp/>env,<sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>find<sp/>long<sp/>JNI<sp/>field.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*env)-&gt;SetLongField(env,<sp/>obj,<sp/>fid,<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="jpa__tools_8h_1a77d439f9d4194416d34d093ac15c855c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="jpa__tools_8c_1a77d439f9d4194416d34d093ac15c855c" kindref="member">jpa_SetDoubleField</ref>(<sp/>JNIEnv<sp/>*env,<sp/>jclass<sp/>cls,<sp/>jobject<sp/>obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fieldName,<sp/>jdouble<sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref><sp/>)</highlight></codeline>
<codeline lineno="103"><highlight class="normal">{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Look<sp/>for<sp/>the<sp/>instance<sp/>field<sp/>maxInputChannels<sp/>in<sp/>cls<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>jfieldID<sp/>fid<sp/>=<sp/>(*env)-&gt;GetFieldID(env,<sp/>cls,<sp/>fieldName,<sp/></highlight><highlight class="stringliteral">&quot;D&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fid<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="jpa__tools_8c_1a5acce41ca8a1b66025f0b4d20c3b040c" kindref="member">jpa_ThrowError</ref>(<sp/>env,<sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>find<sp/>double<sp/>JNI<sp/>field.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*env)-&gt;SetDoubleField(env,<sp/>obj,<sp/>fid,<sp/>value<sp/>);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="jpa__tools_8h_1a5b398a9dd84d613d188491fc584f5994" refkind="member"><highlight class="normal">jdouble<sp/><ref refid="jpa__tools_8c_1a5b398a9dd84d613d188491fc584f5994" kindref="member">jpa_GetDoubleField</ref>(<sp/>JNIEnv<sp/>*env,<sp/>jclass<sp/>cls,<sp/>jobject<sp/>obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fieldName<sp/>)</highlight></codeline>
<codeline lineno="118"><highlight class="normal">{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Look<sp/>for<sp/>the<sp/>instance<sp/>field<sp/>maxInputChannels<sp/>in<sp/>cls<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>jfieldID<sp/>fid<sp/>=<sp/>(*env)-&gt;GetFieldID(env,<sp/>cls,<sp/>fieldName,<sp/></highlight><highlight class="stringliteral">&quot;D&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fid<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="jpa__tools_8c_1a5acce41ca8a1b66025f0b4d20c3b040c" kindref="member">jpa_ThrowError</ref>(<sp/>env,<sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>find<sp/>double<sp/>JNI<sp/>field.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*env)-&gt;GetDoubleField(env,<sp/>obj,<sp/>fid<sp/>);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="jpa__tools_8h_1a42f94e22c6455623dd45ab5f9dced92b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="jpa__tools_8c_1a42f94e22c6455623dd45ab5f9dced92b" kindref="member">jpa_SetStringField</ref>(<sp/>JNIEnv<sp/>*env,<sp/>jclass<sp/>cls,<sp/>jobject<sp/>obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fieldName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref><sp/>)</highlight></codeline>
<codeline lineno="133"><highlight class="normal">{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Look<sp/>for<sp/>the<sp/>instance<sp/>field<sp/>maxInputChannels<sp/>in<sp/>cls<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>jfieldID<sp/>fid<sp/>=<sp/>(*env)-&gt;GetFieldID(env,<sp/>cls,<sp/>fieldName,<sp/></highlight><highlight class="stringliteral">&quot;Ljava/lang/String;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fid<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="jpa__tools_8c_1a5acce41ca8a1b66025f0b4d20c3b040c" kindref="member">jpa_ThrowError</ref>(<sp/>env,<sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>find<sp/>String<sp/>JNI<sp/>field.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jstring<sp/>jstr<sp/>=<sp/>(*env)-&gt;NewStringUTF(env,<sp/>value);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(jstr<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="jpa__tools_8c_1a5acce41ca8a1b66025f0b4d20c3b040c" kindref="member">jpa_ThrowError</ref>(<sp/>env,<sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>create<sp/>new<sp/>String.&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*env)-&gt;SetObjectField(env,<sp/>obj,<sp/>fid,<sp/>jstr<sp/>);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="jpa__tools_8h_1a21a689b864c7462bf1dfcbc4bb9af791" refkind="member"><highlight class="normal"><ref refid="struct_pa_stream_parameters" kindref="compound">PaStreamParameters</ref><sp/>*<ref refid="jpa__tools_8c_1a21a689b864c7462bf1dfcbc4bb9af791" kindref="member">jpa_FillStreamParameters</ref>(<sp/>JNIEnv<sp/>*env,<sp/>jobject<sp/>jstreamParam,<sp/><ref refid="struct_pa_stream_parameters" kindref="compound">PaStreamParameters</ref><sp/>*myParams<sp/>)</highlight></codeline>
<codeline lineno="155"><highlight class="normal">{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>jclass<sp/>cls;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>jstreamParam<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/></highlight><highlight class="comment">//<sp/>OK,<sp/>not<sp/>an<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>cls<sp/>=<sp/>(*env)-&gt;GetObjectClass(env,<sp/>jstreamParam);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>myParams-&gt;<ref refid="struct_pa_stream_parameters_1a861ff361da71fc2572dd356c9c9878ca" kindref="member">channelCount</ref><sp/>=<sp/><ref refid="jpa__tools_8c_1a4b417c59dd7e276d173d2c0e63ee5f1b" kindref="member">jpa_GetIntField</ref>(<sp/>env,<sp/>cls,<sp/>jstreamParam,<sp/></highlight><highlight class="stringliteral">&quot;channelCount&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>myParams-&gt;<ref refid="struct_pa_stream_parameters_1aebaf648b4d11dd1252a747b76b8da084" kindref="member">device</ref><sp/>=<sp/><ref refid="jpa__tools_8c_1a4b417c59dd7e276d173d2c0e63ee5f1b" kindref="member">jpa_GetIntField</ref>(<sp/>env,<sp/>cls,<sp/>jstreamParam,<sp/></highlight><highlight class="stringliteral">&quot;device&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>myParams-&gt;<ref refid="struct_pa_stream_parameters_1ad8d2d3063757b812f9e5f8709f41052b" kindref="member">sampleFormat</ref><sp/>=<sp/><ref refid="jpa__tools_8c_1a4b417c59dd7e276d173d2c0e63ee5f1b" kindref="member">jpa_GetIntField</ref>(<sp/>env,<sp/>cls,<sp/>jstreamParam,<sp/></highlight><highlight class="stringliteral">&quot;sampleFormat&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>myParams-&gt;<ref refid="struct_pa_stream_parameters_1aa1e80ac0551162fd091db8936ccbe9a0" kindref="member">suggestedLatency</ref><sp/>=<sp/><ref refid="jpa__tools_8c_1a5b398a9dd84d613d188491fc584f5994" kindref="member">jpa_GetDoubleField</ref>(<sp/>env,<sp/>cls,<sp/>jstreamParam,<sp/></highlight><highlight class="stringliteral">&quot;suggestedLatency&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>myParams-&gt;<ref refid="struct_pa_stream_parameters_1aff01b9fa0710ad1654471e97665c06a9" kindref="member">hostApiSpecificStreamInfo</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>myParams;</highlight></codeline>
<codeline lineno="169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Create<sp/>an<sp/>exception<sp/>that<sp/>will<sp/>be<sp/>thrown<sp/>when<sp/>we<sp/>return<sp/>from<sp/>the<sp/>JNI<sp/>call.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172" refid="jpa__tools_8h_1a5acce41ca8a1b66025f0b4d20c3b040c" refkind="member"><highlight class="normal">jint<sp/><ref refid="jpa__tools_8c_1a5acce41ca8a1b66025f0b4d20c3b040c" kindref="member">jpa_ThrowError</ref>(<sp/>JNIEnv<sp/>*env,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*message<sp/>)</highlight></codeline>
<codeline lineno="173"><highlight class="normal">{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*env)-&gt;ThrowNew(env,<sp/>(*env)-&gt;FindClass(<sp/>env,<sp/></highlight><highlight class="stringliteral">&quot;java/lang/RuntimeException&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>message<sp/>);</highlight></codeline>
<codeline lineno="176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Throw<sp/>an<sp/>exception<sp/>on<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179" refid="jpa__tools_8h_1a6ddd698047fe5a3d597faa748a7ef09d" refkind="member"><highlight class="normal">jint<sp/><ref refid="jpa__tools_8c_1a6ddd698047fe5a3d597faa748a7ef09d" kindref="member">jpa_CheckError</ref>(<sp/>JNIEnv<sp/>*env,<sp/><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/>err<sp/>)</highlight></codeline>
<codeline lineno="180"><highlight class="normal">{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>err<sp/>==<sp/>-1<sp/>)</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="jpa__tools_8c_1a5acce41ca8a1b66025f0b4d20c3b040c" kindref="member">jpa_ThrowError</ref>(<sp/>env,<sp/></highlight><highlight class="stringliteral">&quot;-1,<sp/>possibly<sp/>no<sp/>available<sp/>default<sp/>device&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>err<sp/>&lt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>err<sp/>==<sp/><ref refid="portaudio_8h_1a2e45bf8b5145f131a91c128af2bdaec7a47726071f5dccc656d5e3ff20bbfc5a0" kindref="member">paUnanticipatedHostError</ref><sp/>)</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_pa_host_error_info" kindref="compound">PaHostErrorInfo</ref><sp/>*hostErrorInfo<sp/>=<sp/><ref refid="portaudio_8h_1aad573f208b60577f21d2777a7c5054e0" kindref="member">Pa_GetLastHostErrorInfo</ref>();</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="jpa__tools_8c_1a5acce41ca8a1b66025f0b4d20c3b040c" kindref="member">jpa_ThrowError</ref>(<sp/>env,<sp/>hostErrorInfo-&gt;<ref refid="struct_pa_host_error_info_1aa40a7ed0c73b85b39563d80f7877876c" kindref="member">errorText</ref><sp/>);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="jpa__tools_8c_1a5acce41ca8a1b66025f0b4d20c3b040c" kindref="member">jpa_ThrowError</ref>(<sp/>env,<sp/><ref refid="portaudio_8h_1ae606855a611cf29c7d2d7421df5e3b5d" kindref="member">Pa_GetErrorText</ref>(<sp/>err<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>stream<sp/>pointer<sp/>from<sp/>a<sp/>BlockingStream<sp/>long<sp/>field.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204" refid="jpa__tools_8h_1a039bb3238515e3a1139e94b5bcfe3606" refkind="member"><highlight class="normal"><ref refid="portaudio_8h_1a19874734f89958fccf86785490d53b4c" kindref="member">PaStream</ref><sp/>*<ref refid="jpa__tools_8c_1a039bb3238515e3a1139e94b5bcfe3606" kindref="member">jpa_GetStreamPointer</ref>(<sp/>JNIEnv<sp/>*env,<sp/>jobject<sp/>blockingStream<sp/>)</highlight></codeline>
<codeline lineno="205"><highlight class="normal">{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>jclass<sp/>cls<sp/>=<sp/>(*env)-&gt;GetObjectClass(env,<sp/>blockingStream);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="portaudio_8h_1a19874734f89958fccf86785490d53b4c" kindref="member">PaStream</ref><sp/>*)<sp/><ref refid="jpa__tools_8c_1ab80118f18bb28789d5ec62bba1b78155" kindref="member">jpa_GetLongField</ref>(<sp/>env,<sp/>cls,<sp/>blockingStream,<sp/></highlight><highlight class="stringliteral">&quot;nativeStream&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="208"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/bindings/java/c/src/jpa_tools.c"/>
  </compounddef>
</doxygen>
