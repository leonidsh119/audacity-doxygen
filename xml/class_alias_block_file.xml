<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_alias_block_file" kind="class" language="C++" prot="public">
    <compoundname>AliasBlockFile</compoundname>
    <basecompoundref refid="class_block_file" prot="public" virt="non-virtual">BlockFile</basecompoundref>
    <derivedcompoundref refid="class_p_c_m_alias_block_file" prot="public" virt="non-virtual">PCMAliasBlockFile</derivedcompoundref>
    <includes refid="_block_file_8h" local="no">BlockFile.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_alias_block_file_1a8c098b2f0b168462fcaa45a6dad4682c" prot="protected" static="no" mutable="no">
        <type>wxFileName</type>
        <definition>wxFileName AliasBlockFile::mAliasedFileName</definition>
        <argsstring></argsstring>
        <name>mAliasedFileName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" line="219" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" bodystart="219" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_alias_block_file_1a25ce7e8f04c9bc5300395c4eb4ebd5f4" prot="protected" static="no" mutable="no">
        <type><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref></type>
        <definition>sampleCount AliasBlockFile::mAliasStart</definition>
        <argsstring></argsstring>
        <name>mAliasStart</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" line="220" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" bodystart="220" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_alias_block_file_1afe28fdf0e410949f7957c8bab52358df" prot="protected" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int AliasBlockFile::mAliasChannel</definition>
        <argsstring></argsstring>
        <name>mAliasChannel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" line="221" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" bodystart="221" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_alias_block_file_1a5c0cb39191f74e9941bd614fbd5d9a35" prot="protected" static="no" mutable="no">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool AliasBlockFile::mSilentAliasLog</definition>
        <argsstring></argsstring>
        <name>mSilentAliasLog</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" line="222" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" bodystart="222" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_alias_block_file_1a6cebfd8ef018be265051795e73d871bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>AliasBlockFile::AliasBlockFile</definition>
        <argsstring>(wxFileName baseFileName, wxFileName aliasedFileName, sampleCount aliasStart, sampleCount aliasLen, int aliasChannel)</argsstring>
        <name>AliasBlockFile</name>
        <param>
          <type>wxFileName</type>
          <declname>baseFileName</declname>
        </param>
        <param>
          <type>wxFileName</type>
          <declname>aliasedFileName</declname>
        </param>
        <param>
          <type><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref></type>
          <declname>aliasStart</declname>
        </param>
        <param>
          <type><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref></type>
          <declname>aliasLen</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>aliasChannel</declname>
        </param>
        <briefdescription>
<para>Constructs an <ref refid="class_alias_block_file" kindref="compound">AliasBlockFile</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>Constructs an <ref refid="class_alias_block_file" kindref="compound">AliasBlockFile</ref> based on the given information about the aliased file.</para><para>Note that derived classes /must/ call <ref refid="class_alias_block_file_1a0ffabad5ed7a43d188d56db822a9421a" kindref="member">AliasBlockFile::WriteSummary()</ref> in their constructors for the summary file to be correctly written to disk.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>baseFileName</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the summary file to be written, but without an extension. This constructor will add the appropriate extension before passing it to <ref refid="class_block_file_1a26e78f672ba0d663668b5aa7e7f7902b" kindref="member">BlockFile::BlockFile</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aliasedFileName</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the file where the audio data for this block actually exists. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aliasStart</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the aliased file where this block&apos;s data begins </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aliasLen</parametername>
</parameternamelist>
<parameterdescription>
<para>The length of this block&apos;s data in the aliased file. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aliasChannel</parametername>
</parameternamelist>
<parameterdescription>
<para>The channel where this block&apos;s data is located in the aliased file </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" line="188" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.cpp" bodystart="528" bodyend="538"/>
      </memberdef>
      <memberdef kind="function" id="class_alias_block_file_1a1951a2471e5e73492e9cbbf12a97b13d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>AliasBlockFile::AliasBlockFile</definition>
        <argsstring>(wxFileName existingSummaryFileName, wxFileName aliasedFileName, sampleCount aliasStart, sampleCount aliasLen, int aliasChannel, float min, float max, float RMS)</argsstring>
        <name>AliasBlockFile</name>
        <param>
          <type>wxFileName</type>
          <declname>existingSummaryFileName</declname>
        </param>
        <param>
          <type>wxFileName</type>
          <declname>aliasedFileName</declname>
        </param>
        <param>
          <type><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref></type>
          <declname>aliasStart</declname>
        </param>
        <param>
          <type><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref></type>
          <declname>aliasLen</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>aliasChannel</declname>
        </param>
        <param>
          <type>float</type>
          <declname>min</declname>
        </param>
        <param>
          <type>float</type>
          <declname>max</declname>
        </param>
        <param>
          <type>float</type>
          <declname>RMS</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" line="191" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.cpp" bodystart="540" bodyend="555"/>
      </memberdef>
      <memberdef kind="function" id="class_alias_block_file_1a1859a5a0ff7873450ecd770e1703cdbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>AliasBlockFile::~AliasBlockFile</definition>
        <argsstring>()</argsstring>
        <name>~AliasBlockFile</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" line="195" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.cpp" bodystart="589" bodyend="591"/>
      </memberdef>
      <memberdef kind="function" id="class_alias_block_file_1afca79ab159bebe787ecbf025fe645249" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>wxLongLong</type>
        <definition>wxLongLong AliasBlockFile::GetSpaceUsage</definition>
        <argsstring>() override</argsstring>
        <name>GetSpaceUsage</name>
        <reimplements refid="class_block_file_1a8f1eb8b4aecfb5574b9a0054eb431546">GetSpaceUsage</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" line="199" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.cpp" bodystart="638" bodyend="642"/>
      </memberdef>
      <memberdef kind="function" id="class_alias_block_file_1afd0f0ac721f7fe3560f1eb20b2adbb23" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void AliasBlockFile::SilenceAliasLog</definition>
        <argsstring>()</argsstring>
        <name>SilenceAliasLog</name>
        <briefdescription>
<para>as SilentLog (which would affect Summary data access), but </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" line="203" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" bodystart="203" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="class_alias_block_file_1a84764ec30dd1b9f1f902a1109a87d71b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>wxFileName</type>
        <definition>wxFileName AliasBlockFile::GetAliasedFileName</definition>
        <argsstring>()</argsstring>
        <name>GetAliasedFileName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" line="208" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" bodystart="208" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="class_alias_block_file_1a31bb494e5380ccbcb21fb32b55d81370" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void AliasBlockFile::ChangeAliasedFileName</definition>
        <argsstring>(wxFileName newAliasedFile)</argsstring>
        <name>ChangeAliasedFileName</name>
        <param>
          <type>wxFileName</type>
          <declname>newAliasedFile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Modify this block to point at a different file. This is generally looked down on, but it is necessary in one case: see <ref refid="class_dir_manager_1a55d678c4bb441f283408608c1b8e91a7" kindref="member">DirManager::EnsureSafeFilename()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" line="209" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.cpp" bodystart="633" bodyend="636"/>
      </memberdef>
      <memberdef kind="function" id="class_alias_block_file_1a3a5b00b376961bc254bb421e2e7de53d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool AliasBlockFile::IsAlias</definition>
        <argsstring>() override</argsstring>
        <name>IsAlias</name>
        <reimplements refid="class_block_file_1a9969d478c861eae0bdb98b71176906cf">IsAlias</reimplements>
        <briefdescription>
<para>Returns TRUE if this block references another disk file. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" line="210" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" bodystart="210" bodyend="210"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_alias_block_file_1a0ffabad5ed7a43d188d56db822a9421a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void AliasBlockFile::WriteSummary</definition>
        <argsstring>()</argsstring>
        <name>WriteSummary</name>
        <reimplementedby refid="class_o_d_p_c_m_alias_block_file_1acb8de98382b5fa4932c431d33adbd8f9">WriteSummary</reimplementedby>
        <briefdescription>
<para>Write the summary to disk, using the derived <ref refid="class_block_file_1ad1355b9c8421a6f1a6b6d8cf3d3f073e" kindref="member">ReadData()</ref> to get the data. </para>        </briefdescription>
        <detaileddescription>
<para>Write the summary to disk. Derived classes must call this method from their constructors for the summary to be correctly written. It uses the derived class&apos;s <ref refid="class_block_file_1ad1355b9c8421a6f1a6b6d8cf3d3f073e" kindref="member">ReadData()</ref> to retrieve the data to summarize. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" line="215" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.cpp" bodystart="560" bodyend="587"/>
      </memberdef>
      <memberdef kind="function" id="class_alias_block_file_1a7f30a5da5964e3dfbd35657f3bacbf9b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool AliasBlockFile::ReadSummary</definition>
        <argsstring>(void *data) override</argsstring>
        <name>ReadSummary</name>
        <reimplements refid="class_block_file_1ab9edd6f8cd08f7075b5c878c9a4ea121">ReadSummary</reimplements>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Read the summary into a buffer. </para>        </briefdescription>
        <detaileddescription>
<para>Read the summary of this alias block from disk. Since the audio data is elsewhere, this consists of reading the entire summary file.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>*data</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer where the summary data will be stored. It must be at least mSummaryInfo.totalSummaryBytes long. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" line="217" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.cpp" bodystart="598" bodyend="628"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A <ref refid="class_block_file" kindref="compound">BlockFile</ref> that refers to data in an existing file. </para>    </briefdescription>
    <detaileddescription>
<para>An <ref refid="class_alias_block_file" kindref="compound">AliasBlockFile</ref> references an existing disk file for its storage instead of copying the data. It still writes a file to disk, but only stores summary data in it.</para><para>This is a common base class for all alias block files. It handles reading and writing summary data, leaving very little for derived classes to need to implement. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="713">
        <label>ODPCMAliasBlockFile</label>
        <link refid="class_o_d_p_c_m_alias_block_file"/>
        <childnode refid="711" relation="public-inheritance">
        </childnode>
      </node>
      <node id="712">
        <label>LegacyAliasBlockFile</label>
        <link refid="class_legacy_alias_block_file"/>
        <childnode refid="711" relation="public-inheritance">
        </childnode>
      </node>
      <node id="711">
        <label>PCMAliasBlockFile</label>
        <link refid="class_p_c_m_alias_block_file"/>
        <childnode refid="709" relation="public-inheritance">
        </childnode>
      </node>
      <node id="710">
        <label>BlockFile</label>
        <link refid="class_block_file"/>
      </node>
      <node id="709">
        <label>AliasBlockFile</label>
        <link refid="class_alias_block_file"/>
        <childnode refid="710" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="716">
        <label>SummaryInfo</label>
        <link refid="class_summary_info"/>
      </node>
      <node id="715">
        <label>BlockFile</label>
        <link refid="class_block_file"/>
        <childnode refid="716" relation="usage">
          <edgelabel>mSummaryInfo</edgelabel>
        </childnode>
      </node>
      <node id="714">
        <label>AliasBlockFile</label>
        <link refid="class_alias_block_file"/>
        <childnode refid="715" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" line="182" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" bodystart="181" bodyend="223"/>
    <listofallmembers>
      <member refid="class_alias_block_file_1a6cebfd8ef018be265051795e73d871bd" prot="public" virt="non-virtual"><scope>AliasBlockFile</scope><name>AliasBlockFile</name></member>
      <member refid="class_alias_block_file_1a1951a2471e5e73492e9cbbf12a97b13d" prot="public" virt="non-virtual"><scope>AliasBlockFile</scope><name>AliasBlockFile</name></member>
      <member refid="class_block_file_1a26e78f672ba0d663668b5aa7e7f7902b" prot="public" virt="non-virtual"><scope>AliasBlockFile</scope><name>BlockFile</name></member>
      <member refid="class_block_file_1a87b1269de50226600c5f52729117be30" prot="protected" virt="virtual"><scope>AliasBlockFile</scope><name>CalcSummary</name></member>
      <member refid="class_alias_block_file_1a31bb494e5380ccbcb21fb32b55d81370" prot="public" virt="non-virtual"><scope>AliasBlockFile</scope><name>ChangeAliasedFileName</name></member>
      <member refid="class_block_file_1a4eda965a6ab0b7019b3fe1e12c93e969" prot="public" virt="virtual"><scope>AliasBlockFile</scope><name>CloseLock</name></member>
      <member refid="class_block_file_1a8f7cc554062ef6d356eb0ab7f3229df5" prot="public" virt="pure-virtual"><scope>AliasBlockFile</scope><name>Copy</name></member>
      <member refid="class_block_file_1a2850975073dae96a78ac8b8e35ac376d" prot="public" virt="non-virtual"><scope>AliasBlockFile</scope><name>Deinit</name></member>
      <member refid="class_block_file_1aa228bcd50e100ba28031dece974b73a8" prot="public" virt="virtual"><scope>AliasBlockFile</scope><name>FillCache</name></member>
      <member refid="class_block_file_1abb3580667f6451b2ab0d4cc1a45f7a7a" prot="protected" virt="virtual"><scope>AliasBlockFile</scope><name>FixSummary</name></member>
      <member refid="class_alias_block_file_1a84764ec30dd1b9f1f902a1109a87d71b" prot="public" virt="non-virtual"><scope>AliasBlockFile</scope><name>GetAliasedFileName</name></member>
      <member refid="class_block_file_1a07fa90d9e26b0f5c4bc76716aff0fa87" prot="public" virt="virtual"><scope>AliasBlockFile</scope><name>GetFileName</name></member>
      <member refid="class_block_file_1a93fa23bb9606cafba976f2c0b818719c" prot="public" virt="virtual"><scope>AliasBlockFile</scope><name>GetLength</name></member>
      <member refid="class_block_file_1ab69b57d79727454d7cea8d1f204791ba" prot="public" virt="virtual"><scope>AliasBlockFile</scope><name>GetMinMax</name></member>
      <member refid="class_block_file_1abae40b15d56cb0757abfd57ff036634a" prot="public" virt="virtual"><scope>AliasBlockFile</scope><name>GetMinMax</name></member>
      <member refid="class_block_file_1a66f977ae0fc5cf2a58ecc359d8464b98" prot="public" virt="virtual"><scope>AliasBlockFile</scope><name>GetNeedFillCache</name></member>
      <member refid="class_block_file_1aa01d73c1d5f1951e0ff571f498e902c2" prot="public" virt="virtual"><scope>AliasBlockFile</scope><name>GetNeedWriteCacheToDisk</name></member>
      <member refid="class_alias_block_file_1afca79ab159bebe787ecbf025fe645249" prot="public" virt="virtual"><scope>AliasBlockFile</scope><name>GetSpaceUsage</name></member>
      <member refid="class_alias_block_file_1a3a5b00b376961bc254bb421e2e7de53d" prot="public" virt="virtual"><scope>AliasBlockFile</scope><name>IsAlias</name></member>
      <member refid="class_block_file_1a8908840cad2f547172b3a2373f9dd347" prot="public" virt="virtual"><scope>AliasBlockFile</scope><name>IsDataAvailable</name></member>
      <member refid="class_block_file_1a6f4769dbd80bb4a14e7d28fdad672ded" prot="public" virt="virtual"><scope>AliasBlockFile</scope><name>IsLocked</name></member>
      <member refid="class_block_file_1ada91556581464e844478f51762f50a70" prot="public" virt="virtual"><scope>AliasBlockFile</scope><name>IsSummaryAvailable</name></member>
      <member refid="class_block_file_1ac7817525642f53db4350e365971fddcc" prot="public" virt="virtual"><scope>AliasBlockFile</scope><name>IsSummaryBeingComputed</name></member>
      <member refid="class_block_file_1a5380b2450594af576dfd122cad12be1c" prot="public" virt="virtual"><scope>AliasBlockFile</scope><name>Lock</name></member>
      <member refid="class_block_file_1ab3d2edb6eb43083e2126c15b1c160d83" prot="public" virt="virtual"><scope>AliasBlockFile</scope><name>LockRead</name></member>
      <member refid="class_alias_block_file_1afe28fdf0e410949f7957c8bab52358df" prot="protected" virt="non-virtual"><scope>AliasBlockFile</scope><name>mAliasChannel</name></member>
      <member refid="class_alias_block_file_1a8c098b2f0b168462fcaa45a6dad4682c" prot="protected" virt="non-virtual"><scope>AliasBlockFile</scope><name>mAliasedFileName</name></member>
      <member refid="class_alias_block_file_1a25ce7e8f04c9bc5300395c4eb4ebd5f4" prot="protected" virt="non-virtual"><scope>AliasBlockFile</scope><name>mAliasStart</name></member>
      <member refid="class_block_file_1ab4d7e450d154ad4ccee1d0f4a26093f0" prot="protected" virt="non-virtual"><scope>AliasBlockFile</scope><name>mFileName</name></member>
      <member refid="class_block_file_1a732a85cd5906a03310bd23fc91b83d40" prot="protected" virt="non-virtual"><scope>AliasBlockFile</scope><name>mLen</name></member>
      <member refid="class_block_file_1abda14ef73ea31a585b26e289a99ac356" prot="protected" virt="non-virtual"><scope>AliasBlockFile</scope><name>mMax</name></member>
      <member refid="class_block_file_1a733757c3a2c9d2e51beab8acbc86f913" prot="protected" virt="non-virtual"><scope>AliasBlockFile</scope><name>mMin</name></member>
      <member refid="class_block_file_1a9b863f624b2d76a5ec29390cebed698f" prot="protected" virt="non-virtual"><scope>AliasBlockFile</scope><name>mRMS</name></member>
      <member refid="class_alias_block_file_1a5c0cb39191f74e9941bd614fbd5d9a35" prot="protected" virt="non-virtual"><scope>AliasBlockFile</scope><name>mSilentAliasLog</name></member>
      <member refid="class_block_file_1a670ed2ad2e13a94e3fb7c2ae32785811" prot="protected" virt="non-virtual"><scope>AliasBlockFile</scope><name>mSilentLog</name></member>
      <member refid="class_block_file_1a4c81c30a570684d5287ed58acd3da259" prot="protected" virt="non-virtual"><scope>AliasBlockFile</scope><name>mSummaryInfo</name></member>
      <member refid="class_block_file_1a3f7acc98f1761d78cccbd031314a33ea" prot="public" virt="virtual"><scope>AliasBlockFile</scope><name>Read256</name></member>
      <member refid="class_block_file_1acf929dfa98eab1cbd93b7d79394bc141" prot="public" virt="virtual"><scope>AliasBlockFile</scope><name>Read64K</name></member>
      <member refid="class_block_file_1ad1355b9c8421a6f1a6b6d8cf3d3f073e" prot="public" virt="pure-virtual"><scope>AliasBlockFile</scope><name>ReadData</name></member>
      <member refid="class_alias_block_file_1a7f30a5da5964e3dfbd35657f3bacbf9b" prot="protected" virt="virtual"><scope>AliasBlockFile</scope><name>ReadSummary</name></member>
      <member refid="class_block_file_1ab57c263f507f60b0072390d4e876ea57" prot="public" virt="pure-virtual"><scope>AliasBlockFile</scope><name>Recover</name></member>
      <member refid="class_block_file_1a62527189fe371325e23f3802f20282f8" prot="public" virt="pure-virtual"><scope>AliasBlockFile</scope><name>SaveXML</name></member>
      <member refid="class_block_file_1a3d4e44c3aacfcaa78e23c8868e8c3760" prot="public" virt="virtual"><scope>AliasBlockFile</scope><name>SetFileName</name></member>
      <member refid="class_block_file_1a9a6903a5c87598f8dc92041351a271d8" prot="public" virt="virtual"><scope>AliasBlockFile</scope><name>SetLength</name></member>
      <member refid="class_alias_block_file_1afd0f0ac721f7fe3560f1eb20b2adbb23" prot="public" virt="non-virtual"><scope>AliasBlockFile</scope><name>SilenceAliasLog</name></member>
      <member refid="class_block_file_1a8db50090685c558873cddb71ace1d309" prot="public" virt="non-virtual"><scope>AliasBlockFile</scope><name>SilenceLog</name></member>
      <member refid="class_block_file_1addbc143efdfd7f74a7c6beed6023745f" prot="public" virt="virtual"><scope>AliasBlockFile</scope><name>Unlock</name></member>
      <member refid="class_block_file_1aff31d5108eaf81313f3cde9f93704e2d" prot="public" virt="virtual"><scope>AliasBlockFile</scope><name>UnlockRead</name></member>
      <member refid="class_block_file_1a037faa0473e04e4c21a3c96fe274b02f" prot="public" virt="virtual"><scope>AliasBlockFile</scope><name>WriteCacheToDisk</name></member>
      <member refid="class_alias_block_file_1a0ffabad5ed7a43d188d56db822a9421a" prot="protected" virt="virtual"><scope>AliasBlockFile</scope><name>WriteSummary</name></member>
      <member refid="class_alias_block_file_1a1859a5a0ff7873450ecd770e1703cdbf" prot="public" virt="virtual"><scope>AliasBlockFile</scope><name>~AliasBlockFile</name></member>
      <member refid="class_block_file_1ac6dd550c49ac5c86d7e8c13bbedc76e6" prot="public" virt="virtual"><scope>AliasBlockFile</scope><name>~BlockFile</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
