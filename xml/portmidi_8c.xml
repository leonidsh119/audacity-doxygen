<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="portmidi_8c" kind="file" language="C++">
    <compoundname>portmidi.c</compoundname>
    <includes local="yes">stdlib.h</includes>
    <includes local="yes">string.h</includes>
    <includes refid="portmidi_8h" local="yes">portmidi.h</includes>
    <includes refid="porttime_8h" local="yes">porttime.h</includes>
    <includes refid="pmutil_8h" local="yes">pmutil.h</includes>
    <includes refid="pminternal_8h" local="yes">pminternal.h</includes>
    <includes refid="assert_8h" local="no">assert.h</includes>
    <incdepgraph>
      <node id="30851">
        <label>pmutil.h</label>
        <link refid="pmutil_8h"/>
      </node>
      <node id="30849">
        <label>stdint.h</label>
      </node>
      <node id="30846">
        <label>stdlib.h</label>
      </node>
      <node id="30850">
        <label>porttime.h</label>
        <link refid="porttime_8h"/>
        <childnode refid="30849" relation="include">
        </childnode>
      </node>
      <node id="30853">
        <label>assert.h</label>
        <link refid="assert_8h"/>
      </node>
      <node id="30852">
        <label>pminternal.h</label>
        <link refid="pminternal_8h"/>
      </node>
      <node id="30847">
        <label>string.h</label>
      </node>
      <node id="30845">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c</label>
        <link refid="portmidi.c"/>
        <childnode refid="30846" relation="include">
        </childnode>
        <childnode refid="30847" relation="include">
        </childnode>
        <childnode refid="30848" relation="include">
        </childnode>
        <childnode refid="30850" relation="include">
        </childnode>
        <childnode refid="30851" relation="include">
        </childnode>
        <childnode refid="30852" relation="include">
        </childnode>
        <childnode refid="30853" relation="include">
        </childnode>
      </node>
      <node id="30848">
        <label>portmidi.h</label>
        <link refid="portmidi_8h"/>
        <childnode refid="30849" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="portmidi_8c_1afa5e4e295aafd15ab7893344599b3b89" prot="public" static="no">
        <name>MIDI_CLOCK</name>
        <initializer>0xf8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" line="14" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="portmidi_8c_1a6ff6dd452be369b24a8bb05102b2ff76" prot="public" static="no">
        <name>MIDI_ACTIVE</name>
        <initializer>0xfe</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" line="15" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="portmidi_8c_1a1ee2586a063422ec7d18e2abfbafa545" prot="public" static="no">
        <name>MIDI_STATUS_MASK</name>
        <initializer>0x80</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" line="16" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="portmidi_8c_1aa2197f6ca200566c0986e737edd211e4" prot="public" static="no">
        <name>MIDI_SYSEX</name>
        <initializer>0xf0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" line="17" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="portmidi_8c_1a140c8cfa4bbf1a03494abdbd639d49f2" prot="public" static="no">
        <name>MIDI_EOX</name>
        <initializer>0xf7</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" line="18" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="portmidi_8c_1a8233631c85823aa546f932ad8975caa4" prot="public" static="no">
        <name>MIDI_START</name>
        <initializer>0xFA</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" line="19" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="portmidi_8c_1a3af9271d4b1f0d22904a0b055f48cf62" prot="public" static="no">
        <name>MIDI_STOP</name>
        <initializer>0xFC</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" line="20" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="portmidi_8c_1ab24430f0081e27215b0da84dd0ee745c" prot="public" static="no">
        <name>MIDI_CONTINUE</name>
        <initializer>0xFB</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" line="21" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="portmidi_8c_1ab4ef04d3d15cb2ae88364b639dc29834" prot="public" static="no">
        <name>MIDI_F9</name>
        <initializer>0xF9</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" line="22" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="portmidi_8c_1ace178eb4669d53d06c7873596fa27084" prot="public" static="no">
        <name>MIDI_FD</name>
        <initializer>0xFD</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" line="23" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="portmidi_8c_1a02947f30ca62dc332fdeb10c5868323b" prot="public" static="no">
        <name>MIDI_RESET</name>
        <initializer>0xFF</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" line="24" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="portmidi_8c_1acb743a02e36b618a4bd1990671b3325f" prot="public" static="no">
        <name>MIDI_NOTE_ON</name>
        <initializer>0x90</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" line="25" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="portmidi_8c_1a4259def83bd534a786edb4408fec67f0" prot="public" static="no">
        <name>MIDI_NOTE_OFF</name>
        <initializer>0x80</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" line="26" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="portmidi_8c_1ab47c590c8324e5127da43ad0f3e63a26" prot="public" static="no">
        <name>MIDI_CHANNEL_AT</name>
        <initializer>0xD0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" line="27" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="portmidi_8c_1ae11126c99c31285d199b88c12feff9be" prot="public" static="no">
        <name>MIDI_POLY_AT</name>
        <initializer>0xA0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" line="28" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="portmidi_8c_1a8bbe829ae5724352ee1f45f5590e7f84" prot="public" static="no">
        <name>MIDI_PROGRAM</name>
        <initializer>0xC0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" line="29" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="portmidi_8c_1ad618c2530c16b5bdb92ace73f3a1dcb5" prot="public" static="no">
        <name>MIDI_CONTROL</name>
        <initializer>0xB0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" line="30" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="portmidi_8c_1abcc799504e8064679bca03f232223af4" prot="public" static="no">
        <name>MIDI_PITCHBEND</name>
        <initializer>0xE0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" line="31" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="portmidi_8c_1a8e5430a8f1fcdc14fc227b7ab24bf1cf" prot="public" static="no">
        <name>MIDI_MTC</name>
        <initializer>0xF1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" line="32" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="portmidi_8c_1aecd1881207e391fdaad13496b84a8ae7" prot="public" static="no">
        <name>MIDI_SONGPOS</name>
        <initializer>0xF2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" line="33" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="portmidi_8c_1aca755324971f1443459847786a4d4507" prot="public" static="no">
        <name>MIDI_SONGSEL</name>
        <initializer>0xF3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" line="34" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="portmidi_8c_1adf060c9ba94819a8445a9924ea799fd8" prot="public" static="no">
        <name>MIDI_TUNE</name>
        <initializer>0xF6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" line="35" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="portmidi_8c_1a2d48efb2f9e0ad13211a0ab1c66cabef" prot="public" static="no">
        <name>is_empty</name>
        <param><defname>midi</defname></param>
        <initializer>((<ref refid="midiclock_8c_1a55d909f140b116a12ba644132b67031e" kindref="member">midi</ref>)-&gt;tail == (<ref refid="midiclock_8c_1a55d909f140b116a12ba644132b67031e" kindref="member">midi</ref>)-&gt;head)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" line="37" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="portmidi_8c_1a1e3fc08b00e2542c99314d01844afd2c" prot="public" static="no">
        <name>pm_errmsg</name>
        <param><defname>err</defname></param>
        <initializer>err</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" line="80" column="10" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="portmidi_8c_1a366d307d9adc16df4ed72c0c96d56bd0" prot="public" static="no">
        <name>none_abort</name>
        <initializer><ref refid="portmidi_8c_1aeeae549047bfcfbbe3eff9f3857ff77a" kindref="member">pm_fail_fn</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" line="229" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" bodystart="229" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="portmidi_8c_1aee20ca803d94f91361fe009179095c90" prot="public" static="no">
        <name>none_close</name>
        <initializer><ref refid="portmidi_8c_1aeeae549047bfcfbbe3eff9f3857ff77a" kindref="member">pm_fail_fn</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" line="230" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" bodystart="230" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="portmidi_8c_1ad974fe981249f5e84fbf1683b012c9f8" prot="public" static="no">
        <name>BUFLEN</name>
        <initializer>((<ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref>) (<ref refid="portmidi_8h_1a22eb909045c1638449c78e8a6207611b" kindref="member">PM_DEFAULT_SYSEX_BUFFER_SIZE</ref> / sizeof(<ref refid="group__grp__events__filters_1gad8455e4afe978a74c68e345bef99761d" kindref="member">PmMessage</ref>)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" line="596" column="13"/>
      </memberdef>
      <memberdef kind="define" id="portmidi_8c_1a5af1caf64b8661a79e54e850e9dbe191" prot="public" static="no">
        <name>pm_channel_filtered</name>
        <param><defname>status</defname></param>
        <param><defname>mask</defname></param>
        <initializer>((((<ref refid="rfft2d_test_m_l_8m_1a1b5437a866e6f95107b07ba845bc1800" kindref="member">status</ref>) &amp; 0xF0) != 0xF0) &amp;&amp; (!(Pm_Channel((status) &amp; 0x0F) &amp; (mask))))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" line="930" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" bodystart="930" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="portmidi_8c_1a814afeefb4df5b95673e3d43c7a26282" prot="public" static="no">
        <name>pm_realtime_filtered</name>
        <param><defname>status</defname></param>
        <param><defname>filters</defname></param>
        <initializer>((((<ref refid="rfft2d_test_m_l_8m_1a1b5437a866e6f95107b07ba845bc1800" kindref="member">status</ref>) &amp; 0xF0) == 0xF0) &amp;&amp; ((1 &lt;&lt; ((status) &amp; 0xF)) &amp; (filters)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" line="943" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" bodystart="943" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="portmidi_8c_1ac3c153803616975e2fdd1edd45e05398" prot="public" static="no">
        <name>pm_status_filtered</name>
        <param><defname>status</defname></param>
        <param><defname>filters</defname></param>
        <initializer>((1 &lt;&lt; (16 + ((<ref refid="rfft2d_test_m_l_8m_1a1b5437a866e6f95107b07ba845bc1800" kindref="member">status</ref>) &gt;&gt; 4))) &amp; (filters))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" line="967" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" bodystart="967" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="portmidi_8c_1ad503ee62c76e6fe2beef957f0fe53488" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int pm_initialized</definition>
        <argsstring></argsstring>
        <name>pm_initialized</name>
        <initializer>= <ref refid="twolame_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" line="42" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="portmidi_8c_1af455cd83ef19eb07a7996c38dd806ee4" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int pm_hosterror</definition>
        <argsstring></argsstring>
        <name>pm_hosterror</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" line="44" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="portmidi_8c_1ac24a8881f0ef8c3a944349bee479cf05" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char pm_hosterror_text[PM_HOST_ERROR_MSG_LEN]</definition>
        <argsstring>[PM_HOST_ERROR_MSG_LEN]</argsstring>
        <name>pm_hosterror_text</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" line="45" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="portmidi_8c_1a9ffc95d4de3ed10d1efcac1d79e39f11" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int pm_descriptor_max</definition>
        <argsstring></argsstring>
        <name>pm_descriptor_max</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" line="89" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="portmidi_8c_1abf37b57cc544c04b6d27cf33a02b473f" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int pm_descriptor_index</definition>
        <argsstring></argsstring>
        <name>pm_descriptor_index</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" line="90" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="portmidi_8c_1a8a86f0e79d5794e79c94c3f380a7088c" prot="public" static="no" mutable="no">
        <type><ref refid="pminternal_8h_1a29d5a895f53cf98108afbfd7379edbb1" kindref="member">descriptor_type</ref></type>
        <definition>descriptor_type descriptors</definition>
        <argsstring></argsstring>
        <name>descriptors</name>
        <initializer>= <ref refid="px__mixer_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" line="91" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="portmidi_8c_1a8b038edc211455d61f88e5f9c7773496" prot="public" static="no" mutable="no">
        <type><ref refid="structpm__fns__node" kindref="compound">pm_fns_node</ref></type>
        <definition>pm_fns_node pm_none_dictionary</definition>
        <argsstring></argsstring>
        <name>pm_none_dictionary</name>
        <initializer>= {
    <ref refid="portmidi_8c_1a841d04eb4d4efa3eebfc4e718cf9faa3" kindref="member">none_write_short</ref>,
    <ref refid="pminternal_8h_1ac44b30c88f5076903c62f9e8fc8c51ec" kindref="member">none_sysex</ref>,
    <ref refid="pminternal_8h_1ac44b30c88f5076903c62f9e8fc8c51ec" kindref="member">none_sysex</ref>,
    <ref refid="portmidi_8c_1a2181992bfdc1d719bdd96353763965d7" kindref="member">none_write_byte</ref>,
    <ref refid="portmidi_8c_1a841d04eb4d4efa3eebfc4e718cf9faa3" kindref="member">none_write_short</ref>,
    <ref refid="pminternal_8h_1a1381cf29da7767a1db6c268b7941a6f8" kindref="member">none_write_flush</ref>,
    <ref refid="portmidi_8c_1a9128319a3c3cb967bdde782ae9c5c4ba" kindref="member">none_synchronize</ref>,
    none_open,
    <ref refid="portmidi_8c_1a366d307d9adc16df4ed72c0c96d56bd0" kindref="member">none_abort</ref>, 
    <ref refid="portmidi_8c_1aee20ca803d94f91361fe009179095c90" kindref="member">none_close</ref>,
    <ref refid="pminternal_8h_1a7b782f381e349f7b220b925bcdf9c9c1" kindref="member">none_poll</ref>,
    none_has_host_error,
    none_get_host_error 
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" line="232" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" bodystart="232" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="portmidi_8c_1a8c66dfe796fb47b3f2a4a195a0529249" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref></type>
        <definition>PmError pm_add_device</definition>
        <argsstring>(char *interf, char *name, int input, void *descriptor, pm_fns_type dictionary)</argsstring>
        <name>pm_add_device</name>
        <param>
          <type>char *</type>
          <declname>interf</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>input</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>descriptor</declname>
        </param>
        <param>
          <type><ref refid="pminternal_8h_1a28b39bba2919ba7ccbe1bfa11443465b" kindref="member">pm_fns_type</ref></type>
          <declname>dictionary</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" line="102" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" bodystart="102" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="portmidi_8c_1a7c21a21a0dbab33bf9f3bb9122879142" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int pm_find_default_device</definition>
        <argsstring>(char *pattern, int is_input)</argsstring>
        <name>pm_find_default_device</name>
        <param>
          <type>char *</type>
          <declname>pattern</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>is_input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" line="142" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" bodystart="142" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="portmidi_8c_1aa09d809f5c5bdc5d2fc9b3d2290ec282" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="porttime_8h_1ad478fb637833fb6b1a4bdb25a03f4662" kindref="member">PMEXPORT</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>PMEXPORT int Pm_CountDevices</definition>
        <argsstring>(void)</argsstring>
        <name>Pm_CountDevices</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get devices count, ids range from 0 to <ref refid="portmidi_8h_1aa09d809f5c5bdc5d2fc9b3d2290ec282" kindref="member">Pm_CountDevices()</ref>-1. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" line="176" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" bodystart="176" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="group__grp__device_1ga2ff3676bcff6077e64ef6f3eb57fb37e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="porttime_8h_1ad478fb637833fb6b1a4bdb25a03f4662" kindref="member">PMEXPORT</ref> <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_pm_device_info" kindref="compound">PmDeviceInfo</ref> *</type>
        <definition>PMEXPORT const PmDeviceInfo* Pm_GetDeviceInfo</definition>
        <argsstring>(PmDeviceID id)</argsstring>
        <name>Pm_GetDeviceInfo</name>
        <param>
          <type><ref refid="portmidi_8h_1a696cc4d4360bb8513f13df4bb134098a" kindref="member">PmDeviceID</ref></type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="group__grp__device_1ga2ff3676bcff6077e64ef6f3eb57fb37e" kindref="member">Pm_GetDeviceInfo()</ref> returns a pointer to a <ref refid="struct_pm_device_info" kindref="compound">PmDeviceInfo</ref> structure referring to the device specified by id. If id is out of range the function returns NULL.</para><para>The returned structure is owned by the PortMidi implementation and must not be manipulated or freed. The pointer is guaranteed to be valid between calls to <ref refid="portmidi_8h_1a5e9d0c116061f0cc25fb789fc393b417" kindref="member">Pm_Initialize()</ref> and <ref refid="portmidi_8h_1a6c5dd5cd3657ac1cdab6bc5f3063193e" kindref="member">Pm_Terminate()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" line="183" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" bodystart="183" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="portmidi_8c_1afe35490233517557ab6ce2a63008c7f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref></type>
        <definition>PmError pm_success_fn</definition>
        <argsstring>(PmInternal *midi)</argsstring>
        <name>pm_success_fn</name>
        <param>
          <type><ref refid="pminternal_8h_1acb48fe118f5feaf74bc314943658b733" kindref="member">PmInternal</ref> *</type>
          <declname>midi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" line="192" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" bodystart="192" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="portmidi_8c_1a841d04eb4d4efa3eebfc4e718cf9faa3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref></type>
        <definition>PmError none_write_short</definition>
        <argsstring>(PmInternal *midi, PmEvent *buffer)</argsstring>
        <name>none_write_short</name>
        <param>
          <type><ref refid="pminternal_8h_1acb48fe118f5feaf74bc314943658b733" kindref="member">PmInternal</ref> *</type>
          <declname>midi</declname>
        </param>
        <param>
          <type><ref refid="struct_pm_event" kindref="compound">PmEvent</ref> *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" line="197" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" bodystart="197" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="portmidi_8c_1a36fcdf715926bc285b87c92005c04523" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref></type>
        <definition>PmError pm_fail_timestamp_fn</definition>
        <argsstring>(PmInternal *midi, PmTimestamp timestamp)</argsstring>
        <name>pm_fail_timestamp_fn</name>
        <param>
          <type><ref refid="pminternal_8h_1acb48fe118f5feaf74bc314943658b733" kindref="member">PmInternal</ref> *</type>
          <declname>midi</declname>
        </param>
        <param>
          <type><ref refid="portmidi_8h_1acf4245beeef251c4a46d66e99d77ffdf" kindref="member">PmTimestamp</ref></type>
          <declname>timestamp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" line="202" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" bodystart="202" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="portmidi_8c_1a2181992bfdc1d719bdd96353763965d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref></type>
        <definition>PmError none_write_byte</definition>
        <argsstring>(PmInternal *midi, unsigned char byte, PmTimestamp timestamp)</argsstring>
        <name>none_write_byte</name>
        <param>
          <type><ref refid="pminternal_8h_1acb48fe118f5feaf74bc314943658b733" kindref="member">PmInternal</ref> *</type>
          <declname>midi</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>byte</declname>
        </param>
        <param>
          <type><ref refid="portmidi_8h_1acf4245beeef251c4a46d66e99d77ffdf" kindref="member">PmTimestamp</ref></type>
          <declname>timestamp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" line="206" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" bodystart="206" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="portmidi_8c_1aeeae549047bfcfbbe3eff9f3857ff77a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref></type>
        <definition>PmError pm_fail_fn</definition>
        <argsstring>(PmInternal *midi)</argsstring>
        <name>pm_fail_fn</name>
        <param>
          <type><ref refid="pminternal_8h_1acb48fe118f5feaf74bc314943658b733" kindref="member">PmInternal</ref> *</type>
          <declname>midi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" line="212" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" bodystart="212" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="portmidi_8c_1adc0614cf830ce981d1cd63b6c08247fe" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref></type>
        <definition>static PmError none_open</definition>
        <argsstring>(PmInternal *midi, void *driverInfo)</argsstring>
        <name>none_open</name>
        <param>
          <type><ref refid="pminternal_8h_1acb48fe118f5feaf74bc314943658b733" kindref="member">PmInternal</ref> *</type>
          <declname>midi</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>driverInfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" line="216" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" bodystart="216" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="portmidi_8c_1ae8675a4d4f166f2071b58a4a401d831b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void none_get_host_error</definition>
        <argsstring>(PmInternal *midi, char *msg, unsigned int len)</argsstring>
        <name>none_get_host_error</name>
        <param>
          <type><ref refid="pminternal_8h_1acb48fe118f5feaf74bc314943658b733" kindref="member">PmInternal</ref> *</type>
          <declname>midi</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" line="219" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" bodystart="219" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="portmidi_8c_1aee06619b1b7ed7c21f0381304d69fea9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static unsigned int none_has_host_error</definition>
        <argsstring>(PmInternal *midi)</argsstring>
        <name>none_has_host_error</name>
        <param>
          <type><ref refid="pminternal_8h_1acb48fe118f5feaf74bc314943658b733" kindref="member">PmInternal</ref> *</type>
          <declname>midi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" line="222" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" bodystart="222" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="portmidi_8c_1a9128319a3c3cb967bdde782ae9c5c4ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portmidi_8h_1acf4245beeef251c4a46d66e99d77ffdf" kindref="member">PmTimestamp</ref></type>
        <definition>PmTimestamp none_synchronize</definition>
        <argsstring>(PmInternal *midi)</argsstring>
        <name>none_synchronize</name>
        <param>
          <type><ref refid="pminternal_8h_1acb48fe118f5feaf74bc314943658b733" kindref="member">PmInternal</ref> *</type>
          <declname>midi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" line="225" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" bodystart="225" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="portmidi_8c_1af6f9fa86b2192d5df87a36762f43b1a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="porttime_8h_1ad478fb637833fb6b1a4bdb25a03f4662" kindref="member">PMEXPORT</ref> <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
        <definition>PMEXPORT const char* Pm_GetErrorText</definition>
        <argsstring>(PmError errnum)</argsstring>
        <name>Pm_GetErrorText</name>
        <param>
          <type><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref></type>
          <declname>errnum</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Translate portmidi error number into human readable message. These strings are constants (set at compile time) so client has no need to allocate storage </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" line="249" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" bodystart="249" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="portmidi_8c_1ae5dd1f766c2d1f492ab4a9a4a6da651f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="porttime_8h_1ad478fb637833fb6b1a4bdb25a03f4662" kindref="member">PMEXPORT</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>PMEXPORT void Pm_GetHostErrorText</definition>
        <argsstring>(char *msg, unsigned int len)</argsstring>
        <name>Pm_GetHostErrorText</name>
        <param>
          <type>char *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Translate portmidi host error into human readable message. These strings are computed at run time, so client has to allocate storage. After this routine executes, the host error is cleared. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" line="295" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" bodystart="295" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="portmidi_8c_1aa631918a228994f19bed5dcbc398d59a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="porttime_8h_1ad478fb637833fb6b1a4bdb25a03f4662" kindref="member">PMEXPORT</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>PMEXPORT int Pm_HasHostError</definition>
        <argsstring>(PortMidiStream *stream)</argsstring>
        <name>Pm_HasHostError</name>
        <param>
          <type><ref refid="portmidi_8h_1af4949219ee1bb0afc857cb242d123914" kindref="member">PortMidiStream</ref> *</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="struct_test" kindref="compound">Test</ref> whether stream has a pending host error. Normally, the client finds out about errors through returned error codes, but some errors can occur asynchronously where the client does not explicitly call a function, and therefore cannot receive an error code. The client can test for a pending error using <ref refid="portmidi_8h_1aa631918a228994f19bed5dcbc398d59a" kindref="member">Pm_HasHostError()</ref>. If true, the error can be accessed and cleared by calling <ref refid="portmidi_8h_1af6f9fa86b2192d5df87a36762f43b1a4" kindref="member">Pm_GetErrorText()</ref>. Errors are also cleared by calling other functions that can return errors, e.g. <ref refid="group__grp__device_1gabd50a31baaa494ad8b405f9ad54c966e" kindref="member">Pm_OpenInput()</ref>, <ref refid="group__grp__device_1ga134924cfa8badeecff3c5e1f22aee178" kindref="member">Pm_OpenOutput()</ref>, <ref refid="group__grp__io_1ga3d59225bc890ede974f245ada3de6456" kindref="member">Pm_Read()</ref>, <ref refid="group__grp__io_1ga82950117f003d28f9ca6536c00af985a" kindref="member">Pm_Write()</ref>. The client does not need to call <ref refid="portmidi_8h_1aa631918a228994f19bed5dcbc398d59a" kindref="member">Pm_HasHostError()</ref>. Any pending error will be reported the next time the client performs an explicit function call on the stream, e.g. an input or output operation. Until the error is cleared, no new error codes will be obtained, even for a different stream. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" line="310" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" bodystart="310" bodyend="323"/>
      </memberdef>
      <memberdef kind="function" id="portmidi_8c_1a5e9d0c116061f0cc25fb789fc393b417" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="porttime_8h_1ad478fb637833fb6b1a4bdb25a03f4662" kindref="member">PMEXPORT</ref> <ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref></type>
        <definition>PMEXPORT PmError Pm_Initialize</definition>
        <argsstring>(void)</argsstring>
        <name>Pm_Initialize</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="portmidi_8h_1a5e9d0c116061f0cc25fb789fc393b417" kindref="member">Pm_Initialize()</ref> is the library initialisation function - call this before using the library. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" line="326" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" bodystart="326" bodyend="334"/>
      </memberdef>
      <memberdef kind="function" id="portmidi_8c_1a6c5dd5cd3657ac1cdab6bc5f3063193e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="porttime_8h_1ad478fb637833fb6b1a4bdb25a03f4662" kindref="member">PMEXPORT</ref> <ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref></type>
        <definition>PMEXPORT PmError Pm_Terminate</definition>
        <argsstring>(void)</argsstring>
        <name>Pm_Terminate</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="portmidi_8h_1a6c5dd5cd3657ac1cdab6bc5f3063193e" kindref="member">Pm_Terminate()</ref> is the library termination function - call this after using the library. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" line="337" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" bodystart="337" bodyend="350"/>
      </memberdef>
      <memberdef kind="function" id="group__grp__io_1ga3d59225bc890ede974f245ada3de6456" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="porttime_8h_1ad478fb637833fb6b1a4bdb25a03f4662" kindref="member">PMEXPORT</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>PMEXPORT int Pm_Read</definition>
        <argsstring>(PortMidiStream *stream, PmEvent *buffer, int32_t length)</argsstring>
        <name>Pm_Read</name>
        <param>
          <type><ref refid="portmidi_8h_1af4949219ee1bb0afc857cb242d123914" kindref="member">PortMidiStream</ref> *</type>
          <declname>stream</declname>
        </param>
        <param>
          <type><ref refid="struct_pm_event" kindref="compound">PmEvent</ref> *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a37994e3b11c72957c6f454c6ec96d43d" kindref="member">int32_t</ref></type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="group__grp__io_1ga3d59225bc890ede974f245ada3de6456" kindref="member">Pm_Read()</ref> retrieves midi data into a buffer, and returns the number of events read. Result is a non-negative number unless an error occurs, in which case a PmError value will be returned.</para><para>Buffer Overflow</para><para>The problem: if an input overflow occurs, data will be lost, ultimately because there is no flow control all the way back to the data source. When data is lost, the receiver should be notified and some sort of graceful recovery should take place, e.g. you shouldn&apos;t resume receiving in the middle of a long sysex message.</para><para>With a lock-free fifo, which is pretty much what we&apos;re stuck with to enable portability to the Mac, it&apos;s tricky for the producer and consumer to synchronously reset the buffer and resume normal operation.</para><para>Solution: the buffer managed by PortMidi will be flushed when an overflow occurs. The consumer (<ref refid="group__grp__io_1ga3d59225bc890ede974f245ada3de6456" kindref="member">Pm_Read()</ref>) gets an error message (pmBufferOverflow) and ordinary processing resumes as soon as a new message arrives. The remainder of a partial sysex message is not considered to be a &quot;new
message&quot; and will be flushed as well. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" line="357" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" bodystart="357" bodyend="396"/>
      </memberdef>
      <memberdef kind="function" id="group__grp__io_1ga54198ca9dc1af9d82ec5f44f661faeea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="porttime_8h_1ad478fb637833fb6b1a4bdb25a03f4662" kindref="member">PMEXPORT</ref> <ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref></type>
        <definition>PMEXPORT PmError Pm_Poll</definition>
        <argsstring>(PortMidiStream *stream)</argsstring>
        <name>Pm_Poll</name>
        <param>
          <type><ref refid="portmidi_8h_1af4949219ee1bb0afc857cb242d123914" kindref="member">PortMidiStream</ref> *</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="group__grp__io_1ga54198ca9dc1af9d82ec5f44f661faeea" kindref="member">Pm_Poll()</ref> tests whether input is available, returning TRUE, FALSE, or an error value. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" line="398" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" bodystart="398" bodyend="424"/>
      </memberdef>
      <memberdef kind="function" id="portmidi_8c_1a811293321e05be76f64b1a18a0e4c774" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref></type>
        <definition>static PmError pm_end_sysex</definition>
        <argsstring>(PmInternal *midi)</argsstring>
        <name>pm_end_sysex</name>
        <param>
          <type><ref refid="pminternal_8h_1acb48fe118f5feaf74bc314943658b733" kindref="member">PmInternal</ref> *</type>
          <declname>midi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" line="431" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" bodystart="431" bodyend="441"/>
      </memberdef>
      <memberdef kind="function" id="group__grp__io_1ga82950117f003d28f9ca6536c00af985a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="porttime_8h_1ad478fb637833fb6b1a4bdb25a03f4662" kindref="member">PMEXPORT</ref> <ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref></type>
        <definition>PMEXPORT PmError Pm_Write</definition>
        <argsstring>(PortMidiStream *stream, PmEvent *buffer, int32_t length)</argsstring>
        <name>Pm_Write</name>
        <param>
          <type><ref refid="portmidi_8h_1af4949219ee1bb0afc857cb242d123914" kindref="member">PortMidiStream</ref> *</type>
          <declname>stream</declname>
        </param>
        <param>
          <type><ref refid="struct_pm_event" kindref="compound">PmEvent</ref> *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a37994e3b11c72957c6f454c6ec96d43d" kindref="member">int32_t</ref></type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="group__grp__io_1ga82950117f003d28f9ca6536c00af985a" kindref="member">Pm_Write()</ref> writes midi data from a buffer. This may contain:<itemizedlist>
<listitem><para>short messages or</para></listitem><listitem><para>sysex messages that are converted into a sequence of <ref refid="struct_pm_event" kindref="compound">PmEvent</ref> structures, e.g. sending data from a file or forwarding them from midi input.</para></listitem></itemizedlist>
</para><para>Use <ref refid="group__grp__io_1ga4bd5753bdfb53a1611bcdf5ba159fc87" kindref="member">Pm_WriteSysEx()</ref> to write a sysex message stored as a contiguous array of bytes.</para><para>Sysex data may contain embedded real-time messages. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" line="448" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" bodystart="448" bodyend="578"/>
      </memberdef>
      <memberdef kind="function" id="group__grp__io_1ga4a8cdd77e5b2ad4c16338eed475dfc6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="porttime_8h_1ad478fb637833fb6b1a4bdb25a03f4662" kindref="member">PMEXPORT</ref> <ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref></type>
        <definition>PMEXPORT PmError Pm_WriteShort</definition>
        <argsstring>(PortMidiStream *stream, PmTimestamp when, PmMessage msg)</argsstring>
        <name>Pm_WriteShort</name>
        <param>
          <type><ref refid="portmidi_8h_1af4949219ee1bb0afc857cb242d123914" kindref="member">PortMidiStream</ref> *</type>
          <declname>stream</declname>
        </param>
        <param>
          <type><ref refid="portmidi_8h_1acf4245beeef251c4a46d66e99d77ffdf" kindref="member">PmTimestamp</ref></type>
          <declname>when</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a37994e3b11c72957c6f454c6ec96d43d" kindref="member">int32_t</ref></type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="group__grp__io_1ga4a8cdd77e5b2ad4c16338eed475dfc6b" kindref="member">Pm_WriteShort()</ref> writes a timestamped non-system-exclusive midi message. Messages are delivered in order as received, and timestamps must be non-decreasing. (But timestamps are ignored if the stream was opened with latency = 0.) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" line="581" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" bodystart="581" bodyend="588"/>
      </memberdef>
      <memberdef kind="function" id="group__grp__io_1ga4bd5753bdfb53a1611bcdf5ba159fc87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="porttime_8h_1ad478fb637833fb6b1a4bdb25a03f4662" kindref="member">PMEXPORT</ref> <ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref></type>
        <definition>PMEXPORT PmError Pm_WriteSysEx</definition>
        <argsstring>(PortMidiStream *stream, PmTimestamp when, unsigned char *msg)</argsstring>
        <name>Pm_WriteSysEx</name>
        <param>
          <type><ref refid="portmidi_8h_1af4949219ee1bb0afc857cb242d123914" kindref="member">PortMidiStream</ref> *</type>
          <declname>stream</declname>
        </param>
        <param>
          <type><ref refid="portmidi_8h_1acf4245beeef251c4a46d66e99d77ffdf" kindref="member">PmTimestamp</ref></type>
          <declname>when</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="group__grp__io_1ga4bd5753bdfb53a1611bcdf5ba159fc87" kindref="member">Pm_WriteSysEx()</ref> writes a timestamped system-exclusive midi message. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" line="591" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" bodystart="591" bodyend="665"/>
      </memberdef>
      <memberdef kind="function" id="group__grp__device_1gabd50a31baaa494ad8b405f9ad54c966e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="porttime_8h_1ad478fb637833fb6b1a4bdb25a03f4662" kindref="member">PMEXPORT</ref> <ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref></type>
        <definition>PMEXPORT PmError Pm_OpenInput</definition>
        <argsstring>(PortMidiStream **stream, PmDeviceID inputDevice, void *inputDriverInfo, int32_t bufferSize, PmTimeProcPtr time_proc, void *time_info)</argsstring>
        <name>Pm_OpenInput</name>
        <param>
          <type><ref refid="portmidi_8h_1af4949219ee1bb0afc857cb242d123914" kindref="member">PortMidiStream</ref> **</type>
          <declname>stream</declname>
        </param>
        <param>
          <type><ref refid="portmidi_8h_1a696cc4d4360bb8513f13df4bb134098a" kindref="member">PmDeviceID</ref></type>
          <declname>inputDevice</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>inputDriverInfo</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a37994e3b11c72957c6f454c6ec96d43d" kindref="member">int32_t</ref></type>
          <declname>bufferSize</declname>
        </param>
        <param>
          <type><ref refid="portmidi_8h_1a86cdcb85cfa72e067bc2fd1b96fca05d" kindref="member">PmTimeProcPtr</ref></type>
          <declname>time_proc</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>time_info</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="group__grp__device_1gabd50a31baaa494ad8b405f9ad54c966e" kindref="member">Pm_OpenInput()</ref> and <ref refid="group__grp__device_1ga134924cfa8badeecff3c5e1f22aee178" kindref="member">Pm_OpenOutput()</ref> open devices.</para><para>stream is the address of a PortMidiStream pointer which will receive a pointer to the newly opened stream.</para><para>inputDevice is the id of the device used for input (see PmDeviceID above).</para><para>inputDriverInfo is a pointer to an optional driver specific data structure containing additional information for device setup or handle processing. inputDriverInfo is never required for correct operation. If not used inputDriverInfo should be NULL.</para><para>outputDevice is the id of the device used for output (see PmDeviceID above.)</para><para>outputDriverInfo is a pointer to an optional driver specific data structure containing additional information for device setup or handle processing. outputDriverInfo is never required for correct operation. If not used outputDriverInfo should be NULL.</para><para>For input, the buffersize specifies the number of input events to be buffered waiting to be read using <ref refid="group__grp__io_1ga3d59225bc890ede974f245ada3de6456" kindref="member">Pm_Read()</ref>. For output, buffersize specifies the number of output events to be buffered waiting for output. (In some cases <ndash/> see below <ndash/> PortMidi does not buffer output at all and merely passes data to a lower-level API, in which case buffersize is ignored.)</para><para>latency is the delay in milliseconds applied to timestamps to determine when the output should actually occur. (If latency is &lt; 0, 0 is assumed.) If latency is zero, timestamps are ignored and all output is delivered immediately. If latency is greater than zero, output is delayed until the message timestamp plus the latency. (NOTE: the time is measured relative to the time source indicated by time_proc. Timestamps are absolute, not relative delays or offsets.) In some cases, PortMidi can obtain better timing than your application by passing timestamps along to the device driver or hardware. Latency may also help you to synchronize midi data to audio data by matching midi latency to the audio buffer latency.</para><para>time_proc is a pointer to a procedure that returns time in milliseconds. It may be NULL, in which case a default millisecond timebase (PortTime) is used. If the application wants to use PortTime, it should start the timer (call Pt_Start) before calling Pm_OpenInput or Pm_OpenOutput. If the application tries to start the timer <emphasis>after</emphasis> Pm_OpenInput or Pm_OpenOutput, it may get a ptAlreadyStarted error from Pt_Start, and the application&apos;s preferred time resolution and callback function will be ignored. time_proc result values are appended to incoming MIDI data, and time_proc times are used to schedule outgoing MIDI data (when latency is non-zero).</para><para>time_info is a pointer passed to time_proc.</para><para>Example: If I provide a timestamp of 5000, latency is 1, and time_proc returns 4990, then the desired output time will be when time_proc returns timestamp+latency = 5001. This will be 5001-4990 = 11ms from now.</para><para>return value: Upon success Pm_Open() returns PmNoError and places a pointer to a valid PortMidiStream in the stream argument. If a call to Pm_Open() fails a nonzero error code is returned (see PMError above) and the value of port is invalid.</para><para>Any stream that is successfully opened should eventually be closed by calling <ref refid="group__grp__events__filters_1ga6b26be2fbcf092c9625ade5303edd0ac" kindref="member">Pm_Close()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" line="669" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" bodystart="669" bodyend="749"/>
      </memberdef>
      <memberdef kind="function" id="group__grp__device_1ga134924cfa8badeecff3c5e1f22aee178" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="porttime_8h_1ad478fb637833fb6b1a4bdb25a03f4662" kindref="member">PMEXPORT</ref> <ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref></type>
        <definition>PMEXPORT PmError Pm_OpenOutput</definition>
        <argsstring>(PortMidiStream **stream, PmDeviceID outputDevice, void *outputDriverInfo, int32_t bufferSize, PmTimeProcPtr time_proc, void *time_info, int32_t latency)</argsstring>
        <name>Pm_OpenOutput</name>
        <param>
          <type><ref refid="portmidi_8h_1af4949219ee1bb0afc857cb242d123914" kindref="member">PortMidiStream</ref> **</type>
          <declname>stream</declname>
        </param>
        <param>
          <type><ref refid="portmidi_8h_1a696cc4d4360bb8513f13df4bb134098a" kindref="member">PmDeviceID</ref></type>
          <declname>outputDevice</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>outputDriverInfo</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a37994e3b11c72957c6f454c6ec96d43d" kindref="member">int32_t</ref></type>
          <declname>bufferSize</declname>
        </param>
        <param>
          <type><ref refid="portmidi_8h_1a86cdcb85cfa72e067bc2fd1b96fca05d" kindref="member">PmTimeProcPtr</ref></type>
          <declname>time_proc</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>time_info</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a37994e3b11c72957c6f454c6ec96d43d" kindref="member">int32_t</ref></type>
          <declname>latency</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" line="752" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" bodystart="752" bodyend="828"/>
      </memberdef>
      <memberdef kind="function" id="group__grp__events__filters_1ga87f9bc67a21a8b058a3f915a2f98746a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="porttime_8h_1ad478fb637833fb6b1a4bdb25a03f4662" kindref="member">PMEXPORT</ref> <ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref></type>
        <definition>PMEXPORT PmError Pm_SetChannelMask</definition>
        <argsstring>(PortMidiStream *stream, int mask)</argsstring>
        <name>Pm_SetChannelMask</name>
        <param>
          <type><ref refid="portmidi_8h_1af4949219ee1bb0afc857cb242d123914" kindref="member">PortMidiStream</ref> *</type>
          <declname>stream</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="group__grp__events__filters_1ga87f9bc67a21a8b058a3f915a2f98746a" kindref="member">Pm_SetChannelMask()</ref> filters incoming messages based on channel. The mask is a 16-bit bitfield corresponding to appropriate channels. The Pm_Channel macro can assist in calling this function. i.e. to set receive only input on channel 1, call with Pm_SetChannelMask(Pm_Channel(1)); Multiple channels should be OR&apos;d together, like Pm_SetChannelMask(<ref refid="group__grp__events__filters_1ga33262c53c6591f143fc61e12a8e2205c" kindref="member">Pm_Channel(10)</ref> | <ref refid="group__grp__events__filters_1ga33262c53c6591f143fc61e12a8e2205c" kindref="member">Pm_Channel(11)</ref>)</para><para>Note that channels are numbered 0 to 15 (not 1 to 16). Most synthesizer and interfaces number channels starting at 1, but PortMidi numbers channels starting at 0.</para><para>All channels are allowed by default </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" line="831" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" bodystart="831" bodyend="842"/>
      </memberdef>
      <memberdef kind="function" id="group__grp__events__filters_1ga1a2b69b85efe9743345e18fc96607994" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="porttime_8h_1ad478fb637833fb6b1a4bdb25a03f4662" kindref="member">PMEXPORT</ref> <ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref></type>
        <definition>PMEXPORT PmError Pm_SetFilter</definition>
        <argsstring>(PortMidiStream *stream, int32_t filters)</argsstring>
        <name>Pm_SetFilter</name>
        <param>
          <type><ref refid="portmidi_8h_1af4949219ee1bb0afc857cb242d123914" kindref="member">PortMidiStream</ref> *</type>
          <declname>stream</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a37994e3b11c72957c6f454c6ec96d43d" kindref="member">int32_t</ref></type>
          <declname>filters</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" line="845" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" bodystart="845" bodyend="857"/>
      </memberdef>
      <memberdef kind="function" id="group__grp__events__filters_1ga6b26be2fbcf092c9625ade5303edd0ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="porttime_8h_1ad478fb637833fb6b1a4bdb25a03f4662" kindref="member">PMEXPORT</ref> <ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref></type>
        <definition>PMEXPORT PmError Pm_Close</definition>
        <argsstring>(PortMidiStream *stream)</argsstring>
        <name>Pm_Close</name>
        <param>
          <type><ref refid="portmidi_8h_1af4949219ee1bb0afc857cb242d123914" kindref="member">PortMidiStream</ref> *</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="group__grp__events__filters_1ga6b26be2fbcf092c9625ade5303edd0ac" kindref="member">Pm_Close()</ref> closes a midi stream, flushing any pending buffers. (PortMidi attempts to close open streams when the application exits <ndash/> this is particularly difficult under Windows.) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" line="860" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" bodystart="860" bodyend="890"/>
      </memberdef>
      <memberdef kind="function" id="group__grp__events__filters_1gada0edc37a3424b086b14b151be3aea1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref></type>
        <definition>PmError Pm_Synchronize</definition>
        <argsstring>(PortMidiStream *stream)</argsstring>
        <name>Pm_Synchronize</name>
        <param>
          <type><ref refid="portmidi_8h_1af4949219ee1bb0afc857cb242d123914" kindref="member">PortMidiStream</ref> *</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="group__grp__events__filters_1gada0edc37a3424b086b14b151be3aea1a" kindref="member">Pm_Synchronize()</ref> instructs PortMidi to (re)synchronize to the time_proc passed when the stream was opened. Typically, this is used when the stream must be opened before the time_proc reference is actually advancing. In this case, message timing may be erratic, but since timestamps of zero mean &quot;send immediately,&quot; initialization messages with zero timestamps can be written without a functioning time reference and without problems. Before the first MIDI message with a non-zero timestamp is written to the stream, the time reference must begin to advance (for example, if the time_proc computes time based on audio samples, time might begin to advance when an audio stream becomes active). After time_proc return values become valid, and BEFORE writing the first non-zero timestamped MIDI message, call <ref refid="group__grp__events__filters_1gada0edc37a3424b086b14b151be3aea1a" kindref="member">Pm_Synchronize()</ref> so that PortMidi can observe the difference between the current time_proc value and its MIDI stream time.</para><para>In the more normal case where time_proc values advance continuously, there is no need to call Pm_Synchronize. PortMidi will always synchronize at the first output message and periodically thereafter. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" line="892" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" bodystart="892" bodyend="904"/>
      </memberdef>
      <memberdef kind="function" id="group__grp__events__filters_1ga8934ac3b02359b60177a06580c66a20e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="porttime_8h_1ad478fb637833fb6b1a4bdb25a03f4662" kindref="member">PMEXPORT</ref> <ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref></type>
        <definition>PMEXPORT PmError Pm_Abort</definition>
        <argsstring>(PortMidiStream *stream)</argsstring>
        <name>Pm_Abort</name>
        <param>
          <type><ref refid="portmidi_8h_1af4949219ee1bb0afc857cb242d123914" kindref="member">PortMidiStream</ref> *</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="group__grp__events__filters_1ga8934ac3b02359b60177a06580c66a20e" kindref="member">Pm_Abort()</ref> terminates outgoing messages immediately The caller should immediately close the output port; this call may result in transmission of a partial midi message. There is no abort for Midi input because the user can simply ignore messages in the buffer and close an input device at any time. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" line="906" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" bodystart="906" bodyend="925"/>
      </memberdef>
      <memberdef kind="function" id="portmidi_8c_1a91b4940e34f52e425f2c9f2be02aa042" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void pm_flush_sysex</definition>
        <argsstring>(PmInternal *midi, PmTimestamp timestamp)</argsstring>
        <name>pm_flush_sysex</name>
        <param>
          <type><ref refid="pminternal_8h_1acb48fe118f5feaf74bc314943658b733" kindref="member">PmInternal</ref> *</type>
          <declname>midi</declname>
        </param>
        <param>
          <type><ref refid="portmidi_8h_1acf4245beeef251c4a46d66e99d77ffdf" kindref="member">PmTimestamp</ref></type>
          <declname>timestamp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" line="982" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" bodystart="982" bodyend="997"/>
      </memberdef>
      <memberdef kind="function" id="portmidi_8c_1a11a153e33a42b3f20df33394ce241005" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void pm_read_short</definition>
        <argsstring>(PmInternal *midi, PmEvent *event)</argsstring>
        <name>pm_read_short</name>
        <param>
          <type><ref refid="pminternal_8h_1acb48fe118f5feaf74bc314943658b733" kindref="member">PmInternal</ref> *</type>
          <declname>midi</declname>
        </param>
        <param>
          <type><ref refid="struct_pm_event" kindref="compound">PmEvent</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" line="1015" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" bodystart="1015" bodyend="1049"/>
      </memberdef>
      <memberdef kind="function" id="portmidi_8c_1a42d9f2529a0dedc5cbcaca8d3025a005" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>unsigned int pm_read_bytes</definition>
        <argsstring>(PmInternal *midi, const unsigned char *data, int len, PmTimestamp timestamp)</argsstring>
        <name>pm_read_bytes</name>
        <param>
          <type><ref refid="pminternal_8h_1acb48fe118f5feaf74bc314943658b733" kindref="member">PmInternal</ref> *</type>
          <declname>midi</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> unsigned char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>len</declname>
        </param>
        <param>
          <type><ref refid="portmidi_8h_1acf4245beeef251c4a46d66e99d77ffdf" kindref="member">PmTimestamp</ref></type>
          <declname>timestamp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" line="1055" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c" bodystart="1055" bodyend="1135"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifdef<sp/>_MSC_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#pragma<sp/>warning(disable:<sp/>4244)<sp/>//<sp/>stop<sp/>warnings<sp/>about<sp/>downsize<sp/>typecasts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/>#pragma<sp/>warning(disable:<sp/>4018)<sp/>//<sp/>stop<sp/>warnings<sp/>about<sp/>signed/unsigned</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stdlib.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;string.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="portmidi_8h" kindref="compound">portmidi.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="porttime_8h" kindref="compound">porttime.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pmutil_8h" kindref="compound">pmutil.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pminternal_8h" kindref="compound">pminternal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="assert_8h" kindref="compound">assert.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="portmidi_8c_1afa5e4e295aafd15ab7893344599b3b89" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MIDI_CLOCK<sp/><sp/><sp/><sp/><sp/><sp/>0xf8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="portmidi_8c_1a6ff6dd452be369b24a8bb05102b2ff76" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MIDI_ACTIVE<sp/><sp/><sp/><sp/><sp/>0xfe</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="portmidi_8c_1a1ee2586a063422ec7d18e2abfbafa545" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MIDI_STATUS_MASK<sp/>0x80</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="portmidi_8c_1aa2197f6ca200566c0986e737edd211e4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MIDI_SYSEX<sp/><sp/><sp/><sp/><sp/><sp/>0xf0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="portmidi_8c_1a140c8cfa4bbf1a03494abdbd639d49f2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MIDI_EOX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xf7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="portmidi_8c_1a8233631c85823aa546f932ad8975caa4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MIDI_START<sp/><sp/><sp/><sp/><sp/><sp/>0xFA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="portmidi_8c_1a3af9271d4b1f0d22904a0b055f48cf62" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MIDI_STOP<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xFC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="portmidi_8c_1ab24430f0081e27215b0da84dd0ee745c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MIDI_CONTINUE<sp/><sp/><sp/>0xFB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="portmidi_8c_1ab4ef04d3d15cb2ae88364b639dc29834" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MIDI_F9<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xF9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="portmidi_8c_1ace178eb4669d53d06c7873596fa27084" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MIDI_FD<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xFD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="portmidi_8c_1a02947f30ca62dc332fdeb10c5868323b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MIDI_RESET<sp/><sp/><sp/><sp/><sp/><sp/>0xFF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="portmidi_8c_1acb743a02e36b618a4bd1990671b3325f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MIDI_NOTE_ON<sp/><sp/><sp/><sp/>0x90</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="portmidi_8c_1a4259def83bd534a786edb4408fec67f0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MIDI_NOTE_OFF<sp/><sp/><sp/>0x80</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="portmidi_8c_1ab47c590c8324e5127da43ad0f3e63a26" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MIDI_CHANNEL_AT<sp/>0xD0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="portmidi_8c_1ae11126c99c31285d199b88c12feff9be" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MIDI_POLY_AT<sp/><sp/><sp/><sp/>0xA0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="portmidi_8c_1a8bbe829ae5724352ee1f45f5590e7f84" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MIDI_PROGRAM<sp/><sp/><sp/><sp/>0xC0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="portmidi_8c_1ad618c2530c16b5bdb92ace73f3a1dcb5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MIDI_CONTROL<sp/><sp/><sp/><sp/>0xB0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="portmidi_8c_1abcc799504e8064679bca03f232223af4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MIDI_PITCHBEND<sp/><sp/>0xE0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="portmidi_8c_1a8e5430a8f1fcdc14fc227b7ab24bf1cf" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MIDI_MTC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xF1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="portmidi_8c_1aecd1881207e391fdaad13496b84a8ae7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MIDI_SONGPOS<sp/><sp/><sp/><sp/>0xF2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="portmidi_8c_1aca755324971f1443459847786a4d4507" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MIDI_SONGSEL<sp/><sp/><sp/><sp/>0xF3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="portmidi_8c_1adf060c9ba94819a8445a9924ea799fd8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MIDI_TUNE<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xF6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="portmidi_8c_1a2d48efb2f9e0ad13211a0ab1c66cabef" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>is_empty(midi)<sp/>((midi)-&gt;tail<sp/>==<sp/>(midi)-&gt;head)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>this<sp/>is<sp/>not<sp/>static<sp/>so<sp/>that<sp/>pm_init<sp/>can<sp/>set<sp/>it<sp/>directly<sp/>if</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/><sp/><sp/>(see<sp/>pmmac.c:pm_init())</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="portmidi_8c_1ad503ee62c76e6fe2beef957f0fe53488" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="portmidi_8c_1ad503ee62c76e6fe2beef957f0fe53488" kindref="member">pm_initialized</ref><sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="portmidi_8c_1af455cd83ef19eb07a7996c38dd806ee4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="portmidi_8c_1af455cd83ef19eb07a7996c38dd806ee4" kindref="member">pm_hosterror</ref>;</highlight></codeline>
<codeline lineno="45" refid="portmidi_8c_1ac24a8881f0ef8c3a944349bee479cf05" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="portmidi_8c_1ac24a8881f0ef8c3a944349bee479cf05" kindref="member">pm_hosterror_text</ref>[<ref refid="portmidi_8h_1a40b1b3ff3147b3e0dff5843911345c8e" kindref="member">PM_HOST_ERROR_MSG_LEN</ref>];</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>PM_CHECK_ERRORS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STRING_MAX<sp/>80</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>prompt_and_exit(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="54"><highlight class="normal">{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="seqread_8c_1aad9ebcdde542d8b2075615388ff15a9c" kindref="member">line</ref>[<ref refid="pm__linux_2finddefault_8c_1a41f16f17393bc7dfd8c3a44a6ba595ba" kindref="member">STRING_MAX</ref>];</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;type<sp/>ENTER...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>fgets(line,<sp/><ref refid="pm__linux_2finddefault_8c_1a41f16f17393bc7dfd8c3a44a6ba595ba" kindref="member">STRING_MAX</ref>,<sp/>stdin);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>this<sp/>will<sp/>clean<sp/>up<sp/>open<sp/>ports:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>exit(-1);</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/><ref refid="portmidi_8c_1a1e3fc08b00e2542c99314d01844afd2c" kindref="member">pm_errmsg</ref>(<ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/>err)</highlight></codeline>
<codeline lineno="64"><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>==<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a29400da63af0c60becca3e04a2c75fe5" kindref="member">pmHostError</ref>)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>it<sp/>seems<sp/>pointless<sp/>to<sp/>allocate<sp/>memory<sp/>and<sp/>copy<sp/>the<sp/>string,</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>so<sp/>I<sp/>will<sp/>do<sp/>the<sp/>work<sp/>of<sp/>Pm_GetHostErrorText<sp/>directly</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;PortMidi<sp/>found<sp/>host<sp/>error...\n<sp/><sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="portmidi_8c_1ac24a8881f0ef8c3a944349bee479cf05" kindref="member">pm_hosterror_text</ref>);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portmidi_8c_1af455cd83ef19eb07a7996c38dd806ee4" kindref="member">pm_hosterror</ref><sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portmidi_8c_1ac24a8881f0ef8c3a944349bee479cf05" kindref="member">pm_hosterror_text</ref>[0]<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>clear<sp/>the<sp/>message<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prompt_and_exit();</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;PortMidi<sp/>call<sp/>failed...\n<sp/><sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="portmidi_8c_1af6f9fa86b2192d5df87a36762f43b1a4" kindref="member">Pm_GetErrorText</ref>(err));</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prompt_and_exit();</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="portmidi_8c_1a1e3fc08b00e2542c99314d01844afd2c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>pm_errmsg(err)<sp/>err</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="84"><highlight class="comment">====================================================================</highlight></codeline>
<codeline lineno="85"><highlight class="comment">system<sp/>implementation<sp/>of<sp/>portmidi<sp/>interface</highlight></codeline>
<codeline lineno="86"><highlight class="comment">====================================================================</highlight></codeline>
<codeline lineno="87"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="portmidi_8c_1a9ffc95d4de3ed10d1efcac1d79e39f11" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="portmidi_8c_1a9ffc95d4de3ed10d1efcac1d79e39f11" kindref="member">pm_descriptor_max</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="90" refid="portmidi_8c_1abf37b57cc544c04b6d27cf33a02b473f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="portmidi_8c_1abf37b57cc544c04b6d27cf33a02b473f" kindref="member">pm_descriptor_index</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="91" refid="portmidi_8c_1a8a86f0e79d5794e79c94c3f380a7088c" refkind="member"><highlight class="normal"><ref refid="structdescriptor__node" kindref="compound">descriptor_type</ref><sp/><ref refid="portmidi_8c_1a8a86f0e79d5794e79c94c3f380a7088c" kindref="member">descriptors</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>pm_add_device<sp/>--<sp/>describe<sp/>interface/device<sp/>pair<sp/>to<sp/>library<sp/></highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/>*<sp/>This<sp/>is<sp/>called<sp/>at<sp/>intialization<sp/>time,<sp/>once<sp/>for<sp/>each<sp/></highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/>*<sp/>interface<sp/>(e.g.<sp/>DirectSound)<sp/>and<sp/>device<sp/>(e.g.<sp/>SoundBlaster<sp/>1)</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/>*<sp/>The<sp/>strings<sp/>are<sp/>retained<sp/>but<sp/>NOT<sp/>COPIED,<sp/>so<sp/>do<sp/>not<sp/>destroy<sp/>them!</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/>*<sp/>returns<sp/>pmInvalidDeviceId<sp/>if<sp/>device<sp/>memory<sp/>is<sp/>exceeded</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/>*<sp/>otherwise<sp/>returns<sp/>pmNoError</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="portmidi_8c_1a8c66dfe796fb47b3f2a4a195a0529249" refkind="member"><highlight class="normal"><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/><ref refid="portmidi_8c_1a8c66dfe796fb47b3f2a4a195a0529249" kindref="member">pm_add_device</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*interf,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>input,<sp/></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*descriptor,<sp/><ref refid="structpm__fns__node" kindref="compound">pm_fns_type</ref><sp/>dictionary)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="portmidi_8c_1abf37b57cc544c04b6d27cf33a02b473f" kindref="member">pm_descriptor_index</ref><sp/>&gt;=<sp/><ref refid="portmidi_8c_1a9ffc95d4de3ed10d1efcac1d79e39f11" kindref="member">pm_descriptor_max</ref>)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>expand<sp/>descriptors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdescriptor__node" kindref="compound">descriptor_type</ref><sp/>new_descriptors<sp/>=<sp/>(<ref refid="pminternal_8h_1a29d5a895f53cf98108afbfd7379edbb1" kindref="member">descriptor_type</ref>)<sp/></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1a5e0011f472e9c71efa58816f628eed08" kindref="member">pm_alloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structdescriptor__node" kindref="compound">descriptor_node</ref>)<sp/>*<sp/>(<ref refid="portmidi_8c_1a9ffc95d4de3ed10d1efcac1d79e39f11" kindref="member">pm_descriptor_max</ref><sp/>+<sp/>32));</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!new_descriptors)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a2cd8d4985678f6c92748dcc1177a2512" kindref="member">pmInsufficientMemory</ref>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(descriptors)<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(new_descriptors,<sp/>descriptors,<sp/></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structdescriptor__node" kindref="compound">descriptor_node</ref>)<sp/>*<sp/><ref refid="portmidi_8c_1a9ffc95d4de3ed10d1efcac1d79e39f11" kindref="member">pm_descriptor_max</ref>);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(descriptors);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portmidi_8c_1a9ffc95d4de3ed10d1efcac1d79e39f11" kindref="member">pm_descriptor_max</ref><sp/>+=<sp/>32;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>descriptors<sp/>=<sp/>new_descriptors;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>descriptors[<ref refid="portmidi_8c_1abf37b57cc544c04b6d27cf33a02b473f" kindref="member">pm_descriptor_index</ref>].<ref refid="structdescriptor__node_1a63b20f87d756eab969d3352103322516" kindref="member">pub</ref>.<ref refid="struct_pm_device_info_1a8c83e0e882db5a980a007437a806363b" kindref="member">interf</ref><sp/>=<sp/>interf;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>descriptors[<ref refid="portmidi_8c_1abf37b57cc544c04b6d27cf33a02b473f" kindref="member">pm_descriptor_index</ref>].<ref refid="structdescriptor__node_1a63b20f87d756eab969d3352103322516" kindref="member">pub</ref>.<ref refid="struct_pm_device_info_1a5f708c92e58b1c77454bffeee1d7c61c" kindref="member">name</ref><sp/>=<sp/><ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>descriptors[<ref refid="portmidi_8c_1abf37b57cc544c04b6d27cf33a02b473f" kindref="member">pm_descriptor_index</ref>].<ref refid="structdescriptor__node_1a63b20f87d756eab969d3352103322516" kindref="member">pub</ref>.<ref refid="struct_pm_device_info_1a9447230099afd8efc3f57906a02f6eba" kindref="member">input</ref><sp/>=<sp/>input;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>descriptors[<ref refid="portmidi_8c_1abf37b57cc544c04b6d27cf33a02b473f" kindref="member">pm_descriptor_index</ref>].<ref refid="structdescriptor__node_1a63b20f87d756eab969d3352103322516" kindref="member">pub</ref>.<ref refid="struct_pm_device_info_1a0e395068e4eee637cc576541884d7e69" kindref="member">output</ref><sp/>=<sp/>!input;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>default<sp/>state:<sp/>nothing<sp/>to<sp/>close<sp/>(for<sp/>automatic<sp/>device<sp/>closing)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>descriptors[<ref refid="portmidi_8c_1abf37b57cc544c04b6d27cf33a02b473f" kindref="member">pm_descriptor_index</ref>].<ref refid="structdescriptor__node_1a63b20f87d756eab969d3352103322516" kindref="member">pub</ref>.<ref refid="struct_pm_device_info_1ab4d3d62344b0c525d444bd844e7d70eb" kindref="member">opened</ref><sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ID<sp/>number<sp/>passed<sp/>to<sp/>win32<sp/>multimedia<sp/>API<sp/>open<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>descriptors[<ref refid="portmidi_8c_1abf37b57cc544c04b6d27cf33a02b473f" kindref="member">pm_descriptor_index</ref>].<ref refid="structdescriptor__node_1a6a355a03bd3961544ca836f2e3fe477a" kindref="member">descriptor</ref><sp/>=<sp/>descriptor;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>points<sp/>to<sp/>PmInternal,<sp/>allows<sp/>automatic<sp/>device<sp/>closing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>descriptors[<ref refid="portmidi_8c_1abf37b57cc544c04b6d27cf33a02b473f" kindref="member">pm_descriptor_index</ref>].<ref refid="structdescriptor__node_1a5e90cf08a561afbc02fa8ac72264bb9a" kindref="member">internalDescriptor</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>descriptors[<ref refid="portmidi_8c_1abf37b57cc544c04b6d27cf33a02b473f" kindref="member">pm_descriptor_index</ref>].<ref refid="structdescriptor__node_1a79791dac344af440b10af2ab9cee26e3" kindref="member">dictionary</ref><sp/>=<sp/>dictionary;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portmidi_8c_1abf37b57cc544c04b6d27cf33a02b473f" kindref="member">pm_descriptor_index</ref>++;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a9545ea325397bd81d2d81bdd7d92cba4" kindref="member">pmNoError</ref>;</highlight></codeline>
<codeline lineno="136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>utility<sp/>to<sp/>look<sp/>up<sp/>device,<sp/>given<sp/>a<sp/>pattern,<sp/></highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/><sp/><sp/>note:<sp/>pattern<sp/>is<sp/>modified</highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142" refid="portmidi_8c_1a7c21a21a0dbab33bf9f3bb9122879142" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="portmidi_8c_1a7c21a21a0dbab33bf9f3bb9122879142" kindref="member">pm_find_default_device</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pattern,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>is_input)</highlight></codeline>
<codeline lineno="143"><highlight class="normal">{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/><ref refid="portmidi_8h_1acffb28dc8bc99dcae9f6a7f35945e1b5" kindref="member">pmNoDevice</ref>;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>first<sp/>parse<sp/>pattern<sp/>into<sp/>name,<sp/>interf<sp/>parts<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*interf_pref<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">/*<sp/>initially<sp/>assume<sp/>it<sp/>is<sp/>not<sp/>there<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name_pref<sp/>=<sp/>strstr(pattern,<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name_pref)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>found<sp/>separator,<sp/>adjust<sp/>the<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interf_pref<sp/>=<sp/>pattern;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name_pref[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name_pref<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name_pref<sp/>=<sp/>pattern;<sp/></highlight><highlight class="comment">/*<sp/>whole<sp/>string<sp/>is<sp/>the<sp/>name<sp/>pattern<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="portmidi_8c_1abf37b57cc544c04b6d27cf33a02b473f" kindref="member">pm_descriptor_index</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_pm_device_info" kindref="compound">PmDeviceInfo</ref><sp/>*<ref refid="lib_2expat_8h_1a20806b446e455c50dc5653b7d43e3de2" kindref="member">info</ref><sp/>=<sp/><ref refid="group__grp__device_1ga2ff3676bcff6077e64ef6f3eb57fb37e" kindref="member">Pm_GetDeviceInfo</ref>(i);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(info-&gt;<ref refid="struct_pm_device_info_1a9447230099afd8efc3f57906a02f6eba" kindref="member">input</ref><sp/>==<sp/>is_input<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strstr(info-&gt;<ref refid="struct_pm_device_info_1a5f708c92e58b1c77454bffeee1d7c61c" kindref="member">name</ref>,<sp/>name_pref)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strstr(info-&gt;<ref refid="struct_pm_device_info_1a8c83e0e882db5a980a007437a806363b" kindref="member">interf</ref>,<sp/>interf_pref))<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>id;</highlight></codeline>
<codeline lineno="167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="171"><highlight class="comment">====================================================================</highlight></codeline>
<codeline lineno="172"><highlight class="comment">portmidi<sp/>implementation</highlight></codeline>
<codeline lineno="173"><highlight class="comment">====================================================================</highlight></codeline>
<codeline lineno="174"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176" refid="portmidi_8h_1aa09d809f5c5bdc5d2fc9b3d2290ec282" refkind="member"><highlight class="normal"><ref refid="portmidi_8h_1ad478fb637833fb6b1a4bdb25a03f4662" kindref="member">PMEXPORT</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="portmidi_8c_1aa09d809f5c5bdc5d2fc9b3d2290ec282" kindref="member">Pm_CountDevices</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portmidi_8c_1a5e9d0c116061f0cc25fb789fc393b417" kindref="member">Pm_Initialize</ref>();</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>no<sp/>error<sp/>checking<sp/>--<sp/>Pm_Initialize()<sp/>does<sp/>not<sp/>fail<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8c_1abf37b57cc544c04b6d27cf33a02b473f" kindref="member">pm_descriptor_index</ref>;</highlight></codeline>
<codeline lineno="180"><highlight class="normal">}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183" refid="group__grp__device_1ga2ff3676bcff6077e64ef6f3eb57fb37e" refkind="member"><highlight class="normal"><ref refid="portmidi_8h_1ad478fb637833fb6b1a4bdb25a03f4662" kindref="member">PMEXPORT</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_pm_device_info" kindref="compound">PmDeviceInfo</ref>*<sp/><ref refid="group__grp__device_1ga2ff3676bcff6077e64ef6f3eb57fb37e" kindref="member">Pm_GetDeviceInfo</ref>(<sp/><ref refid="portmidi_8h_1a696cc4d4360bb8513f13df4bb134098a" kindref="member">PmDeviceID</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portmidi_8c_1a5e9d0c116061f0cc25fb789fc393b417" kindref="member">Pm_Initialize</ref>();<sp/></highlight><highlight class="comment">/*<sp/>no<sp/>error<sp/>check<sp/>needed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&lt;<sp/><ref refid="portmidi_8c_1abf37b57cc544c04b6d27cf33a02b473f" kindref="member">pm_descriptor_index</ref>)<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;descriptors[id].<ref refid="structdescriptor__node_1a63b20f87d756eab969d3352103322516" kindref="member">pub</ref>;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>pm_success_fn<sp/>--<sp/>&quot;noop&quot;<sp/>function<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192" refid="portmidi_8c_1afe35490233517557ab6ce2a63008c7f9" refkind="member"><highlight class="normal"><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/><ref refid="portmidi_8c_1afe35490233517557ab6ce2a63008c7f9" kindref="member">pm_success_fn</ref>(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*<ref refid="midiclock_8c_1a55d909f140b116a12ba644132b67031e" kindref="member">midi</ref>)<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a9545ea325397bd81d2d81bdd7d92cba4" kindref="member">pmNoError</ref>;</highlight></codeline>
<codeline lineno="194"><highlight class="normal">}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>none_write<sp/>--<sp/>returns<sp/>an<sp/>error<sp/>if<sp/>called<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197" refid="portmidi_8c_1a841d04eb4d4efa3eebfc4e718cf9faa3" refkind="member"><highlight class="normal"><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/><ref refid="portmidi_8c_1a841d04eb4d4efa3eebfc4e718cf9faa3" kindref="member">none_write_short</ref>(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*<ref refid="midiclock_8c_1a55d909f140b116a12ba644132b67031e" kindref="member">midi</ref>,<sp/><ref refid="struct_pm_event" kindref="compound">PmEvent</ref><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref>)<sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9ad918f36038e977eb97cd15daa851670c" kindref="member">pmBadPtr</ref>;</highlight></codeline>
<codeline lineno="199"><highlight class="normal">}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>pm_fail_timestamp_fn<sp/>--<sp/>placeholder<sp/>for<sp/>begin_sysex<sp/>and<sp/>flush<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202" refid="portmidi_8c_1a36fcdf715926bc285b87c92005c04523" refkind="member"><highlight class="normal"><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/><ref refid="portmidi_8c_1a36fcdf715926bc285b87c92005c04523" kindref="member">pm_fail_timestamp_fn</ref>(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*<ref refid="midiclock_8c_1a55d909f140b116a12ba644132b67031e" kindref="member">midi</ref>,<sp/><ref refid="portmidi_8h_1acf4245beeef251c4a46d66e99d77ffdf" kindref="member">PmTimestamp</ref><sp/>timestamp)<sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9ad918f36038e977eb97cd15daa851670c" kindref="member">pmBadPtr</ref>;</highlight></codeline>
<codeline lineno="204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206" refid="portmidi_8c_1a2181992bfdc1d719bdd96353763965d7" refkind="member"><highlight class="normal"><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/><ref refid="portmidi_8c_1a2181992bfdc1d719bdd96353763965d7" kindref="member">none_write_byte</ref>(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*<ref refid="midiclock_8c_1a55d909f140b116a12ba644132b67031e" kindref="member">midi</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>byte,<sp/></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portmidi_8h_1acf4245beeef251c4a46d66e99d77ffdf" kindref="member">PmTimestamp</ref><sp/>timestamp)<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9ad918f36038e977eb97cd15daa851670c" kindref="member">pmBadPtr</ref>;</highlight></codeline>
<codeline lineno="209"><highlight class="normal">}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>pm_fail_fn<sp/>--<sp/>generic<sp/>function,<sp/>returns<sp/>error<sp/>if<sp/>called<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212" refid="portmidi_8c_1aeeae549047bfcfbbe3eff9f3857ff77a" refkind="member"><highlight class="normal"><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/><ref refid="portmidi_8c_1aeeae549047bfcfbbe3eff9f3857ff77a" kindref="member">pm_fail_fn</ref>(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*<ref refid="midiclock_8c_1a55d909f140b116a12ba644132b67031e" kindref="member">midi</ref>)<sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9ad918f36038e977eb97cd15daa851670c" kindref="member">pmBadPtr</ref>;</highlight></codeline>
<codeline lineno="214"><highlight class="normal">}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/>none_open(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*<ref refid="midiclock_8c_1a55d909f140b116a12ba644132b67031e" kindref="member">midi</ref>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*driverInfo)<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9ad918f36038e977eb97cd15daa851670c" kindref="member">pmBadPtr</ref>;</highlight></codeline>
<codeline lineno="218"><highlight class="normal">}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>none_get_host_error(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*<sp/>midi,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>msg,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>)<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>*msg<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>empty<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal">}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>none_has_host_error(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*<sp/>midi)<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="224"><highlight class="normal">}</highlight></codeline>
<codeline lineno="225" refid="portmidi_8c_1a9128319a3c3cb967bdde782ae9c5c4ba" refkind="member"><highlight class="normal"><ref refid="portmidi_8h_1acf4245beeef251c4a46d66e99d77ffdf" kindref="member">PmTimestamp</ref><sp/><ref refid="portmidi_8c_1a9128319a3c3cb967bdde782ae9c5c4ba" kindref="member">none_synchronize</ref>(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*midi)<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="227"><highlight class="normal">}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229" refid="portmidi_8c_1a366d307d9adc16df4ed72c0c96d56bd0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>none_abort<sp/>pm_fail_fn</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230" refid="portmidi_8c_1aee20ca803d94f91361fe009179095c90" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>none_close<sp/>pm_fail_fn</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232" refid="portmidi_8c_1a8b038edc211455d61f88e5f9c7773496" refkind="member"><highlight class="normal"><ref refid="structpm__fns__node" kindref="compound">pm_fns_node</ref><sp/><ref refid="portmidi_8c_1a8b038edc211455d61f88e5f9c7773496" kindref="member">pm_none_dictionary</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portmidi_8c_1a841d04eb4d4efa3eebfc4e718cf9faa3" kindref="member">none_write_short</ref>,</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1ac44b30c88f5076903c62f9e8fc8c51ec" kindref="member">none_sysex</ref>,</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1ac44b30c88f5076903c62f9e8fc8c51ec" kindref="member">none_sysex</ref>,</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portmidi_8c_1a2181992bfdc1d719bdd96353763965d7" kindref="member">none_write_byte</ref>,</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portmidi_8c_1a841d04eb4d4efa3eebfc4e718cf9faa3" kindref="member">none_write_short</ref>,</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1a1381cf29da7767a1db6c268b7941a6f8" kindref="member">none_write_flush</ref>,</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portmidi_8c_1a9128319a3c3cb967bdde782ae9c5c4ba" kindref="member">none_synchronize</ref>,</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>none_open,</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portmidi_8c_1a366d307d9adc16df4ed72c0c96d56bd0" kindref="member">none_abort</ref>,<sp/></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portmidi_8c_1aee20ca803d94f91361fe009179095c90" kindref="member">none_close</ref>,</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1a7b782f381e349f7b220b925bcdf9c9c1" kindref="member">none_poll</ref>,</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>none_has_host_error,</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>none_get_host_error<sp/></highlight></codeline>
<codeline lineno="246"><highlight class="normal">};</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249" refid="portmidi_8h_1af6f9fa86b2192d5df87a36762f43b1a4" refkind="member"><highlight class="normal"><ref refid="portmidi_8h_1ad478fb637833fb6b1a4bdb25a03f4662" kindref="member">PMEXPORT</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="portmidi_8c_1af6f9fa86b2192d5df87a36762f43b1a4" kindref="member">Pm_GetErrorText</ref>(<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/>errnum<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*msg;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(errnum)</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a9545ea325397bd81d2d81bdd7d92cba4" kindref="member">pmNoError</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a29400da63af0c60becca3e04a2c75fe5" kindref="member">pmHostError</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;PortMidi:<sp/>`Host<sp/>error&apos;&quot;</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a629c26e14c9bdac6e1688803f28ecd80" kindref="member">pmInvalidDeviceId</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;PortMidi:<sp/>`Invalid<sp/>device<sp/>ID&apos;&quot;</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a2cd8d4985678f6c92748dcc1177a2512" kindref="member">pmInsufficientMemory</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;PortMidi:<sp/>`Insufficient<sp/>memory&apos;&quot;</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a841c43f85852dadb379f564e431b1c8e" kindref="member">pmBufferTooSmall</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;PortMidi:<sp/>`Buffer<sp/>too<sp/>small&apos;&quot;</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9ad918f36038e977eb97cd15daa851670c" kindref="member">pmBadPtr</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;PortMidi:<sp/>`Bad<sp/>pointer&apos;&quot;</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a0336e20f5dbbfada95d2f24f71807c5c" kindref="member">pmInternalError</ref>:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;PortMidi:<sp/>`Internal<sp/>PortMidi<sp/>Error&apos;&quot;</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a3f41a487d89c058e39108822b2648695" kindref="member">pmBufferOverflow</ref>:</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;PortMidi:<sp/>`Buffer<sp/>overflow&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9afbf8f78a5f50d032831a97bc40477451" kindref="member">pmBadData</ref>:</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;PortMidi:<sp/>`Invalid<sp/>MIDI<sp/>message<sp/>Data&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9abb1810fb6d5f45ea7c3a6098d5a4853d" kindref="member">pmBufferMaxSize</ref>:</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;PortMidi:<sp/>`Buffer<sp/>cannot<sp/>be<sp/>made<sp/>larger&apos;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;PortMidi:<sp/>`Illegal<sp/>error<sp/>number&apos;&quot;</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>msg;</highlight></codeline>
<codeline lineno="289"><highlight class="normal">}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>can<sp/>be<sp/>called<sp/>whenever<sp/>you<sp/>get<sp/>a<sp/>pmHostError<sp/>return<sp/>value.</highlight></codeline>
<codeline lineno="293"><highlight class="comment"><sp/>*<sp/>The<sp/>error<sp/>will<sp/>always<sp/>be<sp/>in<sp/>the<sp/>global<sp/>pm_hosterror_text.</highlight></codeline>
<codeline lineno="294"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295" refid="portmidi_8h_1ae5dd1f766c2d1f492ab4a9a4a6da651f" refkind="member"><highlight class="normal"><ref refid="portmidi_8h_1ad478fb637833fb6b1a4bdb25a03f4662" kindref="member">PMEXPORT</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="portmidi_8c_1ae5dd1f766c2d1f492ab4a9a4a6da651f" kindref="member">Pm_GetHostErrorText</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>msg,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>)<sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(msg);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(len<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="portmidi_8c_1af455cd83ef19eb07a7996c38dd806ee4" kindref="member">pm_hosterror</ref>)<sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strncpy(msg,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/><ref refid="portmidi_8c_1ac24a8881f0ef8c3a944349bee479cf05" kindref="member">pm_hosterror_text</ref>,<sp/>len);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portmidi_8c_1af455cd83ef19eb07a7996c38dd806ee4" kindref="member">pm_hosterror</ref><sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portmidi_8c_1ac24a8881f0ef8c3a944349bee479cf05" kindref="member">pm_hosterror_text</ref>[0]<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>clear<sp/>the<sp/>message;<sp/>not<sp/>necessary,<sp/>but<sp/>it</highlight></codeline>
<codeline lineno="302"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>might<sp/>help<sp/>with<sp/>debugging<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg[len<sp/>-<sp/>1]<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>make<sp/>sure<sp/>string<sp/>is<sp/>terminated<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg[0]<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>no<sp/>string<sp/>to<sp/>return<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal">}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310" refid="portmidi_8h_1aa631918a228994f19bed5dcbc398d59a" refkind="member"><highlight class="normal"><ref refid="portmidi_8h_1ad478fb637833fb6b1a4bdb25a03f4662" kindref="member">PMEXPORT</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="portmidi_8c_1aa631918a228994f19bed5dcbc398d59a" kindref="member">Pm_HasHostError</ref>(<ref refid="portmidi_8h_1af4949219ee1bb0afc857cb242d123914" kindref="member">PortMidiStream</ref><sp/>*<sp/>stream)<sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="portmidi_8c_1af455cd83ef19eb07a7996c38dd806ee4" kindref="member">pm_hosterror</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stream)<sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*<sp/>midi<sp/>=<sp/>(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*)<sp/>stream;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portmidi_8c_1af455cd83ef19eb07a7996c38dd806ee4" kindref="member">pm_hosterror</ref><sp/>=<sp/>(*midi-&gt;<ref refid="structpm__internal__struct_1a0674a7a8d17ca8d00df7ac6594b01f17" kindref="member">dictionary</ref>-&gt;<ref refid="structpm__fns__node_1a06e0f8783e9b2809d2c0df54c003834b" kindref="member">has_host_error</ref>)(midi);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="portmidi_8c_1af455cd83ef19eb07a7996c38dd806ee4" kindref="member">pm_hosterror</ref>)<sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1a0674a7a8d17ca8d00df7ac6594b01f17" kindref="member">dictionary</ref>-&gt;<ref refid="structpm__fns__node_1aa85a8201a70439167b4df4dc4c82abf6" kindref="member">host_error</ref>(midi,<sp/><ref refid="portmidi_8c_1ac24a8881f0ef8c3a944349bee479cf05" kindref="member">pm_hosterror_text</ref>,<sp/></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portmidi_8h_1a40b1b3ff3147b3e0dff5843911345c8e" kindref="member">PM_HOST_ERROR_MSG_LEN</ref>);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>now<sp/>error<sp/>message<sp/>is<sp/>global<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="323"><highlight class="normal">}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326" refid="portmidi_8h_1a5e9d0c116061f0cc25fb789fc393b417" refkind="member"><highlight class="normal"><ref refid="portmidi_8h_1ad478fb637833fb6b1a4bdb25a03f4662" kindref="member">PMEXPORT</ref><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/><ref refid="portmidi_8c_1a5e9d0c116061f0cc25fb789fc393b417" kindref="member">Pm_Initialize</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="portmidi_8c_1ad503ee62c76e6fe2beef957f0fe53488" kindref="member">pm_initialized</ref>)<sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portmidi_8c_1af455cd83ef19eb07a7996c38dd806ee4" kindref="member">pm_hosterror</ref><sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portmidi_8c_1ac24a8881f0ef8c3a944349bee479cf05" kindref="member">pm_hosterror_text</ref>[0]<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>the<sp/>null<sp/>string<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1a2f05280c58e66ae51481d75ed4f7c97c" kindref="member">pm_init</ref>();</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portmidi_8c_1ad503ee62c76e6fe2beef957f0fe53488" kindref="member">pm_initialized</ref><sp/>=<sp/><ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a9545ea325397bd81d2d81bdd7d92cba4" kindref="member">pmNoError</ref>;</highlight></codeline>
<codeline lineno="334"><highlight class="normal">}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337" refid="portmidi_8h_1a6c5dd5cd3657ac1cdab6bc5f3063193e" refkind="member"><highlight class="normal"><ref refid="portmidi_8h_1ad478fb637833fb6b1a4bdb25a03f4662" kindref="member">PMEXPORT</ref><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/><ref refid="portmidi_8c_1a6c5dd5cd3657ac1cdab6bc5f3063193e" kindref="member">Pm_Terminate</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="portmidi_8c_1ad503ee62c76e6fe2beef957f0fe53488" kindref="member">pm_initialized</ref>)<sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1ae37207f7de0c907cc3eb8f837e91b9b0" kindref="member">pm_term</ref>();</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>there<sp/>are<sp/>no<sp/>devices,<sp/>descriptors<sp/>might<sp/>still<sp/>be<sp/>NULL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(descriptors<sp/>!=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(descriptors);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>descriptors<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portmidi_8c_1abf37b57cc544c04b6d27cf33a02b473f" kindref="member">pm_descriptor_index</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portmidi_8c_1a9ffc95d4de3ed10d1efcac1d79e39f11" kindref="member">pm_descriptor_max</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portmidi_8c_1ad503ee62c76e6fe2beef957f0fe53488" kindref="member">pm_initialized</ref><sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a9545ea325397bd81d2d81bdd7d92cba4" kindref="member">pmNoError</ref>;</highlight></codeline>
<codeline lineno="350"><highlight class="normal">}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Pm_Read<sp/>--<sp/>read<sp/>up<sp/>to<sp/>length<sp/>messages<sp/>from<sp/>source<sp/>into<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="355"><highlight class="comment"><sp/>*<sp/>returns<sp/>number<sp/>of<sp/>messages<sp/>actually<sp/>read,<sp/>or<sp/>error<sp/>code</highlight></codeline>
<codeline lineno="356"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357" refid="group__grp__io_1ga3d59225bc890ede974f245ada3de6456" refkind="member"><highlight class="normal"><ref refid="portmidi_8h_1ad478fb637833fb6b1a4bdb25a03f4662" kindref="member">PMEXPORT</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__grp__io_1ga3d59225bc890ede974f245ada3de6456" kindref="member">Pm_Read</ref>(<ref refid="portmidi_8h_1af4949219ee1bb0afc857cb242d123914" kindref="member">PortMidiStream</ref><sp/>*stream,<sp/><ref refid="struct_pm_event" kindref="compound">PmEvent</ref><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref>,<sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a37994e3b11c72957c6f454c6ec96d43d" kindref="member">int32_t</ref><sp/><ref refid="test__lib_f_l_a_c_2format_8c_1ac94dc16b22556ba5fa815655f27442da" kindref="member">length</ref>)<sp/>{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*midi<sp/>=<sp/>(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*)<sp/>stream;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/>err<sp/>=<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a9545ea325397bd81d2d81bdd7d92cba4" kindref="member">pmNoError</ref>;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portmidi_8c_1af455cd83ef19eb07a7996c38dd806ee4" kindref="member">pm_hosterror</ref><sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>arg<sp/>checking<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(midi<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9ad918f36038e977eb97cd15daa851670c" kindref="member">pmBadPtr</ref>;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!descriptors[midi-&gt;<ref refid="structpm__internal__struct_1a6434c3e3e21fad6289c32c480e13edd5" kindref="member">device_id</ref>].<ref refid="structdescriptor__node_1a63b20f87d756eab969d3352103322516" kindref="member">pub</ref>.<ref refid="struct_pm_device_info_1ab4d3d62344b0c525d444bd844e7d70eb" kindref="member">opened</ref>)</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9ad918f36038e977eb97cd15daa851670c" kindref="member">pmBadPtr</ref>;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!descriptors[midi-&gt;<ref refid="structpm__internal__struct_1a6434c3e3e21fad6289c32c480e13edd5" kindref="member">device_id</ref>].<ref refid="structdescriptor__node_1a63b20f87d756eab969d3352103322516" kindref="member">pub</ref>.<ref refid="struct_pm_device_info_1a9447230099afd8efc3f57906a02f6eba" kindref="member">input</ref>)</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9ad918f36038e977eb97cd15daa851670c" kindref="member">pmBadPtr</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>First<sp/>poll<sp/>for<sp/>data<sp/>in<sp/>the<sp/>buffer...</highlight></codeline>
<codeline lineno="370"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>This<sp/>either<sp/>simply<sp/>checks<sp/>for<sp/>data,<sp/>or<sp/>attempts<sp/>first<sp/>to<sp/>fill<sp/>the<sp/>buffer</highlight></codeline>
<codeline lineno="371"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>with<sp/>data<sp/>from<sp/>the<sp/>MIDI<sp/>hardware;<sp/>this<sp/>depends<sp/>on<sp/>the<sp/>implementation.</highlight></codeline>
<codeline lineno="372"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>We<sp/>could<sp/>call<sp/>Pm_Poll<sp/>here,<sp/>but<sp/>that<sp/>would<sp/>redo<sp/>a<sp/>lot<sp/>of<sp/>redundant</highlight></codeline>
<codeline lineno="373"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>parameter<sp/>checking,<sp/>so<sp/>I<sp/>copied<sp/>some<sp/>code<sp/>from<sp/>Pm_Poll<sp/>to<sp/>here:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>err<sp/>=<sp/>(*(midi-&gt;<ref refid="structpm__internal__struct_1a0674a7a8d17ca8d00df7ac6594b01f17" kindref="member">dictionary</ref>-&gt;<ref refid="structpm__fns__node_1a182a3f95a854ae3e4f89864a0476f90b" kindref="member">poll</ref>))(<ref refid="midiclock_8c_1a55d909f140b116a12ba644132b67031e" kindref="member">midi</ref>);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a9545ea325397bd81d2d81bdd7d92cba4" kindref="member">pmNoError</ref>)<sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>==<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a29400da63af0c60becca3e04a2c75fe5" kindref="member">pmHostError</ref>)<sp/>{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1a0674a7a8d17ca8d00df7ac6594b01f17" kindref="member">dictionary</ref>-&gt;<ref refid="structpm__fns__node_1aa85a8201a70439167b4df4dc4c82abf6" kindref="member">host_error</ref>(midi,<sp/><ref refid="portmidi_8c_1ac24a8881f0ef8c3a944349bee479cf05" kindref="member">pm_hosterror_text</ref>,<sp/></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portmidi_8h_1a40b1b3ff3147b3e0dff5843911345c8e" kindref="member">PM_HOST_ERROR_MSG_LEN</ref>);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portmidi_8c_1af455cd83ef19eb07a7996c38dd806ee4" kindref="member">pm_hosterror</ref><sp/>=<sp/><ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8c_1a1e3fc08b00e2542c99314d01844afd2c" kindref="member">pm_errmsg</ref>(err);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(n<sp/>&lt;<sp/>length)<sp/>{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/>err<sp/>=<sp/><ref refid="pmutil_8c_1aa1fa17b38e0037c212b1b69a55f0cd00" kindref="member">Pm_Dequeue</ref>(midi-&gt;<ref refid="structpm__internal__struct_1a883e467783d250a41089efa00df2bb4c" kindref="member">queue</ref>,<sp/>buffer++);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>==<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a3f41a487d89c058e39108822b2648695" kindref="member">pmBufferOverflow</ref>)<sp/>{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ignore<sp/>the<sp/>data<sp/>we<sp/>have<sp/>retreived<sp/>so<sp/>far<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8c_1a1e3fc08b00e2542c99314d01844afd2c" kindref="member">pm_errmsg</ref>(<ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a3f41a487d89c058e39108822b2648695" kindref="member">pmBufferOverflow</ref>);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>==<sp/>0)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>empty<sp/>queue<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n++;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="396"><highlight class="normal">}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398" refid="group__grp__io_1ga54198ca9dc1af9d82ec5f44f661faeea" refkind="member"><highlight class="normal"><ref refid="portmidi_8h_1ad478fb637833fb6b1a4bdb25a03f4662" kindref="member">PMEXPORT</ref><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/><ref refid="group__grp__io_1ga54198ca9dc1af9d82ec5f44f661faeea" kindref="member">Pm_Poll</ref>(<sp/><ref refid="portmidi_8h_1af4949219ee1bb0afc857cb242d123914" kindref="member">PortMidiStream</ref><sp/>*stream<sp/>)</highlight></codeline>
<codeline lineno="399"><highlight class="normal">{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*midi<sp/>=<sp/>(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*)<sp/>stream;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/>err;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portmidi_8c_1af455cd83ef19eb07a7996c38dd806ee4" kindref="member">pm_hosterror</ref><sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>arg<sp/>checking<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(midi<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9ad918f36038e977eb97cd15daa851670c" kindref="member">pmBadPtr</ref>;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!descriptors[midi-&gt;<ref refid="structpm__internal__struct_1a6434c3e3e21fad6289c32c480e13edd5" kindref="member">device_id</ref>].<ref refid="structdescriptor__node_1a63b20f87d756eab969d3352103322516" kindref="member">pub</ref>.<ref refid="struct_pm_device_info_1ab4d3d62344b0c525d444bd844e7d70eb" kindref="member">opened</ref>)</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9ad918f36038e977eb97cd15daa851670c" kindref="member">pmBadPtr</ref>;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!descriptors[midi-&gt;<ref refid="structpm__internal__struct_1a6434c3e3e21fad6289c32c480e13edd5" kindref="member">device_id</ref>].<ref refid="structdescriptor__node_1a63b20f87d756eab969d3352103322516" kindref="member">pub</ref>.<ref refid="struct_pm_device_info_1a9447230099afd8efc3f57906a02f6eba" kindref="member">input</ref>)</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9ad918f36038e977eb97cd15daa851670c" kindref="member">pmBadPtr</ref>;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>(*(midi-&gt;<ref refid="structpm__internal__struct_1a0674a7a8d17ca8d00df7ac6594b01f17" kindref="member">dictionary</ref>-&gt;<ref refid="structpm__fns__node_1a182a3f95a854ae3e4f89864a0476f90b" kindref="member">poll</ref>))(<ref refid="midiclock_8c_1a55d909f140b116a12ba644132b67031e" kindref="member">midi</ref>);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a9545ea325397bd81d2d81bdd7d92cba4" kindref="member">pmNoError</ref>)<sp/>{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>==<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a29400da63af0c60becca3e04a2c75fe5" kindref="member">pmHostError</ref>)<sp/>{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1a0674a7a8d17ca8d00df7ac6594b01f17" kindref="member">dictionary</ref>-&gt;<ref refid="structpm__fns__node_1aa85a8201a70439167b4df4dc4c82abf6" kindref="member">host_error</ref>(midi,<sp/><ref refid="portmidi_8c_1ac24a8881f0ef8c3a944349bee479cf05" kindref="member">pm_hosterror_text</ref>,<sp/></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portmidi_8h_1a40b1b3ff3147b3e0dff5843911345c8e" kindref="member">PM_HOST_ERROR_MSG_LEN</ref>);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portmidi_8c_1af455cd83ef19eb07a7996c38dd806ee4" kindref="member">pm_hosterror</ref><sp/>=<sp/><ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8c_1a1e3fc08b00e2542c99314d01844afd2c" kindref="member">pm_errmsg</ref>(err);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref>)<sp/>!<ref refid="pmutil_8c_1a2d5a41d8cf27bc955442685a58ac8782" kindref="member">Pm_QueueEmpty</ref>(midi-&gt;<ref refid="structpm__internal__struct_1a883e467783d250a41089efa00df2bb4c" kindref="member">queue</ref>);</highlight></codeline>
<codeline lineno="424"><highlight class="normal">}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>this<sp/>is<sp/>called<sp/>from<sp/>Pm_Write<sp/>and<sp/>Pm_WriteSysEx<sp/>to<sp/>issue<sp/>a</highlight></codeline>
<codeline lineno="428"><highlight class="comment"><sp/>*<sp/>call<sp/>to<sp/>the<sp/>system-dependent<sp/>end_sysex<sp/>function<sp/>and<sp/>handle<sp/></highlight></codeline>
<codeline lineno="429"><highlight class="comment"><sp/>*<sp/>the<sp/>error<sp/>return</highlight></codeline>
<codeline lineno="430"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/>pm_end_sysex(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*midi)</highlight></codeline>
<codeline lineno="432"><highlight class="normal">{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/>err<sp/>=<sp/>(*midi-&gt;<ref refid="structpm__internal__struct_1a0674a7a8d17ca8d00df7ac6594b01f17" kindref="member">dictionary</ref>-&gt;<ref refid="structpm__fns__node_1a352068a30a5315dc035c67a89a063acc" kindref="member">end_sysex</ref>)(midi,<sp/>0);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1abf9a68e60ff9e12d776af6807aa1467a" kindref="member">sysex_in_progress</ref><sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>==<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a29400da63af0c60becca3e04a2c75fe5" kindref="member">pmHostError</ref>)<sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1a0674a7a8d17ca8d00df7ac6594b01f17" kindref="member">dictionary</ref>-&gt;<ref refid="structpm__fns__node_1aa85a8201a70439167b4df4dc4c82abf6" kindref="member">host_error</ref>(midi,<sp/><ref refid="portmidi_8c_1ac24a8881f0ef8c3a944349bee479cf05" kindref="member">pm_hosterror_text</ref>,<sp/></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portmidi_8h_1a40b1b3ff3147b3e0dff5843911345c8e" kindref="member">PM_HOST_ERROR_MSG_LEN</ref>);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portmidi_8c_1af455cd83ef19eb07a7996c38dd806ee4" kindref="member">pm_hosterror</ref><sp/>=<sp/><ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="441"><highlight class="normal">}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>to<sp/>facilitate<sp/>correct<sp/>error-handling,<sp/>Pm_Write,<sp/>Pm_WriteShort,<sp/>and</highlight></codeline>
<codeline lineno="445"><highlight class="comment"><sp/><sp/><sp/>Pm_WriteSysEx<sp/>all<sp/>operate<sp/>a<sp/>state<sp/>machine<sp/>that<sp/>&quot;outputs&quot;<sp/>calls<sp/>to</highlight></codeline>
<codeline lineno="446"><highlight class="comment"><sp/><sp/><sp/>write_short,<sp/>begin_sysex,<sp/>write_byte,<sp/>end_sysex,<sp/>and<sp/>write_realtime<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448" refid="group__grp__io_1ga82950117f003d28f9ca6536c00af985a" refkind="member"><highlight class="normal"><ref refid="portmidi_8h_1ad478fb637833fb6b1a4bdb25a03f4662" kindref="member">PMEXPORT</ref><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/><ref refid="group__grp__io_1ga82950117f003d28f9ca6536c00af985a" kindref="member">Pm_Write</ref>(<sp/><ref refid="portmidi_8h_1af4949219ee1bb0afc857cb242d123914" kindref="member">PortMidiStream</ref><sp/>*stream,<sp/><ref refid="struct_pm_event" kindref="compound">PmEvent</ref><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref>,<sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a37994e3b11c72957c6f454c6ec96d43d" kindref="member">int32_t</ref><sp/><ref refid="test__lib_f_l_a_c_2format_8c_1ac94dc16b22556ba5fa815655f27442da" kindref="member">length</ref>)</highlight></codeline>
<codeline lineno="449"><highlight class="normal">{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*midi<sp/>=<sp/>(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*)<sp/>stream;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/>err<sp/>=<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a9545ea325397bd81d2d81bdd7d92cba4" kindref="member">pmNoError</ref>;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="metrics_8c_1a1eb8fc809d37cc6176f7f27374b063d0" kindref="member">bits</ref>;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portmidi_8c_1af455cd83ef19eb07a7996c38dd806ee4" kindref="member">pm_hosterror</ref><sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>arg<sp/>checking<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(midi<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9ad918f36038e977eb97cd15daa851670c" kindref="member">pmBadPtr</ref>;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!descriptors[midi-&gt;<ref refid="structpm__internal__struct_1a6434c3e3e21fad6289c32c480e13edd5" kindref="member">device_id</ref>].<ref refid="structdescriptor__node_1a63b20f87d756eab969d3352103322516" kindref="member">pub</ref>.<ref refid="struct_pm_device_info_1ab4d3d62344b0c525d444bd844e7d70eb" kindref="member">opened</ref>)</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9ad918f36038e977eb97cd15daa851670c" kindref="member">pmBadPtr</ref>;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!descriptors[midi-&gt;<ref refid="structpm__internal__struct_1a6434c3e3e21fad6289c32c480e13edd5" kindref="member">device_id</ref>].<ref refid="structdescriptor__node_1a63b20f87d756eab969d3352103322516" kindref="member">pub</ref>.<ref refid="struct_pm_device_info_1a0e395068e4eee637cc576541884d7e69" kindref="member">output</ref>)</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9ad918f36038e977eb97cd15daa851670c" kindref="member">pmBadPtr</ref>;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a9545ea325397bd81d2d81bdd7d92cba4" kindref="member">pmNoError</ref>;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a9545ea325397bd81d2d81bdd7d92cba4" kindref="member">pmNoError</ref>)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>pm_write_error;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(midi-&gt;<ref refid="structpm__internal__struct_1ad1458cf67c24a176a66dd8350c50ac0a" kindref="member">latency</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1ab7152c01f41a2c1c416b6720bc81c220" kindref="member">now</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1ab7152c01f41a2c1c416b6720bc81c220" kindref="member">now</ref><sp/>=<sp/>(*(midi-&gt;<ref refid="structpm__internal__struct_1aa2268f6b4916d4ae3de765d880bc8641" kindref="member">time_proc</ref>))(midi-&gt;<ref refid="structpm__internal__struct_1ac3ee4fe374d89f3040708206648acb07" kindref="member">time_info</ref>);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(midi-&gt;<ref refid="structpm__internal__struct_1a979eb48d9b3872a1c4a68cd1e8022e65" kindref="member">first_message</ref><sp/>||<sp/>midi-&gt;<ref refid="structpm__internal__struct_1a44a7aab14a2defa36ecb73143d541aa6" kindref="member">sync_time</ref><sp/>+<sp/>100<sp/></highlight><highlight class="comment">/*ms*/</highlight><highlight class="normal"><sp/>&lt;<sp/>midi-&gt;<ref refid="structpm__internal__struct_1ab7152c01f41a2c1c416b6720bc81c220" kindref="member">now</ref>)<sp/>{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>time<sp/>to<sp/>resync<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1ab7152c01f41a2c1c416b6720bc81c220" kindref="member">now</ref><sp/>=<sp/>(*midi-&gt;<ref refid="structpm__internal__struct_1a0674a7a8d17ca8d00df7ac6594b01f17" kindref="member">dictionary</ref>-&gt;<ref refid="structpm__fns__node_1add292a3d1444e53bd42a71e9f9fad60c" kindref="member">synchronize</ref>)(midi);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1a979eb48d9b3872a1c4a68cd1e8022e65" kindref="member">first_message</ref><sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>error<sp/>recovery:<sp/>when<sp/>a<sp/>sysex<sp/>is<sp/>detected,<sp/>we<sp/>call</highlight></codeline>
<codeline lineno="479"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>dictionary-&gt;begin_sysex()<sp/>followed<sp/>by<sp/>calls<sp/>to</highlight></codeline>
<codeline lineno="480"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>dictionary-&gt;write_byte()<sp/>and<sp/>dictionary-&gt;write_realtime()</highlight></codeline>
<codeline lineno="481"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>until<sp/>an<sp/>end-of-sysex<sp/>is<sp/>detected,<sp/>when<sp/>we<sp/>call</highlight></codeline>
<codeline lineno="482"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>dictionary-&gt;end_sysex().<sp/>After<sp/>an<sp/>error<sp/>occurs,<sp/></highlight></codeline>
<codeline lineno="483"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>Pm_Write()<sp/>continues<sp/>to<sp/>call<sp/>functions.<sp/>For<sp/>example,</highlight></codeline>
<codeline lineno="484"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>it<sp/>will<sp/>continue<sp/>to<sp/>call<sp/>write_byte()<sp/>even<sp/>after</highlight></codeline>
<codeline lineno="485"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>an<sp/>error<sp/>sending<sp/>a<sp/>sysex<sp/>message,<sp/>and<sp/>end_sysex()<sp/>will<sp/>be</highlight></codeline>
<codeline lineno="486"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>called<sp/>when<sp/>an<sp/>EOX<sp/>or<sp/>non-real-time<sp/>status<sp/>is<sp/>found.</highlight></codeline>
<codeline lineno="487"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>When<sp/>errors<sp/>are<sp/>detected,<sp/>Pm_Write()<sp/>returns<sp/>immediately,<sp/></highlight></codeline>
<codeline lineno="488"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>so<sp/>it<sp/>is<sp/>possible<sp/>that<sp/>this<sp/>will<sp/>drop<sp/>data<sp/>and<sp/>leave</highlight></codeline>
<codeline lineno="489"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>sysex<sp/>messages<sp/>in<sp/>a<sp/>partially<sp/>transmitted<sp/>state.</highlight></codeline>
<codeline lineno="490"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="test__lib_f_l_a_c_2format_8c_1ac94dc16b22556ba5fa815655f27442da" kindref="member">length</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref><sp/>msg<sp/>=<sp/>buffer[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].<ref refid="struct_pm_event_1a2c8c12542447fdd566401fbf1a83d4e2" kindref="member">message</ref>;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bits<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>is<sp/>this<sp/>a<sp/>sysex<sp/>message?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__grp__events__filters_1ga729fed9ce1244a4052ef68527706eaf9" kindref="member">Pm_MessageStatus</ref>(msg)<sp/>==<sp/><ref refid="portmidi_8c_1aa2197f6ca200566c0986e737edd211e4" kindref="member">MIDI_SYSEX</ref>)<sp/>{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(midi-&gt;<ref refid="structpm__internal__struct_1abf9a68e60ff9e12d776af6807aa1467a" kindref="member">sysex_in_progress</ref>)<sp/>{</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>error:<sp/>previous<sp/>sysex<sp/>was<sp/>not<sp/>terminated<sp/>by<sp/>EOX<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1abf9a68e60ff9e12d776af6807aa1467a" kindref="member">sysex_in_progress</ref><sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9afbf8f78a5f50d032831a97bc40477451" kindref="member">pmBadData</ref>;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>pm_write_error;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1abf9a68e60ff9e12d776af6807aa1467a" kindref="member">sysex_in_progress</ref><sp/>=<sp/><ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((err<sp/>=<sp/>(*midi-&gt;<ref refid="structpm__internal__struct_1a0674a7a8d17ca8d00df7ac6594b01f17" kindref="member">dictionary</ref>-&gt;<ref refid="structpm__fns__node_1a7374e2a3111143034266df5025dbd55d" kindref="member">begin_sysex</ref>)(<ref refid="midiclock_8c_1a55d909f140b116a12ba644132b67031e" kindref="member">midi</ref>,<sp/></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].<ref refid="struct_pm_event_1a3854d39e3b89e1e2a4e1fda8d85c2f16" kindref="member">timestamp</ref>))<sp/>!=<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a9545ea325397bd81d2d81bdd7d92cba4" kindref="member">pmNoError</ref>)</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>pm_write_error;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((err<sp/>=<sp/>(*midi-&gt;<ref refid="structpm__internal__struct_1a0674a7a8d17ca8d00df7ac6594b01f17" kindref="member">dictionary</ref>-&gt;<ref refid="structpm__fns__node_1af5b068dc9632efbb967b37f2fbb65d75" kindref="member">write_byte</ref>)(<ref refid="midiclock_8c_1a55d909f140b116a12ba644132b67031e" kindref="member">midi</ref>,<sp/><ref refid="portmidi_8c_1aa2197f6ca200566c0986e737edd211e4" kindref="member">MIDI_SYSEX</ref>,</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].<ref refid="struct_pm_event_1a3854d39e3b89e1e2a4e1fda8d85c2f16" kindref="member">timestamp</ref>))<sp/>!=<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a9545ea325397bd81d2d81bdd7d92cba4" kindref="member">pmNoError</ref>)<sp/></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>pm_write_error;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bits<sp/>=<sp/>8;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>fall<sp/>through<sp/>to<sp/>continue<sp/>sysex<sp/>processing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((msg<sp/>&amp;<sp/><ref refid="portmidi_8c_1a1ee2586a063422ec7d18e2abfbafa545" kindref="member">MIDI_STATUS_MASK</ref>)<sp/>&amp;&amp;<sp/></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="group__grp__events__filters_1ga729fed9ce1244a4052ef68527706eaf9" kindref="member">Pm_MessageStatus</ref>(msg)<sp/>!=<sp/><ref refid="portmidi_8c_1a140c8cfa4bbf1a03494abdbd639d49f2" kindref="member">MIDI_EOX</ref>))<sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>a<sp/>non-sysex<sp/>message<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(midi-&gt;<ref refid="structpm__internal__struct_1abf9a68e60ff9e12d776af6807aa1467a" kindref="member">sysex_in_progress</ref>)<sp/>{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>this<sp/>should<sp/>be<sp/>a<sp/>realtime<sp/>message<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="pminternal_8h_1a2f568a0e90e538fe251a2a2fcc1004ec" kindref="member">is_real_time</ref>(msg))<sp/>{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((err<sp/>=<sp/>(*midi-&gt;<ref refid="structpm__internal__struct_1a0674a7a8d17ca8d00df7ac6594b01f17" kindref="member">dictionary</ref>-&gt;<ref refid="structpm__fns__node_1a43aa6c0c76ae0d235fde4a0afce51cf8" kindref="member">write_realtime</ref>)(<ref refid="midiclock_8c_1a55d909f140b116a12ba644132b67031e" kindref="member">midi</ref>,<sp/></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(buffer[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>])))<sp/>!=<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a9545ea325397bd81d2d81bdd7d92cba4" kindref="member">pmNoError</ref>)</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>pm_write_error;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1abf9a68e60ff9e12d776af6807aa1467a" kindref="member">sysex_in_progress</ref><sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9afbf8f78a5f50d032831a97bc40477451" kindref="member">pmBadData</ref>;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ignore<sp/>any<sp/>error<sp/>from<sp/>this,<sp/>because<sp/>we<sp/>already<sp/>have<sp/>one<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>pass<sp/>0<sp/>as<sp/>timestamp<sp/>--<sp/>it&apos;s<sp/>ignored<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*midi-&gt;<ref refid="structpm__internal__struct_1a0674a7a8d17ca8d00df7ac6594b01f17" kindref="member">dictionary</ref>-&gt;<ref refid="structpm__fns__node_1a352068a30a5315dc035c67a89a063acc" kindref="member">end_sysex</ref>)(midi,<sp/>0);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>pm_write_error;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>regular<sp/>short<sp/>midi<sp/>message<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((err<sp/>=<sp/>(*midi-&gt;<ref refid="structpm__internal__struct_1a0674a7a8d17ca8d00df7ac6594b01f17" kindref="member">dictionary</ref>-&gt;<ref refid="structpm__fns__node_1a9ab405eee09c3e4ee7e145c3d0b20d44" kindref="member">write_short</ref>)(<ref refid="midiclock_8c_1a55d909f140b116a12ba644132b67031e" kindref="member">midi</ref>,<sp/></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(buffer[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>])))<sp/>!=<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a9545ea325397bd81d2d81bdd7d92cba4" kindref="member">pmNoError</ref>)</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>pm_write_error;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(midi-&gt;<ref refid="structpm__internal__struct_1abf9a68e60ff9e12d776af6807aa1467a" kindref="member">sysex_in_progress</ref>)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>send<sp/>sysex<sp/>bytes<sp/>until<sp/>EOX<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>see<sp/>if<sp/>we<sp/>can<sp/>accelerate<sp/>data<sp/>transfer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bits<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>midi-&gt;<ref refid="structpm__internal__struct_1ad789ea60604e466b9de67da9e6cbe1e9" kindref="member">fill_base</ref><sp/>&amp;&amp;<sp/></highlight><highlight class="comment">/*<sp/>4<sp/>bytes<sp/>to<sp/>copy<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*midi-&gt;<ref refid="structpm__internal__struct_1aed1fd15de450d744b52a7a38e15408da" kindref="member">fill_offset_ptr</ref>)<sp/>+<sp/>4<sp/>&lt;=<sp/>midi-&gt;<ref refid="structpm__internal__struct_1a6a16a79f905138e1a5a3fe3b9529627f" kindref="member">fill_length</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(msg<sp/>&amp;<sp/>0x80808080)<sp/>==<sp/>0)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>all<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>4<sp/>bytes<sp/>from<sp/>msg<sp/>to<sp/>fill_base<sp/>+<sp/>fill_offset<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ptr<sp/>=<sp/>midi-&gt;<ref refid="structpm__internal__struct_1ad789ea60604e466b9de67da9e6cbe1e9" kindref="member">fill_base</ref><sp/>+<sp/></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(midi-&gt;<ref refid="structpm__internal__struct_1aed1fd15de450d744b52a7a38e15408da" kindref="member">fill_offset_ptr</ref>);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr[0]<sp/>=<sp/>msg;<sp/>ptr[1]<sp/>=<sp/>msg<sp/>&gt;&gt;<sp/>8;<sp/></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr[2]<sp/>=<sp/>msg<sp/>&gt;&gt;<sp/>16;<sp/>ptr[3]<sp/>=<sp/>msg<sp/>&gt;&gt;<sp/>24;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*midi-&gt;<ref refid="structpm__internal__struct_1aed1fd15de450d744b52a7a38e15408da" kindref="member">fill_offset_ptr</ref>)<sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>no<sp/>acceleration,<sp/>so<sp/>do<sp/>byte-by-byte<sp/>copying<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(bits<sp/>&lt;<sp/>32)<sp/>{</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>midi_byte<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>char)<sp/>(msg<sp/>&gt;&gt;<sp/>bits);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((err<sp/>=<sp/>(*midi-&gt;<ref refid="structpm__internal__struct_1a0674a7a8d17ca8d00df7ac6594b01f17" kindref="member">dictionary</ref>-&gt;<ref refid="structpm__fns__node_1af5b068dc9632efbb967b37f2fbb65d75" kindref="member">write_byte</ref>)(<ref refid="midiclock_8c_1a55d909f140b116a12ba644132b67031e" kindref="member">midi</ref>,<sp/>midi_byte,<sp/></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].<ref refid="struct_pm_event_1a3854d39e3b89e1e2a4e1fda8d85c2f16" kindref="member">timestamp</ref>))<sp/>!=<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a9545ea325397bd81d2d81bdd7d92cba4" kindref="member">pmNoError</ref>)</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>pm_write_error;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(midi_byte<sp/>==<sp/><ref refid="portmidi_8c_1a140c8cfa4bbf1a03494abdbd639d49f2" kindref="member">MIDI_EOX</ref>)<sp/>{</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>pm_end_sysex(midi);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a9545ea325397bd81d2d81bdd7d92cba4" kindref="member">pmNoError</ref>)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_exit;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">/*<sp/>from<sp/>while<sp/>loop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bits<sp/>+=<sp/>8;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>not<sp/>in<sp/>sysex<sp/>mode,<sp/>but<sp/>message<sp/>did<sp/>not<sp/>start<sp/>with<sp/>status<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9afbf8f78a5f50d032831a97bc40477451" kindref="member">pmBadData</ref>;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>pm_write_error;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>after<sp/>all<sp/>messages<sp/>are<sp/>processed,<sp/>send<sp/>the<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!midi-&gt;<ref refid="structpm__internal__struct_1abf9a68e60ff9e12d776af6807aa1467a" kindref="member">sysex_in_progress</ref>)</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>(*midi-&gt;<ref refid="structpm__internal__struct_1a0674a7a8d17ca8d00df7ac6594b01f17" kindref="member">dictionary</ref>-&gt;<ref refid="structpm__fns__node_1a507449c19eee96a72872fb16c443b197" kindref="member">write_flush</ref>)(midi,<sp/>0);</highlight></codeline>
<codeline lineno="570"><highlight class="normal">pm_write_error:</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>==<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a29400da63af0c60becca3e04a2c75fe5" kindref="member">pmHostError</ref>)<sp/>{</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1a0674a7a8d17ca8d00df7ac6594b01f17" kindref="member">dictionary</ref>-&gt;<ref refid="structpm__fns__node_1aa85a8201a70439167b4df4dc4c82abf6" kindref="member">host_error</ref>(midi,<sp/><ref refid="portmidi_8c_1ac24a8881f0ef8c3a944349bee479cf05" kindref="member">pm_hosterror_text</ref>,<sp/></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portmidi_8h_1a40b1b3ff3147b3e0dff5843911345c8e" kindref="member">PM_HOST_ERROR_MSG_LEN</ref>);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portmidi_8c_1af455cd83ef19eb07a7996c38dd806ee4" kindref="member">pm_hosterror</ref><sp/>=<sp/><ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="576"><highlight class="normal">error_exit:</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8c_1a1e3fc08b00e2542c99314d01844afd2c" kindref="member">pm_errmsg</ref>(err);</highlight></codeline>
<codeline lineno="578"><highlight class="normal">}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581" refid="group__grp__io_1ga4a8cdd77e5b2ad4c16338eed475dfc6b" refkind="member"><highlight class="normal"><ref refid="portmidi_8h_1ad478fb637833fb6b1a4bdb25a03f4662" kindref="member">PMEXPORT</ref><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/><ref refid="group__grp__io_1ga4a8cdd77e5b2ad4c16338eed475dfc6b" kindref="member">Pm_WriteShort</ref>(<ref refid="portmidi_8h_1af4949219ee1bb0afc857cb242d123914" kindref="member">PortMidiStream</ref><sp/>*stream,<sp/><ref refid="portmidi_8h_1acf4245beeef251c4a46d66e99d77ffdf" kindref="member">PmTimestamp</ref><sp/>when,<sp/><ref refid="group__grp__events__filters_1gad8455e4afe978a74c68e345bef99761d" kindref="member">PmMessage</ref><sp/>msg)</highlight></codeline>
<codeline lineno="582"><highlight class="normal">{</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pm_event" kindref="compound">PmEvent</ref><sp/>event;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.<ref refid="struct_pm_event_1a3854d39e3b89e1e2a4e1fda8d85c2f16" kindref="member">timestamp</ref><sp/>=<sp/>when;</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.message<sp/>=<sp/>msg;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__grp__io_1ga82950117f003d28f9ca6536c00af985a" kindref="member">Pm_Write</ref>(stream,<sp/>&amp;event,<sp/>1);</highlight></codeline>
<codeline lineno="588"><highlight class="normal">}</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591" refid="group__grp__io_1ga4bd5753bdfb53a1611bcdf5ba159fc87" refkind="member"><highlight class="normal"><ref refid="portmidi_8h_1ad478fb637833fb6b1a4bdb25a03f4662" kindref="member">PMEXPORT</ref><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/><ref refid="group__grp__io_1ga4bd5753bdfb53a1611bcdf5ba159fc87" kindref="member">Pm_WriteSysEx</ref>(<ref refid="portmidi_8h_1af4949219ee1bb0afc857cb242d123914" kindref="member">PortMidiStream</ref><sp/>*stream,<sp/><ref refid="portmidi_8h_1acf4245beeef251c4a46d66e99d77ffdf" kindref="member">PmTimestamp</ref><sp/>when,<sp/></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*msg)</highlight></codeline>
<codeline lineno="593"><highlight class="normal">{</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>allocate<sp/>buffer<sp/>space<sp/>for<sp/>PM_DEFAULT_SYSEX_BUFFER_SIZE<sp/>bytes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>each<sp/>PmEvent<sp/>holds<sp/>sizeof(PmMessage)<sp/>bytes<sp/>of<sp/>sysex<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>BUFLEN<sp/>((int)<sp/>(PM_DEFAULT_SYSEX_BUFFER_SIZE<sp/>/<sp/>sizeof(PmMessage)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pm_event" kindref="compound">PmEvent</ref><sp/><ref refid="structbuffer" kindref="compound">buffer</ref>[<ref refid="portmidi_8c_1ad974fe981249f5e84fbf1683b012c9f8" kindref="member">BUFLEN</ref>];</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>buffer_size<sp/>=<sp/>1;<sp/></highlight><highlight class="comment">/*<sp/>first<sp/>time,<sp/>send<sp/>1.<sp/>After<sp/>that,<sp/>it&apos;s<sp/>BUFLEN<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*midi<sp/>=<sp/>(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*)<sp/>stream;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>next<sp/>byte<sp/>in<sp/>the<sp/>buffer<sp/>is<sp/>represented<sp/>by<sp/>an<sp/>index,<sp/>bufx,<sp/>and</highlight></codeline>
<codeline lineno="601"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>shift<sp/>in<sp/>bits<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shift<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bufx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer[0].<ref refid="struct_pm_event_1a2c8c12542447fdd566401fbf1a83d4e2" kindref="member">message</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer[0].<ref refid="struct_pm_event_1a3854d39e3b89e1e2a4e1fda8d85c2f16" kindref="member">timestamp</ref><sp/>=<sp/>when;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)<sp/>{</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>insert<sp/>next<sp/>byte<sp/>into<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[bufx].<ref refid="struct_pm_event_1a2c8c12542447fdd566401fbf1a83d4e2" kindref="member">message</ref><sp/>|=<sp/>((*msg)<sp/>&lt;&lt;<sp/>shift);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shift<sp/>+=<sp/>8;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*msg++<sp/>==<sp/><ref refid="portmidi_8c_1a140c8cfa4bbf1a03494abdbd639d49f2" kindref="member">MIDI_EOX</ref>)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shift<sp/>==<sp/>32)<sp/>{</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shift<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bufx++;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bufx<sp/>==<sp/>buffer_size)<sp/>{</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/>err<sp/>=<sp/><ref refid="group__grp__io_1ga82950117f003d28f9ca6536c00af985a" kindref="member">Pm_Write</ref>(stream,<sp/>buffer,<sp/>buffer_size);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>note:<sp/>Pm_Write<sp/>has<sp/>already<sp/>called<sp/>errmsg()<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>prepare<sp/>to<sp/>fill<sp/>another<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bufx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer_size<sp/>=<sp/><ref refid="portmidi_8c_1ad974fe981249f5e84fbf1683b012c9f8" kindref="member">BUFLEN</ref>;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>optimization:<sp/>maybe<sp/>we<sp/>can<sp/>just<sp/>copy<sp/>bytes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(midi-&gt;<ref refid="structpm__internal__struct_1ad789ea60604e466b9de67da9e6cbe1e9" kindref="member">fill_base</ref>)<sp/>{</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/>err;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*(midi-&gt;<ref refid="structpm__internal__struct_1aed1fd15de450d744b52a7a38e15408da" kindref="member">fill_offset_ptr</ref>)<sp/>&lt;<sp/>midi-&gt;<ref refid="structpm__internal__struct_1a6a16a79f905138e1a5a3fe3b9529627f" kindref="member">fill_length</ref>)<sp/>{</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1ad789ea60604e466b9de67da9e6cbe1e9" kindref="member">fill_base</ref>[(*midi-&gt;<ref refid="structpm__internal__struct_1aed1fd15de450d744b52a7a38e15408da" kindref="member">fill_offset_ptr</ref>)++]<sp/>=<sp/>*msg;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*msg++<sp/>==<sp/><ref refid="portmidi_8c_1a140c8cfa4bbf1a03494abdbd639d49f2" kindref="member">MIDI_EOX</ref>)<sp/>{</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>pm_end_sysex(midi);</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a9545ea325397bd81d2d81bdd7d92cba4" kindref="member">pmNoError</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8c_1a1e3fc08b00e2542c99314d01844afd2c" kindref="member">pm_errmsg</ref>(err);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>end_of_sysex;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>I<sp/>thought<sp/>that<sp/>I<sp/>could<sp/>do<sp/>a<sp/>pm_Write<sp/>here<sp/>and</highlight></codeline>
<codeline lineno="634"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>change<sp/>this<sp/>if<sp/>to<sp/>a<sp/>loop,<sp/>avoiding<sp/>calls<sp/>in<sp/>Pm_Write</highlight></codeline>
<codeline lineno="635"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>to<sp/>the<sp/>slower<sp/>write_byte,<sp/>but<sp/>since<sp/></highlight></codeline>
<codeline lineno="636"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>sysex_in_progress<sp/>is<sp/>true,<sp/>this<sp/>will<sp/>not<sp/>flush</highlight></codeline>
<codeline lineno="637"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>buffer,<sp/>and<sp/>we&apos;ll<sp/>infinite<sp/>loop:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>err<sp/>=<sp/>Pm_Write(stream,<sp/>buffer,<sp/>0);</highlight></codeline>
<codeline lineno="639"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(err)<sp/>return<sp/>err;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>instead,<sp/>the<sp/>way<sp/>this<sp/>works<sp/>is<sp/>that<sp/>Pm_Write<sp/>calls</highlight></codeline>
<codeline lineno="641"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>write_byte<sp/>on<sp/>4<sp/>bytes.<sp/>The<sp/>first,<sp/>since<sp/>the<sp/>buffer</highlight></codeline>
<codeline lineno="642"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>is<sp/>full,<sp/>will<sp/>flush<sp/>the<sp/>buffer<sp/>and<sp/>allocate<sp/>a<sp/>new</highlight></codeline>
<codeline lineno="643"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>one.<sp/>This<sp/>primes<sp/>the<sp/>buffer<sp/>so</highlight></codeline>
<codeline lineno="644"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>that<sp/>we<sp/>can<sp/>return<sp/>to<sp/>the<sp/>loop<sp/>above<sp/>and<sp/>fill<sp/>it</highlight></codeline>
<codeline lineno="645"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>efficiently<sp/>without<sp/>a<sp/>lot<sp/>of<sp/>function<sp/>calls.</highlight></codeline>
<codeline lineno="646"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer_size<sp/>=<sp/>1;<sp/></highlight><highlight class="comment">/*<sp/>get<sp/>another<sp/>message<sp/>started<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[bufx].<ref refid="struct_pm_event_1a2c8c12542447fdd566401fbf1a83d4e2" kindref="member">message</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[bufx].<ref refid="struct_pm_event_1a3854d39e3b89e1e2a4e1fda8d85c2f16" kindref="member">timestamp</ref><sp/>=<sp/>when;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>keep<sp/>inserting<sp/>bytes<sp/>until<sp/>you<sp/>find<sp/>MIDI_EOX<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="655"><highlight class="normal">end_of_sysex:</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we&apos;re<sp/>finished<sp/>sending<sp/>full<sp/>buffers,<sp/>but<sp/>there<sp/>may</highlight></codeline>
<codeline lineno="657"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>be<sp/>a<sp/>partial<sp/>one<sp/>left.</highlight></codeline>
<codeline lineno="658"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shift<sp/>!=<sp/>0)<sp/>bufx++;<sp/></highlight><highlight class="comment">/*<sp/>add<sp/>partial<sp/>message<sp/>to<sp/>buffer<sp/>len<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bufx)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>bufx<sp/>is<sp/>number<sp/>of<sp/>PmEvents<sp/>to<sp/>send<sp/>from<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/>err<sp/>=<sp/><ref refid="group__grp__io_1ga82950117f003d28f9ca6536c00af985a" kindref="member">Pm_Write</ref>(stream,<sp/>buffer,<sp/>bufx);</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a9545ea325397bd81d2d81bdd7d92cba4" kindref="member">pmNoError</ref>;</highlight></codeline>
<codeline lineno="665"><highlight class="normal">}</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669" refid="group__grp__device_1gabd50a31baaa494ad8b405f9ad54c966e" refkind="member"><highlight class="normal"><ref refid="portmidi_8h_1ad478fb637833fb6b1a4bdb25a03f4662" kindref="member">PMEXPORT</ref><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/><ref refid="group__grp__device_1gabd50a31baaa494ad8b405f9ad54c966e" kindref="member">Pm_OpenInput</ref>(<ref refid="portmidi_8h_1af4949219ee1bb0afc857cb242d123914" kindref="member">PortMidiStream</ref>**<sp/>stream,</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portmidi_8h_1a696cc4d4360bb8513f13df4bb134098a" kindref="member">PmDeviceID</ref><sp/>inputDevice,</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*inputDriverInfo,</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a37994e3b11c72957c6f454c6ec96d43d" kindref="member">int32_t</ref><sp/>bufferSize,</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portmidi_8h_1a86cdcb85cfa72e067bc2fd1b96fca05d" kindref="member">PmTimeProcPtr</ref><sp/>time_proc,</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*time_info)</highlight></codeline>
<codeline lineno="675"><highlight class="normal">{</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*<ref refid="midiclock_8c_1a55d909f140b116a12ba644132b67031e" kindref="member">midi</ref>;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/>err<sp/>=<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a9545ea325397bd81d2d81bdd7d92cba4" kindref="member">pmNoError</ref>;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portmidi_8c_1af455cd83ef19eb07a7996c38dd806ee4" kindref="member">pm_hosterror</ref><sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/>*stream<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>arg<sp/>checking<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inputDevice<sp/>&lt;<sp/>0<sp/>||<sp/>inputDevice<sp/>&gt;=<sp/><ref refid="portmidi_8c_1abf37b57cc544c04b6d27cf33a02b473f" kindref="member">pm_descriptor_index</ref>)<sp/></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a629c26e14c9bdac6e1688803f28ecd80" kindref="member">pmInvalidDeviceId</ref>;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!descriptors[inputDevice].pub.input)<sp/></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a629c26e14c9bdac6e1688803f28ecd80" kindref="member">pmInvalidDeviceId</ref>;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(descriptors[inputDevice].pub.opened)</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a629c26e14c9bdac6e1688803f28ecd80" kindref="member">pmInvalidDeviceId</ref>;</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a9545ea325397bd81d2d81bdd7d92cba4" kindref="member">pmNoError</ref>)<sp/></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_return;</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>create<sp/>portMidi<sp/>internal<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/>midi<sp/>=<sp/>(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*)<sp/><ref refid="pminternal_8h_1a5e0011f472e9c71efa58816f628eed08" kindref="member">pm_alloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref>));<sp/></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/>*stream<sp/>=<sp/><ref refid="midiclock_8c_1a55d909f140b116a12ba644132b67031e" kindref="member">midi</ref>;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!midi)<sp/>{</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a2cd8d4985678f6c92748dcc1177a2512" kindref="member">pmInsufficientMemory</ref>;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_return;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1a6434c3e3e21fad6289c32c480e13edd5" kindref="member">device_id</ref><sp/>=<sp/>inputDevice;</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1abea16d3f5e2dc3d0a9e1e7d02ea45be5" kindref="member">write_flag</ref><sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1aa2268f6b4916d4ae3de765d880bc8641" kindref="member">time_proc</ref><sp/>=<sp/>time_proc;</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1ac3ee4fe374d89f3040708206648acb07" kindref="member">time_info</ref><sp/>=<sp/>time_info;</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>windows<sp/>adds<sp/>timestamps<sp/>in<sp/>the<sp/>driver<sp/>and<sp/>these<sp/>are<sp/>more<sp/>accurate<sp/>than</highlight></codeline>
<codeline lineno="704"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>using<sp/>a<sp/>time_proc,<sp/>so<sp/>do<sp/>not<sp/>automatically<sp/>provide<sp/>a<sp/>time<sp/>proc.<sp/>Non-win</highlight></codeline>
<codeline lineno="705"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>implementations<sp/>may<sp/>want<sp/>to<sp/>provide<sp/>a<sp/>default<sp/>time_proc<sp/>in<sp/>their</highlight></codeline>
<codeline lineno="706"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>system-specific<sp/>midi_out_open()<sp/>method.</highlight></codeline>
<codeline lineno="707"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bufferSize<sp/>&lt;=<sp/>0)<sp/>bufferSize<sp/>=<sp/>256;<sp/></highlight><highlight class="comment">/*<sp/>default<sp/>buffer<sp/>size<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1a883e467783d250a41089efa00df2bb4c" kindref="member">queue</ref><sp/>=<sp/><ref refid="pmutil_8c_1a4b9e5baad25b1efbf575dd928d4c6f43" kindref="member">Pm_QueueCreate</ref>(bufferSize,<sp/>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a37994e3b11c72957c6f454c6ec96d43d" kindref="member">int32_t</ref>)<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_pm_event" kindref="compound">PmEvent</ref>));</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!midi-&gt;<ref refid="structpm__internal__struct_1a883e467783d250a41089efa00df2bb4c" kindref="member">queue</ref>)<sp/>{</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>free<sp/>portMidi<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*stream<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1a9ce0079220419af65fc4a78af8d422f2" kindref="member">pm_free</ref>(midi);<sp/></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a2cd8d4985678f6c92748dcc1177a2512" kindref="member">pmInsufficientMemory</ref>;</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_return;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1a253ecc9475134223732c0b450e25c99e" kindref="member">buffer_len</ref><sp/>=<sp/>bufferSize;<sp/></highlight><highlight class="comment">/*<sp/>portMidi<sp/>input<sp/>storage<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1ad1458cf67c24a176a66dd8350c50ac0a" kindref="member">latency</ref><sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>not<sp/>used<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1abf9a68e60ff9e12d776af6807aa1467a" kindref="member">sysex_in_progress</ref><sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1a020e2d32d420628c81216a2be3d03d3c" kindref="member">sysex_message</ref><sp/>=<sp/>0;<sp/></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1ac0a1f6b21c5a1a69e5d913d804387ff0" kindref="member">sysex_message_count</ref><sp/>=<sp/>0;<sp/></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1a0db816d783b14443c6f4d18ae9add6a4" kindref="member">filters</ref><sp/>=<sp/><ref refid="group__grp__events__filters_1ga14df46b4e5e3aa265dc8dee06df8ce19" kindref="member">PM_FILT_ACTIVE</ref>;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1af267d4b365e7c7578c6d967d76e5a93a" kindref="member">channel_mask</ref><sp/>=<sp/>0xFFFF;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1a44a7aab14a2defa36ecb73143d541aa6" kindref="member">sync_time</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1a979eb48d9b3872a1c4a68cd1e8022e65" kindref="member">first_message</ref><sp/>=<sp/><ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1a0674a7a8d17ca8d00df7ac6594b01f17" kindref="member">dictionary</ref><sp/>=<sp/>descriptors[inputDevice].<ref refid="structdescriptor__node_1a79791dac344af440b10af2ab9cee26e3" kindref="member">dictionary</ref>;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1ad789ea60604e466b9de67da9e6cbe1e9" kindref="member">fill_base</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1aed1fd15de450d744b52a7a38e15408da" kindref="member">fill_offset_ptr</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1a6a16a79f905138e1a5a3fe3b9529627f" kindref="member">fill_length</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/>descriptors[inputDevice].<ref refid="structdescriptor__node_1a5e90cf08a561afbc02fa8ac72264bb9a" kindref="member">internalDescriptor</ref><sp/>=<sp/><ref refid="midiclock_8c_1a55d909f140b116a12ba644132b67031e" kindref="member">midi</ref>;</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>open<sp/>system<sp/>dependent<sp/>input<sp/>device<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>=<sp/>(*midi-&gt;<ref refid="structpm__internal__struct_1a0674a7a8d17ca8d00df7ac6594b01f17" kindref="member">dictionary</ref>-&gt;<ref refid="structpm__fns__node_1a05cf57c08b47348d05637bfe1da193d2" kindref="member">open</ref>)(midi,<sp/>inputDriverInfo);</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err)<sp/>{</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*stream<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>descriptors[inputDevice].<ref refid="structdescriptor__node_1a5e90cf08a561afbc02fa8ac72264bb9a" kindref="member">internalDescriptor</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>free<sp/>portMidi<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pmutil_8c_1a4dac98b6791b777886ea7729a33d3b43" kindref="member">Pm_QueueDestroy</ref>(midi-&gt;<ref refid="structpm__internal__struct_1a883e467783d250a41089efa00df2bb4c" kindref="member">queue</ref>);</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1a9ce0079220419af65fc4a78af8d422f2" kindref="member">pm_free</ref>(midi);</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>portMidi<sp/>input<sp/>open<sp/>successful<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>descriptors[inputDevice].<ref refid="structdescriptor__node_1a63b20f87d756eab969d3352103322516" kindref="member">pub</ref>.<ref refid="struct_pm_device_info_1ab4d3d62344b0c525d444bd844e7d70eb" kindref="member">opened</ref><sp/>=<sp/><ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="743"><highlight class="normal">error_return:</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>note:<sp/>if<sp/>there<sp/>is<sp/>a<sp/>pmHostError,<sp/>it<sp/>is<sp/>the<sp/>responsibility</highlight></codeline>
<codeline lineno="745"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>of<sp/>the<sp/>system-dependent<sp/>code<sp/>(*midi-&gt;dictionary-&gt;open)()</highlight></codeline>
<codeline lineno="746"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>to<sp/>set<sp/>pm_hosterror<sp/>and<sp/>pm_hosterror_text</highlight></codeline>
<codeline lineno="747"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8c_1a1e3fc08b00e2542c99314d01844afd2c" kindref="member">pm_errmsg</ref>(err);</highlight></codeline>
<codeline lineno="749"><highlight class="normal">}</highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight></codeline>
<codeline lineno="752" refid="group__grp__device_1ga134924cfa8badeecff3c5e1f22aee178" refkind="member"><highlight class="normal"><ref refid="portmidi_8h_1ad478fb637833fb6b1a4bdb25a03f4662" kindref="member">PMEXPORT</ref><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/><ref refid="group__grp__device_1ga134924cfa8badeecff3c5e1f22aee178" kindref="member">Pm_OpenOutput</ref>(<ref refid="portmidi_8h_1af4949219ee1bb0afc857cb242d123914" kindref="member">PortMidiStream</ref>**<sp/>stream,</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portmidi_8h_1a696cc4d4360bb8513f13df4bb134098a" kindref="member">PmDeviceID</ref><sp/>outputDevice,</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*outputDriverInfo,</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a37994e3b11c72957c6f454c6ec96d43d" kindref="member">int32_t</ref><sp/>bufferSize,</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portmidi_8h_1a86cdcb85cfa72e067bc2fd1b96fca05d" kindref="member">PmTimeProcPtr</ref><sp/>time_proc,</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*time_info,</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a37994e3b11c72957c6f454c6ec96d43d" kindref="member">int32_t</ref><sp/><ref refid="sysex_8c_1a9c5bf07170b5d91cfb44d4bfd0517128" kindref="member">latency</ref><sp/>)<sp/></highlight></codeline>
<codeline lineno="759"><highlight class="normal">{</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*<ref refid="midiclock_8c_1a55d909f140b116a12ba644132b67031e" kindref="member">midi</ref>;</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/>err<sp/>=<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a9545ea325397bd81d2d81bdd7d92cba4" kindref="member">pmNoError</ref>;</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portmidi_8c_1af455cd83ef19eb07a7996c38dd806ee4" kindref="member">pm_hosterror</ref><sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/>*stream<sp/>=<sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>arg<sp/>checking<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(outputDevice<sp/>&lt;<sp/>0<sp/>||<sp/>outputDevice<sp/>&gt;=<sp/><ref refid="portmidi_8c_1abf37b57cc544c04b6d27cf33a02b473f" kindref="member">pm_descriptor_index</ref>)</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a629c26e14c9bdac6e1688803f28ecd80" kindref="member">pmInvalidDeviceId</ref>;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!descriptors[outputDevice].pub.output)<sp/></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a629c26e14c9bdac6e1688803f28ecd80" kindref="member">pmInvalidDeviceId</ref>;</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(descriptors[outputDevice].pub.opened)</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a629c26e14c9bdac6e1688803f28ecd80" kindref="member">pmInvalidDeviceId</ref>;</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a9545ea325397bd81d2d81bdd7d92cba4" kindref="member">pmNoError</ref>)<sp/></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_return;</highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>create<sp/>portMidi<sp/>internal<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/>midi<sp/>=<sp/>(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*)<sp/><ref refid="pminternal_8h_1a5e0011f472e9c71efa58816f628eed08" kindref="member">pm_alloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref>));<sp/></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/>*stream<sp/>=<sp/><ref refid="midiclock_8c_1a55d909f140b116a12ba644132b67031e" kindref="member">midi</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!midi)<sp/>{</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a2cd8d4985678f6c92748dcc1177a2512" kindref="member">pmInsufficientMemory</ref>;</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_return;</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1a6434c3e3e21fad6289c32c480e13edd5" kindref="member">device_id</ref><sp/>=<sp/>outputDevice;</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1abea16d3f5e2dc3d0a9e1e7d02ea45be5" kindref="member">write_flag</ref><sp/>=<sp/><ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1aa2268f6b4916d4ae3de765d880bc8641" kindref="member">time_proc</ref><sp/>=<sp/>time_proc;</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>latency<sp/>&gt;<sp/>0,<sp/>we<sp/>need<sp/>a<sp/>time<sp/>reference.<sp/>If<sp/>none<sp/>is<sp/>provided,</highlight></codeline>
<codeline lineno="786"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>use<sp/>PortTime<sp/>library<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(time_proc<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>latency<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="porttime_8h_1ae63ed5b0017759552c7cfc560dcfe078" kindref="member">Pt_Started</ref>())<sp/></highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="porttime_8h_1aa0fd8500047387bbe26b5f1c4d91831c" kindref="member">Pt_Start</ref>(1,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>time_get<sp/>does<sp/>not<sp/>take<sp/>a<sp/>parameter,<sp/>so<sp/>coerce<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1aa2268f6b4916d4ae3de765d880bc8641" kindref="member">time_proc</ref><sp/>=<sp/>(<ref refid="portmidi_8h_1a86cdcb85cfa72e067bc2fd1b96fca05d" kindref="member">PmTimeProcPtr</ref>)<sp/><ref refid="porttime_8h_1a9a335bb8c04c85bf85d807dd448d72d0" kindref="member">Pt_Time</ref>;</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1ac3ee4fe374d89f3040708206648acb07" kindref="member">time_info</ref><sp/>=<sp/>time_info;</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1a253ecc9475134223732c0b450e25c99e" kindref="member">buffer_len</ref><sp/>=<sp/>bufferSize;</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1a883e467783d250a41089efa00df2bb4c" kindref="member">queue</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/></highlight><highlight class="comment">/*<sp/>unused<sp/>by<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>latency<sp/>zero,<sp/>output<sp/>immediate<sp/>(timestamps<sp/>ignored)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>latency<sp/>&lt;<sp/>0,<sp/>use<sp/>0<sp/>but<sp/>don&apos;t<sp/>return<sp/>an<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(latency<sp/>&lt;<sp/>0)<sp/>latency<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1ad1458cf67c24a176a66dd8350c50ac0a" kindref="member">latency</ref><sp/>=<sp/><ref refid="sysex_8c_1a9c5bf07170b5d91cfb44d4bfd0517128" kindref="member">latency</ref>;</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1abf9a68e60ff9e12d776af6807aa1467a" kindref="member">sysex_in_progress</ref><sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1a020e2d32d420628c81216a2be3d03d3c" kindref="member">sysex_message</ref><sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>unused<sp/>by<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1ac0a1f6b21c5a1a69e5d913d804387ff0" kindref="member">sysex_message_count</ref><sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>unused<sp/>by<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1a0db816d783b14443c6f4d18ae9add6a4" kindref="member">filters</ref><sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>not<sp/>used<sp/>for<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1af267d4b365e7c7578c6d967d76e5a93a" kindref="member">channel_mask</ref><sp/>=<sp/>0xFFFF;</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1a44a7aab14a2defa36ecb73143d541aa6" kindref="member">sync_time</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1a979eb48d9b3872a1c4a68cd1e8022e65" kindref="member">first_message</ref><sp/>=<sp/><ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1a0674a7a8d17ca8d00df7ac6594b01f17" kindref="member">dictionary</ref><sp/>=<sp/>descriptors[outputDevice].<ref refid="structdescriptor__node_1a79791dac344af440b10af2ab9cee26e3" kindref="member">dictionary</ref>;</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1ad789ea60604e466b9de67da9e6cbe1e9" kindref="member">fill_base</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1aed1fd15de450d744b52a7a38e15408da" kindref="member">fill_offset_ptr</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1a6a16a79f905138e1a5a3fe3b9529627f" kindref="member">fill_length</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/>descriptors[outputDevice].<ref refid="structdescriptor__node_1a5e90cf08a561afbc02fa8ac72264bb9a" kindref="member">internalDescriptor</ref><sp/>=<sp/><ref refid="midiclock_8c_1a55d909f140b116a12ba644132b67031e" kindref="member">midi</ref>;</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>open<sp/>system<sp/>dependent<sp/>output<sp/>device<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>=<sp/>(*midi-&gt;<ref refid="structpm__internal__struct_1a0674a7a8d17ca8d00df7ac6594b01f17" kindref="member">dictionary</ref>-&gt;<ref refid="structpm__fns__node_1a05cf57c08b47348d05637bfe1da193d2" kindref="member">open</ref>)(midi,<sp/>outputDriverInfo);</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err)<sp/>{</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*stream<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>descriptors[outputDevice].<ref refid="structdescriptor__node_1a5e90cf08a561afbc02fa8ac72264bb9a" kindref="member">internalDescriptor</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>free<sp/>portMidi<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1a9ce0079220419af65fc4a78af8d422f2" kindref="member">pm_free</ref>(midi);<sp/></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>portMidi<sp/>input<sp/>open<sp/>successful<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>descriptors[outputDevice].<ref refid="structdescriptor__node_1a63b20f87d756eab969d3352103322516" kindref="member">pub</ref>.<ref refid="struct_pm_device_info_1ab4d3d62344b0c525d444bd844e7d70eb" kindref="member">opened</ref><sp/>=<sp/><ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="823"><highlight class="normal">error_return:</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>note:<sp/>system-dependent<sp/>code<sp/>must<sp/>set<sp/>pm_hosterror<sp/>and</highlight></codeline>
<codeline lineno="825"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>pm_hosterror_text<sp/>if<sp/>a<sp/>pmHostError<sp/>occurs</highlight></codeline>
<codeline lineno="826"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8c_1a1e3fc08b00e2542c99314d01844afd2c" kindref="member">pm_errmsg</ref>(err);</highlight></codeline>
<codeline lineno="828"><highlight class="normal">}</highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight></codeline>
<codeline lineno="831" refid="group__grp__events__filters_1ga87f9bc67a21a8b058a3f915a2f98746a" refkind="member"><highlight class="normal"><ref refid="portmidi_8h_1ad478fb637833fb6b1a4bdb25a03f4662" kindref="member">PMEXPORT</ref><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/><ref refid="group__grp__events__filters_1ga87f9bc67a21a8b058a3f915a2f98746a" kindref="member">Pm_SetChannelMask</ref>(<ref refid="portmidi_8h_1af4949219ee1bb0afc857cb242d123914" kindref="member">PortMidiStream</ref><sp/>*stream,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structmask" kindref="compound">mask</ref>)</highlight></codeline>
<codeline lineno="832"><highlight class="normal">{</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*midi<sp/>=<sp/>(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*)<sp/>stream;</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/>err<sp/>=<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a9545ea325397bd81d2d81bdd7d92cba4" kindref="member">pmNoError</ref>;</highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(midi<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9ad918f36038e977eb97cd15daa851670c" kindref="member">pmBadPtr</ref>;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1af267d4b365e7c7578c6d967d76e5a93a" kindref="member">channel_mask</ref><sp/>=<sp/>mask;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8c_1a1e3fc08b00e2542c99314d01844afd2c" kindref="member">pm_errmsg</ref>(err);</highlight></codeline>
<codeline lineno="842"><highlight class="normal">}</highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight></codeline>
<codeline lineno="845" refid="group__grp__events__filters_1ga1a2b69b85efe9743345e18fc96607994" refkind="member"><highlight class="normal"><ref refid="portmidi_8h_1ad478fb637833fb6b1a4bdb25a03f4662" kindref="member">PMEXPORT</ref><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/><ref refid="group__grp__events__filters_1ga1a2b69b85efe9743345e18fc96607994" kindref="member">Pm_SetFilter</ref>(<ref refid="portmidi_8h_1af4949219ee1bb0afc857cb242d123914" kindref="member">PortMidiStream</ref><sp/>*stream,<sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a37994e3b11c72957c6f454c6ec96d43d" kindref="member">int32_t</ref><sp/>filters)<sp/>{</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*midi<sp/>=<sp/>(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*)<sp/>stream;</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/>err<sp/>=<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a9545ea325397bd81d2d81bdd7d92cba4" kindref="member">pmNoError</ref>;</highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>arg<sp/>checking<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(midi<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9ad918f36038e977eb97cd15daa851670c" kindref="member">pmBadPtr</ref>;</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!descriptors[midi-&gt;<ref refid="structpm__internal__struct_1a6434c3e3e21fad6289c32c480e13edd5" kindref="member">device_id</ref>].<ref refid="structdescriptor__node_1a63b20f87d756eab969d3352103322516" kindref="member">pub</ref>.<ref refid="struct_pm_device_info_1ab4d3d62344b0c525d444bd844e7d70eb" kindref="member">opened</ref>)</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9ad918f36038e977eb97cd15daa851670c" kindref="member">pmBadPtr</ref>;</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1a0db816d783b14443c6f4d18ae9add6a4" kindref="member">filters</ref><sp/>=<sp/>filters;</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8c_1a1e3fc08b00e2542c99314d01844afd2c" kindref="member">pm_errmsg</ref>(err);</highlight></codeline>
<codeline lineno="857"><highlight class="normal">}</highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight></codeline>
<codeline lineno="860" refid="group__grp__events__filters_1ga6b26be2fbcf092c9625ade5303edd0ac" refkind="member"><highlight class="normal"><ref refid="portmidi_8h_1ad478fb637833fb6b1a4bdb25a03f4662" kindref="member">PMEXPORT</ref><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/><ref refid="group__grp__events__filters_1ga6b26be2fbcf092c9625ade5303edd0ac" kindref="member">Pm_Close</ref>(<sp/><ref refid="portmidi_8h_1af4949219ee1bb0afc857cb242d123914" kindref="member">PortMidiStream</ref><sp/>*stream<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*midi<sp/>=<sp/>(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*)<sp/>stream;</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/>err<sp/>=<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a9545ea325397bd81d2d81bdd7d92cba4" kindref="member">pmNoError</ref>;</highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portmidi_8c_1af455cd83ef19eb07a7996c38dd806ee4" kindref="member">pm_hosterror</ref><sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>arg<sp/>checking<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(midi<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/></highlight><highlight class="comment">/*<sp/>midi<sp/>must<sp/>point<sp/>to<sp/>something<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9ad918f36038e977eb97cd15daa851670c" kindref="member">pmBadPtr</ref>;</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>it<sp/>is<sp/>an<sp/>open<sp/>device,<sp/>the<sp/>device_id<sp/>will<sp/>be<sp/>valid<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(midi-&gt;<ref refid="structpm__internal__struct_1a6434c3e3e21fad6289c32c480e13edd5" kindref="member">device_id</ref><sp/>&lt;<sp/>0<sp/>||<sp/>midi-&gt;<ref refid="structpm__internal__struct_1a6434c3e3e21fad6289c32c480e13edd5" kindref="member">device_id</ref><sp/>&gt;=<sp/><ref refid="portmidi_8c_1abf37b57cc544c04b6d27cf33a02b473f" kindref="member">pm_descriptor_index</ref>)</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9ad918f36038e977eb97cd15daa851670c" kindref="member">pmBadPtr</ref>;</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>and<sp/>the<sp/>device<sp/>should<sp/>be<sp/>in<sp/>the<sp/>opened<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!descriptors[midi-&gt;<ref refid="structpm__internal__struct_1a6434c3e3e21fad6289c32c480e13edd5" kindref="member">device_id</ref>].<ref refid="structdescriptor__node_1a63b20f87d756eab969d3352103322516" kindref="member">pub</ref>.<ref refid="struct_pm_device_info_1ab4d3d62344b0c525d444bd844e7d70eb" kindref="member">opened</ref>)</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9ad918f36038e977eb97cd15daa851670c" kindref="member">pmBadPtr</ref>;</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a9545ea325397bd81d2d81bdd7d92cba4" kindref="member">pmNoError</ref>)<sp/></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error_return;</highlight></codeline>
<codeline lineno="877"><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>close<sp/>the<sp/>device<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>=<sp/>(*midi-&gt;<ref refid="structpm__internal__struct_1a0674a7a8d17ca8d00df7ac6594b01f17" kindref="member">dictionary</ref>-&gt;<ref refid="structpm__fns__node_1a57b587fb7c65dfa19368b48f6a1a1c2a" kindref="member">close</ref>)(midi);</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>even<sp/>if<sp/>an<sp/>error<sp/>occurred,<sp/>continue<sp/>with<sp/>cleanup<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/>descriptors[midi-&gt;<ref refid="structpm__internal__struct_1a6434c3e3e21fad6289c32c480e13edd5" kindref="member">device_id</ref>].<ref refid="structdescriptor__node_1a5e90cf08a561afbc02fa8ac72264bb9a" kindref="member">internalDescriptor</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/>descriptors[midi-&gt;<ref refid="structpm__internal__struct_1a6434c3e3e21fad6289c32c480e13edd5" kindref="member">device_id</ref>].<ref refid="structdescriptor__node_1a63b20f87d756eab969d3352103322516" kindref="member">pub</ref>.<ref refid="struct_pm_device_info_1ab4d3d62344b0c525d444bd844e7d70eb" kindref="member">opened</ref><sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(midi-&gt;<ref refid="structpm__internal__struct_1a883e467783d250a41089efa00df2bb4c" kindref="member">queue</ref>)<sp/><ref refid="pmutil_8c_1a4dac98b6791b777886ea7729a33d3b43" kindref="member">Pm_QueueDestroy</ref>(midi-&gt;<ref refid="structpm__internal__struct_1a883e467783d250a41089efa00df2bb4c" kindref="member">queue</ref>);</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1a9ce0079220419af65fc4a78af8d422f2" kindref="member">pm_free</ref>(midi);<sp/></highlight></codeline>
<codeline lineno="885"><highlight class="normal">error_return:</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>system<sp/>dependent<sp/>code<sp/>must<sp/>set<sp/>pm_hosterror<sp/>and</highlight></codeline>
<codeline lineno="887"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>pm_hosterror_text<sp/>if<sp/>a<sp/>pmHostError<sp/>occurs.</highlight></codeline>
<codeline lineno="888"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8c_1a1e3fc08b00e2542c99314d01844afd2c" kindref="member">pm_errmsg</ref>(err);</highlight></codeline>
<codeline lineno="890"><highlight class="normal">}</highlight></codeline>
<codeline lineno="891"><highlight class="normal"></highlight></codeline>
<codeline lineno="892" refid="group__grp__events__filters_1gada0edc37a3424b086b14b151be3aea1a" refkind="member"><highlight class="normal"><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/><ref refid="group__grp__events__filters_1gada0edc37a3424b086b14b151be3aea1a" kindref="member">Pm_Synchronize</ref>(<sp/><ref refid="portmidi_8h_1af4949219ee1bb0afc857cb242d123914" kindref="member">PortMidiStream</ref>*<sp/>stream<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*midi<sp/>=<sp/>(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*)<sp/>stream;</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/>err<sp/>=<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a9545ea325397bd81d2d81bdd7d92cba4" kindref="member">pmNoError</ref>;</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(midi<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9ad918f36038e977eb97cd15daa851670c" kindref="member">pmBadPtr</ref>;</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!descriptors[midi-&gt;<ref refid="structpm__internal__struct_1a6434c3e3e21fad6289c32c480e13edd5" kindref="member">device_id</ref>].<ref refid="structdescriptor__node_1a63b20f87d756eab969d3352103322516" kindref="member">pub</ref>.<ref refid="struct_pm_device_info_1a0e395068e4eee637cc576541884d7e69" kindref="member">output</ref>)</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9ad918f36038e977eb97cd15daa851670c" kindref="member">pmBadPtr</ref>;</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!descriptors[midi-&gt;<ref refid="structpm__internal__struct_1a6434c3e3e21fad6289c32c480e13edd5" kindref="member">device_id</ref>].<ref refid="structdescriptor__node_1a63b20f87d756eab969d3352103322516" kindref="member">pub</ref>.<ref refid="struct_pm_device_info_1ab4d3d62344b0c525d444bd844e7d70eb" kindref="member">opened</ref>)</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9ad918f36038e977eb97cd15daa851670c" kindref="member">pmBadPtr</ref>;</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1a979eb48d9b3872a1c4a68cd1e8022e65" kindref="member">first_message</ref><sp/>=<sp/><ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="904"><highlight class="normal">}</highlight></codeline>
<codeline lineno="905"><highlight class="normal"></highlight></codeline>
<codeline lineno="906" refid="group__grp__events__filters_1ga8934ac3b02359b60177a06580c66a20e" refkind="member"><highlight class="normal"><ref refid="portmidi_8h_1ad478fb637833fb6b1a4bdb25a03f4662" kindref="member">PMEXPORT</ref><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/><ref refid="group__grp__events__filters_1ga8934ac3b02359b60177a06580c66a20e" kindref="member">Pm_Abort</ref>(<sp/><ref refid="portmidi_8h_1af4949219ee1bb0afc857cb242d123914" kindref="member">PortMidiStream</ref>*<sp/>stream<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*midi<sp/>=<sp/>(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*)<sp/>stream;</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/>err;</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>arg<sp/>checking<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(midi<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9ad918f36038e977eb97cd15daa851670c" kindref="member">pmBadPtr</ref>;</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!descriptors[midi-&gt;<ref refid="structpm__internal__struct_1a6434c3e3e21fad6289c32c480e13edd5" kindref="member">device_id</ref>].<ref refid="structdescriptor__node_1a63b20f87d756eab969d3352103322516" kindref="member">pub</ref>.<ref refid="struct_pm_device_info_1a0e395068e4eee637cc576541884d7e69" kindref="member">output</ref>)</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9ad918f36038e977eb97cd15daa851670c" kindref="member">pmBadPtr</ref>;</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!descriptors[midi-&gt;<ref refid="structpm__internal__struct_1a6434c3e3e21fad6289c32c480e13edd5" kindref="member">device_id</ref>].<ref refid="structdescriptor__node_1a63b20f87d756eab969d3352103322516" kindref="member">pub</ref>.<ref refid="struct_pm_device_info_1ab4d3d62344b0c525d444bd844e7d70eb" kindref="member">opened</ref>)</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9ad918f36038e977eb97cd15daa851670c" kindref="member">pmBadPtr</ref>;</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>(*midi-&gt;<ref refid="structpm__internal__struct_1a0674a7a8d17ca8d00df7ac6594b01f17" kindref="member">dictionary</ref>-&gt;<ref refid="structpm__fns__node_1ae0ce4cd25fc61fc3ccb1a56995abe625" kindref="member">abort</ref>)(midi);</highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>==<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a29400da63af0c60becca3e04a2c75fe5" kindref="member">pmHostError</ref>)<sp/>{</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1a0674a7a8d17ca8d00df7ac6594b01f17" kindref="member">dictionary</ref>-&gt;<ref refid="structpm__fns__node_1aa85a8201a70439167b4df4dc4c82abf6" kindref="member">host_error</ref>(midi,<sp/><ref refid="portmidi_8c_1ac24a8881f0ef8c3a944349bee479cf05" kindref="member">pm_hosterror_text</ref>,<sp/></highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portmidi_8h_1a40b1b3ff3147b3e0dff5843911345c8e" kindref="member">PM_HOST_ERROR_MSG_LEN</ref>);</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portmidi_8c_1af455cd83ef19eb07a7996c38dd806ee4" kindref="member">pm_hosterror</ref><sp/>=<sp/><ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8c_1a1e3fc08b00e2542c99314d01844afd2c" kindref="member">pm_errmsg</ref>(err);</highlight></codeline>
<codeline lineno="925"><highlight class="normal">}</highlight></codeline>
<codeline lineno="926"><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>pm_channel_filtered<sp/>returns<sp/>non-zero<sp/>if<sp/>the<sp/>channel<sp/>mask<sp/>is<sp/>blocking<sp/>the<sp/>current<sp/>channel<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="930" refid="portmidi_8c_1a5af1caf64b8661a79e54e850e9dbe191" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>pm_channel_filtered(status,<sp/>mask)<sp/>\</highlight></codeline>
<codeline lineno="931"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>((((status)<sp/>&amp;<sp/>0xF0)<sp/>!=<sp/>0xF0)<sp/>&amp;&amp;<sp/>(!(Pm_Channel((status)<sp/>&amp;<sp/>0x0F)<sp/>&amp;<sp/>(mask))))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>following<sp/>two<sp/>functions<sp/>will<sp/>checks<sp/>to<sp/>see<sp/>if<sp/>a<sp/>MIDI<sp/>message<sp/>matches</highlight></codeline>
<codeline lineno="935"><highlight class="comment"><sp/><sp/><sp/>the<sp/>filtering<sp/>criteria.<sp/><sp/>Since<sp/>the<sp/>sysex<sp/>routines<sp/>only<sp/>want<sp/>to<sp/>filter<sp/>realtime<sp/>messages,</highlight></codeline>
<codeline lineno="936"><highlight class="comment"><sp/><sp/><sp/>we<sp/>need<sp/>to<sp/>have<sp/>separate<sp/>routines.</highlight></codeline>
<codeline lineno="937"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"></highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>pm_realtime_filtered<sp/>returns<sp/>non-zero<sp/>if<sp/>the<sp/>filter<sp/>will<sp/>kill<sp/>the<sp/>current<sp/>message.</highlight></codeline>
<codeline lineno="941"><highlight class="comment"><sp/><sp/><sp/>Note<sp/>that<sp/>only<sp/>realtime<sp/>messages<sp/>are<sp/>checked<sp/>here.</highlight></codeline>
<codeline lineno="942"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="943" refid="portmidi_8c_1a814afeefb4df5b95673e3d43c7a26282" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>pm_realtime_filtered(status,<sp/>filters)<sp/>\</highlight></codeline>
<codeline lineno="944"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>((((status)<sp/>&amp;<sp/>0xF0)<sp/>==<sp/>0xF0)<sp/>&amp;&amp;<sp/>((1<sp/>&lt;&lt;<sp/>((status)<sp/>&amp;<sp/>0xF))<sp/>&amp;<sp/>(filters)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="947"><highlight class="comment"><sp/><sp/><sp/><sp/>return<sp/>((status<sp/>==<sp/>MIDI_ACTIVE)<sp/>&amp;&amp;<sp/>(filters<sp/>&amp;<sp/>PM_FILT_ACTIVE))</highlight></codeline>
<codeline lineno="948"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/><sp/>((status<sp/>==<sp/>MIDI_CLOCK)<sp/>&amp;&amp;<sp/>(filters<sp/>&amp;<sp/>PM_FILT_CLOCK))</highlight></codeline>
<codeline lineno="949"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/><sp/>((status<sp/>==<sp/>MIDI_START)<sp/>&amp;&amp;<sp/>(filters<sp/>&amp;<sp/>PM_FILT_PLAY))</highlight></codeline>
<codeline lineno="950"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/><sp/>((status<sp/>==<sp/>MIDI_STOP)<sp/>&amp;&amp;<sp/>(filters<sp/>&amp;<sp/>PM_FILT_PLAY))</highlight></codeline>
<codeline lineno="951"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/><sp/>((status<sp/>==<sp/>MIDI_CONTINUE)<sp/>&amp;&amp;<sp/>(filters<sp/>&amp;<sp/>PM_FILT_PLAY))</highlight></codeline>
<codeline lineno="952"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/><sp/>((status<sp/>==<sp/>MIDI_F9)<sp/>&amp;&amp;<sp/>(filters<sp/>&amp;<sp/>PM_FILT_F9))</highlight></codeline>
<codeline lineno="953"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/><sp/>((status<sp/>==<sp/>MIDI_FD)<sp/>&amp;&amp;<sp/>(filters<sp/>&amp;<sp/>PM_FILT_FD))</highlight></codeline>
<codeline lineno="954"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/><sp/>((status<sp/>==<sp/>MIDI_RESET)<sp/>&amp;&amp;<sp/>(filters<sp/>&amp;<sp/>PM_FILT_RESET))</highlight></codeline>
<codeline lineno="955"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/><sp/>((status<sp/>==<sp/>MIDI_MTC)<sp/>&amp;&amp;<sp/>(filters<sp/>&amp;<sp/>PM_FILT_MTC))</highlight></codeline>
<codeline lineno="956"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/><sp/>((status<sp/>==<sp/>MIDI_SONGPOS)<sp/>&amp;&amp;<sp/>(filters<sp/>&amp;<sp/>PM_FILT_SONG_POSITION))</highlight></codeline>
<codeline lineno="957"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/><sp/>((status<sp/>==<sp/>MIDI_SONGSEL)<sp/>&amp;&amp;<sp/>(filters<sp/>&amp;<sp/>PM_FILT_SONG_SELECT))</highlight></codeline>
<codeline lineno="958"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/><sp/>((status<sp/>==<sp/>MIDI_TUNE)<sp/>&amp;&amp;<sp/>(filters<sp/>&amp;<sp/>PM_FILT_TUNE));</highlight></codeline>
<codeline lineno="959"><highlight class="comment">}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>pm_status_filtered<sp/>returns<sp/>non-zero<sp/>if<sp/>a<sp/>filter<sp/>will<sp/>kill<sp/>the<sp/>current<sp/>message,<sp/>based<sp/>on<sp/>status.</highlight></codeline>
<codeline lineno="963"><highlight class="comment"><sp/><sp/><sp/>Note<sp/>that<sp/>sysex<sp/>and<sp/>real<sp/>time<sp/>are<sp/>not<sp/>checked.<sp/><sp/>It<sp/>is<sp/>up<sp/>to<sp/>the<sp/>subsystem<sp/>(winmm,<sp/>core<sp/>midi,<sp/>alsa)</highlight></codeline>
<codeline lineno="964"><highlight class="comment"><sp/><sp/><sp/>to<sp/>filter<sp/>sysex,<sp/>as<sp/>it<sp/>is<sp/>handled<sp/>more<sp/>easily<sp/>and<sp/>efficiently<sp/>at<sp/>that<sp/>level.</highlight></codeline>
<codeline lineno="965"><highlight class="comment"><sp/><sp/><sp/>Realtime<sp/>message<sp/>are<sp/>filtered<sp/>in<sp/>pm_realtime_filtered.</highlight></codeline>
<codeline lineno="966"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="967" refid="portmidi_8c_1ac3c153803616975e2fdd1edd45e05398" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>pm_status_filtered(status,<sp/>filters)<sp/>((1<sp/>&lt;&lt;<sp/>(16<sp/>+<sp/>((status)<sp/>&gt;&gt;<sp/>4)))<sp/>&amp;<sp/>(filters))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="971"><highlight class="comment"><sp/><sp/><sp/><sp/>return<sp/><sp/>((status<sp/>==<sp/>MIDI_NOTE_ON)<sp/>&amp;&amp;<sp/>(filters<sp/>&amp;<sp/>PM_FILT_NOTE))</highlight></codeline>
<codeline lineno="972"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/><sp/>((status<sp/>==<sp/>MIDI_NOTE_OFF)<sp/>&amp;&amp;<sp/>(filters<sp/>&amp;<sp/>PM_FILT_NOTE))</highlight></codeline>
<codeline lineno="973"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/><sp/>((status<sp/>==<sp/>MIDI_CHANNEL_AT)<sp/>&amp;&amp;<sp/>(filters<sp/>&amp;<sp/>PM_FILT_CHANNEL_AFTERTOUCH))</highlight></codeline>
<codeline lineno="974"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/><sp/>((status<sp/>==<sp/>MIDI_POLY_AT)<sp/>&amp;&amp;<sp/>(filters<sp/>&amp;<sp/>PM_FILT_POLY_AFTERTOUCH))</highlight></codeline>
<codeline lineno="975"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/><sp/>((status<sp/>==<sp/>MIDI_PROGRAM)<sp/>&amp;&amp;<sp/>(filters<sp/>&amp;<sp/>PM_FILT_PROGRAM))</highlight></codeline>
<codeline lineno="976"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/><sp/>((status<sp/>==<sp/>MIDI_CONTROL)<sp/>&amp;&amp;<sp/>(filters<sp/>&amp;<sp/>PM_FILT_CONTROL))</highlight></codeline>
<codeline lineno="977"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/><sp/>((status<sp/>==<sp/>MIDI_PITCHBEND)<sp/>&amp;&amp;<sp/>(filters<sp/>&amp;<sp/>PM_FILT_PITCHBEND));</highlight></codeline>
<codeline lineno="978"><highlight class="comment"></highlight></codeline>
<codeline lineno="979"><highlight class="comment">}</highlight></codeline>
<codeline lineno="980"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="981"><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pm_flush_sysex(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*midi,<sp/><ref refid="portmidi_8h_1acf4245beeef251c4a46d66e99d77ffdf" kindref="member">PmTimestamp</ref><sp/>timestamp)</highlight></codeline>
<codeline lineno="983"><highlight class="normal">{</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pm_event" kindref="compound">PmEvent</ref><sp/>event;</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>there<sp/>may<sp/>be<sp/>nothing<sp/>in<sp/>the<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(midi-&gt;<ref refid="structpm__internal__struct_1ac0a1f6b21c5a1a69e5d913d804387ff0" kindref="member">sysex_message_count</ref><sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">/*<sp/>nothing<sp/>to<sp/>flush<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.<ref refid="struct_pm_event_1a2c8c12542447fdd566401fbf1a83d4e2" kindref="member">message</ref><sp/>=<sp/>midi-&gt;<ref refid="structpm__internal__struct_1a020e2d32d420628c81216a2be3d03d3c" kindref="member">sysex_message</ref>;</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.timestamp<sp/>=<sp/>timestamp;</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>copied<sp/>from<sp/>pm_read_short,<sp/>avoids<sp/>filtering<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="pmutil_8c_1adb3212e6e63eca2f8e0af7e59e98e12d" kindref="member">Pm_Enqueue</ref>(midi-&gt;<ref refid="structpm__internal__struct_1a883e467783d250a41089efa00df2bb4c" kindref="member">queue</ref>,<sp/>&amp;event)<sp/>==<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a3f41a487d89c058e39108822b2648695" kindref="member">pmBufferOverflow</ref>)<sp/>{</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1abf9a68e60ff9e12d776af6807aa1467a" kindref="member">sysex_in_progress</ref><sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1ac0a1f6b21c5a1a69e5d913d804387ff0" kindref="member">sysex_message_count</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1a020e2d32d420628c81216a2be3d03d3c" kindref="member">sysex_message</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="997"><highlight class="normal">}</highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>pm_read_short<sp/>and<sp/>pm_read_bytes</highlight></codeline>
<codeline lineno="1001"><highlight class="comment"><sp/><sp/><sp/>are<sp/>the<sp/>interface<sp/>between<sp/>system-dependent<sp/>MIDI<sp/>input<sp/>handlers</highlight></codeline>
<codeline lineno="1002"><highlight class="comment"><sp/><sp/><sp/>and<sp/>the<sp/>system-independent<sp/>PortMIDI<sp/>code.</highlight></codeline>
<codeline lineno="1003"><highlight class="comment"><sp/><sp/><sp/>The<sp/>input<sp/>handler<sp/>MUST<sp/>obey<sp/>these<sp/>rules:</highlight></codeline>
<codeline lineno="1004"><highlight class="comment"><sp/><sp/><sp/>1)<sp/>all<sp/>short<sp/>input<sp/>messages<sp/>must<sp/>be<sp/>sent<sp/>to<sp/>pm_read_short,<sp/>which</highlight></codeline>
<codeline lineno="1005"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>enqueues<sp/>them<sp/>to<sp/>a<sp/>FIFO<sp/>for<sp/>the<sp/>application.</highlight></codeline>
<codeline lineno="1006"><highlight class="comment"><sp/><sp/><sp/>2)<sp/>each<sp/>buffer<sp/>of<sp/>sysex<sp/>bytes<sp/>should<sp/>be<sp/>reported<sp/>by<sp/>calling<sp/>pm_read_bytes</highlight></codeline>
<codeline lineno="1007"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>(which<sp/>sets<sp/>midi-&gt;sysex_in_progress).<sp/>After<sp/>the<sp/>eox<sp/>byte,<sp/></highlight></codeline>
<codeline lineno="1008"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>pm_read_bytes<sp/>will<sp/>clear<sp/>sysex_in_progress</highlight></codeline>
<codeline lineno="1009"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1010"><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>pm_read_short<sp/>is<sp/>the<sp/>place<sp/>where<sp/>all<sp/>input<sp/>messages<sp/>arrive<sp/>from<sp/></highlight></codeline>
<codeline lineno="1012"><highlight class="comment"><sp/><sp/><sp/>system-dependent<sp/>code<sp/>such<sp/>as<sp/>pmwinmm.c.<sp/>Here,<sp/>the<sp/>messages</highlight></codeline>
<codeline lineno="1013"><highlight class="comment"><sp/><sp/><sp/>are<sp/>entered<sp/>into<sp/>the<sp/>PortMidi<sp/>input<sp/>buffer.<sp/></highlight></codeline>
<codeline lineno="1014"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1015" refid="portmidi_8c_1a11a153e33a42b3f20df33394ce241005" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="portmidi_8c_1a11a153e33a42b3f20df33394ce241005" kindref="member">pm_read_short</ref>(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*midi,<sp/><ref refid="struct_pm_event" kindref="compound">PmEvent</ref><sp/>*event)</highlight></codeline>
<codeline lineno="1016"><highlight class="normal">{<sp/></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="conv2dtest_8m_1a1b5437a866e6f95107b07ba845bc1800" kindref="member">status</ref>;</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>arg<sp/>checking<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(midi<sp/>!=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>midi<sp/>filtering<sp/>is<sp/>applied<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="group__grp__events__filters_1ga729fed9ce1244a4052ef68527706eaf9" kindref="member">Pm_MessageStatus</ref>(event-&gt;<ref refid="struct_pm_event_1a2c8c12542447fdd566401fbf1a83d4e2" kindref="member">message</ref>);</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="portmidi_8c_1ac3c153803616975e2fdd1edd45e05398" kindref="member">pm_status_filtered</ref>(status,<sp/>midi-&gt;<ref refid="structpm__internal__struct_1a0db816d783b14443c6f4d18ae9add6a4" kindref="member">filters</ref>)</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(!<ref refid="pminternal_8h_1a2f568a0e90e538fe251a2a2fcc1004ec" kindref="member">is_real_time</ref>(status)<sp/>||<sp/></highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="portmidi_8c_1a814afeefb4df5b95673e3d43c7a26282" kindref="member">pm_realtime_filtered</ref>(status,<sp/>midi-&gt;<ref refid="structpm__internal__struct_1a0db816d783b14443c6f4d18ae9add6a4" kindref="member">filters</ref>))</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>!<ref refid="portmidi_8c_1a5af1caf64b8661a79e54e850e9dbe191" kindref="member">pm_channel_filtered</ref>(status,<sp/>midi-&gt;<ref refid="structpm__internal__struct_1af267d4b365e7c7578c6d967d76e5a93a" kindref="member">channel_mask</ref>))<sp/>{</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>sysex<sp/>is<sp/>in<sp/>progress<sp/>and<sp/>we<sp/>get<sp/>a<sp/>status<sp/>byte,<sp/>it<sp/>had</highlight></codeline>
<codeline lineno="1027"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>better<sp/>be<sp/>a<sp/>realtime<sp/>message<sp/>or<sp/>the<sp/>starting<sp/>SYSEX<sp/>byte;</highlight></codeline>
<codeline lineno="1028"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>otherwise,<sp/>we<sp/>exit<sp/>the<sp/>sysex_in_progress<sp/>state</highlight></codeline>
<codeline lineno="1029"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(midi-&gt;<ref refid="structpm__internal__struct_1abf9a68e60ff9e12d776af6807aa1467a" kindref="member">sysex_in_progress</ref><sp/>&amp;&amp;<sp/>(status<sp/>&amp;<sp/><ref refid="portmidi_8c_1a1ee2586a063422ec7d18e2abfbafa545" kindref="member">MIDI_STATUS_MASK</ref>))<sp/>{</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>two<sp/>choices:<sp/>real-time<sp/>or<sp/>not.<sp/>If<sp/>it&apos;s<sp/>real-time,<sp/>then</highlight></codeline>
<codeline lineno="1032"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>this<sp/>should<sp/>be<sp/>delivered<sp/>as<sp/>a<sp/>sysex<sp/>byte<sp/>because<sp/>it<sp/>is</highlight></codeline>
<codeline lineno="1033"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>embedded<sp/>in<sp/>a<sp/>sysex<sp/>message</highlight></codeline>
<codeline lineno="1034"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="pminternal_8h_1a2f568a0e90e538fe251a2a2fcc1004ec" kindref="member">is_real_time</ref>(status))<sp/>{</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1a020e2d32d420628c81216a2be3d03d3c" kindref="member">sysex_message</ref><sp/>|=<sp/></highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(status<sp/>&lt;&lt;<sp/>(8<sp/>*<sp/>midi-&gt;<ref refid="structpm__internal__struct_1ac0a1f6b21c5a1a69e5d913d804387ff0" kindref="member">sysex_message_count</ref>++));</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(midi-&gt;<ref refid="structpm__internal__struct_1ac0a1f6b21c5a1a69e5d913d804387ff0" kindref="member">sysex_message_count</ref><sp/>==<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pm_flush_sysex(midi,<sp/>event-&gt;<ref refid="struct_pm_event_1a3854d39e3b89e1e2a4e1fda8d85c2f16" kindref="member">timestamp</ref>);</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>otherwise,<sp/>it&apos;s<sp/>not<sp/>real-time.<sp/>This<sp/>interrupts</highlight></codeline>
<codeline lineno="1042"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>a<sp/>sysex<sp/>message<sp/>in<sp/>progress<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1abf9a68e60ff9e12d776af6807aa1467a" kindref="member">sysex_in_progress</ref><sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="pmutil_8c_1adb3212e6e63eca2f8e0af7e59e98e12d" kindref="member">Pm_Enqueue</ref>(midi-&gt;<ref refid="structpm__internal__struct_1a883e467783d250a41089efa00df2bb4c" kindref="member">queue</ref>,<sp/>event)<sp/>==<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a3f41a487d89c058e39108822b2648695" kindref="member">pmBufferOverflow</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1abf9a68e60ff9e12d776af6807aa1467a" kindref="member">sysex_in_progress</ref><sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1049"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"></highlight></codeline>
<codeline lineno="1051"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>pm_read_bytes<sp/>--<sp/>read<sp/>one<sp/>(partial)<sp/>sysex<sp/>msg<sp/>from<sp/>MIDI<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1052"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1053"><highlight class="comment"><sp/>*<sp/>returns<sp/>how<sp/>many<sp/>bytes<sp/>processed</highlight></codeline>
<codeline lineno="1054"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1055" refid="portmidi_8c_1a42d9f2529a0dedc5cbcaca8d3025a005" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="portmidi_8c_1a42d9f2529a0dedc5cbcaca8d3025a005" kindref="member">pm_read_bytes</ref>(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*midi,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>,<sp/></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>,<sp/><ref refid="portmidi_8h_1acf4245beeef251c4a46d66e99d77ffdf" kindref="member">PmTimestamp</ref><sp/>timestamp)</highlight></codeline>
<codeline lineno="1057"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>index<sp/>into<sp/>data,<sp/>must<sp/>not<sp/>be<sp/>unsigned<sp/>(!)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pm_event" kindref="compound">PmEvent</ref><sp/>event;</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.<ref refid="struct_pm_event_1a3854d39e3b89e1e2a4e1fda8d85c2f16" kindref="member">timestamp</ref><sp/>=<sp/>timestamp;</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(midi);</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>note<sp/>that<sp/>since<sp/>buffers<sp/>may<sp/>not<sp/>have<sp/>multiples<sp/>of<sp/>4<sp/>bytes,</highlight></codeline>
<codeline lineno="1063"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>pm_read_bytes<sp/>may<sp/>be<sp/>called<sp/>in<sp/>the<sp/>middle<sp/>of<sp/>an<sp/>outgoing</highlight></codeline>
<codeline lineno="1064"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>4-byte<sp/>PortMidi<sp/>message.<sp/>sysex_in_progress<sp/>indicates<sp/>that</highlight></codeline>
<codeline lineno="1065"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>a<sp/>sysex<sp/>has<sp/>been<sp/>sent<sp/>but<sp/>no<sp/>eox.</highlight></codeline>
<codeline lineno="1066"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>sanity<sp/>check<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!midi-&gt;<ref refid="structpm__internal__struct_1abf9a68e60ff9e12d776af6807aa1467a" kindref="member">sysex_in_progress</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>len)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>process<sp/>all<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>byte<sp/>=<sp/>data[i++];</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(byte<sp/>==<sp/><ref refid="portmidi_8c_1aa2197f6ca200566c0986e737edd211e4" kindref="member">MIDI_SYSEX</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="portmidi_8c_1a814afeefb4df5b95673e3d43c7a26282" kindref="member">pm_realtime_filtered</ref>(byte,<sp/>midi-&gt;<ref refid="structpm__internal__struct_1a0db816d783b14443c6f4d18ae9add6a4" kindref="member">filters</ref>))<sp/>{</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1abf9a68e60ff9e12d776af6807aa1467a" kindref="member">sysex_in_progress</ref><sp/>=<sp/><ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i--;<sp/></highlight><highlight class="comment">/*<sp/>back<sp/>up<sp/>so<sp/>code<sp/>below<sp/>will<sp/>get<sp/>SYSEX<sp/>byte<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">/*<sp/>continue<sp/>looping<sp/>below<sp/>to<sp/>process<sp/>msg<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(byte<sp/>==<sp/><ref refid="portmidi_8c_1a140c8cfa4bbf1a03494abdbd639d49f2" kindref="member">MIDI_EOX</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1abf9a68e60ff9e12d776af6807aa1467a" kindref="member">sysex_in_progress</ref><sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;<sp/></highlight><highlight class="comment">/*<sp/>done<sp/>with<sp/>one<sp/>message<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(byte<sp/>&amp;<sp/><ref refid="portmidi_8c_1a1ee2586a063422ec7d18e2abfbafa545" kindref="member">MIDI_STATUS_MASK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We&apos;re<sp/>getting<sp/>MIDI<sp/>but<sp/>no<sp/>sysex<sp/>in<sp/>progress.</highlight></codeline>
<codeline lineno="1081"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Either<sp/>the<sp/>SYSEX<sp/>status<sp/>byte<sp/>was<sp/>dropped<sp/>or</highlight></codeline>
<codeline lineno="1082"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>message<sp/>was<sp/>filtered.<sp/>Drop<sp/>the<sp/>data,<sp/>but</highlight></codeline>
<codeline lineno="1083"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>send<sp/>any<sp/>embedded<sp/>realtime<sp/>bytes.</highlight></codeline>
<codeline lineno="1084"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>assume<sp/>that<sp/>this<sp/>is<sp/>a<sp/>real-time<sp/>message:</highlight></codeline>
<codeline lineno="1086"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>it<sp/>is<sp/>an<sp/>error<sp/>to<sp/>pass<sp/>non-real-time<sp/>messages</highlight></codeline>
<codeline lineno="1087"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>to<sp/>pm_read_bytes</highlight></codeline>
<codeline lineno="1088"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.message<sp/>=<sp/>byte;</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portmidi_8c_1a11a153e33a42b3f20df33394ce241005" kindref="member">pm_read_short</ref>(midi,<sp/>&amp;event);</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>all<sp/>bytes<sp/>in<sp/>the<sp/>buffer<sp/>are<sp/>processed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now,<sp/>i&lt;len<sp/>implies<sp/>sysex_in_progress.<sp/>If<sp/>sysex_in_progress</highlight></codeline>
<codeline lineno="1095"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>becomes<sp/>false<sp/>in<sp/>the<sp/>loop,<sp/>there<sp/>must<sp/>have<sp/>been<sp/>an<sp/>overflow</highlight></codeline>
<codeline lineno="1096"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>and<sp/>we<sp/>can<sp/>just<sp/>drop<sp/>all<sp/>remaining<sp/>bytes<sp/></highlight></codeline>
<codeline lineno="1097"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>len<sp/>&amp;&amp;<sp/>midi-&gt;sysex_in_progress)<sp/>{</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(midi-&gt;<ref refid="structpm__internal__struct_1ac0a1f6b21c5a1a69e5d913d804387ff0" kindref="member">sysex_message_count</ref><sp/>==<sp/>0<sp/>&amp;&amp;<sp/>i<sp/>&lt;=<sp/>len<sp/>-<sp/>4<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((event.<ref refid="struct_pm_event_1a2c8c12542447fdd566401fbf1a83d4e2" kindref="member">message</ref><sp/>=<sp/>(((<ref refid="group__grp__events__filters_1gad8455e4afe978a74c68e345bef99761d" kindref="member">PmMessage</ref>)<sp/>data[i])<sp/>|<sp/></highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((<ref refid="group__grp__events__filters_1gad8455e4afe978a74c68e345bef99761d" kindref="member">PmMessage</ref>)<sp/>data[i+1])<sp/>&lt;&lt;<sp/>8)<sp/>|</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((<ref refid="group__grp__events__filters_1gad8455e4afe978a74c68e345bef99761d" kindref="member">PmMessage</ref>)<sp/>data[i+2])<sp/>&lt;&lt;<sp/>16)<sp/>|</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((<ref refid="group__grp__events__filters_1gad8455e4afe978a74c68e345bef99761d" kindref="member">PmMessage</ref>)<sp/>data[i+3])<sp/>&lt;&lt;<sp/>24)))<sp/>&amp;</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x80808080)<sp/>==<sp/>0)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>all<sp/>data,<sp/>no<sp/>status<sp/>*/</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="pmutil_8c_1adb3212e6e63eca2f8e0af7e59e98e12d" kindref="member">Pm_Enqueue</ref>(midi-&gt;<ref refid="structpm__internal__struct_1a883e467783d250a41089efa00df2bb4c" kindref="member">queue</ref>,<sp/>&amp;event)<sp/>==<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a3f41a487d89c058e39108822b2648695" kindref="member">pmBufferOverflow</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1abf9a68e60ff9e12d776af6807aa1467a" kindref="member">sysex_in_progress</ref><sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>len)<sp/>{</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>send<sp/>one<sp/>byte<sp/>at<sp/>a<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>byte<sp/>=<sp/>data[i++];</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="pminternal_8h_1a2f568a0e90e538fe251a2a2fcc1004ec" kindref="member">is_real_time</ref>(byte)<sp/>&amp;&amp;<sp/></highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portmidi_8c_1a814afeefb4df5b95673e3d43c7a26282" kindref="member">pm_realtime_filtered</ref>(byte,<sp/>midi-&gt;<ref refid="structpm__internal__struct_1a0db816d783b14443c6f4d18ae9add6a4" kindref="member">filters</ref>))<sp/>{</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">/*<sp/>real-time<sp/>data<sp/>is<sp/>filtered,<sp/>so<sp/>omit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1a020e2d32d420628c81216a2be3d03d3c" kindref="member">sysex_message</ref><sp/>|=<sp/></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(byte<sp/>&lt;&lt;<sp/>(8<sp/>*<sp/>midi-&gt;<ref refid="structpm__internal__struct_1ac0a1f6b21c5a1a69e5d913d804387ff0" kindref="member">sysex_message_count</ref>++));</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(byte<sp/>==<sp/><ref refid="portmidi_8c_1a140c8cfa4bbf1a03494abdbd639d49f2" kindref="member">MIDI_EOX</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1abf9a68e60ff9e12d776af6807aa1467a" kindref="member">sysex_in_progress</ref><sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pm_flush_sysex(midi,<sp/>event.<ref refid="struct_pm_event_1a3854d39e3b89e1e2a4e1fda8d85c2f16" kindref="member">timestamp</ref>);</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(midi-&gt;<ref refid="structpm__internal__struct_1ac0a1f6b21c5a1a69e5d913d804387ff0" kindref="member">sysex_message_count</ref><sp/>==<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pm_flush_sysex(midi,<sp/>event.<ref refid="struct_pm_event_1a3854d39e3b89e1e2a4e1fda8d85c2f16" kindref="member">timestamp</ref>);</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>after<sp/>handling<sp/>at<sp/>least<sp/>one<sp/>non-data<sp/>byte</highlight></codeline>
<codeline lineno="1126"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>and<sp/>reaching<sp/>a<sp/>4-byte<sp/>message<sp/>boundary,</highlight></codeline>
<codeline lineno="1127"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>resume<sp/>trying<sp/>to<sp/>send<sp/>4<sp/>at<sp/>a<sp/>time<sp/>in<sp/>outer<sp/>loop</highlight></codeline>
<codeline lineno="1128"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="1135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"></highlight></codeline>
<codeline lineno="1137"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/portmidi.c"/>
  </compounddef>
</doxygen>
