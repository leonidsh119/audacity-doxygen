<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_pitch_name_8h" kind="file" language="C++">
    <compoundname>PitchName.h</compoundname>
    <includes local="no">wx/wx.h</includes>
    <includedby refid="_freq_window_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/FreqWindow.cpp</includedby>
    <includedby refid="_pitch_name_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/PitchName.cpp</includedby>
    <incdepgraph>
      <node id="50628">
        <label>C:/_dev/OpenU/Audacity/audacity/src/PitchName.h</label>
        <link refid="PitchName.h"/>
        <childnode refid="50629" relation="include">
        </childnode>
      </node>
      <node id="50629">
        <label>wx/wx.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="50632">
        <label>C:/_dev/OpenU/Audacity/audacity/src/PitchName.cpp</label>
        <link refid="_pitch_name_8cpp"/>
      </node>
      <node id="50630">
        <label>C:/_dev/OpenU/Audacity/audacity/src/PitchName.h</label>
        <link refid="PitchName.h"/>
        <childnode refid="50631" relation="include">
        </childnode>
        <childnode refid="50632" relation="include">
        </childnode>
      </node>
      <node id="50631">
        <label>C:/_dev/OpenU/Audacity/audacity/src/FreqWindow.cpp</label>
        <link refid="_freq_window_8cpp"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="_pitch_name_8h_1aa4b14091f3b1664f93c2ce0fa5972741" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double FreqToMIDInote</definition>
        <argsstring>(const double freq)</argsstring>
        <name>FreqToMIDInote</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> double</type>
          <declname>freq</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>utilities for converting among frequency, MIDI note number, pitch index, pitch name </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/PitchName.h" line="29" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/PitchName.cpp" bodystart="26" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="_pitch_name_8h_1a2b0dacb90e29f935212b2779761ad3f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double MIDInoteToFreq</definition>
        <argsstring>(const double dMIDInote)</argsstring>
        <name>MIDInoteToFreq</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> double</type>
          <declname>dMIDInote</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/PitchName.h" line="31" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/PitchName.cpp" bodystart="32" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="_pitch_name_8h_1a1f22ddf853e23b6cd770b6a01e81e94c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>unsigned int PitchIndex</definition>
        <argsstring>(const double dMIDInote)</argsstring>
        <name>PitchIndex</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> double</type>
          <declname>dMIDInote</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/PitchName.h" line="36" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/PitchName.cpp" bodystart="37" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="_pitch_name_8h_1a8dcbf998ef07f03d2a6d2cb7d6694239" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int PitchOctave</definition>
        <argsstring>(const double dMIDInote)</argsstring>
        <name>PitchOctave</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> double</type>
          <declname>dMIDInote</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/PitchName.h" line="41" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/PitchName.cpp" bodystart="50" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="_pitch_name_8h_1ae44af339f9e464a9f937d448645d0003" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>wxChar *</type>
        <definition>wxChar* PitchName</definition>
        <argsstring>(const double dMIDInote, const bool bWantFlats=false)</argsstring>
        <name>PitchName</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> double</type>
          <declname>dMIDInote</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>bWantFlats</declname>
          <defval><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1a65e9886d74aaee76545e83dd09011727" kindref="member">false</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/PitchName.h" line="46" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/PitchName.cpp" bodystart="60" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="_pitch_name_8h_1abbcf1c97a6e4d7549e18552adba6e2a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>wxChar *</type>
        <definition>wxChar* PitchName_Absolute</definition>
        <argsstring>(const double dMIDInote, const bool bWantFlats=false)</argsstring>
        <name>PitchName_Absolute</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> double</type>
          <declname>dMIDInote</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>bWantFlats</declname>
          <defval><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1a65e9886d74aaee76545e83dd09011727" kindref="member">false</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/PitchName.h" line="51" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/PitchName.cpp" bodystart="138" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="_pitch_name_8h_1a8c713c1aa56051de9a37af460191dee1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double PitchToMIDInote</definition>
        <argsstring>(const unsigned int nPitchIndex, const int nPitchOctave)</argsstring>
        <name>PitchToMIDInote</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>nPitchIndex</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>nPitchOctave</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/PitchName.h" line="53" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/PitchName.cpp" bodystart="149" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="_pitch_name_8h_1a5d818dfb19f740dfeeeced73893a8833" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double PitchToFreq</definition>
        <argsstring>(const unsigned int nPitchIndex, const int nPitchOctave)</argsstring>
        <name>PitchToFreq</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>nPitchIndex</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>nPitchOctave</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/PitchName.h" line="55" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/PitchName.cpp" bodystart="154" bodyend="157"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/>Audacity:<sp/>A<sp/>Digital<sp/>Audio<sp/>Editor</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/>Audacity(R)<sp/>is<sp/>copyright<sp/>(c)<sp/>1999-2013<sp/>Audacity<sp/>Team.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/>License:<sp/>GPL<sp/>v2.<sp/><sp/>See<sp/>License.txt.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/>PitchName.h</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/><sp/>Vaughan<sp/>Johnson,<sp/>Dominic<sp/>Mazzoni</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment">******************************************************************/</highlight><highlight class="comment">/*******************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__AUDACITY_PITCHNAME__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__AUDACITY_PITCHNAME__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/wx.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FreqToMIDInote<sp/>takes<sp/>a<sp/>frequency<sp/>in<sp/>Hz<sp/>(exponential<sp/>scale<sp/>relative<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>alphabetic<sp/>pitch<sp/>names)<sp/>and<sp/>returns<sp/>a<sp/>pitch<sp/>ID<sp/>number<sp/>(linear</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>scale),<sp/>such<sp/>that<sp/>A440<sp/>(A4)<sp/>is<sp/>69,<sp/>middle<sp/>C<sp/>(C4)<sp/>is<sp/>60,<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Each<sp/>register<sp/>starts<sp/>with<sp/>C<sp/>(e.g.,<sp/>for<sp/>middle<sp/>C<sp/>and<sp/>A440,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>it&apos;s<sp/>register<sp/>4).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MIDI<sp/>note<sp/>number<sp/>0<sp/>is<sp/>C-1<sp/>in<sp/>Scientific<sp/>pitch<sp/>notation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_pitch_name_8h_1aa4b14091f3b1664f93c2ce0fa5972741" kindref="member">FreqToMIDInote</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>freq);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_pitch_name_8h_1a2b0dacb90e29f935212b2779761ad3f4" kindref="member">MIDInoteToFreq</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dMIDInote);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/>PitchIndex<sp/>returns<sp/>the<sp/>[0,11]<sp/>index<sp/>for<sp/>a<sp/>double<sp/>MIDI<sp/>note<sp/>number,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>per<sp/>result<sp/>from<sp/>FreqToMIDInote,<sp/>corresponding<sp/>to<sp/>modulo<sp/>12</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>the<sp/>integer<sp/>part<sp/>of<sp/>(dMIDInote<sp/>+<sp/>0.5),<sp/>so<sp/>0=C,<sp/>1=C#,<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_pitch_name_8h_1a1f22ddf853e23b6cd770b6a01e81e94c" kindref="member">PitchIndex</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dMIDInote);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/>PitchOctave<sp/>returns<sp/>the<sp/>octave<sp/>index<sp/>for<sp/>a<sp/>double<sp/>dMIDInote<sp/>note<sp/>number,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//<sp/>per<sp/>result<sp/>from<sp/>FreqToMIDInote.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MIDI<sp/>note<sp/>number<sp/>0<sp/>is<sp/>C-1<sp/>in<sp/>Scientific<sp/>pitch<sp/>notation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_pitch_name_8h_1a8dcbf998ef07f03d2a6d2cb7d6694239" kindref="member">PitchOctave</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dMIDInote);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/>PitchName<sp/>takes<sp/>dMIDInote<sp/>(per<sp/>result<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FreqToMIDInote)<sp/>and<sp/>returns<sp/>a<sp/>standard<sp/>pitch/note<sp/>name<sp/>[C,<sp/>C#,<sp/>etc.).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Sharps<sp/>are<sp/>the<sp/>default,<sp/>unless,<sp/>bWantFlats<sp/>is<sp/>true.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal">wxChar<sp/>*<sp/><ref refid="_pitch_name_8h_1ae44af339f9e464a9f937d448645d0003" kindref="member">PitchName</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dMIDInote,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bWantFlats<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/>PitchName_Absolute<sp/>does<sp/>the<sp/>same<sp/>thing<sp/>as<sp/>PitchName,<sp/>but<sp/>appends</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>octave<sp/>number,<sp/>e.g.,<sp/>instead<sp/>of<sp/>&quot;C&quot;<sp/>it<sp/>will<sp/>return<sp/>&quot;C4&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>dMIDInote<sp/>corresonds<sp/>to<sp/>middle<sp/>C,<sp/>i.e.,<sp/>is<sp/>60.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal">wxChar<sp/>*<sp/><ref refid="_pitch_name_8h_1abbcf1c97a6e4d7549e18552adba6e2a9" kindref="member">PitchName_Absolute</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dMIDInote,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bWantFlats<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_pitch_name_8h_1a8c713c1aa56051de9a37af460191dee1" kindref="member">PitchToMIDInote</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nPitchIndex,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nPitchOctave);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_pitch_name_8h_1a5d818dfb19f740dfeeeced73893a8833" kindref="member">PitchToFreq</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nPitchIndex,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nPitchOctave);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>__AUDACITY_PITCHNAME__</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/src/PitchName.h"/>
  </compounddef>
</doxygen>
