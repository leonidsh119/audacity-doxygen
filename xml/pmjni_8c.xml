<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="pmjni_8c" kind="file" language="C++">
    <compoundname>pmjni.c</compoundname>
    <includes refid="portmidi_8h" local="yes">portmidi.h</includes>
    <includes refid="porttime_8h" local="yes">porttime.h</includes>
    <includes refid="jportmidi___jport_midi_api_8h" local="yes">jportmidi_JportMidiApi.h</includes>
    <includes local="no">stdio.h</includes>
    <incdepgraph>
      <node id="30919">
        <label>stdint.h</label>
      </node>
      <node id="30920">
        <label>porttime.h</label>
        <link refid="porttime_8h"/>
        <childnode refid="30919" relation="include">
        </childnode>
      </node>
      <node id="30917">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_java/pmjni/pmjni.c</label>
        <link refid="pmjni.c"/>
        <childnode refid="30918" relation="include">
        </childnode>
        <childnode refid="30920" relation="include">
        </childnode>
        <childnode refid="30921" relation="include">
        </childnode>
        <childnode refid="30923" relation="include">
        </childnode>
      </node>
      <node id="30918">
        <label>portmidi.h</label>
        <link refid="portmidi_8h"/>
        <childnode refid="30919" relation="include">
        </childnode>
      </node>
      <node id="30921">
        <label>jportmidi_JportMidiApi.h</label>
        <link refid="jportmidi___jport_midi_api_8h"/>
        <childnode refid="30922" relation="include">
        </childnode>
      </node>
      <node id="30922">
        <label>jni.h</label>
      </node>
      <node id="30923">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="pmjni_8c_1a407b09d289c6b62a355d11c0e6323ac7" prot="public" static="no">
        <name>CLASS</name>
        <param><defname>c</defname></param>
        <param><defname>obj</defname></param>
        <initializer>jclass <ref refid="rfft2d_test_m_l_8m_1ae0323a9039add2978bf5b49550572c7c" kindref="member">c</ref> = (*env)-&gt;GetObjectClass(env, obj)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_java/pmjni/pmjni.c" line="8" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_java/pmjni/pmjni.c" bodystart="8" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pmjni_8c_1a1e7a97d58892e386b7cd8d1c988dab90" prot="public" static="no">
        <name>ADDRESS_FID</name>
        <param><defname>fid</defname></param>
        <param><defname>c</defname></param>
        <initializer>jfieldID fid = (*env)-&gt;GetFieldID(env, <ref refid="rfft2d_test_m_l_8m_1ae0323a9039add2978bf5b49550572c7c" kindref="member">c</ref>, &quot;address&quot;, &quot;J&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_java/pmjni/pmjni.c" line="9" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_java/pmjni/pmjni.c" bodystart="9" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pmjni_8c_1a1100a0303ab008684426b5bd55aa09c1" prot="public" static="no">
        <name>PMSTREAM</name>
        <param><defname>obj</defname></param>
        <param><defname>fid</defname></param>
        <initializer>((<ref refid="portmidi_8h_1a00ffab472a8cb21bd3511721c9474658" kindref="member">PmStream</ref> *) (long) (*env)-&gt;GetLongField(env, obj, fid))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_java/pmjni/pmjni.c" line="16" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_java/pmjni/pmjni.c" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pmjni_8c_1af6341666e879bb72a26f922b316e2ebd" prot="public" static="no">
        <name>SET_PMSTREAM</name>
        <param><defname>obj</defname></param>
        <param><defname>fid</defname></param>
        <param><defname>stream</defname></param>
        <initializer>(*env)-&gt;SetLongField(env, obj, fid, (jlong) (long) stream)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_java/pmjni/pmjni.c" line="19" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_java/pmjni/pmjni.c" bodystart="19" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="pmjni_8c_1a407a49e23945c78fb5a5a518d01ff2b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>JNIEXPORT jint JNICALL</type>
        <definition>JNIEXPORT jint JNICALL Java_jportmidi_JPortMidiApi_Pm_1Initialize</definition>
        <argsstring>(JNIEnv *env, jclass cl)</argsstring>
        <name>Java_jportmidi_JPortMidiApi_Pm_1Initialize</name>
        <param>
          <type>JNIEnv *</type>
          <declname>env</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>cl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_java/pmjni/pmjni.c" line="26" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_java/pmjni/pmjni.c" bodystart="27" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="pmjni_8c_1a6beef1b879ca0a7d8d969e9d976e60b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>JNIEXPORT jint JNICALL</type>
        <definition>JNIEXPORT jint JNICALL Java_jportmidi_JPortMidiApi_Pm_1Terminate</definition>
        <argsstring>(JNIEnv *env, jclass cl)</argsstring>
        <name>Java_jportmidi_JPortMidiApi_Pm_1Terminate</name>
        <param>
          <type>JNIEnv *</type>
          <declname>env</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>cl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_java/pmjni/pmjni.c" line="36" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_java/pmjni/pmjni.c" bodystart="37" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="pmjni_8c_1a82203ac35e25359c5353ac49cf35d98f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>JNIEXPORT jint JNICALL</type>
        <definition>JNIEXPORT jint JNICALL Java_jportmidi_JPortMidiApi_Pm_1HasHostError</definition>
        <argsstring>(JNIEnv *env, jclass cl, jobject jstream)</argsstring>
        <name>Java_jportmidi_JPortMidiApi_Pm_1HasHostError</name>
        <param>
          <type>JNIEnv *</type>
          <declname>env</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>cl</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jstream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_java/pmjni/pmjni.c" line="46" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_java/pmjni/pmjni.c" bodystart="47" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="pmjni_8c_1a0e90a06d91d6c186056fdae84fa2402f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>JNIEXPORT jstring JNICALL</type>
        <definition>JNIEXPORT jstring JNICALL Java_jportmidi_JPortMidiApi_Pm_1GetErrorText</definition>
        <argsstring>(JNIEnv *env, jclass cl, jint i)</argsstring>
        <name>Java_jportmidi_JPortMidiApi_Pm_1GetErrorText</name>
        <param>
          <type>JNIEnv *</type>
          <declname>env</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>cl</declname>
        </param>
        <param>
          <type>jint</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_java/pmjni/pmjni.c" line="58" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_java/pmjni/pmjni.c" bodystart="59" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="pmjni_8c_1ae1298807fdcbb955fd7154f4e10cfbf9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>JNIEXPORT jstring JNICALL</type>
        <definition>JNIEXPORT jstring JNICALL Java_jportmidi_JPortMidiApi_Pm_1GetHostErrorText</definition>
        <argsstring>(JNIEnv *env, jclass cl)</argsstring>
        <name>Java_jportmidi_JPortMidiApi_Pm_1GetHostErrorText</name>
        <param>
          <type>JNIEnv *</type>
          <declname>env</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>cl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_java/pmjni/pmjni.c" line="68" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_java/pmjni/pmjni.c" bodystart="69" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="pmjni_8c_1afebbc5212cf7bd8f6827fee49a823bc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>JNIEXPORT jint JNICALL</type>
        <definition>JNIEXPORT jint JNICALL Java_jportmidi_JPortMidiApi_Pm_1CountDevices</definition>
        <argsstring>(JNIEnv *env, jclass cl)</argsstring>
        <name>Java_jportmidi_JPortMidiApi_Pm_1CountDevices</name>
        <param>
          <type>JNIEnv *</type>
          <declname>env</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>cl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_java/pmjni/pmjni.c" line="80" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_java/pmjni/pmjni.c" bodystart="81" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="pmjni_8c_1a5737c584121ed301dc59a346a8a4fe96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>JNIEXPORT jint JNICALL</type>
        <definition>JNIEXPORT jint JNICALL Java_jportmidi_JPortMidiApi_Pm_1GetDefaultInputDeviceID</definition>
        <argsstring>(JNIEnv *env, jclass cl)</argsstring>
        <name>Java_jportmidi_JPortMidiApi_Pm_1GetDefaultInputDeviceID</name>
        <param>
          <type>JNIEnv *</type>
          <declname>env</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>cl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_java/pmjni/pmjni.c" line="90" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_java/pmjni/pmjni.c" bodystart="91" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="pmjni_8c_1affe20cfde5b94d3bf2ef5442ffd811c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>JNIEXPORT jint JNICALL</type>
        <definition>JNIEXPORT jint JNICALL Java_jportmidi_JPortMidiApi_Pm_1GetDefaultOutputDeviceID</definition>
        <argsstring>(JNIEnv *env, jclass cl)</argsstring>
        <name>Java_jportmidi_JPortMidiApi_Pm_1GetDefaultOutputDeviceID</name>
        <param>
          <type>JNIEnv *</type>
          <declname>env</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>cl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_java/pmjni/pmjni.c" line="100" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_java/pmjni/pmjni.c" bodystart="101" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="pmjni_8c_1adc8eafacc8fe5323638a31cde1915868" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>JNIEXPORT jstring JNICALL</type>
        <definition>JNIEXPORT jstring JNICALL Java_jportmidi_JPortMidiApi_Pm_1GetDeviceInterf</definition>
        <argsstring>(JNIEnv *env, jclass cl, jint i)</argsstring>
        <name>Java_jportmidi_JPortMidiApi_Pm_1GetDeviceInterf</name>
        <param>
          <type>JNIEnv *</type>
          <declname>env</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>cl</declname>
        </param>
        <param>
          <type>jint</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_java/pmjni/pmjni.c" line="110" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_java/pmjni/pmjni.c" bodystart="111" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="pmjni_8c_1aa85c387fa3af8a426d9ad3663fc552bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>JNIEXPORT jstring JNICALL</type>
        <definition>JNIEXPORT jstring JNICALL Java_jportmidi_JPortMidiApi_Pm_1GetDeviceName</definition>
        <argsstring>(JNIEnv *env, jclass cl, jint i)</argsstring>
        <name>Java_jportmidi_JPortMidiApi_Pm_1GetDeviceName</name>
        <param>
          <type>JNIEnv *</type>
          <declname>env</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>cl</declname>
        </param>
        <param>
          <type>jint</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_java/pmjni/pmjni.c" line="122" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_java/pmjni/pmjni.c" bodystart="123" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="pmjni_8c_1ac8d896b55a856b34d8fecdea1265a390" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>JNIEXPORT jboolean JNICALL</type>
        <definition>JNIEXPORT jboolean JNICALL Java_jportmidi_JPortMidiApi_Pm_1GetDeviceInput</definition>
        <argsstring>(JNIEnv *env, jclass cl, jint i)</argsstring>
        <name>Java_jportmidi_JPortMidiApi_Pm_1GetDeviceInput</name>
        <param>
          <type>JNIEnv *</type>
          <declname>env</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>cl</declname>
        </param>
        <param>
          <type>jint</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_java/pmjni/pmjni.c" line="134" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_java/pmjni/pmjni.c" bodystart="135" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="pmjni_8c_1a35f87923e2c2b61f448dcc64bf9db71a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>JNIEXPORT jboolean JNICALL</type>
        <definition>JNIEXPORT jboolean JNICALL Java_jportmidi_JPortMidiApi_Pm_1GetDeviceOutput</definition>
        <argsstring>(JNIEnv *env, jclass cl, jint i)</argsstring>
        <name>Java_jportmidi_JPortMidiApi_Pm_1GetDeviceOutput</name>
        <param>
          <type>JNIEnv *</type>
          <declname>env</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>cl</declname>
        </param>
        <param>
          <type>jint</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_java/pmjni/pmjni.c" line="146" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_java/pmjni/pmjni.c" bodystart="147" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="pmjni_8c_1a96953170ba9851f77ac28c5bb37f81e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>JNIEXPORT jint JNICALL</type>
        <definition>JNIEXPORT jint JNICALL Java_jportmidi_JPortMidiApi_Pm_1OpenInput</definition>
        <argsstring>(JNIEnv *env, jclass cl, jobject jstream, jint index, jstring extras, jint bufsiz)</argsstring>
        <name>Java_jportmidi_JPortMidiApi_Pm_1OpenInput</name>
        <param>
          <type>JNIEnv *</type>
          <declname>env</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>cl</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jstream</declname>
        </param>
        <param>
          <type>jint</type>
          <declname>index</declname>
        </param>
        <param>
          <type>jstring</type>
          <declname>extras</declname>
        </param>
        <param>
          <type>jint</type>
          <declname>bufsiz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_java/pmjni/pmjni.c" line="158" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_java/pmjni/pmjni.c" bodystart="159" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="pmjni_8c_1a6c9b0718548483fdd672eb3869adcb33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>JNIEXPORT jint JNICALL</type>
        <definition>JNIEXPORT jint JNICALL Java_jportmidi_JPortMidiApi_Pm_1OpenOutput</definition>
        <argsstring>(JNIEnv *env, jclass cl, jobject jstream, jint index, jstring extras, jint bufsiz, jint latency)</argsstring>
        <name>Java_jportmidi_JPortMidiApi_Pm_1OpenOutput</name>
        <param>
          <type>JNIEnv *</type>
          <declname>env</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>cl</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jstream</declname>
        </param>
        <param>
          <type>jint</type>
          <declname>index</declname>
        </param>
        <param>
          <type>jstring</type>
          <declname>extras</declname>
        </param>
        <param>
          <type>jint</type>
          <declname>bufsiz</declname>
        </param>
        <param>
          <type>jint</type>
          <declname>latency</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_java/pmjni/pmjni.c" line="175" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_java/pmjni/pmjni.c" bodystart="176" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="pmjni_8c_1a887829ac94b6888a9ff8e385e634e2ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>JNIEXPORT jint JNICALL</type>
        <definition>JNIEXPORT jint JNICALL Java_jportmidi_JPortMidiApi_Pm_1SetFilter</definition>
        <argsstring>(JNIEnv *env, jclass cl, jobject jstream, jint filters)</argsstring>
        <name>Java_jportmidi_JPortMidiApi_Pm_1SetFilter</name>
        <param>
          <type>JNIEnv *</type>
          <declname>env</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>cl</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jstream</declname>
        </param>
        <param>
          <type>jint</type>
          <declname>filters</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_java/pmjni/pmjni.c" line="192" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_java/pmjni/pmjni.c" bodystart="193" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="pmjni_8c_1aa0712896b102422c07c3267c008f7a0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>JNIEXPORT jint JNICALL</type>
        <definition>JNIEXPORT jint JNICALL Java_jportmidi_JPortMidiApi_Pm_1SetChannelMask</definition>
        <argsstring>(JNIEnv *env, jclass cl, jobject jstream, jint mask)</argsstring>
        <name>Java_jportmidi_JPortMidiApi_Pm_1SetChannelMask</name>
        <param>
          <type>JNIEnv *</type>
          <declname>env</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>cl</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jstream</declname>
        </param>
        <param>
          <type>jint</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_java/pmjni/pmjni.c" line="204" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_java/pmjni/pmjni.c" bodystart="205" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="pmjni_8c_1a4c469485ad2ada3875335e80f1037bf7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>JNIEXPORT jint JNICALL</type>
        <definition>JNIEXPORT jint JNICALL Java_jportmidi_JPortMidiApi_Pm_1Abort</definition>
        <argsstring>(JNIEnv *env, jclass cl, jobject jstream)</argsstring>
        <name>Java_jportmidi_JPortMidiApi_Pm_1Abort</name>
        <param>
          <type>JNIEnv *</type>
          <declname>env</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>cl</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jstream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_java/pmjni/pmjni.c" line="216" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_java/pmjni/pmjni.c" bodystart="217" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="pmjni_8c_1acb6f281f186efe123784948ff2bdb0a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>JNIEXPORT jint JNICALL</type>
        <definition>JNIEXPORT jint JNICALL Java_jportmidi_JPortMidiApi_Pm_1Close</definition>
        <argsstring>(JNIEnv *env, jclass cl, jobject jstream)</argsstring>
        <name>Java_jportmidi_JPortMidiApi_Pm_1Close</name>
        <param>
          <type>JNIEnv *</type>
          <declname>env</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>cl</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jstream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_java/pmjni/pmjni.c" line="228" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_java/pmjni/pmjni.c" bodystart="229" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="pmjni_8c_1a1c17b905a2dfddc3cd70f9fc5a4f989e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>JNIEXPORT jint JNICALL</type>
        <definition>JNIEXPORT jint JNICALL Java_jportmidi_JPortMidiApi_Pm_1Read</definition>
        <argsstring>(JNIEnv *env, jclass cl, jobject jstream, jobject jpmevent)</argsstring>
        <name>Java_jportmidi_JPortMidiApi_Pm_1Read</name>
        <param>
          <type>JNIEnv *</type>
          <declname>env</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>cl</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jstream</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jpmevent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_java/pmjni/pmjni.c" line="240" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_java/pmjni/pmjni.c" bodystart="241" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="pmjni_8c_1a1961f7e1dbd724bb9a4024b7bb1de287" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>JNIEXPORT jint JNICALL</type>
        <definition>JNIEXPORT jint JNICALL Java_jportmidi_JPortMidiApi_Pm_1Poll</definition>
        <argsstring>(JNIEnv *env, jclass cl, jobject jstream)</argsstring>
        <name>Java_jportmidi_JPortMidiApi_Pm_1Poll</name>
        <param>
          <type>JNIEnv *</type>
          <declname>env</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>cl</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jstream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_java/pmjni/pmjni.c" line="261" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_java/pmjni/pmjni.c" bodystart="262" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="pmjni_8c_1a56e71154729810a5a422e58a7189b355" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>JNIEXPORT jint JNICALL</type>
        <definition>JNIEXPORT jint JNICALL Java_jportmidi_JPortMidiApi_Pm_1Write</definition>
        <argsstring>(JNIEnv *env, jclass cl, jobject jstream, jobject jpmevent)</argsstring>
        <name>Java_jportmidi_JPortMidiApi_Pm_1Write</name>
        <param>
          <type>JNIEnv *</type>
          <declname>env</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>cl</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jstream</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jpmevent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_java/pmjni/pmjni.c" line="273" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_java/pmjni/pmjni.c" bodystart="274" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="pmjni_8c_1a4a37496e5e16940572b9eeb7002b76a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>JNIEXPORT jint JNICALL</type>
        <definition>JNIEXPORT jint JNICALL Java_jportmidi_JPortMidiApi_Pm_1WriteShort</definition>
        <argsstring>(JNIEnv *env, jclass cl, jobject jstream, jint when, jint msg)</argsstring>
        <name>Java_jportmidi_JPortMidiApi_Pm_1WriteShort</name>
        <param>
          <type>JNIEnv *</type>
          <declname>env</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>cl</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jstream</declname>
        </param>
        <param>
          <type>jint</type>
          <declname>when</declname>
        </param>
        <param>
          <type>jint</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_java/pmjni/pmjni.c" line="294" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_java/pmjni/pmjni.c" bodystart="295" bodyend="300"/>
      </memberdef>
      <memberdef kind="function" id="pmjni_8c_1a3129cece0064d2d183a35001fa8cb4c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>JNIEXPORT jint JNICALL</type>
        <definition>JNIEXPORT jint JNICALL Java_jportmidi_JPortMidiApi_Pm_1WriteSysEx</definition>
        <argsstring>(JNIEnv *env, jclass cl, jobject jstream, jint when, jbyteArray jmsg)</argsstring>
        <name>Java_jportmidi_JPortMidiApi_Pm_1WriteSysEx</name>
        <param>
          <type>JNIEnv *</type>
          <declname>env</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>cl</declname>
        </param>
        <param>
          <type>jobject</type>
          <declname>jstream</declname>
        </param>
        <param>
          <type>jint</type>
          <declname>when</declname>
        </param>
        <param>
          <type>jbyteArray</type>
          <declname>jmsg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_java/pmjni/pmjni.c" line="306" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_java/pmjni/pmjni.c" bodystart="307" bodyend="316"/>
      </memberdef>
      <memberdef kind="function" id="pmjni_8c_1a947486dcbcb7a098452a0a2283bbfa76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>JNIEXPORT jint JNICALL</type>
        <definition>JNIEXPORT jint JNICALL Java_jportmidi_JPortMidiApi_Pt_1TimeStart</definition>
        <argsstring>(JNIEnv *env, jclass c, jint resolution)</argsstring>
        <name>Java_jportmidi_JPortMidiApi_Pt_1TimeStart</name>
        <param>
          <type>JNIEnv *</type>
          <declname>env</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>c</declname>
        </param>
        <param>
          <type>jint</type>
          <declname>resolution</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_java/pmjni/pmjni.c" line="321" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_java/pmjni/pmjni.c" bodystart="322" bodyend="325"/>
      </memberdef>
      <memberdef kind="function" id="pmjni_8c_1a747a64bee8de7feef71920e515709c7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>JNIEXPORT jint JNICALL</type>
        <definition>JNIEXPORT jint JNICALL Java_jportmidi_JPortMidiApi_Pt_1TimeStop</definition>
        <argsstring>(JNIEnv *env, jclass c)</argsstring>
        <name>Java_jportmidi_JPortMidiApi_Pt_1TimeStop</name>
        <param>
          <type>JNIEnv *</type>
          <declname>env</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_java/pmjni/pmjni.c" line="330" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_java/pmjni/pmjni.c" bodystart="331" bodyend="334"/>
      </memberdef>
      <memberdef kind="function" id="pmjni_8c_1a6363678f4756ea2f22cc4088908f3fb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>JNIEXPORT jint JNICALL</type>
        <definition>JNIEXPORT jint JNICALL Java_jportmidi_JPortMidiApi_Pt_1Time</definition>
        <argsstring>(JNIEnv *env, jclass c)</argsstring>
        <name>Java_jportmidi_JPortMidiApi_Pt_1Time</name>
        <param>
          <type>JNIEnv *</type>
          <declname>env</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_java/pmjni/pmjni.c" line="339" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_java/pmjni/pmjni.c" bodystart="340" bodyend="343"/>
      </memberdef>
      <memberdef kind="function" id="pmjni_8c_1a94b93fe5f9a581600ea6f1f230298a46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>JNIEXPORT jboolean JNICALL</type>
        <definition>JNIEXPORT jboolean JNICALL Java_jportmidi_JPortMidiApi_Pt_1TimeStarted</definition>
        <argsstring>(JNIEnv *env, jclass c)</argsstring>
        <name>Java_jportmidi_JPortMidiApi_Pt_1TimeStarted</name>
        <param>
          <type>JNIEnv *</type>
          <declname>env</declname>
        </param>
        <param>
          <type>jclass</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_java/pmjni/pmjni.c" line="348" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_java/pmjni/pmjni.c" bodystart="349" bodyend="352"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="portmidi_8h" kindref="compound">portmidi.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="porttime_8h" kindref="compound">porttime.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="jportmidi___jport_midi_api_8h" kindref="compound">jportmidi_JportMidiApi.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>these<sp/>macros<sp/>assume<sp/>JNIEnv<sp/>*env<sp/>is<sp/>declared<sp/>and<sp/>valid:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8" refid="pmjni_8c_1a407b09d289c6b62a355d11c0e6323ac7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CLASS(c,<sp/>obj)<sp/>jclass<sp/>c<sp/>=<sp/>(*env)-&gt;GetObjectClass(env,<sp/>obj)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9" refid="pmjni_8c_1a1e7a97d58892e386b7cd8d1c988dab90" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ADDRESS_FID(fid,<sp/>c)<sp/>\</highlight></codeline>
<codeline lineno="10"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>jfieldID<sp/>fid<sp/>=<sp/>(*env)-&gt;GetFieldID(env,<sp/>c,<sp/>&quot;address&quot;,<sp/>&quot;J&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Uses<sp/>Java<sp/>Long<sp/>(64-bit)<sp/>to<sp/>make<sp/>sure<sp/>there<sp/>is<sp/>room<sp/>to<sp/>store<sp/>a<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>pointer.<sp/>Cast<sp/>this<sp/>to<sp/>a<sp/>C<sp/>long<sp/>(either<sp/>32<sp/>or<sp/>64<sp/>bit)<sp/>to<sp/>match</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>size<sp/>of<sp/>a<sp/>pointer.<sp/>Finally<sp/>cast<sp/>int<sp/>to<sp/>pointer.<sp/>All<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>is<sp/>supposed<sp/>to<sp/>avoid<sp/>C<sp/>compiler<sp/>warnings<sp/>and<sp/>(worse)<sp/>losing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>address<sp/>bits.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="pmjni_8c_1a1100a0303ab008684426b5bd55aa09c1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PMSTREAM(obj,<sp/>fid)<sp/>((PmStream<sp/>*)<sp/>(long)<sp/>(*env)-&gt;GetLongField(env,<sp/>obj,<sp/>fid))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Cast<sp/>stream<sp/>to<sp/>long<sp/>to<sp/>convert<sp/>integer<sp/>to<sp/>pointer,<sp/>then<sp/>expand</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>integer<sp/>to<sp/>64-bit<sp/>jlong.<sp/>This<sp/>avoids<sp/>compiler<sp/>warnings.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="pmjni_8c_1af6341666e879bb72a26f922b316e2ebd" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SET_PMSTREAM(obj,<sp/>fid,<sp/>stream)<sp/>\</highlight></codeline>
<codeline lineno="20"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(*env)-&gt;SetLongField(env,<sp/>obj,<sp/>fid,<sp/>(jlong)<sp/>(long)<sp/>stream)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>Method:<sp/><sp/><sp/><sp/>Pm_Initialize</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal">JNIEXPORT<sp/>jint<sp/>JNICALL<sp/><ref refid="pmjni_8c_1a407a49e23945c78fb5a5a518d01ff2b4" kindref="member">Java_jportmidi_JPortMidiApi_Pm_1Initialize</ref></highlight></codeline>
<codeline lineno="27" refid="pmjni_8c_1a407a49e23945c78fb5a5a518d01ff2b4" refkind="member"><highlight class="normal"><sp/><sp/>(JNIEnv<sp/>*env,<sp/>jclass<sp/>cl)</highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8c_1a5e9d0c116061f0cc25fb789fc393b417" kindref="member">Pm_Initialize</ref>();</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>Method:<sp/><sp/><sp/><sp/>Pm_Terminate</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal">JNIEXPORT<sp/>jint<sp/>JNICALL<sp/><ref refid="pmjni_8c_1a6beef1b879ca0a7d8d969e9d976e60b0" kindref="member">Java_jportmidi_JPortMidiApi_Pm_1Terminate</ref></highlight></codeline>
<codeline lineno="37" refid="pmjni_8c_1a6beef1b879ca0a7d8d969e9d976e60b0" refkind="member"><highlight class="normal"><sp/><sp/>(JNIEnv<sp/>*env,<sp/>jclass<sp/>cl)</highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8c_1a6c5dd5cd3657ac1cdab6bc5f3063193e" kindref="member">Pm_Terminate</ref>();</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/>Method:<sp/><sp/><sp/><sp/>Pm_HasHostError</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal">JNIEXPORT<sp/>jint<sp/>JNICALL<sp/><ref refid="pmjni_8c_1a82203ac35e25359c5353ac49cf35d98f" kindref="member">Java_jportmidi_JPortMidiApi_Pm_1HasHostError</ref></highlight></codeline>
<codeline lineno="47" refid="pmjni_8c_1a82203ac35e25359c5353ac49cf35d98f" refkind="member"><highlight class="normal"><sp/><sp/>(JNIEnv<sp/>*env,<sp/>jclass<sp/>cl,<sp/>jobject<sp/>jstream)</highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pmjni_8c_1a407b09d289c6b62a355d11c0e6323ac7" kindref="member">CLASS</ref>(<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>,<sp/>jstream);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pmjni_8c_1a1e7a97d58892e386b7cd8d1c988dab90" kindref="member">ADDRESS_FID</ref>(fid,<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8c_1aa631918a228994f19bed5dcbc398d59a" kindref="member">Pm_HasHostError</ref>(<ref refid="pmjni_8c_1a1100a0303ab008684426b5bd55aa09c1" kindref="member">PMSTREAM</ref>(jstream,<sp/>fid));</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*<sp/>Method:<sp/><sp/><sp/><sp/>Pm_GetErrorText</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal">JNIEXPORT<sp/>jstring<sp/>JNICALL<sp/><ref refid="pmjni_8c_1a0e90a06d91d6c186056fdae84fa2402f" kindref="member">Java_jportmidi_JPortMidiApi_Pm_1GetErrorText</ref></highlight></codeline>
<codeline lineno="59" refid="pmjni_8c_1a0e90a06d91d6c186056fdae84fa2402f" refkind="member"><highlight class="normal"><sp/><sp/>(JNIEnv<sp/>*env,<sp/>jclass<sp/>cl,<sp/>jint<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)</highlight></codeline>
<codeline lineno="60"><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*env)-&gt;NewStringUTF(env,<sp/><ref refid="portmidi_8c_1af6f9fa86b2192d5df87a36762f43b1a4" kindref="member">Pm_GetErrorText</ref>(i));</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*<sp/>Method:<sp/><sp/><sp/><sp/>Pm_GetHostErrorText</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal">JNIEXPORT<sp/>jstring<sp/>JNICALL<sp/><ref refid="pmjni_8c_1ae1298807fdcbb955fd7154f4e10cfbf9" kindref="member">Java_jportmidi_JPortMidiApi_Pm_1GetHostErrorText</ref></highlight></codeline>
<codeline lineno="69" refid="pmjni_8c_1ae1298807fdcbb955fd7154f4e10cfbf9" refkind="member"><highlight class="normal"><sp/><sp/>(JNIEnv<sp/>*env,<sp/>jclass<sp/>cl)</highlight></codeline>
<codeline lineno="70"><highlight class="normal">{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>msg[<ref refid="portmidi_8h_1a40b1b3ff3147b3e0dff5843911345c8e" kindref="member">PM_HOST_ERROR_MSG_LEN</ref>];</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portmidi_8c_1ae5dd1f766c2d1f492ab4a9a4a6da651f" kindref="member">Pm_GetHostErrorText</ref>(msg,<sp/><ref refid="portmidi_8h_1a40b1b3ff3147b3e0dff5843911345c8e" kindref="member">PM_HOST_ERROR_MSG_LEN</ref>);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*env)-&gt;NewStringUTF(env,<sp/>msg);</highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/>*<sp/>Method:<sp/><sp/><sp/><sp/>Pm_CountDevices</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal">JNIEXPORT<sp/>jint<sp/>JNICALL<sp/><ref refid="pmjni_8c_1afebbc5212cf7bd8f6827fee49a823bc5" kindref="member">Java_jportmidi_JPortMidiApi_Pm_1CountDevices</ref></highlight></codeline>
<codeline lineno="81" refid="pmjni_8c_1afebbc5212cf7bd8f6827fee49a823bc5" refkind="member"><highlight class="normal"><sp/><sp/>(JNIEnv<sp/>*env,<sp/>jclass<sp/>cl)</highlight></codeline>
<codeline lineno="82"><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8c_1aa09d809f5c5bdc5d2fc9b3d2290ec282" kindref="member">Pm_CountDevices</ref>();</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/>*<sp/>Method:<sp/><sp/><sp/><sp/>Pm_GetDefaultInputDeviceID</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal">JNIEXPORT<sp/>jint<sp/>JNICALL<sp/><ref refid="pmjni_8c_1a5737c584121ed301dc59a346a8a4fe96" kindref="member">Java_jportmidi_JPortMidiApi_Pm_1GetDefaultInputDeviceID</ref></highlight></codeline>
<codeline lineno="91" refid="pmjni_8c_1a5737c584121ed301dc59a346a8a4fe96" refkind="member"><highlight class="normal"><sp/><sp/>(JNIEnv<sp/>*env,<sp/>jclass<sp/>cl)</highlight></codeline>
<codeline lineno="92"><highlight class="normal">{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1aea8a714900f14e5214f3b503ecffa497" kindref="member">Pm_GetDefaultInputDeviceID</ref>();</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/>*<sp/>Method:<sp/><sp/><sp/><sp/>Pm_GetDefaultOutputDeviceID</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal">JNIEXPORT<sp/>jint<sp/>JNICALL<sp/><ref refid="pmjni_8c_1affe20cfde5b94d3bf2ef5442ffd811c1" kindref="member">Java_jportmidi_JPortMidiApi_Pm_1GetDefaultOutputDeviceID</ref></highlight></codeline>
<codeline lineno="101" refid="pmjni_8c_1affe20cfde5b94d3bf2ef5442ffd811c1" refkind="member"><highlight class="normal"><sp/><sp/>(JNIEnv<sp/>*env,<sp/>jclass<sp/>cl)</highlight></codeline>
<codeline lineno="102"><highlight class="normal">{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fc98bd54bd260f0db1e4e67513c838d" kindref="member">Pm_GetDefaultOutputDeviceID</ref>();</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/>*<sp/>Method:<sp/><sp/><sp/><sp/>Pm_GetDeviceInterf</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal">JNIEXPORT<sp/>jstring<sp/>JNICALL<sp/><ref refid="pmjni_8c_1adc8eafacc8fe5323638a31cde1915868" kindref="member">Java_jportmidi_JPortMidiApi_Pm_1GetDeviceInterf</ref></highlight></codeline>
<codeline lineno="111" refid="pmjni_8c_1adc8eafacc8fe5323638a31cde1915868" refkind="member"><highlight class="normal"><sp/><sp/>(JNIEnv<sp/>*env,<sp/>jclass<sp/>cl,<sp/>jint<sp/>i)</highlight></codeline>
<codeline lineno="112"><highlight class="normal">{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_pm_device_info" kindref="compound">PmDeviceInfo</ref><sp/>*<ref refid="lib_2expat_8h_1a20806b446e455c50dc5653b7d43e3de2" kindref="member">info</ref><sp/>=<sp/><ref refid="group__grp__device_1ga2ff3676bcff6077e64ef6f3eb57fb37e" kindref="member">Pm_GetDeviceInfo</ref>(i);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!info)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*env)-&gt;NewStringUTF(env,<sp/>info-&gt;<ref refid="struct_pm_device_info_1a8c83e0e882db5a980a007437a806363b" kindref="member">interf</ref>);</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/>*<sp/>Method:<sp/><sp/><sp/><sp/>Pm_GetDeviceName</highlight></codeline>
<codeline lineno="121"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal">JNIEXPORT<sp/>jstring<sp/>JNICALL<sp/><ref refid="pmjni_8c_1aa85c387fa3af8a426d9ad3663fc552bb" kindref="member">Java_jportmidi_JPortMidiApi_Pm_1GetDeviceName</ref></highlight></codeline>
<codeline lineno="123" refid="pmjni_8c_1aa85c387fa3af8a426d9ad3663fc552bb" refkind="member"><highlight class="normal"><sp/><sp/>(JNIEnv<sp/>*env,<sp/>jclass<sp/>cl,<sp/>jint<sp/>i)</highlight></codeline>
<codeline lineno="124"><highlight class="normal">{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_pm_device_info" kindref="compound">PmDeviceInfo</ref><sp/>*<ref refid="lib_2expat_8h_1a20806b446e455c50dc5653b7d43e3de2" kindref="member">info</ref><sp/>=<sp/><ref refid="group__grp__device_1ga2ff3676bcff6077e64ef6f3eb57fb37e" kindref="member">Pm_GetDeviceInfo</ref>(i);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!info)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*env)-&gt;NewStringUTF(env,<sp/>info-&gt;<ref refid="struct_pm_device_info_1a5f708c92e58b1c77454bffeee1d7c61c" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/>*<sp/>Method:<sp/><sp/><sp/><sp/>Pm_GetDeviceInput</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal">JNIEXPORT<sp/>jboolean<sp/>JNICALL<sp/><ref refid="pmjni_8c_1ac8d896b55a856b34d8fecdea1265a390" kindref="member">Java_jportmidi_JPortMidiApi_Pm_1GetDeviceInput</ref></highlight></codeline>
<codeline lineno="135" refid="pmjni_8c_1ac8d896b55a856b34d8fecdea1265a390" refkind="member"><highlight class="normal"><sp/><sp/>(JNIEnv<sp/>*env,<sp/>jclass<sp/>cl,<sp/>jint<sp/>i)</highlight></codeline>
<codeline lineno="136"><highlight class="normal">{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_pm_device_info" kindref="compound">PmDeviceInfo</ref><sp/>*<ref refid="lib_2expat_8h_1a20806b446e455c50dc5653b7d43e3de2" kindref="member">info</ref><sp/>=<sp/><ref refid="group__grp__device_1ga2ff3676bcff6077e64ef6f3eb57fb37e" kindref="member">Pm_GetDeviceInfo</ref>(i);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!info)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(jboolean)<sp/>0;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(jboolean)<sp/>info-&gt;<ref refid="struct_pm_device_info_1a9447230099afd8efc3f57906a02f6eba" kindref="member">input</ref>;</highlight></codeline>
<codeline lineno="140"><highlight class="normal">}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/>*<sp/>Method:<sp/><sp/><sp/><sp/>Pm_GetDeviceOutput</highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal">JNIEXPORT<sp/>jboolean<sp/>JNICALL<sp/><ref refid="pmjni_8c_1a35f87923e2c2b61f448dcc64bf9db71a" kindref="member">Java_jportmidi_JPortMidiApi_Pm_1GetDeviceOutput</ref></highlight></codeline>
<codeline lineno="147" refid="pmjni_8c_1a35f87923e2c2b61f448dcc64bf9db71a" refkind="member"><highlight class="normal"><sp/><sp/>(JNIEnv<sp/>*env,<sp/>jclass<sp/>cl,<sp/>jint<sp/>i)</highlight></codeline>
<codeline lineno="148"><highlight class="normal">{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_pm_device_info" kindref="compound">PmDeviceInfo</ref><sp/>*<ref refid="lib_2expat_8h_1a20806b446e455c50dc5653b7d43e3de2" kindref="member">info</ref><sp/>=<sp/><ref refid="group__grp__device_1ga2ff3676bcff6077e64ef6f3eb57fb37e" kindref="member">Pm_GetDeviceInfo</ref>(i);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!info)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(jboolean)<sp/>0;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(jboolean)<sp/>info-&gt;<ref refid="struct_pm_device_info_1a0e395068e4eee637cc576541884d7e69" kindref="member">output</ref>;</highlight></codeline>
<codeline lineno="152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/>*<sp/>Method:<sp/><sp/><sp/><sp/>Pm_OpenInput</highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal">JNIEXPORT<sp/>jint<sp/>JNICALL<sp/><ref refid="pmjni_8c_1a96953170ba9851f77ac28c5bb37f81e7" kindref="member">Java_jportmidi_JPortMidiApi_Pm_1OpenInput</ref></highlight></codeline>
<codeline lineno="159" refid="pmjni_8c_1a96953170ba9851f77ac28c5bb37f81e7" refkind="member"><highlight class="normal"><sp/><sp/>(JNIEnv<sp/>*env,<sp/>jclass<sp/>cl,<sp/></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/>jobject<sp/>jstream,<sp/>jint<sp/>index,<sp/>jstring<sp/>extras,<sp/>jint<sp/>bufsiz)</highlight></codeline>
<codeline lineno="161"><highlight class="normal">{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/>rslt;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portmidi_8h_1af4949219ee1bb0afc857cb242d123914" kindref="member">PortMidiStream</ref><sp/>*stream;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pmjni_8c_1a407b09d289c6b62a355d11c0e6323ac7" kindref="member">CLASS</ref>(<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>,<sp/>jstream);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pmjni_8c_1a1e7a97d58892e386b7cd8d1c988dab90" kindref="member">ADDRESS_FID</ref>(fid,<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/><ref refid="group__grp__device_1gabd50a31baaa494ad8b405f9ad54c966e" kindref="member">Pm_OpenInput</ref>(&amp;stream,<sp/>index,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>bufsiz,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pmjni_8c_1af6341666e879bb72a26f922b316e2ebd" kindref="member">SET_PMSTREAM</ref>(jstream,<sp/>fid,<sp/>stream);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rslt;</highlight></codeline>
<codeline lineno="169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="173"><highlight class="comment"><sp/>*<sp/>Method:<sp/><sp/><sp/><sp/>Pm_OpenOutput</highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal">JNIEXPORT<sp/>jint<sp/>JNICALL<sp/><ref refid="pmjni_8c_1a6c9b0718548483fdd672eb3869adcb33" kindref="member">Java_jportmidi_JPortMidiApi_Pm_1OpenOutput</ref></highlight></codeline>
<codeline lineno="176" refid="pmjni_8c_1a6c9b0718548483fdd672eb3869adcb33" refkind="member"><highlight class="normal"><sp/><sp/>(JNIEnv<sp/>*env,<sp/>jclass<sp/>cl,<sp/>jobject<sp/>jstream,<sp/>jint<sp/>index,<sp/>jstring<sp/>extras,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/>jint<sp/>bufsiz,<sp/>jint<sp/><ref refid="sysex_8c_1a9c5bf07170b5d91cfb44d4bfd0517128" kindref="member">latency</ref>)</highlight></codeline>
<codeline lineno="178"><highlight class="normal">{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/>rslt;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portmidi_8h_1af4949219ee1bb0afc857cb242d123914" kindref="member">PortMidiStream</ref><sp/>*stream;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pmjni_8c_1a407b09d289c6b62a355d11c0e6323ac7" kindref="member">CLASS</ref>(<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>,<sp/>jstream);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pmjni_8c_1a1e7a97d58892e386b7cd8d1c988dab90" kindref="member">ADDRESS_FID</ref>(fid,<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/><ref refid="group__grp__device_1ga134924cfa8badeecff3c5e1f22aee178" kindref="member">Pm_OpenOutput</ref>(&amp;stream,<sp/>index,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>bufsiz,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>latency);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pmjni_8c_1af6341666e879bb72a26f922b316e2ebd" kindref="member">SET_PMSTREAM</ref>(jstream,<sp/>fid,<sp/>stream);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rslt;</highlight></codeline>
<codeline lineno="186"><highlight class="normal">}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="190"><highlight class="comment"><sp/>*<sp/>Method:<sp/><sp/><sp/><sp/>Pm_SetFilter</highlight></codeline>
<codeline lineno="191"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal">JNIEXPORT<sp/>jint<sp/>JNICALL<sp/><ref refid="pmjni_8c_1a887829ac94b6888a9ff8e385e634e2ba" kindref="member">Java_jportmidi_JPortMidiApi_Pm_1SetFilter</ref></highlight></codeline>
<codeline lineno="193" refid="pmjni_8c_1a887829ac94b6888a9ff8e385e634e2ba" refkind="member"><highlight class="normal"><sp/><sp/>(JNIEnv<sp/>*env,<sp/>jclass<sp/>cl,<sp/>jobject<sp/>jstream,<sp/>jint<sp/>filters)</highlight></codeline>
<codeline lineno="194"><highlight class="normal">{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pmjni_8c_1a407b09d289c6b62a355d11c0e6323ac7" kindref="member">CLASS</ref>(<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>,<sp/>jstream);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pmjni_8c_1a1e7a97d58892e386b7cd8d1c988dab90" kindref="member">ADDRESS_FID</ref>(fid,<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__grp__events__filters_1ga1a2b69b85efe9743345e18fc96607994" kindref="member">Pm_SetFilter</ref>(<ref refid="pmjni_8c_1a1100a0303ab008684426b5bd55aa09c1" kindref="member">PMSTREAM</ref>(jstream,<sp/>fid),<sp/>filters);</highlight></codeline>
<codeline lineno="198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="202"><highlight class="comment"><sp/>*<sp/>Method:<sp/><sp/><sp/><sp/>Pm_SetChannelMask</highlight></codeline>
<codeline lineno="203"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal">JNIEXPORT<sp/>jint<sp/>JNICALL<sp/><ref refid="pmjni_8c_1aa0712896b102422c07c3267c008f7a0c" kindref="member">Java_jportmidi_JPortMidiApi_Pm_1SetChannelMask</ref></highlight></codeline>
<codeline lineno="205" refid="pmjni_8c_1aa0712896b102422c07c3267c008f7a0c" refkind="member"><highlight class="normal"><sp/><sp/>(JNIEnv<sp/>*env,<sp/>jclass<sp/>cl,<sp/>jobject<sp/>jstream,<sp/>jint<sp/><ref refid="structmask" kindref="compound">mask</ref>)</highlight></codeline>
<codeline lineno="206"><highlight class="normal">{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pmjni_8c_1a407b09d289c6b62a355d11c0e6323ac7" kindref="member">CLASS</ref>(<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>,<sp/>jstream);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pmjni_8c_1a1e7a97d58892e386b7cd8d1c988dab90" kindref="member">ADDRESS_FID</ref>(fid,<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__grp__events__filters_1ga87f9bc67a21a8b058a3f915a2f98746a" kindref="member">Pm_SetChannelMask</ref>(<ref refid="pmjni_8c_1a1100a0303ab008684426b5bd55aa09c1" kindref="member">PMSTREAM</ref>(jstream,<sp/>fid),<sp/>mask);</highlight></codeline>
<codeline lineno="210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="214"><highlight class="comment"><sp/>*<sp/>Method:<sp/><sp/><sp/><sp/>Pm_Abort</highlight></codeline>
<codeline lineno="215"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal">JNIEXPORT<sp/>jint<sp/>JNICALL<sp/><ref refid="pmjni_8c_1a4c469485ad2ada3875335e80f1037bf7" kindref="member">Java_jportmidi_JPortMidiApi_Pm_1Abort</ref></highlight></codeline>
<codeline lineno="217" refid="pmjni_8c_1a4c469485ad2ada3875335e80f1037bf7" refkind="member"><highlight class="normal"><sp/><sp/>(JNIEnv<sp/>*env,<sp/>jclass<sp/>cl,<sp/>jobject<sp/>jstream)</highlight></codeline>
<codeline lineno="218"><highlight class="normal">{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pmjni_8c_1a407b09d289c6b62a355d11c0e6323ac7" kindref="member">CLASS</ref>(<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>,<sp/>jstream);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pmjni_8c_1a1e7a97d58892e386b7cd8d1c988dab90" kindref="member">ADDRESS_FID</ref>(fid,<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__grp__events__filters_1ga8934ac3b02359b60177a06580c66a20e" kindref="member">Pm_Abort</ref>(<ref refid="pmjni_8c_1a1100a0303ab008684426b5bd55aa09c1" kindref="member">PMSTREAM</ref>(jstream,<sp/>fid));</highlight></codeline>
<codeline lineno="222"><highlight class="normal">}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="226"><highlight class="comment"><sp/>*<sp/>Method:<sp/><sp/><sp/><sp/>Pm_Close</highlight></codeline>
<codeline lineno="227"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal">JNIEXPORT<sp/>jint<sp/>JNICALL<sp/><ref refid="pmjni_8c_1acb6f281f186efe123784948ff2bdb0a6" kindref="member">Java_jportmidi_JPortMidiApi_Pm_1Close</ref></highlight></codeline>
<codeline lineno="229" refid="pmjni_8c_1acb6f281f186efe123784948ff2bdb0a6" refkind="member"><highlight class="normal"><sp/><sp/>(JNIEnv<sp/>*env,<sp/>jclass<sp/>cl,<sp/>jobject<sp/>jstream)</highlight></codeline>
<codeline lineno="230"><highlight class="normal">{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pmjni_8c_1a407b09d289c6b62a355d11c0e6323ac7" kindref="member">CLASS</ref>(<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>,<sp/>jstream);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pmjni_8c_1a1e7a97d58892e386b7cd8d1c988dab90" kindref="member">ADDRESS_FID</ref>(fid,<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__grp__events__filters_1ga6b26be2fbcf092c9625ade5303edd0ac" kindref="member">Pm_Close</ref>(<ref refid="pmjni_8c_1a1100a0303ab008684426b5bd55aa09c1" kindref="member">PMSTREAM</ref>(jstream,<sp/>fid));</highlight></codeline>
<codeline lineno="234"><highlight class="normal">}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="238"><highlight class="comment"><sp/>*<sp/>Method:<sp/><sp/><sp/><sp/>Pm_Read</highlight></codeline>
<codeline lineno="239"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal">JNIEXPORT<sp/>jint<sp/>JNICALL<sp/><ref refid="pmjni_8c_1a1c17b905a2dfddc3cd70f9fc5a4f989e" kindref="member">Java_jportmidi_JPortMidiApi_Pm_1Read</ref></highlight></codeline>
<codeline lineno="241" refid="pmjni_8c_1a1c17b905a2dfddc3cd70f9fc5a4f989e" refkind="member"><highlight class="normal"><sp/><sp/>(JNIEnv<sp/>*env,<sp/>jclass<sp/>cl,<sp/>jobject<sp/>jstream,<sp/>jobject<sp/>jpmevent)</highlight></codeline>
<codeline lineno="242"><highlight class="normal">{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pmjni_8c_1a407b09d289c6b62a355d11c0e6323ac7" kindref="member">CLASS</ref>(jstream_class,<sp/>jstream);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pmjni_8c_1a1e7a97d58892e386b7cd8d1c988dab90" kindref="member">ADDRESS_FID</ref>(address_fid,<sp/>jstream_class);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>jclass<sp/>jpmevent_class<sp/>=<sp/>(*env)-&gt;GetObjectClass(env,<sp/>jpmevent);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>jfieldID<sp/>message_fid<sp/>=<sp/></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*env)-&gt;GetFieldID(env,<sp/>jpmevent_class,<sp/></highlight><highlight class="stringliteral">&quot;message&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;I&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>jfieldID<sp/>timestamp_fid<sp/>=<sp/></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*env)-&gt;GetFieldID(env,<sp/>jpmevent_class,<sp/></highlight><highlight class="stringliteral">&quot;timestamp&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;I&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pm_event" kindref="compound">PmEvent</ref><sp/><ref refid="recplay_8c_1adbbab5cb2248179d231690a1a02ff977" kindref="member">buffer</ref>;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/>rslt<sp/>=<sp/><ref refid="group__grp__io_1ga3d59225bc890ede974f245ada3de6456" kindref="member">Pm_Read</ref>(<ref refid="pmjni_8c_1a1100a0303ab008684426b5bd55aa09c1" kindref="member">PMSTREAM</ref>(jstream,<sp/>address_fid),<sp/>&amp;buffer,<sp/>1);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>(*env)-&gt;SetIntField(env,<sp/>jpmevent,<sp/>message_fid,<sp/>buffer.<ref refid="struct_pm_event_1a2c8c12542447fdd566401fbf1a83d4e2" kindref="member">message</ref>);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>(*env)-&gt;SetIntField(env,<sp/>jpmevent,<sp/>timestamp_fid,<sp/>buffer.<ref refid="struct_pm_event_1a3854d39e3b89e1e2a4e1fda8d85c2f16" kindref="member">timestamp</ref>);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rslt;</highlight></codeline>
<codeline lineno="255"><highlight class="normal">}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="259"><highlight class="comment"><sp/>*<sp/>Method:<sp/><sp/><sp/><sp/>Pm_Poll</highlight></codeline>
<codeline lineno="260"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal">JNIEXPORT<sp/>jint<sp/>JNICALL<sp/><ref refid="pmjni_8c_1a1961f7e1dbd724bb9a4024b7bb1de287" kindref="member">Java_jportmidi_JPortMidiApi_Pm_1Poll</ref></highlight></codeline>
<codeline lineno="262" refid="pmjni_8c_1a1961f7e1dbd724bb9a4024b7bb1de287" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(JNIEnv<sp/>*env,<sp/>jclass<sp/>cl,<sp/>jobject<sp/>jstream)</highlight></codeline>
<codeline lineno="263"><highlight class="normal">{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pmjni_8c_1a407b09d289c6b62a355d11c0e6323ac7" kindref="member">CLASS</ref>(<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>,<sp/>jstream);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pmjni_8c_1a1e7a97d58892e386b7cd8d1c988dab90" kindref="member">ADDRESS_FID</ref>(fid,<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__grp__io_1ga54198ca9dc1af9d82ec5f44f661faeea" kindref="member">Pm_Poll</ref>(<ref refid="pmjni_8c_1a1100a0303ab008684426b5bd55aa09c1" kindref="member">PMSTREAM</ref>(jstream,<sp/>fid));</highlight></codeline>
<codeline lineno="267"><highlight class="normal">}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="271"><highlight class="comment"><sp/>*<sp/>Method:<sp/><sp/><sp/><sp/>Pm_Write</highlight></codeline>
<codeline lineno="272"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal">JNIEXPORT<sp/>jint<sp/>JNICALL<sp/><ref refid="pmjni_8c_1a56e71154729810a5a422e58a7189b355" kindref="member">Java_jportmidi_JPortMidiApi_Pm_1Write</ref></highlight></codeline>
<codeline lineno="274" refid="pmjni_8c_1a56e71154729810a5a422e58a7189b355" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(JNIEnv<sp/>*env,<sp/>jclass<sp/>cl,<sp/>jobject<sp/>jstream,<sp/>jobject<sp/>jpmevent)</highlight></codeline>
<codeline lineno="275"><highlight class="normal">{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pmjni_8c_1a407b09d289c6b62a355d11c0e6323ac7" kindref="member">CLASS</ref>(jstream_class,<sp/>jstream);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pmjni_8c_1a1e7a97d58892e386b7cd8d1c988dab90" kindref="member">ADDRESS_FID</ref>(address_fid,<sp/>jstream_class);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>jclass<sp/>jpmevent_class<sp/>=<sp/>(*env)-&gt;GetObjectClass(env,<sp/>jpmevent);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>jfieldID<sp/>message_fid<sp/>=<sp/></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*env)-&gt;GetFieldID(env,<sp/>jpmevent_class,<sp/></highlight><highlight class="stringliteral">&quot;message&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;I&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>jfieldID<sp/>timestamp_fid<sp/>=<sp/></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*env)-&gt;GetFieldID(env,<sp/>jpmevent_class,<sp/></highlight><highlight class="stringliteral">&quot;timestamp&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;I&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>note<sp/>that<sp/>we<sp/>call<sp/>WriteShort<sp/>because<sp/>it&apos;s<sp/>simpler<sp/>than<sp/>constructing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>buffer<sp/>and<sp/>passing<sp/>it<sp/>to<sp/>Pm_Write</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__grp__io_1ga4a8cdd77e5b2ad4c16338eed475dfc6b" kindref="member">Pm_WriteShort</ref>(<ref refid="pmjni_8c_1a1100a0303ab008684426b5bd55aa09c1" kindref="member">PMSTREAM</ref>(jstream,<sp/>address_fid),</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*env)-&gt;GetIntField(env,<sp/>jpmevent,<sp/>timestamp_fid),</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*env)-&gt;GetIntField(env,<sp/>jpmevent,<sp/>message_fid));</highlight></codeline>
<codeline lineno="288"><highlight class="normal">}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="292"><highlight class="comment"><sp/>*<sp/>Method:<sp/><sp/><sp/><sp/>Pm_WriteShort</highlight></codeline>
<codeline lineno="293"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal">JNIEXPORT<sp/>jint<sp/>JNICALL<sp/><ref refid="pmjni_8c_1a4a37496e5e16940572b9eeb7002b76a8" kindref="member">Java_jportmidi_JPortMidiApi_Pm_1WriteShort</ref></highlight></codeline>
<codeline lineno="295" refid="pmjni_8c_1a4a37496e5e16940572b9eeb7002b76a8" refkind="member"><highlight class="normal"><sp/><sp/>(JNIEnv<sp/>*env,<sp/>jclass<sp/>cl,<sp/>jobject<sp/>jstream,<sp/>jint<sp/>when,<sp/>jint<sp/>msg)</highlight></codeline>
<codeline lineno="296"><highlight class="normal">{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pmjni_8c_1a407b09d289c6b62a355d11c0e6323ac7" kindref="member">CLASS</ref>(<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>,<sp/>jstream);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pmjni_8c_1a1e7a97d58892e386b7cd8d1c988dab90" kindref="member">ADDRESS_FID</ref>(fid,<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__grp__io_1ga4a8cdd77e5b2ad4c16338eed475dfc6b" kindref="member">Pm_WriteShort</ref>(<ref refid="pmjni_8c_1a1100a0303ab008684426b5bd55aa09c1" kindref="member">PMSTREAM</ref>(jstream,<sp/>fid),<sp/>when,<sp/>msg);</highlight></codeline>
<codeline lineno="300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="304"><highlight class="comment"><sp/>*<sp/>Method:<sp/><sp/><sp/><sp/>Pm_WriteSysEx</highlight></codeline>
<codeline lineno="305"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal">JNIEXPORT<sp/>jint<sp/>JNICALL<sp/><ref refid="pmjni_8c_1a3129cece0064d2d183a35001fa8cb4c7" kindref="member">Java_jportmidi_JPortMidiApi_Pm_1WriteSysEx</ref></highlight></codeline>
<codeline lineno="307" refid="pmjni_8c_1a3129cece0064d2d183a35001fa8cb4c7" refkind="member"><highlight class="normal"><sp/><sp/>(JNIEnv<sp/>*env,<sp/>jclass<sp/>cl,<sp/>jobject<sp/>jstream,<sp/>jint<sp/>when,<sp/>jbyteArray<sp/>jmsg)</highlight></codeline>
<codeline lineno="308"><highlight class="normal">{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pmjni_8c_1a407b09d289c6b62a355d11c0e6323ac7" kindref="member">CLASS</ref>(<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>,<sp/>jstream);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pmjni_8c_1a1e7a97d58892e386b7cd8d1c988dab90" kindref="member">ADDRESS_FID</ref>(fid,<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>jbyte<sp/>*bytes<sp/>=<sp/>(*env)-&gt;GetByteArrayElements(env,<sp/>jmsg,<sp/>0);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/>rslt<sp/>=<sp/><ref refid="group__grp__io_1ga4bd5753bdfb53a1611bcdf5ba159fc87" kindref="member">Pm_WriteSysEx</ref>(<ref refid="pmjni_8c_1a1100a0303ab008684426b5bd55aa09c1" kindref="member">PMSTREAM</ref>(jstream,<sp/>fid),<sp/>when,<sp/></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>bytes);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>(*env)-&gt;ReleaseByteArrayElements(env,<sp/>jmsg,<sp/>bytes,<sp/>0);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rslt;</highlight></codeline>
<codeline lineno="316"><highlight class="normal">}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="319"><highlight class="comment"><sp/>*<sp/>Method:<sp/><sp/><sp/><sp/>Pt_TimeStart</highlight></codeline>
<codeline lineno="320"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal">JNIEXPORT<sp/>jint<sp/>JNICALL<sp/><ref refid="pmjni_8c_1a947486dcbcb7a098452a0a2283bbfa76" kindref="member">Java_jportmidi_JPortMidiApi_Pt_1TimeStart</ref></highlight></codeline>
<codeline lineno="322" refid="pmjni_8c_1a947486dcbcb7a098452a0a2283bbfa76" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(JNIEnv<sp/>*env,<sp/>jclass<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>,<sp/>jint<sp/>resolution)</highlight></codeline>
<codeline lineno="323"><highlight class="normal">{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="porttime_8h_1aa0fd8500047387bbe26b5f1c4d91831c" kindref="member">Pt_Start</ref>(resolution,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="325"><highlight class="normal">}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="328"><highlight class="comment"><sp/>*<sp/>Method:<sp/><sp/><sp/><sp/>Pt_TimeStop</highlight></codeline>
<codeline lineno="329"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal">JNIEXPORT<sp/>jint<sp/>JNICALL<sp/><ref refid="pmjni_8c_1a747a64bee8de7feef71920e515709c7b" kindref="member">Java_jportmidi_JPortMidiApi_Pt_1TimeStop</ref></highlight></codeline>
<codeline lineno="331" refid="pmjni_8c_1a747a64bee8de7feef71920e515709c7b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(JNIEnv<sp/>*env,<sp/>jclass<sp/>c)</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="porttime_8h_1a3d3a47e9af8a9cfea97f0237a81da85d" kindref="member">Pt_Stop</ref>();</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="337"><highlight class="comment"><sp/>*<sp/>Method:<sp/><sp/><sp/><sp/>Pt_Time</highlight></codeline>
<codeline lineno="338"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal">JNIEXPORT<sp/>jint<sp/>JNICALL<sp/><ref refid="pmjni_8c_1a6363678f4756ea2f22cc4088908f3fb6" kindref="member">Java_jportmidi_JPortMidiApi_Pt_1Time</ref></highlight></codeline>
<codeline lineno="340" refid="pmjni_8c_1a6363678f4756ea2f22cc4088908f3fb6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(JNIEnv<sp/>*env,<sp/>jclass<sp/>c)</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="porttime_8h_1a9a335bb8c04c85bf85d807dd448d72d0" kindref="member">Pt_Time</ref>();</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="346"><highlight class="comment"><sp/>*<sp/>Method:<sp/><sp/><sp/><sp/>Pt_TimeStarted</highlight></codeline>
<codeline lineno="347"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal">JNIEXPORT<sp/>jboolean<sp/>JNICALL<sp/><ref refid="pmjni_8c_1a94b93fe5f9a581600ea6f1f230298a46" kindref="member">Java_jportmidi_JPortMidiApi_Pt_1TimeStarted</ref></highlight></codeline>
<codeline lineno="349" refid="pmjni_8c_1a94b93fe5f9a581600ea6f1f230298a46" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(JNIEnv<sp/>*env,<sp/>jclass<sp/>c)</highlight></codeline>
<codeline lineno="350"><highlight class="normal">{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="porttime_8h_1ae63ed5b0017759552c7cfc560dcfe078" kindref="member">Pt_Started</ref>();</highlight></codeline>
<codeline lineno="352"><highlight class="normal">}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_java/pmjni/pmjni.c"/>
  </compounddef>
</doxygen>
