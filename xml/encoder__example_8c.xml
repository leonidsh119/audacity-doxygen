<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="encoder__example_8c" kind="file" language="C++">
    <compoundname>encoder_example.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">time.h</includes>
    <includes local="no">math.h</includes>
    <includes refid="vorbisenc_8h" local="no">vorbis/vorbisenc.h</includes>
    <incdepgraph>
      <node id="22292">
        <label>sys/types.h</label>
        <link refid="lib-src_2libvorbis_2macos_2compat_2sys_2_types_8h"/>
        <childnode refid="22293" relation="include">
        </childnode>
        <childnode refid="22294" relation="include">
        </childnode>
        <childnode refid="22281" relation="include">
        </childnode>
      </node>
      <node id="22291">
        <label>stdint.h</label>
      </node>
      <node id="22280">
        <label>stdlib.h</label>
      </node>
      <node id="22284">
        <label>vorbis/vorbisenc.h</label>
        <link refid="vorbisenc_8h"/>
        <childnode refid="22285" relation="include">
        </childnode>
      </node>
      <node id="22285">
        <label>codec.h</label>
        <link refid="codec_8h"/>
        <childnode refid="22286" relation="include">
        </childnode>
      </node>
      <node id="22287">
        <label>stddef.h</label>
      </node>
      <node id="22294">
        <label>alloca.h</label>
      </node>
      <node id="22288">
        <label>ogg/os_types.h</label>
        <link refid="os__types_8h"/>
        <childnode refid="22289" relation="include">
        </childnode>
      </node>
      <node id="22278">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/examples/encoder_example.c</label>
        <link refid="encoder_example.c"/>
        <childnode refid="22279" relation="include">
        </childnode>
        <childnode refid="22280" relation="include">
        </childnode>
        <childnode refid="22281" relation="include">
        </childnode>
        <childnode refid="22282" relation="include">
        </childnode>
        <childnode refid="22283" relation="include">
        </childnode>
        <childnode refid="22284" relation="include">
        </childnode>
      </node>
      <node id="22293">
        <label>MacTypes.h</label>
      </node>
      <node id="22281">
        <label>string.h</label>
      </node>
      <node id="22286">
        <label>ogg/ogg.h</label>
        <link refid="ogg_8h"/>
        <childnode refid="22287" relation="include">
        </childnode>
        <childnode refid="22288" relation="include">
        </childnode>
      </node>
      <node id="22282">
        <label>time.h</label>
      </node>
      <node id="22283">
        <label>math.h</label>
      </node>
      <node id="22289">
        <label>ogg/config_types.h</label>
        <link refid="config__types_8h"/>
        <childnode refid="22290" relation="include">
        </childnode>
        <childnode refid="22291" relation="include">
        </childnode>
        <childnode refid="22292" relation="include">
        </childnode>
      </node>
      <node id="22279">
        <label>stdio.h</label>
      </node>
      <node id="22290">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="encoder__example_8c_1ada74e7db007a68e763f20c17f2985356" prot="public" static="no">
        <name>READ</name>
        <initializer>1024</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/examples/encoder_example.c" line="39" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/examples/encoder_example.c" bodystart="39" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="encoder__example_8c_1a83cbd2237de513835e6bdaa8e88d9085" prot="public" static="no" mutable="no">
        <type>signed char</type>
        <definition>signed char readbuffer[READ *4+44]</definition>
        <argsstring>[READ *4+44]</argsstring>
        <name>readbuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/examples/encoder_example.c" line="40" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/examples/encoder_example.c" bodystart="40" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="encoder__example_8c_1ae66f6b31b5ad750f1fe042a706a4e3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/examples/encoder_example.c" line="42" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/examples/encoder_example.c" bodystart="42" bodyend="252"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>THIS<sp/>FILE<sp/>IS<sp/>PART<sp/>OF<sp/>THE<sp/>OggVorbis<sp/>SOFTWARE<sp/>CODEC<sp/>SOURCE<sp/>CODE.<sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>USE,<sp/>DISTRIBUTION<sp/>AND<sp/>REPRODUCTION<sp/>OF<sp/>THIS<sp/>LIBRARY<sp/>SOURCE<sp/>IS<sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>GOVERNED<sp/>BY<sp/>A<sp/>BSD-STYLE<sp/>SOURCE<sp/>LICENSE<sp/>INCLUDED<sp/>WITH<sp/>THIS<sp/>SOURCE<sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>IN<sp/>&apos;COPYING&apos;.<sp/>PLEASE<sp/>READ<sp/>THESE<sp/>TERMS<sp/>BEFORE<sp/>DISTRIBUTING.<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>THE<sp/>OggVorbis<sp/>SOURCE<sp/>CODE<sp/>IS<sp/>(C)<sp/>COPYRIGHT<sp/>1994-2007<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>by<sp/>the<sp/>Xiph.Org<sp/>Foundation<sp/>http://www.xiph.org/<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>********************************************************************</highlight></codeline>
<codeline lineno="12"><highlight class="comment"></highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>function:<sp/>simple<sp/>example<sp/>encoder</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>last<sp/>mod:<sp/>$Id:<sp/>encoder_example.c<sp/>16946<sp/>2010-03-03<sp/>16:12:40Z<sp/>xiphmont<sp/>$</highlight></codeline>
<codeline lineno="15"><highlight class="comment"></highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>takes<sp/>a<sp/>stereo<sp/>16bit<sp/>44.1kHz<sp/>WAV<sp/>file<sp/>from<sp/>stdin<sp/>and<sp/>encodes<sp/>it<sp/>into</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/><sp/>a<sp/>Vorbis<sp/>bitstream<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Note<sp/>that<sp/>this<sp/>is<sp/>POSIX,<sp/>not<sp/>ANSI,<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="vorbisenc_8h" kindref="compound">vorbis/vorbisenc.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN32<sp/></highlight><highlight class="comment">/*<sp/>We<sp/>need<sp/>the<sp/>following<sp/>two<sp/>to<sp/>set<sp/>stdin/stdout<sp/>to<sp/>binary<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="io_8h" kindref="compound">io.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fcntl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__MACOS__)<sp/>&amp;&amp;<sp/>defined(__MWERKS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;console.h&gt;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>CodeWarrior&apos;s<sp/>Mac<sp/>&quot;command-line&quot;<sp/>support<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="encoder__example_8c_1ada74e7db007a68e763f20c17f2985356" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>READ<sp/>1024</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="encoder__example_8c_1a83cbd2237de513835e6bdaa8e88d9085" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="encoder__example_8c_1a83cbd2237de513835e6bdaa8e88d9085" kindref="member">readbuffer</ref>[<ref refid="encoder__example_8c_1ada74e7db007a68e763f20c17f2985356" kindref="member">READ</ref>*4+44];<sp/></highlight><highlight class="comment">/*<sp/>out<sp/>of<sp/>the<sp/>data<sp/>segment,<sp/>not<sp/>the<sp/>stack<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="encoder__example_8c_1ae66f6b31b5ad750f1fe042a706a4e3d4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="encoder__example_8c_1ae66f6b31b5ad750f1fe042a706a4e3d4" kindref="member">main</ref>(){</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><ref refid="structogg__stream__state" kindref="compound">ogg_stream_state</ref><sp/>os;<sp/></highlight><highlight class="comment">/*<sp/>take<sp/>physical<sp/>pages,<sp/>weld<sp/>into<sp/>a<sp/>logical</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stream<sp/>of<sp/>packets<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><ref refid="structogg__page" kindref="compound">ogg_page</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>og;<sp/></highlight><highlight class="comment">/*<sp/>one<sp/>Ogg<sp/>bitstream<sp/>page.<sp/><sp/>Vorbis<sp/>packets<sp/>are<sp/>inside<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><ref refid="structogg__packet" kindref="compound">ogg_packet</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>op;<sp/></highlight><highlight class="comment">/*<sp/>one<sp/>raw<sp/>packet<sp/>of<sp/>data<sp/>for<sp/>decode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><ref refid="structvorbis__info" kindref="compound">vorbis_info</ref><sp/><sp/><sp/><sp/><sp/><sp/>vi;<sp/></highlight><highlight class="comment">/*<sp/>struct<sp/>that<sp/>stores<sp/>all<sp/>the<sp/>static<sp/>vorbis<sp/>bitstream</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>settings<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><ref refid="structvorbis__comment" kindref="compound">vorbis_comment</ref><sp/><sp/><sp/>vc;<sp/></highlight><highlight class="comment">/*<sp/>struct<sp/>that<sp/>stores<sp/>all<sp/>the<sp/>user<sp/>comments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><ref refid="structvorbis__dsp__state" kindref="compound">vorbis_dsp_state</ref><sp/>vd;<sp/></highlight><highlight class="comment">/*<sp/>central<sp/>working<sp/>state<sp/>for<sp/>the<sp/>packet-&gt;PCM<sp/>decoder<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><ref refid="structvorbis__block" kindref="compound">vorbis_block</ref><sp/><sp/><sp/><sp/><sp/>vb;<sp/></highlight><highlight class="comment">/*<sp/>local<sp/>working<sp/>space<sp/>for<sp/>packet-&gt;PCM<sp/>decode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eos=0,ret;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/>founddata;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(macintosh)<sp/>&amp;&amp;<sp/>defined(__MWERKS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cmdline_8c_1aaffeb1bf2056ea44af5b5d0ee4d6ff07" kindref="member">argc</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<ref refid="cmdline_8c_1ad407d5ba91709bd9b092003858600723" kindref="member">argv</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/>argc<sp/>=<sp/>ccommand(&amp;argv);<sp/></highlight><highlight class="comment">/*<sp/>get<sp/>a<sp/>&quot;command<sp/>line&quot;<sp/>from<sp/>the<sp/>Mac<sp/>user<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>this<sp/>also<sp/>lets<sp/>the<sp/>user<sp/>set<sp/>stdin<sp/>and<sp/>stdout<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>cheat<sp/>on<sp/>the<sp/>WAV<sp/>header;<sp/>we<sp/>just<sp/>bypass<sp/>44<sp/>bytes<sp/>(simplest<sp/>WAV</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>header<sp/>is<sp/>44<sp/>bytes)<sp/>and<sp/>assume<sp/>that<sp/>the<sp/>data<sp/>is<sp/>44.1khz,<sp/>stereo,<sp/>16<sp/>bit</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>little<sp/>endian<sp/>pcm<sp/>samples.<sp/>This<sp/>is<sp/>just<sp/>an<sp/>example,<sp/>after<sp/>all.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN32<sp/></highlight><highlight class="comment">/*<sp/>We<sp/>need<sp/>to<sp/>set<sp/>stdin/stdout<sp/>to<sp/>binary<sp/>mode.<sp/>Damn<sp/>windows.<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>we<sp/>were<sp/>reading/writing<sp/>a<sp/>file,<sp/>it<sp/>would<sp/>also<sp/>need<sp/>to<sp/>in</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>binary<sp/>mode,<sp/>eg,<sp/>fopen(&quot;file.wav&quot;,&quot;wb&quot;);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Beware<sp/>the<sp/>evil<sp/>ifdef.<sp/>We<sp/>avoid<sp/>these<sp/>where<sp/>we<sp/>can,<sp/>but<sp/>this<sp/>one<sp/>we</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>cannot.<sp/>Don&apos;t<sp/>add<sp/>any<sp/>more,<sp/>you&apos;ll<sp/>probably<sp/>go<sp/>to<sp/>hell<sp/>if<sp/>you<sp/>do.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>_setmode(<sp/>_fileno(<sp/>stdin<sp/>),<sp/>_O_BINARY<sp/>);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>_setmode(<sp/>_fileno(<sp/><ref refid="namespacewaflib_1_1ansiterm_1acf95a6e21629de2ca2b5716f5089f3f0" kindref="member">stdout</ref><sp/>),<sp/>_O_BINARY<sp/>);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>cheat<sp/>on<sp/>the<sp/>WAV<sp/>header;<sp/>we<sp/>just<sp/>bypass<sp/>the<sp/>header<sp/>and<sp/>never</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>verify<sp/>that<sp/>it<sp/>matches<sp/>16bit/stereo/44.1kHz.<sp/><sp/>This<sp/>is<sp/>just<sp/>an</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>example,<sp/>after<sp/>all.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><ref refid="encoder__example_8c_1a83cbd2237de513835e6bdaa8e88d9085" kindref="member">readbuffer</ref>[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0,<sp/>founddata=0;<sp/>i&lt;30<sp/>&amp;&amp;<sp/>!<sp/>feof(stdin)<sp/>&amp;&amp;<sp/>!<sp/>ferror(stdin);<sp/>i++)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>fread(<ref refid="encoder__example_8c_1a83cbd2237de513835e6bdaa8e88d9085" kindref="member">readbuffer</ref>,1,2,stdin);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!<sp/>strncmp((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<ref refid="encoder__example_8c_1a83cbd2237de513835e6bdaa8e88d9085" kindref="member">readbuffer</ref>,<sp/></highlight><highlight class="stringliteral">&quot;da&quot;</highlight><highlight class="normal">,<sp/>2)<sp/>){</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>founddata<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fread(<ref refid="encoder__example_8c_1a83cbd2237de513835e6bdaa8e88d9085" kindref="member">readbuffer</ref>,1,6,stdin);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/**********<sp/>Encode<sp/>setup<sp/>************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><ref refid="codec_8h_1af0ed4e74fe68802c7d337a2645e759d6" kindref="member">vorbis_info_init</ref>(&amp;vi);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>choose<sp/>an<sp/>encoding<sp/>mode.<sp/><sp/>A<sp/>few<sp/>possibilities<sp/>commented<sp/>out,<sp/>one</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>actually<sp/>used:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*********************************************************************</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/><sp/><sp/>Encoding<sp/>using<sp/>a<sp/>VBR<sp/>quality<sp/>mode.<sp/><sp/>The<sp/>usable<sp/>range<sp/>is<sp/>-.1</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/><sp/><sp/>(lowest<sp/>quality,<sp/>smallest<sp/>file)<sp/>to<sp/>1.<sp/>(highest<sp/>quality,<sp/>largest<sp/>file).</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/><sp/><sp/>Example<sp/>quality<sp/>mode<sp/>.4:<sp/>44kHz<sp/>stereo<sp/>coupled,<sp/>roughly<sp/>128kbps<sp/>VBR</highlight></codeline>
<codeline lineno="106"><highlight class="comment"></highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/><sp/><sp/>ret<sp/>=<sp/>vorbis_encode_init_vbr(&amp;vi,2,44100,.4);</highlight></codeline>
<codeline lineno="108"><highlight class="comment"></highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/><sp/><sp/>---------------------------------------------------------------------</highlight></codeline>
<codeline lineno="110"><highlight class="comment"></highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/><sp/><sp/>Encoding<sp/>using<sp/>an<sp/>average<sp/>bitrate<sp/>mode<sp/>(ABR).</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/><sp/><sp/>example:<sp/>44kHz<sp/>stereo<sp/>coupled,<sp/>average<sp/>128kbps<sp/>VBR</highlight></codeline>
<codeline lineno="113"><highlight class="comment"></highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/><sp/><sp/>ret<sp/>=<sp/>vorbis_encode_init(&amp;vi,2,44100,-1,128000,-1);</highlight></codeline>
<codeline lineno="115"><highlight class="comment"></highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/><sp/><sp/>---------------------------------------------------------------------</highlight></codeline>
<codeline lineno="117"><highlight class="comment"></highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/><sp/><sp/>Encode<sp/>using<sp/>a<sp/>quality<sp/>mode,<sp/>but<sp/>select<sp/>that<sp/>quality<sp/>mode<sp/>by<sp/>asking<sp/>for</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/><sp/><sp/>an<sp/>approximate<sp/>bitrate.<sp/><sp/>This<sp/>is<sp/>not<sp/>ABR,<sp/>it<sp/>is<sp/>true<sp/>VBR,<sp/>but<sp/>selected</highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/><sp/><sp/>using<sp/>the<sp/>bitrate<sp/>interface,<sp/>and<sp/>then<sp/>turning<sp/>bitrate<sp/>management<sp/>off:</highlight></codeline>
<codeline lineno="121"><highlight class="comment"></highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/><sp/><sp/>ret<sp/>=<sp/>(<sp/>vorbis_encode_setup_managed(&amp;vi,2,44100,-1,128000,-1)<sp/>||</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vorbis_encode_ctl(&amp;vi,OV_ECTL_RATEMANAGE2_SET,NULL)<sp/>||</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vorbis_encode_setup_init(&amp;vi));</highlight></codeline>
<codeline lineno="125"><highlight class="comment"></highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/><sp/><sp/>*********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>ret=<ref refid="vorbisenc_8h_1ab4e3d96c3008a29c615271d1f551c2a0" kindref="member">vorbis_encode_init_vbr</ref>(&amp;vi,2,44100,0.1);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>do<sp/>not<sp/>continue<sp/>if<sp/>setup<sp/>failed;<sp/>this<sp/>can<sp/>happen<sp/>if<sp/>we<sp/>ask<sp/>for<sp/>a</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>mode<sp/>that<sp/>libVorbis<sp/>does<sp/>not<sp/>support<sp/>(eg,<sp/>too<sp/>low<sp/>a<sp/>bitrate,<sp/>etc,</highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>will<sp/>return<sp/>&apos;OV_EIMPL&apos;)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ret)exit(1);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>add<sp/>a<sp/>comment<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><ref refid="codec_8h_1a0bab2093941e2bb89651d62ca5997676" kindref="member">vorbis_comment_init</ref>(&amp;vc);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><ref refid="codec_8h_1a0d0b69d0f7018455ad15ff735a6403fb" kindref="member">vorbis_comment_add_tag</ref>(&amp;vc,</highlight><highlight class="stringliteral">&quot;ENCODER&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;encoder_example.c&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>up<sp/>the<sp/>analysis<sp/>state<sp/>and<sp/>auxiliary<sp/>encoding<sp/>storage<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><ref refid="codec_8h_1abdcd5ee6f4e60c13505170a0f0ec752c" kindref="member">vorbis_analysis_init</ref>(&amp;vd,&amp;vi);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><ref refid="codec_8h_1ab6d85544ab746e98fc63308f6bed27a0" kindref="member">vorbis_block_init</ref>(&amp;vd,&amp;vb);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>up<sp/>our<sp/>packet-&gt;stream<sp/>encoder<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>pick<sp/>a<sp/>random<sp/>serial<sp/>number;<sp/>that<sp/>way<sp/>we<sp/>can<sp/>more<sp/>likely<sp/>build</highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>chained<sp/>streams<sp/>just<sp/>by<sp/>concatenation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>srand(<ref refid="namespacepyportmidi_1_1midi_1ad2426758f88d23d7208984d5c99ec050" kindref="member">time</ref>(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>));</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><ref refid="ogg_8h_1abbbbea9bc3d14e9aff39582854d96d94" kindref="member">ogg_stream_init</ref>(&amp;os,rand());</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Vorbis<sp/>streams<sp/>begin<sp/>with<sp/>three<sp/>headers;<sp/>the<sp/>initial<sp/>header<sp/>(with</highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>most<sp/>of<sp/>the<sp/>codec<sp/>setup<sp/>parameters)<sp/>which<sp/>is<sp/>mandated<sp/>by<sp/>the<sp/>Ogg</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>bitstream<sp/>spec.<sp/><sp/>The<sp/>second<sp/>header<sp/>holds<sp/>any<sp/>comment<sp/>fields.<sp/><sp/>The</highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>third<sp/>header<sp/>holds<sp/>the<sp/>bitstream<sp/>codebook.<sp/><sp/>We<sp/>merely<sp/>need<sp/>to</highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>make<sp/>the<sp/>headers,<sp/>then<sp/>pass<sp/>them<sp/>to<sp/>libvorbis<sp/>one<sp/>at<sp/>a<sp/>time;</highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>libvorbis<sp/>handles<sp/>the<sp/>additional<sp/>Ogg<sp/>bitstream<sp/>constraints<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structogg__packet" kindref="compound">ogg_packet</ref><sp/>header;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structogg__packet" kindref="compound">ogg_packet</ref><sp/>header_comm;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structogg__packet" kindref="compound">ogg_packet</ref><sp/>header_code;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="codec_8h_1a76b877e3ab680d7537ec58ebd7fa990a" kindref="member">vorbis_analysis_headerout</ref>(&amp;vd,&amp;vc,&amp;header,&amp;header_comm,&amp;header_code);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ogg_8h_1a57ec8183300b01784037b7fd845894e4" kindref="member">ogg_stream_packetin</ref>(&amp;os,&amp;header);<sp/></highlight><highlight class="comment">/*<sp/>automatically<sp/>placed<sp/>in<sp/>its<sp/>own</highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>page<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ogg_8h_1a57ec8183300b01784037b7fd845894e4" kindref="member">ogg_stream_packetin</ref>(&amp;os,&amp;header_comm);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ogg_8h_1a57ec8183300b01784037b7fd845894e4" kindref="member">ogg_stream_packetin</ref>(&amp;os,&amp;header_code);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>ensures<sp/>the<sp/>actual</highlight></codeline>
<codeline lineno="169"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>audio<sp/>data<sp/>will<sp/>start<sp/>on<sp/>a<sp/>new<sp/>page,<sp/>as<sp/>per<sp/>spec</highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(!eos){</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result=<ref refid="ogg_8h_1aae837247e0edb7003c7ce5b7ae76d20e" kindref="member">ogg_stream_flush</ref>(&amp;os,&amp;og);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result==0)</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fwrite(og.<ref refid="structogg__page_1a9f251dc1a96fbfd84ff2585fbbc03c16" kindref="member">header</ref>,1,og.<ref refid="structogg__page_1aeaa6edc2ff9f2c5cc8f0ecf001936b7b" kindref="member">header_len</ref>,<ref refid="namespacewaflib_1_1ansiterm_1acf95a6e21629de2ca2b5716f5089f3f0" kindref="member">stdout</ref>);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fwrite(og.<ref refid="structogg__page_1af2fdee76f20ac267c6233f1d5f8afd30" kindref="member">body</ref>,1,og.<ref refid="structogg__page_1ac6e649f0001899b512935448a903abac" kindref="member">body_len</ref>,<ref refid="namespacewaflib_1_1ansiterm_1acf95a6e21629de2ca2b5716f5089f3f0" kindref="member">stdout</ref>);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(!eos){</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>bytes=fread(<ref refid="encoder__example_8c_1a83cbd2237de513835e6bdaa8e88d9085" kindref="member">readbuffer</ref>,1,<ref refid="encoder__example_8c_1ada74e7db007a68e763f20c17f2985356" kindref="member">READ</ref>*4,stdin);<sp/></highlight><highlight class="comment">/*<sp/>stereo<sp/>hardwired<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(bytes==0){</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>end<sp/>of<sp/>file.<sp/><sp/>this<sp/>can<sp/>be<sp/>done<sp/>implicitly<sp/>in<sp/>the<sp/>mainline,</highlight></codeline>
<codeline lineno="186"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>but<sp/>it&apos;s<sp/>easier<sp/>to<sp/>see<sp/>here<sp/>in<sp/>non-clever<sp/>fashion.</highlight></codeline>
<codeline lineno="187"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Tell<sp/>the<sp/>library<sp/>we&apos;re<sp/>at<sp/>end<sp/>of<sp/>stream<sp/>so<sp/>that<sp/>it<sp/>can<sp/>handle</highlight></codeline>
<codeline lineno="188"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>last<sp/>frame<sp/>and<sp/>mark<sp/>end<sp/>of<sp/>stream<sp/>in<sp/>the<sp/>output<sp/>properly<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="codec_8h_1ae527e6764c45e6e8a23c60d777496adf" kindref="member">vorbis_analysis_wrote</ref>(&amp;vd,0);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>data<sp/>to<sp/>encode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>expose<sp/>the<sp/>buffer<sp/>to<sp/>submit<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>**<ref refid="structbuffer" kindref="compound">buffer</ref>=<ref refid="codec_8h_1ab57487095e7cb8ab66f57e6c9b6400cd" kindref="member">vorbis_analysis_buffer</ref>(&amp;vd,<ref refid="encoder__example_8c_1ada74e7db007a68e763f20c17f2985356" kindref="member">READ</ref>);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>uninterleave<sp/>samples<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;bytes/4;i++){</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[0][<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]=((<ref refid="encoder__example_8c_1a83cbd2237de513835e6bdaa8e88d9085" kindref="member">readbuffer</ref>[i*4+1]&lt;&lt;8)|</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x00ff&amp;(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="encoder__example_8c_1a83cbd2237de513835e6bdaa8e88d9085" kindref="member">readbuffer</ref>[i*4]))/32768.f;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[1][<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]=((<ref refid="encoder__example_8c_1a83cbd2237de513835e6bdaa8e88d9085" kindref="member">readbuffer</ref>[i*4+3]&lt;&lt;8)|</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x00ff&amp;(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="encoder__example_8c_1a83cbd2237de513835e6bdaa8e88d9085" kindref="member">readbuffer</ref>[i*4+2]))/32768.f;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>tell<sp/>the<sp/>library<sp/>how<sp/>much<sp/>we<sp/>actually<sp/>submitted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="codec_8h_1ae527e6764c45e6e8a23c60d777496adf" kindref="member">vorbis_analysis_wrote</ref>(&amp;vd,i);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>vorbis<sp/>does<sp/>some<sp/>data<sp/>preanalysis,<sp/>then<sp/>divvies<sp/>up<sp/>blocks<sp/>for</highlight></codeline>
<codeline lineno="210"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>more<sp/>involved<sp/>(potentially<sp/>parallel)<sp/>processing.<sp/><sp/>Get<sp/>a<sp/>single</highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block<sp/>for<sp/>encoding<sp/>now<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<ref refid="codec_8h_1a0c75b86b435cd45905ff62e2b9c93ab1" kindref="member">vorbis_analysis_blockout</ref>(&amp;vd,&amp;vb)==1){</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>analysis,<sp/>assume<sp/>we<sp/>want<sp/>to<sp/>use<sp/>bitrate<sp/>management<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="codec_8h_1a3873974078caf99893e6268e5ce6d896" kindref="member">vorbis_analysis</ref>(&amp;vb,<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="codec_8h_1a7efe5889f6919053b8ab8d69e61ac995" kindref="member">vorbis_bitrate_addblock</ref>(&amp;vb);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(<ref refid="codec_8h_1a37418540741db649a608cac3d2be440f" kindref="member">vorbis_bitrate_flushpacket</ref>(&amp;vd,&amp;op)){</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>weld<sp/>the<sp/>packet<sp/>into<sp/>the<sp/>bitstream<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ogg_8h_1a57ec8183300b01784037b7fd845894e4" kindref="member">ogg_stream_packetin</ref>(&amp;os,&amp;op);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>out<sp/>pages<sp/>(if<sp/>any)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(!eos){</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result=<ref refid="ogg_8h_1a75f6056bc13fa979a2443a3c309dc83f" kindref="member">ogg_stream_pageout</ref>(&amp;os,&amp;og);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(result==0)</highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fwrite(og.<ref refid="structogg__page_1a9f251dc1a96fbfd84ff2585fbbc03c16" kindref="member">header</ref>,1,og.<ref refid="structogg__page_1aeaa6edc2ff9f2c5cc8f0ecf001936b7b" kindref="member">header_len</ref>,<ref refid="namespacewaflib_1_1ansiterm_1acf95a6e21629de2ca2b5716f5089f3f0" kindref="member">stdout</ref>);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fwrite(og.<ref refid="structogg__page_1af2fdee76f20ac267c6233f1d5f8afd30" kindref="member">body</ref>,1,og.<ref refid="structogg__page_1ac6e649f0001899b512935448a903abac" kindref="member">body_len</ref>,<ref refid="namespacewaflib_1_1ansiterm_1acf95a6e21629de2ca2b5716f5089f3f0" kindref="member">stdout</ref>);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>this<sp/>could<sp/>be<sp/>set<sp/>above,<sp/>but<sp/>for<sp/>illustrative<sp/>purposes,<sp/>I<sp/>do</highlight></codeline>
<codeline lineno="231"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>here<sp/>(to<sp/>show<sp/>that<sp/>vorbis<sp/>does<sp/>know<sp/>where<sp/>the<sp/>stream<sp/>ends)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="ogg_8h_1ad970fa8d2ee19a0c965a45f55f108ec6" kindref="member">ogg_page_eos</ref>(&amp;og))eos=1;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>clean<sp/>up<sp/>and<sp/>exit.<sp/><sp/>vorbis_info_clear()<sp/>must<sp/>be<sp/>called<sp/>last<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><ref refid="ogg_8h_1a305dff20a5476305be61e46f6b34d4e1" kindref="member">ogg_stream_clear</ref>(&amp;os);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><ref refid="codec_8h_1a6a89cd06e8119b22a2d6a565e2d92c4e" kindref="member">vorbis_block_clear</ref>(&amp;vb);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><ref refid="codec_8h_1a3af19007415290a3f237e9a821bfe616" kindref="member">vorbis_dsp_clear</ref>(&amp;vd);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><ref refid="codec_8h_1a2fd38dcf146b850e88f281978b580d3e" kindref="member">vorbis_comment_clear</ref>(&amp;vc);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><ref refid="codec_8h_1abaf171c1341b23e1c2eed7dab00d9f4a" kindref="member">vorbis_info_clear</ref>(&amp;vi);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>ogg_page<sp/>and<sp/>ogg_packet<sp/>structs<sp/>always<sp/>point<sp/>to<sp/>storage<sp/>in</highlight></codeline>
<codeline lineno="248"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>libvorbis.<sp/><sp/>They&apos;re<sp/>never<sp/>freed<sp/>or<sp/>manipulated<sp/>directly<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;Done.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/examples/encoder_example.c"/>
  </compounddef>
</doxygen>
