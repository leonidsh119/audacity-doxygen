<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="portburn__winxp_8cpp" kind="file" language="C++">
    <compoundname>portburn_winxp.cpp</compoundname>
    <includes refid="portburn_8h" local="yes">portburn.h</includes>
    <includes local="no">windows.h</includes>
    <includes local="no">imapi.h</includes>
    <includes local="no">imapi2.h</includes>
    <incdepgraph>
      <node id="30780">
        <label>windows.h</label>
      </node>
      <node id="30779">
        <label>portburn.h</label>
        <link refid="portburn_8h"/>
      </node>
      <node id="30778">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp</label>
        <link refid="portburn_winxp.cpp"/>
        <childnode refid="30779" relation="include">
        </childnode>
        <childnode refid="30780" relation="include">
        </childnode>
        <childnode refid="30781" relation="include">
        </childnode>
        <childnode refid="30782" relation="include">
        </childnode>
      </node>
      <node id="30781">
        <label>imapi.h</label>
      </node>
      <node id="30782">
        <label>imapi2.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="struct_p_b_handle" prot="public">PBHandle</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="portburn__winxp_8cpp_1ac50762666aa00bd3a4308158510f1748" prot="public" static="no">
        <name>_WIN32_WINNT</name>
        <initializer>0x0400</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" line="16" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="portburn__winxp_8cpp_1a56ca7191999716f814071814f57edf72" prot="public" static="no">
        <name>PBFUNC</name>
        <param><defname>r</defname></param>
        <param><defname>f</defname></param>
        <initializer>extern r PortBurn_v1_ ## <ref refid="checksum_8c_1ae747d72a1a803f5ff4a4b2602857d93b" kindref="member">f</ref>;   \
   extern r PortBurn_v2_ ## <ref refid="checksum_8c_1ae747d72a1a803f5ff4a4b2602857d93b" kindref="member">f</ref>;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" line="27" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="portburn__winxp_8cpp_1a91d74b317405fff79ca4459da11f98e3" prot="public" static="no">
        <name>@216</name>
        <enumvalue id="portburn__winxp_8cpp_1a91d74b317405fff79ca4459da11f98e3a04dd28416a48dd230b529374687a6a21" prot="public">
          <name>IMAPI_V1</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="portburn__winxp_8cpp_1a91d74b317405fff79ca4459da11f98e3a55349cf1f2eacb024ac23d13dbee1bb9" prot="public">
          <name>IMAPI_V2</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="portburn__winxp_8cpp_1a91d74b317405fff79ca4459da11f98e3afe192d96889cefd1358e26e9f813d467" prot="public">
          <name>IMAPI_VERS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" line="53" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" bodystart="53" bodyend="57"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="portburn__winxp_8cpp_1ad2905cbe220a655f6c69cf1ff23b13b6" prot="public" static="no" mutable="no">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *(*</type>
        <definition>void*(* Open) ()</definition>
        <argsstring>)()</argsstring>
        <name>Open</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" line="61" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="portburn__winxp_8cpp_1ad6f32ac62ea277a3e8a068ed1faeee1f" prot="public" static="no" mutable="no">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref>(*</type>
        <definition>void(* Close) (void *handle)</definition>
        <argsstring>)(void *handle)</argsstring>
        <name>Close</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" line="62" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="portburn__winxp_8cpp_1a2ecfba3f18f86c51c5859b9832e73d63" prot="public" static="no" mutable="no">
        <type>char *(*</type>
        <definition>char*(* LastError) (void *handle)</definition>
        <argsstring>)(void *handle)</argsstring>
        <name>LastError</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" line="63" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="portburn__winxp_8cpp_1a044ee623f025da26faafefabc7382c6f" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref>(*</type>
        <definition>int(* GetNumDevices) (void *handle)</definition>
        <argsstring>)(void *handle)</argsstring>
        <name>GetNumDevices</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" line="64" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="portburn__winxp_8cpp_1ad314b5028ab1842480625e3ad911bc83" prot="public" static="no" mutable="no">
        <type>char *(*</type>
        <definition>char*(* GetDeviceName) (void *handle, int index)</definition>
        <argsstring>)(void *handle, int index)</argsstring>
        <name>GetDeviceName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" line="65" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="portburn__winxp_8cpp_1a78b642f10f26f14fa9d939d52f61a072" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref>(*</type>
        <definition>int(* OpenDevice) (void *handle, int index)</definition>
        <argsstring>)(void *handle, int index)</argsstring>
        <name>OpenDevice</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" line="66" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="portburn__winxp_8cpp_1a033ecb5e89608d3869054d57442e8890" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref>(*</type>
        <definition>int(* CloseDevice) (void *handle)</definition>
        <argsstring>)(void *handle)</argsstring>
        <name>CloseDevice</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" line="67" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="portburn__winxp_8cpp_1a0fb4ddd0b51dec486a2085bfc223485a" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref>(*</type>
        <definition>int(* EjectDevice) (void *handle)</definition>
        <argsstring>)(void *handle)</argsstring>
        <name>EjectDevice</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" line="68" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="portburn__winxp_8cpp_1a5e6469046c6fa879ada9b9883976305e" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref>(*</type>
        <definition>int(* StartErasing) (void *handle, int type)</definition>
        <argsstring>)(void *handle, int type)</argsstring>
        <name>StartErasing</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" line="69" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="portburn__winxp_8cpp_1a77785747944ddc23f88b9088f9117f09" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref>(*</type>
        <definition>int(* GetEraseStatus) (void *handle, float *out_fraction_complete)</definition>
        <argsstring>)(void *handle, float *out_fraction_complete)</argsstring>
        <name>GetEraseStatus</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" line="70" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="portburn__winxp_8cpp_1a887d255a6aeb8c0e9c2d6634e7f9fb5b" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref>(*</type>
        <definition>int(* StartStaging) (void *handle, const char *tmpdir)</definition>
        <argsstring>)(void *handle, const char *tmpdir)</argsstring>
        <name>StartStaging</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" line="71" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="portburn__winxp_8cpp_1a377d68c522340b09a3f561644df6fb78" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref>(*</type>
        <definition>int(* StartTrack) (void *handle, const char *name)</definition>
        <argsstring>)(void *handle, const char *name)</argsstring>
        <name>StartTrack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" line="72" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="portburn__winxp_8cpp_1a7832a3b6c0ab2167ffe5cc9780e31174" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref>(*</type>
        <definition>int(* AddFrame) (void *handle, short *buffer)</definition>
        <argsstring>)(void *handle, short *buffer)</argsstring>
        <name>AddFrame</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" line="73" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="portburn__winxp_8cpp_1a5591afe05099e2e8d9169d1ecc9f162e" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref>(*</type>
        <definition>int(* EndTrack) (void *handle)</definition>
        <argsstring>)(void *handle)</argsstring>
        <name>EndTrack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" line="74" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="portburn__winxp_8cpp_1aabb63319aeede604050eeca0423ef207" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref>(*</type>
        <definition>int(* StartBurning) (void *handle)</definition>
        <argsstring>)(void *handle)</argsstring>
        <name>StartBurning</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" line="75" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="portburn__winxp_8cpp_1ab4bd5910d3d32102adbbafa684818658" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref>(*</type>
        <definition>int(* CancelBurning) (void *handle)</definition>
        <argsstring>)(void *handle)</argsstring>
        <name>CancelBurning</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" line="76" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="portburn__winxp_8cpp_1a5ac790cdbff87040ff44a895236e69a4" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref>(*</type>
        <definition>int(* GetStatus) (void *handle, float *out_fraction_complete)</definition>
        <argsstring>)(void *handle, float *out_fraction_complete)</argsstring>
        <name>GetStatus</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" line="77" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="portburn__winxp_8cpp_1a318876f73675fe857d5f75e4dc4f1bf7" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref>(*</type>
        <definition>int(* GetOption) (void *handle, int option, int *value)</definition>
        <argsstring>)(void *handle, int option, int *value)</argsstring>
        <name>GetOption</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" line="78" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="portburn__winxp_8cpp_1aac4548e0bceb8e1cd0072ae2564575de" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref>(*</type>
        <definition>int(* SetOption) (void *handle, int option, int value)</definition>
        <argsstring>)(void *handle, int option, int value)</argsstring>
        <name>SetOption</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" line="79" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="portburn__winxp_8cpp_1a507c178510a1baa2948b794e6b7d99f1" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref>(*</type>
        <definition>int(* GetSupportedSpeeds) (void *handle, int *cnt, int *option[])</definition>
        <argsstring>)(void *handle, int *cnt, int *option[])</argsstring>
        <name>GetSupportedSpeeds</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" line="80" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="portburn__winxp_8cpp_1af1e8340d368e7c8eba69380b12870afc" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref>(*</type>
        <definition>int(* GetMediaState) (void *handle, int *state)</definition>
        <argsstring>)(void *handle, int *state)</argsstring>
        <name>GetMediaState</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" line="81" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="portburn__winxp_8cpp_1a89fa611a21d539227ea765d17f12231b" prot="public" static="no" mutable="no">
        <type>struct @217</type>
        <definition>struct @217
 vectors[IMAPI_VERS]</definition>
        <argsstring>[IMAPI_VERS]</argsstring>
        <name>vectors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" line="131" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="portburn__winxp_8cpp_1ab91fff2c3a6852e320892eecc72efdbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PBFUNC</definition>
        <argsstring>(void *, Open())</argsstring>
        <name>PBFUNC</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
        </param>
        <param>
          <type><ref refid="portburn__winxp_8cpp_1ad2905cbe220a655f6c69cf1ff23b13b6" kindref="member">Open</ref>()</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" line="31" column="1"/>
      </memberdef>
      <memberdef kind="function" id="portburn__winxp_8cpp_1aaa0236033e227e6bdb64ba23ba0be36b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PBFUNC</definition>
        <argsstring>(void, Close(void *handle))</argsstring>
        <name>PBFUNC</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <param>
          <type><ref refid="portburn__winxp_8cpp_1ad6f32ac62ea277a3e8a068ed1faeee1f" kindref="member">Close</ref>(<ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *handle)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" line="32" column="1"/>
      </memberdef>
      <memberdef kind="function" id="portburn__winxp_8cpp_1a3392112c5c86e2b628a3687d90e1fdb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PBFUNC</definition>
        <argsstring>(char *, LastError(void *handle))</argsstring>
        <name>PBFUNC</name>
        <param>
          <type>char *</type>
        </param>
        <param>
          <type><ref refid="portburn__winxp_8cpp_1a2ecfba3f18f86c51c5859b9832e73d63" kindref="member">LastError</ref>(<ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *handle)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" line="33" column="1"/>
      </memberdef>
      <memberdef kind="function" id="portburn__winxp_8cpp_1ac264b805e90dc9f7b0dadae6ea505f2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PBFUNC</definition>
        <argsstring>(int, GetNumDevices(void *handle))</argsstring>
        <name>PBFUNC</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        </param>
        <param>
          <type><ref refid="portburn__winxp_8cpp_1a044ee623f025da26faafefabc7382c6f" kindref="member">GetNumDevices</ref>(<ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *handle)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" line="34" column="1"/>
      </memberdef>
      <memberdef kind="function" id="portburn__winxp_8cpp_1a9049a80449055a5b5210af3852094788" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PBFUNC</definition>
        <argsstring>(char *, GetDeviceName(void *handle, int index))</argsstring>
        <name>PBFUNC</name>
        <param>
          <type>char *</type>
        </param>
        <param>
          <type><ref refid="portburn__winxp_8cpp_1ad314b5028ab1842480625e3ad911bc83" kindref="member">GetDeviceName</ref>(<ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *handle, <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> index)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" line="35" column="1"/>
      </memberdef>
      <memberdef kind="function" id="portburn__winxp_8cpp_1a8ddbb9ce5a21ab21d465f3ab07e5fd91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PBFUNC</definition>
        <argsstring>(int, OpenDevice(void *handle, int index))</argsstring>
        <name>PBFUNC</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        </param>
        <param>
          <type><ref refid="portburn__winxp_8cpp_1a78b642f10f26f14fa9d939d52f61a072" kindref="member">OpenDevice</ref>(<ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *handle, <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> index)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" line="36" column="1"/>
      </memberdef>
      <memberdef kind="function" id="portburn__winxp_8cpp_1af11c182798c5b94ac51ffbc5fb20e00f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PBFUNC</definition>
        <argsstring>(int, CloseDevice(void *handle))</argsstring>
        <name>PBFUNC</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        </param>
        <param>
          <type><ref refid="portburn__winxp_8cpp_1a033ecb5e89608d3869054d57442e8890" kindref="member">CloseDevice</ref>(<ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *handle)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" line="37" column="1"/>
      </memberdef>
      <memberdef kind="function" id="portburn__winxp_8cpp_1a8298a987e50609716b0d6741b983b248" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PBFUNC</definition>
        <argsstring>(int, EjectDevice(void *handle))</argsstring>
        <name>PBFUNC</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        </param>
        <param>
          <type><ref refid="portburn__winxp_8cpp_1a0fb4ddd0b51dec486a2085bfc223485a" kindref="member">EjectDevice</ref>(<ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *handle)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" line="38" column="1"/>
      </memberdef>
      <memberdef kind="function" id="portburn__winxp_8cpp_1a375f13648a647a619358accb41d377e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PBFUNC</definition>
        <argsstring>(int, StartErasing(void *handle, int type))</argsstring>
        <name>PBFUNC</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        </param>
        <param>
          <type><ref refid="portburn__winxp_8cpp_1a5e6469046c6fa879ada9b9883976305e" kindref="member">StartErasing</ref>(<ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *handle, <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> type)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" line="39" column="1"/>
      </memberdef>
      <memberdef kind="function" id="portburn__winxp_8cpp_1ae30fce16ec4512a420ed371003ccc93b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PBFUNC</definition>
        <argsstring>(int, GetEraseStatus(void *handle, float *out_fraction_complete))</argsstring>
        <name>PBFUNC</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        </param>
        <param>
          <type><ref refid="portburn__winxp_8cpp_1a77785747944ddc23f88b9088f9117f09" kindref="member">GetEraseStatus</ref>(<ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *handle, float *out_fraction_complete)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" line="40" column="1"/>
      </memberdef>
      <memberdef kind="function" id="portburn__winxp_8cpp_1a2ee5aa07cacd0359ee2f15c2383d461b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PBFUNC</definition>
        <argsstring>(int, StartStaging(void *handle, const char *tmpdir))</argsstring>
        <name>PBFUNC</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        </param>
        <param>
          <type><ref refid="portburn__winxp_8cpp_1a887d255a6aeb8c0e9c2d6634e7f9fb5b" kindref="member">StartStaging</ref>(<ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *handle, <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *tmpdir)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" line="41" column="1"/>
      </memberdef>
      <memberdef kind="function" id="portburn__winxp_8cpp_1a8c0f09436b5ee87f4df09acecc1636e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PBFUNC</definition>
        <argsstring>(int, StartTrack(void *handle, const char *name))</argsstring>
        <name>PBFUNC</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        </param>
        <param>
          <type><ref refid="portburn__winxp_8cpp_1a377d68c522340b09a3f561644df6fb78" kindref="member">StartTrack</ref>(<ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *handle, <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" line="42" column="1"/>
      </memberdef>
      <memberdef kind="function" id="portburn__winxp_8cpp_1a26cdef879f821ba3b05cb830cdd0ea4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PBFUNC</definition>
        <argsstring>(int, AddFrame(void *handle, short *buffer))</argsstring>
        <name>PBFUNC</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        </param>
        <param>
          <type><ref refid="portburn__winxp_8cpp_1a7832a3b6c0ab2167ffe5cc9780e31174" kindref="member">AddFrame</ref>(<ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *handle, short *<ref refid="structbuffer" kindref="compound">buffer</ref>)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="portburn__winxp_8cpp_1ac75e5f9a436db2e60d336f36c1e3452a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PBFUNC</definition>
        <argsstring>(int, EndTrack(void *handle))</argsstring>
        <name>PBFUNC</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        </param>
        <param>
          <type><ref refid="portburn__winxp_8cpp_1a5591afe05099e2e8d9169d1ecc9f162e" kindref="member">EndTrack</ref>(<ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *handle)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" line="44" column="1"/>
      </memberdef>
      <memberdef kind="function" id="portburn__winxp_8cpp_1a9372722b13c3d1751b624dea342aba19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PBFUNC</definition>
        <argsstring>(int, StartBurning(void *handle))</argsstring>
        <name>PBFUNC</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        </param>
        <param>
          <type><ref refid="portburn__winxp_8cpp_1aabb63319aeede604050eeca0423ef207" kindref="member">StartBurning</ref>(<ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *handle)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" line="45" column="1"/>
      </memberdef>
      <memberdef kind="function" id="portburn__winxp_8cpp_1a33cb8fc7bafecfb49220193eabaed101" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PBFUNC</definition>
        <argsstring>(int, CancelBurning(void *handle))</argsstring>
        <name>PBFUNC</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        </param>
        <param>
          <type><ref refid="portburn__winxp_8cpp_1ab4bd5910d3d32102adbbafa684818658" kindref="member">CancelBurning</ref>(<ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *handle)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" line="46" column="1"/>
      </memberdef>
      <memberdef kind="function" id="portburn__winxp_8cpp_1a251113787764ce578390fe70474bfa9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PBFUNC</definition>
        <argsstring>(int, GetStatus(void *handle, float *out_fraction_complete))</argsstring>
        <name>PBFUNC</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        </param>
        <param>
          <type><ref refid="portburn__winxp_8cpp_1a5ac790cdbff87040ff44a895236e69a4" kindref="member">GetStatus</ref>(<ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *handle, float *out_fraction_complete)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" line="47" column="1"/>
      </memberdef>
      <memberdef kind="function" id="portburn__winxp_8cpp_1a7081a14b877a84d7f1130c23454da7d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PBFUNC</definition>
        <argsstring>(int, GetOption(void *handle, int option, int *value))</argsstring>
        <name>PBFUNC</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        </param>
        <param>
          <type><ref refid="portburn__winxp_8cpp_1a318876f73675fe857d5f75e4dc4f1bf7" kindref="member">GetOption</ref>(<ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *handle, <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> option, <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *<ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="portburn__winxp_8cpp_1a47df5006ae07f37aa3937ebfd04e4ffc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PBFUNC</definition>
        <argsstring>(int, SetOption(void *handle, int option, int value))</argsstring>
        <name>PBFUNC</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        </param>
        <param>
          <type><ref refid="_track_panel_8cpp_1afe73cd8abf3b46ca6b5501768ad042f2" kindref="member">SetOption</ref>(<ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *handle, <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> option, <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> <ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="portburn__winxp_8cpp_1ac1473a03009156ebcb90faec317941a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PBFUNC</definition>
        <argsstring>(int, GetSupportedSpeeds(void *handle, int *cnt, int *option[]))</argsstring>
        <name>PBFUNC</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        </param>
        <param>
          <type><ref refid="portburn__winxp_8cpp_1a507c178510a1baa2948b794e6b7d99f1" kindref="member">GetSupportedSpeeds</ref>(<ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *handle, <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *cnt, <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *option[])</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="portburn__winxp_8cpp_1aaddb9fa13834da7f98ae7e18c22318a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>PBFUNC</definition>
        <argsstring>(int, GetMediaState(void *handle, int *state))</argsstring>
        <name>PBFUNC</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        </param>
        <param>
          <type><ref refid="portburn__winxp_8cpp_1af1e8340d368e7c8eba69380b12870afc" kindref="member">GetMediaState</ref>(<ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *handle, <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *state)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="portburn__winxp_8cpp_1a96e8c7cafcd073d6405748ca296fb2d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
        <definition>void* PortBurn_Open</definition>
        <argsstring>()</argsstring>
        <name>PortBurn_Open</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" line="133" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" bodystart="133" bodyend="188"/>
      </memberdef>
      <memberdef kind="function" id="portburn__winxp_8cpp_1afd2e51b5fc8887c7a258c56ef51e1a2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void PortBurn_Close</definition>
        <argsstring>(void *handle)</argsstring>
        <name>PortBurn_Close</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" line="191" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" bodystart="191" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="portburn__winxp_8cpp_1a6d647fe48ea2893f160ede6fcbdc466a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* PortBurn_LastError</definition>
        <argsstring>(void *handle)</argsstring>
        <name>PortBurn_LastError</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" line="206" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" bodystart="206" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="portburn__winxp_8cpp_1aff624447871a6b4f03f358d62da12b3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int PortBurn_GetNumDevices</definition>
        <argsstring>(void *handle)</argsstring>
        <name>PortBurn_GetNumDevices</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" line="217" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" bodystart="217" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="portburn__winxp_8cpp_1a1d5a58e076c066de7cc4a4c2c60efd27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* PortBurn_GetDeviceName</definition>
        <argsstring>(void *handle, int index)</argsstring>
        <name>PortBurn_GetDeviceName</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" line="230" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" bodystart="230" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="portburn__winxp_8cpp_1af20bcaffcc2db06bb505dc63f9c04e23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int PortBurn_OpenDevice</definition>
        <argsstring>(void *handle, int index)</argsstring>
        <name>PortBurn_OpenDevice</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" line="241" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" bodystart="241" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="portburn__winxp_8cpp_1ada27d814dbf177e54f73baea8aa4f745" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int PortBurn_CloseDevice</definition>
        <argsstring>(void *handle)</argsstring>
        <name>PortBurn_CloseDevice</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" line="252" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" bodystart="252" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="portburn__winxp_8cpp_1ac37694009f16b9acd699bf9355024a0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int PortBurn_EjectDevice</definition>
        <argsstring>(void *handle)</argsstring>
        <name>PortBurn_EjectDevice</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" line="263" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" bodystart="263" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="portburn__winxp_8cpp_1a37cdb993cad1d1fa87dfef05e6ed13bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int PortBurn_StartStaging</definition>
        <argsstring>(void *handle, const char *tmpdir)</argsstring>
        <name>PortBurn_StartStaging</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>tmpdir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" line="274" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" bodystart="274" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="portburn__winxp_8cpp_1a7e1d0b2aae691bdd0bcc8d2babd781d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int PortBurn_StartTrack</definition>
        <argsstring>(void *handle, const char *name)</argsstring>
        <name>PortBurn_StartTrack</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" line="285" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" bodystart="285" bodyend="294"/>
      </memberdef>
      <memberdef kind="function" id="portburn__winxp_8cpp_1a41cb49ae24ceb3880d6b356de71c1491" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int PortBurn_AddFrame</definition>
        <argsstring>(void *handle, short *buffer)</argsstring>
        <name>PortBurn_AddFrame</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>short *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" line="296" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" bodystart="296" bodyend="305"/>
      </memberdef>
      <memberdef kind="function" id="portburn__winxp_8cpp_1ae2aeb20dbc5c11585456ad81fb41f6cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int PortBurn_EndTrack</definition>
        <argsstring>(void *handle)</argsstring>
        <name>PortBurn_EndTrack</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" line="307" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" bodystart="307" bodyend="316"/>
      </memberdef>
      <memberdef kind="function" id="portburn__winxp_8cpp_1a6fdb8075e41cd223abdb507cd6294363" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int PortBurn_StartBurning</definition>
        <argsstring>(void *handle)</argsstring>
        <name>PortBurn_StartBurning</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" line="318" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" bodystart="318" bodyend="327"/>
      </memberdef>
      <memberdef kind="function" id="portburn__winxp_8cpp_1a78cddb5a8e02c3b32af56c29a37e993f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int PortBurn_CancelBurning</definition>
        <argsstring>(void *handle)</argsstring>
        <name>PortBurn_CancelBurning</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" line="329" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" bodystart="329" bodyend="338"/>
      </memberdef>
      <memberdef kind="function" id="portburn__winxp_8cpp_1ab40d7add45bb6165ffc5d012b3a1e8f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int PortBurn_GetStatus</definition>
        <argsstring>(void *handle, float *out_fraction_complete)</argsstring>
        <name>PortBurn_GetStatus</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>out_fraction_complete</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" line="340" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" bodystart="340" bodyend="349"/>
      </memberdef>
      <memberdef kind="function" id="portburn__winxp_8cpp_1aa0feae939bec9216e97817b76c28cfba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int PortBurn_GetOption</definition>
        <argsstring>(void *handle, int option, int *value)</argsstring>
        <name>PortBurn_GetOption</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>option</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" line="351" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" bodystart="351" bodyend="360"/>
      </memberdef>
      <memberdef kind="function" id="portburn__winxp_8cpp_1a1696e9dfae8a54a5b61c47f859bfdd93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int PortBurn_SetOption</definition>
        <argsstring>(void *handle, int option, int value)</argsstring>
        <name>PortBurn_SetOption</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>option</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" line="362" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" bodystart="362" bodyend="371"/>
      </memberdef>
      <memberdef kind="function" id="portburn__winxp_8cpp_1a2c6add2dab189c6bed64fc8240029b79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int PortBurn_GetSpeeds</definition>
        <argsstring>(void *handle, int *cnt, int *speeds[])</argsstring>
        <name>PortBurn_GetSpeeds</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>cnt</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>speeds</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" line="373" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" bodystart="373" bodyend="376"/>
      </memberdef>
      <memberdef kind="function" id="portburn__winxp_8cpp_1a96e2c97683df3d9ff86a0f019752561a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int PortBurn_StartErasing</definition>
        <argsstring>(void *handle, int type)</argsstring>
        <name>PortBurn_StartErasing</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" line="379" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" bodystart="379" bodyend="388"/>
      </memberdef>
      <memberdef kind="function" id="portburn__winxp_8cpp_1a95e583b631f7fb3b8cbe1f8fd2dc7680" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int PortBurn_GetEraseStatus</definition>
        <argsstring>(void *handle, float *out_fraction_complete)</argsstring>
        <name>PortBurn_GetEraseStatus</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>out_fraction_complete</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" line="390" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" bodystart="390" bodyend="399"/>
      </memberdef>
      <memberdef kind="function" id="portburn__winxp_8cpp_1ad847db91421f3e18fc5ee28e8b5d3701" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int PortBurn_GetMediaState</definition>
        <argsstring>(void *handle, int *state)</argsstring>
        <name>PortBurn_GetMediaState</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" line="402" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp" bodystart="402" bodyend="411"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>PortBurn</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Windows<sp/>XP<sp/>IMAPI<sp/>implementation</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Authors:</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/><sp/>Leland<sp/>Lucius</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>The<sp/>following<sp/>MSDN<sp/>page<sp/>was<sp/>used<sp/>as<sp/>a<sp/>guide:</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/><sp/>http://msdn2.microsoft.com/en-us/library/aa366236.aspx</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>License:<sp/>LGPL</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="portburn_8h" kindref="compound">portburn.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="portburn__winxp_8cpp_1ac50762666aa00bd3a4308158510f1748" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_WIN32_WINNT<sp/>0x0400</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;windows.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;imapi.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;imapi2.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="23" refid="struct_p_b_handle_1a56432885c220c0c95233669d02193f30" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_p_b_handle_1a56432885c220c0c95233669d02193f30" kindref="member">ver</ref>;</highlight></codeline>
<codeline lineno="24" refid="struct_p_b_handle_1a46e452618a7586428e9c32779bcd9f20" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/>*<ref refid="struct_p_b_handle_1a46e452618a7586428e9c32779bcd9f20" kindref="member">realhandle</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal">}<sp/><ref refid="struct_p_b_handle" kindref="compound">PBHandle</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="portburn__winxp_8cpp_1a56ca7191999716f814071814f57edf72" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PBFUNC(r,f)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="28"><highlight class="preprocessor"><sp/><sp/><sp/>extern<sp/>r<sp/>PortBurn_v1_<sp/>##<sp/>f;<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="29"><highlight class="preprocessor"><sp/><sp/><sp/>extern<sp/>r<sp/>PortBurn_v2_<sp/>##<sp/>f;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><ref refid="portburn__winxp_8cpp_1a56ca7191999716f814071814f57edf72" kindref="member">PBFUNC</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,<sp/><ref refid="portburn__winxp_8cpp_1ad2905cbe220a655f6c69cf1ff23b13b6" kindref="member">Open</ref>());</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><ref refid="portburn__winxp_8cpp_1a56ca7191999716f814071814f57edf72" kindref="member">PBFUNC</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">,<sp/><ref refid="portburn__winxp_8cpp_1ad6f32ac62ea277a3e8a068ed1faeee1f" kindref="member">Close</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*handle));</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><ref refid="portburn__winxp_8cpp_1a56ca7191999716f814071814f57edf72" kindref="member">PBFUNC</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/><ref refid="portburn__winxp_8cpp_1a2ecfba3f18f86c51c5859b9832e73d63" kindref="member">LastError</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*handle));</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><ref refid="portburn__winxp_8cpp_1a56ca7191999716f814071814f57edf72" kindref="member">PBFUNC</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/><ref refid="portburn__winxp_8cpp_1a044ee623f025da26faafefabc7382c6f" kindref="member">GetNumDevices</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*handle));</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><ref refid="portburn__winxp_8cpp_1a56ca7191999716f814071814f57edf72" kindref="member">PBFUNC</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/><ref refid="portburn__winxp_8cpp_1ad314b5028ab1842480625e3ad911bc83" kindref="member">GetDeviceName</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*handle,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index));</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><ref refid="portburn__winxp_8cpp_1a56ca7191999716f814071814f57edf72" kindref="member">PBFUNC</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/><ref refid="portburn__winxp_8cpp_1a78b642f10f26f14fa9d939d52f61a072" kindref="member">OpenDevice</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*handle,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index));</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><ref refid="portburn__winxp_8cpp_1a56ca7191999716f814071814f57edf72" kindref="member">PBFUNC</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/><ref refid="portburn__winxp_8cpp_1a033ecb5e89608d3869054d57442e8890" kindref="member">CloseDevice</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*handle));</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><ref refid="portburn__winxp_8cpp_1a56ca7191999716f814071814f57edf72" kindref="member">PBFUNC</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/><ref refid="portburn__winxp_8cpp_1a0fb4ddd0b51dec486a2085bfc223485a" kindref="member">EjectDevice</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*handle));</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><ref refid="portburn__winxp_8cpp_1a56ca7191999716f814071814f57edf72" kindref="member">PBFUNC</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/><ref refid="portburn__winxp_8cpp_1a5e6469046c6fa879ada9b9883976305e" kindref="member">StartErasing</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*handle,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref>));</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><ref refid="portburn__winxp_8cpp_1a56ca7191999716f814071814f57edf72" kindref="member">PBFUNC</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/><ref refid="portburn__winxp_8cpp_1a77785747944ddc23f88b9088f9117f09" kindref="member">GetEraseStatus</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*handle,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*out_fraction_complete));</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><ref refid="portburn__winxp_8cpp_1a56ca7191999716f814071814f57edf72" kindref="member">PBFUNC</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/><ref refid="portburn__winxp_8cpp_1a887d255a6aeb8c0e9c2d6634e7f9fb5b" kindref="member">StartStaging</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tmpdir));</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><ref refid="portburn__winxp_8cpp_1a56ca7191999716f814071814f57edf72" kindref="member">PBFUNC</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/><ref refid="portburn__winxp_8cpp_1a377d68c522340b09a3f561644df6fb78" kindref="member">StartTrack</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>));</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><ref refid="portburn__winxp_8cpp_1a56ca7191999716f814071814f57edf72" kindref="member">PBFUNC</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/><ref refid="portburn__winxp_8cpp_1a7832a3b6c0ab2167ffe5cc9780e31174" kindref="member">AddFrame</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*handle,<sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref>));</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><ref refid="portburn__winxp_8cpp_1a56ca7191999716f814071814f57edf72" kindref="member">PBFUNC</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/><ref refid="portburn__winxp_8cpp_1a5591afe05099e2e8d9169d1ecc9f162e" kindref="member">EndTrack</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*handle));</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><ref refid="portburn__winxp_8cpp_1a56ca7191999716f814071814f57edf72" kindref="member">PBFUNC</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/><ref refid="portburn__winxp_8cpp_1aabb63319aeede604050eeca0423ef207" kindref="member">StartBurning</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*handle));</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><ref refid="portburn__winxp_8cpp_1a56ca7191999716f814071814f57edf72" kindref="member">PBFUNC</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/><ref refid="portburn__winxp_8cpp_1ab4bd5910d3d32102adbbafa684818658" kindref="member">CancelBurning</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*handle));</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><ref refid="portburn__winxp_8cpp_1a56ca7191999716f814071814f57edf72" kindref="member">PBFUNC</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/><ref refid="portburn__winxp_8cpp_1a5ac790cdbff87040ff44a895236e69a4" kindref="member">GetStatus</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*handle,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*out_fraction_complete));</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><ref refid="portburn__winxp_8cpp_1a56ca7191999716f814071814f57edf72" kindref="member">PBFUNC</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/><ref refid="portburn__winxp_8cpp_1a318876f73675fe857d5f75e4dc4f1bf7" kindref="member">GetOption</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*handle,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>option,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>));</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><ref refid="portburn__winxp_8cpp_1a56ca7191999716f814071814f57edf72" kindref="member">PBFUNC</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/><ref refid="portburn__winxp_8cpp_1aac4548e0bceb8e1cd0072ae2564575de" kindref="member">SetOption</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*handle,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>option,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>));</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><ref refid="portburn__winxp_8cpp_1a56ca7191999716f814071814f57edf72" kindref="member">PBFUNC</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/><ref refid="portburn__winxp_8cpp_1a507c178510a1baa2948b794e6b7d99f1" kindref="member">GetSupportedSpeeds</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*handle,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*cnt,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*option[]));</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><ref refid="portburn__winxp_8cpp_1a56ca7191999716f814071814f57edf72" kindref="member">PBFUNC</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/><ref refid="portburn__winxp_8cpp_1af1e8340d368e7c8eba69380b12870afc" kindref="member">GetMediaState</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*handle,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*state));</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="54" refid="portburn__winxp_8cpp_1a91d74b317405fff79ca4459da11f98e3a04dd28416a48dd230b529374687a6a21" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="portburn__winxp_8cpp_1a91d74b317405fff79ca4459da11f98e3a04dd28416a48dd230b529374687a6a21" kindref="member">IMAPI_V1</ref>,</highlight></codeline>
<codeline lineno="55" refid="portburn__winxp_8cpp_1a91d74b317405fff79ca4459da11f98e3a55349cf1f2eacb024ac23d13dbee1bb9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="portburn__winxp_8cpp_1a91d74b317405fff79ca4459da11f98e3a55349cf1f2eacb024ac23d13dbee1bb9" kindref="member">IMAPI_V2</ref>,</highlight></codeline>
<codeline lineno="56" refid="portburn__winxp_8cpp_1a91d74b317405fff79ca4459da11f98e3afe192d96889cefd1358e26e9f813d467" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="portburn__winxp_8cpp_1a91d74b317405fff79ca4459da11f98e3afe192d96889cefd1358e26e9f813d467" kindref="member">IMAPI_VERS</ref></highlight></codeline>
<codeline lineno="57"><highlight class="normal">};</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal">{</highlight></codeline>
<codeline lineno="61" refid="portburn__winxp_8cpp_1ad2905cbe220a655f6c69cf1ff23b13b6" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*(*Open)();</highlight></codeline>
<codeline lineno="62" refid="portburn__winxp_8cpp_1ad6f32ac62ea277a3e8a068ed1faeee1f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="lib_2expat_8h_1a3980d15795c6349fecd06c1b035c1ae9" kindref="member">void</ref><sp/>(*<ref refid="portburn__winxp_8cpp_1ad6f32ac62ea277a3e8a068ed1faeee1f" kindref="member">Close</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*handle);</highlight></codeline>
<codeline lineno="63" refid="portburn__winxp_8cpp_1a2ecfba3f18f86c51c5859b9832e73d63" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*(*LastError)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*handle);</highlight></codeline>
<codeline lineno="64" refid="portburn__winxp_8cpp_1a044ee623f025da26faafefabc7382c6f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref><sp/>(*<ref refid="portburn__winxp_8cpp_1a044ee623f025da26faafefabc7382c6f" kindref="member">GetNumDevices</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*handle);</highlight></codeline>
<codeline lineno="65" refid="portburn__winxp_8cpp_1ad314b5028ab1842480625e3ad911bc83" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*(*GetDeviceName)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*handle,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="66" refid="portburn__winxp_8cpp_1a78b642f10f26f14fa9d939d52f61a072" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref><sp/>(*<ref refid="portburn__winxp_8cpp_1a78b642f10f26f14fa9d939d52f61a072" kindref="member">OpenDevice</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*handle,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="67" refid="portburn__winxp_8cpp_1a033ecb5e89608d3869054d57442e8890" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref><sp/>(*<ref refid="portburn__winxp_8cpp_1a033ecb5e89608d3869054d57442e8890" kindref="member">CloseDevice</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*handle);</highlight></codeline>
<codeline lineno="68" refid="portburn__winxp_8cpp_1a0fb4ddd0b51dec486a2085bfc223485a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref><sp/>(*<ref refid="portburn__winxp_8cpp_1a0fb4ddd0b51dec486a2085bfc223485a" kindref="member">EjectDevice</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*handle);</highlight></codeline>
<codeline lineno="69" refid="portburn__winxp_8cpp_1a5e6469046c6fa879ada9b9883976305e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref><sp/>(*<ref refid="portburn__winxp_8cpp_1a5e6469046c6fa879ada9b9883976305e" kindref="member">StartErasing</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*handle,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref>);</highlight></codeline>
<codeline lineno="70" refid="portburn__winxp_8cpp_1a77785747944ddc23f88b9088f9117f09" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref><sp/>(*<ref refid="portburn__winxp_8cpp_1a77785747944ddc23f88b9088f9117f09" kindref="member">GetEraseStatus</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*handle,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*out_fraction_complete);</highlight></codeline>
<codeline lineno="71" refid="portburn__winxp_8cpp_1a887d255a6aeb8c0e9c2d6634e7f9fb5b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref><sp/>(*<ref refid="portburn__winxp_8cpp_1a887d255a6aeb8c0e9c2d6634e7f9fb5b" kindref="member">StartStaging</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tmpdir);</highlight></codeline>
<codeline lineno="72" refid="portburn__winxp_8cpp_1a377d68c522340b09a3f561644df6fb78" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref><sp/>(*<ref refid="portburn__winxp_8cpp_1a377d68c522340b09a3f561644df6fb78" kindref="member">StartTrack</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="73" refid="portburn__winxp_8cpp_1a7832a3b6c0ab2167ffe5cc9780e31174" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref><sp/>(*<ref refid="portburn__winxp_8cpp_1a7832a3b6c0ab2167ffe5cc9780e31174" kindref="member">AddFrame</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*handle,<sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*<ref refid="recplay_8c_1adbbab5cb2248179d231690a1a02ff977" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="74" refid="portburn__winxp_8cpp_1a5591afe05099e2e8d9169d1ecc9f162e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref><sp/>(*<ref refid="portburn__winxp_8cpp_1a5591afe05099e2e8d9169d1ecc9f162e" kindref="member">EndTrack</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*handle);</highlight></codeline>
<codeline lineno="75" refid="portburn__winxp_8cpp_1aabb63319aeede604050eeca0423ef207" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref><sp/>(*<ref refid="portburn__winxp_8cpp_1aabb63319aeede604050eeca0423ef207" kindref="member">StartBurning</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*handle);</highlight></codeline>
<codeline lineno="76" refid="portburn__winxp_8cpp_1ab4bd5910d3d32102adbbafa684818658" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref><sp/>(*<ref refid="portburn__winxp_8cpp_1ab4bd5910d3d32102adbbafa684818658" kindref="member">CancelBurning</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*handle);</highlight></codeline>
<codeline lineno="77" refid="portburn__winxp_8cpp_1a5ac790cdbff87040ff44a895236e69a4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref><sp/>(*<ref refid="portburn__winxp_8cpp_1a5ac790cdbff87040ff44a895236e69a4" kindref="member">GetStatus</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*handle,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*out_fraction_complete);</highlight></codeline>
<codeline lineno="78" refid="portburn__winxp_8cpp_1a318876f73675fe857d5f75e4dc4f1bf7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref><sp/>(*<ref refid="portburn__winxp_8cpp_1a318876f73675fe857d5f75e4dc4f1bf7" kindref="member">GetOption</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*handle,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>option,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="79" refid="portburn__winxp_8cpp_1aac4548e0bceb8e1cd0072ae2564575de" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref><sp/>(*<ref refid="portburn__winxp_8cpp_1aac4548e0bceb8e1cd0072ae2564575de" kindref="member">SetOption</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*handle,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>option,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="80" refid="portburn__winxp_8cpp_1a507c178510a1baa2948b794e6b7d99f1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref><sp/>(*<ref refid="portburn__winxp_8cpp_1a507c178510a1baa2948b794e6b7d99f1" kindref="member">GetSupportedSpeeds</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*handle,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*cnt,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*option[]);</highlight></codeline>
<codeline lineno="81" refid="portburn__winxp_8cpp_1af1e8340d368e7c8eba69380b12870afc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref><sp/>(*<ref refid="portburn__winxp_8cpp_1af1e8340d368e7c8eba69380b12870afc" kindref="member">GetMediaState</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*handle,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*state);</highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><ref refid="portburn__winxp_8cpp_1a89fa611a21d539227ea765d17f12231b" kindref="member">vectors</ref>[<ref refid="portburn__winxp_8cpp_1a91d74b317405fff79ca4459da11f98e3afe192d96889cefd1358e26e9f813d467" kindref="member">IMAPI_VERS</ref>]<sp/>=</highlight></codeline>
<codeline lineno="84"><highlight class="normal">{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portburn__winxpv1_8cpp_1a405a8c31dd605b8ba3cac86aa9c5cc2a" kindref="member">PortBurn_v1_Open</ref>,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portburn__winxpv1_8cpp_1ab8300b9f0c71fb92e94905952c27133a" kindref="member">PortBurn_v1_Close</ref>,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portburn__winxpv1_8cpp_1ab68bde9e3adb3b95706b6d21f2532dc9" kindref="member">PortBurn_v1_LastError</ref>,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portburn__winxpv1_8cpp_1ad1305b9fa5515c86ae33e20ebb9c55d5" kindref="member">PortBurn_v1_GetNumDevices</ref>,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portburn__winxpv1_8cpp_1aa0959c7ed145c1b43231016263b13192" kindref="member">PortBurn_v1_GetDeviceName</ref>,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portburn__winxpv1_8cpp_1a3ee1d8b6670c2e3c3b89f0afc250e97a" kindref="member">PortBurn_v1_OpenDevice</ref>,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portburn__winxpv1_8cpp_1a23981fb3273eb712a24bd5f69043195b" kindref="member">PortBurn_v1_CloseDevice</ref>,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portburn__winxpv1_8cpp_1a21e45a4677bbbb9e42e29f1d4cb51bbb" kindref="member">PortBurn_v1_EjectDevice</ref>,</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portburn__winxpv1_8cpp_1a5ac390d6a99a13ef45eb67f777dca418" kindref="member">PortBurn_v1_StartErasing</ref>,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portburn__winxpv1_8cpp_1a16024c11a32d3ef0d2fe3c31f3ba55d6" kindref="member">PortBurn_v1_GetEraseStatus</ref>,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portburn__winxpv1_8cpp_1a77c38aaa32d383bcfbdcd41cc5560371" kindref="member">PortBurn_v1_StartStaging</ref>,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portburn__winxpv1_8cpp_1a740f569cb7eace9993896855680b0dab" kindref="member">PortBurn_v1_StartTrack</ref>,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portburn__winxpv1_8cpp_1a2f0ae142335348a6f4df5bf2b23c372d" kindref="member">PortBurn_v1_AddFrame</ref>,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portburn__winxpv1_8cpp_1a2bd7563d1f123386c191a5370cf91459" kindref="member">PortBurn_v1_EndTrack</ref>,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portburn__winxpv1_8cpp_1ac1ff854b831735f3fbb938da61f08e07" kindref="member">PortBurn_v1_StartBurning</ref>,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portburn__winxpv1_8cpp_1ad2aaa393a6e4bde74ebdfe75c8b20435" kindref="member">PortBurn_v1_CancelBurning</ref>,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portburn__winxpv1_8cpp_1a5c1f8e9839dec8ab336f4ef3894ab989" kindref="member">PortBurn_v1_GetStatus</ref>,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portburn__winxpv1_8cpp_1a3e4cf8b4b014d1850edec1ad72cddad5" kindref="member">PortBurn_v1_GetOption</ref>,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portburn__winxpv1_8cpp_1a171e0fdc6c19ca17ba41ad45ef03ebf2" kindref="member">PortBurn_v1_SetOption</ref>,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portburn__winxpv1_8cpp_1ad46d56f259407787f0aea965bd743c66" kindref="member">PortBurn_v1_GetSupportedSpeeds</ref>,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portburn__winxpv1_8cpp_1a3712d5c25ccbf462e0ae73144de4ccbc" kindref="member">PortBurn_v1_GetMediaState</ref>,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portburn__winxpv2_8cpp_1a01a890ccd70b4833642461224c8a9b6d" kindref="member">PortBurn_v2_Open</ref>,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portburn__winxpv2_8cpp_1a9986a58f5976d3e646e0dff5683afb72" kindref="member">PortBurn_v2_Close</ref>,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portburn__winxpv2_8cpp_1af5ce2c3f111a1610734bb32f64f2ca3e" kindref="member">PortBurn_v2_LastError</ref>,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portburn__winxpv2_8cpp_1ab9f7b0c8176c52e5769793e59e3b792a" kindref="member">PortBurn_v2_GetNumDevices</ref>,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portburn__winxpv2_8cpp_1a727b2dbf08e06d797c3955c6070599ea" kindref="member">PortBurn_v2_GetDeviceName</ref>,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portburn__winxpv2_8cpp_1a3f14b273c3b035f0f9166a256fa6a39e" kindref="member">PortBurn_v2_OpenDevice</ref>,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portburn__winxpv2_8cpp_1aba6d6c31b24e30b4d1ea9ca142a273ea" kindref="member">PortBurn_v2_CloseDevice</ref>,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portburn__winxpv2_8cpp_1ac1585d9e13ee1f8efd4fefb9889d24a7" kindref="member">PortBurn_v2_EjectDevice</ref>,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portburn__winxpv2_8cpp_1a8111b919428b6bf79d21d7878b259ce8" kindref="member">PortBurn_v2_StartErasing</ref>,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portburn__winxpv2_8cpp_1a6e566b2092d59d991134d6a84655af0e" kindref="member">PortBurn_v2_GetEraseStatus</ref>,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portburn__winxpv2_8cpp_1a5ac8a5b813c18d20d2286d5158783e83" kindref="member">PortBurn_v2_StartStaging</ref>,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portburn__winxpv2_8cpp_1ad4cf1e3358a78f6fb81c5ef8f51f9394" kindref="member">PortBurn_v2_StartTrack</ref>,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portburn__winxpv2_8cpp_1af99fa7ffd58e8777e883d200ba0d879f" kindref="member">PortBurn_v2_AddFrame</ref>,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portburn__winxpv2_8cpp_1a35d86760b79cadf8e3af33c56a85e4ba" kindref="member">PortBurn_v2_EndTrack</ref>,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portburn__winxpv2_8cpp_1a7efd3664d08b1e64bcc99337e1358a4d" kindref="member">PortBurn_v2_StartBurning</ref>,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portburn__winxpv2_8cpp_1a11e4b46aad08a107cb8826b316938a96" kindref="member">PortBurn_v2_CancelBurning</ref>,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portburn__winxpv2_8cpp_1ae23f2fc71d1e92e4ee3af6af5500d424" kindref="member">PortBurn_v2_GetStatus</ref>,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portburn__winxpv2_8cpp_1ac8e22e596b59c108d592cfe86ee7a157" kindref="member">PortBurn_v2_GetOption</ref>,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portburn__winxpv2_8cpp_1ad19016f44e6baf3d189310b7c031d83f" kindref="member">PortBurn_v2_SetOption</ref>,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portburn__winxpv2_8cpp_1a00dc6e2a6b6d5644ed15a00f727916e6" kindref="member">PortBurn_v2_GetSupportedSpeeds</ref>,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portburn__winxpv2_8cpp_1a98dd9e9749e3e36f8f1c6e6d02404d12" kindref="member">PortBurn_v2_GetMediaState</ref>,</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal">};</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="133" refid="portburn__winxp_8cpp_1a96e8c7cafcd073d6405748ca296fb2d1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="portburn__winxp_8cpp_1a96e8c7cafcd073d6405748ca296fb2d1" kindref="member">PortBurn_Open</ref>()</highlight></codeline>
<codeline lineno="134"><highlight class="normal">{<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_p_b_handle" kindref="compound">PBHandle</ref><sp/>*h;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><ref refid="px__win__ds_8c_1a6ad46d30b0323d7b029e41f32f8a2571" kindref="member">HRESULT</ref><sp/>hres;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/>IDiscMaster<sp/>*pV1;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/>IDiscMaster2<sp/>*pV2;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/>hres<sp/>=<sp/>CoInitializeEx(0,<sp/>COINIT_APARTMENTTHREADED);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FAILED(hres))<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/>h<sp/>=<sp/>(<ref refid="struct_p_b_handle" kindref="compound">PBHandle</ref><sp/>*)<sp/>HeapAlloc(GetProcessHeap(),</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HEAP_ZERO_MEMORY,</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_p_b_handle" kindref="compound">PBHandle</ref>));</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(h<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CoUninitialize();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/>hres<sp/>=<sp/>CoCreateInstance(__uuidof(MsftDiscMaster2),</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CLSCTX_ALL,</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IID_IDiscMaster2,</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**)&amp;pV2);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FAILED(hres))<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>hres<sp/>=<sp/>CoCreateInstance(__uuidof(MSDiscMasterObj),</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CLSCTX_ALL,</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IID_IDiscMaster,</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**)&amp;pV1);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FAILED(hres))<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HeapFree(GetProcessHeap(),<sp/>0,<sp/>h);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CoUninitialize();</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pV1-&gt;Release();</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>h-&gt;<ref refid="struct_p_b_handle_1a56432885c220c0c95233669d02193f30" kindref="member">ver</ref><sp/>=<sp/><ref refid="portburn__winxp_8cpp_1a91d74b317405fff79ca4459da11f98e3a04dd28416a48dd230b529374687a6a21" kindref="member">IMAPI_V1</ref>;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pV2-&gt;Release();</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>h-&gt;<ref refid="struct_p_b_handle_1a56432885c220c0c95233669d02193f30" kindref="member">ver</ref><sp/>=<sp/><ref refid="portburn__winxp_8cpp_1a91d74b317405fff79ca4459da11f98e3a55349cf1f2eacb024ac23d13dbee1bb9" kindref="member">IMAPI_V2</ref>;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="comment">//h-&gt;ver<sp/>=<sp/>IMAPI_V1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/>h-&gt;<ref refid="struct_p_b_handle_1a46e452618a7586428e9c32779bcd9f20" kindref="member">realhandle</ref><sp/>=<sp/><ref refid="portburn__winxp_8cpp_1a89fa611a21d539227ea765d17f12231b" kindref="member">vectors</ref>[h-&gt;<ref refid="struct_p_b_handle_1a56432885c220c0c95233669d02193f30" kindref="member">ver</ref>].Open();</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(h-&gt;<ref refid="struct_p_b_handle_1a46e452618a7586428e9c32779bcd9f20" kindref="member">realhandle</ref><sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HeapFree(GetProcessHeap(),<sp/>0,<sp/>h);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CoUninitialize();</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>h;</highlight></codeline>
<codeline lineno="188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Cleanup<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191" refid="portburn__winxp_8cpp_1afd2e51b5fc8887c7a258c56ef51e1a2c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="portburn__winxp_8cpp_1afd2e51b5fc8887c7a258c56ef51e1a2c" kindref="member">PortBurn_Close</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*handle)</highlight></codeline>
<codeline lineno="192"><highlight class="normal">{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_p_b_handle" kindref="compound">PBHandle</ref><sp/>*h<sp/>=<sp/>(<ref refid="struct_p_b_handle" kindref="compound">PBHandle</ref><sp/>*)<sp/>handle;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(h<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><ref refid="portburn__winxp_8cpp_1a89fa611a21d539227ea765d17f12231b" kindref="member">vectors</ref>[h-&gt;<ref refid="struct_p_b_handle_1a56432885c220c0c95233669d02193f30" kindref="member">ver</ref>].Close(h-&gt;<ref refid="struct_p_b_handle_1a46e452618a7586428e9c32779bcd9f20" kindref="member">realhandle</ref>);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/>HeapFree(GetProcessHeap(),<sp/>0,<sp/>h);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/>CoUninitialize();</highlight></codeline>
<codeline lineno="204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206" refid="portburn__winxp_8cpp_1a6d647fe48ea2893f160ede6fcbdc466a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="portburn__winxp_8cpp_1a6d647fe48ea2893f160ede6fcbdc466a" kindref="member">PortBurn_LastError</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*handle)</highlight></codeline>
<codeline lineno="207"><highlight class="normal">{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_p_b_handle" kindref="compound">PBHandle</ref><sp/>*h<sp/>=<sp/>(<ref refid="struct_p_b_handle" kindref="compound">PBHandle</ref><sp/>*)<sp/>handle;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(h<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portburn__winxp_8cpp_1a89fa611a21d539227ea765d17f12231b" kindref="member">vectors</ref>[h-&gt;<ref refid="struct_p_b_handle_1a56432885c220c0c95233669d02193f30" kindref="member">ver</ref>].LastError(h-&gt;<ref refid="struct_p_b_handle_1a46e452618a7586428e9c32779bcd9f20" kindref="member">realhandle</ref>);</highlight></codeline>
<codeline lineno="215"><highlight class="normal">}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217" refid="portburn__winxp_8cpp_1aff624447871a6b4f03f358d62da12b3f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="portburn__winxp_8cpp_1aff624447871a6b4f03f358d62da12b3f" kindref="member">PortBurn_GetNumDevices</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*handle)</highlight></codeline>
<codeline lineno="218"><highlight class="normal">{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_p_b_handle" kindref="compound">PBHandle</ref><sp/>*h<sp/>=<sp/>(<ref refid="struct_p_b_handle" kindref="compound">PBHandle</ref><sp/>*)<sp/>handle;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(h<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portburn__winxp_8cpp_1a89fa611a21d539227ea765d17f12231b" kindref="member">vectors</ref>[h-&gt;<ref refid="struct_p_b_handle_1a56432885c220c0c95233669d02193f30" kindref="member">ver</ref>].GetNumDevices(h-&gt;<ref refid="struct_p_b_handle_1a46e452618a7586428e9c32779bcd9f20" kindref="member">realhandle</ref>);</highlight></codeline>
<codeline lineno="226"><highlight class="normal">}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Get<sp/>the<sp/>name<sp/>of<sp/>the<sp/>device<sp/>with<sp/>a<sp/>given<sp/>index.<sp/><sp/>Only<sp/>valid</highlight></codeline>
<codeline lineno="229"><highlight class="comment"><sp/><sp/><sp/>after<sp/>a<sp/>call<sp/>to<sp/>GetNumDevices.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230" refid="portburn__winxp_8cpp_1a1d5a58e076c066de7cc4a4c2c60efd27" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="portburn__winxp_8cpp_1a1d5a58e076c066de7cc4a4c2c60efd27" kindref="member">PortBurn_GetDeviceName</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*handle,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight></codeline>
<codeline lineno="231"><highlight class="normal">{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_p_b_handle" kindref="compound">PBHandle</ref><sp/>*h<sp/>=<sp/>(<ref refid="struct_p_b_handle" kindref="compound">PBHandle</ref><sp/>*)<sp/>handle;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(h<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portburn__winxp_8cpp_1a89fa611a21d539227ea765d17f12231b" kindref="member">vectors</ref>[h-&gt;<ref refid="struct_p_b_handle_1a56432885c220c0c95233669d02193f30" kindref="member">ver</ref>].GetDeviceName(h-&gt;<ref refid="struct_p_b_handle_1a46e452618a7586428e9c32779bcd9f20" kindref="member">realhandle</ref>,<sp/>index);</highlight></codeline>
<codeline lineno="239"><highlight class="normal">}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241" refid="portburn__winxp_8cpp_1af20bcaffcc2db06bb505dc63f9c04e23" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="portburn__winxp_8cpp_1af20bcaffcc2db06bb505dc63f9c04e23" kindref="member">PortBurn_OpenDevice</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*handle,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight></codeline>
<codeline lineno="242"><highlight class="normal">{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_p_b_handle" kindref="compound">PBHandle</ref><sp/>*h<sp/>=<sp/>(<ref refid="struct_p_b_handle" kindref="compound">PBHandle</ref><sp/>*)<sp/>handle;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(h<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portburn_8h_1a630fe2da0b8160e8f71c7870b85dfff1a4d33d0a34c5e922a2fbcaa6d0b468beb" kindref="member">pbErrNoHandle</ref>;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portburn__winxp_8cpp_1a89fa611a21d539227ea765d17f12231b" kindref="member">vectors</ref>[h-&gt;<ref refid="struct_p_b_handle_1a56432885c220c0c95233669d02193f30" kindref="member">ver</ref>].OpenDevice(h-&gt;<ref refid="struct_p_b_handle_1a46e452618a7586428e9c32779bcd9f20" kindref="member">realhandle</ref>,<sp/>index);</highlight></codeline>
<codeline lineno="250"><highlight class="normal">}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252" refid="portburn__winxp_8cpp_1ada27d814dbf177e54f73baea8aa4f745" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="portburn__winxp_8cpp_1ada27d814dbf177e54f73baea8aa4f745" kindref="member">PortBurn_CloseDevice</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*handle)</highlight></codeline>
<codeline lineno="253"><highlight class="normal">{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_p_b_handle" kindref="compound">PBHandle</ref><sp/>*h<sp/>=<sp/>(<ref refid="struct_p_b_handle" kindref="compound">PBHandle</ref><sp/>*)<sp/>handle;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(h<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portburn_8h_1a630fe2da0b8160e8f71c7870b85dfff1a4d33d0a34c5e922a2fbcaa6d0b468beb" kindref="member">pbErrNoHandle</ref>;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portburn__winxp_8cpp_1a89fa611a21d539227ea765d17f12231b" kindref="member">vectors</ref>[h-&gt;<ref refid="struct_p_b_handle_1a56432885c220c0c95233669d02193f30" kindref="member">ver</ref>].CloseDevice(h-&gt;<ref refid="struct_p_b_handle_1a46e452618a7586428e9c32779bcd9f20" kindref="member">realhandle</ref>);</highlight></codeline>
<codeline lineno="261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263" refid="portburn__winxp_8cpp_1ac37694009f16b9acd699bf9355024a0b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="portburn__winxp_8cpp_1ac37694009f16b9acd699bf9355024a0b" kindref="member">PortBurn_EjectDevice</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*handle)</highlight></codeline>
<codeline lineno="264"><highlight class="normal">{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_p_b_handle" kindref="compound">PBHandle</ref><sp/>*h<sp/>=<sp/>(<ref refid="struct_p_b_handle" kindref="compound">PBHandle</ref><sp/>*)<sp/>handle;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(h<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portburn_8h_1a630fe2da0b8160e8f71c7870b85dfff1a4d33d0a34c5e922a2fbcaa6d0b468beb" kindref="member">pbErrNoHandle</ref>;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portburn__winxp_8cpp_1a89fa611a21d539227ea765d17f12231b" kindref="member">vectors</ref>[h-&gt;<ref refid="struct_p_b_handle_1a56432885c220c0c95233669d02193f30" kindref="member">ver</ref>].EjectDevice(h-&gt;<ref refid="struct_p_b_handle_1a46e452618a7586428e9c32779bcd9f20" kindref="member">realhandle</ref>);</highlight></codeline>
<codeline lineno="272"><highlight class="normal">}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274" refid="portburn__winxp_8cpp_1a37cdb993cad1d1fa87dfef05e6ed13bb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="portburn__winxp_8cpp_1a37cdb993cad1d1fa87dfef05e6ed13bb" kindref="member">PortBurn_StartStaging</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tmpdir)</highlight></codeline>
<codeline lineno="275"><highlight class="normal">{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_p_b_handle" kindref="compound">PBHandle</ref><sp/>*h<sp/>=<sp/>(<ref refid="struct_p_b_handle" kindref="compound">PBHandle</ref><sp/>*)<sp/>handle;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(h<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portburn_8h_1a630fe2da0b8160e8f71c7870b85dfff1a4d33d0a34c5e922a2fbcaa6d0b468beb" kindref="member">pbErrNoHandle</ref>;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portburn__winxp_8cpp_1a89fa611a21d539227ea765d17f12231b" kindref="member">vectors</ref>[h-&gt;<ref refid="struct_p_b_handle_1a56432885c220c0c95233669d02193f30" kindref="member">ver</ref>].StartStaging(h-&gt;<ref refid="struct_p_b_handle_1a46e452618a7586428e9c32779bcd9f20" kindref="member">realhandle</ref>,<sp/>tmpdir);</highlight></codeline>
<codeline lineno="283"><highlight class="normal">}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285" refid="portburn__winxp_8cpp_1a7e1d0b2aae691bdd0bcc8d2babd781d0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="portburn__winxp_8cpp_1a7e1d0b2aae691bdd0bcc8d2babd781d0" kindref="member">PortBurn_StartTrack</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>)</highlight></codeline>
<codeline lineno="286"><highlight class="normal">{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_p_b_handle" kindref="compound">PBHandle</ref><sp/>*h<sp/>=<sp/>(<ref refid="struct_p_b_handle" kindref="compound">PBHandle</ref><sp/>*)<sp/>handle;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(h<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portburn_8h_1a630fe2da0b8160e8f71c7870b85dfff1a4d33d0a34c5e922a2fbcaa6d0b468beb" kindref="member">pbErrNoHandle</ref>;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portburn__winxp_8cpp_1a89fa611a21d539227ea765d17f12231b" kindref="member">vectors</ref>[h-&gt;<ref refid="struct_p_b_handle_1a56432885c220c0c95233669d02193f30" kindref="member">ver</ref>].StartTrack(h-&gt;<ref refid="struct_p_b_handle_1a46e452618a7586428e9c32779bcd9f20" kindref="member">realhandle</ref>,<sp/>name);</highlight></codeline>
<codeline lineno="294"><highlight class="normal">}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296" refid="portburn__winxp_8cpp_1a41cb49ae24ceb3880d6b356de71c1491" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="portburn__winxp_8cpp_1a41cb49ae24ceb3880d6b356de71c1491" kindref="member">PortBurn_AddFrame</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*handle,<sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref>)</highlight></codeline>
<codeline lineno="297"><highlight class="normal">{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_p_b_handle" kindref="compound">PBHandle</ref><sp/>*h<sp/>=<sp/>(<ref refid="struct_p_b_handle" kindref="compound">PBHandle</ref><sp/>*)<sp/>handle;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(h<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portburn_8h_1a630fe2da0b8160e8f71c7870b85dfff1a4d33d0a34c5e922a2fbcaa6d0b468beb" kindref="member">pbErrNoHandle</ref>;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portburn__winxp_8cpp_1a89fa611a21d539227ea765d17f12231b" kindref="member">vectors</ref>[h-&gt;<ref refid="struct_p_b_handle_1a56432885c220c0c95233669d02193f30" kindref="member">ver</ref>].AddFrame(h-&gt;<ref refid="struct_p_b_handle_1a46e452618a7586428e9c32779bcd9f20" kindref="member">realhandle</ref>,<sp/>buffer);</highlight></codeline>
<codeline lineno="305"><highlight class="normal">}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307" refid="portburn__winxp_8cpp_1ae2aeb20dbc5c11585456ad81fb41f6cb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="portburn__winxp_8cpp_1ae2aeb20dbc5c11585456ad81fb41f6cb" kindref="member">PortBurn_EndTrack</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*handle)</highlight></codeline>
<codeline lineno="308"><highlight class="normal">{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_p_b_handle" kindref="compound">PBHandle</ref><sp/>*h<sp/>=<sp/>(<ref refid="struct_p_b_handle" kindref="compound">PBHandle</ref><sp/>*)<sp/>handle;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(h<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portburn_8h_1a630fe2da0b8160e8f71c7870b85dfff1a4d33d0a34c5e922a2fbcaa6d0b468beb" kindref="member">pbErrNoHandle</ref>;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portburn__winxp_8cpp_1a89fa611a21d539227ea765d17f12231b" kindref="member">vectors</ref>[h-&gt;<ref refid="struct_p_b_handle_1a56432885c220c0c95233669d02193f30" kindref="member">ver</ref>].EndTrack(h-&gt;<ref refid="struct_p_b_handle_1a46e452618a7586428e9c32779bcd9f20" kindref="member">realhandle</ref>);</highlight></codeline>
<codeline lineno="316"><highlight class="normal">}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318" refid="portburn__winxp_8cpp_1a6fdb8075e41cd223abdb507cd6294363" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="portburn__winxp_8cpp_1a6fdb8075e41cd223abdb507cd6294363" kindref="member">PortBurn_StartBurning</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*handle)</highlight></codeline>
<codeline lineno="319"><highlight class="normal">{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_p_b_handle" kindref="compound">PBHandle</ref><sp/>*h<sp/>=<sp/>(<ref refid="struct_p_b_handle" kindref="compound">PBHandle</ref><sp/>*)<sp/>handle;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(h<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portburn_8h_1a630fe2da0b8160e8f71c7870b85dfff1a4d33d0a34c5e922a2fbcaa6d0b468beb" kindref="member">pbErrNoHandle</ref>;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portburn__winxp_8cpp_1a89fa611a21d539227ea765d17f12231b" kindref="member">vectors</ref>[h-&gt;<ref refid="struct_p_b_handle_1a56432885c220c0c95233669d02193f30" kindref="member">ver</ref>].StartBurning(h-&gt;<ref refid="struct_p_b_handle_1a46e452618a7586428e9c32779bcd9f20" kindref="member">realhandle</ref>);</highlight></codeline>
<codeline lineno="327"><highlight class="normal">}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329" refid="portburn__winxp_8cpp_1a78cddb5a8e02c3b32af56c29a37e993f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="portburn__winxp_8cpp_1a78cddb5a8e02c3b32af56c29a37e993f" kindref="member">PortBurn_CancelBurning</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*handle)</highlight></codeline>
<codeline lineno="330"><highlight class="normal">{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_p_b_handle" kindref="compound">PBHandle</ref><sp/>*h<sp/>=<sp/>(<ref refid="struct_p_b_handle" kindref="compound">PBHandle</ref><sp/>*)<sp/>handle;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(h<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portburn_8h_1a630fe2da0b8160e8f71c7870b85dfff1a4d33d0a34c5e922a2fbcaa6d0b468beb" kindref="member">pbErrNoHandle</ref>;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portburn__winxp_8cpp_1a89fa611a21d539227ea765d17f12231b" kindref="member">vectors</ref>[h-&gt;<ref refid="struct_p_b_handle_1a56432885c220c0c95233669d02193f30" kindref="member">ver</ref>].CancelBurning(h-&gt;<ref refid="struct_p_b_handle_1a46e452618a7586428e9c32779bcd9f20" kindref="member">realhandle</ref>);</highlight></codeline>
<codeline lineno="338"><highlight class="normal">}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340" refid="portburn__winxp_8cpp_1ab40d7add45bb6165ffc5d012b3a1e8f0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="portburn__winxp_8cpp_1ab40d7add45bb6165ffc5d012b3a1e8f0" kindref="member">PortBurn_GetStatus</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*handle,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*out_fraction_complete)</highlight></codeline>
<codeline lineno="341"><highlight class="normal">{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_p_b_handle" kindref="compound">PBHandle</ref><sp/>*h<sp/>=<sp/>(<ref refid="struct_p_b_handle" kindref="compound">PBHandle</ref><sp/>*)<sp/>handle;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(h<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portburn_8h_1a630fe2da0b8160e8f71c7870b85dfff1a4d33d0a34c5e922a2fbcaa6d0b468beb" kindref="member">pbErrNoHandle</ref>;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portburn__winxp_8cpp_1a89fa611a21d539227ea765d17f12231b" kindref="member">vectors</ref>[h-&gt;<ref refid="struct_p_b_handle_1a56432885c220c0c95233669d02193f30" kindref="member">ver</ref>].GetStatus(h-&gt;<ref refid="struct_p_b_handle_1a46e452618a7586428e9c32779bcd9f20" kindref="member">realhandle</ref>,<sp/>out_fraction_complete);</highlight></codeline>
<codeline lineno="349"><highlight class="normal">}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351" refid="portburn__winxp_8cpp_1aa0feae939bec9216e97817b76c28cfba" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="portburn__winxp_8cpp_1aa0feae939bec9216e97817b76c28cfba" kindref="member">PortBurn_GetOption</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*handle,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>option,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>)</highlight></codeline>
<codeline lineno="352"><highlight class="normal">{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_p_b_handle" kindref="compound">PBHandle</ref><sp/>*h<sp/>=<sp/>(<ref refid="struct_p_b_handle" kindref="compound">PBHandle</ref><sp/>*)<sp/>handle;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(h<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portburn_8h_1a630fe2da0b8160e8f71c7870b85dfff1a4d33d0a34c5e922a2fbcaa6d0b468beb" kindref="member">pbErrNoHandle</ref>;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portburn__winxp_8cpp_1a89fa611a21d539227ea765d17f12231b" kindref="member">vectors</ref>[h-&gt;<ref refid="struct_p_b_handle_1a56432885c220c0c95233669d02193f30" kindref="member">ver</ref>].GetOption(h-&gt;<ref refid="struct_p_b_handle_1a46e452618a7586428e9c32779bcd9f20" kindref="member">realhandle</ref>,<sp/>option,<sp/>value);</highlight></codeline>
<codeline lineno="360"><highlight class="normal">}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362" refid="portburn__winxp_8cpp_1a1696e9dfae8a54a5b61c47f859bfdd93" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="portburn__winxp_8cpp_1a1696e9dfae8a54a5b61c47f859bfdd93" kindref="member">PortBurn_SetOption</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*handle,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>option,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>)</highlight></codeline>
<codeline lineno="363"><highlight class="normal">{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_p_b_handle" kindref="compound">PBHandle</ref><sp/>*h<sp/>=<sp/>(<ref refid="struct_p_b_handle" kindref="compound">PBHandle</ref><sp/>*)<sp/>handle;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(h<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portburn_8h_1a630fe2da0b8160e8f71c7870b85dfff1a4d33d0a34c5e922a2fbcaa6d0b468beb" kindref="member">pbErrNoHandle</ref>;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portburn__winxp_8cpp_1a89fa611a21d539227ea765d17f12231b" kindref="member">vectors</ref>[h-&gt;<ref refid="struct_p_b_handle_1a56432885c220c0c95233669d02193f30" kindref="member">ver</ref>].SetOption(h-&gt;<ref refid="struct_p_b_handle_1a46e452618a7586428e9c32779bcd9f20" kindref="member">realhandle</ref>,<sp/>option,<sp/>value);</highlight></codeline>
<codeline lineno="371"><highlight class="normal">}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373" refid="portburn__winxp_8cpp_1a2c6add2dab189c6bed64fc8240029b79" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="portburn__winxp_8cpp_1a2c6add2dab189c6bed64fc8240029b79" kindref="member">PortBurn_GetSpeeds</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*handle,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*cnt,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*speeds[])</highlight></codeline>
<codeline lineno="374"><highlight class="normal">{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="376"><highlight class="normal">}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Erase<sp/>the<sp/>media<sp/>in<sp/>the<sp/>currently<sp/>opened<sp/>device<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379" refid="portburn__winxp_8cpp_1a96e2c97683df3d9ff86a0f019752561a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="portburn__winxp_8cpp_1a96e2c97683df3d9ff86a0f019752561a" kindref="member">PortBurn_StartErasing</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*handle,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref>)</highlight></codeline>
<codeline lineno="380"><highlight class="normal">{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_p_b_handle" kindref="compound">PBHandle</ref><sp/>*h<sp/>=<sp/>(<ref refid="struct_p_b_handle" kindref="compound">PBHandle</ref><sp/>*)<sp/>handle;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(h<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portburn_8h_1a630fe2da0b8160e8f71c7870b85dfff1a4d33d0a34c5e922a2fbcaa6d0b468beb" kindref="member">pbErrNoHandle</ref>;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portburn__winxp_8cpp_1a89fa611a21d539227ea765d17f12231b" kindref="member">vectors</ref>[h-&gt;<ref refid="struct_p_b_handle_1a56432885c220c0c95233669d02193f30" kindref="member">ver</ref>].StartErasing(h-&gt;<ref refid="struct_p_b_handle_1a46e452618a7586428e9c32779bcd9f20" kindref="member">realhandle</ref>,<sp/>type);</highlight></codeline>
<codeline lineno="388"><highlight class="normal">}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390" refid="portburn__winxp_8cpp_1a95e583b631f7fb3b8cbe1f8fd2dc7680" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="portburn__winxp_8cpp_1a95e583b631f7fb3b8cbe1f8fd2dc7680" kindref="member">PortBurn_GetEraseStatus</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*handle,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*out_fraction_complete)</highlight></codeline>
<codeline lineno="391"><highlight class="normal">{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_p_b_handle" kindref="compound">PBHandle</ref><sp/>*h<sp/>=<sp/>(<ref refid="struct_p_b_handle" kindref="compound">PBHandle</ref><sp/>*)<sp/>handle;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(h<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portburn_8h_1a630fe2da0b8160e8f71c7870b85dfff1a4d33d0a34c5e922a2fbcaa6d0b468beb" kindref="member">pbErrNoHandle</ref>;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portburn__winxp_8cpp_1a89fa611a21d539227ea765d17f12231b" kindref="member">vectors</ref>[h-&gt;<ref refid="struct_p_b_handle_1a56432885c220c0c95233669d02193f30" kindref="member">ver</ref>].GetEraseStatus(h-&gt;<ref refid="struct_p_b_handle_1a46e452618a7586428e9c32779bcd9f20" kindref="member">realhandle</ref>,<sp/>out_fraction_complete);</highlight></codeline>
<codeline lineno="399"><highlight class="normal">}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402" refid="portburn__winxp_8cpp_1ad847db91421f3e18fc5ee28e8b5d3701" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="portburn__winxp_8cpp_1ad847db91421f3e18fc5ee28e8b5d3701" kindref="member">PortBurn_GetMediaState</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*handle,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*state)</highlight></codeline>
<codeline lineno="403"><highlight class="normal">{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_p_b_handle" kindref="compound">PBHandle</ref><sp/>*h<sp/>=<sp/>(<ref refid="struct_p_b_handle" kindref="compound">PBHandle</ref><sp/>*)<sp/>handle;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(h<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portburn_8h_1a630fe2da0b8160e8f71c7870b85dfff1a4d33d0a34c5e922a2fbcaa6d0b468beb" kindref="member">pbErrNoHandle</ref>;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portburn__winxp_8cpp_1a89fa611a21d539227ea765d17f12231b" kindref="member">vectors</ref>[h-&gt;<ref refid="struct_p_b_handle_1a56432885c220c0c95233669d02193f30" kindref="member">ver</ref>].GetMediaState(h-&gt;<ref refid="struct_p_b_handle_1a46e452618a7586428e9c32779bcd9f20" kindref="member">realhandle</ref>,<sp/>state);</highlight></codeline>
<codeline lineno="411"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portburn/portburn_winxp.cpp"/>
  </compounddef>
</doxygen>
