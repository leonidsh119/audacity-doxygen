<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="struct_a_v_frame" kind="struct" language="C++" prot="public">
    <compoundname>AVFrame</compoundname>
    <includes refid="ffmpeg_2libavutil_2frame_8h" local="no">frame.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_a_v_frame_1a1d0f65014a8d1bf78cec8cbed2304992" prot="public" static="no" mutable="no">
        <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> *</type>
        <definition>uint8_t* AVFrame::data[AV_NUM_DATA_POINTERS]</definition>
        <argsstring>[AV_NUM_DATA_POINTERS]</argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>pointer to the picture/channel planes. This might be different from the first allocated byte</para><para>Some decoders access areas outside 0,0 - width,height, please see <ref refid="group__lavc__decoding_1ga34e3269dc1b9e2c98e9371241722e7e2" kindref="member">avcodec_align_dimensions2()</ref>. Some filters and swscale can read up to 16 bytes beyond the planes, if these filters are to be used, then 16 extra bytes must be allocated. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" line="144" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_frame_1aa52bfc6605f6a3059a0c3226cc0f6567" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int AVFrame::linesize[AV_NUM_DATA_POINTERS]</definition>
        <argsstring>[AV_NUM_DATA_POINTERS]</argsstring>
        <name>linesize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>For video, size in bytes of each picture line. For audio, size in bytes of each plane.</para><para>For audio, only linesize[0] may be set. For planar audio, each channel plane must be the same size.</para><para>For video the linesizes should be multiplies of the CPUs alignment preference, this is 16 or 32 for modern desktop CPUs. Some code requires such alignment other code can be slower without correct alignment, for yet other it makes no difference.</para><para><simplesect kind="note"><para>The linesize may be larger than the size of usable data <ndash/> there may be extra padding present for performance reasons. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" line="161" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_frame_1afca04d808393822625e09b5ba91c6756" prot="public" static="no" mutable="no">
        <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> **</type>
        <definition>uint8_t** AVFrame::extended_data</definition>
        <argsstring></argsstring>
        <name>extended_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>pointers to the data planes/channels.</para><para>For video, this should simply point to data[].</para><para>For planar audio, each channel has a separate data pointer, and linesize[0] contains the size of each channel buffer. For packed audio, there is just one data pointer, and linesize[0] contains the total size of the buffer for all channels.</para><para>Note: Both data and extended_data should always be set in a valid frame, but for planar audio with more channels that can fit in data, extended_data must be used in order to access all channels. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" line="177" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" bodystart="177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_frame_1a1e71ce60cedd5f3b6811714a9f7f9e0a" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int AVFrame::width</definition>
        <argsstring></argsstring>
        <name>width</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>width and height of the video frame </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" line="182" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_frame_1a3f89733f429c98ba5bc64373fb0a3f13" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int AVFrame::height</definition>
        <argsstring></argsstring>
        <name>height</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" line="182" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_frame_1a02f45ab8191aea1660159f1e464237ea" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int AVFrame::nb_samples</definition>
        <argsstring></argsstring>
        <name>nb_samples</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>number of audio samples (per channel) described by this frame </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" line="187" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" bodystart="187" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_frame_1aed14fa772ce46881020fd1545c86432c" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int AVFrame::format</definition>
        <argsstring></argsstring>
        <name>format</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>format of the frame, -1 if unknown or unset Values correspond to enum AVPixelFormat for video frames, enum AVSampleFormat for audio) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" line="194" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" bodystart="194" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_frame_1a3649a81e8414a193d685a6eee06ce902" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int AVFrame::key_frame</definition>
        <argsstring></argsstring>
        <name>key_frame</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>1 -&gt; keyframe, 0-&gt; not </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" line="199" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" bodystart="199" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_frame_1af9920fc3fbfa347b8943ae461b50d18b" prot="public" static="no" mutable="no">
        <type>enum <ref refid="group__lavu__picture_1gae6cbcab1f70d8e476757f1c1f5a0a78e" kindref="member">AVPictureType</ref></type>
        <definition>enum AVPictureType AVFrame::pict_type</definition>
        <argsstring></argsstring>
        <name>pict_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Picture type of the frame. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" line="199" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_frame_1a3576f52c558b95adc4a83bf8feb7c8e4" prot="public" static="no" mutable="no">
        <type><ref refid="attributes_8h_1aa6d076561d3a9eea4729ee632652de02" kindref="member">attribute_deprecated</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> *</type>
        <definition>attribute_deprecated uint8_t* AVFrame::base[AV_NUM_DATA_POINTERS]</definition>
        <argsstring>[AV_NUM_DATA_POINTERS]</argsstring>
        <name>base</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" line="208" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" bodystart="208" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_frame_1a62f9c20541a83d37db7072126ff0060d" prot="public" static="no" mutable="no">
        <type><ref refid="struct_a_v_rational" kindref="compound">AVRational</ref></type>
        <definition>AVRational AVFrame::sample_aspect_ratio</definition>
        <argsstring></argsstring>
        <name>sample_aspect_ratio</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="struct_sample" kindref="compound">Sample</ref> aspect ratio for the video frame, 0/1 if unknown/unspecified. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" line="214" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" bodystart="214" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_frame_1a0452833e3ab6ddd7acbf82817a7818a4" prot="public" static="no" mutable="no">
        <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref></type>
        <definition>int64_t AVFrame::pts</definition>
        <argsstring></argsstring>
        <name>pts</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Presentation timestamp in time_base units (time when frame should be shown to user). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" line="219" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" bodystart="219" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_frame_1a47f555732f9c18928de727a163cd7cb6" prot="public" static="no" mutable="no">
        <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref></type>
        <definition>int64_t AVFrame::pkt_pts</definition>
        <argsstring></argsstring>
        <name>pkt_pts</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>PTS copied from the <ref refid="struct_a_v_packet" kindref="compound">AVPacket</ref> that was decoded to produce this frame. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" line="224" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" bodystart="224" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_frame_1aa52951f35ec9e303d3dfeb4b3e44248a" prot="public" static="no" mutable="no">
        <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref></type>
        <definition>int64_t AVFrame::pkt_dts</definition>
        <argsstring></argsstring>
        <name>pkt_dts</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>DTS copied from the <ref refid="struct_a_v_packet" kindref="compound">AVPacket</ref> that triggered returning this frame. (if frame threading isnt used) This is also the Presentation time of this <ref refid="struct_a_v_frame" kindref="compound">AVFrame</ref> calculated from only <ref refid="struct_a_v_packet_1a85dbbd306b44b02390cd91c45e6a0f76" kindref="member">AVPacket.dts</ref> values without pts values. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" line="231" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" bodystart="231" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_frame_1a02ca9bb7f500d3d850f8736f3cb29c6c" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int AVFrame::coded_picture_number</definition>
        <argsstring></argsstring>
        <name>coded_picture_number</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>picture number in bitstream order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" line="236" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" bodystart="236" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_frame_1a12b00a552b74c79f0760b80fac18efe7" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int AVFrame::display_picture_number</definition>
        <argsstring></argsstring>
        <name>display_picture_number</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>picture number in display order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" line="240" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" bodystart="240" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_frame_1a791c071afd3e95fcae14cb781829754d" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int AVFrame::quality</definition>
        <argsstring></argsstring>
        <name>quality</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>quality (between 1 (good) and FF_LAMBDA_MAX (bad)) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" line="245" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" bodystart="245" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_frame_1a20e4db6c5f6832bf290ed36dc7b42fa8" prot="public" static="no" mutable="no">
        <type><ref refid="attributes_8h_1aa6d076561d3a9eea4729ee632652de02" kindref="member">attribute_deprecated</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>attribute_deprecated int AVFrame::reference</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" line="249" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" bodystart="249" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_frame_1a6e243e21c69bd4b04f1cf895d5d5f25f" prot="public" static="no" mutable="no">
        <type><ref refid="attributes_8h_1aa6d076561d3a9eea4729ee632652de02" kindref="member">attribute_deprecated</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a27eddd12ef1271a2ea8629e1148e7e63" kindref="member">int8_t</ref> *</type>
        <definition>attribute_deprecated int8_t* AVFrame::qscale_table</definition>
        <argsstring></argsstring>
        <name>qscale_table</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>QP table </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" line="255" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" bodystart="255" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_frame_1ac098b032e02908775f0552178e5465b8" prot="public" static="no" mutable="no">
        <type><ref refid="attributes_8h_1aa6d076561d3a9eea4729ee632652de02" kindref="member">attribute_deprecated</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>attribute_deprecated int AVFrame::qstride</definition>
        <argsstring></argsstring>
        <name>qstride</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>QP store stride </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" line="260" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" bodystart="260" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_frame_1afab492e7a59bec741f2a0194611591b0" prot="public" static="no" mutable="no">
        <type><ref refid="attributes_8h_1aa6d076561d3a9eea4729ee632652de02" kindref="member">attribute_deprecated</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>attribute_deprecated int AVFrame::qscale_type</definition>
        <argsstring></argsstring>
        <name>qscale_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" line="263" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" bodystart="263" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_frame_1a67f603768399357bb742e945118066fd" prot="public" static="no" mutable="no">
        <type><ref refid="attributes_8h_1aa6d076561d3a9eea4729ee632652de02" kindref="member">attribute_deprecated</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> *</type>
        <definition>attribute_deprecated uint8_t* AVFrame::mbskip_table</definition>
        <argsstring></argsstring>
        <name>mbskip_table</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>mbskip_table[mb]&gt;=1 if MB didn&apos;t change stride= mb_width = (width+15)&gt;&gt;4 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" line="270" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" bodystart="270" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_frame_1addb4424d9ac973ca8b3b7a9a0ecd047a" prot="public" static="no" mutable="no">
        <type><ref refid="attributes_8h_1aa6d076561d3a9eea4729ee632652de02" kindref="member">attribute_deprecated</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a044293bfeff56852a28ed6c2cfbb2649" kindref="member">int16_t</ref>(*[2]</type>
        <definition>attribute_deprecated int16_t(*[2] AVFrame::motion_val)[2]</definition>
        <argsstring>)[2]</argsstring>
        <name>motion_val</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>motion vector table <programlisting><codeline><highlight class="normal">example:</highlight></codeline>
<codeline><highlight class="normal">int<sp/>mv_sample_log2=<sp/>4<sp/>-<sp/>motion_subsample_log2;</highlight></codeline>
<codeline><highlight class="normal">int<sp/>mb_width=<sp/>(width+15)&gt;&gt;4;</highlight></codeline>
<codeline><highlight class="normal">int<sp/>mv_stride=<sp/>(mb_width<sp/>&lt;&lt;<sp/>mv_sample_log2)<sp/>+<sp/>1;</highlight></codeline>
<codeline><highlight class="normal">motion_val[direction][x<sp/>+<sp/>y*mv_stride][0-&gt;mv_x,<sp/>1-&gt;mv_y];</highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" line="283" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" bodystart="283" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_frame_1a1e86aef37e3ef464d2ddb070fa2a3bee" prot="public" static="no" mutable="no">
        <type><ref refid="attributes_8h_1aa6d076561d3a9eea4729ee632652de02" kindref="member">attribute_deprecated</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref> *</type>
        <definition>attribute_deprecated uint32_t* AVFrame::mb_type</definition>
        <argsstring></argsstring>
        <name>mb_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>macroblock type table mb_type_base + mb_width + 2 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" line="290" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" bodystart="290" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_frame_1a8daab6ee939f3653832c45ff04fc9190" prot="public" static="no" mutable="no">
        <type><ref refid="attributes_8h_1aa6d076561d3a9eea4729ee632652de02" kindref="member">attribute_deprecated</ref> short *</type>
        <definition>attribute_deprecated short* AVFrame::dct_coeff</definition>
        <argsstring></argsstring>
        <name>dct_coeff</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>DCT coefficients </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" line="296" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" bodystart="296" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_frame_1adb15f47de298b11de31f279a8652f73d" prot="public" static="no" mutable="no">
        <type><ref refid="attributes_8h_1aa6d076561d3a9eea4729ee632652de02" kindref="member">attribute_deprecated</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a27eddd12ef1271a2ea8629e1148e7e63" kindref="member">int8_t</ref> *</type>
        <definition>attribute_deprecated int8_t* AVFrame::ref_index[2]</definition>
        <argsstring>[2]</argsstring>
        <name>ref_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>motion reference frame index the order in which these are stored can depend on the codec. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" line="303" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" bodystart="303" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_frame_1a385d043b41cd182b7b1bdaec56ed19e0" prot="public" static="no" mutable="no">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
        <definition>void* AVFrame::opaque</definition>
        <argsstring></argsstring>
        <name>opaque</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>for some private data of the user </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" line="309" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" bodystart="309" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_frame_1a3893c612b55b82258333f99a32117e60" prot="public" static="no" mutable="no">
        <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref></type>
        <definition>uint64_t AVFrame::error[AV_NUM_DATA_POINTERS]</definition>
        <argsstring>[AV_NUM_DATA_POINTERS]</argsstring>
        <name>error</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>error </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" line="314" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" bodystart="314" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_frame_1af7143534e996c9c9863c1e3c8c5e59d9" prot="public" static="no" mutable="no">
        <type><ref refid="attributes_8h_1aa6d076561d3a9eea4729ee632652de02" kindref="member">attribute_deprecated</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>attribute_deprecated int AVFrame::type</definition>
        <argsstring></argsstring>
        <name>type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" line="318" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" bodystart="318" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_frame_1aef11fd783ad17b6841af82efa07c859e" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int AVFrame::repeat_pict</definition>
        <argsstring></argsstring>
        <name>repeat_pict</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>When decoding, this signals how much the picture must be delayed. extra_delay = repeat_pict / (2*fps) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" line="325" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" bodystart="325" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_frame_1a7f761518da738c704676c6a5f08eeb8e" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int AVFrame::interlaced_frame</definition>
        <argsstring></argsstring>
        <name>interlaced_frame</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The content of the picture is interlaced. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" line="330" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" bodystart="330" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_frame_1a6f3ee0596312c90a2ef2ad160c991188" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int AVFrame::top_field_first</definition>
        <argsstring></argsstring>
        <name>top_field_first</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>If the content is interlaced, is top field displayed first. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" line="335" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" bodystart="335" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_frame_1a6144be38de30e80de331f435e61f5f4c" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int AVFrame::palette_has_changed</definition>
        <argsstring></argsstring>
        <name>palette_has_changed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Tell user application that palette has changed from previous frame. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" line="340" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" bodystart="340" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_frame_1a1d275de5af027f9f6b11748b2faf1102" prot="public" static="no" mutable="no">
        <type><ref refid="attributes_8h_1aa6d076561d3a9eea4729ee632652de02" kindref="member">attribute_deprecated</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>attribute_deprecated int AVFrame::buffer_hints</definition>
        <argsstring></argsstring>
        <name>buffer_hints</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" line="344" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" bodystart="344" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_frame_1a51deb6d33804b3ca22e65e45b2782902" prot="public" static="no" mutable="no">
        <type><ref refid="attributes_8h_1aa6d076561d3a9eea4729ee632652de02" kindref="member">attribute_deprecated</ref> struct <ref refid="struct_a_v_pan_scan" kindref="compound">AVPanScan</ref> *</type>
        <definition>attribute_deprecated struct AVPanScan* AVFrame::pan_scan</definition>
        <argsstring></argsstring>
        <name>pan_scan</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Pan scan. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" line="350" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" bodystart="350" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_frame_1ab54a78c51318c8c678e545b1f3d6fddd" prot="public" static="no" mutable="no">
        <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref></type>
        <definition>int64_t AVFrame::reordered_opaque</definition>
        <argsstring></argsstring>
        <name>reordered_opaque</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>reordered opaque 64bit (generally an integer or a double precision float PTS but can be anything). The user sets <ref refid="struct_a_v_codec_context_1a64c09907902b41744c3ea60c89fd42fb" kindref="member">AVCodecContext.reordered_opaque</ref> to represent the input at that time, the decoder reorders values as needed and sets <ref refid="struct_a_v_frame_1ab54a78c51318c8c678e545b1f3d6fddd" kindref="member">AVFrame.reordered_opaque</ref> to exactly one of the values provided by the user through <ref refid="struct_a_v_codec_context_1a64c09907902b41744c3ea60c89fd42fb" kindref="member">AVCodecContext.reordered_opaque</ref> <xrefsect id="deprecated_1_deprecated000025"><xreftitle>Deprecated</xreftitle><xrefdescription><para>in favor of pkt_pts </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" line="362" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" bodystart="362" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_frame_1a65f7f4bcff7f6ffb020138d839bbb3f6" prot="public" static="no" mutable="no">
        <type><ref refid="attributes_8h_1aa6d076561d3a9eea4729ee632652de02" kindref="member">attribute_deprecated</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
        <definition>attribute_deprecated void* AVFrame::hwaccel_picture_private</definition>
        <argsstring></argsstring>
        <name>hwaccel_picture_private</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000026"><xreftitle>Deprecated</xreftitle><xrefdescription><para>this field is unused </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" line="368" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" bodystart="368" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_frame_1a2fa44ff6fd61c3f9c5f84ee8ba7b1426" prot="public" static="no" mutable="no">
        <type><ref refid="attributes_8h_1aa6d076561d3a9eea4729ee632652de02" kindref="member">attribute_deprecated</ref> struct <ref refid="struct_a_v_codec_context" kindref="compound">AVCodecContext</ref> *</type>
        <definition>attribute_deprecated struct AVCodecContext* AVFrame::owner</definition>
        <argsstring></argsstring>
        <name>owner</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" line="371" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" bodystart="371" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_frame_1ae4a8ca2d431076c15418c9f3b2a8c6e6" prot="public" static="no" mutable="no">
        <type><ref refid="attributes_8h_1aa6d076561d3a9eea4729ee632652de02" kindref="member">attribute_deprecated</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
        <definition>attribute_deprecated void* AVFrame::thread_opaque</definition>
        <argsstring></argsstring>
        <name>thread_opaque</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" line="373" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" bodystart="373" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_frame_1abfc1b1ee5cf3c8a85650296e1f8a9bca" prot="public" static="no" mutable="no">
        <type><ref refid="attributes_8h_1aa6d076561d3a9eea4729ee632652de02" kindref="member">attribute_deprecated</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref></type>
        <definition>attribute_deprecated uint8_t AVFrame::motion_subsample_log2</definition>
        <argsstring></argsstring>
        <name>motion_subsample_log2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>log2 of the size of the block which a single vector in motion_val represents: (4-&gt;16x16, 3-&gt;8x8, 2-&gt; 4x4, 1-&gt; 2x2) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" line="380" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" bodystart="380" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_frame_1ac85daa1316e1f47e78da0ca19b7c60e6" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int AVFrame::sample_rate</definition>
        <argsstring></argsstring>
        <name>sample_rate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="struct_sample" kindref="compound">Sample</ref> rate of the audio data. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" line="386" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" bodystart="386" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_frame_1a5f343e0325e3e9d9ed20e34c9e156aef" prot="public" static="no" mutable="no">
        <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1aec6fcb673ff035718c238c8c9d544c47" kindref="member">uint64_t</ref></type>
        <definition>uint64_t AVFrame::channel_layout</definition>
        <argsstring></argsstring>
        <name>channel_layout</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Channel layout of the audio data. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" line="391" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" bodystart="391" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_frame_1a4a64d05cc676bfa8e18bf22d16c8a51f" prot="public" static="no" mutable="no">
        <type><ref refid="struct_a_v_buffer_ref" kindref="compound">AVBufferRef</ref> *</type>
        <definition>AVBufferRef* AVFrame::buf[AV_NUM_DATA_POINTERS]</definition>
        <argsstring>[AV_NUM_DATA_POINTERS]</argsstring>
        <name>buf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>AVBuffer references backing the data for this frame. If all elements of this array are NULL, then this frame is not reference counted.</para><para>There may be at most one AVBuffer per data plane, so for video this array always contains all the references. For planar audio with more than AV_NUM_DATA_POINTERS channels, there may be more buffers than can fit in this array. Then the extra <ref refid="struct_a_v_buffer_ref" kindref="compound">AVBufferRef</ref> pointers are stored in the extended_buf array. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" line="403" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" bodystart="403" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_frame_1a254a144d113ceedc003ec1547cc5bd54" prot="public" static="no" mutable="no">
        <type><ref refid="struct_a_v_buffer_ref" kindref="compound">AVBufferRef</ref> **</type>
        <definition>AVBufferRef** AVFrame::extended_buf</definition>
        <argsstring></argsstring>
        <name>extended_buf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>For planar audio which requires more than AV_NUM_DATA_POINTERS <ref refid="struct_a_v_buffer_ref" kindref="compound">AVBufferRef</ref> pointers, this array will hold all the references which cannot fit into <ref refid="struct_a_v_frame_1a4a64d05cc676bfa8e18bf22d16c8a51f" kindref="member">AVFrame.buf</ref>.</para><para>Note that this is different from <ref refid="struct_a_v_frame_1afca04d808393822625e09b5ba91c6756" kindref="member">AVFrame.extended_data</ref>, which always contains all the pointers. This array only contains the extra pointers, which cannot fit into <ref refid="struct_a_v_frame_1a4a64d05cc676bfa8e18bf22d16c8a51f" kindref="member">AVFrame.buf</ref>.</para><para>This array is always allocated using <ref refid="group__lavu__mem_1gacbca30ebc510a7e4156d66e7aceb2dc8" kindref="member">av_malloc()</ref> by whoever constructs the frame. It is freed in <ref refid="group__lavu__frame_1ga0a2b687f9c1c5ed0089b01fd61227108" kindref="member">av_frame_unref()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" line="417" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" bodystart="417" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_frame_1aa2dc17f4f816018b0782e1386bdbeeb1" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int AVFrame::nb_extended_buf</definition>
        <argsstring></argsstring>
        <name>nb_extended_buf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Number of elements in extended_buf. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" line="421" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" bodystart="421" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_frame_1a44d40e03fe22a0511c9157dab22143ee" prot="public" static="no" mutable="no">
        <type><ref refid="struct_a_v_frame_side_data" kindref="compound">AVFrameSideData</ref> **</type>
        <definition>AVFrameSideData** AVFrame::side_data</definition>
        <argsstring></argsstring>
        <name>side_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" line="423" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" bodystart="423" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_frame_1a9061ffbfdbdfec29f2dbfc252c5569a7" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int AVFrame::nb_side_data</definition>
        <argsstring></argsstring>
        <name>nb_side_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" line="424" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" bodystart="424" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_frame_1a49020cc320b8fb1f5449167b6c97515b" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int AVFrame::flags</definition>
        <argsstring></argsstring>
        <name>flags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Frame flags, a combination of <ref refid="group__lavu__frame__flags" kindref="compound">AV_FRAME_FLAGS</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" line="444" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" bodystart="444" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_frame_1a0943e85eb624c2191490862ececd319d" prot="public" static="no" mutable="no">
        <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref></type>
        <definition>int64_t AVFrame::best_effort_timestamp</definition>
        <argsstring></argsstring>
        <name>best_effort_timestamp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>frame timestamp estimated using various heuristics, in stream time base Code outside libavcodec should access this field using: av_frame_get_best_effort_timestamp(frame)<itemizedlist>
<listitem><para>encoding: unused</para></listitem><listitem><para>decoding: set by libavcodec, read by user. </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" line="453" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" bodystart="453" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_frame_1a3bc83474709406b511c4f3498182d18a" prot="public" static="no" mutable="no">
        <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref></type>
        <definition>int64_t AVFrame::pkt_pos</definition>
        <argsstring></argsstring>
        <name>pkt_pos</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>reordered pos from the last <ref refid="struct_a_v_packet" kindref="compound">AVPacket</ref> that has been input into the decoder Code outside libavcodec should access this field using: av_frame_get_pkt_pos(frame)<itemizedlist>
<listitem><para>encoding: unused</para></listitem><listitem><para>decoding: Read by user. </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" line="462" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" bodystart="462" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_frame_1a385c44d7cafe80cad82fe46e25cab221" prot="public" static="no" mutable="no">
        <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref></type>
        <definition>int64_t AVFrame::pkt_duration</definition>
        <argsstring></argsstring>
        <name>pkt_duration</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>duration of the corresponding packet, expressed in AVStream-&gt;time_base units, 0 if unknown. Code outside libavcodec should access this field using: av_frame_get_pkt_duration(frame)<itemizedlist>
<listitem><para>encoding: unused</para></listitem><listitem><para>decoding: Read by user. </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" line="472" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" bodystart="472" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_frame_1a5bde87fd101f66d6263bb451056dba13" prot="public" static="no" mutable="no">
        <type><ref refid="group__lavu__dict_1ga1d7cc0833bee918994a600556410315f" kindref="member">AVDictionary</ref> *</type>
        <definition>AVDictionary* AVFrame::metadata</definition>
        <argsstring></argsstring>
        <name>metadata</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>metadata. Code outside libavcodec should access this field using: av_frame_get_metadata(frame)<itemizedlist>
<listitem><para>encoding: Set by user.</para></listitem><listitem><para>decoding: Set by libavcodec. </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" line="481" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" bodystart="481" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_frame_1a3dd46fd353a405f6e9b91c11d9c5b736" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int AVFrame::decode_error_flags</definition>
        <argsstring></argsstring>
        <name>decode_error_flags</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>decode error flags of the frame, set to a combination of FF_DECODE_ERROR_xxx flags if the decoder produced a frame, but there were errors during the decoding. Code outside libavcodec should access this field using: av_frame_get_decode_error_flags(frame)<itemizedlist>
<listitem><para>encoding: unused</para></listitem><listitem><para>decoding: set by libavcodec, read by user. </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" line="492" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" bodystart="492" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_frame_1a58c663568a99c1477c163e64858b3fef" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int AVFrame::channels</definition>
        <argsstring></argsstring>
        <name>channels</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>number of audio channels, only used for audio. Code outside libavcodec should access this field using: av_frame_get_channels(frame)<itemizedlist>
<listitem><para>encoding: unused</para></listitem><listitem><para>decoding: Read by user. </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" line="503" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" bodystart="503" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_frame_1a3cc73a3345ec1ff8e473ab6049c607e7" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int AVFrame::pkt_size</definition>
        <argsstring></argsstring>
        <name>pkt_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>size of the corresponding packet containing the compressed frame. It must be accessed using <ref refid="group__lavu__frame_1ga03e2090721bb5d66f292090c7e7e2524" kindref="member">av_frame_get_pkt_size()</ref> and <ref refid="group__lavu__frame_1ga12742a052df91eeb22a0062cf3da0504" kindref="member">av_frame_set_pkt_size()</ref>. It is set to a negative value if unknown.<itemizedlist>
<listitem><para>encoding: unused</para></listitem><listitem><para>decoding: set by libavcodec, read by user. </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" line="513" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" bodystart="513" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_frame_1a9262c231f1f64869439b4fe587fe1710" prot="public" static="no" mutable="no">
        <type>enum <ref refid="ffmpeg_2libavutil_2frame_8h_1aff71a069509a1ad3ff54d53a1c894c85" kindref="member">AVColorSpace</ref></type>
        <definition>enum AVColorSpace AVFrame::colorspace</definition>
        <argsstring></argsstring>
        <name>colorspace</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>YUV colorspace type. It must be accessed using <ref refid="group__lavu__frame_1ga03224acf06cbd666f3878a2c35b3f704" kindref="member">av_frame_get_colorspace()</ref> and <ref refid="group__lavu__frame_1ga43e7dd7b76a6d76811e7f33557fd48e6" kindref="member">av_frame_set_colorspace()</ref>.<itemizedlist>
<listitem><para>encoding: Set by user</para></listitem><listitem><para>decoding: Set by libavcodec </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" line="513" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" bodystart="522" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_frame_1a853afbad220bbc58549b4860732a3aa5" prot="public" static="no" mutable="no">
        <type>enum <ref refid="ffmpeg_2libavutil_2frame_8h_1a3da0bf691418bc22c4bcbe6583ad589a" kindref="member">AVColorRange</ref></type>
        <definition>enum AVColorRange AVFrame::color_range</definition>
        <argsstring></argsstring>
        <name>color_range</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>MPEG vs JPEG YUV range. It must be accessed using <ref refid="group__lavu__frame_1ga829e2f3cb3edcc04d76fa9eac37392cd" kindref="member">av_frame_get_color_range()</ref> and <ref refid="group__lavu__frame_1ga862e9789b46539b3edcf0ae4cb106f95" kindref="member">av_frame_set_color_range()</ref>.<itemizedlist>
<listitem><para>encoding: Set by user</para></listitem><listitem><para>decoding: Set by libavcodec </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" line="513" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" bodystart="531" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_a_v_frame_1ae7899bbbb38ef9da9e99f36fa69939cc" prot="public" static="no" mutable="no">
        <type><ref refid="struct_a_v_buffer_ref" kindref="compound">AVBufferRef</ref> *</type>
        <definition>AVBufferRef* AVFrame::qp_table_buf</definition>
        <argsstring></argsstring>
        <name>qp_table_buf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Not to be accessed directly from outside libavutil </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" line="537" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" bodystart="537" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This structure describes decoded (raw) audio or video data.</para><para><ref refid="struct_a_v_frame" kindref="compound">AVFrame</ref> must be allocated using <ref refid="group__lavu__frame_1gac700017c5270c79c1e1befdeeb008b2f" kindref="member">av_frame_alloc()</ref>. Note that this only allocates the <ref refid="struct_a_v_frame" kindref="compound">AVFrame</ref> itself, the buffers for the data must be managed through other means (see below). <ref refid="struct_a_v_frame" kindref="compound">AVFrame</ref> must be freed with <ref refid="group__lavu__frame_1ga979d73f3228814aee56aeca0636e37cc" kindref="member">av_frame_free()</ref>.</para><para><ref refid="struct_a_v_frame" kindref="compound">AVFrame</ref> is typically allocated once and then reused multiple times to hold different data (e.g. a single <ref refid="struct_a_v_frame" kindref="compound">AVFrame</ref> to hold frames received from a decoder). In such a case, <ref refid="group__lavu__frame_1ga0a2b687f9c1c5ed0089b01fd61227108" kindref="member">av_frame_unref()</ref> will free any references held by the frame and reset it to its original clean state before it is reused again.</para><para>The data described by an <ref refid="struct_a_v_frame" kindref="compound">AVFrame</ref> is usually reference counted through the AVBuffer API. The underlying buffer references are stored in <ref refid="struct_a_v_frame_1a4a64d05cc676bfa8e18bf22d16c8a51f" kindref="member">AVFrame.buf</ref> / <ref refid="struct_a_v_frame_1a254a144d113ceedc003ec1547cc5bd54" kindref="member">AVFrame.extended_buf</ref>. An <ref refid="struct_a_v_frame" kindref="compound">AVFrame</ref> is considered to be reference counted if at least one reference is set, i.e. if <ref refid="struct_a_v_frame_1a4a64d05cc676bfa8e18bf22d16c8a51f" kindref="member">AVFrame.buf</ref>[0] != NULL. In such a case, every single data plane must be contained in one of the buffers in <ref refid="struct_a_v_frame_1a4a64d05cc676bfa8e18bf22d16c8a51f" kindref="member">AVFrame.buf</ref> or <ref refid="struct_a_v_frame_1a254a144d113ceedc003ec1547cc5bd54" kindref="member">AVFrame.extended_buf</ref>. There may be a single buffer for all the data, or one separate buffer for each plane, or anything in between.</para><para>sizeof(AVFrame) is not a part of the public ABI, so new fields may be added to the end with a minor bump. Similarly fields that are marked as to be only accessed by <ref refid="group__avoptions_1gab1d208d09e487741a28016919225bef6" kindref="member">av_opt_ptr()</ref> can be reordered. This allows 2 forks to add fields without breaking compatibility with each other. </para>    </detaileddescription>
    <collaborationgraph>
      <node id="1245">
        <label>AVHWAccel</label>
        <link refid="struct_a_v_h_w_accel"/>
        <childnode refid="1245" relation="usage">
          <edgelabel>next</edgelabel>
        </childnode>
      </node>
      <node id="1240">
        <label>AVBufferRef</label>
        <link refid="struct_a_v_buffer_ref"/>
      </node>
      <node id="1248">
        <label>AVCodec</label>
        <link refid="struct_a_v_codec"/>
        <childnode refid="1249" relation="usage">
          <edgelabel>profiles</edgelabel>
        </childnode>
        <childnode refid="1243" relation="usage">
          <edgelabel>priv_class</edgelabel>
        </childnode>
        <childnode refid="1238" relation="usage">
          <edgelabel>supported_framerates</edgelabel>
        </childnode>
        <childnode refid="1248" relation="usage">
          <edgelabel>next</edgelabel>
        </childnode>
      </node>
      <node id="1242">
        <label>AVPacket</label>
        <link refid="struct_a_v_packet"/>
        <childnode refid="1240" relation="usage">
          <edgelabel>buf</edgelabel>
        </childnode>
      </node>
      <node id="1237">
        <label>AVFrameSideData</label>
        <link refid="struct_a_v_frame_side_data"/>
      </node>
      <node id="1238">
        <label>AVRational</label>
        <link refid="struct_a_v_rational"/>
      </node>
      <node id="1243">
        <label>AVClass</label>
        <link refid="struct_a_v_class"/>
        <childnode refid="1243" relation="usage">
          <edgelabel>child_class_next</edgelabel>
        </childnode>
        <childnode refid="1244" relation="usage">
          <edgelabel>option</edgelabel>
        </childnode>
      </node>
      <node id="1246">
        <label>AVCodecDescriptor</label>
        <link refid="struct_a_v_codec_descriptor"/>
      </node>
      <node id="1236">
        <label>AVFrame</label>
        <link refid="struct_a_v_frame"/>
        <childnode refid="1237" relation="usage">
          <edgelabel>side_data</edgelabel>
        </childnode>
        <childnode refid="1238" relation="usage">
          <edgelabel>sample_aspect_ratio</edgelabel>
        </childnode>
        <childnode refid="1239" relation="usage">
          <edgelabel>pan_scan</edgelabel>
        </childnode>
        <childnode refid="1240" relation="usage">
          <edgelabel>qp_table_buf</edgelabel>
          <edgelabel>extended_buf</edgelabel>
          <edgelabel>buf</edgelabel>
        </childnode>
        <childnode refid="1241" relation="usage">
          <edgelabel>owner</edgelabel>
        </childnode>
      </node>
      <node id="1241">
        <label>AVCodecContext</label>
        <link refid="struct_a_v_codec_context"/>
        <childnode refid="1242" relation="usage">
          <edgelabel>pkt</edgelabel>
        </childnode>
        <childnode refid="1238" relation="usage">
          <edgelabel>sample_aspect_ratio</edgelabel>
          <edgelabel>pkt_timebase</edgelabel>
          <edgelabel>time_base</edgelabel>
        </childnode>
        <childnode refid="1243" relation="usage">
          <edgelabel>av_class</edgelabel>
        </childnode>
        <childnode refid="1245" relation="usage">
          <edgelabel>hwaccel</edgelabel>
        </childnode>
        <childnode refid="1236" relation="usage">
          <edgelabel>coded_frame</edgelabel>
        </childnode>
        <childnode refid="1246" relation="usage">
          <edgelabel>codec_descriptor</edgelabel>
        </childnode>
        <childnode refid="1247" relation="usage">
          <edgelabel>rc_override</edgelabel>
        </childnode>
        <childnode refid="1248" relation="usage">
          <edgelabel>codec</edgelabel>
        </childnode>
      </node>
      <node id="1239">
        <label>AVPanScan</label>
        <link refid="struct_a_v_pan_scan"/>
      </node>
      <node id="1247">
        <label>RcOverride</label>
        <link refid="struct_rc_override"/>
      </node>
      <node id="1249">
        <label>AVProfile</label>
        <link refid="struct_a_v_profile"/>
      </node>
      <node id="1244">
        <label>AVOption</label>
        <link refid="struct_a_v_option"/>
        <childnode refid="1238" relation="usage">
          <edgelabel>q</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" line="133" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/frame.h" bodystart="133" bodyend="538"/>
    <listofallmembers>
      <member refid="struct_a_v_frame_1a3576f52c558b95adc4a83bf8feb7c8e4" prot="public" virt="non-virtual"><scope>AVFrame</scope><name>base</name></member>
      <member refid="struct_a_v_frame_1a0943e85eb624c2191490862ececd319d" prot="public" virt="non-virtual"><scope>AVFrame</scope><name>best_effort_timestamp</name></member>
      <member refid="struct_a_v_frame_1a4a64d05cc676bfa8e18bf22d16c8a51f" prot="public" virt="non-virtual"><scope>AVFrame</scope><name>buf</name></member>
      <member refid="struct_a_v_frame_1a1d275de5af027f9f6b11748b2faf1102" prot="public" virt="non-virtual"><scope>AVFrame</scope><name>buffer_hints</name></member>
      <member refid="struct_a_v_frame_1a5f343e0325e3e9d9ed20e34c9e156aef" prot="public" virt="non-virtual"><scope>AVFrame</scope><name>channel_layout</name></member>
      <member refid="struct_a_v_frame_1a58c663568a99c1477c163e64858b3fef" prot="public" virt="non-virtual"><scope>AVFrame</scope><name>channels</name></member>
      <member refid="struct_a_v_frame_1a02ca9bb7f500d3d850f8736f3cb29c6c" prot="public" virt="non-virtual"><scope>AVFrame</scope><name>coded_picture_number</name></member>
      <member refid="struct_a_v_frame_1a853afbad220bbc58549b4860732a3aa5" prot="public" virt="non-virtual"><scope>AVFrame</scope><name>color_range</name></member>
      <member refid="struct_a_v_frame_1a9262c231f1f64869439b4fe587fe1710" prot="public" virt="non-virtual"><scope>AVFrame</scope><name>colorspace</name></member>
      <member refid="struct_a_v_frame_1a1d0f65014a8d1bf78cec8cbed2304992" prot="public" virt="non-virtual"><scope>AVFrame</scope><name>data</name></member>
      <member refid="struct_a_v_frame_1a8daab6ee939f3653832c45ff04fc9190" prot="public" virt="non-virtual"><scope>AVFrame</scope><name>dct_coeff</name></member>
      <member refid="struct_a_v_frame_1a3dd46fd353a405f6e9b91c11d9c5b736" prot="public" virt="non-virtual"><scope>AVFrame</scope><name>decode_error_flags</name></member>
      <member refid="struct_a_v_frame_1a12b00a552b74c79f0760b80fac18efe7" prot="public" virt="non-virtual"><scope>AVFrame</scope><name>display_picture_number</name></member>
      <member refid="struct_a_v_frame_1a3893c612b55b82258333f99a32117e60" prot="public" virt="non-virtual"><scope>AVFrame</scope><name>error</name></member>
      <member refid="struct_a_v_frame_1a254a144d113ceedc003ec1547cc5bd54" prot="public" virt="non-virtual"><scope>AVFrame</scope><name>extended_buf</name></member>
      <member refid="struct_a_v_frame_1afca04d808393822625e09b5ba91c6756" prot="public" virt="non-virtual"><scope>AVFrame</scope><name>extended_data</name></member>
      <member refid="struct_a_v_frame_1a49020cc320b8fb1f5449167b6c97515b" prot="public" virt="non-virtual"><scope>AVFrame</scope><name>flags</name></member>
      <member refid="struct_a_v_frame_1aed14fa772ce46881020fd1545c86432c" prot="public" virt="non-virtual"><scope>AVFrame</scope><name>format</name></member>
      <member refid="struct_a_v_frame_1a3f89733f429c98ba5bc64373fb0a3f13" prot="public" virt="non-virtual"><scope>AVFrame</scope><name>height</name></member>
      <member refid="struct_a_v_frame_1a65f7f4bcff7f6ffb020138d839bbb3f6" prot="public" virt="non-virtual"><scope>AVFrame</scope><name>hwaccel_picture_private</name></member>
      <member refid="struct_a_v_frame_1a7f761518da738c704676c6a5f08eeb8e" prot="public" virt="non-virtual"><scope>AVFrame</scope><name>interlaced_frame</name></member>
      <member refid="struct_a_v_frame_1a3649a81e8414a193d685a6eee06ce902" prot="public" virt="non-virtual"><scope>AVFrame</scope><name>key_frame</name></member>
      <member refid="struct_a_v_frame_1aa52bfc6605f6a3059a0c3226cc0f6567" prot="public" virt="non-virtual"><scope>AVFrame</scope><name>linesize</name></member>
      <member refid="struct_a_v_frame_1a1e86aef37e3ef464d2ddb070fa2a3bee" prot="public" virt="non-virtual"><scope>AVFrame</scope><name>mb_type</name></member>
      <member refid="struct_a_v_frame_1a67f603768399357bb742e945118066fd" prot="public" virt="non-virtual"><scope>AVFrame</scope><name>mbskip_table</name></member>
      <member refid="struct_a_v_frame_1a5bde87fd101f66d6263bb451056dba13" prot="public" virt="non-virtual"><scope>AVFrame</scope><name>metadata</name></member>
      <member refid="struct_a_v_frame_1abfc1b1ee5cf3c8a85650296e1f8a9bca" prot="public" virt="non-virtual"><scope>AVFrame</scope><name>motion_subsample_log2</name></member>
      <member refid="struct_a_v_frame_1addb4424d9ac973ca8b3b7a9a0ecd047a" prot="public" virt="non-virtual"><scope>AVFrame</scope><name>motion_val</name></member>
      <member refid="struct_a_v_frame_1aa2dc17f4f816018b0782e1386bdbeeb1" prot="public" virt="non-virtual"><scope>AVFrame</scope><name>nb_extended_buf</name></member>
      <member refid="struct_a_v_frame_1a02f45ab8191aea1660159f1e464237ea" prot="public" virt="non-virtual"><scope>AVFrame</scope><name>nb_samples</name></member>
      <member refid="struct_a_v_frame_1a9061ffbfdbdfec29f2dbfc252c5569a7" prot="public" virt="non-virtual"><scope>AVFrame</scope><name>nb_side_data</name></member>
      <member refid="struct_a_v_frame_1a385d043b41cd182b7b1bdaec56ed19e0" prot="public" virt="non-virtual"><scope>AVFrame</scope><name>opaque</name></member>
      <member refid="struct_a_v_frame_1a2fa44ff6fd61c3f9c5f84ee8ba7b1426" prot="public" virt="non-virtual"><scope>AVFrame</scope><name>owner</name></member>
      <member refid="struct_a_v_frame_1a6144be38de30e80de331f435e61f5f4c" prot="public" virt="non-virtual"><scope>AVFrame</scope><name>palette_has_changed</name></member>
      <member refid="struct_a_v_frame_1a51deb6d33804b3ca22e65e45b2782902" prot="public" virt="non-virtual"><scope>AVFrame</scope><name>pan_scan</name></member>
      <member refid="struct_a_v_frame_1af9920fc3fbfa347b8943ae461b50d18b" prot="public" virt="non-virtual"><scope>AVFrame</scope><name>pict_type</name></member>
      <member refid="struct_a_v_frame_1aa52951f35ec9e303d3dfeb4b3e44248a" prot="public" virt="non-virtual"><scope>AVFrame</scope><name>pkt_dts</name></member>
      <member refid="struct_a_v_frame_1a385c44d7cafe80cad82fe46e25cab221" prot="public" virt="non-virtual"><scope>AVFrame</scope><name>pkt_duration</name></member>
      <member refid="struct_a_v_frame_1a3bc83474709406b511c4f3498182d18a" prot="public" virt="non-virtual"><scope>AVFrame</scope><name>pkt_pos</name></member>
      <member refid="struct_a_v_frame_1a47f555732f9c18928de727a163cd7cb6" prot="public" virt="non-virtual"><scope>AVFrame</scope><name>pkt_pts</name></member>
      <member refid="struct_a_v_frame_1a3cc73a3345ec1ff8e473ab6049c607e7" prot="public" virt="non-virtual"><scope>AVFrame</scope><name>pkt_size</name></member>
      <member refid="struct_a_v_frame_1a0452833e3ab6ddd7acbf82817a7818a4" prot="public" virt="non-virtual"><scope>AVFrame</scope><name>pts</name></member>
      <member refid="struct_a_v_frame_1ae7899bbbb38ef9da9e99f36fa69939cc" prot="public" virt="non-virtual"><scope>AVFrame</scope><name>qp_table_buf</name></member>
      <member refid="struct_a_v_frame_1a6e243e21c69bd4b04f1cf895d5d5f25f" prot="public" virt="non-virtual"><scope>AVFrame</scope><name>qscale_table</name></member>
      <member refid="struct_a_v_frame_1afab492e7a59bec741f2a0194611591b0" prot="public" virt="non-virtual"><scope>AVFrame</scope><name>qscale_type</name></member>
      <member refid="struct_a_v_frame_1ac098b032e02908775f0552178e5465b8" prot="public" virt="non-virtual"><scope>AVFrame</scope><name>qstride</name></member>
      <member refid="struct_a_v_frame_1a791c071afd3e95fcae14cb781829754d" prot="public" virt="non-virtual"><scope>AVFrame</scope><name>quality</name></member>
      <member refid="struct_a_v_frame_1adb15f47de298b11de31f279a8652f73d" prot="public" virt="non-virtual"><scope>AVFrame</scope><name>ref_index</name></member>
      <member refid="struct_a_v_frame_1a20e4db6c5f6832bf290ed36dc7b42fa8" prot="public" virt="non-virtual"><scope>AVFrame</scope><name>reference</name></member>
      <member refid="struct_a_v_frame_1ab54a78c51318c8c678e545b1f3d6fddd" prot="public" virt="non-virtual"><scope>AVFrame</scope><name>reordered_opaque</name></member>
      <member refid="struct_a_v_frame_1aef11fd783ad17b6841af82efa07c859e" prot="public" virt="non-virtual"><scope>AVFrame</scope><name>repeat_pict</name></member>
      <member refid="struct_a_v_frame_1a62f9c20541a83d37db7072126ff0060d" prot="public" virt="non-virtual"><scope>AVFrame</scope><name>sample_aspect_ratio</name></member>
      <member refid="struct_a_v_frame_1ac85daa1316e1f47e78da0ca19b7c60e6" prot="public" virt="non-virtual"><scope>AVFrame</scope><name>sample_rate</name></member>
      <member refid="struct_a_v_frame_1a44d40e03fe22a0511c9157dab22143ee" prot="public" virt="non-virtual"><scope>AVFrame</scope><name>side_data</name></member>
      <member refid="struct_a_v_frame_1ae4a8ca2d431076c15418c9f3b2a8c6e6" prot="public" virt="non-virtual"><scope>AVFrame</scope><name>thread_opaque</name></member>
      <member refid="struct_a_v_frame_1a6f3ee0596312c90a2ef2ad160c991188" prot="public" virt="non-virtual"><scope>AVFrame</scope><name>top_field_first</name></member>
      <member refid="struct_a_v_frame_1af7143534e996c9c9863c1e3c8c5e59d9" prot="public" virt="non-virtual"><scope>AVFrame</scope><name>type</name></member>
      <member refid="struct_a_v_frame_1a1e71ce60cedd5f3b6811714a9f7f9e0a" prot="public" virt="non-virtual"><scope>AVFrame</scope><name>width</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
