<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="group__lavf__core" kind="group">
    <compoundname>lavf_core</compoundname>
    <title>Core functions</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__lavf__core_1gaf2d4e0fee66cef99dea2153933e6b907" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned</type>
        <definition>unsigned avformat_version</definition>
        <argsstring>(void)</argsstring>
        <name>avformat_version</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the LIBAVFORMAT_VERSION_INT constant. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1600" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavf__core_1ga5f48b0398d77d8eeb45d6c649e4e3404" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
        <definition>const char* avformat_configuration</definition>
        <argsstring>(void)</argsstring>
        <name>avformat_configuration</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the libavformat build-time configuration. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1605" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavf__core_1ga160fef784175409f945c70e8931accc8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
        <definition>const char* avformat_license</definition>
        <argsstring>(void)</argsstring>
        <name>avformat_license</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the libavformat license. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1610" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavf__core_1ga917265caec45ef5a0646356ed1a507e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void av_register_all</definition>
        <argsstring>(void)</argsstring>
        <name>av_register_all</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialize libavformat and register all the muxers, demuxers and protocols. If you do not call this function, then you can select exactly which formats you want to support.</para><para><simplesect kind="see"><para><ref refid="group__lavf__core_1ga896f319308627b5b66fd41a4b1d53ae6" kindref="member">av_register_input_format()</ref> </para></simplesect>
<simplesect kind="see"><para><ref refid="group__lavf__core_1gabf0629358bc40c7874932ef6f4dda6b8" kindref="member">av_register_output_format()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1620" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavf__core_1ga896f319308627b5b66fd41a4b1d53ae6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void av_register_input_format</definition>
        <argsstring>(AVInputFormat *format)</argsstring>
        <name>av_register_input_format</name>
        <param>
          <type><ref refid="struct_a_v_input_format" kindref="compound">AVInputFormat</ref> *</type>
          <declname>format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1622" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavf__core_1gabf0629358bc40c7874932ef6f4dda6b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void av_register_output_format</definition>
        <argsstring>(AVOutputFormat *format)</argsstring>
        <name>av_register_output_format</name>
        <param>
          <type><ref refid="struct_a_v_output_format" kindref="compound">AVOutputFormat</ref> *</type>
          <declname>format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1623" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavf__core_1ga84542023693d61e8564c5d457979c932" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int avformat_network_init</definition>
        <argsstring>(void)</argsstring>
        <name>avformat_network_init</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Do global initialization of network components. This is optional, but recommended, since it avoids the overhead of implicitly doing the setup for each session.</para><para>Calling this function will become mandatory if using network protocols at some major version bump. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1633" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavf__core_1ga245f2875f80ce67ec3d1e0f54dacf2c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int avformat_network_deinit</definition>
        <argsstring>(void)</argsstring>
        <name>avformat_network_deinit</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Undo the initialization done by avformat_network_init. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1638" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavf__core_1ga5a9e27c9e2b04abcf6ed2e0f9b68da4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_a_v_input_format" kindref="compound">AVInputFormat</ref> *</type>
        <definition>AVInputFormat* av_iformat_next</definition>
        <argsstring>(AVInputFormat *f)</argsstring>
        <name>av_iformat_next</name>
        <param>
          <type><ref refid="struct_a_v_input_format" kindref="compound">AVInputFormat</ref> *</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>If f is NULL, returns the first registered input format, if f is non-NULL, returns the next registered input format after f or NULL if f is the last one. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1645" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavf__core_1ga9c169031f490901218b1e6bcd9993967" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_a_v_output_format" kindref="compound">AVOutputFormat</ref> *</type>
        <definition>AVOutputFormat* av_oformat_next</definition>
        <argsstring>(AVOutputFormat *f)</argsstring>
        <name>av_oformat_next</name>
        <param>
          <type><ref refid="struct_a_v_output_format" kindref="compound">AVOutputFormat</ref> *</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>If f is NULL, returns the first registered output format, if f is non-NULL, returns the next registered output format after f or NULL if f is the last one. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1652" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavf__core_1gac7a91abf2f59648d995894711f070f62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_a_v_format_context" kindref="compound">AVFormatContext</ref> *</type>
        <definition>AVFormatContext* avformat_alloc_context</definition>
        <argsstring>(void)</argsstring>
        <name>avformat_alloc_context</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allocate an <ref refid="struct_a_v_format_context" kindref="compound">AVFormatContext</ref>. <ref refid="group__lavf__core_1gac2990b13b68e831a408fce8e1d0d6445" kindref="member">avformat_free_context()</ref> can be used to free the context and everything allocated by the framework within it. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1659" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavf__core_1gac2990b13b68e831a408fce8e1d0d6445" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void avformat_free_context</definition>
        <argsstring>(AVFormatContext *s)</argsstring>
        <name>avformat_free_context</name>
        <param>
          <type><ref refid="struct_a_v_format_context" kindref="compound">AVFormatContext</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Free an <ref refid="struct_a_v_format_context" kindref="compound">AVFormatContext</ref> and all its streams. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>context to free </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1665" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavf__core_1ga6030789ce395ef543306bbe933619749" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_a_v_class" kindref="compound">AVClass</ref> *</type>
        <definition>const AVClass* avformat_get_class</definition>
        <argsstring>(void)</argsstring>
        <name>avformat_get_class</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the <ref refid="struct_a_v_class" kindref="compound">AVClass</ref> for <ref refid="struct_a_v_format_context" kindref="compound">AVFormatContext</ref>. It can be used in combination with AV_OPT_SEARCH_FAKE_OBJ for examining options.</para><para><simplesect kind="see"><para><ref refid="group__avoptions_1gae31ae7fb20113b00108d0ecf53f25664" kindref="member">av_opt_find()</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1673" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavf__core_1gadcb0fd3e507d9b58fe78f61f8ad39827" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_a_v_stream" kindref="compound">AVStream</ref> *</type>
        <definition>AVStream* avformat_new_stream</definition>
        <argsstring>(AVFormatContext *s, const AVCodec *c)</argsstring>
        <name>avformat_new_stream</name>
        <param>
          <type><ref refid="struct_a_v_format_context" kindref="compound">AVFormatContext</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_a_v_codec" kindref="compound">AVCodec</ref> *</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add a new stream to a media file.</para><para>When demuxing, it is called by the demuxer in read_header(). If the flag AVFMTCTX_NOHEADER is set in s.ctx_flags, then it may also be called in read_packet().</para><para>When muxing, should be called by the user before <ref refid="group__lavf__encoding_1ga78d4e734fecb1d2385536e6dd5b7b9f5" kindref="member">avformat_write_header()</ref>.</para><para>User is required to call <ref refid="group__lavc__core_1gaf4daa92361efb3523ef5afeb0b54077f" kindref="member">avcodec_close()</ref> and <ref refid="group__lavf__core_1gac2990b13b68e831a408fce8e1d0d6445" kindref="member">avformat_free_context()</ref> to clean up the allocation by <ref refid="group__lavf__core_1gadcb0fd3e507d9b58fe78f61f8ad39827" kindref="member">avformat_new_stream()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>media file handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>If non-NULL, the <ref refid="struct_a_v_codec_context" kindref="compound">AVCodecContext</ref> corresponding to the new stream will be initialized to use this codec. This is needed for e.g. codec-specific defaults to be set, so codec should be provided if it is known.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>newly created stream or NULL on error. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1694" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavf__core_1gab31f7c7c99dcadead38e8e83e0fdb828" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_a_v_program" kindref="compound">AVProgram</ref> *</type>
        <definition>AVProgram* av_new_program</definition>
        <argsstring>(AVFormatContext *s, int id)</argsstring>
        <name>av_new_program</name>
        <param>
          <type><ref refid="struct_a_v_format_context" kindref="compound">AVFormatContext</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavformat/avformat.h" line="1696" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Functions for querying libavformat capabilities, allocating core structures, etc. </para>    </detaileddescription>
  </compounddef>
</doxygen>
