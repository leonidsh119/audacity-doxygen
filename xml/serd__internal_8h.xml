<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="serd__internal_8h" kind="file" language="C++">
    <compoundname>serd_internal.h</compoundname>
    <includes refid="assert_8h" local="no">assert.h</includes>
    <includes local="no">errno.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes refid="serd_8h" local="yes">serd/serd.h</includes>
    <includes local="yes">serd_config.h</includes>
    <includedby refid="env_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/env.c</includedby>
    <includedby refid="reader_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c</includedby>
    <includedby refid="serdi_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serdi.c</includedby>
    <includedby refid="serdnode_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serdnode.c</includedby>
    <includedby refid="string_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/string.c</includedby>
    <includedby refid="uri_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/uri.c</includedby>
    <includedby refid="writer_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c</includedby>
    <incdepgraph>
      <node id="27122">
        <label>stdbool.h</label>
      </node>
      <node id="27119">
        <label>stdarg.h</label>
      </node>
      <node id="27121">
        <label>stdint.h</label>
      </node>
      <node id="27116">
        <label>stdlib.h</label>
      </node>
      <node id="27114">
        <label>errno.h</label>
      </node>
      <node id="27118">
        <label>serd/serd.h</label>
        <link refid="serd_8h"/>
        <childnode refid="27119" relation="include">
        </childnode>
        <childnode refid="27120" relation="include">
        </childnode>
        <childnode refid="27121" relation="include">
        </childnode>
        <childnode refid="27115" relation="include">
        </childnode>
        <childnode refid="27122" relation="include">
        </childnode>
      </node>
      <node id="27120">
        <label>stddef.h</label>
      </node>
      <node id="27112">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serd_internal.h</label>
        <link refid="serd_internal.h"/>
        <childnode refid="27113" relation="include">
        </childnode>
        <childnode refid="27114" relation="include">
        </childnode>
        <childnode refid="27115" relation="include">
        </childnode>
        <childnode refid="27116" relation="include">
        </childnode>
        <childnode refid="27117" relation="include">
        </childnode>
        <childnode refid="27118" relation="include">
        </childnode>
        <childnode refid="27123" relation="include">
        </childnode>
      </node>
      <node id="27113">
        <label>assert.h</label>
        <link refid="assert_8h"/>
      </node>
      <node id="27117">
        <label>string.h</label>
      </node>
      <node id="27123">
        <label>serd_config.h</label>
      </node>
      <node id="27115">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="27131">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c</label>
        <link refid="writer_8c"/>
      </node>
      <node id="27128">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serdnode.c</label>
        <link refid="serdnode_8c"/>
      </node>
      <node id="27126">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/reader.c</label>
        <link refid="reader_8c"/>
      </node>
      <node id="27124">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serd_internal.h</label>
        <link refid="serd_internal.h"/>
        <childnode refid="27125" relation="include">
        </childnode>
        <childnode refid="27126" relation="include">
        </childnode>
        <childnode refid="27127" relation="include">
        </childnode>
        <childnode refid="27128" relation="include">
        </childnode>
        <childnode refid="27129" relation="include">
        </childnode>
        <childnode refid="27130" relation="include">
        </childnode>
        <childnode refid="27131" relation="include">
        </childnode>
      </node>
      <node id="27127">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serdi.c</label>
        <link refid="serdi_8c"/>
      </node>
      <node id="27129">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/string.c</label>
        <link refid="string_8c"/>
      </node>
      <node id="27125">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/env.c</label>
        <link refid="env_8c"/>
      </node>
      <node id="27130">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/uri.c</label>
        <link refid="uri_8c"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_serd_stack" prot="public">SerdStack</innerclass>
    <innerclass refid="struct_serd_bulk_sink_impl" prot="public">SerdBulkSinkImpl</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="serd__internal_8h_1a3024ccd4a9af5109d24e6c57565d74a1" prot="public" static="no">
        <name>_POSIX_C_SOURCE</name>
        <initializer>201112L /* for posix_memalign and posix_fadvise */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serd_internal.h" line="20" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serd_internal.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="serd__internal_8h_1a6f0323326188077fd7b6f1661a0e037e" prot="public" static="no">
        <name>SERD_PAGE_SIZE</name>
        <initializer>4096</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serd_internal.h" line="35" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serd_internal.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="serd__internal_8h_1a3acffbd305ee72dcd4593c0d8af64a4f" prot="public" static="no">
        <name>MIN</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>(((<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>) &lt; (<ref refid="convtest_8m_1a21ad0bd836b90d08f4cf640b4c298e7c" kindref="member">b</ref>)) ? (<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>) : (<ref refid="convtest_8m_1a21ad0bd836b90d08f4cf640b4c298e7c" kindref="member">b</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serd_internal.h" line="38" column="13" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serd_internal.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="serd__internal_8h_1ad3d49b2236c4692e22fe85731384009f" prot="public" static="no">
        <name>SERD_STACK_BOTTOM</name>
        <initializer>sizeof(<ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref>*)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>An offset to start the stack at. Note 0 is reserved for NULL. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serd_internal.h" line="87" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serd_internal.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="serd__internal_8h_1af4639c5fc5dd66dd251adc714d7d502d" prot="public" static="no">
        <type>struct <ref refid="struct_serd_bulk_sink_impl" kindref="compound">SerdBulkSinkImpl</ref></type>
        <definition>typedef struct SerdBulkSinkImpl  SerdBulkSink</definition>
        <argsstring></argsstring>
        <name>SerdBulkSink</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serd_internal.h" line="142" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="serd__internal_8h_1a714f2c05b497df571e2dca8d124821dd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>static double fmax</definition>
        <argsstring>(double a, double b)</argsstring>
        <name>fmax</name>
        <param>
          <type>double</type>
          <declname>a</declname>
        </param>
        <param>
          <type>double</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serd_internal.h" line="43" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serd_internal.h" bodystart="43" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="serd__internal_8h_1a7cca15597dd825ef1df0099a3fe00b04" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>FILE *</type>
        <definition>static FILE* serd_fopen</definition>
        <argsstring>(const char *path, const char *mode)</argsstring>
        <name>serd_fopen</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serd_internal.h" line="52" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serd_internal.h" bodystart="52" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="serd__internal_8h_1a76d3bde6f47f384d044a9d11982ae903" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
        <definition>static void* serd_bufalloc</definition>
        <argsstring>(size_t size)</argsstring>
        <name>serd_bufalloc</name>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serd_internal.h" line="66" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serd_internal.h" bodystart="66" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="serd__internal_8h_1af8fc82b3a52affef79a36e6da779e40d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_serd_stack" kindref="compound">SerdStack</ref></type>
        <definition>static SerdStack serd_stack_new</definition>
        <argsstring>(size_t size)</argsstring>
        <name>serd_stack_new</name>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serd_internal.h" line="90" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serd_internal.h" bodystart="90" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="serd__internal_8h_1a8721265f254c14b03639d2f7af1d0871" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool serd_stack_is_empty</definition>
        <argsstring>(SerdStack *stack)</argsstring>
        <name>serd_stack_is_empty</name>
        <param>
          <type><ref refid="struct_serd_stack" kindref="compound">SerdStack</ref> *</type>
          <declname>stack</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serd_internal.h" line="100" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serd_internal.h" bodystart="100" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="serd__internal_8h_1a3b3f3d811a767749d49829f2e0275cc8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void serd_stack_free</definition>
        <argsstring>(SerdStack *stack)</argsstring>
        <name>serd_stack_free</name>
        <param>
          <type><ref refid="struct_serd_stack" kindref="compound">SerdStack</ref> *</type>
          <declname>stack</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serd_internal.h" line="106" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serd_internal.h" bodystart="106" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="serd__internal_8h_1ab45275cb6bbfb476adcd34eeff659faf" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> *</type>
        <definition>static uint8_t* serd_stack_push</definition>
        <argsstring>(SerdStack *stack, size_t n_bytes)</argsstring>
        <name>serd_stack_push</name>
        <param>
          <type><ref refid="struct_serd_stack" kindref="compound">SerdStack</ref> *</type>
          <declname>stack</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n_bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serd_internal.h" line="115" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serd_internal.h" bodystart="115" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="serd__internal_8h_1a11eaf046a448851b4917ef44cf8c75ea" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void serd_stack_pop</definition>
        <argsstring>(SerdStack *stack, size_t n_bytes)</argsstring>
        <name>serd_stack_pop</name>
        <param>
          <type><ref refid="struct_serd_stack" kindref="compound">SerdStack</ref> *</type>
          <declname>stack</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n_bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serd_internal.h" line="128" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serd_internal.h" bodystart="128" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="serd__internal_8h_1aced982dc56ccc32cbaef1014c1ce630f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="serd__internal_8h_1af4639c5fc5dd66dd251adc714d7d502d" kindref="member">SerdBulkSink</ref></type>
        <definition>static SerdBulkSink serd_bulk_sink_new</definition>
        <argsstring>(SerdSink sink, void *stream, size_t block_size)</argsstring>
        <name>serd_bulk_sink_new</name>
        <param>
          <type><ref refid="group__serd_1ga84861f1df2f4d3323cb0113dae4ced12" kindref="member">SerdSink</ref></type>
          <declname>sink</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>block_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serd_internal.h" line="145" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serd_internal.h" bodystart="145" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="serd__internal_8h_1a4382187c732a73fe6592f133e4370e9b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void serd_bulk_sink_flush</definition>
        <argsstring>(SerdBulkSink *bsink)</argsstring>
        <name>serd_bulk_sink_flush</name>
        <param>
          <type><ref refid="serd__internal_8h_1af4639c5fc5dd66dd251adc714d7d502d" kindref="member">SerdBulkSink</ref> *</type>
          <declname>bsink</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serd_internal.h" line="157" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serd_internal.h" bodystart="157" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="serd__internal_8h_1aaf98fad30fabadc9b1c1a554339ddc3d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void serd_bulk_sink_free</definition>
        <argsstring>(SerdBulkSink *bsink)</argsstring>
        <name>serd_bulk_sink_free</name>
        <param>
          <type><ref refid="serd__internal_8h_1af4639c5fc5dd66dd251adc714d7d502d" kindref="member">SerdBulkSink</ref> *</type>
          <declname>bsink</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serd_internal.h" line="166" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serd_internal.h" bodystart="166" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="serd__internal_8h_1a1035261dd231e8e3427b4ab9c0a9db1e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t serd_bulk_sink_write</definition>
        <argsstring>(const void *buf, size_t len, SerdBulkSink *bsink)</argsstring>
        <name>serd_bulk_sink_write</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type><ref refid="serd__internal_8h_1af4639c5fc5dd66dd251adc714d7d502d" kindref="member">SerdBulkSink</ref> *</type>
          <declname>bsink</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serd_internal.h" line="174" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serd_internal.h" bodystart="174" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="serd__internal_8h_1a6f7e51b72d52d604d0c0dff43aa5df7a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool in_range</definition>
        <argsstring>(const uint8_t c, const uint8_t min, const uint8_t max)</argsstring>
        <name>in_range</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref></type>
          <declname>c</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref></type>
          <declname>min</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref></type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return true if <computeroutput>c</computeroutput> lies within [<computeroutput>min</computeroutput>...<computeroutput>max</computeroutput>] (inclusive) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serd_internal.h" line="200" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serd_internal.h" bodystart="200" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="serd__internal_8h_1a7fa669a3daf79c6e1a6e2c238c67dd1c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool is_alpha</definition>
        <argsstring>(const uint8_t c)</argsstring>
        <name>is_alpha</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>RFC2234: ALPHA := x41-5A / x61-7A ; A-Z / a-z </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serd_internal.h" line="207" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serd_internal.h" bodystart="207" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="serd__internal_8h_1ae790e294e7fb3f824f892c7328f244cd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool is_digit</definition>
        <argsstring>(const uint8_t c)</argsstring>
        <name>is_digit</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>RFC2234: DIGIT ::= x30-39 ; 0-9 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serd_internal.h" line="214" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serd_internal.h" bodystart="214" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="serd__internal_8h_1a1537b3b069228aeb9cba2f98085cc90c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool is_space</definition>
        <argsstring>(const char c)</argsstring>
        <name>is_space</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serd_internal.h" line="220" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serd_internal.h" bodystart="220" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="serd__internal_8h_1af9e9468b66a2df3d8d3d5e594dace5e2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool is_base64</definition>
        <argsstring>(const uint8_t c)</argsstring>
        <name>is_base64</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serd_internal.h" line="231" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serd_internal.h" bodystart="231" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="serd__internal_8h_1a28b7d539ed7533a53ec1f75306771731" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool is_windows_path</definition>
        <argsstring>(const uint8_t *path)</argsstring>
        <name>is_windows_path</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> *</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serd_internal.h" line="237" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serd_internal.h" bodystart="237" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="serd__internal_8h_1adbf34678ca28ada0deb46afcca289fd3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool chunk_equals</definition>
        <argsstring>(const SerdChunk *a, const SerdChunk *b)</argsstring>
        <name>chunk_equals</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_chunk" kindref="compound">SerdChunk</ref> *</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_chunk" kindref="compound">SerdChunk</ref> *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serd_internal.h" line="246" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serd_internal.h" bodystart="246" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="serd__internal_8h_1a7460658d4810b405f37689d49ebeffb7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t uri_path_len</definition>
        <argsstring>(const SerdURI *uri)</argsstring>
        <name>uri_path_len</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_u_r_i" kindref="compound">SerdURI</ref> *</type>
          <declname>uri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serd_internal.h" line="253" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serd_internal.h" bodystart="253" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="serd__internal_8h_1a6ee3ac64cfed523ec80062ca7c83fee2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref></type>
        <definition>static uint8_t uri_path_at</definition>
        <argsstring>(const SerdURI *uri, size_t i)</argsstring>
        <name>uri_path_at</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_u_r_i" kindref="compound">SerdURI</ref> *</type>
          <declname>uri</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serd_internal.h" line="259" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serd_internal.h" bodystart="259" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="serd__internal_8h_1afdf6ddb2b576b0186cf1c63669afc67b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool uri_is_under</definition>
        <argsstring>(const SerdURI *uri, const SerdURI *root)</argsstring>
        <name>uri_is_under</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_u_r_i" kindref="compound">SerdURI</ref> *</type>
          <declname>uri</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_u_r_i" kindref="compound">SerdURI</ref> *</type>
          <declname>root</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return true iff <computeroutput>uri</computeroutput> is within the base of <computeroutput>root</computeroutput> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serd_internal.h" line="270" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serd_internal.h" bodystart="270" bodyend="291"/>
      </memberdef>
      <memberdef kind="function" id="serd__internal_8h_1a3b90cb9803e228f5dd1e51b0321a6406" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void serd_error</definition>
        <argsstring>(SerdErrorSink error_sink, void *handle, const SerdError *e)</argsstring>
        <name>serd_error</name>
        <param>
          <type><ref refid="group__serd_1ga925d2fda236697a3e643b307ffe242e5" kindref="member">SerdErrorSink</ref></type>
          <declname>error_sink</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_error" kindref="compound">SerdError</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serd_internal.h" line="296" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serd_internal.h" bodystart="296" bodyend="304"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/>Copyright<sp/>2011-2014<sp/>David<sp/>Robillard<sp/>&lt;http://drobilla.net&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/>Permission<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>and/or<sp/>distribute<sp/>this<sp/>software<sp/>for<sp/>any</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>purpose<sp/>with<sp/>or<sp/>without<sp/>fee<sp/>is<sp/>hereby<sp/>granted,<sp/>provided<sp/>that<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>appear<sp/>in<sp/>all<sp/>copies.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"></highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>THE<sp/>AUTHOR<sp/>DISCLAIMS<sp/>ALL<sp/>WARRANTIES</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/>WITH<sp/>REGARD<sp/>TO<sp/>THIS<sp/>SOFTWARE<sp/>INCLUDING<sp/>ALL<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/>ANY<sp/>SPECIAL,<sp/>DIRECT,<sp/>INDIRECT,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>OR<sp/>ANY<sp/>DAMAGES</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/>WHATSOEVER<sp/>RESULTING<sp/>FROM<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA<sp/>OR<sp/>PROFITS,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>NEGLIGENCE<sp/>OR<sp/>OTHER<sp/>TORTIOUS<sp/>ACTION,<sp/>ARISING<sp/>OUT<sp/>OF</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>USE<sp/>OR<sp/>PERFORMANCE<sp/>OF<sp/>THIS<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="15"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SERD_INTERNAL_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SERD_INTERNAL_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="serd__internal_8h_1a3024ccd4a9af5109d24e6c57565d74a1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_POSIX_C_SOURCE<sp/>201112L<sp/></highlight><highlight class="comment">/*<sp/>for<sp/>posix_memalign<sp/>and<sp/>posix_fadvise<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="assert_8h" kindref="compound">assert.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="serd_8h" kindref="compound">serd/serd.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;serd_config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(HAVE_POSIX_FADVISE)<sp/>&amp;&amp;<sp/>defined(HAVE_FILENO)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>include<sp/>&lt;fcntl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="serd__internal_8h_1a6f0323326188077fd7b6f1661a0e037e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SERD_PAGE_SIZE<sp/>4096</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>MIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="serd__internal_8h_1a3acffbd305ee72dcd4593c0d8af64a4f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>MIN(a,<sp/>b)<sp/>(((a)<sp/>&lt;<sp/>(b))<sp/>?<sp/>(a)<sp/>:<sp/>(b))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>HAVE_FMAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal">fmax(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>)</highlight></codeline>
<codeline lineno="44"><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(a<sp/>&lt;<sp/>b)<sp/>?<sp/>b<sp/>:<sp/><ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>File<sp/>and<sp/>Buffer<sp/>Utilities<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>FILE*</highlight></codeline>
<codeline lineno="52"><highlight class="normal">serd_fopen(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="namespacelv2docgen_1ae75d75173fc2ea012acad7d886aa2f9d" kindref="member">path</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>mode)</highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE*<sp/>fd<sp/>=<sp/>fopen((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<ref refid="namespacelv2docgen_1ae75d75173fc2ea012acad7d886aa2f9d" kindref="member">path</ref>,<sp/>mode);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fd)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>opening<sp/>file<sp/>%s<sp/>(%s)\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="namespacelv2docgen_1ae75d75173fc2ea012acad7d886aa2f9d" kindref="member">path</ref>,<sp/>strerror(errno));</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(HAVE_POSIX_FADVISE)<sp/>&amp;&amp;<sp/>defined(HAVE_FILENO)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>posix_fadvise(fileno(fd),<sp/>0,<sp/>0,<sp/>POSIX_FADV_SEQUENTIAL);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fd;</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight></codeline>
<codeline lineno="66"><highlight class="normal">serd_bufalloc(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="67"><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_POSIX_MEMALIGN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>ptr;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>posix_memalign(&amp;ptr,<sp/><ref refid="serd__internal_8h_1a6f0323326188077fd7b6f1661a0e037e" kindref="member">SERD_PAGE_SIZE</ref>,<sp/>size);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret<sp/>?<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>:<sp/>ptr;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>malloc(size);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Stack<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="struct_serd_stack" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="81" refid="struct_serd_stack_1afdbaaf0b33676c624273fea6c6715b71" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*<sp/><ref refid="struct_serd_stack_1afdbaaf0b33676c624273fea6c6715b71" kindref="member">buf</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="82" refid="struct_serd_stack_1ae60a132820792258504633e72535bf94" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_serd_stack_1ae60a132820792258504633e72535bf94" kindref="member">buf_size</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="83" refid="struct_serd_stack_1a2fda2753d2ada98036894458c573bf38" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_serd_stack_1a2fda2753d2ada98036894458c573bf38" kindref="member">size</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="84"><highlight class="normal">}<sp/><ref refid="struct_serd_stack" kindref="compound">SerdStack</ref>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="serd__internal_8h_1ad3d49b2236c4692e22fe85731384009f" refkind="member"><highlight class="preprocessor">#define<sp/>SERD_STACK_BOTTOM<sp/>sizeof(void*)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="struct_serd_stack" kindref="compound">SerdStack</ref></highlight></codeline>
<codeline lineno="90"><highlight class="normal">serd_stack_new(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="91"><highlight class="normal">{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_serd_stack" kindref="compound">SerdStack</ref><sp/>stack;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>stack.<ref refid="struct_serd_stack_1afdbaaf0b33676c624273fea6c6715b71" kindref="member">buf</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*)malloc(size);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>stack.<ref refid="struct_serd_stack_1ae60a132820792258504633e72535bf94" kindref="member">buf_size</ref><sp/><sp/>=<sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>stack.<ref refid="struct_serd_stack_1a2fda2753d2ada98036894458c573bf38" kindref="member">size</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="serd__internal_8h_1ad3d49b2236c4692e22fe85731384009f" kindref="member">SERD_STACK_BOTTOM</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stack;</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal">serd_stack_is_empty(<ref refid="struct_serd_stack" kindref="compound">SerdStack</ref>*<sp/>stack)</highlight></codeline>
<codeline lineno="101"><highlight class="normal">{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stack-&gt;<ref refid="struct_serd_stack_1a2fda2753d2ada98036894458c573bf38" kindref="member">size</ref><sp/>&lt;=<sp/><ref refid="serd__internal_8h_1ad3d49b2236c4692e22fe85731384009f" kindref="member">SERD_STACK_BOTTOM</ref>;</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal">serd_stack_free(<ref refid="struct_serd_stack" kindref="compound">SerdStack</ref>*<sp/>stack)</highlight></codeline>
<codeline lineno="107"><highlight class="normal">{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>free(stack-&gt;<ref refid="struct_serd_stack_1afdbaaf0b33676c624273fea6c6715b71" kindref="member">buf</ref>);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>stack-&gt;<ref refid="struct_serd_stack_1afdbaaf0b33676c624273fea6c6715b71" kindref="member">buf</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>stack-&gt;<ref refid="struct_serd_stack_1ae60a132820792258504633e72535bf94" kindref="member">buf_size</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>stack-&gt;<ref refid="struct_serd_stack_1a2fda2753d2ada98036894458c573bf38" kindref="member">size</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*</highlight></codeline>
<codeline lineno="115"><highlight class="normal">serd_stack_push(<ref refid="struct_serd_stack" kindref="compound">SerdStack</ref>*<sp/>stack,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n_bytes)</highlight></codeline>
<codeline lineno="116"><highlight class="normal">{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>new_size<sp/>=<sp/>stack-&gt;<ref refid="struct_serd_stack_1a2fda2753d2ada98036894458c573bf38" kindref="member">size</ref><sp/>+<sp/>n_bytes;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stack-&gt;<ref refid="struct_serd_stack_1ae60a132820792258504633e72535bf94" kindref="member">buf_size</ref><sp/>&lt;<sp/>new_size)<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stack-&gt;<ref refid="struct_serd_stack_1ae60a132820792258504633e72535bf94" kindref="member">buf_size</ref><sp/>*=<sp/>2;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stack-&gt;<ref refid="struct_serd_stack_1afdbaaf0b33676c624273fea6c6715b71" kindref="member">buf</ref><sp/>=<sp/>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*)realloc(stack-&gt;<ref refid="struct_serd_stack_1afdbaaf0b33676c624273fea6c6715b71" kindref="member">buf</ref>,<sp/>stack-&gt;<ref refid="struct_serd_stack_1ae60a132820792258504633e72535bf94" kindref="member">buf_size</ref>);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>(stack-&gt;<ref refid="struct_serd_stack_1afdbaaf0b33676c624273fea6c6715b71" kindref="member">buf</ref><sp/>+<sp/>stack-&gt;<ref refid="struct_serd_stack_1a2fda2753d2ada98036894458c573bf38" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>stack-&gt;<ref refid="struct_serd_stack_1a2fda2753d2ada98036894458c573bf38" kindref="member">size</ref><sp/>=<sp/>new_size;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal">serd_stack_pop(<ref refid="struct_serd_stack" kindref="compound">SerdStack</ref>*<sp/>stack,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n_bytes)</highlight></codeline>
<codeline lineno="129"><highlight class="normal">{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(stack-&gt;<ref refid="struct_serd_stack_1a2fda2753d2ada98036894458c573bf38" kindref="member">size</ref><sp/>&gt;=<sp/>n_bytes);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>stack-&gt;<ref refid="struct_serd_stack_1a2fda2753d2ada98036894458c573bf38" kindref="member">size</ref><sp/>-=<sp/>n_bytes;</highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Bulk<sp/>Sink<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="struct_serd_bulk_sink_impl" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_serd_bulk_sink_impl" kindref="compound">SerdBulkSinkImpl</ref><sp/>{</highlight></codeline>
<codeline lineno="137" refid="struct_serd_bulk_sink_impl_1a264743ac6266d7217d6a23c7452ea035" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__serd_1ga84861f1df2f4d3323cb0113dae4ced12" kindref="member">SerdSink</ref><sp/><ref refid="struct_serd_bulk_sink_impl_1a264743ac6266d7217d6a23c7452ea035" kindref="member">sink</ref>;</highlight></codeline>
<codeline lineno="138" refid="struct_serd_bulk_sink_impl_1abeac79c8db3faeb5bf9cc8f2fd0dfad7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><ref refid="struct_serd_bulk_sink_impl_1abeac79c8db3faeb5bf9cc8f2fd0dfad7" kindref="member">stream</ref>;</highlight></codeline>
<codeline lineno="139" refid="struct_serd_bulk_sink_impl_1a9d8d208c8cd0bb28a0f58854a4d7e859" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*<sp/><ref refid="struct_serd_bulk_sink_impl_1a9d8d208c8cd0bb28a0f58854a4d7e859" kindref="member">buf</ref>;</highlight></codeline>
<codeline lineno="140" refid="struct_serd_bulk_sink_impl_1acc59a940f7c2243de2c951d63d19bfc5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_serd_bulk_sink_impl_1acc59a940f7c2243de2c951d63d19bfc5" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="141" refid="struct_serd_bulk_sink_impl_1ae85e0a6382790fe01314a99426accac8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_serd_bulk_sink_impl_1ae85e0a6382790fe01314a99426accac8" kindref="member">block_size</ref>;</highlight></codeline>
<codeline lineno="142"><highlight class="normal">}<sp/><ref refid="serd__internal_8h_1af4639c5fc5dd66dd251adc714d7d502d" kindref="member">SerdBulkSink</ref>;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="struct_serd_bulk_sink_impl" kindref="compound">SerdBulkSink</ref></highlight></codeline>
<codeline lineno="145"><highlight class="normal">serd_bulk_sink_new(<ref refid="group__serd_1ga84861f1df2f4d3323cb0113dae4ced12" kindref="member">SerdSink</ref><sp/><ref refid="struct_serd_bulk_sink_impl_1a264743ac6266d7217d6a23c7452ea035" kindref="member">sink</ref>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="struct_serd_bulk_sink_impl_1abeac79c8db3faeb5bf9cc8f2fd0dfad7" kindref="member">stream</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="struct_serd_bulk_sink_impl_1ae85e0a6382790fe01314a99426accac8" kindref="member">block_size</ref>)</highlight></codeline>
<codeline lineno="146"><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_serd_bulk_sink_impl" kindref="compound">SerdBulkSink</ref><sp/>bsink;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>bsink.<ref refid="struct_serd_bulk_sink_impl_1a264743ac6266d7217d6a23c7452ea035" kindref="member">sink</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_serd_bulk_sink_impl_1a264743ac6266d7217d6a23c7452ea035" kindref="member">sink</ref>;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>bsink.<ref refid="struct_serd_bulk_sink_impl_1abeac79c8db3faeb5bf9cc8f2fd0dfad7" kindref="member">stream</ref><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_serd_bulk_sink_impl_1abeac79c8db3faeb5bf9cc8f2fd0dfad7" kindref="member">stream</ref>;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>bsink.<ref refid="struct_serd_bulk_sink_impl_1acc59a940f7c2243de2c951d63d19bfc5" kindref="member">size</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>bsink.<ref refid="struct_serd_bulk_sink_impl_1ae85e0a6382790fe01314a99426accac8" kindref="member">block_size</ref><sp/>=<sp/><ref refid="struct_serd_bulk_sink_impl_1ae85e0a6382790fe01314a99426accac8" kindref="member">block_size</ref>;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>bsink.<ref refid="struct_serd_bulk_sink_impl_1a9d8d208c8cd0bb28a0f58854a4d7e859" kindref="member">buf</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*)serd_bufalloc(block_size);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bsink;</highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal">serd_bulk_sink_flush(<ref refid="struct_serd_bulk_sink_impl" kindref="compound">SerdBulkSink</ref>*<sp/>bsink)</highlight></codeline>
<codeline lineno="158"><highlight class="normal">{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bsink-&gt;<ref refid="struct_serd_bulk_sink_impl_1acc59a940f7c2243de2c951d63d19bfc5" kindref="member">size</ref><sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bsink-&gt;<ref refid="struct_serd_bulk_sink_impl_1a264743ac6266d7217d6a23c7452ea035" kindref="member">sink</ref>(bsink-&gt;<ref refid="struct_serd_bulk_sink_impl_1a9d8d208c8cd0bb28a0f58854a4d7e859" kindref="member">buf</ref>,<sp/>bsink-&gt;<ref refid="struct_serd_bulk_sink_impl_1acc59a940f7c2243de2c951d63d19bfc5" kindref="member">size</ref>,<sp/>bsink-&gt;<ref refid="struct_serd_bulk_sink_impl_1abeac79c8db3faeb5bf9cc8f2fd0dfad7" kindref="member">stream</ref>);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>bsink-&gt;<ref refid="struct_serd_bulk_sink_impl_1acc59a940f7c2243de2c951d63d19bfc5" kindref="member">size</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="163"><highlight class="normal">}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal">serd_bulk_sink_free(<ref refid="struct_serd_bulk_sink_impl" kindref="compound">SerdBulkSink</ref>*<sp/>bsink)</highlight></codeline>
<codeline lineno="167"><highlight class="normal">{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>serd_bulk_sink_flush(bsink);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>free(bsink-&gt;<ref refid="struct_serd_bulk_sink_impl_1a9d8d208c8cd0bb28a0f58854a4d7e859" kindref="member">buf</ref>);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>bsink-&gt;<ref refid="struct_serd_bulk_sink_impl_1a9d8d208c8cd0bb28a0f58854a4d7e859" kindref="member">buf</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal">serd_bulk_sink_write(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="struct_serd_bulk_sink_impl_1a9d8d208c8cd0bb28a0f58854a4d7e859" kindref="member">buf</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>,<sp/><ref refid="struct_serd_bulk_sink_impl" kindref="compound">SerdBulkSink</ref>*<sp/>bsink)</highlight></codeline>
<codeline lineno="175"><highlight class="normal">{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>orig_len<sp/>=<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>)<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="record_8c_1ae6c1d96e9c6d7954b35631501f31d241" kindref="member">space</ref><sp/>=<sp/>bsink-&gt;<ref refid="struct_serd_bulk_sink_impl_1ae85e0a6382790fe01314a99426accac8" kindref="member">block_size</ref><sp/>-<sp/>bsink-&gt;<ref refid="struct_serd_bulk_sink_impl_1acc59a940f7c2243de2c951d63d19bfc5" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n<sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="serd__internal_8h_1a3acffbd305ee72dcd4593c0d8af64a4f" kindref="member">MIN</ref>(space,<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>as<sp/>much<sp/>as<sp/>possible<sp/>into<sp/>the<sp/>remaining<sp/>buffer<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(bsink-&gt;<ref refid="struct_serd_bulk_sink_impl_1a9d8d208c8cd0bb28a0f58854a4d7e859" kindref="member">buf</ref><sp/>+<sp/>bsink-&gt;<ref refid="struct_serd_bulk_sink_impl_1acc59a940f7c2243de2c951d63d19bfc5" kindref="member">size</ref>,<sp/><ref refid="struct_serd_bulk_sink_impl_1a9d8d208c8cd0bb28a0f58854a4d7e859" kindref="member">buf</ref>,<sp/>n);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bsink-&gt;<ref refid="struct_serd_bulk_sink_impl_1acc59a940f7c2243de2c951d63d19bfc5" kindref="member">size</ref><sp/>+=<sp/>n;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_bulk_sink_impl_1a9d8d208c8cd0bb28a0f58854a4d7e859" kindref="member">buf</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*)<ref refid="struct_serd_bulk_sink_impl_1a9d8d208c8cd0bb28a0f58854a4d7e859" kindref="member">buf</ref><sp/>+<sp/>n;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-=<sp/>n;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Flush<sp/>page<sp/>if<sp/>buffer<sp/>is<sp/>full</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bsink-&gt;<ref refid="struct_serd_bulk_sink_impl_1acc59a940f7c2243de2c951d63d19bfc5" kindref="member">size</ref><sp/>==<sp/>bsink-&gt;<ref refid="struct_serd_bulk_sink_impl_1ae85e0a6382790fe01314a99426accac8" kindref="member">block_size</ref>)<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bsink-&gt;<ref refid="struct_serd_bulk_sink_impl_1a264743ac6266d7217d6a23c7452ea035" kindref="member">sink</ref>(bsink-&gt;<ref refid="struct_serd_bulk_sink_impl_1a9d8d208c8cd0bb28a0f58854a4d7e859" kindref="member">buf</ref>,<sp/>bsink-&gt;<ref refid="struct_serd_bulk_sink_impl_1ae85e0a6382790fe01314a99426accac8" kindref="member">block_size</ref>,<sp/>bsink-&gt;<ref refid="struct_serd_bulk_sink_impl_1abeac79c8db3faeb5bf9cc8f2fd0dfad7" kindref="member">stream</ref>);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bsink-&gt;<ref refid="struct_serd_bulk_sink_impl_1acc59a940f7c2243de2c951d63d19bfc5" kindref="member">size</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>orig_len;</highlight></codeline>
<codeline lineno="194"><highlight class="normal">}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Character<sp/>utilities<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal">in_range(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>)</highlight></codeline>
<codeline lineno="201"><highlight class="normal">{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref><sp/>&gt;=<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref><sp/>&amp;&amp;<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref><sp/>&lt;=<sp/>max);</highlight></codeline>
<codeline lineno="203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal">is_alpha(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>)</highlight></codeline>
<codeline lineno="208"><highlight class="normal">{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>in_range(c,<sp/></highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;Z&apos;</highlight><highlight class="normal">)<sp/>||<sp/>in_range(c,<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;z&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal">is_digit(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>)</highlight></codeline>
<codeline lineno="215"><highlight class="normal">{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>in_range(c,<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="217"><highlight class="normal">}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal">is_space(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>)</highlight></codeline>
<codeline lineno="221"><highlight class="normal">{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(c)<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\f&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\t&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\v&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal">is_base64(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>)</highlight></codeline>
<codeline lineno="232"><highlight class="normal">{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>is_alpha(c)<sp/>||<sp/>is_digit(c)<sp/>||<sp/>c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;+&apos;</highlight><highlight class="normal"><sp/>||<sp/>c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal"><sp/>||<sp/>c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;=&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="234"><highlight class="normal">}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal">is_windows_path(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*<sp/><ref refid="namespacelv2docgen_1ae75d75173fc2ea012acad7d886aa2f9d" kindref="member">path</ref>)</highlight></codeline>
<codeline lineno="238"><highlight class="normal">{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>is_alpha(path[0])<sp/>&amp;&amp;<sp/>(path[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal"><sp/>||<sp/>path[1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;|&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(path[2]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal"><sp/>||<sp/>path[2]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="241"><highlight class="normal">}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>URI<sp/>utilities<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal">chunk_equals(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_chunk" kindref="compound">SerdChunk</ref>*<sp/><ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_chunk" kindref="compound">SerdChunk</ref>*<sp/><ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>)</highlight></codeline>
<codeline lineno="247"><highlight class="normal">{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a-&gt;<ref refid="struct_serd_chunk_1a0a9e8bfa17dc87785f51262ba4769278" kindref="member">len</ref><sp/>==<sp/>b-&gt;<ref refid="struct_serd_chunk_1a0a9e8bfa17dc87785f51262ba4769278" kindref="member">len</ref></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>!strncmp((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)a-&gt;<ref refid="struct_serd_chunk_1a1fb21c23d2c2eecac5cf57b10ac370f6" kindref="member">buf</ref>,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)b-&gt;<ref refid="struct_serd_chunk_1a1fb21c23d2c2eecac5cf57b10ac370f6" kindref="member">buf</ref>,<sp/>a-&gt;<ref refid="struct_serd_chunk_1a0a9e8bfa17dc87785f51262ba4769278" kindref="member">len</ref>);</highlight></codeline>
<codeline lineno="250"><highlight class="normal">}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal">uri_path_len(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_u_r_i" kindref="compound">SerdURI</ref>*<sp/><ref refid="lib_2expat_8h_1a5a9fdd6c2606370ad12f24c078ac6585" kindref="member">uri</ref>)</highlight></codeline>
<codeline lineno="254"><highlight class="normal">{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>uri-&gt;<ref refid="struct_serd_u_r_i_1a127adf8cc7c49ef5dd5cb2f2064c08ef" kindref="member">path_base</ref>.<ref refid="struct_serd_chunk_1a0a9e8bfa17dc87785f51262ba4769278" kindref="member">len</ref><sp/>+<sp/>uri-&gt;<ref refid="struct_serd_u_r_i_1a70b1052b735a7b0b602bce0398e2ad96" kindref="member">path</ref>.<ref refid="struct_serd_chunk_1a0a9e8bfa17dc87785f51262ba4769278" kindref="member">len</ref>;</highlight></codeline>
<codeline lineno="256"><highlight class="normal">}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref></highlight></codeline>
<codeline lineno="259"><highlight class="normal">uri_path_at(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_u_r_i" kindref="compound">SerdURI</ref>*<sp/>uri,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)</highlight></codeline>
<codeline lineno="260"><highlight class="normal">{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>uri-&gt;path_base.len)<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>uri-&gt;<ref refid="struct_serd_u_r_i_1a127adf8cc7c49ef5dd5cb2f2064c08ef" kindref="member">path_base</ref>.<ref refid="struct_serd_chunk_1a1fb21c23d2c2eecac5cf57b10ac370f6" kindref="member">buf</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>uri-&gt;<ref refid="struct_serd_u_r_i_1a70b1052b735a7b0b602bce0398e2ad96" kindref="member">path</ref>.<ref refid="struct_serd_chunk_1a1fb21c23d2c2eecac5cf57b10ac370f6" kindref="member">buf</ref>[i<sp/>-<sp/>uri-&gt;<ref refid="struct_serd_u_r_i_1a127adf8cc7c49ef5dd5cb2f2064c08ef" kindref="member">path_base</ref>.<ref refid="struct_serd_chunk_1a0a9e8bfa17dc87785f51262ba4769278" kindref="member">len</ref>];</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal">}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal">uri_is_under(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_u_r_i" kindref="compound">SerdURI</ref>*<sp/>uri,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_u_r_i" kindref="compound">SerdURI</ref>*<sp/>root)</highlight></codeline>
<codeline lineno="271"><highlight class="normal">{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!root<sp/>||<sp/>!root-&gt;<ref refid="struct_serd_u_r_i_1a98a86ede5302ca626225d097f31c2cf1" kindref="member">scheme</ref>.<ref refid="struct_serd_chunk_1a0a9e8bfa17dc87785f51262ba4769278" kindref="member">len</ref><sp/>||</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!chunk_equals(&amp;root-&gt;<ref refid="struct_serd_u_r_i_1a98a86ede5302ca626225d097f31c2cf1" kindref="member">scheme</ref>,<sp/>&amp;uri-&gt;<ref refid="struct_serd_u_r_i_1a98a86ede5302ca626225d097f31c2cf1" kindref="member">scheme</ref>)<sp/>||</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!chunk_equals(&amp;root-&gt;<ref refid="struct_serd_u_r_i_1a8e5ad5cdcf67e04b5704d879c17d8f78" kindref="member">authority</ref>,<sp/>&amp;uri-&gt;<ref refid="struct_serd_u_r_i_1a8e5ad5cdcf67e04b5704d879c17d8f78" kindref="member">authority</ref>))<sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>differ<sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>path_len<sp/>=<sp/>uri_path_len(uri);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>root_len<sp/>=<sp/>uri_path_len(root);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>path_len<sp/>&amp;&amp;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>root_len;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uri_path_at(uri,<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>!=<sp/>uri_path_at(root,<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>))<sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>differ<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(differ<sp/>&amp;&amp;<sp/>uri_path_at(root,<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>==<sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="291"><highlight class="normal">}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Error<sp/>reporting<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal">serd_error(<ref refid="group__serd_1ga925d2fda236697a3e643b307ffe242e5" kindref="member">SerdErrorSink</ref><sp/>error_sink,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_error" kindref="compound">SerdError</ref>*<sp/><ref refid="namespacelv2docgen_1a4405dc5a2509537b9ff3b4de10bc28d6" kindref="member">e</ref>)</highlight></codeline>
<codeline lineno="297"><highlight class="normal">{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error_sink)<sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error_sink(handle,<sp/>e);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;error:<sp/>%s:%u:%u:<sp/>&quot;</highlight><highlight class="normal">,<sp/>e-&gt;<ref refid="struct_serd_error_1a7ce492ac3be5bf5dae7394edd260bc79" kindref="member">filename</ref>,<sp/>e-&gt;<ref refid="struct_serd_error_1af168bcd27bcecea6a3560195cebca4d8" kindref="member">line</ref>,<sp/>e-&gt;<ref refid="struct_serd_error_1aa44d03c985deafe03b6c6e9b2241aebe" kindref="member">col</ref>);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vfprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/>e-&gt;<ref refid="struct_serd_error_1a79ca1a8093c602b5c8a2aa21aa711e0a" kindref="member">fmt</ref>,<sp/>*e-&gt;<ref refid="struct_serd_error_1ad887f45444a7531e0507fb19651db0f3" kindref="member">args</ref>);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal">}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>SERD_INTERNAL_H</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/serd_internal.h"/>
  </compounddef>
</doxygen>
