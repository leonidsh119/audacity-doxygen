<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="sratom__test_8c" kind="file" language="C++">
    <compoundname>sratom_test.c</compoundname>
    <includes local="no">ctype.h</includes>
    <includes local="no">stdarg.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes refid="forge_8h" local="yes">lv2/lv2plug.in/ns/ext/atom/forge.h</includes>
    <includes refid="lv2_2lv2_2lv2_2lv2plug_8in_2ns_2ext_2atom_2util_8h" local="yes">lv2/lv2plug.in/ns/ext/atom/util.h</includes>
    <includes refid="midi_8h" local="yes">lv2/lv2plug.in/ns/ext/midi/midi.h</includes>
    <includes refid="sratom_8h" local="yes">sratom/sratom.h</includes>
    <incdepgraph>
      <node id="27444">
        <label>stdbool.h</label>
      </node>
      <node id="27434">
        <label>stdarg.h</label>
      </node>
      <node id="27437">
        <label>lv2/lv2plug.in/ns/ext/atom/forge.h</label>
        <link refid="forge_8h"/>
        <childnode refid="27438" relation="include">
        </childnode>
        <childnode refid="27439" relation="include">
        </childnode>
        <childnode refid="27442" relation="include">
        </childnode>
        <childnode refid="27445" relation="include">
        </childnode>
        <childnode refid="27444" relation="include">
        </childnode>
      </node>
      <node id="27440">
        <label>stdint.h</label>
      </node>
      <node id="27436">
        <label>stdlib.h</label>
      </node>
      <node id="27447">
        <label>sratom/sratom.h</label>
        <link refid="sratom_8h"/>
        <childnode refid="27440" relation="include">
        </childnode>
        <childnode refid="27445" relation="include">
        </childnode>
        <childnode refid="27439" relation="include">
        </childnode>
        <childnode refid="27437" relation="include">
        </childnode>
        <childnode refid="27448" relation="include">
        </childnode>
        <childnode refid="27449" relation="include">
        </childnode>
      </node>
      <node id="27448">
        <label>serd/serd.h</label>
        <link refid="serd_8h"/>
        <childnode refid="27434" relation="include">
        </childnode>
        <childnode refid="27441" relation="include">
        </childnode>
        <childnode refid="27440" relation="include">
        </childnode>
        <childnode refid="27435" relation="include">
        </childnode>
        <childnode refid="27444" relation="include">
        </childnode>
      </node>
      <node id="27441">
        <label>stddef.h</label>
      </node>
      <node id="27438">
        <label>assert.h</label>
        <link refid="assert_8h"/>
      </node>
      <node id="27449">
        <label>sord/sord.h</label>
        <link refid="sord_8h"/>
        <childnode refid="27441" relation="include">
        </childnode>
        <childnode refid="27440" relation="include">
        </childnode>
        <childnode refid="27435" relation="include">
        </childnode>
        <childnode refid="27448" relation="include">
        </childnode>
        <childnode refid="27444" relation="include">
        </childnode>
      </node>
      <node id="27445">
        <label>lv2/lv2plug.in/ns/ext/urid/urid.h</label>
        <link refid="urid_8h"/>
        <childnode refid="27440" relation="include">
        </childnode>
      </node>
      <node id="27443">
        <label>string.h</label>
      </node>
      <node id="27442">
        <label>lv2/lv2plug.in/ns/ext/atom/util.h</label>
        <link refid="lv2_2lv2_2lv2_2lv2plug_8in_2ns_2ext_2atom_2util_8h"/>
        <childnode refid="27434" relation="include">
        </childnode>
        <childnode refid="27440" relation="include">
        </childnode>
        <childnode refid="27443" relation="include">
        </childnode>
        <childnode refid="27439" relation="include">
        </childnode>
        <childnode refid="27444" relation="include">
        </childnode>
      </node>
      <node id="27446">
        <label>lv2/lv2plug.in/ns/ext/midi/midi.h</label>
        <link refid="midi_8h"/>
        <childnode refid="27440" relation="include">
        </childnode>
        <childnode refid="27444" relation="include">
        </childnode>
      </node>
      <node id="27432">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/tests/sratom_test.c</label>
        <link refid="sratom_test.c"/>
        <childnode refid="27433" relation="include">
        </childnode>
        <childnode refid="27434" relation="include">
        </childnode>
        <childnode refid="27435" relation="include">
        </childnode>
        <childnode refid="27436" relation="include">
        </childnode>
        <childnode refid="27437" relation="include">
        </childnode>
        <childnode refid="27442" relation="include">
        </childnode>
        <childnode refid="27446" relation="include">
        </childnode>
        <childnode refid="27447" relation="include">
        </childnode>
      </node>
      <node id="27433">
        <label>ctype.h</label>
      </node>
      <node id="27439">
        <label>lv2/lv2plug.in/ns/ext/atom/atom.h</label>
        <link refid="atom_8h"/>
        <childnode refid="27440" relation="include">
        </childnode>
        <childnode refid="27441" relation="include">
        </childnode>
      </node>
      <node id="27435">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="sratom__test_8c_1a298b6f024c8a4d1832092da69d976137" prot="public" static="no">
        <name>NS_RDF</name>
        <initializer>&quot;http://www.w3.org/1999/02/22-rdf-<ref refid="cmdline_8c_1a9aea52a77da0039230114dcf40c98aa6" kindref="member">syntax</ref>-<ref refid="xmltok_8c_1ab6aec1346fb6c7b2733f0f73c9536ad2" kindref="member">ns</ref>#&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/tests/sratom_test.c" line="27" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/tests/sratom_test.c" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sratom__test_8c_1a0fa8d3bb0cc514136f489b0723cdb9d6" prot="public" static="no">
        <name>USTR</name>
        <param><defname>s</defname></param>
        <initializer>((<ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*)(<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/tests/sratom_test.c" line="29" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/tests/sratom_test.c" bodystart="29" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="sratom__test_8c_1a42e30b2eba499e78c1647c915bdbb775" prot="public" static="yes" mutable="no">
        <type>char **</type>
        <definition>char** uris</definition>
        <argsstring></argsstring>
        <name>uris</name>
        <initializer>= <ref refid="px__mixer_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/tests/sratom_test.c" line="31" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/tests/sratom_test.c" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="sratom__test_8c_1a6cac288d3639dbff5f61ce54e5af51ff" prot="public" static="yes" mutable="no">
        <type>size_t</type>
        <definition>size_t n_uris</definition>
        <argsstring></argsstring>
        <name>n_uris</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/tests/sratom_test.c" line="32" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/tests/sratom_test.c" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="sratom__test_8c_1a926651a6370abeed0ad2d73468d1af99" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>static char* copy_string</definition>
        <argsstring>(const char *str)</argsstring>
        <name>copy_string</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/tests/sratom_test.c" line="35" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/tests/sratom_test.c" bodystart="35" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="sratom__test_8c_1adbd02c36944ead955ae92eac82a8fcd9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="urid_8h_1a5ff0630d245539e9f6dca10ff3c40fae" kindref="member">LV2_URID</ref></type>
        <definition>static LV2_URID urid_map</definition>
        <argsstring>(LV2_URID_Map_Handle handle, const char *uri)</argsstring>
        <name>urid_map</name>
        <param>
          <type><ref refid="urid_8h_1a31c6a9fffc31cd109185df2556765c4c" kindref="member">LV2_URID_Map_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>uri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/tests/sratom_test.c" line="44" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/tests/sratom_test.c" bodystart="44" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="sratom__test_8c_1ad7a6ddb9da7e924c707df7e457b37811" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
        <definition>static const char* urid_unmap</definition>
        <argsstring>(LV2_URID_Unmap_Handle handle, LV2_URID urid)</argsstring>
        <name>urid_unmap</name>
        <param>
          <type><ref refid="urid_8h_1a8af540051cff4554067642a93920866f" kindref="member">LV2_URID_Unmap_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="urid_8h_1a5ff0630d245539e9f6dca10ff3c40fae" kindref="member">LV2_URID</ref></type>
          <declname>urid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/tests/sratom_test.c" line="58" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/tests/sratom_test.c" bodystart="58" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="sratom__test_8c_1a0472388fb1c26caa7dacf78971797918" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static int test_fail</definition>
        <argsstring>(const char *fmt,...)</argsstring>
        <name>test_fail</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/tests/sratom_test.c" line="68" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/tests/sratom_test.c" bodystart="68" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="sratom__test_8c_1add3b6c2363806b3235479b66eb998f00" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static int test</definition>
        <argsstring>(bool top_level)</argsstring>
        <name>test</name>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>top_level</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/tests/sratom_test.c" line="79" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/tests/sratom_test.c" bodystart="79" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="sratom__test_8c_1a840291bc02cba5474a4cb46a9b9566fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int main</definition>
        <argsstring>(void)</argsstring>
        <name>main</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/tests/sratom_test.c" line="298" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/tests/sratom_test.c" bodystart="298" bodyend="306"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/>Copyright<sp/>2012-2014<sp/>David<sp/>Robillard<sp/>&lt;http://drobilla.net&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/>Permission<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>and/or<sp/>distribute<sp/>this<sp/>software<sp/>for<sp/>any</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>purpose<sp/>with<sp/>or<sp/>without<sp/>fee<sp/>is<sp/>hereby<sp/>granted,<sp/>provided<sp/>that<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>appear<sp/>in<sp/>all<sp/>copies.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"></highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>THE<sp/>AUTHOR<sp/>DISCLAIMS<sp/>ALL<sp/>WARRANTIES</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/>WITH<sp/>REGARD<sp/>TO<sp/>THIS<sp/>SOFTWARE<sp/>INCLUDING<sp/>ALL<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/>ANY<sp/>SPECIAL,<sp/>DIRECT,<sp/>INDIRECT,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>OR<sp/>ANY<sp/>DAMAGES</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/>WHATSOEVER<sp/>RESULTING<sp/>FROM<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA<sp/>OR<sp/>PROFITS,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>NEGLIGENCE<sp/>OR<sp/>OTHER<sp/>TORTIOUS<sp/>ACTION,<sp/>ARISING<sp/>OUT<sp/>OF</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>USE<sp/>OR<sp/>PERFORMANCE<sp/>OF<sp/>THIS<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="15"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ctype.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdarg.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="forge_8h" kindref="compound">lv2/lv2plug.in/ns/ext/atom/forge.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lv2_2lv2_2lv2_2lv2plug_8in_2ns_2ext_2atom_2util_8h" kindref="compound">lv2/lv2plug.in/ns/ext/atom/util.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="midi_8h" kindref="compound">lv2/lv2plug.in/ns/ext/midi/midi.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sratom_8h" kindref="compound">sratom/sratom.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="sratom__test_8c_1a298b6f024c8a4d1832092da69d976137" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NS_RDF<sp/>&quot;http://www.w3.org/1999/02/22-rdf-syntax-ns#&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="sratom__test_8c_1a0fa8d3bb0cc514136f489b0723cdb9d6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>USTR(s)<sp/>((const<sp/>uint8_t*)(s))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/><ref refid="lilv__test_8c_1a42e30b2eba499e78c1647c915bdbb775" kindref="member">uris</ref><sp/><sp/><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="lilv__test_8c_1a6cac288d3639dbff5f61ce54e5af51ff" kindref="member">n_uris</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight></codeline>
<codeline lineno="35"><highlight class="normal">copy_string(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="sndfile__save_8m_1a4b99ff73a8a869319570237b5c57ab03" kindref="member">str</ref>)</highlight></codeline>
<codeline lineno="36"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref><sp/>=<sp/>strlen(str);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dup<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)malloc(len<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(dup,<sp/>str,<sp/>len<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dup;</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="urid_8h_1a5ff0630d245539e9f6dca10ff3c40fae" kindref="member">LV2_URID</ref></highlight></codeline>
<codeline lineno="44"><highlight class="normal">urid_map(<ref refid="urid_8h_1a31c6a9fffc31cd109185df2556765c4c" kindref="member">LV2_URID_Map_Handle</ref><sp/>handle,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="lib_2expat_8h_1a5a9fdd6c2606370ad12f24c078ac6585" kindref="member">uri</ref>)</highlight></codeline>
<codeline lineno="45"><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/><ref refid="lilv__test_8c_1a6cac288d3639dbff5f61ce54e5af51ff" kindref="member">n_uris</ref>;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(<ref refid="lilv__test_8c_1a42e30b2eba499e78c1647c915bdbb775" kindref="member">uris</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>],<sp/>uri))<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilv__test_8c_1a42e30b2eba499e78c1647c915bdbb775" kindref="member">uris</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**)realloc(<ref refid="lilv__test_8c_1a42e30b2eba499e78c1647c915bdbb775" kindref="member">uris</ref>,<sp/>++n_uris<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*));</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilv__test_8c_1a42e30b2eba499e78c1647c915bdbb775" kindref="member">uris</ref>[n_uris<sp/>-<sp/>1]<sp/>=<sp/>copy_string(uri);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n_uris;</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight></codeline>
<codeline lineno="58"><highlight class="normal">urid_unmap(<ref refid="urid_8h_1a8af540051cff4554067642a93920866f" kindref="member">LV2_URID_Unmap_Handle</ref><sp/>handle,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="urid_8h_1a5ff0630d245539e9f6dca10ff3c40fae" kindref="member">LV2_URID</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>urid)</highlight></codeline>
<codeline lineno="60"><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(urid<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>urid<sp/>&lt;=<sp/><ref refid="lilv__test_8c_1a6cac288d3639dbff5f61ce54e5af51ff" kindref="member">n_uris</ref>)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="lilv__test_8c_1a42e30b2eba499e78c1647c915bdbb775" kindref="member">uris</ref>[urid<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal">test_fail(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fmt,<sp/>...)</highlight></codeline>
<codeline lineno="69"><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>va_list<sp/><ref refid="namespacelv2specgen_1a022f620722f1029244a92eca556aa50a" kindref="member">args</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>va_start(args,<sp/>fmt);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;error:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>vfprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/>fmt,<sp/>args);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>va_end(args);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><ref refid="patest__multi__sine_8c_1a4e1a7dd05b97e23b3dd1aed354405b63" kindref="member">test</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="xlisp_8c_1a2c43fa1b22ee01304a2e4435edcfc1e9" kindref="member">top_level</ref>)</highlight></codeline>
<codeline lineno="80"><highlight class="normal">{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct___l_v2___u_r_i_d___map" kindref="compound">LV2_URID_Map</ref><sp/><sp/><sp/><ref refid="structmap" kindref="compound">map</ref><sp/><sp/><sp/>=<sp/>{<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>urid_map<sp/>};</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct___l_v2___u_r_i_d___unmap" kindref="compound">LV2_URID_Unmap</ref><sp/>unmap<sp/>=<sp/>{<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>urid_unmap<sp/>};</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_l_v2___atom___forge" kindref="compound">LV2_Atom_Forge</ref><sp/>forge;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>lv2_atom_forge_init(&amp;forge,<sp/>&amp;map);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_sratom_impl" kindref="compound">Sratom</ref>*<sp/>sratom<sp/>=<sp/><ref refid="group__sratom_1ga6ca41eacfb303961a39e4b8c18f728df" kindref="member">sratom_new</ref>(&amp;map);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sratom_1gad4f459e8c541f9bf303e105aea323198" kindref="member">sratom_set_object_mode</ref>(</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sratom,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>top_level<sp/>?<sp/><ref refid="group__sratom_1ggaf476c91b166a55d78e4aa7fc2213182fa50e9f133f13abf4063480d1f546b854c" kindref="member">SRATOM_OBJECT_MODE_BLANK_SUBJECT</ref><sp/>:<sp/><ref refid="group__sratom_1ggaf476c91b166a55d78e4aa7fc2213182fa7f47b603d2cd7da31469a0dce3828739" kindref="member">SRATOM_OBJECT_MODE_BLANK</ref>);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="urid_8h_1a5ff0630d245539e9f6dca10ff3c40fae" kindref="member">LV2_URID</ref><sp/>eg_Object<sp/><sp/>=<sp/>urid_map(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;http://example.org/Object&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="urid_8h_1a5ff0630d245539e9f6dca10ff3c40fae" kindref="member">LV2_URID</ref><sp/>eg_one<sp/><sp/><sp/><sp/><sp/>=<sp/>urid_map(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;http://example.org/a-one&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="urid_8h_1a5ff0630d245539e9f6dca10ff3c40fae" kindref="member">LV2_URID</ref><sp/>eg_two<sp/><sp/><sp/><sp/><sp/>=<sp/>urid_map(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;http://example.org/b-two&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="urid_8h_1a5ff0630d245539e9f6dca10ff3c40fae" kindref="member">LV2_URID</ref><sp/>eg_three<sp/><sp/><sp/>=<sp/>urid_map(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;http://example.org/c-three&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="urid_8h_1a5ff0630d245539e9f6dca10ff3c40fae" kindref="member">LV2_URID</ref><sp/>eg_four<sp/><sp/><sp/><sp/>=<sp/>urid_map(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;http://example.org/d-four&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="urid_8h_1a5ff0630d245539e9f6dca10ff3c40fae" kindref="member">LV2_URID</ref><sp/>eg_true<sp/><sp/><sp/><sp/>=<sp/>urid_map(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;http://example.org/e-true&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="urid_8h_1a5ff0630d245539e9f6dca10ff3c40fae" kindref="member">LV2_URID</ref><sp/>eg_false<sp/><sp/><sp/>=<sp/>urid_map(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;http://example.org/f-false&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="urid_8h_1a5ff0630d245539e9f6dca10ff3c40fae" kindref="member">LV2_URID</ref><sp/>eg_path<sp/><sp/><sp/><sp/>=<sp/>urid_map(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;http://example.org/g-path&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="urid_8h_1a5ff0630d245539e9f6dca10ff3c40fae" kindref="member">LV2_URID</ref><sp/>eg_urid<sp/><sp/><sp/><sp/>=<sp/>urid_map(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;http://example.org/h-urid&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="urid_8h_1a5ff0630d245539e9f6dca10ff3c40fae" kindref="member">LV2_URID</ref><sp/>eg_string<sp/><sp/>=<sp/>urid_map(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;http://example.org/i-string&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="urid_8h_1a5ff0630d245539e9f6dca10ff3c40fae" kindref="member">LV2_URID</ref><sp/>eg_langlit<sp/>=<sp/>urid_map(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;http://example.org/j-langlit&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="urid_8h_1a5ff0630d245539e9f6dca10ff3c40fae" kindref="member">LV2_URID</ref><sp/>eg_typelit<sp/>=<sp/>urid_map(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;http://example.org/k-typelit&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="urid_8h_1a5ff0630d245539e9f6dca10ff3c40fae" kindref="member">LV2_URID</ref><sp/>eg_null<sp/><sp/><sp/><sp/>=<sp/>urid_map(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;http://example.org/l-null&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="urid_8h_1a5ff0630d245539e9f6dca10ff3c40fae" kindref="member">LV2_URID</ref><sp/>eg_chunk<sp/><sp/><sp/>=<sp/>urid_map(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;http://example.org/m-chunk&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="urid_8h_1a5ff0630d245539e9f6dca10ff3c40fae" kindref="member">LV2_URID</ref><sp/>eg_blob<sp/><sp/><sp/><sp/>=<sp/>urid_map(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;http://example.org/n-blob&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="urid_8h_1a5ff0630d245539e9f6dca10ff3c40fae" kindref="member">LV2_URID</ref><sp/>eg_blank<sp/><sp/><sp/>=<sp/>urid_map(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;http://example.org/o-blank&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="urid_8h_1a5ff0630d245539e9f6dca10ff3c40fae" kindref="member">LV2_URID</ref><sp/>eg_tuple<sp/><sp/><sp/>=<sp/>urid_map(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;http://example.org/p-tuple&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="urid_8h_1a5ff0630d245539e9f6dca10ff3c40fae" kindref="member">LV2_URID</ref><sp/>eg_rectup<sp/><sp/>=<sp/>urid_map(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;http://example.org/q-rectup&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="urid_8h_1a5ff0630d245539e9f6dca10ff3c40fae" kindref="member">LV2_URID</ref><sp/>eg_vector<sp/><sp/>=<sp/>urid_map(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;http://example.org/r-vector&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="urid_8h_1a5ff0630d245539e9f6dca10ff3c40fae" kindref="member">LV2_URID</ref><sp/>eg_seq<sp/><sp/><sp/><sp/><sp/>=<sp/>urid_map(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;http://example.org/s-seq&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/><ref refid="xlglob_8c_1a6d3f7f126151ca554ba001d63c9721f9" kindref="member">buf</ref>[1024];</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>lv2_atom_forge_set_buffer(&amp;forge,<sp/>buf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(buf));</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj_uri<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;http://example.org/obj&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="urid_8h_1a5ff0630d245539e9f6dca10ff3c40fae" kindref="member">LV2_URID</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj_id<sp/><sp/>=<sp/>urid_map(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>obj_uri);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct___l_v2___atom___forge___frame" kindref="compound">LV2_Atom_Forge_Frame</ref><sp/>obj_frame;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(top_level)<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lv2_atom_forge_object(&amp;forge,<sp/>&amp;obj_frame,<sp/>obj_id,<sp/>eg_Object);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lv2_atom_forge_object(&amp;forge,<sp/>&amp;obj_frame,<sp/>0,<sp/>eg_Object);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_l_v2___atom" kindref="compound">LV2_Atom</ref>*<sp/>obj<sp/>=<sp/>lv2_atom_forge_deref(&amp;forge,<sp/>obj_frame.<ref refid="struct___l_v2___atom___forge___frame_1ae4d7dc1067426985649b99b871841a01" kindref="member">ref</ref>);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>eg_one<sp/>=<sp/>(Int32)1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>lv2_atom_forge_key(&amp;forge,<sp/>eg_one);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>lv2_atom_forge_int(&amp;forge,<sp/>1);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>eg_two<sp/>=<sp/>(Int64)2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>lv2_atom_forge_key(&amp;forge,<sp/>eg_two);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>lv2_atom_forge_long(&amp;forge,<sp/>2);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>eg_three<sp/>=<sp/>(Float)3.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>lv2_atom_forge_key(&amp;forge,<sp/>eg_three);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>lv2_atom_forge_float(&amp;forge,<sp/>3.0<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>eg_four<sp/>=<sp/>(Double)4.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>lv2_atom_forge_key(&amp;forge,<sp/>eg_four);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>lv2_atom_forge_double(&amp;forge,<sp/>4.0);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>eg_true<sp/>=<sp/>(Bool)1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>lv2_atom_forge_key(&amp;forge,<sp/>eg_true);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>lv2_atom_forge_bool(&amp;forge,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>eg_false<sp/>=<sp/>(Bool)0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>lv2_atom_forge_key(&amp;forge,<sp/>eg_false);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>lv2_atom_forge_bool(&amp;forge,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>eg_path<sp/>=<sp/>(Path)&quot;/absolute/path&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/>pstr<sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;/absolute/path&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pstr_len<sp/>=<sp/>strlen(pstr);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>lv2_atom_forge_key(&amp;forge,<sp/>eg_path);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>lv2_atom_forge_path(&amp;forge,<sp/>pstr,<sp/>pstr_len);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>eg_urid<sp/>=<sp/>(URID)&quot;http://example.org/value&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="urid_8h_1a5ff0630d245539e9f6dca10ff3c40fae" kindref="member">LV2_URID</ref><sp/>eg_value<sp/>=<sp/>urid_map(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;http://example.org/value&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>lv2_atom_forge_key(&amp;forge,<sp/>eg_urid);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>lv2_atom_forge_urid(&amp;forge,<sp/>eg_value);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>eg_string<sp/>=<sp/>(String)&quot;hello&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>lv2_atom_forge_key(&amp;forge,<sp/>eg_string);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>lv2_atom_forge_string(&amp;forge,<sp/></highlight><highlight class="stringliteral">&quot;hello&quot;</highlight><highlight class="normal">,<sp/>strlen(</highlight><highlight class="stringliteral">&quot;hello&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>eg_langlit<sp/>=<sp/>(Literal)&quot;bonjour&quot;@fr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>lv2_atom_forge_key(&amp;forge,<sp/>eg_langlit);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>lv2_atom_forge_literal(</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;forge,<sp/></highlight><highlight class="stringliteral">&quot;bonjour&quot;</highlight><highlight class="normal">,<sp/>strlen(</highlight><highlight class="stringliteral">&quot;bonjour&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>urid_map(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;http://lexvo.org/id/iso639-3/fra&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>eg_typelit<sp/>=<sp/>(Literal)&quot;bonjour&quot;@fr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>lv2_atom_forge_key(&amp;forge,<sp/>eg_typelit);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>lv2_atom_forge_literal(</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;forge,<sp/></highlight><highlight class="stringliteral">&quot;value&quot;</highlight><highlight class="normal">,<sp/>strlen(</highlight><highlight class="stringliteral">&quot;value&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>urid_map(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/></highlight><highlight class="stringliteral">&quot;http://example.org/Type&quot;</highlight><highlight class="normal">),<sp/>0);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>eg_null<sp/>=<sp/>null</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>lv2_atom_forge_key(&amp;forge,<sp/>eg_null);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>lv2_atom_forge_atom(&amp;forge,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>eg_chunk<sp/>=<sp/>0xBEEFDEAD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/>chunk_buf[]<sp/>=<sp/>{<sp/>0xBE,<sp/>0xEF,<sp/>0xDE,<sp/>0xAD<sp/>};</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>lv2_atom_forge_key(&amp;forge,<sp/>eg_chunk);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>lv2_atom_forge_atom(&amp;forge,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(chunk_buf),<sp/>forge.<ref refid="struct_l_v2___atom___forge_1a34f0a317c1586b5ac2b69606e52421ed" kindref="member">Chunk</ref>);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>lv2_atom_forge_write(&amp;forge,<sp/>chunk_buf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(chunk_buf));</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>eg_blob<sp/>=<sp/>0xDEADBEEF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref><sp/>blob_type<sp/><sp/>=<sp/>map.<ref refid="struct___l_v2___u_r_i_d___map_1a560d625bc0aacd00fd8e6e1e2915bf1a" kindref="member">map</ref>(map.<ref refid="struct___l_v2___u_r_i_d___map_1a19150b0e12e748ddc70a039c8557a4ce" kindref="member">handle</ref>,<sp/></highlight><highlight class="stringliteral">&quot;http://example.org/Blob&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/><sp/>blob_buf[]<sp/>=<sp/>{<sp/>0xDE,<sp/>0xAD,<sp/>0xBE,<sp/>0xEF<sp/>};</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>lv2_atom_forge_key(&amp;forge,<sp/>eg_blob);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>lv2_atom_forge_atom(&amp;forge,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(blob_buf),<sp/>blob_type);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>lv2_atom_forge_write(&amp;forge,<sp/>blob_buf,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(blob_buf));</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>eg_blank<sp/>=<sp/>[<sp/>a<sp/>&lt;http://example.org/Object&gt;<sp/>]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>lv2_atom_forge_key(&amp;forge,<sp/>eg_blank);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct___l_v2___atom___forge___frame" kindref="compound">LV2_Atom_Forge_Frame</ref><sp/>blank_frame;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>lv2_atom_forge_object(&amp;forge,<sp/>&amp;blank_frame,<sp/>0,<sp/>eg_Object);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>lv2_atom_forge_pop(&amp;forge,<sp/>&amp;blank_frame);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>eg_tuple<sp/>=<sp/>&quot;foo&quot;,true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>lv2_atom_forge_key(&amp;forge,<sp/>eg_tuple);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct___l_v2___atom___forge___frame" kindref="compound">LV2_Atom_Forge_Frame</ref><sp/>tuple_frame;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>lv2_atom_forge_tuple(&amp;forge,<sp/>&amp;tuple_frame);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>lv2_atom_forge_string(&amp;forge,<sp/></highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">,<sp/>strlen(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>lv2_atom_forge_bool(&amp;forge,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>lv2_atom_forge_pop(&amp;forge,<sp/>&amp;tuple_frame);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>eg_rectup<sp/>=<sp/>&quot;foo&quot;,true,(&quot;bar&quot;,false)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>lv2_atom_forge_key(&amp;forge,<sp/>eg_rectup);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct___l_v2___atom___forge___frame" kindref="compound">LV2_Atom_Forge_Frame</ref><sp/>rectup_frame;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>lv2_atom_forge_tuple(&amp;forge,<sp/>&amp;rectup_frame);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>lv2_atom_forge_string(&amp;forge,<sp/></highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">,<sp/>strlen(</highlight><highlight class="stringliteral">&quot;foo&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>lv2_atom_forge_bool(&amp;forge,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct___l_v2___atom___forge___frame" kindref="compound">LV2_Atom_Forge_Frame</ref><sp/>subrectup_frame;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>lv2_atom_forge_tuple(&amp;forge,<sp/>&amp;subrectup_frame);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>lv2_atom_forge_string(&amp;forge,<sp/></highlight><highlight class="stringliteral">&quot;bar&quot;</highlight><highlight class="normal">,<sp/>strlen(</highlight><highlight class="stringliteral">&quot;bar&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>lv2_atom_forge_bool(&amp;forge,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>lv2_atom_forge_pop(&amp;forge,<sp/>&amp;subrectup_frame);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>lv2_atom_forge_pop(&amp;forge,<sp/>&amp;rectup_frame);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>eg_vector<sp/>=<sp/>(Vector&lt;Int32&gt;)1,2,3,4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>lv2_atom_forge_key(&amp;forge,<sp/>eg_vector);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a37994e3b11c72957c6f454c6ec96d43d" kindref="member">int32_t</ref><sp/>elems[]<sp/>=<sp/>{<sp/>1,<sp/>2,<sp/>3,<sp/>4<sp/>};</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>lv2_atom_forge_vector(&amp;forge,<sp/>4,<sp/>forge.<ref refid="struct_l_v2___atom___forge_1a6602b2a9838bb2349ac42e4deb84fc4b" kindref="member">Int</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a37994e3b11c72957c6f454c6ec96d43d" kindref="member">int32_t</ref>),<sp/>elems);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>eg_seq<sp/>=<sp/>(Sequence)1,<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="urid_8h_1a5ff0630d245539e9f6dca10ff3c40fae" kindref="member">LV2_URID</ref><sp/>midi_midiEvent<sp/>=<sp/>map.<ref refid="struct___l_v2___u_r_i_d___map_1a560d625bc0aacd00fd8e6e1e2915bf1a" kindref="member">map</ref>(map.<ref refid="struct___l_v2___u_r_i_d___map_1a19150b0e12e748ddc70a039c8557a4ce" kindref="member">handle</ref>,<sp/><ref refid="midi_8h_1ac8397c2ef162dc4b240cb43ea8f83114" kindref="member">LV2_MIDI__MidiEvent</ref>);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>lv2_atom_forge_key(&amp;forge,<sp/>eg_seq);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct___l_v2___atom___forge___frame" kindref="compound">LV2_Atom_Forge_Frame</ref><sp/>seq_frame;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>lv2_atom_forge_sequence_head(&amp;forge,<sp/>&amp;seq_frame,<sp/>0);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/>ev1[3]<sp/>=<sp/>{<sp/>0x90,<sp/>0x1A,<sp/>0x1<sp/>};</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>lv2_atom_forge_frame_time(&amp;forge,<sp/>1);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>lv2_atom_forge_atom(&amp;forge,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ev1),<sp/>midi_midiEvent);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>lv2_atom_forge_raw(&amp;forge,<sp/>ev1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ev1));</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>lv2_atom_forge_pad(&amp;forge,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ev1));</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/>ev2[3]<sp/>=<sp/>{<sp/>0x90,<sp/>0x2B,<sp/>0x2<sp/>};</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>lv2_atom_forge_frame_time(&amp;forge,<sp/>3);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>lv2_atom_forge_atom(&amp;forge,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ev2),<sp/>midi_midiEvent);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>lv2_atom_forge_raw(&amp;forge,<sp/>ev2,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ev2));</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>lv2_atom_forge_pad(&amp;forge,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ev2));</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>lv2_atom_forge_pop(&amp;forge,<sp/>&amp;seq_frame);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>lv2_atom_forge_pop(&amp;forge,<sp/>&amp;obj_frame);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>base_uri<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;file:///tmp/base/&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref><sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref><sp/>=<sp/><ref refid="group__serd_1gae76caf1b4e7a6465c9cb73ec11f568ea" kindref="member">serd_node_from_string</ref>(<ref refid="group__serd_1gga7ccd8d4fb2c3a6ad690ed6d6fe1b45faa7c01ef6de89d3245d4aed20da0736d24" kindref="member">SERD_URI</ref>,<sp/><ref refid="sratom__test_8c_1a0fa8d3bb0cc514136f489b0723cdb9d6" kindref="member">USTR</ref>(</highlight><highlight class="stringliteral">&quot;http://example.org/obj&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref><sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref><sp/>=<sp/><ref refid="group__serd_1gae76caf1b4e7a6465c9cb73ec11f568ea" kindref="member">serd_node_from_string</ref>(<ref refid="group__serd_1gga7ccd8d4fb2c3a6ad690ed6d6fe1b45faa7c01ef6de89d3245d4aed20da0736d24" kindref="member">SERD_URI</ref>,<sp/><ref refid="sratom__test_8c_1a0fa8d3bb0cc514136f489b0723cdb9d6" kindref="member">USTR</ref>(<ref refid="sratom__test_8c_1a298b6f024c8a4d1832092da69d976137" kindref="member">NS_RDF</ref><sp/></highlight><highlight class="stringliteral">&quot;value&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/>subj<sp/>=<sp/>top_level<sp/>?<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>:<sp/>&amp;<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/>pred<sp/>=<sp/>top_level<sp/>?<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>:<sp/>&amp;<ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>outstr<sp/>=<sp/><ref refid="group__sratom_1ga65fa0a468f17b55de2169012fef8d7f2" kindref="member">sratom_to_turtle</ref>(</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sratom,<sp/>&amp;unmap,<sp/>base_uri,<sp/>subj,<sp/>pred,</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj-&gt;<ref refid="struct_l_v2___atom_1a5d13f0da49ed0ad1102b651220d930cb" kindref="member">type</ref>,<sp/>obj-&gt;<ref refid="struct_l_v2___atom_1a0f2fb72ad77d6e3dc119c56b40a6d639" kindref="member">size</ref>,<sp/><ref refid="atom_8h_1a496f8b7c9fa80904c0a64a272f216759" kindref="member">LV2_ATOM_BODY</ref>(obj));</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;#<sp/>Atom<sp/>=&gt;<sp/>Turtle\n\n%s&quot;</highlight><highlight class="normal">,<sp/>outstr);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_l_v2___atom" kindref="compound">LV2_Atom</ref>*<sp/>parsed<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(top_level)<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref><sp/><ref refid="namespacesmartmsgmerge_1aba35baca6a2a8d4f665ba30724f4739a" kindref="member">o</ref>=<sp/><ref refid="group__serd_1gae76caf1b4e7a6465c9cb73ec11f568ea" kindref="member">serd_node_from_string</ref>(<ref refid="group__serd_1gga7ccd8d4fb2c3a6ad690ed6d6fe1b45faa7c01ef6de89d3245d4aed20da0736d24" kindref="member">SERD_URI</ref>,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*)obj_uri);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parsed<sp/>=<sp/><ref refid="group__sratom_1gabb8be4254715e569531159e21cf27c17" kindref="member">sratom_from_turtle</ref>(sratom,<sp/>base_uri,<sp/>&amp;o,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>outstr);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parsed<sp/>=<sp/><ref refid="group__sratom_1gabb8be4254715e569531159e21cf27c17" kindref="member">sratom_from_turtle</ref>(sratom,<sp/>base_uri,<sp/>subj,<sp/>pred,<sp/>outstr);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!lv2_atom_equals(obj,<sp/>parsed))<sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>test_fail(</highlight><highlight class="stringliteral">&quot;Parsed<sp/>atom<sp/>does<sp/>not<sp/>match<sp/>original\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="structinstr" kindref="compound">instr</ref><sp/>=<sp/><ref refid="group__sratom_1ga65fa0a468f17b55de2169012fef8d7f2" kindref="member">sratom_to_turtle</ref>(</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sratom,<sp/>&amp;unmap,<sp/>base_uri,<sp/>subj,<sp/>pred,</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parsed-&gt;<ref refid="struct_l_v2___atom_1a5d13f0da49ed0ad1102b651220d930cb" kindref="member">type</ref>,<sp/>parsed-&gt;<ref refid="struct_l_v2___atom_1a0f2fb72ad77d6e3dc119c56b40a6d639" kindref="member">size</ref>,<sp/><ref refid="atom_8h_1a496f8b7c9fa80904c0a64a272f216759" kindref="member">LV2_ATOM_BODY</ref>(parsed));</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;#<sp/>Turtle<sp/>=&gt;<sp/>Atom\n\n%s&quot;</highlight><highlight class="normal">,<sp/>instr);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(outstr,<sp/>instr))<sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>test_fail(</highlight><highlight class="stringliteral">&quot;Re-serialised<sp/>string<sp/>differs<sp/>from<sp/>original\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;All<sp/>tests<sp/>passed.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>free(parsed);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>free(instr);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>free(outstr);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sratom_1ga4d805918e1d89ce8cc30005c3d6a08e5" kindref="member">sratom_free</ref>(sratom);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/><ref refid="lilv__test_8c_1a6cac288d3639dbff5f61ce54e5af51ff" kindref="member">n_uris</ref>;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(<ref refid="lilv__test_8c_1a42e30b2eba499e78c1647c915bdbb775" kindref="member">uris</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>free(<ref refid="lilv__test_8c_1a42e30b2eba499e78c1647c915bdbb775" kindref="member">uris</ref>);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilv__test_8c_1a42e30b2eba499e78c1647c915bdbb775" kindref="member">uris</ref><sp/><sp/><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>n_uris<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="295"><highlight class="normal">}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298" refid="sratom__test_8c_1a840291bc02cba5474a4cb46a9b9566fe" refkind="member"><highlight class="normal"><ref refid="sratom__test_8c_1a840291bc02cba5474a4cb46a9b9566fe" kindref="member">main</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="299"><highlight class="normal">{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="patest__multi__sine_8c_1a4e1a7dd05b97e23b3dd1aed354405b63" kindref="member">test</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="patest__multi__sine_8c_1a4e1a7dd05b97e23b3dd1aed354405b63" kindref="member">test</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="306"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/tests/sratom_test.c"/>
  </compounddef>
</doxygen>
