<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="fftext_8h" kind="file" language="C++">
    <compoundname>fftext.h</compoundname>
    <includedby refid="conv2d_test_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/ffts/Matlab-testing/conv2dTest.c</includedby>
    <includedby refid="conv_test_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/ffts/Matlab-testing/convTest.c</includedby>
    <includedby refid="rfft2d_test_m_l_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/ffts/Matlab-testing/rfft2dTestML.c</includedby>
    <includedby refid="fft_test_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/ffts/Numerical-Recipes-testing/fftTest.c</includedby>
    <includedby refid="fft_test2d_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/ffts/Numerical-Recipes-testing/fftTest2d.c</includedby>
    <includedby refid="fft_test3d_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/ffts/Numerical-Recipes-testing/fftTest3d.c</includedby>
    <includedby refid="rfft_test_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/ffts/Numerical-Recipes-testing/rfftTest.c</includedby>
    <includedby refid="rfft_test2d_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/ffts/Numerical-Recipes-testing/rfftTest2d.c</includedby>
    <includedby refid="fft2d_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/ffts/src/fft2d.c</includedby>
    <includedby refid="fftext_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/ffts/src/fftext.c</includedby>
    <includedby refid="fft_timing_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/ffts/Timing-code/fftTiming.c</includedby>
    <includedby refid="rfft_timing_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/ffts/Timing-code/rfftTiming.c</includedby>
    <includedby refid="libnyquist_2nyquist_2nyqsrc_2fft_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/fft.c</includedby>
    <includedby refid="ifft_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/ifft.c</includedby>
    <invincdepgraph>
      <node id="11908">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/ffts/Matlab-testing/convTest.c</label>
        <link refid="conv_test_8c"/>
      </node>
      <node id="11917">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/ffts/Timing-code/fftTiming.c</label>
        <link refid="fft_timing_8c"/>
      </node>
      <node id="11913">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/ffts/Numerical-Recipes-testing/rfftTest.c</label>
        <link refid="rfft_test_8c"/>
      </node>
      <node id="11910">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/ffts/Numerical-Recipes-testing/fftTest.c</label>
        <link refid="fft_test_8c"/>
      </node>
      <node id="11919">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/fft.c</label>
        <link refid="libnyquist_2nyquist_2nyqsrc_2fft_8c"/>
      </node>
      <node id="11911">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/ffts/Numerical-Recipes-testing/fftTest2d.c</label>
        <link refid="fft_test2d_8c"/>
      </node>
      <node id="11914">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/ffts/Numerical-Recipes-testing/rfftTest2d.c</label>
        <link refid="rfft_test2d_8c"/>
      </node>
      <node id="11912">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/ffts/Numerical-Recipes-testing/fftTest3d.c</label>
        <link refid="fft_test3d_8c"/>
      </node>
      <node id="11916">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/ffts/src/fftext.c</label>
        <link refid="fftext_8c"/>
      </node>
      <node id="11906">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/ffts/src/fftext.h</label>
        <link refid="fftext.h"/>
        <childnode refid="11907" relation="include">
        </childnode>
        <childnode refid="11908" relation="include">
        </childnode>
        <childnode refid="11909" relation="include">
        </childnode>
        <childnode refid="11910" relation="include">
        </childnode>
        <childnode refid="11911" relation="include">
        </childnode>
        <childnode refid="11912" relation="include">
        </childnode>
        <childnode refid="11913" relation="include">
        </childnode>
        <childnode refid="11914" relation="include">
        </childnode>
        <childnode refid="11915" relation="include">
        </childnode>
        <childnode refid="11916" relation="include">
        </childnode>
        <childnode refid="11917" relation="include">
        </childnode>
        <childnode refid="11918" relation="include">
        </childnode>
        <childnode refid="11919" relation="include">
        </childnode>
        <childnode refid="11920" relation="include">
        </childnode>
      </node>
      <node id="11909">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/ffts/Matlab-testing/rfft2dTestML.c</label>
        <link refid="rfft2d_test_m_l_8c"/>
      </node>
      <node id="11907">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/ffts/Matlab-testing/conv2dTest.c</label>
        <link refid="conv2d_test_8c"/>
      </node>
      <node id="11918">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/ffts/Timing-code/rfftTiming.c</label>
        <link refid="rfft_timing_8c"/>
      </node>
      <node id="11920">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/tran/ifft.c</label>
        <link refid="ifft_8c"/>
      </node>
      <node id="11915">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/ffts/src/fft2d.c</label>
        <link refid="fft2d_8c"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="fftext_8h_1a6df620a166f1f7e9f5cd756d3adbc7ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int fftInit</definition>
        <argsstring>(long M)</argsstring>
        <name>fftInit</name>
        <param>
          <type>long</type>
          <declname>M</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/ffts/src/fftext.h" line="12" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/ffts/src/fftext.c" bodystart="21" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="fftext_8h_1a7f453092a717081e33e84f2aa2beaa57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void fftFree</definition>
        <argsstring>()</argsstring>
        <name>fftFree</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/ffts/src/fftext.h" line="19" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/ffts/src/fftext.c" bodystart="65" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="fftext_8h_1aa8d24377b6669b6fabdf8c81a4ce7260" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void ffts</definition>
        <argsstring>(float *data, long M, long Rows)</argsstring>
        <name>ffts</name>
        <param>
          <type>float *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>long</type>
          <declname>M</declname>
        </param>
        <param>
          <type>long</type>
          <declname>Rows</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/ffts/src/fftext.h" line="22" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/ffts/src/fftext.c" bodystart="87" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="fftext_8h_1a31879ac870f1e89c81a1e914de2ea1bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void iffts</definition>
        <argsstring>(float *data, long M, long Rows)</argsstring>
        <name>iffts</name>
        <param>
          <type>float *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>long</type>
          <declname>M</declname>
        </param>
        <param>
          <type>long</type>
          <declname>Rows</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/ffts/src/fftext.h" line="31" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/ffts/src/fftext.c" bodystart="98" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="fftext_8h_1af10a67ac76af119dd518bc569b289d72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void rffts</definition>
        <argsstring>(float *data, long M, long Rows)</argsstring>
        <name>rffts</name>
        <param>
          <type>float *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>long</type>
          <declname>M</declname>
        </param>
        <param>
          <type>long</type>
          <declname>Rows</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/ffts/src/fftext.h" line="40" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/ffts/src/fftext.c" bodystart="109" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="fftext_8h_1a5c361784476375bff6cb785324b2acb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void riffts</definition>
        <argsstring>(float *data, long M, long Rows)</argsstring>
        <name>riffts</name>
        <param>
          <type>float *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>long</type>
          <declname>M</declname>
        </param>
        <param>
          <type>long</type>
          <declname>Rows</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/ffts/src/fftext.h" line="54" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/ffts/src/fftext.c" bodystart="125" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="fftext_8h_1a20e29c0dbef4cbf44e70fe1ee43d0c7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void rspectprod</definition>
        <argsstring>(float *data1, float *data2, float *outdata, long N)</argsstring>
        <name>rspectprod</name>
        <param>
          <type>float *</type>
          <declname>data1</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>data2</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>outdata</declname>
        </param>
        <param>
          <type>long</type>
          <declname>N</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/ffts/src/fftext.h" line="65" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/ffts/src/fftext.c" bodystart="138" bodyend="156"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*******************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>file<sp/>extends<sp/>the<sp/>fftlib<sp/>with<sp/>calls<sp/>to<sp/>maintain<sp/>the<sp/>cosine<sp/>and<sp/>bit<sp/>reversed<sp/>tables</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>for<sp/>you<sp/>(including<sp/>mallocs<sp/>and<sp/>free&apos;s).<sp/><sp/>Call<sp/>the<sp/>init<sp/>routine<sp/>for<sp/>each<sp/>fft<sp/>size<sp/>you<sp/>will</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/><sp/>be<sp/>using.<sp/><sp/>Then<sp/>you<sp/>can<sp/>call<sp/>the<sp/>fft<sp/>routines<sp/>below<sp/>which<sp/>will<sp/>make<sp/>the<sp/>fftlib<sp/>library<sp/></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>call<sp/>with<sp/>the<sp/>appropriate<sp/>tables<sp/>passed.<sp/><sp/>When<sp/>you<sp/>are<sp/>done<sp/>with<sp/>all<sp/>fft&apos;s<sp/>you<sp/>can<sp/>call<sp/></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/><sp/>fftfree<sp/>to<sp/>release<sp/>the<sp/>storage<sp/>for<sp/>the<sp/>tables.<sp/><sp/>Note<sp/>that<sp/>you<sp/>can<sp/>call<sp/>fftinit<sp/>repeatedly</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/><sp/>with<sp/>the<sp/>same<sp/>size,<sp/>the<sp/>extra<sp/>calls<sp/>will<sp/>be<sp/>ignored.<sp/>So,<sp/>you<sp/>could<sp/>make<sp/>a<sp/>macro<sp/>to<sp/>call</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/><sp/><sp/>fftInit<sp/>every<sp/>time<sp/>you<sp/>call<sp/>ffts.<sp/>For<sp/>example<sp/>you<sp/>could<sp/>have<sp/>someting<sp/>like:</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/><sp/><sp/>#define<sp/>FFT(a,n)<sp/>if(!fftInit(roundtol(LOG2(n))))<sp/>ffts(a,roundtol(LOG2(n)),1);else<sp/>printf(&quot;fft<sp/>error\n&quot;);</highlight></codeline>
<codeline lineno="10"><highlight class="comment">*******************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fftext_8h_1a6df620a166f1f7e9f5cd756d3adbc7ff" kindref="member">fftInit</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="convtest_8m_1aad05f78187c942f9dd521605fa81f1ba" kindref="member">M</ref>);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>malloc<sp/>and<sp/>init<sp/>cosine<sp/>and<sp/>bit<sp/>reversed<sp/>tables<sp/>for<sp/>a<sp/>given<sp/>size<sp/>fft,<sp/>ifft,<sp/>rfft,<sp/>rifft</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>INPUTS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>M<sp/>=<sp/>log2<sp/>of<sp/>fft<sp/>size<sp/>(ex<sp/>M=10<sp/>for<sp/>1024<sp/>point<sp/>fft)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>OUTPUTS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>private<sp/>cosine<sp/>and<sp/>bit<sp/>reversed<sp/>tables<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fftext_8h_1a7f453092a717081e33e84f2aa2beaa57" kindref="member">fftFree</ref>();</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>release<sp/>storage<sp/>for<sp/>all<sp/>private<sp/>cosine<sp/>and<sp/>bit<sp/>reversed<sp/>tables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fftext_8h_1aa8d24377b6669b6fabdf8c81a4ce7260" kindref="member">ffts</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="convtest_8m_1aad05f78187c942f9dd521605fa81f1ba" kindref="member">M</ref>,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Rows);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Compute<sp/>in-place<sp/>complex<sp/>fft<sp/>on<sp/>the<sp/>rows<sp/>of<sp/>the<sp/>input<sp/>array<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>INPUTS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>*ioptr<sp/>=<sp/>input<sp/>data<sp/>array<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>M<sp/>=<sp/>log2<sp/>of<sp/>fft<sp/>size<sp/>(ex<sp/>M=10<sp/>for<sp/>1024<sp/>point<sp/>fft)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Rows<sp/>=<sp/>number<sp/>of<sp/>rows<sp/>in<sp/>ioptr<sp/>array<sp/>(use<sp/>1<sp/>for<sp/>Rows<sp/>for<sp/>a<sp/>single<sp/>fft)<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>OUTPUTS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>*ioptr<sp/>=<sp/>output<sp/>data<sp/>array<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fftext_8h_1a31879ac870f1e89c81a1e914de2ea1bc" kindref="member">iffts</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="convtest_8m_1aad05f78187c942f9dd521605fa81f1ba" kindref="member">M</ref>,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Rows);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Compute<sp/>in-place<sp/>inverse<sp/>complex<sp/>fft<sp/>on<sp/>the<sp/>rows<sp/>of<sp/>the<sp/>input<sp/>array<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>INPUTS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>*ioptr<sp/>=<sp/>input<sp/>data<sp/>array<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>M<sp/>=<sp/>log2<sp/>of<sp/>fft<sp/>size<sp/>(ex<sp/>M=10<sp/>for<sp/>1024<sp/>point<sp/>fft)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Rows<sp/>=<sp/>number<sp/>of<sp/>rows<sp/>in<sp/>ioptr<sp/>array<sp/>(use<sp/>1<sp/>for<sp/>Rows<sp/>for<sp/>a<sp/>single<sp/>fft)<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>OUTPUTS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>*ioptr<sp/>=<sp/>output<sp/>data<sp/>array<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fftext_8h_1af10a67ac76af119dd518bc569b289d72" kindref="member">rffts</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="convtest_8m_1aad05f78187c942f9dd521605fa81f1ba" kindref="member">M</ref>,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Rows);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Compute<sp/>in-place<sp/>real<sp/>fft<sp/>on<sp/>the<sp/>rows<sp/>of<sp/>the<sp/>input<sp/>array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>result<sp/>is<sp/>the<sp/>complex<sp/>spectra<sp/>of<sp/>the<sp/>positive<sp/>frequencies<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>except<sp/>the<sp/>location<sp/>for<sp/>the<sp/>first<sp/>complex<sp/>number<sp/>contains<sp/>the<sp/>real<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>values<sp/>for<sp/>DC<sp/>and<sp/>Nyquest<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>See<sp/>rspectprod<sp/>for<sp/>multiplying<sp/>two<sp/>of<sp/>these<sp/>spectra<sp/>together-<sp/>ex.<sp/>for<sp/>fast<sp/>convolution<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>INPUTS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>*ioptr<sp/>=<sp/>real<sp/>input<sp/>data<sp/>array<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>M<sp/>=<sp/>log2<sp/>of<sp/>fft<sp/>size<sp/>(ex<sp/>M=10<sp/>for<sp/>1024<sp/>point<sp/>fft)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Rows<sp/>=<sp/>number<sp/>of<sp/>rows<sp/>in<sp/>ioptr<sp/>array<sp/>(use<sp/>1<sp/>for<sp/>Rows<sp/>for<sp/>a<sp/>single<sp/>fft)<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>OUTPUTS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>*ioptr<sp/>=<sp/>output<sp/>data<sp/>array<sp/><sp/><sp/>in<sp/>the<sp/>following<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Re(x[0]),<sp/>Re(x[N/2]),<sp/>Re(x[1]),<sp/>Im(x[1]),<sp/>Re(x[2]),<sp/>Im(x[2]),<sp/>...<sp/>Re(x[N/2-1]),<sp/>Im(x[N/2-1]).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fftext_8h_1a5c361784476375bff6cb785324b2acb9" kindref="member">riffts</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="convtest_8m_1aad05f78187c942f9dd521605fa81f1ba" kindref="member">M</ref>,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>Rows);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Compute<sp/>in-place<sp/>real<sp/>ifft<sp/>on<sp/>the<sp/>rows<sp/>of<sp/>the<sp/>input<sp/>array<sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>data<sp/>order<sp/>as<sp/>from<sp/>rffts<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>INPUTS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>*ioptr<sp/>=<sp/>input<sp/>data<sp/>array<sp/>in<sp/>the<sp/>following<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>M<sp/>=<sp/>log2<sp/>of<sp/>fft<sp/>size<sp/>(ex<sp/>M=10<sp/>for<sp/>1024<sp/>point<sp/>fft)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Re(x[0]),<sp/>Re(x[N/2]),<sp/>Re(x[1]),<sp/>Im(x[1]),<sp/>Re(x[2]),<sp/>Im(x[2]),<sp/>...<sp/>Re(x[N/2-1]),<sp/>Im(x[N/2-1]).<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Rows<sp/>=<sp/>number<sp/>of<sp/>rows<sp/>in<sp/>ioptr<sp/>array<sp/>(use<sp/>1<sp/>for<sp/>Rows<sp/>for<sp/>a<sp/>single<sp/>fft)<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>OUTPUTS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>*ioptr<sp/>=<sp/>real<sp/>output<sp/>data<sp/>array<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fftext_8h_1a20e29c0dbef4cbf44e70fe1ee43d0c7e" kindref="member">rspectprod</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*data1,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*data2,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*outdata,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1af6d1246b147a7c5763d9fc83082020ff" kindref="member">N</ref>);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//<sp/>When<sp/>multiplying<sp/>a<sp/>pair<sp/>of<sp/>spectra<sp/>from<sp/>rfft<sp/>care<sp/>must<sp/>be<sp/>taken<sp/>to<sp/>multiply<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/>two<sp/>real<sp/>values<sp/>seperately<sp/>from<sp/>the<sp/>complex<sp/>ones.<sp/>This<sp/>routine<sp/>does<sp/>it<sp/>correctly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>result<sp/>can<sp/>be<sp/>stored<sp/>in-place<sp/>over<sp/>one<sp/>of<sp/>the<sp/>inputs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>INPUTS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>*data1<sp/>=<sp/>input<sp/>data<sp/>array<sp/><sp/><sp/><sp/>first<sp/>spectra<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>*data2<sp/>=<sp/>input<sp/>data<sp/>array<sp/><sp/><sp/><sp/>second<sp/>spectra<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>N<sp/>=<sp/>fft<sp/>input<sp/>size<sp/>for<sp/>both<sp/>data1<sp/>and<sp/>data2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>OUTPUTS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>*outdata<sp/>=<sp/>output<sp/>data<sp/>array<sp/>spectra<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>following<sp/>is<sp/>FYI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">//Note<sp/>that<sp/>most<sp/>of<sp/>the<sp/>fft<sp/>routines<sp/>require<sp/>full<sp/>matrices,<sp/>ie<sp/>Rsiz==Ncols</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">//This<sp/>is<sp/>how<sp/>I<sp/>like<sp/>to<sp/>define<sp/>a<sp/>real<sp/>matrix:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">//struct<sp/>matrix<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>real<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>float<sp/>*d;<sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>pointer<sp/>to<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>long<sp/>Nrows;<sp/><sp/><sp/><sp/><sp/>//<sp/>number<sp/>of<sp/>rows<sp/>in<sp/>the<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>long<sp/>Ncols;<sp/><sp/><sp/><sp/><sp/>//<sp/>number<sp/>of<sp/>columns<sp/>in<sp/>the<sp/>matrix<sp/>(can<sp/>be<sp/>less<sp/>than<sp/>Rsiz)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>long<sp/>Rsiz;<sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>number<sp/>of<sp/>floats<sp/>from<sp/>one<sp/>row<sp/>to<sp/>the<sp/>next</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">//};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">//typedef<sp/>struct<sp/>matrix<sp/>matrix;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CACHEFILLMALLOC<sp/>and<sp/>CEILCACHELINE<sp/>can<sp/>be<sp/>used<sp/>instead<sp/>of<sp/>malloc<sp/>to<sp/>make</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment">//<sp/>arrays<sp/>that<sp/>start<sp/>exactly<sp/>on<sp/>a<sp/>cache<sp/>line<sp/>start.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment">//<sp/>First<sp/>we<sp/>CACHEFILLMALLOC<sp/>a<sp/>void<sp/>*<sp/>(use<sp/>this<sp/>void<sp/>*<sp/>when<sp/>free&apos;ing),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment">//<sp/>then<sp/>we<sp/>set<sp/>our<sp/>array<sp/>pointer<sp/>equal<sp/>to<sp/>the<sp/>properly<sp/>cast<sp/>CEILCACHELINE<sp/>of<sp/>this<sp/>void<sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="comment">//<sp/>example:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">//<sp/>aInit<sp/>=<sp/>CACHEFILLMALLOC(<sp/>NUMFLOATS*sizeof(float)<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">//<sp/>a<sp/>=<sp/>(float<sp/>*)<sp/>CEILCACHELINE(ainit);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment">//<sp/>...<sp/>main<sp/>body<sp/>of<sp/>code<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment">//<sp/>free(aInit);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment">//<sp/>To<sp/>disable<sp/>this<sp/>alignment,<sp/>set<sp/>CACHELINESIZE<sp/>to<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>CACHELINESIZE<sp/>32<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Bytes<sp/>per<sp/>cache<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>CACHELINEFILL<sp/>(CACHELINESIZE-1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>CEILCACHELINE(p)<sp/>((((unsigned<sp/>long)p+CACHELINEFILL)/CACHELINESIZE)*CACHELINESIZE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>CACHEFILLMALLOC(n)<sp/>malloc((n)+CACHELINEFILL)</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/ffts/src/fftext.h"/>
  </compounddef>
</doxygen>
