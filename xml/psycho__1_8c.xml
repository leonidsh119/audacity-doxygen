<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="psycho__1_8c" kind="file" language="C++">
    <compoundname>psycho_1.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">math.h</includes>
    <includes refid="twolame_8h" local="yes">twolame.h</includes>
    <includes refid="twolame_2libtwolame_2common_8h" local="yes">common.h</includes>
    <includes refid="twolame_2libtwolame_2mem_8h" local="yes">mem.h</includes>
    <includes refid="lib-src_2twolame_2libtwolame_2fft_8h" local="yes">fft.h</includes>
    <includes refid="psycho__1_8h" local="yes">psycho_1.h</includes>
    <includes refid="psycho__1__critband_8h" local="yes">psycho_1_critband.h</includes>
    <includes refid="psycho__1__freqtable_8h" local="yes">psycho_1_freqtable.h</includes>
    <incdepgraph>
      <node id="32541">
        <label>psycho_1_freqtable.h</label>
        <link refid="psycho__1__freqtable_8h"/>
      </node>
      <node id="32532">
        <label>stdlib.h</label>
      </node>
      <node id="32534">
        <label>twolame.h</label>
        <link refid="twolame_8h"/>
      </node>
      <node id="32540">
        <label>psycho_1_critband.h</label>
        <link refid="psycho__1__critband_8h"/>
      </node>
      <node id="32538">
        <label>fft.h</label>
        <link refid="lib-src_2twolame_2libtwolame_2fft_8h"/>
      </node>
      <node id="32533">
        <label>math.h</label>
      </node>
      <node id="32536">
        <label>config.h</label>
      </node>
      <node id="32530">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/psycho_1.c</label>
        <link refid="psycho_1.c"/>
        <childnode refid="32531" relation="include">
        </childnode>
        <childnode refid="32532" relation="include">
        </childnode>
        <childnode refid="32533" relation="include">
        </childnode>
        <childnode refid="32534" relation="include">
        </childnode>
        <childnode refid="32535" relation="include">
        </childnode>
        <childnode refid="32537" relation="include">
        </childnode>
        <childnode refid="32538" relation="include">
        </childnode>
        <childnode refid="32539" relation="include">
        </childnode>
        <childnode refid="32540" relation="include">
        </childnode>
        <childnode refid="32541" relation="include">
        </childnode>
      </node>
      <node id="32539">
        <label>psycho_1.h</label>
        <link refid="psycho__1_8h"/>
      </node>
      <node id="32531">
        <label>stdio.h</label>
      </node>
      <node id="32535">
        <label>common.h</label>
        <link refid="twolame_2libtwolame_2common_8h"/>
        <childnode refid="32536" relation="include">
        </childnode>
        <childnode refid="32534" relation="include">
        </childnode>
      </node>
      <node id="32537">
        <label>mem.h</label>
        <link refid="twolame_2libtwolame_2mem_8h"/>
        <childnode refid="32535" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="psycho__1_8c_1aa5676f82f38bd25a2fb2eaa55d2fdce1" prot="public" static="no">
        <name>CF</name>
        <initializer>1073741824           /* pow(10, 0.1*<ref refid="twolame_2libtwolame_2common_8h_1afb942668d8de7aa87c6237137b74f704" kindref="member">POWERNORM</ref>) */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/psycho_1.c" line="200" column="9"/>
      </memberdef>
      <memberdef kind="define" id="psycho__1_8c_1a84914100ffdee878947313c3e7059c49" prot="public" static="no">
        <name>DBM</name>
        <initializer>1E-20              /* pow(10.0, 0.1*DBMIN */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/psycho_1.c" line="201" column="9"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="psycho__1_8c_1a1502a4f44b225b5f32b7c6300dca9e25" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
        <definition>static int* psycho_1_read_cbound</definition>
        <argsstring>(int lay, int freq, int *crit_band)</argsstring>
        <name>psycho_1_read_cbound</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>lay</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>freq</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>crit_band</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/psycho_1.c" line="46" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/psycho_1.c" bodystart="46" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="psycho__1_8c_1a0939da3089bd2aafe2a2ce58d0869f8b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void psycho_1_read_freq_band</definition>
        <argsstring>(g_ptr *ltg, int lay, int freq, int *sub_size)</argsstring>
        <name>psycho_1_read_freq_band</name>
        <param>
          <type><ref refid="twolame_2libtwolame_2common_8h_1a9df74e827c067b555fc5b8cf7c203a32" kindref="member">g_ptr</ref> *</type>
          <declname>ltg</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>lay</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>freq</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>sub_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/psycho_1.c" line="78" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/psycho_1.c" bodystart="78" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="psycho__1_8c_1afe0413ebfda221d5073516ca5efc6f64" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void psycho_1_make_map</definition>
        <argsstring>(int sub_size, mask power[HAN_SIZE], g_thres *ltg)</argsstring>
        <name>psycho_1_make_map</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>sub_size</declname>
        </param>
        <param>
          <type><ref refid="structmask" kindref="compound">mask</ref></type>
          <declname>power</declname>
          <array>[HAN_SIZE]</array>
        </param>
        <param>
          <type><ref refid="structg__thres" kindref="compound">g_thres</ref> *</type>
          <declname>ltg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/psycho_1.c" line="111" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/psycho_1.c" bodystart="111" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="psycho__1_8c_1a81adc53e46facd99b61ed1d8b897b89b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void psycho_1_init_add_db</definition>
        <argsstring>(psycho_1_mem *mem)</argsstring>
        <name>psycho_1_init_add_db</name>
        <param>
          <type><ref refid="twolame_2libtwolame_2common_8h_1a114e306875704b4b2951ad89b8b92355" kindref="member">psycho_1_mem</ref> *</type>
          <declname>mem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/psycho_1.c" line="121" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/psycho_1.c" bodystart="121" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="psycho__1_8c_1a51c5708e5e6d610b75aa7a1fdaab5bee" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref></type>
        <definition>static FLOAT add_db</definition>
        <argsstring>(psycho_1_mem *mem, FLOAT a, FLOAT b)</argsstring>
        <name>add_db</name>
        <param>
          <type><ref refid="twolame_2libtwolame_2common_8h_1a114e306875704b4b2951ad89b8b92355" kindref="member">psycho_1_mem</ref> *</type>
          <declname>mem</declname>
        </param>
        <param>
          <type><ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/psycho_1.c" line="131" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/psycho_1.c" bodystart="131" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="psycho__1_8c_1a3c5567461584d742fa20a0f9f73d5c12" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void psycho_1_hann_fft_pickmax</definition>
        <argsstring>(FLOAT sample[FFT_SIZE], mask power[HAN_SIZE], FLOAT spike[SBLIMIT], FLOAT energy[FFT_SIZE])</argsstring>
        <name>psycho_1_hann_fft_pickmax</name>
        <param>
          <type><ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref></type>
          <declname>sample</declname>
          <array>[FFT_SIZE]</array>
        </param>
        <param>
          <type><ref refid="structmask" kindref="compound">mask</ref></type>
          <declname>power</declname>
          <array>[HAN_SIZE]</array>
        </param>
        <param>
          <type><ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref></type>
          <declname>spike</declname>
          <array>[SBLIMIT]</array>
        </param>
        <param>
          <type><ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref></type>
          <declname>energy</declname>
          <array>[FFT_SIZE]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/psycho_1.c" line="164" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/psycho_1.c" bodystart="164" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="psycho__1_8c_1a95f94050ad1887497d8b43708cf8e327" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void psycho_1_tonal_label</definition>
        <argsstring>(psycho_1_mem *mem, int *tone)</argsstring>
        <name>psycho_1_tonal_label</name>
        <param>
          <type><ref refid="twolame_2libtwolame_2common_8h_1a114e306875704b4b2951ad89b8b92355" kindref="member">psycho_1_mem</ref> *</type>
          <declname>mem</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>tone</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/psycho_1.c" line="215" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/psycho_1.c" bodystart="215" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="psycho__1_8c_1a1a8a877b5724d6da8596a879ac1bd47c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void psycho_1_noise_label</definition>
        <argsstring>(psycho_1_mem *mem, int *noise, FLOAT energy[FFT_SIZE])</argsstring>
        <name>psycho_1_noise_label</name>
        <param>
          <type><ref refid="twolame_2libtwolame_2common_8h_1a114e306875704b4b2951ad89b8b92355" kindref="member">psycho_1_mem</ref> *</type>
          <declname>mem</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>noise</declname>
        </param>
        <param>
          <type><ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref></type>
          <declname>energy</declname>
          <array>[FFT_SIZE]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/psycho_1.c" line="299" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/psycho_1.c" bodystart="299" bodyend="353"/>
      </memberdef>
      <memberdef kind="function" id="psycho__1_8c_1ad03f49ead4e9ea1ddc2e0c1bdfd3541a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void psycho_1_subsampling</definition>
        <argsstring>(mask power[HAN_SIZE], g_thres *ltg, int *tone, int *noise)</argsstring>
        <name>psycho_1_subsampling</name>
        <param>
          <type><ref refid="structmask" kindref="compound">mask</ref></type>
          <declname>power</declname>
          <array>[HAN_SIZE]</array>
        </param>
        <param>
          <type><ref refid="structg__thres" kindref="compound">g_thres</ref> *</type>
          <declname>ltg</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>tone</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>noise</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/psycho_1.c" line="362" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/psycho_1.c" bodystart="362" bodyend="421"/>
      </memberdef>
      <memberdef kind="function" id="psycho__1_8c_1a3b3920c715bff6dbfed61a0f5640acf9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void psycho_1_threshold</definition>
        <argsstring>(psycho_1_mem *mem, int *tone, int *noise, int bit_rate)</argsstring>
        <name>psycho_1_threshold</name>
        <param>
          <type><ref refid="twolame_2libtwolame_2common_8h_1a114e306875704b4b2951ad89b8b92355" kindref="member">psycho_1_mem</ref> *</type>
          <declname>mem</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>tone</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>noise</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>bit_rate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/psycho_1.c" line="431" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/psycho_1.c" bodystart="431" bodyend="484"/>
      </memberdef>
      <memberdef kind="function" id="psycho__1_8c_1ac4419c5d2458fd9a3f68e63c311ed73f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void psycho_1_minimum_mask</definition>
        <argsstring>(int sub_size, g_thres *ltg, FLOAT ltmin[SBLIMIT], int sblimit)</argsstring>
        <name>psycho_1_minimum_mask</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>sub_size</declname>
        </param>
        <param>
          <type><ref refid="structg__thres" kindref="compound">g_thres</ref> *</type>
          <declname>ltg</declname>
        </param>
        <param>
          <type><ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref></type>
          <declname>ltmin</declname>
          <array>[SBLIMIT]</array>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>sblimit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/psycho_1.c" line="493" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/psycho_1.c" bodystart="493" bodyend="511"/>
      </memberdef>
      <memberdef kind="function" id="psycho__1_8c_1a46b8921da51642622c31a560ce62baf7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void psycho_1_smr</definition>
        <argsstring>(FLOAT ltmin[SBLIMIT], FLOAT spike[SBLIMIT], FLOAT scale[SBLIMIT], int sblimit)</argsstring>
        <name>psycho_1_smr</name>
        <param>
          <type><ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref></type>
          <declname>ltmin</declname>
          <array>[SBLIMIT]</array>
        </param>
        <param>
          <type><ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref></type>
          <declname>spike</declname>
          <array>[SBLIMIT]</array>
        </param>
        <param>
          <type><ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref></type>
          <declname>scale</declname>
          <array>[SBLIMIT]</array>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>sblimit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/psycho_1.c" line="520" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/psycho_1.c" bodystart="520" bodyend="533"/>
      </memberdef>
      <memberdef kind="function" id="psycho__1_8c_1ad0277cd7e30c0f449b67ac1d9e82efcc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void psycho_1</definition>
        <argsstring>(twolame_options *glopts, short buffer[2][1152], FLOAT scale[2][SBLIMIT], FLOAT ltmin[2][SBLIMIT])</argsstring>
        <name>psycho_1</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type>short</type>
          <declname>buffer</declname>
          <array>[2][1152]</array>
        </param>
        <param>
          <type><ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref></type>
          <declname>scale</declname>
          <array>[2][SBLIMIT]</array>
        </param>
        <param>
          <type><ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref></type>
          <declname>ltmin</declname>
          <array>[2][SBLIMIT]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/psycho_1.c" line="559" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/psycho_1.c" bodystart="559" bodyend="634"/>
      </memberdef>
      <memberdef kind="function" id="psycho__1_8c_1ac63f2aef19e37ae3b1396dcfda161eee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void psycho_1_deinit</definition>
        <argsstring>(psycho_1_mem **mem)</argsstring>
        <name>psycho_1_deinit</name>
        <param>
          <type><ref refid="twolame_2libtwolame_2common_8h_1a114e306875704b4b2951ad89b8b92355" kindref="member">psycho_1_mem</ref> **</type>
          <declname>mem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/psycho_1.c" line="636" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/psycho_1.c" bodystart="636" bodyend="646"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/>TwoLAME:<sp/>an<sp/>optimized<sp/>MPEG<sp/>Audio<sp/>Layer<sp/>Two<sp/>encoder</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>(C)<sp/>2001-2004<sp/>Michael<sp/>Cheng</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>(C)<sp/>2004-2006<sp/>The<sp/>TwoLAME<sp/>Project</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>library<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/>modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/>License<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/>version<sp/>2.1<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>library<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/>License<sp/>along<sp/>with<sp/>this<sp/>library;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/>Foundation,<sp/>Inc.,<sp/>59<sp/>Temple<sp/>Place,<sp/>Suite<sp/>330,<sp/>Boston,<sp/>MA<sp/><sp/>02111-1307<sp/><sp/>USA</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/><sp/>$Id$</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="twolame_8h" kindref="compound">twolame.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="twolame_2libtwolame_2common_8h" kindref="compound">common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="twolame_2libtwolame_2mem_8h" kindref="compound">mem.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lib-src_2twolame_2libtwolame_2fft_8h" kindref="compound">fft.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="psycho__1_8h" kindref="compound">psycho_1.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="37"><highlight class="comment"></highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>module<sp/>implements<sp/>the<sp/>psychoacoustic<sp/>model<sp/>I<sp/>for<sp/>the</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>MPEG<sp/>encoder<sp/>layer<sp/>II.<sp/>It<sp/>uses<sp/>simplified<sp/>tonal<sp/>and<sp/>noise<sp/>masking</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>threshold<sp/>analysis<sp/>to<sp/>generate<sp/>SMR<sp/>for<sp/>the<sp/>encoder<sp/>bit<sp/>allocation</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>routine.</highlight></codeline>
<codeline lineno="42"><highlight class="comment"></highlight></codeline>
<codeline lineno="43"><highlight class="comment">**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*psycho_1_read_cbound(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lay,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>freq,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*crit_band)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>this<sp/>function<sp/>reads<sp/>in<sp/>critical<sp/><sp/>band<sp/>boundaries<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="psycho__1__critband_8h" kindref="compound">psycho_1_critband.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*cbound;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((lay<sp/>&lt;<sp/>1)<sp/>||<sp/>(lay<sp/>&gt;<sp/>2))<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Internal<sp/>error<sp/>(read_cbound())\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((freq<sp/>&lt;<sp/>0)<sp/>||<sp/>(freq<sp/>&gt;<sp/>6)<sp/>||<sp/>(freq<sp/>==<sp/>3))<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Internal<sp/>error<sp/>(read_cbound())\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>*crit_band<sp/>=<sp/>SecondCriticalBand[freq][0];</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>cbound<sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*)<sp/><ref refid="twolame_2libtwolame_2mem_8h_1a5c998cfb7ed77f0c7967b685235f8ba5" kindref="member">TWOLAME_MALLOC</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>*<sp/>*crit_band);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>*crit_band;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>=<sp/>SecondCriticalBand[freq][i<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(k<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cbound[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Internal<sp/>error<sp/>(read_cbound())\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(cbound);</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>reads<sp/>in<sp/>the<sp/>frequency<sp/>bands<sp/>and<sp/>bark<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>psycho_1_read_freq_band(<ref refid="structg__thres" kindref="compound">g_ptr</ref><sp/>*<sp/>ltg,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lay,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>freq,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*sub_size)</highlight></codeline>
<codeline lineno="79"><highlight class="normal">{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="psycho__1__freqtable_8h" kindref="compound">psycho_1_freqtable.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((freq<sp/>&lt;<sp/>0)<sp/>||<sp/>(freq<sp/>&gt;<sp/>6)<sp/>||<sp/>(freq<sp/>==<sp/>3))<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Internal<sp/>error<sp/>(read_freq_band())\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>input<sp/>for<sp/>freq.<sp/>subbands<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>*sub_size<sp/>=<sp/>SecondFreqEntries[freq]<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>*ltg<sp/>=<sp/>(<ref refid="twolame_2libtwolame_2common_8h_1a9df74e827c067b555fc5b8cf7c203a32" kindref="member">g_ptr</ref>)<sp/><ref refid="twolame_2libtwolame_2mem_8h_1a5c998cfb7ed77f0c7967b685235f8ba5" kindref="member">TWOLAME_MALLOC</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structg__thres" kindref="compound">g_thres</ref>)<sp/>*<sp/>*sub_size);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>(*ltg)[0].line<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>initialize<sp/>global<sp/>masking<sp/>threshold<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>(*ltg)[0].bark<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>(*ltg)[0].hear<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>*sub_size;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>=<sp/>SecondFreqSubband[freq][i<sp/>-<sp/>1].line;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(k<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*ltg)[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].line<sp/>=<sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*ltg)[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].bark<sp/>=<sp/>SecondFreqSubband[freq][i<sp/>-<sp/>1].bark;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*ltg)[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].hear<sp/>=<sp/>SecondFreqSubband[freq][i<sp/>-<sp/>1].hear;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Internal<sp/>error<sp/>(read_freq_band())\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>psycho_1_make_map(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sub_size,<sp/><ref refid="structmask" kindref="compound">mask</ref><sp/>power[<ref refid="twolame_2libtwolame_2common_8h_1a93dad85e78d1cbd33689d6f8f98de324" kindref="member">HAN_SIZE</ref>],<sp/><ref refid="structg__thres" kindref="compound">g_thres</ref><sp/>*<sp/>ltg)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>this<sp/>function<sp/>calculates<sp/>the<sp/>global<sp/>masking<sp/>threshold<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal">{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/>j;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>sub_size;<sp/>i++)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>ltg[i<sp/>-<sp/>1].<ref refid="seqread_8c_1aad9ebcdde542d8b2075615388ff15a9c" kindref="member">line</ref>;<sp/>j<sp/>&lt;=<sp/>ltg[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].<ref refid="structg__thres_1a83b4b3155ab893f1d3bce92cc9b7d635" kindref="member">line</ref>;<sp/>j++)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>power[j].<ref refid="structmap" kindref="compound">map</ref><sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>psycho_1_init_add_db(<ref refid="structpsycho__1__mem__struct" kindref="compound">psycho_1_mem</ref><sp/>*<sp/>mem)</highlight></codeline>
<codeline lineno="122"><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref><sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="twolame_2libtwolame_2common_8h_1a5b6a0dc416c04345a9ff28dce6948aff" kindref="member">DBTAB</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>(<ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref>)<sp/>i<sp/>/<sp/>10.0;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mem-&gt;<ref refid="structpsycho__1__mem__struct_1ac3ed9fc5d17b6769b607f30b59171f7f" kindref="member">dbtable</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>10<sp/>*<sp/>log10(1<sp/>+<sp/>pow(10.0,<sp/>x<sp/>/<sp/>10.0))<sp/>-<sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref><sp/>add_db(<ref refid="structpsycho__1__mem__struct" kindref="compound">psycho_1_mem</ref><sp/>*<sp/>mem,<sp/><ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref><sp/><ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>,<sp/><ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref><sp/><ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>)</highlight></codeline>
<codeline lineno="132"><highlight class="normal">{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>MFC<sp/>-<sp/>if<sp/>the<sp/>difference<sp/>between<sp/>a<sp/>and<sp/>b<sp/>is<sp/>large<sp/>(&gt;99),<sp/>then<sp/>just<sp/>return<sp/>the<sp/>largest<sp/>one.</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(about<sp/>10%<sp/>of<sp/>the<sp/>time)<sp/>-<sp/>For<sp/>differences<sp/>between<sp/>0<sp/>and<sp/>99,<sp/>return<sp/>the<sp/>largest<sp/>value,<sp/>but</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add<sp/>in<sp/>a<sp/>pre-calculated<sp/>difference<sp/>value.<sp/>-<sp/>the<sp/>value<sp/>99<sp/>was<sp/>chosen<sp/>arbitarily.<sp/>-<sp/>maximum</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(a-b)<sp/>i&apos;ve<sp/>seen<sp/>is<sp/>572<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref><sp/>fdiff;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idiff;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>fdiff<sp/>=<sp/>(10.0<sp/>*<sp/>(a<sp/>-<sp/><ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>));</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fdiff<sp/>&gt;<sp/>990.0)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fdiff<sp/>&lt;<sp/>-990.0)<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(b);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>idiff<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)<sp/>fdiff;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(idiff<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(a<sp/>+<sp/>mem-&gt;<ref refid="structpsycho__1__mem__struct_1ac3ed9fc5d17b6769b607f30b59171f7f" kindref="member">dbtable</ref>[idiff]);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(b<sp/>+<sp/>mem-&gt;<ref refid="structpsycho__1__mem__struct_1ac3ed9fc5d17b6769b607f30b59171f7f" kindref="member">dbtable</ref>[-idiff]);</highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="comment">/****************************************************************</highlight></codeline>
<codeline lineno="157"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Window<sp/>the<sp/>samples<sp/>then,<sp/></highlight></codeline>
<codeline lineno="158"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Fast<sp/>Fourier<sp/>transform<sp/>of<sp/>the<sp/>input<sp/>samples.</highlight></codeline>
<codeline lineno="159"><highlight class="comment">*<sp/></highlight></codeline>
<codeline lineno="160"><highlight class="comment">*<sp/><sp/><sp/>(<sp/><sp/>call<sp/>the<sp/>FHT-based<sp/>fft()<sp/>in<sp/>fft.c<sp/>)</highlight></codeline>
<codeline lineno="161"><highlight class="comment">*<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="162"><highlight class="comment">*</highlight></codeline>
<codeline lineno="163"><highlight class="comment">****************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>psycho_1_hann_fft_pickmax(<ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref><sp/>sample[<ref refid="twolame_2libtwolame_2common_8h_1a636ddc19af00bc87969a07c88331f105" kindref="member">FFT_SIZE</ref>],<sp/><ref refid="structmask" kindref="compound">mask</ref><sp/>power[HAN_SIZE],</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref><sp/>spike[<ref refid="twolame_2libtwolame_2common_8h_1aae2d5a401c55c6b2b834c99340911fdb" kindref="member">SBLIMIT</ref>],<sp/><ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref><sp/>energy[FFT_SIZE])</highlight></codeline>
<codeline lineno="166"><highlight class="normal">{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref><sp/>x_real[<ref refid="twolame_2libtwolame_2common_8h_1a636ddc19af00bc87969a07c88331f105" kindref="member">FFT_SIZE</ref>];</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/>j;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref><sp/>sqrt_8_over_3;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="seqread_8c_1aa21af39fe271e7a7e1f388c5627e7fc1" kindref="member">init</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref><sp/>window[<ref refid="twolame_2libtwolame_2common_8h_1a636ddc19af00bc87969a07c88331f105" kindref="member">FFT_SIZE</ref>];</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref><sp/>sum;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!init)<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>calculate<sp/>window<sp/>function<sp/>for<sp/>the<sp/>Fourier<sp/>transform<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>These<sp/>values<sp/>need<sp/>only<sp/>be<sp/>initiliased<sp/>once,<sp/>regardless<sp/>of<sp/>the<sp/>caller<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sqrt_8_over_3<sp/>=<sp/>pow(8.0<sp/>/<sp/>3.0,<sp/>0.5);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="twolame_2libtwolame_2common_8h_1a636ddc19af00bc87969a07c88331f105" kindref="member">FFT_SIZE</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Hann<sp/>window<sp/>formula<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>sqrt_8_over_3<sp/>*<sp/>0.5<sp/>*<sp/>(1<sp/>-<sp/><ref refid="pffft_8c_1a57a66355e043ccefc17aca9338a2b748" kindref="member">cos</ref>(2.0<sp/>*<sp/><ref refid="fftr4_8c_1a598a3330b3c21701223ee0ca14316eca" kindref="member">PI</ref><sp/>*<sp/>i<sp/>/<sp/>(FFT_SIZE)))<sp/>/<sp/>FFT_SIZE;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>init<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="twolame_2libtwolame_2common_8h_1a636ddc19af00bc87969a07c88331f105" kindref="member">FFT_SIZE</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x_real[i]<sp/>=<sp/>(<ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref>)<sp/>(sample[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>*<sp/>window[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_2libtwolame_2fft_8c_1abfdef39cddd7728d78d49f1bf87aa861" kindref="member">psycho_1_fft</ref>(x_real,<sp/>energy,<sp/>FFT_SIZE);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="twolame_2libtwolame_2common_8h_1a93dad85e78d1cbd33689d6f8f98de324" kindref="member">HAN_SIZE</ref>;<sp/>i++)<sp/>{<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>calculate<sp/>power<sp/>density<sp/>spectrum<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(energy[i]<sp/>&lt;<sp/>1<ref refid="twolame_2libtwolame_2common_8h_1a07484107e6d9fdf38b53edf631d6511d" kindref="member">E</ref>-20)</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>power[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].x<sp/>=<sp/>-200.0<sp/>+<sp/><ref refid="twolame_2libtwolame_2common_8h_1afb942668d8de7aa87c6237137b74f704" kindref="member">POWERNORM</ref>;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>power[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].x<sp/>=<sp/>10<sp/>*<sp/>log10(energy[i])<sp/>+<sp/><ref refid="twolame_2libtwolame_2common_8h_1afb942668d8de7aa87c6237137b74f704" kindref="member">POWERNORM</ref>;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>power[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].next<sp/>=<sp/><ref refid="twolame_2libtwolame_2common_8h_1ae19b6bb2940d2fbe0a79852b070eeafd" kindref="member">STOP</ref>;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>power[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].type<sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calculate<sp/>the<sp/>sum<sp/>of<sp/>spectral<sp/>component<sp/>in<sp/>each<sp/>subband<sp/>from<sp/>bound<sp/>4-16<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CF<sp/>1073741824<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>pow(10,<sp/>0.1*POWERNORM)<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DBM<sp/><sp/>1E-20<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>pow(10.0,<sp/>0.1*DBMIN<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>HAN_SIZE;<sp/>spike[i<sp/>&gt;&gt;<sp/>4]<sp/>=<sp/>10.0<sp/>*<sp/>log10(sum),<sp/>i<sp/>+=<sp/>16)<sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0,<sp/>sum<sp/>=<sp/><ref refid="psycho__1_8c_1a84914100ffdee878947313c3e7059c49" kindref="member">DBM</ref>;<sp/>j<sp/>&lt;<sp/>16;<sp/>j++)</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum<sp/>+=<sp/><ref refid="psycho__1_8c_1aa5676f82f38bd25a2fb2eaa55d2fdce1" kindref="member">CF</ref><sp/>*<sp/>energy[i<sp/>+<sp/>j];</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal">}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="comment">/****************************************************************</highlight></codeline>
<codeline lineno="209"><highlight class="comment">*</highlight></codeline>
<codeline lineno="210"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>function<sp/>labels<sp/>the<sp/>tonal<sp/>component<sp/>in<sp/>the<sp/>power</highlight></codeline>
<codeline lineno="211"><highlight class="comment">*<sp/>spectrum.</highlight></codeline>
<codeline lineno="212"><highlight class="comment">*</highlight></codeline>
<codeline lineno="213"><highlight class="comment">****************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>psycho_1_tonal_label(<ref refid="structpsycho__1__mem__struct" kindref="compound">psycho_1_mem</ref><sp/>*<sp/>mem,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*tone)</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>this<sp/>function<sp/>extracts<sp/>(tonal)<sp/><sp/>sinusoidals<sp/>from<sp/>the<sp/>spectrum<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal">{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/>j,<sp/><ref refid="record_8c_1a6c49eed6a71ecf58a51b1f64f4ec8e55" kindref="member">last</ref><sp/>=<sp/><ref refid="twolame_2libtwolame_2common_8h_1a210af1d04c8870416a556f0e9a5194fd" kindref="member">LAST</ref>,<sp/>first,<sp/><ref refid="namespacewaflib_1_1_task_1a859c6336afe027ae782f84b9e49a4f0f" kindref="member">run</ref>,<sp/>last_but_one<sp/>=<sp/><ref refid="twolame_2libtwolame_2common_8h_1a210af1d04c8870416a556f0e9a5194fd" kindref="member">LAST</ref>;<sp/></highlight><highlight class="comment">/*<sp/>dpwe<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref><sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmask" kindref="compound">mask</ref><sp/>*power<sp/>=<sp/>mem-&gt;<ref refid="structpsycho__1__mem__struct_1aaef0599267564801453f2bab3048f23f" kindref="member">power</ref>;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>*tone<sp/>=<sp/><ref refid="twolame_2libtwolame_2common_8h_1a210af1d04c8870416a556f0e9a5194fd" kindref="member">LAST</ref>;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>2;<sp/>i<sp/>&lt;<sp/>HAN_SIZE<sp/>-<sp/>12;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(power[i].x<sp/>&gt;<sp/>power[i<sp/>-<sp/>1].x<sp/>&amp;&amp;<sp/>power[i].x<sp/>&gt;=<sp/>power[i<sp/>+<sp/>1].x)<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>power[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].<ref refid="structmask_1a83d6d319f1f4d045776dfdc4355282ac" kindref="member">type</ref><sp/>=<sp/><ref refid="twolame_2libtwolame_2common_8h_1a7d78600ab45cf9cc99cdbdde12f761c6" kindref="member">TONE</ref>;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>power[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].<ref refid="structmask_1a9b432c51c3485f1630fee3b8a37f2331" kindref="member">next</ref><sp/>=<sp/><ref refid="twolame_2libtwolame_2common_8h_1a210af1d04c8870416a556f0e9a5194fd" kindref="member">LAST</ref>;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(last<sp/>!=<sp/><ref refid="twolame_2libtwolame_2common_8h_1a210af1d04c8870416a556f0e9a5194fd" kindref="member">LAST</ref>)</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>power[<ref refid="record_8c_1a6c49eed6a71ecf58a51b1f64f4ec8e55" kindref="member">last</ref>].<ref refid="structmask_1a9b432c51c3485f1630fee3b8a37f2331" kindref="member">next</ref><sp/>=<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first<sp/>=<sp/>*tone<sp/>=<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last<sp/>=<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>last<sp/>=<sp/><ref refid="twolame_2libtwolame_2common_8h_1a210af1d04c8870416a556f0e9a5194fd" kindref="member">LAST</ref>;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>first<sp/>=<sp/>*tone;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>*tone<sp/>=<sp/><ref refid="twolame_2libtwolame_2common_8h_1a210af1d04c8870416a556f0e9a5194fd" kindref="member">LAST</ref>;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((first<sp/>!=<sp/><ref refid="twolame_2libtwolame_2common_8h_1a210af1d04c8870416a556f0e9a5194fd" kindref="member">LAST</ref>)<sp/>&amp;&amp;<sp/>(first<sp/>!=<sp/><ref refid="twolame_2libtwolame_2common_8h_1ae19b6bb2940d2fbe0a79852b070eeafd" kindref="member">STOP</ref>))<sp/>{<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>conditions<sp/>for<sp/>the<sp/>tonal<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(first<sp/>&lt;<sp/>3<sp/>||<sp/>first<sp/>&gt;<sp/>500)</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>run<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>otherwise<sp/>k+/-j<sp/>will<sp/>be<sp/>out<sp/>of<sp/>bounds<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(first<sp/>&lt;<sp/>63)</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>run<sp/>=<sp/>2;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>components<sp/>in<sp/>layer<sp/>II,<sp/>which<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(first<sp/>&lt;<sp/>127)</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>run<sp/>=<sp/>3;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>are<sp/>the<sp/>boundaries<sp/>for<sp/>calc.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(first<sp/>&lt;<sp/>255)</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>run<sp/>=<sp/>6;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>tonal<sp/>components<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>run<sp/>=<sp/>12;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max<sp/>=<sp/>power[first].<ref refid="structmask_1a9de036816c9a31cb8840c86c03e5304e" kindref="member">x</ref><sp/>-<sp/>7;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>after<sp/>calculation<sp/>of<sp/>tonal<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>2;<sp/>j<sp/>&lt;=<sp/><ref refid="namespacewaflib_1_1_task_1a859c6336afe027ae782f84b9e49a4f0f" kindref="member">run</ref>;<sp/>j++)<sp/><sp/></highlight><highlight class="comment">/*<sp/>components,<sp/>set<sp/>to<sp/>local<sp/>max<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(max<sp/>&lt;<sp/>power[first<sp/>-<sp/>j].x<sp/>||<sp/>max<sp/>&lt;<sp/>power[first<sp/>+<sp/>j].x)<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>power[first].<ref refid="structmask_1a83d6d319f1f4d045776dfdc4355282ac" kindref="member">type</ref><sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(power[first].<ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref><sp/>==<sp/><ref refid="twolame_2libtwolame_2common_8h_1a7d78600ab45cf9cc99cdbdde12f761c6" kindref="member">TONE</ref>)<sp/>{<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>extract<sp/>tonal<sp/>components<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>help<sp/>=<sp/>first;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*tone<sp/>==<sp/><ref refid="twolame_2libtwolame_2common_8h_1a210af1d04c8870416a556f0e9a5194fd" kindref="member">LAST</ref>)</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*tone<sp/>=<sp/>first;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((power[help].<ref refid="record_8c_1a9b790a854eb0e06cd42c8d28a30db97d" kindref="member">next</ref><sp/>!=<sp/><ref refid="twolame_2libtwolame_2common_8h_1a210af1d04c8870416a556f0e9a5194fd" kindref="member">LAST</ref>)<sp/>&amp;&amp;<sp/>(power[help].<ref refid="record_8c_1a9b790a854eb0e06cd42c8d28a30db97d" kindref="member">next</ref><sp/>-<sp/>first)<sp/>&lt;=<sp/>run)</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>help<sp/>=<sp/>power[help].<ref refid="structmask_1a9b432c51c3485f1630fee3b8a37f2331" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>help<sp/>=<sp/>power[help].<ref refid="structmask_1a9b432c51c3485f1630fee3b8a37f2331" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>power[first].<ref refid="structmask_1a9b432c51c3485f1630fee3b8a37f2331" kindref="member">next</ref><sp/>=<sp/>help;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((first<sp/>-<sp/>last)<sp/>&lt;=<sp/>run)<sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(last_but_one<sp/>!=<sp/><ref refid="twolame_2libtwolame_2common_8h_1a210af1d04c8870416a556f0e9a5194fd" kindref="member">LAST</ref>)</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>power[last_but_one].<ref refid="structmask_1a9b432c51c3485f1630fee3b8a37f2331" kindref="member">next</ref><sp/>=<sp/>first;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(first<sp/>&gt;<sp/>1<sp/>&amp;&amp;<sp/>first<sp/>&lt;<sp/>500)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>calculate<sp/>the<sp/>sum<sp/>of<sp/>the<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref><sp/>tmp;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>powers<sp/>of<sp/>the<sp/>components<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>add_db(mem,<sp/>power[first<sp/>-<sp/>1].x,<sp/>power[first<sp/>+<sp/>1].x);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>power[first].<ref refid="structmask_1a9de036816c9a31cb8840c86c03e5304e" kindref="member">x</ref><sp/>=<sp/>add_db(mem,<sp/>power[first].x,<sp/>tmp);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>1;<sp/>j<sp/>&lt;=<sp/><ref refid="namespacewaflib_1_1_task_1a859c6336afe027ae782f84b9e49a4f0f" kindref="member">run</ref>;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>power[first<sp/>-<sp/>j].<ref refid="structmask_1a9de036816c9a31cb8840c86c03e5304e" kindref="member">x</ref><sp/>=<sp/>power[first<sp/>+<sp/>j].<ref refid="structmask_1a9de036816c9a31cb8840c86c03e5304e" kindref="member">x</ref><sp/>=<sp/><ref refid="twolame_2libtwolame_2common_8h_1ae229437c7136c92f65140528967b9389" kindref="member">DBMIN</ref>;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>power[first<sp/>-<sp/>j].<ref refid="structmask_1a9b432c51c3485f1630fee3b8a37f2331" kindref="member">next</ref><sp/>=<sp/>power[first<sp/>+<sp/>j].<ref refid="structmask_1a9b432c51c3485f1630fee3b8a37f2331" kindref="member">next</ref><sp/>=<sp/><ref refid="twolame_2libtwolame_2common_8h_1ae19b6bb2940d2fbe0a79852b070eeafd" kindref="member">STOP</ref>;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>power[first<sp/>-<sp/>j].<ref refid="structmask_1a83d6d319f1f4d045776dfdc4355282ac" kindref="member">type</ref><sp/>=<sp/>power[first<sp/>+<sp/>j].<ref refid="structmask_1a83d6d319f1f4d045776dfdc4355282ac" kindref="member">type</ref><sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_but_one<sp/>=<sp/><ref refid="record_8c_1a6c49eed6a71ecf58a51b1f64f4ec8e55" kindref="member">last</ref>;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last<sp/>=<sp/>first;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first<sp/>=<sp/>power[first].<ref refid="structmask_1a9b432c51c3485f1630fee3b8a37f2331" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ll;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(last<sp/>==<sp/><ref refid="twolame_2libtwolame_2common_8h_1a210af1d04c8870416a556f0e9a5194fd" kindref="member">LAST</ref>);<sp/><sp/></highlight><highlight class="comment">/*<sp/>*tone<sp/>=<sp/>power[first].next;<sp/>dpwe<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>power[<ref refid="record_8c_1a6c49eed6a71ecf58a51b1f64f4ec8e55" kindref="member">last</ref>].<ref refid="structmask_1a9b432c51c3485f1630fee3b8a37f2331" kindref="member">next</ref><sp/>=<sp/>power[first].<ref refid="structmask_1a9b432c51c3485f1630fee3b8a37f2331" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ll<sp/>=<sp/>first;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first<sp/>=<sp/>power[first].<ref refid="structmask_1a9b432c51c3485f1630fee3b8a37f2331" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>power[ll].<ref refid="structmask_1a9b432c51c3485f1630fee3b8a37f2331" kindref="member">next</ref><sp/>=<sp/><ref refid="twolame_2libtwolame_2common_8h_1ae19b6bb2940d2fbe0a79852b070eeafd" kindref="member">STOP</ref>;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal">}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="comment">/****************************************************************</highlight></codeline>
<codeline lineno="292"><highlight class="comment">*</highlight></codeline>
<codeline lineno="293"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>function<sp/>groups<sp/>all<sp/>the<sp/>remaining<sp/>non-tonal</highlight></codeline>
<codeline lineno="294"><highlight class="comment">*<sp/>spectral<sp/>lines<sp/>into<sp/>critical<sp/>band<sp/>where<sp/>they<sp/>are<sp/>replaced<sp/>by</highlight></codeline>
<codeline lineno="295"><highlight class="comment">*<sp/>one<sp/>single<sp/>line.</highlight></codeline>
<codeline lineno="296"><highlight class="comment">*</highlight></codeline>
<codeline lineno="297"><highlight class="comment">****************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>psycho_1_noise_label(<ref refid="structpsycho__1__mem__struct" kindref="compound">psycho_1_mem</ref><sp/>*<sp/>mem,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*noise,<sp/><ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref><sp/>energy[FFT_SIZE])</highlight></codeline>
<codeline lineno="300"><highlight class="normal">{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/>j,<sp/>centre,<sp/>last<sp/>=<sp/><ref refid="twolame_2libtwolame_2common_8h_1a210af1d04c8870416a556f0e9a5194fd" kindref="member">LAST</ref>;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref><sp/>index,<sp/><ref refid="lspdata_8c_1a188f5f4011d6169f76ee43763c198076" kindref="member">weight</ref>,<sp/>sum;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>crit_band<sp/>=<sp/>mem-&gt;<ref refid="structpsycho__1__mem__struct_1ad7e94feac1d79c9e5de0414ebad97d5c" kindref="member">crit_band</ref>;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*cbound<sp/>=<sp/>mem-&gt;<ref refid="structpsycho__1__mem__struct_1ad5c10270d0c010701290271dad278c73" kindref="member">cbound</ref>;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmask" kindref="compound">mask</ref><sp/>*power<sp/>=<sp/>mem-&gt;<ref refid="structpsycho__1__mem__struct_1aaef0599267564801453f2bab3048f23f" kindref="member">power</ref>;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>calculate<sp/>the<sp/>remaining<sp/>spectral<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>crit_band<sp/>-<sp/>1;<sp/>i++)<sp/>{<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>lines<sp/>for<sp/>non-tonal<sp/>components<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>cbound[i],<sp/>weight<sp/>=<sp/>0.0,<sp/>sum<sp/>=<sp/><ref refid="twolame_2libtwolame_2common_8h_1ae229437c7136c92f65140528967b9389" kindref="member">DBMIN</ref>;<sp/>j<sp/>&lt;<sp/>cbound[i<sp/>+<sp/>1];<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(power[j].<ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref><sp/>!=<sp/><ref refid="twolame_2libtwolame_2common_8h_1a7d78600ab45cf9cc99cdbdde12f761c6" kindref="member">TONE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(power[j].x<sp/>!=<sp/><ref refid="twolame_2libtwolame_2common_8h_1ae229437c7136c92f65140528967b9389" kindref="member">DBMIN</ref>)<sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum<sp/>=<sp/>add_db(mem,<sp/>power[j].x,<sp/>sum);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Weight<sp/>is<sp/>used<sp/>in<sp/>finding<sp/>the<sp/>geometric<sp/>mean<sp/>of<sp/>the<sp/>noise<sp/>energy<sp/>within<sp/>a</highlight></codeline>
<codeline lineno="313"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subband<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weight<sp/>+=<sp/><ref refid="psycho__1_8c_1aa5676f82f38bd25a2fb2eaa55d2fdce1" kindref="member">CF</ref><sp/>*<sp/>energy[j]<sp/>*<sp/>(<ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref>)<sp/>(j<sp/>-<sp/>cbound[i])<sp/>/<sp/>(<ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref>)<sp/>(cbound[i<sp/>+<sp/>1]<sp/>-<sp/>cbound[i]);<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>correction<sp/></highlight></codeline>
<codeline lineno="315"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>power[j].<ref refid="structmask_1a9de036816c9a31cb8840c86c03e5304e" kindref="member">x</ref><sp/>=<sp/><ref refid="twolame_2libtwolame_2common_8h_1ae229437c7136c92f65140528967b9389" kindref="member">DBMIN</ref>;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>to<sp/>see<sp/>if<sp/>the<sp/>spectral<sp/>line<sp/>is<sp/>low<sp/>dB,<sp/>and<sp/>if<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>so<sp/>replace<sp/>the<sp/>center<sp/>of<sp/>the<sp/>critical<sp/>band,<sp/>which<sp/>is<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>center<sp/>freq.<sp/>of<sp/>the<sp/>noise<sp/>component<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sum<sp/>&lt;=<sp/><ref refid="twolame_2libtwolame_2common_8h_1ae229437c7136c92f65140528967b9389" kindref="member">DBMIN</ref>)</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>centre<sp/>=<sp/>(cbound[i<sp/>+<sp/>1]<sp/>+<sp/>cbound[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>])<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>fprintf(stderr,<sp/>&quot;%i<sp/>[%f<sp/>%f]<sp/>-&quot;,<sp/>count++,weight/pow(10.0,0.1*sum),</highlight></codeline>
<codeline lineno="326"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weight*pow(10.0,-0.1*sum));<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/>weight<sp/>*<sp/>pow(10.0,<sp/>-0.1<sp/>*<sp/>sum);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>centre<sp/>=<sp/>cbound[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>+<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)<sp/>(index<sp/>*<sp/>(<ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref>)<sp/>(cbound[i<sp/>+<sp/>1]<sp/>-<sp/>cbound[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]));</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>locate<sp/>next<sp/>non-tonal<sp/>component<sp/>until<sp/>finished;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>add<sp/>to<sp/>list<sp/>of<sp/>non-tonal<sp/>components<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Masahiro<sp/>Iwadare&apos;s<sp/>fix<sp/>for<sp/>infinite<sp/>looping<sp/>problem?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(power[centre].<ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref><sp/>==<sp/><ref refid="twolame_2libtwolame_2common_8h_1a7d78600ab45cf9cc99cdbdde12f761c6" kindref="member">TONE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(power[centre<sp/>+<sp/>1].<ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref><sp/>==<sp/><ref refid="twolame_2libtwolame_2common_8h_1a7d78600ab45cf9cc99cdbdde12f761c6" kindref="member">TONE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>centre++;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>centre--;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(last<sp/>==<sp/><ref refid="twolame_2libtwolame_2common_8h_1a210af1d04c8870416a556f0e9a5194fd" kindref="member">LAST</ref>)</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*noise<sp/>=<sp/>centre;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>power[centre].<ref refid="structmask_1a9b432c51c3485f1630fee3b8a37f2331" kindref="member">next</ref><sp/>=<sp/><ref refid="twolame_2libtwolame_2common_8h_1a210af1d04c8870416a556f0e9a5194fd" kindref="member">LAST</ref>;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>power[<ref refid="record_8c_1a6c49eed6a71ecf58a51b1f64f4ec8e55" kindref="member">last</ref>].<ref refid="structmask_1a9b432c51c3485f1630fee3b8a37f2331" kindref="member">next</ref><sp/>=<sp/>centre;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>power[centre].<ref refid="structmask_1a9de036816c9a31cb8840c86c03e5304e" kindref="member">x</ref><sp/>=<sp/>sum;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>power[centre].<ref refid="structmask_1a83d6d319f1f4d045776dfdc4355282ac" kindref="member">type</ref><sp/>=<sp/><ref refid="twolame_2libtwolame_2common_8h_1a1252823eae0fb4c87dddc5c2caef7790" kindref="member">NOISE</ref>;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last<sp/>=<sp/>centre;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal">}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="comment">/****************************************************************</highlight></codeline>
<codeline lineno="356"><highlight class="comment">*</highlight></codeline>
<codeline lineno="357"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>function<sp/>reduces<sp/>the<sp/>number<sp/>of<sp/>noise<sp/>and<sp/>tonal</highlight></codeline>
<codeline lineno="358"><highlight class="comment">*<sp/>component<sp/>for<sp/>further<sp/>threshold<sp/>analysis.</highlight></codeline>
<codeline lineno="359"><highlight class="comment">*</highlight></codeline>
<codeline lineno="360"><highlight class="comment">****************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>psycho_1_subsampling(<ref refid="structmask" kindref="compound">mask</ref><sp/>power[HAN_SIZE],<sp/><ref refid="structg__thres" kindref="compound">g_thres</ref><sp/>*<sp/>ltg,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*tone,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*noise)</highlight></codeline>
<codeline lineno="363"><highlight class="normal">{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/><ref refid="namespacewaflib_1_1_utils_1ac5e167303eb0d1a7a20df3daf91a264c" kindref="member">old</ref>;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>i<sp/>=<sp/>*tone;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>old<sp/>=<sp/><ref refid="twolame_2libtwolame_2common_8h_1ae19b6bb2940d2fbe0a79852b070eeafd" kindref="member">STOP</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>calculate<sp/>tonal<sp/>components<sp/>for<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((i<sp/>!=<sp/><ref refid="twolame_2libtwolame_2common_8h_1a210af1d04c8870416a556f0e9a5194fd" kindref="member">LAST</ref>)<sp/>&amp;&amp;<sp/>(i<sp/>!=<sp/><ref refid="twolame_2libtwolame_2common_8h_1ae19b6bb2940d2fbe0a79852b070eeafd" kindref="member">STOP</ref>))<sp/>{<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>reduction<sp/>of<sp/>spectral<sp/>lines<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(power[i].x<sp/>&lt;<sp/>ltg[power[i].<ref refid="structmap" kindref="compound">map</ref>].hear)<sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>power[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].<ref refid="structmask_1a83d6d319f1f4d045776dfdc4355282ac" kindref="member">type</ref><sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>power[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].<ref refid="structmask_1a9de036816c9a31cb8840c86c03e5304e" kindref="member">x</ref><sp/>=<sp/><ref refid="twolame_2libtwolame_2common_8h_1ae229437c7136c92f65140528967b9389" kindref="member">DBMIN</ref>;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(old<sp/>==<sp/><ref refid="twolame_2libtwolame_2common_8h_1ae19b6bb2940d2fbe0a79852b070eeafd" kindref="member">STOP</ref>)</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*tone<sp/>=<sp/>power[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].<ref refid="structmask_1a9b432c51c3485f1630fee3b8a37f2331" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>power[<ref refid="namespacewaflib_1_1_utils_1ac5e167303eb0d1a7a20df3daf91a264c" kindref="member">old</ref>].<ref refid="structmask_1a9b432c51c3485f1630fee3b8a37f2331" kindref="member">next</ref><sp/>=<sp/>power[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].<ref refid="structmask_1a9b432c51c3485f1630fee3b8a37f2331" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>old<sp/>=<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>power[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].<ref refid="structmask_1a9b432c51c3485f1630fee3b8a37f2331" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>i<sp/>=<sp/>*noise;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>old<sp/>=<sp/><ref refid="twolame_2libtwolame_2common_8h_1ae19b6bb2940d2fbe0a79852b070eeafd" kindref="member">STOP</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>calculate<sp/>non-tonal<sp/>components<sp/>for<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((i<sp/>!=<sp/><ref refid="twolame_2libtwolame_2common_8h_1a210af1d04c8870416a556f0e9a5194fd" kindref="member">LAST</ref>)<sp/>&amp;&amp;<sp/>(i<sp/>!=<sp/><ref refid="twolame_2libtwolame_2common_8h_1ae19b6bb2940d2fbe0a79852b070eeafd" kindref="member">STOP</ref>))<sp/>{<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>reduction<sp/>of<sp/>spectral<sp/>lines<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(power[i].x<sp/>&lt;<sp/>ltg[power[i].<ref refid="structmap" kindref="compound">map</ref>].hear)<sp/>{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>power[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].<ref refid="structmask_1a83d6d319f1f4d045776dfdc4355282ac" kindref="member">type</ref><sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>power[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].<ref refid="structmask_1a9de036816c9a31cb8840c86c03e5304e" kindref="member">x</ref><sp/>=<sp/><ref refid="twolame_2libtwolame_2common_8h_1ae229437c7136c92f65140528967b9389" kindref="member">DBMIN</ref>;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(old<sp/>==<sp/><ref refid="twolame_2libtwolame_2common_8h_1ae19b6bb2940d2fbe0a79852b070eeafd" kindref="member">STOP</ref>)</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*noise<sp/>=<sp/>power[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].<ref refid="structmask_1a9b432c51c3485f1630fee3b8a37f2331" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>power[<ref refid="namespacewaflib_1_1_utils_1ac5e167303eb0d1a7a20df3daf91a264c" kindref="member">old</ref>].<ref refid="structmask_1a9b432c51c3485f1630fee3b8a37f2331" kindref="member">next</ref><sp/>=<sp/>power[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].<ref refid="structmask_1a9b432c51c3485f1630fee3b8a37f2331" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>old<sp/>=<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>power[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].<ref refid="structmask_1a9b432c51c3485f1630fee3b8a37f2331" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>i<sp/>=<sp/>*tone;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>old<sp/>=<sp/><ref refid="twolame_2libtwolame_2common_8h_1ae19b6bb2940d2fbe0a79852b070eeafd" kindref="member">STOP</ref>;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((i<sp/>!=<sp/><ref refid="twolame_2libtwolame_2common_8h_1a210af1d04c8870416a556f0e9a5194fd" kindref="member">LAST</ref>)<sp/>&amp;&amp;<sp/>(i<sp/>!=<sp/><ref refid="twolame_2libtwolame_2common_8h_1ae19b6bb2940d2fbe0a79852b070eeafd" kindref="member">STOP</ref>))<sp/>{<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>more<sp/>than<sp/>one<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(power[i].<ref refid="record_8c_1a9b790a854eb0e06cd42c8d28a30db97d" kindref="member">next</ref><sp/>==<sp/><ref refid="twolame_2libtwolame_2common_8h_1a210af1d04c8870416a556f0e9a5194fd" kindref="member">LAST</ref>)</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>tonal<sp/>component<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ltg[power[power[i].<ref refid="record_8c_1a9b790a854eb0e06cd42c8d28a30db97d" kindref="member">next</ref>].<ref refid="structmap" kindref="compound">map</ref>].bark<sp/>-<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>is<sp/>less<sp/>than<sp/>.5<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ltg[power[i].<ref refid="structmap" kindref="compound">map</ref>].bark<sp/>&lt;<sp/>0.5)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>bark,<sp/>take<sp/>the<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(power[power[i].<ref refid="record_8c_1a9b790a854eb0e06cd42c8d28a30db97d" kindref="member">next</ref>].x<sp/>&gt;<sp/>power[i].x)<sp/>{<sp/><sp/></highlight><highlight class="comment">/*<sp/>maximum<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(old<sp/>==<sp/><ref refid="twolame_2libtwolame_2common_8h_1ae19b6bb2940d2fbe0a79852b070eeafd" kindref="member">STOP</ref>)</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*tone<sp/>=<sp/>power[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].<ref refid="structmask_1a9b432c51c3485f1630fee3b8a37f2331" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>power[<ref refid="namespacewaflib_1_1_utils_1ac5e167303eb0d1a7a20df3daf91a264c" kindref="member">old</ref>].<ref refid="structmask_1a9b432c51c3485f1630fee3b8a37f2331" kindref="member">next</ref><sp/>=<sp/>power[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].<ref refid="structmask_1a9b432c51c3485f1630fee3b8a37f2331" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>power[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].<ref refid="structmask_1a83d6d319f1f4d045776dfdc4355282ac" kindref="member">type</ref><sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>power[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].<ref refid="structmask_1a9de036816c9a31cb8840c86c03e5304e" kindref="member">x</ref><sp/>=<sp/><ref refid="twolame_2libtwolame_2common_8h_1ae229437c7136c92f65140528967b9389" kindref="member">DBMIN</ref>;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>power[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].<ref refid="structmask_1a9b432c51c3485f1630fee3b8a37f2331" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>power[power[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].<ref refid="structmask_1a9b432c51c3485f1630fee3b8a37f2331" kindref="member">next</ref>].<ref refid="structmask_1a83d6d319f1f4d045776dfdc4355282ac" kindref="member">type</ref><sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>power[power[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].<ref refid="structmask_1a9b432c51c3485f1630fee3b8a37f2331" kindref="member">next</ref>].<ref refid="structmask_1a9de036816c9a31cb8840c86c03e5304e" kindref="member">x</ref><sp/>=<sp/><ref refid="twolame_2libtwolame_2common_8h_1ae229437c7136c92f65140528967b9389" kindref="member">DBMIN</ref>;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>power[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].<ref refid="structmask_1a9b432c51c3485f1630fee3b8a37f2331" kindref="member">next</ref><sp/>=<sp/>power[power[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].<ref refid="structmask_1a9b432c51c3485f1630fee3b8a37f2331" kindref="member">next</ref>].<ref refid="structmask_1a9b432c51c3485f1630fee3b8a37f2331" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>old<sp/>=<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>old<sp/>=<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>power[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].<ref refid="structmask_1a9b432c51c3485f1630fee3b8a37f2331" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal">}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight><highlight class="comment">/****************************************************************</highlight></codeline>
<codeline lineno="424"><highlight class="comment">*</highlight></codeline>
<codeline lineno="425"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>function<sp/>calculates<sp/>the<sp/>individual<sp/>threshold<sp/>and</highlight></codeline>
<codeline lineno="426"><highlight class="comment">*<sp/>sum<sp/>with<sp/>the<sp/>quiet<sp/>threshold<sp/>to<sp/>find<sp/>the<sp/>global<sp/>threshold.</highlight></codeline>
<codeline lineno="427"><highlight class="comment">*</highlight></codeline>
<codeline lineno="428"><highlight class="comment">****************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>mainly<sp/>just<sp/>changed<sp/>the<sp/>way<sp/>range<sp/>checking<sp/>was<sp/>done<sp/>MFC<sp/>Nov<sp/>1999<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>psycho_1_threshold(<ref refid="structpsycho__1__mem__struct" kindref="compound">psycho_1_mem</ref><sp/>*<sp/>mem,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*tone,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*noise,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bit_rate)</highlight></codeline>
<codeline lineno="432"><highlight class="normal">{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sub_size<sp/>=<sp/>mem-&gt;<ref refid="structpsycho__1__mem__struct_1a2a8a21315b257747eca8b570c91b85a5" kindref="member">sub_size</ref>;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structmask" kindref="compound">mask</ref><sp/>*power<sp/>=<sp/>mem-&gt;<ref refid="structpsycho__1__mem__struct_1aaef0599267564801453f2bab3048f23f" kindref="member">power</ref>;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structg__thres" kindref="compound">g_thres</ref><sp/>*ltg<sp/>=<sp/>mem-&gt;<ref refid="structpsycho__1__mem__struct_1a3757d4106ac278c815a5214045286e0c" kindref="member">ltg</ref>;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>,<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref><sp/>dz,<sp/>tmps,<sp/>vf;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>1;<sp/>k<sp/>&lt;<sp/>sub_size;<sp/>k++)<sp/>{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ltg[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>].<ref refid="structg__thres_1a19304eecad54259980b86a18ea398cfb" kindref="member">x</ref><sp/>=<sp/><ref refid="twolame_2libtwolame_2common_8h_1ae229437c7136c92f65140528967b9389" kindref="member">DBMIN</ref>;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>*tone;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>calculate<sp/>individual<sp/>masking<sp/>threshold<sp/>for<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((t<sp/>!=<sp/><ref refid="twolame_2libtwolame_2common_8h_1a210af1d04c8870416a556f0e9a5194fd" kindref="member">LAST</ref>)<sp/>&amp;&amp;<sp/>(t<sp/>!=<sp/><ref refid="twolame_2libtwolame_2common_8h_1ae19b6bb2940d2fbe0a79852b070eeafd" kindref="member">STOP</ref>))<sp/>{<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>components<sp/>in<sp/>order<sp/>to<sp/>find<sp/>the<sp/>global<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dz<sp/>=<sp/>ltg[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>].<ref refid="structg__thres_1a01782d805191c5cee4a3a72393e434d5" kindref="member">bark</ref><sp/>-<sp/>ltg[power[<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>].<ref refid="structmask_1ada47aa1fcb5f533cb65a2180c5d75cb9" kindref="member">map</ref>].<ref refid="structg__thres_1a01782d805191c5cee4a3a72393e434d5" kindref="member">bark</ref>;<sp/><sp/></highlight><highlight class="comment">/*<sp/>distance<sp/>of<sp/>bark<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dz<sp/>&gt;=<sp/>-3.0<sp/>&amp;&amp;<sp/>dz<sp/>&lt;<sp/>8.0)<sp/>{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmps<sp/>=<sp/>-1.525<sp/>-<sp/>0.275<sp/>*<sp/>ltg[power[<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>].<ref refid="structmask_1ada47aa1fcb5f533cb65a2180c5d75cb9" kindref="member">map</ref>].<ref refid="structg__thres_1a01782d805191c5cee4a3a72393e434d5" kindref="member">bark</ref><sp/>-<sp/>4.5<sp/>+<sp/>power[<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>].<ref refid="structmask_1a9de036816c9a31cb8840c86c03e5304e" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>masking<sp/>function<sp/>for<sp/>lower<sp/>&amp;<sp/>upper<sp/>slopes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dz<sp/>&lt;<sp/>-1)</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vf<sp/>=<sp/>17<sp/>*<sp/>(dz<sp/>+<sp/>1)<sp/>-<sp/>(0.4<sp/>*<sp/>power[t].x<sp/>+<sp/>6);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dz<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vf<sp/>=<sp/>(0.4<sp/>*<sp/>power[<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>].<ref refid="structmask_1a9de036816c9a31cb8840c86c03e5304e" kindref="member">x</ref><sp/>+<sp/>6)<sp/>*<sp/>dz;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dz<sp/>&lt;<sp/>1)</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vf<sp/>=<sp/>(-17<sp/>*<sp/>dz);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vf<sp/>=<sp/>-(dz<sp/>-<sp/>1)<sp/>*<sp/>(17<sp/>-<sp/>0.15<sp/>*<sp/>power[t].x)<sp/>-<sp/>17;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ltg[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>].<ref refid="structg__thres_1a19304eecad54259980b86a18ea398cfb" kindref="member">x</ref><sp/>=<sp/>add_db(mem,<sp/>ltg[k].x,<sp/>tmps<sp/>+<sp/>vf);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>power[<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>].<ref refid="structmask_1a9b432c51c3485f1630fee3b8a37f2331" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>*noise;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>calculate<sp/>individual<sp/>masking<sp/>threshold<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((t<sp/>!=<sp/><ref refid="twolame_2libtwolame_2common_8h_1a210af1d04c8870416a556f0e9a5194fd" kindref="member">LAST</ref>)<sp/>&amp;&amp;<sp/>(t<sp/>!=<sp/><ref refid="twolame_2libtwolame_2common_8h_1ae19b6bb2940d2fbe0a79852b070eeafd" kindref="member">STOP</ref>))<sp/>{<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>non-tonal<sp/>components<sp/>to<sp/>find<sp/>LTG<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dz<sp/>=<sp/>ltg[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>].<ref refid="structg__thres_1a01782d805191c5cee4a3a72393e434d5" kindref="member">bark</ref><sp/>-<sp/>ltg[power[<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>].<ref refid="structmask_1ada47aa1fcb5f533cb65a2180c5d75cb9" kindref="member">map</ref>].<ref refid="structg__thres_1a01782d805191c5cee4a3a72393e434d5" kindref="member">bark</ref>;<sp/><sp/></highlight><highlight class="comment">/*<sp/>distance<sp/>of<sp/>bark<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dz<sp/>&gt;=<sp/>-3.0<sp/>&amp;&amp;<sp/>dz<sp/>&lt;<sp/>8.0)<sp/>{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmps<sp/>=<sp/>-1.525<sp/>-<sp/>0.175<sp/>*<sp/>ltg[power[<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>].<ref refid="structmask_1ada47aa1fcb5f533cb65a2180c5d75cb9" kindref="member">map</ref>].<ref refid="structg__thres_1a01782d805191c5cee4a3a72393e434d5" kindref="member">bark</ref><sp/>-<sp/>0.5<sp/>+<sp/>power[<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>].<ref refid="structmask_1a9de036816c9a31cb8840c86c03e5304e" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>masking<sp/>function<sp/>for<sp/>lower<sp/>&amp;<sp/>upper<sp/>slopes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dz<sp/>&lt;<sp/>-1)</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vf<sp/>=<sp/>17<sp/>*<sp/>(dz<sp/>+<sp/>1)<sp/>-<sp/>(0.4<sp/>*<sp/>power[t].x<sp/>+<sp/>6);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dz<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vf<sp/>=<sp/>(0.4<sp/>*<sp/>power[<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>].<ref refid="structmask_1a9de036816c9a31cb8840c86c03e5304e" kindref="member">x</ref><sp/>+<sp/>6)<sp/>*<sp/>dz;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dz<sp/>&lt;<sp/>1)</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vf<sp/>=<sp/>(-17<sp/>*<sp/>dz);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vf<sp/>=<sp/>-(dz<sp/>-<sp/>1)<sp/>*<sp/>(17<sp/>-<sp/>0.15<sp/>*<sp/>power[t].x)<sp/>-<sp/>17;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ltg[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>].<ref refid="structg__thres_1a19304eecad54259980b86a18ea398cfb" kindref="member">x</ref><sp/>=<sp/>add_db(mem,<sp/>ltg[k].x,<sp/>tmps<sp/>+<sp/>vf);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>power[<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>].<ref refid="structmask_1a9b432c51c3485f1630fee3b8a37f2331" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bit_rate<sp/>&lt;<sp/>96)</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ltg[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>].<ref refid="structg__thres_1a19304eecad54259980b86a18ea398cfb" kindref="member">x</ref><sp/>=<sp/>add_db(mem,<sp/>ltg[k].hear,<sp/>ltg[k].x);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ltg[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>].<ref refid="structg__thres_1a19304eecad54259980b86a18ea398cfb" kindref="member">x</ref><sp/>=<sp/>add_db(mem,<sp/>ltg[k].hear<sp/>-<sp/>12.0,<sp/>ltg[k].x);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal">}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight><highlight class="comment">/****************************************************************</highlight></codeline>
<codeline lineno="487"><highlight class="comment">*</highlight></codeline>
<codeline lineno="488"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>function<sp/>finds<sp/>the<sp/>minimum<sp/>masking<sp/>threshold<sp/>and</highlight></codeline>
<codeline lineno="489"><highlight class="comment">*<sp/>return<sp/>the<sp/>value<sp/>to<sp/>the<sp/>encoder.</highlight></codeline>
<codeline lineno="490"><highlight class="comment">*</highlight></codeline>
<codeline lineno="491"><highlight class="comment">****************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>psycho_1_minimum_mask(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sub_size,<sp/><ref refid="structg__thres" kindref="compound">g_thres</ref><sp/>*<sp/>ltg,<sp/><ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref><sp/>ltmin[SBLIMIT],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="layer12_8c_1a6e51104237381e118e16da8bba73fd18" kindref="member">sblimit</ref>)</highlight></codeline>
<codeline lineno="494"><highlight class="normal">{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref><sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/>j;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>j<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="layer12_8c_1a6e51104237381e118e16da8bba73fd18" kindref="member">sblimit</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>&gt;=<sp/>sub_size<sp/>-<sp/>1)<sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>subband<sp/>limit,<sp/>and<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ltmin[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>ltg[sub_size<sp/>-<sp/>1].<ref refid="structg__thres_1a159fe6f7ab328b2b37c129c1a0762ecf" kindref="member">hear</ref>;<sp/><sp/></highlight><highlight class="comment">/*<sp/>calculate<sp/>the<sp/>minimum<sp/>masking<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>level<sp/>of<sp/>LTMIN<sp/>for<sp/>each<sp/>subband<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min<sp/>=<sp/>ltg[j].<ref refid="structg__thres_1a19304eecad54259980b86a18ea398cfb" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ltg[j].<ref refid="seqread_8c_1aad9ebcdde542d8b2075615388ff15a9c" kindref="member">line</ref><sp/>&gt;&gt;<sp/>4<sp/>==<sp/>i<sp/>&amp;&amp;<sp/>j<sp/>&lt;<sp/>sub_size)<sp/>{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(min<sp/>&gt;<sp/>ltg[j].x)</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min<sp/>=<sp/>ltg[j].<ref refid="structg__thres_1a19304eecad54259980b86a18ea398cfb" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j++;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ltmin[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="511"><highlight class="normal">}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************</highlight></codeline>
<codeline lineno="514"><highlight class="comment">*</highlight></codeline>
<codeline lineno="515"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>procedure<sp/>is<sp/>called<sp/>in<sp/>musicin<sp/>to<sp/>pick<sp/>out<sp/>the</highlight></codeline>
<codeline lineno="516"><highlight class="comment">*<sp/>smaller<sp/>of<sp/>the<sp/>scalefactor<sp/>or<sp/>threshold.</highlight></codeline>
<codeline lineno="517"><highlight class="comment">*</highlight></codeline>
<codeline lineno="518"><highlight class="comment">*****************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>psycho_1_smr(<ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref><sp/>ltmin[SBLIMIT],<sp/><ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref><sp/>spike[SBLIMIT],<sp/><ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref><sp/>scale[SBLIMIT],</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sblimit)</highlight></codeline>
<codeline lineno="522"><highlight class="normal">{</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref><sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="layer12_8c_1a6e51104237381e118e16da8bba73fd18" kindref="member">sblimit</ref>;<sp/>i++)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>determine<sp/>the<sp/>signal<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max<sp/>=<sp/>20<sp/>*<sp/>log10(scale[i]<sp/>*<sp/>32768)<sp/>-<sp/>10;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>level<sp/>for<sp/>each<sp/>subband<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(spike[i]<sp/>&gt;<sp/>max)</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max<sp/>=<sp/>spike[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>the<sp/>maximum<sp/>scale<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max<sp/>-=<sp/>ltmin[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>factors<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ltmin[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="533"><highlight class="normal">}</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="537"><highlight class="comment">static<sp/>void<sp/>psycho_1_dump(mask<sp/>power[HAN_SIZE],<sp/>int<sp/>*tone,<sp/>int<sp/>*noise)<sp/>{</highlight></codeline>
<codeline lineno="538"><highlight class="comment"><sp/><sp/>int<sp/>t;</highlight></codeline>
<codeline lineno="539"><highlight class="comment"></highlight></codeline>
<codeline lineno="540"><highlight class="comment"><sp/><sp/>fprintf(stderr,&quot;1<sp/>Ton:<sp/>&quot;);</highlight></codeline>
<codeline lineno="541"><highlight class="comment"><sp/><sp/>t=*tone;</highlight></codeline>
<codeline lineno="542"><highlight class="comment"><sp/><sp/>while<sp/>(t!=LAST<sp/>&amp;&amp;<sp/>t!=STOP)<sp/>{</highlight></codeline>
<codeline lineno="543"><highlight class="comment"><sp/><sp/><sp/><sp/>fprintf(stderr,&quot;[%i]<sp/>%3.0f<sp/>&quot;,t,<sp/>power[t].x);</highlight></codeline>
<codeline lineno="544"><highlight class="comment"><sp/><sp/><sp/><sp/>t<sp/>=<sp/>power[t].next;</highlight></codeline>
<codeline lineno="545"><highlight class="comment"><sp/><sp/>}</highlight></codeline>
<codeline lineno="546"><highlight class="comment"><sp/><sp/>fprintf(stderr,&quot;\n&quot;);</highlight></codeline>
<codeline lineno="547"><highlight class="comment"><sp/><sp/></highlight></codeline>
<codeline lineno="548"><highlight class="comment"><sp/><sp/>fprintf(stderr,&quot;1<sp/>Nos:<sp/>&quot;);</highlight></codeline>
<codeline lineno="549"><highlight class="comment"><sp/><sp/>t=*noise;</highlight></codeline>
<codeline lineno="550"><highlight class="comment"><sp/><sp/>while<sp/>(t!=LAST<sp/>&amp;&amp;<sp/>t!=STOP)<sp/>{</highlight></codeline>
<codeline lineno="551"><highlight class="comment"><sp/><sp/><sp/><sp/>fprintf(stderr,&quot;[%i]<sp/>%3.0f<sp/>&quot;,t,<sp/>power[t].x);</highlight></codeline>
<codeline lineno="552"><highlight class="comment"><sp/><sp/><sp/><sp/>t<sp/>=<sp/>power[t].next;</highlight></codeline>
<codeline lineno="553"><highlight class="comment"><sp/><sp/>}</highlight></codeline>
<codeline lineno="554"><highlight class="comment"><sp/><sp/>fprintf(stderr,&quot;\n&quot;);</highlight></codeline>
<codeline lineno="555"><highlight class="comment">}</highlight></codeline>
<codeline lineno="556"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559" refid="psycho__1_8c_1ad0277cd7e30c0f449b67ac1d9e82efcc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="psycho__1_8c_1ad0277cd7e30c0f449b67ac1d9e82efcc" kindref="member">psycho_1</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,<sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><ref refid="structbuffer" kindref="compound">buffer</ref>[2][1152],<sp/><ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref><sp/>scale[2][SBLIMIT],</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref><sp/>ltmin[2][SBLIMIT])</highlight></codeline>
<codeline lineno="561"><highlight class="normal">{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpsycho__1__mem__struct" kindref="compound">psycho_1_mem</ref><sp/>*mem;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structframe__header" kindref="compound">frame_header</ref><sp/>*header<sp/>=<sp/>&amp;glopts-&gt;<ref refid="structtwolame__options__struct_1a50fa0b33674f61d8e3386b3e8d54b78c" kindref="member">header</ref>;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nch<sp/>=<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a5388d86ab861953b968b2ec81bda950f" kindref="member">num_channels_out</ref>;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sblimit<sp/>=<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1ace0e0a1e04ffe3ec27bf782edac6973b" kindref="member">sblimit</ref>;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>,<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/>tone<sp/>=<sp/>0,<sp/>noise<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref><sp/>sample[<ref refid="twolame_2libtwolame_2common_8h_1a636ddc19af00bc87969a07c88331f105" kindref="member">FFT_SIZE</ref>];</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref><sp/>spike[2][<ref refid="twolame_2libtwolame_2common_8h_1aae2d5a401c55c6b2b834c99340911fdb" kindref="member">SBLIMIT</ref>];</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref><sp/>*fft_buf[2];</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref><sp/>energy[<ref refid="twolame_2libtwolame_2common_8h_1a636ddc19af00bc87969a07c88331f105" kindref="member">FFT_SIZE</ref>];</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>call<sp/>functions<sp/>for<sp/>critical<sp/>boundaries,<sp/>freq.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!glopts-&gt;<ref refid="structtwolame__options__struct_1a32f0ce469b0159b92f4409d592a89c61" kindref="member">p1mem</ref>)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>bands,<sp/>bark<sp/>values,<sp/>and<sp/>mapping<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mem<sp/>=<sp/>(<ref refid="structpsycho__1__mem__struct" kindref="compound">psycho_1_mem</ref><sp/>*)<sp/><ref refid="twolame_2libtwolame_2mem_8h_1a5c998cfb7ed77f0c7967b685235f8ba5" kindref="member">TWOLAME_MALLOC</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structpsycho__1__mem__struct" kindref="compound">psycho_1_mem</ref>));</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mem-&gt;<ref refid="structpsycho__1__mem__struct_1aaef0599267564801453f2bab3048f23f" kindref="member">power</ref><sp/>=<sp/>(<ref refid="twolame_2libtwolame_2common_8h_1a673db3062644d9cce92f61cc2f3d0c34" kindref="member">mask_ptr</ref>)<sp/><ref refid="twolame_2libtwolame_2mem_8h_1a5c998cfb7ed77f0c7967b685235f8ba5" kindref="member">TWOLAME_MALLOC</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structmask" kindref="compound">mask</ref>)<sp/>*<sp/><ref refid="twolame_2libtwolame_2common_8h_1a93dad85e78d1cbd33689d6f8f98de324" kindref="member">HAN_SIZE</ref>);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(header-&gt;<ref refid="structframe__header_1a7c92a7131bf19d4340ffeecc3f893d09" kindref="member">version</ref><sp/>==<sp/><ref refid="twolame_8h_1a0f4e287fec57b8ba38e28395996eb6e3ae8dc89cc37c6203400e64768eb6b59d5" kindref="member">TWOLAME_MPEG1</ref>)<sp/>{</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mem-&gt;<ref refid="structpsycho__1__mem__struct_1ad5c10270d0c010701290271dad278c73" kindref="member">cbound</ref><sp/>=</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psycho_1_read_cbound(header-&gt;<ref refid="structframe__header_1a719d105e9a5983f057946a8dc351f90b" kindref="member">lay</ref>,<sp/>header-&gt;<ref refid="structframe__header_1aeaaf556b174d5d6c8d719f34d4f9154e" kindref="member">samplerate_idx</ref>,<sp/>&amp;mem-&gt;<ref refid="structpsycho__1__mem__struct_1ad7e94feac1d79c9e5de0414ebad97d5c" kindref="member">crit_band</ref>);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psycho_1_read_freq_band(&amp;mem-&gt;<ref refid="structpsycho__1__mem__struct_1a3757d4106ac278c815a5214045286e0c" kindref="member">ltg</ref>,<sp/>header-&gt;<ref refid="structframe__header_1a719d105e9a5983f057946a8dc351f90b" kindref="member">lay</ref>,<sp/>header-&gt;<ref refid="structframe__header_1aeaaf556b174d5d6c8d719f34d4f9154e" kindref="member">samplerate_idx</ref>,<sp/>&amp;mem-&gt;<ref refid="structpsycho__1__mem__struct_1a2a8a21315b257747eca8b570c91b85a5" kindref="member">sub_size</ref>);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mem-&gt;<ref refid="structpsycho__1__mem__struct_1ad5c10270d0c010701290271dad278c73" kindref="member">cbound</ref><sp/>=</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psycho_1_read_cbound(header-&gt;<ref refid="structframe__header_1a719d105e9a5983f057946a8dc351f90b" kindref="member">lay</ref>,<sp/>header-&gt;<ref refid="structframe__header_1aeaaf556b174d5d6c8d719f34d4f9154e" kindref="member">samplerate_idx</ref><sp/>+<sp/>4,<sp/>&amp;mem-&gt;<ref refid="structpsycho__1__mem__struct_1ad7e94feac1d79c9e5de0414ebad97d5c" kindref="member">crit_band</ref>);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psycho_1_read_freq_band(&amp;mem-&gt;<ref refid="structpsycho__1__mem__struct_1a3757d4106ac278c815a5214045286e0c" kindref="member">ltg</ref>,<sp/>header-&gt;<ref refid="structframe__header_1a719d105e9a5983f057946a8dc351f90b" kindref="member">lay</ref>,<sp/>header-&gt;<ref refid="structframe__header_1aeaaf556b174d5d6c8d719f34d4f9154e" kindref="member">samplerate_idx</ref><sp/>+<sp/>4,</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;mem-&gt;<ref refid="structpsycho__1__mem__struct_1a2a8a21315b257747eca8b570c91b85a5" kindref="member">sub_size</ref>);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psycho_1_make_map(mem-&gt;<ref refid="structpsycho__1__mem__struct_1a2a8a21315b257747eca8b570c91b85a5" kindref="member">sub_size</ref>,<sp/>mem-&gt;<ref refid="structpsycho__1__mem__struct_1aaef0599267564801453f2bab3048f23f" kindref="member">power</ref>,<sp/>mem-&gt;<ref refid="structpsycho__1__mem__struct_1a3757d4106ac278c815a5214045286e0c" kindref="member">ltg</ref>);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>1408;<sp/>i++)</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mem-&gt;<ref refid="structpsycho__1__mem__struct_1aa6c016d9438353036cbd1734805d9814" kindref="member">fft_buf</ref>[0][i]<sp/>=<sp/>mem-&gt;<ref refid="structpsycho__1__mem__struct_1aa6c016d9438353036cbd1734805d9814" kindref="member">fft_buf</ref>[1][i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psycho_1_init_add_db(mem);<sp/><sp/></highlight><highlight class="comment">/*<sp/>create<sp/>the<sp/>add_db<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mem-&gt;<ref refid="structpsycho__1__mem__struct_1af017ea48db79318795b4324e9d4ed1c2" kindref="member">off</ref>[0]<sp/>=<sp/>256;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mem-&gt;<ref refid="structpsycho__1__mem__struct_1af017ea48db79318795b4324e9d4ed1c2" kindref="member">off</ref>[1]<sp/>=<sp/>256;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a32f0ce469b0159b92f4409d592a89c61" kindref="member">p1mem</ref><sp/>=<sp/>mem;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mem<sp/>=<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1a32f0ce469b0159b92f4409d592a89c61" kindref="member">p1mem</ref>;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fft_buf[0]<sp/>=<sp/>mem-&gt;<ref refid="structpsycho__1__mem__struct_1aa6c016d9438353036cbd1734805d9814" kindref="member">fft_buf</ref>[0];</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fft_buf[1]<sp/>=<sp/>mem-&gt;<ref refid="structpsycho__1__mem__struct_1aa6c016d9438353036cbd1734805d9814" kindref="member">fft_buf</ref>[1];</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>nch;<sp/>k++)<sp/>{</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>pcm<sp/>input<sp/>for<sp/>3<sp/>blocks<sp/>of<sp/>384<sp/>samples<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>sami&apos;s<sp/>speedup,<sp/>added<sp/>in<sp/>02j<sp/>saves<sp/>about<sp/>4%<sp/>overall<sp/>during<sp/>an<sp/>encode<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ok<sp/>=<sp/>mem-&gt;<ref refid="structpsycho__1__mem__struct_1af017ea48db79318795b4324e9d4ed1c2" kindref="member">off</ref>[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>]<sp/>%<sp/>1408;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>1152;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fft_buf[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>][ok++]<sp/>=<sp/>(<ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref>)<sp/>buffer[k][i]<sp/>/<sp/><ref refid="libsndfile_2src_2_g_s_m610_2lpc_8c_1adb514fa86cb175ed5119e352a79ccea3" kindref="member">SCALE</ref>;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ok<sp/>&gt;=<sp/>1408)</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ok<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ok<sp/>=<sp/>(mem-&gt;<ref refid="structpsycho__1__mem__struct_1af017ea48db79318795b4324e9d4ed1c2" kindref="member">off</ref>[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>]<sp/>+<sp/>1216)<sp/>%<sp/>1408;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="twolame_2libtwolame_2common_8h_1a636ddc19af00bc87969a07c88331f105" kindref="member">FFT_SIZE</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sample[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>fft_buf[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>][ok++];</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ok<sp/>&gt;=<sp/>1408)</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ok<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mem-&gt;<ref refid="structpsycho__1__mem__struct_1af017ea48db79318795b4324e9d4ed1c2" kindref="member">off</ref>[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>]<sp/>+=<sp/>1152;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mem-&gt;<ref refid="structpsycho__1__mem__struct_1af017ea48db79318795b4324e9d4ed1c2" kindref="member">off</ref>[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>]<sp/>%=<sp/>1408;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psycho_1_hann_fft_pickmax(sample,<sp/>mem-&gt;<ref refid="structpsycho__1__mem__struct_1aaef0599267564801453f2bab3048f23f" kindref="member">power</ref>,<sp/>&amp;spike[k][0],<sp/>energy);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psycho_1_tonal_label(mem,<sp/>&amp;tone);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psycho_1_noise_label(mem,<sp/>&amp;noise,<sp/>energy);</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>psycho_1_dump(power,<sp/>&amp;tone,<sp/>&amp;noise)<sp/>;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psycho_1_subsampling(mem-&gt;<ref refid="structpsycho__1__mem__struct_1aaef0599267564801453f2bab3048f23f" kindref="member">power</ref>,<sp/>mem-&gt;<ref refid="structpsycho__1__mem__struct_1a3757d4106ac278c815a5214045286e0c" kindref="member">ltg</ref>,<sp/>&amp;tone,<sp/>&amp;noise);</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psycho_1_threshold(mem,<sp/>&amp;tone,<sp/>&amp;noise,<sp/>glopts-&gt;<ref refid="structtwolame__options__struct_1ac471f69e776fa200a2032a88dfdee3b0" kindref="member">bitrate</ref><sp/>/<sp/>nch);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psycho_1_minimum_mask(mem-&gt;<ref refid="structpsycho__1__mem__struct_1a2a8a21315b257747eca8b570c91b85a5" kindref="member">sub_size</ref>,<sp/>mem-&gt;<ref refid="structpsycho__1__mem__struct_1a3757d4106ac278c815a5214045286e0c" kindref="member">ltg</ref>,<sp/>&amp;ltmin[k][0],<sp/>sblimit);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psycho_1_smr(&amp;ltmin[k][0],<sp/>&amp;spike[k][0],<sp/>&amp;<ref refid="seqread_8c_1aa2a8c6fbe5ed24f9523eb4e01368e4bc" kindref="member">scale</ref>[k][0],<sp/>sblimit);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal">}</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636" refid="psycho__1_8h_1ac63f2aef19e37ae3b1396dcfda161eee" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="psycho__1_8c_1ac63f2aef19e37ae3b1396dcfda161eee" kindref="member">psycho_1_deinit</ref>(<ref refid="structpsycho__1__mem__struct" kindref="compound">psycho_1_mem</ref><sp/>**<sp/>mem)</highlight></codeline>
<codeline lineno="637"><highlight class="normal">{</highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mem<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||<sp/>*mem<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_2libtwolame_2mem_8h_1a134e8e7ea99b1bb57e889e61705f1283" kindref="member">TWOLAME_FREE</ref>((*mem)-&gt;cbound);</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_2libtwolame_2mem_8h_1a134e8e7ea99b1bb57e889e61705f1283" kindref="member">TWOLAME_FREE</ref>((*mem)-&gt;ltg);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_2libtwolame_2mem_8h_1a134e8e7ea99b1bb57e889e61705f1283" kindref="member">TWOLAME_FREE</ref>((*mem)-&gt;power);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="twolame_2libtwolame_2mem_8h_1a134e8e7ea99b1bb57e889e61705f1283" kindref="member">TWOLAME_FREE</ref>((*mem));</highlight></codeline>
<codeline lineno="646"><highlight class="normal">}</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight><highlight class="comment">//<sp/>vim:ts=4:sw=4:nowrap:<sp/></highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/psycho_1.c"/>
  </compounddef>
</doxygen>
