<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_noise_reduction_8cpp" kind="file" language="C++">
    <compoundname>NoiseReduction.cpp</compoundname>
    <includes refid="_audacity_8h" local="yes">../Audacity.h</includes>
    <includes refid="_experimental_8h" local="yes">../Experimental.h</includes>
    <includes refid="_noise_reduction_8h" local="yes">NoiseReduction.h</includes>
    <includes refid="_effect_manager_8h" local="yes">EffectManager.h</includes>
    <includes refid="_shuttle_gui_8h" local="yes">../ShuttleGui.h</includes>
    <includes refid="_prefs_8h" local="yes">../Prefs.h</includes>
    <includes refid="_wave_track_8h" local="yes">../WaveTrack.h</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">vector</includes>
    <includes local="no">math.h</includes>
    <includes local="no">wx/button.h</includes>
    <includes local="no">wx/choice.h</includes>
    <includes local="no">wx/dialog.h</includes>
    <includes local="no">wx/radiobut.h</includes>
    <includes local="no">wx/slider.h</includes>
    <includes local="no">wx/valtext.h</includes>
    <includes local="no">wx/textctrl.h</includes>
    <includes local="no">wx/sizer.h</includes>
    <incdepgraph>
      <node id="42684">
        <label>wx/choice.h</label>
      </node>
      <node id="42708">
        <label>WaveClip.h</label>
        <link refid="_wave_clip_8h"/>
        <childnode refid="42649" relation="include">
        </childnode>
        <childnode refid="42703" relation="include">
        </childnode>
        <childnode refid="42678" relation="include">
        </childnode>
        <childnode refid="42709" relation="include">
        </childnode>
        <childnode refid="42704" relation="include">
        </childnode>
        <childnode refid="42650" relation="include">
        </childnode>
        <childnode refid="42711" relation="include">
        </childnode>
        <childnode refid="42702" relation="include">
        </childnode>
        <childnode refid="42677" relation="include">
        </childnode>
        <childnode refid="42712" relation="include">
        </childnode>
        <childnode refid="42713" relation="include">
        </childnode>
        <childnode refid="42701" relation="include">
        </childnode>
      </node>
      <node id="42680">
        <label>wx/gauge.h</label>
      </node>
      <node id="42707">
        <label>wx/ffile.h</label>
      </node>
      <node id="42685">
        <label>wx/event.h</label>
      </node>
      <node id="42690">
        <label>audacity/ModuleInterface.h</label>
        <link refid="_module_interface_8h"/>
        <childnode refid="42663" relation="include">
        </childnode>
        <childnode refid="42666" relation="include">
        </childnode>
        <childnode refid="42691" relation="include">
        </childnode>
      </node>
      <node id="42669">
        <label>wx/cmdline.h</label>
      </node>
      <node id="42718">
        <label>wx/slider.h</label>
      </node>
      <node id="42665">
        <label>audacity/EffectInterface.h</label>
        <link refid="_effect_interface_8h"/>
        <childnode refid="42663" relation="include">
        </childnode>
        <childnode refid="42666" relation="include">
        </childnode>
        <childnode refid="42662" relation="include">
        </childnode>
        <childnode refid="42667" relation="include">
        </childnode>
        <childnode refid="42671" relation="include">
        </childnode>
      </node>
      <node id="42676">
        <label>../Internat.h</label>
        <link refid="_internat_8h"/>
        <childnode refid="42664" relation="include">
        </childnode>
        <childnode refid="42660" relation="include">
        </childnode>
        <childnode refid="42677" relation="include">
        </childnode>
      </node>
      <node id="42704">
        <label>xml/XMLTagHandler.h</label>
        <link refid="_x_m_l_tag_handler_8h"/>
        <childnode refid="42649" relation="include">
        </childnode>
        <childnode refid="42660" relation="include">
        </childnode>
        <childnode refid="42705" relation="include">
        </childnode>
        <childnode refid="42706" relation="include">
        </childnode>
      </node>
      <node id="42673">
        <label>wx/wxchar.h</label>
      </node>
      <node id="42709">
        <label>ondemand/ODTaskThread.h</label>
        <link refid="_o_d_task_thread_8h"/>
        <childnode refid="42710" relation="include">
        </childnode>
        <childnode refid="42649" relation="include">
        </childnode>
      </node>
      <node id="42662">
        <label>audacity/ConfigInterface.h</label>
        <link refid="_config_interface_8h"/>
        <childnode refid="42663" relation="include">
        </childnode>
      </node>
      <node id="42682">
        <label>wx/utils.h</label>
      </node>
      <node id="42679">
        <label>wx/evtloop.h</label>
      </node>
      <node id="42695">
        <label>WrappedType.h</label>
        <link refid="_wrapped_type_8h"/>
        <childnode refid="42649" relation="include">
        </childnode>
      </node>
      <node id="42650">
        <label>../Experimental.h</label>
        <link refid="_experimental_8h"/>
        <childnode refid="42651" relation="include">
        </childnode>
      </node>
      <node id="42702">
        <label>wx/gdicmn.h</label>
      </node>
      <node id="42675">
        <label>../Shuttle.h</label>
        <link refid="_shuttle_8h"/>
      </node>
      <node id="42648">
        <label>C:/_dev/OpenU/Audacity/audacity/src/effects/NoiseReduction.cpp</label>
        <link refid="NoiseReduction.cpp"/>
        <childnode refid="42649" relation="include">
        </childnode>
        <childnode refid="42650" relation="include">
        </childnode>
        <childnode refid="42652" relation="include">
        </childnode>
        <childnode refid="42683" relation="include">
        </childnode>
        <childnode refid="42692" relation="include">
        </childnode>
        <childnode refid="42697" relation="include">
        </childnode>
        <childnode refid="42699" relation="include">
        </childnode>
        <childnode refid="42715" relation="include">
        </childnode>
        <childnode refid="42701" relation="include">
        </childnode>
        <childnode refid="42674" relation="include">
        </childnode>
        <childnode refid="42716" relation="include">
        </childnode>
        <childnode refid="42684" relation="include">
        </childnode>
        <childnode refid="42671" relation="include">
        </childnode>
        <childnode refid="42717" relation="include">
        </childnode>
        <childnode refid="42718" relation="include">
        </childnode>
        <childnode refid="42719" relation="include">
        </childnode>
        <childnode refid="42720" relation="include">
        </childnode>
        <childnode refid="42694" relation="include">
        </childnode>
      </node>
      <node id="42670">
        <label>wx/fileconf.h</label>
      </node>
      <node id="42688">
        <label>map</label>
      </node>
      <node id="42714">
        <label>WaveTrackLocation.h</label>
        <link refid="_wave_track_location_8h"/>
      </node>
      <node id="42691">
        <label>audacity/PluginInterface.h</label>
        <link refid="_plugin_interface_8h"/>
        <childnode refid="42663" relation="include">
        </childnode>
        <childnode refid="42662" relation="include">
        </childnode>
        <childnode refid="42665" relation="include">
        </childnode>
        <childnode refid="42666" relation="include">
        </childnode>
        <childnode refid="42689" relation="include">
        </childnode>
        <childnode refid="42690" relation="include">
        </childnode>
      </node>
      <node id="42696">
        <label>wx/scrolbar.h</label>
      </node>
      <node id="42711">
        <label>RealFFTf.h</label>
        <link refid="_real_f_f_tf_8h"/>
        <childnode refid="42650" relation="include">
        </childnode>
      </node>
      <node id="42719">
        <label>wx/valtext.h</label>
      </node>
      <node id="42681">
        <label>wx/stattext.h</label>
      </node>
      <node id="42652">
        <label>NoiseReduction.h</label>
        <link refid="_noise_reduction_8h"/>
        <childnode refid="42653" relation="include">
        </childnode>
        <childnode refid="42654" relation="include">
        </childnode>
      </node>
      <node id="42666">
        <label>audacity/IdentInterface.h</label>
        <link refid="_ident_interface_8h"/>
        <childnode refid="42663" relation="include">
        </childnode>
      </node>
      <node id="42712">
        <label>wx/list.h</label>
      </node>
      <node id="42651">
        <label>wx/defs.h</label>
      </node>
      <node id="42717">
        <label>wx/radiobut.h</label>
      </node>
      <node id="42659">
        <label>wx/intl.h</label>
      </node>
      <node id="42678">
        <label>../widgets/ProgressDialog.h</label>
        <link refid="_progress_dialog_8h"/>
        <childnode refid="42649" relation="include">
        </childnode>
        <childnode refid="42651" relation="include">
        </childnode>
        <childnode refid="42671" relation="include">
        </childnode>
        <childnode refid="42679" relation="include">
        </childnode>
        <childnode refid="42680" relation="include">
        </childnode>
        <childnode refid="42681" relation="include">
        </childnode>
        <childnode refid="42682" relation="include">
        </childnode>
      </node>
      <node id="42657">
        <label>wx/bmpbuttn.h</label>
      </node>
      <node id="42663">
        <label>audacity/Types.h</label>
        <link refid="include_2audacity_2_types_8h"/>
        <childnode refid="42660" relation="include">
        </childnode>
        <childnode refid="42664" relation="include">
        </childnode>
      </node>
      <node id="42687">
        <label>../PluginManager.h</label>
        <link refid="_plugin_manager_8h"/>
        <childnode refid="42651" relation="include">
        </childnode>
        <childnode refid="42658" relation="include">
        </childnode>
        <childnode refid="42670" relation="include">
        </childnode>
        <childnode refid="42660" relation="include">
        </childnode>
        <childnode refid="42688" relation="include">
        </childnode>
        <childnode refid="42665" relation="include">
        </childnode>
        <childnode refid="42689" relation="include">
        </childnode>
        <childnode refid="42690" relation="include">
        </childnode>
        <childnode refid="42691" relation="include">
        </childnode>
      </node>
      <node id="42671">
        <label>wx/dialog.h</label>
      </node>
      <node id="42683">
        <label>EffectManager.h</label>
        <link refid="_effect_manager_8h"/>
        <childnode refid="42650" relation="include">
        </childnode>
        <childnode refid="42684" relation="include">
        </childnode>
        <childnode refid="42671" relation="include">
        </childnode>
        <childnode refid="42685" relation="include">
        </childnode>
        <childnode refid="42686" relation="include">
        </childnode>
        <childnode refid="42660" relation="include">
        </childnode>
        <childnode refid="42665" relation="include">
        </childnode>
        <childnode refid="42687" relation="include">
        </childnode>
        <childnode refid="42653" relation="include">
        </childnode>
      </node>
      <node id="42667">
        <label>audacity/EffectAutomationParameters.h</label>
        <link refid="_effect_automation_parameters_8h"/>
        <childnode refid="42668" relation="include">
        </childnode>
        <childnode refid="42669" relation="include">
        </childnode>
        <childnode refid="42670" relation="include">
        </childnode>
        <childnode refid="42659" relation="include">
        </childnode>
      </node>
      <node id="42697">
        <label>../Prefs.h</label>
        <link refid="_prefs_8h"/>
        <childnode refid="42649" relation="include">
        </childnode>
        <childnode refid="42698" relation="include">
        </childnode>
        <childnode refid="42670" relation="include">
        </childnode>
      </node>
      <node id="42649">
        <label>../Audacity.h</label>
        <link refid="_audacity_8h"/>
      </node>
      <node id="42693">
        <label>wx/grid.h</label>
      </node>
      <node id="42701">
        <label>vector</label>
      </node>
      <node id="42653">
        <label>Effect.h</label>
        <link refid="src_2effects_2_effect_8h"/>
        <childnode refid="42649" relation="include">
        </childnode>
        <childnode refid="42654" relation="include">
        </childnode>
        <childnode refid="42656" relation="include">
        </childnode>
        <childnode refid="42657" relation="include">
        </childnode>
        <childnode refid="42658" relation="include">
        </childnode>
        <childnode refid="42659" relation="include">
        </childnode>
        <childnode refid="42660" relation="include">
        </childnode>
        <childnode refid="42661" relation="include">
        </childnode>
        <childnode refid="42662" relation="include">
        </childnode>
        <childnode refid="42665" relation="include">
        </childnode>
        <childnode refid="42650" relation="include">
        </childnode>
        <childnode refid="42672" relation="include">
        </childnode>
        <childnode refid="42675" relation="include">
        </childnode>
        <childnode refid="42676" relation="include">
        </childnode>
        <childnode refid="42678" relation="include">
        </childnode>
      </node>
      <node id="42658">
        <label>wx/dynarray.h</label>
      </node>
      <node id="42689">
        <label>audacity/ImporterInterface.h</label>
        <link refid="_importer_interface_8h"/>
        <childnode refid="42663" relation="include">
        </childnode>
        <childnode refid="42662" relation="include">
        </childnode>
        <childnode refid="42666" relation="include">
        </childnode>
      </node>
      <node id="42660">
        <label>wx/string.h</label>
      </node>
      <node id="42686">
        <label>wx/listbox.h</label>
      </node>
      <node id="42713">
        <label>wx/msgdlg.h</label>
      </node>
      <node id="42674">
        <label>math.h</label>
      </node>
      <node id="42672">
        <label>../SelectedRegion.h</label>
        <link refid="_selected_region_8h"/>
        <childnode refid="42649" relation="include">
        </childnode>
        <childnode refid="42650" relation="include">
        </childnode>
        <childnode refid="42651" relation="include">
        </childnode>
        <childnode refid="42673" relation="include">
        </childnode>
        <childnode refid="42674" relation="include">
        </childnode>
      </node>
      <node id="42664">
        <label>wx/arrstr.h</label>
      </node>
      <node id="42698">
        <label>wx/config.h</label>
      </node>
      <node id="42694">
        <label>wx/sizer.h</label>
      </node>
      <node id="42700">
        <label>Track.h</label>
        <link refid="src_2track_8h"/>
        <childnode refid="42649" relation="include">
        </childnode>
        <childnode refid="42654" relation="include">
        </childnode>
        <childnode refid="42701" relation="include">
        </childnode>
        <childnode refid="42658" relation="include">
        </childnode>
        <childnode refid="42685" relation="include">
        </childnode>
        <childnode refid="42702" relation="include">
        </childnode>
        <childnode refid="42677" relation="include">
        </childnode>
        <childnode refid="42660" relation="include">
        </childnode>
        <childnode refid="42650" relation="include">
        </childnode>
        <childnode refid="42703" relation="include">
        </childnode>
        <childnode refid="42704" relation="include">
        </childnode>
      </node>
      <node id="42710">
        <label>wx/thread.h</label>
      </node>
      <node id="42661">
        <label>wx/tglbtn.h</label>
      </node>
      <node id="42716">
        <label>wx/button.h</label>
      </node>
      <node id="42654">
        <label>../MemoryX.h</label>
        <link refid="_memory_x_8h"/>
        <childnode refid="42655" relation="include">
        </childnode>
      </node>
      <node id="42692">
        <label>../ShuttleGui.h</label>
        <link refid="_shuttle_gui_8h"/>
        <childnode refid="42649" relation="include">
        </childnode>
        <childnode refid="42654" relation="include">
        </childnode>
        <childnode refid="42693" relation="include">
        </childnode>
        <childnode refid="42694" relation="include">
        </childnode>
        <childnode refid="42660" relation="include">
        </childnode>
        <childnode refid="42695" relation="include">
        </childnode>
        <childnode refid="42696" relation="include">
        </childnode>
      </node>
      <node id="42656">
        <label>set</label>
      </node>
      <node id="42677">
        <label>wx/longlong.h</label>
      </node>
      <node id="42699">
        <label>../WaveTrack.h</label>
        <link refid="_wave_track_8h"/>
        <childnode refid="42700" relation="include">
        </childnode>
        <childnode refid="42703" relation="include">
        </childnode>
        <childnode refid="42708" relation="include">
        </childnode>
        <childnode refid="42650" relation="include">
        </childnode>
        <childnode refid="42678" relation="include">
        </childnode>
        <childnode refid="42701" relation="include">
        </childnode>
        <childnode refid="42702" relation="include">
        </childnode>
        <childnode refid="42677" relation="include">
        </childnode>
        <childnode refid="42710" relation="include">
        </childnode>
        <childnode refid="42714" relation="include">
        </childnode>
      </node>
      <node id="42715">
        <label>algorithm</label>
      </node>
      <node id="42705">
        <label>stdio.h</label>
      </node>
      <node id="42720">
        <label>wx/textctrl.h</label>
      </node>
      <node id="42703">
        <label>SampleFormat.h</label>
        <link refid="_sample_format_8h"/>
        <childnode refid="42649" relation="include">
        </childnode>
        <childnode refid="42651" relation="include">
        </childnode>
        <childnode refid="42663" relation="include">
        </childnode>
      </node>
      <node id="42668">
        <label>locale.h</label>
      </node>
      <node id="42655">
        <label>memory</label>
      </node>
      <node id="42706">
        <label>XMLWriter.h</label>
        <link refid="_x_m_l_writer_8h"/>
        <childnode refid="42664" relation="include">
        </childnode>
        <childnode refid="42658" relation="include">
        </childnode>
        <childnode refid="42707" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="class_effect_noise_reduction_1_1_statistics" prot="public">EffectNoiseReduction::Statistics</innerclass>
    <innerclass refid="class_effect_noise_reduction_1_1_settings" prot="public">EffectNoiseReduction::Settings</innerclass>
    <innerclass refid="class_effect_noise_reduction_1_1_worker" prot="public">EffectNoiseReduction::Worker</innerclass>
    <innerclass refid="struct_effect_noise_reduction_1_1_worker_1_1_record" prot="private">EffectNoiseReduction::Worker::Record</innerclass>
    <innerclass refid="class_effect_noise_reduction_1_1_dialog" prot="public">EffectNoiseReduction::Dialog</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="_noise_reduction_8cpp_1a218c49528d756ea81ebe2fa38c2ae9db" prot="public" static="no">
        <name>RESIDUE_CHOICE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/NoiseReduction.cpp" line="74" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/effects/NoiseReduction.cpp" bodystart="74" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="_noise_reduction_8cpp_1a32fbcbc85aab14bb60b15358bb7917eb" prot="public" static="no">
        <name>DiscriminationMethod</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/NoiseReduction.cpp" line="88" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/effects/NoiseReduction.cpp" bodystart="88" bodyend="95"/>
      </memberdef>
      <memberdef kind="enum" id="_noise_reduction_8cpp_1a58ad3159a8b1f24a1d3497efcd541b69" prot="public" static="no">
        <name>WindowTypes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/NoiseReduction.cpp" line="109" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/effects/NoiseReduction.cpp" bodystart="109" bodyend="120"/>
      </memberdef>
      <memberdef kind="enum" id="_noise_reduction_8cpp_1a540c98815fbf3a535e5c3474823ca58c" prot="public" static="no">
        <name>@294</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/NoiseReduction.cpp" line="142" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/effects/NoiseReduction.cpp" bodystart="142" bodyend="145"/>
      </memberdef>
      <memberdef kind="enum" id="_noise_reduction_8cpp_1a467334a229f715a676938085a52b61c2" prot="public" static="no">
        <name>NoiseReductionChoice</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/NoiseReduction.cpp" line="147" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/effects/NoiseReduction.cpp" bodystart="147" bodyend="151"/>
      </memberdef>
      <memberdef kind="enum" id="_noise_reduction_8cpp_1a0341d081395407fd92061819ba76eb96" prot="public" static="no">
        <name>@293</name>
        <enumvalue id="_noise_reduction_8cpp_1a0341d081395407fd92061819ba76eb96a1ae9215fdbd510aa098b276de3241d14" prot="public">
          <name>ID_BUTTON_GETPROFILE</name>
          <initializer>= 10001</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_noise_reduction_8cpp_1a0341d081395407fd92061819ba76eb96ac464a1ac67cb4151d10de967e150eb64" prot="public">
          <name>ID_RADIOBUTTON_KEEPSIGNAL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_noise_reduction_8cpp_1a0341d081395407fd92061819ba76eb96a96b12d6226e5bbead121b52ac8b5e6ba" prot="public">
          <name>ID_RADIOBUTTON_RESIDUE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_noise_reduction_8cpp_1a0341d081395407fd92061819ba76eb96a1c554a3cf3435eb54967259fc7bbdbc2" prot="public">
          <name>ID_GAIN_SLIDER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_noise_reduction_8cpp_1a0341d081395407fd92061819ba76eb96a0f9f6d111ab6c41a6c0627ccc1769426" prot="public">
          <name>ID_GAIN_TEXT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_noise_reduction_8cpp_1a0341d081395407fd92061819ba76eb96a1dad4dd6b2d875165dcba436fd958162" prot="public">
          <name>ID_NEW_SENSITIVITY_SLIDER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_noise_reduction_8cpp_1a0341d081395407fd92061819ba76eb96aa55ea7d1b1875214fb831e5c8d9bc3d6" prot="public">
          <name>ID_NEW_SENSITIVITY_TEXT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_noise_reduction_8cpp_1a0341d081395407fd92061819ba76eb96a27044b77ecdb13db0926cb63749d2255" prot="public">
          <name>ID_FREQ_SLIDER</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_noise_reduction_8cpp_1a0341d081395407fd92061819ba76eb96ade8c28123faab7710accec1d4f4a6b47" prot="public">
          <name>ID_FREQ_TEXT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_noise_reduction_8cpp_1a0341d081395407fd92061819ba76eb96a6ed1c9f1eed68a848b0a9ecfe3ae509d" prot="public">
          <name>END_OF_BASIC_SLIDERS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_noise_reduction_8cpp_1a0341d081395407fd92061819ba76eb96a48ba953126c788cf919b66f64de186e7" prot="public">
          <name>END_OF_SLIDERS</name>
          <initializer>= END_OF_BASIC_SLIDERS</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_noise_reduction_8cpp_1a0341d081395407fd92061819ba76eb96ac8ee536c53f485a980dfc3698ed21801" prot="public">
          <name>FIRST_SLIDER</name>
          <initializer>= ID_GAIN_SLIDER</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/NoiseReduction.cpp" line="1349" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/effects/NoiseReduction.cpp" bodystart="1349" bodyend="1394"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_noise_reduction_8cpp_1a64be07a13efb96ba9d376c4cbc6f501e" prot="public" static="no">
        <type>std::vector&lt; float &gt;</type>
        <definition>typedef std::vector&lt;float&gt; FloatVector</definition>
        <argsstring></argsstring>
        <name>FloatVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/NoiseReduction.cpp" line="71" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/effects/NoiseReduction.cpp" bodystart="71" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>Audacity:<sp/>A<sp/>Digital<sp/>Audio<sp/>Editor</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>NoiseReduction.cpp</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>Dominic<sp/>Mazzoni</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/>detailed<sp/>rewriting<sp/>by</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/>Paul<sp/>Licameli</highlight></codeline>
<codeline lineno="11"><highlight class="comment"></highlight></codeline>
<codeline lineno="12"><highlight class="comment">*******************************************************************/</highlight><highlight class="comment">/****************************************************************/</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor">#include<sp/>&quot;../Audacity.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Experimental.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_noise_reduction_8h" kindref="compound">NoiseReduction.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_effect_manager_8h" kindref="compound">EffectManager.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../ShuttleGui.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Prefs.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../WaveTrack.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__WXMSW__)<sp/>&amp;&amp;<sp/>!defined(__CYGWIN__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="float_8h" kindref="compound">float.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>finite(x)<sp/>_finite(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/button.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/choice.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/dialog.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/radiobut.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/slider.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/valtext.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/textctrl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/sizer.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPECTRAL_SELECTION<sp/>not<sp/>to<sp/>affect<sp/>this<sp/>effect<sp/>for<sp/>now,<sp/>as<sp/>there<sp/>might<sp/>be<sp/>no<sp/>indication<sp/>that<sp/>it<sp/>does.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//<sp/>[Discussed<sp/>and<sp/>agreed<sp/>for<sp/>v2.1<sp/>by<sp/>Steve,<sp/>Paul,<sp/>Bill].</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>EXPERIMENTAL_SPECTRAL_EDITING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="_noise_reduction_8cpp_1a64be07a13efb96ba9d376c4cbc6f501e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::vector&lt;float&gt;<sp/><ref refid="_noise_reduction_8cpp_1a64be07a13efb96ba9d376c4cbc6f501e" kindref="member">FloatVector</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Define<sp/>both<sp/>of<sp/>these<sp/>to<sp/>make<sp/>the<sp/>radio<sp/>button<sp/>three-way</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="_noise_reduction_8cpp_1a218c49528d756ea81ebe2fa38c2ae9db" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RESIDUE_CHOICE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>ISOLATE_CHOICE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Define<sp/>for<sp/>Attack<sp/>and<sp/>release<sp/>controls.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#define<sp/>ATTACK_AND_RELEASE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Define<sp/>to<sp/>expose<sp/>other<sp/>advanced,<sp/>experimental<sp/>dialog<sp/>controls</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>ADVANCED_SETTINGS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Define<sp/>to<sp/>make<sp/>the<sp/>old<sp/>statistical<sp/>methods<sp/>an<sp/>available<sp/>choice</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>OLD_METHOD_AVAILABLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="_noise_reduction_8cpp_1a32fbcbc85aab14bb60b15358bb7917eb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="_noise_reduction_8cpp_1a32fbcbc85aab14bb60b15358bb7917eb" kindref="member">DiscriminationMethod</ref><sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/>DM_MEDIAN,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/>DM_SECOND_GREATEST,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/>DM_OLD_METHOD,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/>DM_N_METHODS,</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/>DM_DEFAULT_METHOD<sp/>=<sp/>DM_SECOND_GREATEST,</highlight></codeline>
<codeline lineno="95"><highlight class="normal">};</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">DiscriminationMethodInfo<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxChar<sp/>*<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}<sp/>discriminationMethodInfo[DM_N_METHODS]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Median&quot;</highlight><highlight class="normal">)<sp/>},</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Second<sp/>greatest&quot;</highlight><highlight class="normal">)<sp/>},</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Old&quot;</highlight><highlight class="normal">)<sp/>},</highlight></codeline>
<codeline lineno="103"><highlight class="normal">};</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">//<sp/>magic<sp/>number<sp/>used<sp/>only<sp/>in<sp/>the<sp/>old<sp/>statistics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>the<sp/>old<sp/>discrimination</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>minSignalTime<sp/>=<sp/>0.05f;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="_noise_reduction_8cpp_1a58ad3159a8b1f24a1d3497efcd541b69" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="_noise_reduction_8cpp_1a58ad3159a8b1f24a1d3497efcd541b69" kindref="member">WindowTypes</ref><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/>WT_RECTANGULAR_HANN<sp/>=<sp/>0,<sp/></highlight><highlight class="comment">//<sp/>2.0.6<sp/>behavior,<sp/>requires<sp/>1/2<sp/>step</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/>WT_HANN_RECTANGULAR,<sp/></highlight><highlight class="comment">//<sp/>requires<sp/>1/2<sp/>step</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/>WT_HANN_HANN,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>requires<sp/>1/4<sp/>step</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/>WT_BLACKMAN_HANN,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>requires<sp/>1/4<sp/>step</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/>WT_HAMMING_RECTANGULAR,<sp/></highlight><highlight class="comment">//<sp/>requires<sp/>1/2<sp/>step</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/>WT_HAMMING_HANN,<sp/></highlight><highlight class="comment">//<sp/>requires<sp/>1/4<sp/>step</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/>WT_HAMMING_INV_HAMMING,<sp/></highlight><highlight class="comment">//<sp/>requires<sp/>1/2<sp/>step</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/>WT_N_WINDOW_TYPES,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/>WT_DEFAULT_WINDOW_TYPES<sp/>=<sp/>WT_HANN_HANN</highlight></codeline>
<codeline lineno="120"><highlight class="normal">};</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">WindowTypesInfo<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxChar<sp/>*<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minSteps;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>inCoefficients[3];</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>outCoefficients[3];</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>productConstantTerm;</highlight></codeline>
<codeline lineno="128"><highlight class="normal">}<sp/>windowTypesInfo<sp/>[WT_N_WINDOW_TYPES]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>all<sp/>of<sp/>these<sp/>cases<sp/>(but<sp/>the<sp/>last),<sp/>the<sp/>constant<sp/>term<sp/>of<sp/>the<sp/>product<sp/>of<sp/>windows</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>the<sp/>product<sp/>of<sp/>the<sp/>windows&apos;<sp/>two<sp/>constant<sp/>terms,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>plus<sp/>one<sp/>half<sp/>the<sp/>product<sp/>of<sp/>the<sp/>first<sp/>cosine<sp/>coefficients.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/>{<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;none,<sp/>Hann<sp/>(2.0.6<sp/>behavior)&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/>2,<sp/>{<sp/>1,<sp/>0,<sp/>0<sp/>},<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0.5,<sp/>-0.5,<sp/>0<sp/>},<sp/>0.5<sp/>},</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/>{<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Hann,<sp/>none&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,<sp/>{<sp/>0.5,<sp/>-0.5,<sp/>0<sp/>},<sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>1,<sp/>0,<sp/>0<sp/>},<sp/><sp/><sp/><sp/><sp/><sp/>0.5<sp/>},</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/>{<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Hann,<sp/>Hann<sp/>(default)&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4,<sp/>{<sp/>0.5,<sp/>-0.5,<sp/>0<sp/>},<sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0.5,<sp/>-0.5,<sp/>0<sp/>},<sp/>0.375<sp/>},</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/>{<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Blackman,<sp/>Hann&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4,<sp/>{<sp/>0.42,<sp/>-0.5,<sp/>0.08<sp/>},<sp/><sp/><sp/>{<sp/>0.5,<sp/>-0.5,<sp/>0<sp/>},<sp/>0.335<sp/>},</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/>{<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Hamming,<sp/>none&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,<sp/>{<sp/>0.54,<sp/>-0.46,<sp/>0.0<sp/>},<sp/><sp/><sp/>{<sp/>1,<sp/>0,<sp/>0<sp/>},<sp/><sp/><sp/><sp/><sp/><sp/>0.54<sp/>},</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/>{<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Hamming,<sp/>Hann&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4,<sp/>{<sp/>0.54,<sp/>-0.46,<sp/>0.0<sp/>},<sp/><sp/><sp/>{<sp/>0.5,<sp/>-0.5,<sp/>0<sp/>},<sp/>0.385<sp/>},</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/>{<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Hamming,<sp/>Reciprocal<sp/>Hamming&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/>2,<sp/>{<sp/>0.54,<sp/>-0.46,<sp/>0.0<sp/>},<sp/><sp/><sp/>{<sp/>1,<sp/>0,<sp/>0<sp/>},<sp/>1.0<sp/>},<sp/></highlight><highlight class="comment">//<sp/>output<sp/>window<sp/>is<sp/>special</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal">};</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/>DEFAULT_WINDOW_SIZE_CHOICE<sp/>=<sp/>8,<sp/></highlight><highlight class="comment">//<sp/>corresponds<sp/>to<sp/>2048</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/>DEFAULT_STEPS_PER_WINDOW_CHOICE<sp/>=<sp/>1<sp/></highlight><highlight class="comment">//<sp/>corresponds<sp/>to<sp/>4,<sp/>minimum<sp/>for<sp/>WT_HANN_HANN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal">};</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147" refid="_noise_reduction_8cpp_1a467334a229f715a676938085a52b61c2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><sp/><ref refid="_noise_reduction_8cpp_1a467334a229f715a676938085a52b61c2" kindref="member">NoiseReductionChoice</ref><sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/>NRC_REDUCE_NOISE,</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/>NRC_ISOLATE_NOISE,</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/>NRC_LEAVE_RESIDUE,</highlight></codeline>
<codeline lineno="151"><highlight class="normal">};</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EffectNoiseReduction::Statistics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159" refid="class_effect_noise_reduction_1_1_statistics" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_effect_noise_reduction_1_1_statistics" kindref="compound">EffectNoiseReduction::Statistics</ref></highlight></codeline>
<codeline lineno="160"><highlight class="normal">{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="162" refid="class_effect_noise_reduction_1_1_statistics_1aca7498c18e76448e04af858740d9595b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_effect_noise_reduction_1_1_statistics_1aca7498c18e76448e04af858740d9595b" kindref="member">Statistics</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>spectrumSize,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="test__lib_f_l_a_c_2format_8c_1a960ad82c3ba394a46f17f5f6146c93ea" kindref="member">rate</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>windowTypes)</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>mRate(rate)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>mWindowSize((spectrumSize<sp/>-<sp/>1)<sp/>*<sp/>2)</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>mWindowTypes(windowTypes)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>mTotalWindows(0)</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>mTrackWindows(0)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>mSums(spectrumSize)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>mMeans(spectrumSize)</highlight></codeline>
<codeline lineno="170"><highlight class="normal">#ifdef<sp/>OLD_METHOD_AVAILABLE</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>mNoiseThreshold(spectrumSize)</highlight></codeline>
<codeline lineno="172"><highlight class="normal">#<ref refid="sndfile__play_8m_1a74c64864f5283ae06d4a981642a59af9" kindref="member">endif</ref></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Noise<sp/>profile<sp/>statistics<sp/>follow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177" refid="class_effect_noise_reduction_1_1_statistics_1a291421ba2374bc0523e69ae9c4d552bf" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_effect_noise_reduction_1_1_statistics_1a291421ba2374bc0523e69ae9c4d552bf" kindref="member">mRate</ref>;<sp/></highlight><highlight class="comment">//<sp/>Rate<sp/>of<sp/>profile<sp/>track(s)<sp/>--<sp/>processed<sp/>tracks<sp/>must<sp/>match</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178" refid="class_effect_noise_reduction_1_1_statistics_1a827ea087481e17d97852a85d94f43d6f" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_effect_noise_reduction_1_1_statistics_1a827ea087481e17d97852a85d94f43d6f" kindref="member">mWindowSize</ref>;</highlight></codeline>
<codeline lineno="179" refid="class_effect_noise_reduction_1_1_statistics_1af8ae2e3c045af22ce970cb3827209050" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_effect_noise_reduction_1_1_statistics_1af8ae2e3c045af22ce970cb3827209050" kindref="member">mWindowTypes</ref>;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181" refid="class_effect_noise_reduction_1_1_statistics_1ab17125778a20ce16b8a8bd13b21cfdc3" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_effect_noise_reduction_1_1_statistics_1ab17125778a20ce16b8a8bd13b21cfdc3" kindref="member">mTotalWindows</ref>;</highlight></codeline>
<codeline lineno="182" refid="class_effect_noise_reduction_1_1_statistics_1adc7ddfa5b3c6d2cf88553e597d6e687f" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_effect_noise_reduction_1_1_statistics_1adc7ddfa5b3c6d2cf88553e597d6e687f" kindref="member">mTrackWindows</ref>;</highlight></codeline>
<codeline lineno="183" refid="class_effect_noise_reduction_1_1_statistics_1af81af8f27eba423cc134bd9b94b7019e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="_noise_reduction_8cpp_1a64be07a13efb96ba9d376c4cbc6f501e" kindref="member">FloatVector</ref><sp/><ref refid="class_effect_noise_reduction_1_1_statistics_1af81af8f27eba423cc134bd9b94b7019e" kindref="member">mSums</ref>;</highlight></codeline>
<codeline lineno="184" refid="class_effect_noise_reduction_1_1_statistics_1a8eef84dd0517967f9ef56ed907068ece" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="_noise_reduction_8cpp_1a64be07a13efb96ba9d376c4cbc6f501e" kindref="member">FloatVector</ref><sp/><ref refid="class_effect_noise_reduction_1_1_statistics_1a8eef84dd0517967f9ef56ed907068ece" kindref="member">mMeans</ref>;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>OLD_METHOD_AVAILABLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Old<sp/>statistics:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><ref refid="_noise_reduction_8cpp_1a64be07a13efb96ba9d376c4cbc6f501e" kindref="member">FloatVector</ref><sp/>mNoiseThreshold;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal">};</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EffectNoiseReduction::Settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>object<sp/>is<sp/>the<sp/>memory<sp/>of<sp/>the<sp/>effect<sp/>between<sp/>uses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(other<sp/>than<sp/>noise<sp/>profile<sp/>statistics)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198" refid="class_effect_noise_reduction_1_1_settings" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_effect_noise_reduction_1_1_settings" kindref="compound">EffectNoiseReduction::Settings</ref></highlight></codeline>
<codeline lineno="199"><highlight class="normal">{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_effect_noise_reduction_1_1_settings" kindref="compound">Settings</ref>();</highlight></codeline>
<codeline lineno="202" refid="class_effect_noise_reduction_1_1_settings_1a123dabde958912258a3c62332e167211" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_effect_noise_reduction_1_1_settings_1a123dabde958912258a3c62332e167211" kindref="member">~Settings</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>PromptUser(<ref refid="class_effect_noise_reduction" kindref="compound">EffectNoiseReduction</ref><sp/>*effect,</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxWindow<sp/>*parent,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bHasProfile,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bAllowTwiddleSettings);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>PrefsIO(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>read);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Validate()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209" refid="class_effect_noise_reduction_1_1_settings_1a3d3a3d6e886e2db5d496fea164e49e81" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_effect_noise_reduction_1_1_settings_1a3d3a3d6e886e2db5d496fea164e49e81" kindref="member">WindowSize</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1<sp/>&lt;&lt;<sp/>(3<sp/>+<sp/>mWindowSizeChoice);<sp/>}</highlight></codeline>
<codeline lineno="210" refid="class_effect_noise_reduction_1_1_settings_1ab6eda94ee9b1972ea8d68b8bc7e4253d" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_effect_noise_reduction_1_1_settings_1ab6eda94ee9b1972ea8d68b8bc7e4253d" kindref="member">StepsPerWindow</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1<sp/>&lt;&lt;<sp/>(1<sp/>+<sp/>mStepsPerWindowChoice);<sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212" refid="class_effect_noise_reduction_1_1_settings_1acf83c314cff3398d8bc172508395d454" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_effect_noise_reduction_1_1_settings_1acf83c314cff3398d8bc172508395d454" kindref="member">mDoProfile</ref>;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stored<sp/>in<sp/>preferences:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Basic:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217" refid="class_effect_noise_reduction_1_1_settings_1a8678912f0a5fe978e3a4809ec405633d" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="class_effect_noise_reduction_1_1_settings_1a8678912f0a5fe978e3a4809ec405633d" kindref="member">mNewSensitivity</ref>;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>log10<sp/>of<sp/>a<sp/>probability...<sp/>yeah.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218" refid="class_effect_noise_reduction_1_1_settings_1a118310261cec68f4f044fc80d88f02fc" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="class_effect_noise_reduction_1_1_settings_1a118310261cec68f4f044fc80d88f02fc" kindref="member">mFreqSmoothingBands</ref>;<sp/></highlight><highlight class="comment">//<sp/>really<sp/>an<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219" refid="class_effect_noise_reduction_1_1_settings_1ac11f719d012357a416d91f761f63f789" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="class_effect_noise_reduction_1_1_settings_1ac11f719d012357a416d91f761f63f789" kindref="member">mNoiseGain</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>dB,<sp/>positive</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220" refid="class_effect_noise_reduction_1_1_settings_1a6bb04dd376410dab3a67ecb446a73af1" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="class_effect_noise_reduction_1_1_settings_1a6bb04dd376410dab3a67ecb446a73af1" kindref="member">mAttackTime</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>secs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221" refid="class_effect_noise_reduction_1_1_settings_1a1de6d038a5bd8e9d5158eeef06dc42cf" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="class_effect_noise_reduction_1_1_settings_1a1de6d038a5bd8e9d5158eeef06dc42cf" kindref="member">mReleaseTime</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>secs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Advanced:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224" refid="class_effect_noise_reduction_1_1_settings_1a85fc0cc6d0dfb671fb63a0014fd16090" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="class_effect_noise_reduction_1_1_settings_1a85fc0cc6d0dfb671fb63a0014fd16090" kindref="member">mOldSensitivity</ref>;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>dB,<sp/>plus<sp/>or<sp/>minus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Basic:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227" refid="class_effect_noise_reduction_1_1_settings_1a82ac53e1f2fc895ab08c2561dc69230e" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_effect_noise_reduction_1_1_settings_1a82ac53e1f2fc895ab08c2561dc69230e" kindref="member">mNoiseReductionChoice</ref>;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Advanced:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230" refid="class_effect_noise_reduction_1_1_settings_1a58e3a556866b785b7cd9d8203ab58518" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_effect_noise_reduction_1_1_settings_1a58e3a556866b785b7cd9d8203ab58518" kindref="member">mWindowTypes</ref>;</highlight></codeline>
<codeline lineno="231" refid="class_effect_noise_reduction_1_1_settings_1a06c90e5f69a35bb37d88949331fde123" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_effect_noise_reduction_1_1_settings_1a06c90e5f69a35bb37d88949331fde123" kindref="member">mWindowSizeChoice</ref>;</highlight></codeline>
<codeline lineno="232" refid="class_effect_noise_reduction_1_1_settings_1a51c0443b45ef45fadc76e299f8e07c6c" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_effect_noise_reduction_1_1_settings_1a51c0443b45ef45fadc76e299f8e07c6c" kindref="member">mStepsPerWindowChoice</ref>;</highlight></codeline>
<codeline lineno="233" refid="class_effect_noise_reduction_1_1_settings_1a673a66bef76870471ba358010c720ddb" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_effect_noise_reduction_1_1_settings_1a673a66bef76870471ba358010c720ddb" kindref="member">mMethod</ref>;</highlight></codeline>
<codeline lineno="234"><highlight class="normal">};</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236" refid="class_effect_noise_reduction_1_1_settings_1a775790f745b6722101619759d5476ebd" refkind="member"><highlight class="normal"><ref refid="class_effect_noise_reduction_1_1_settings_1a775790f745b6722101619759d5476ebd" kindref="member">EffectNoiseReduction::Settings::Settings</ref>()</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/>:<sp/>mDoProfile(<ref refid="ordinals_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7" kindref="member">true</ref>)</highlight></codeline>
<codeline lineno="238"><highlight class="normal">{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_effect_noise_reduction_1_1_settings_1a46d76d568fa2e89ead4b39bea59c04c4" kindref="member">PrefsIO</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EffectNoiseReduction::Worker</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>object<sp/>holds<sp/>information<sp/>needed<sp/>only<sp/>during<sp/>effect<sp/>calculation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247" refid="class_effect_noise_reduction_1_1_worker" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_effect_noise_reduction_1_1_worker" kindref="compound">EffectNoiseReduction::Worker</ref></highlight></codeline>
<codeline lineno="248"><highlight class="normal">{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="250" refid="class_effect_noise_reduction_1_1_worker_1a2904764d08bbfe694e12b1bdd36f41b8" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_effect_noise_reduction_1_1_settings" kindref="compound">EffectNoiseReduction::Settings</ref><sp/><ref refid="class_effect_noise_reduction_1_1_worker_1a2904764d08bbfe694e12b1bdd36f41b8" kindref="member">Settings</ref>;</highlight></codeline>
<codeline lineno="251" refid="class_effect_noise_reduction_1_1_worker_1ac4d7f70570114b011e4e2538cbbe813b" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><sp/><ref refid="class_effect_noise_reduction_1_1_statistics" kindref="compound">EffectNoiseReduction::Statistics</ref><sp/><ref refid="class_effect_noise_reduction_1_1_worker_1ac4d7f70570114b011e4e2538cbbe813b" kindref="member">Statistics</ref>;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_effect_noise_reduction_1_1_worker" kindref="compound">Worker</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Settings<sp/>&amp;settings,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacepatest__suggested__vs__streaminfo__latency_1a14f2ecd6f756d329f6df4096833062d0" kindref="member">sampleRate</ref></highlight></codeline>
<codeline lineno="254"><highlight class="normal">#ifdef<sp/><ref refid="_experimental_8h_1a1b9e5b2efd9af8cf047a6f578ebada59" kindref="member">EXPERIMENTAL_SPECTRAL_EDITING</ref></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>f0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>f1</highlight></codeline>
<codeline lineno="256"><highlight class="normal">#<ref refid="sndfile__play_8m_1a74c64864f5283ae06d4a981642a59af9" kindref="member">endif</ref></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/>~<ref refid="class_effect_noise_reduction_1_1_worker" kindref="compound">Worker</ref>();</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_effect_noise_reduction_1a55d87b17e0396284f396f45f4be15afe" kindref="member">Process</ref>(<ref refid="class_effect_noise_reduction" kindref="compound">EffectNoiseReduction</ref><sp/>&amp;effect,</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Statistics<sp/>&amp;statistics,<sp/><ref refid="class_track_factory" kindref="compound">TrackFactory</ref><sp/>&amp;factory,</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_selected_track_list_of_kind_iterator" kindref="compound">SelectedTrackListOfKindIterator</ref><sp/>&amp;iter,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_effect_1ae83563966df5c0b3aba90dd183b15b53" kindref="member">mT0</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_effect_1a7681f0ae7a8245659b002078e78ef146" kindref="member">mT1</ref>);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ProcessOne(<ref refid="class_effect_noise_reduction" kindref="compound">EffectNoiseReduction</ref><sp/>&amp;effect,</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Statistics<sp/>&amp;statistics,</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track_factory" kindref="compound">TrackFactory</ref><sp/>&amp;factory,</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref>,<sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*track,</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>,<sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>StartNewTrack();</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ProcessSamples(Statistics<sp/>&amp;statistics,</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*outputTrack,<sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref>);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FillFirstHistoryWindow();</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ApplyFreqSmoothing(<ref refid="_noise_reduction_8cpp_1a64be07a13efb96ba9d376c4cbc6f501e" kindref="member">FloatVector</ref><sp/>&amp;gains);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GatherStatistics(Statistics<sp/>&amp;statistics);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Classify(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Statistics<sp/>&amp;statistics,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>band);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ReduceNoise(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Statistics<sp/>&amp;statistics,<sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*outputTrack);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RotateHistoryWindows();</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FinishTrackStatistics(Statistics<sp/>&amp;statistics);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FinishTrack(Statistics<sp/>&amp;statistics,<sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*outputTrack);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_effect_noise_reduction_1_1_settings_1acf83c314cff3398d8bc172508395d454" kindref="member">mDoProfile</ref>;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_effect_1ab1a3d8e761e17f8dbe1a9ad749de4327" kindref="member">mSampleRate</ref>;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mWindowSize;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>have<sp/>that<sp/>size:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_f_f_t_param" kindref="compound">HFFT</ref><sp/><sp/><sp/><sp/><sp/>hFFT;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><ref refid="_noise_reduction_8cpp_1a64be07a13efb96ba9d376c4cbc6f501e" kindref="member">FloatVector</ref><sp/>mFFTBuffer;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><ref refid="_noise_reduction_8cpp_1a64be07a13efb96ba9d376c4cbc6f501e" kindref="member">FloatVector</ref><sp/>mInWaveBuffer;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><ref refid="_noise_reduction_8cpp_1a64be07a13efb96ba9d376c4cbc6f501e" kindref="member">FloatVector</ref><sp/>mOutOverlapBuffer;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>These<sp/>have<sp/>that<sp/>size,<sp/>or<sp/>0:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><ref refid="_noise_reduction_8cpp_1a64be07a13efb96ba9d376c4cbc6f501e" kindref="member">FloatVector</ref><sp/>mInWindow;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><ref refid="_noise_reduction_8cpp_1a64be07a13efb96ba9d376c4cbc6f501e" kindref="member">FloatVector</ref><sp/>mOutWindow;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mSpectrumSize;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><ref refid="_noise_reduction_8cpp_1a64be07a13efb96ba9d376c4cbc6f501e" kindref="member">FloatVector</ref><sp/>mFreqSmoothingScratch;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mFreqSmoothingBins;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>When<sp/>spectral<sp/>selection<sp/>limits<sp/>the<sp/>affected<sp/>band:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mBinLow;<sp/><sp/></highlight><highlight class="comment">//<sp/>inclusive<sp/>lower<sp/>bound</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mBinHigh;<sp/></highlight><highlight class="comment">//<sp/>exclusive<sp/>upper<sp/>bound</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_effect_noise_reduction_1_1_settings_1a82ac53e1f2fc895ab08c2561dc69230e" kindref="member">mNoiseReductionChoice</ref>;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mStepsPerWindow;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mStepSize;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_effect_noise_reduction_1_1_settings_1a673a66bef76870471ba358010c720ddb" kindref="member">mMethod</ref>;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_effect_noise_reduction_1_1_settings_1a8678912f0a5fe978e3a4809ec405633d" kindref="member">mNewSensitivity</ref>;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mInSampleCount;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mOutStepCount;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mInWavePos;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>mOneBlockAttack;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>mOneBlockRelease;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>mNoiseAttenFactor;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>mOldSensitivityFactor;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mNWindowsToExamine;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mCenter;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mHistoryLen;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Record</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Record(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>spectrumSize)</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>mSpectrums(spectrumSize)</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>mGains(spectrumSize)</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>mRealFFTs(spectrumSize<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>mImagFFTs(spectrumSize<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_noise_reduction_8cpp_1a64be07a13efb96ba9d376c4cbc6f501e" kindref="member">FloatVector</ref><sp/>mSpectrums;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_noise_reduction_8cpp_1a64be07a13efb96ba9d376c4cbc6f501e" kindref="member">FloatVector</ref><sp/>mGains;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_noise_reduction_8cpp_1a64be07a13efb96ba9d376c4cbc6f501e" kindref="member">FloatVector</ref><sp/>mRealFFTs;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_noise_reduction_8cpp_1a64be07a13efb96ba9d376c4cbc6f501e" kindref="member">FloatVector</ref><sp/>mImagFFTs;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/>std::vector&lt;Record*&gt;<sp/>mQueue;</highlight></codeline>
<codeline lineno="342"><highlight class="normal">};</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="comment">/****************************************************************/</highlight><highlight class="comment">/*****************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EffectNoiseReduction::Dialog</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355" refid="class_effect_noise_reduction_1_1_dialog" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_effect_noise_reduction_1_1_dialog" kindref="compound">EffectNoiseReduction::Dialog</ref><sp/>final<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_effect_dialog" kindref="compound">EffectDialog</ref></highlight></codeline>
<codeline lineno="356"><highlight class="normal">{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>constructors<sp/>and<sp/>destructors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_effect_noise_reduction_1a7f7f23419b196ad256bc2e7a8d563e25" kindref="member">Dialog</ref></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="class_effect_noise_reduction" kindref="compound">EffectNoiseReduction</ref><sp/>*effect,</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_effect_noise_reduction_1_1_settings" kindref="compound">Settings</ref><sp/>*settings,</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxWindow<sp/>*parent,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bHasProfile,</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bAllowTwiddleSettings);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_effect_1a9e13b161bcd1d3a72063eb6ff58d8ff6" kindref="member">PopulateOrExchange</ref>(<ref refid="class_shuttle_gui" kindref="compound">ShuttleGui</ref><sp/>&amp;<sp/><ref refid="xlftab_8c_1af933676109efed7ab34cea71d748a517" kindref="member">S</ref>);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_effect_1aa55e73977e578fd18c07c4628695ee4e" kindref="member">TransferDataToWindow</ref>();</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_effect_1aa63d8b6e966d986e22e09d57a1ded772" kindref="member">TransferDataFromWindow</ref>();</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369" refid="class_effect_noise_reduction_1_1_dialog_1ae1564fa76edd879a9f64cb81f976f075" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_effect_noise_reduction_1_1_settings" kindref="compound">Settings</ref><sp/>&amp;<ref refid="class_effect_noise_reduction_1_1_dialog_1ae1564fa76edd879a9f64cb81f976f075" kindref="member">GetTempSettings</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="370"><highlight class="keyword"><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mTempSettings;<sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DisableControlsIfIsolating();</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ADVANCED_SETTINGS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EnableDisableSensitivityControls();</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>handlers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnGetProfile(<sp/>wxCommandEvent<sp/>&amp;event<sp/>);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnNoiseReductionChoice(<sp/>wxCommandEvent<sp/>&amp;event<sp/>);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ADVANCED_SETTINGS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnMethodChoice(wxCommandEvent<sp/>&amp;);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnPreview(wxCommandEvent<sp/>&amp;event);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnReduceNoise(<sp/>wxCommandEvent<sp/>&amp;event<sp/>);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnCancel(<sp/>wxCommandEvent<sp/>&amp;event<sp/>);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnText(wxCommandEvent<sp/>&amp;event);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnSlider(wxCommandEvent<sp/>&amp;event);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>data<sp/>members</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_effect_noise_reduction" kindref="compound">EffectNoiseReduction</ref><sp/>*m_pEffect;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_effect_noise_reduction_1_1_settings" kindref="compound">EffectNoiseReduction::Settings</ref><sp/>*m_pSettings;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_effect_noise_reduction_1_1_settings" kindref="compound">EffectNoiseReduction::Settings</ref><sp/>mTempSettings;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mbHasProfile;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mbAllowTwiddleSettings;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/>wxRadioButton<sp/>*mKeepSignal;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ISOLATE_CHOICE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/>wxRadioButton<sp/>*mKeepNoise;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>RESIDUE_CHOICE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/>wxRadioButton<sp/>*mResidue;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>DECLARE_EVENT_TABLE()</highlight></codeline>
<codeline lineno="412"><highlight class="normal">};</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414" refid="class_effect_noise_reduction_1a1c530a71216f760c44cac5f45b5565cf" refkind="member"><highlight class="normal"><ref refid="class_effect_noise_reduction_1a1c530a71216f760c44cac5f45b5565cf" kindref="member">EffectNoiseReduction::EffectNoiseReduction</ref>()</highlight></codeline>
<codeline lineno="415"><highlight class="normal">:<sp/>mSettings(new<sp/><ref refid="class_effect_noise_reduction" kindref="compound">EffectNoiseReduction</ref>::<ref refid="class_effect_noise_reduction_1_1_settings" kindref="compound">Settings</ref>)</highlight></codeline>
<codeline lineno="416"><highlight class="normal">{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_effect_noise_reduction_1a0769056bb0a60c4e4b8c587e8c0b2f96" kindref="member">Init</ref>();</highlight></codeline>
<codeline lineno="418"><highlight class="normal">}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420" refid="class_effect_noise_reduction_1a901fa1c95e883a2b1eb9faaa4588b9f7" refkind="member"><highlight class="normal"><ref refid="class_effect_noise_reduction_1a901fa1c95e883a2b1eb9faaa4588b9f7" kindref="member">EffectNoiseReduction::~EffectNoiseReduction</ref>()</highlight></codeline>
<codeline lineno="421"><highlight class="normal">{</highlight></codeline>
<codeline lineno="422"><highlight class="normal">}</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight><highlight class="comment">//<sp/>IdentInterface<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426" refid="class_effect_noise_reduction_1a9f1169198cf05e95a35f08fa55e16b29" refkind="member"><highlight class="normal">wxString<sp/><ref refid="class_effect_noise_reduction_1a9f1169198cf05e95a35f08fa55e16b29" kindref="member">EffectNoiseReduction::GetSymbol</ref>()</highlight></codeline>
<codeline lineno="427"><highlight class="normal">{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_noise_reduction_8h_1a62a990b16866ba2b3a55afb5b2c55024" kindref="member">NOISEREDUCTION_PLUGIN_SYMBOL</ref>;</highlight></codeline>
<codeline lineno="429"><highlight class="normal">}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431" refid="class_effect_noise_reduction_1a70defa1c594f679310daf0592fe8ec0f" refkind="member"><highlight class="normal">wxString<sp/><ref refid="class_effect_noise_reduction_1a70defa1c594f679310daf0592fe8ec0f" kindref="member">EffectNoiseReduction::GetDescription</ref>()</highlight></codeline>
<codeline lineno="432"><highlight class="normal">{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_audacity_8h_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(</highlight><highlight class="stringliteral">&quot;Removes<sp/>background<sp/>noise<sp/>such<sp/>as<sp/>fans,<sp/>tape<sp/>noise,<sp/>or<sp/>hums&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="434"><highlight class="normal">}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EffectIdentInterface<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438" refid="class_effect_noise_reduction_1a44d730f9baef9e72dfcaf2b1cb10578f" refkind="member"><highlight class="normal"><ref refid="_effect_interface_8h_1a4809a7bb3fd1a421902a667cc1405d43" kindref="member">EffectType</ref><sp/><ref refid="class_effect_noise_reduction_1a44d730f9baef9e72dfcaf2b1cb10578f" kindref="member">EffectNoiseReduction::GetType</ref>()</highlight></codeline>
<codeline lineno="439"><highlight class="normal">{</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_effect_interface_8h_1a4809a7bb3fd1a421902a667cc1405d43afd0f1aa24555662b091206287d30521b" kindref="member">EffectTypeProcess</ref>;</highlight></codeline>
<codeline lineno="441"><highlight class="normal">}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443" refid="class_effect_noise_reduction_1a0769056bb0a60c4e4b8c587e8c0b2f96" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_effect_noise_reduction_1a0769056bb0a60c4e4b8c587e8c0b2f96" kindref="member">EffectNoiseReduction::Init</ref>()</highlight></codeline>
<codeline lineno="444"><highlight class="normal">{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="446"><highlight class="normal">}</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448" refid="class_effect_noise_reduction_1aa157bd70741e4ea801683d4e7b37e784" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_effect_noise_reduction_1aa157bd70741e4ea801683d4e7b37e784" kindref="member">EffectNoiseReduction::CheckWhetherSkipEffect</ref>()</highlight></codeline>
<codeline lineno="449"><highlight class="normal">{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="451"><highlight class="normal">}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453" refid="class_effect_noise_reduction_1acf3e51a4ac7616c6abe580f7926a5469" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_effect_noise_reduction_1acf3e51a4ac7616c6abe580f7926a5469" kindref="member">EffectNoiseReduction::PromptUser</ref>(wxWindow<sp/>*parent)</highlight></codeline>
<codeline lineno="454"><highlight class="normal">{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>may<sp/>want<sp/>to<sp/>twiddle<sp/>the<sp/>levels<sp/>if<sp/>we<sp/>are<sp/>setting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>from<sp/>an<sp/>automation<sp/>dialog,<sp/>the<sp/>only<sp/>case<sp/>in<sp/>which<sp/>we<sp/>can</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>here<sp/>without<sp/>any<sp/>wavetracks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mSettings-&gt;PromptUser(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>parent,</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">(mStatistics),<sp/>(<ref refid="class_effect_1a8f7eda5a9bc77d963ba4144bcea8fb81" kindref="member">GetNumWaveTracks</ref>()<sp/>==<sp/>0));</highlight></codeline>
<codeline lineno="460"><highlight class="normal">}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_effect_noise_reduction_1_1_settings_1a49bb03abdd30d833836478242ab9b57c" kindref="member">EffectNoiseReduction::Settings::PromptUser</ref></highlight></codeline>
<codeline lineno="463" refid="class_effect_noise_reduction_1_1_settings_1a49bb03abdd30d833836478242ab9b57c" refkind="member"><highlight class="normal">(<ref refid="class_effect_noise_reduction" kindref="compound">EffectNoiseReduction</ref><sp/>*effect,<sp/>wxWindow<sp/>*parent,</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bHasProfile,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bAllowTwiddleSettings)</highlight></codeline>
<codeline lineno="465"><highlight class="normal">{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_effect_noise_reduction_1_1_dialog" kindref="compound">EffectNoiseReduction::Dialog</ref><sp/>dlog</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(effect,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>parent,<sp/>bHasProfile,<sp/>bAllowTwiddleSettings);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/>dlog.CentreOnParent();</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/>dlog.ShowModal();</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dlog.GetReturnCode()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>=<sp/>dlog.<ref refid="class_effect_noise_reduction_1_1_dialog_1ae1564fa76edd879a9f64cb81f976f075" kindref="member">GetTempSettings</ref>();</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/>mDoProfile<sp/>=<sp/>(dlog.GetReturnCode()<sp/>==<sp/>1);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>PrefsIO(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="479"><highlight class="normal">}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>StructureType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FieldType&gt;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">PrefsTableEntry<sp/>{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>FieldType<sp/>(StructureType::*MemberPointer);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>MemberPointer<sp/>field;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxChar<sp/>*<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>FieldType<sp/>defaultValue;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>StructureType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FieldType&gt;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>readPrefs(</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>StructureType<sp/>*structure,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;<ref refid="structprefix" kindref="compound">prefix</ref>,</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PrefsTableEntry&lt;StructureType,<sp/>FieldType&gt;<sp/>*fields,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numFields)</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ii<sp/>=<sp/>0;<sp/>ii<sp/>&lt;<sp/>numFields;<sp/>++ii)<sp/>{</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PrefsTableEntry&lt;StructureType,<sp/>FieldType&gt;<sp/>&amp;entry<sp/>=<sp/>fields[ii];</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(prefix<sp/>+<sp/>entry.name,<sp/>&amp;(structure-&gt;*(entry.field)),</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entry.defaultValue);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>StructureType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FieldType&gt;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>writePrefs(</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>StructureType<sp/>*structure,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;prefix,</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PrefsTableEntry&lt;StructureType,<sp/>FieldType&gt;<sp/>*fields,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numFields)</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ii<sp/>=<sp/>0;<sp/>ii<sp/>&lt;<sp/>numFields;<sp/>++ii)<sp/>{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PrefsTableEntry&lt;StructureType,<sp/>FieldType&gt;<sp/>&amp;entry<sp/>=<sp/>fields[ii];</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Write(prefix<sp/>+<sp/>entry.name,<sp/>structure-&gt;*(entry.field));</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="513"><highlight class="normal">}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515" refid="class_effect_noise_reduction_1_1_settings_1a46d76d568fa2e89ead4b39bea59c04c4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_effect_noise_reduction_1_1_settings_1a46d76d568fa2e89ead4b39bea59c04c4" kindref="member">EffectNoiseReduction::Settings::PrefsIO</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>read)</highlight></codeline>
<codeline lineno="516"><highlight class="normal">{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>DEFAULT_OLD_SENSITIVITY<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PrefsTableEntry&lt;Settings,<sp/>double&gt;<sp/>doubleTable[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>&amp;<ref refid="class_effect_noise_reduction_1_1_settings_1a8678912f0a5fe978e3a4809ec405633d" kindref="member">Settings::mNewSensitivity</ref>,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;Sensitivity&quot;</highlight><highlight class="normal">),<sp/>6.0<sp/>},</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>&amp;<ref refid="class_effect_noise_reduction_1_1_settings_1ac11f719d012357a416d91f761f63f789" kindref="member">Settings::mNoiseGain</ref>,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;Gain&quot;</highlight><highlight class="normal">),<sp/>12.0<sp/>},</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>&amp;<ref refid="class_effect_noise_reduction_1_1_settings_1a6bb04dd376410dab3a67ecb446a73af1" kindref="member">Settings::mAttackTime</ref>,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;AttackTime&quot;</highlight><highlight class="normal">),<sp/>0.02<sp/>},</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>&amp;<ref refid="class_effect_noise_reduction_1_1_settings_1a1de6d038a5bd8e9d5158eeef06dc42cf" kindref="member">Settings::mReleaseTime</ref>,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;ReleaseTime&quot;</highlight><highlight class="normal">),<sp/>0.10<sp/>},</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>&amp;<ref refid="class_effect_noise_reduction_1_1_settings_1a118310261cec68f4f044fc80d88f02fc" kindref="member">Settings::mFreqSmoothingBands</ref>,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;FreqSmoothing&quot;</highlight><highlight class="normal">),<sp/>3.0<sp/>},</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Advanced<sp/>settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>&amp;<ref refid="class_effect_noise_reduction_1_1_settings_1a85fc0cc6d0dfb671fb63a0014fd16090" kindref="member">Settings::mOldSensitivity</ref>,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;OldSensitivity&quot;</highlight><highlight class="normal">),<sp/>DEFAULT_OLD_SENSITIVITY<sp/>},</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>doubleTableSize<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(doubleTable)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(doubleTable[0]);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>PrefsTableEntry&lt;Settings,<sp/>int&gt;<sp/>intTable[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>&amp;<ref refid="class_effect_noise_reduction_1_1_settings_1a82ac53e1f2fc895ab08c2561dc69230e" kindref="member">Settings::mNoiseReductionChoice</ref>,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;ReductionChoice&quot;</highlight><highlight class="normal">),<sp/>NRC_REDUCE_NOISE<sp/>},</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Advanced<sp/>settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>&amp;<ref refid="class_effect_noise_reduction_1_1_settings_1a58e3a556866b785b7cd9d8203ab58518" kindref="member">Settings::mWindowTypes</ref>,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;WindowTypes&quot;</highlight><highlight class="normal">),<sp/>WT_DEFAULT_WINDOW_TYPES<sp/>},</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>&amp;<ref refid="class_effect_noise_reduction_1_1_settings_1a06c90e5f69a35bb37d88949331fde123" kindref="member">Settings::mWindowSizeChoice</ref>,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;WindowSize&quot;</highlight><highlight class="normal">),<sp/>DEFAULT_WINDOW_SIZE_CHOICE<sp/>},</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>&amp;<ref refid="class_effect_noise_reduction_1_1_settings_1a51c0443b45ef45fadc76e299f8e07c6c" kindref="member">Settings::mStepsPerWindowChoice</ref>,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;StepsPerWindow&quot;</highlight><highlight class="normal">),<sp/>DEFAULT_STEPS_PER_WINDOW_CHOICE<sp/>},</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>&amp;<ref refid="class_effect_noise_reduction_1_1_settings_1a673a66bef76870471ba358010c720ddb" kindref="member">Settings::mMethod</ref>,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;Method&quot;</highlight><highlight class="normal">),<sp/>DM_DEFAULT_METHOD<sp/>},</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>intTableSize<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(intTable)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(intTable[0]);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/><ref refid="lib_2expat_8h_1ab9c3d990bb61927ef5406b25c41652ee" kindref="member">prefix</ref>(wxT(</highlight><highlight class="stringliteral">&quot;/Effects/NoiseReduction/&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(read)<sp/>{</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>readPrefs(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>prefix,<sp/>doubleTable,<sp/>doubleTableSize);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>readPrefs(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>prefix,<sp/>intTable,<sp/>intTableSize);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ignore<sp/>preferences<sp/>for<sp/>unavailable<sp/>options.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>RESIDUE_CHOICE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mNoiseReductionChoice<sp/>==<sp/>NRC_LEAVE_RESIDUE)</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mNoiseReductionChoice<sp/>=<sp/>NRC_ISOLATE_NOISE;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ADVANCED_SETTINGS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>all<sp/>hidden<sp/>advanced<sp/>settings<sp/>to<sp/>defaults.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mWindowTypes<sp/>=<sp/>WT_DEFAULT_WINDOW_TYPES;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mWindowSizeChoice<sp/>=<sp/>DEFAULT_WINDOW_SIZE_CHOICE;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mStepsPerWindowChoice<sp/>=<sp/>DEFAULT_STEPS_PER_WINDOW_CHOICE;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mMethod<sp/>=<sp/>DM_DEFAULT_METHOD;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mOldSensitivity<sp/>=<sp/>DEFAULT_OLD_SENSITIVITY;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OLD_METHOD_AVAILABLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mMethod<sp/>==<sp/>DM_OLD_METHOD)</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mMethod<sp/>=<sp/>DM_DEFAULT_METHOD;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>writePrefs(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>prefix,<sp/>doubleTable,<sp/>doubleTableSize);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>writePrefs(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>prefix,<sp/>intTable,<sp/>intTableSize);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Flush();</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="575"><highlight class="normal">}</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577" refid="class_effect_noise_reduction_1_1_settings_1a2876344879f8341f5176b1fdabdc0a4c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_effect_noise_reduction_1_1_settings_1a2876344879f8341f5176b1fdabdc0a4c" kindref="member">EffectNoiseReduction::Settings::Validate</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="578"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(StepsPerWindow()<sp/>&lt;<sp/>windowTypesInfo[mWindowTypes].minSteps)<sp/>{</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::wxMessageBox(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Steps<sp/>per<sp/>block<sp/>are<sp/>too<sp/>few<sp/>for<sp/>the<sp/>window<sp/>types.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(StepsPerWindow()<sp/>&gt;<sp/>WindowSize())<sp/>{</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::wxMessageBox(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Steps<sp/>per<sp/>block<sp/>cannot<sp/>exceed<sp/>the<sp/>window<sp/>size.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mMethod<sp/>==<sp/>DM_MEDIAN<sp/>&amp;&amp;<sp/>StepsPerWindow()<sp/>&gt;<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::wxMessageBox(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Median<sp/>method<sp/>is<sp/>not<sp/>implemented<sp/>for<sp/>more<sp/>than<sp/>four<sp/>steps<sp/>per<sp/>window.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="595"><highlight class="normal">}</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597" refid="class_effect_noise_reduction_1a55d87b17e0396284f396f45f4be15afe" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_effect_noise_reduction_1a55d87b17e0396284f396f45f4be15afe" kindref="member">EffectNoiseReduction::Process</ref>()</highlight></codeline>
<codeline lineno="598"><highlight class="normal">{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>same<sp/>code<sp/>will<sp/>either<sp/>reduce<sp/>noise<sp/>or<sp/>profile<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/>this-&gt;<ref refid="class_effect_1a039810b41ba1f3e233360caeb48f769d" kindref="member">CopyInputTracks</ref>();<sp/></highlight><highlight class="comment">//<sp/>Set<sp/>up<sp/>mOutputTracks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_selected_track_list_of_kind_iterator" kindref="compound">SelectedTrackListOfKindIterator</ref><sp/>iter(<ref refid="class_track_1a4a6604845139575dfc25be299aeb60efab39033be088537a007532668cb6d16a8" kindref="member">Track::Wave</ref>,<sp/><ref refid="class_effect_1a9fc18f5889f07570bf0f5dff7bb0f625" kindref="member">mOutputTracks</ref>);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*track<sp/>=<sp/>(<ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*)<sp/>iter.<ref refid="class_track_list_cond_iterator_1a1b09130ef5d92e19a60db05933d89ad5" kindref="member">First</ref>();</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!track)</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>statistics<sp/>if<sp/>gathering<sp/>them,<sp/>or<sp/>check<sp/>for<sp/>mismatched<sp/>(advanced)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>settings<sp/>if<sp/>reducing<sp/>noise.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mSettings-&gt;mDoProfile)<sp/>{</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>spectrumSize<sp/>=<sp/>1<sp/>+<sp/>mSettings-&gt;WindowSize()<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mStatistics.reset</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_effect_noise_reduction_1_1_statistics" kindref="compound">Statistics</ref>(spectrumSize,<sp/>track-&gt;<ref refid="class_wave_track_1a18bbe6e1bb4b1016c3a3de835c33b8fa" kindref="member">GetRate</ref>(),<sp/>mSettings-&gt;mWindowTypes));</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mStatistics-&gt;mWindowSize<sp/>!=<sp/>mSettings-&gt;WindowSize())<sp/>{</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>possible<sp/>only<sp/>with<sp/>advanced<sp/>settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::wxMessageBox(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;You<sp/>must<sp/>specify<sp/>the<sp/>same<sp/>window<sp/>size<sp/>for<sp/>steps<sp/>1<sp/>and<sp/>2.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mStatistics-&gt;mWindowTypes<sp/>!=<sp/>mSettings-&gt;mWindowTypes)<sp/>{</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>warning<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::wxMessageBox(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Warning:<sp/>window<sp/>types<sp/>are<sp/>not<sp/>the<sp/>same<sp/>as<sp/>for<sp/>profiling.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_effect_noise_reduction_1_1_worker" kindref="compound">Worker</ref><sp/>worker(*mSettings,<sp/>mStatistics-&gt;mRate</highlight></codeline>
<codeline lineno="626"><highlight class="normal">#ifdef<sp/><ref refid="_experimental_8h_1a1b9e5b2efd9af8cf047a6f578ebada59" kindref="member">EXPERIMENTAL_SPECTRAL_EDITING</ref></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><ref refid="class_effect_1a5518bf74e6a990740b161d6c1e7cfe2d" kindref="member">mF0</ref>,<sp/><ref refid="class_effect_1a195656d6f884aa2b564bb7b6dec392b4" kindref="member">mF1</ref></highlight></codeline>
<codeline lineno="628"><highlight class="normal">#<ref refid="sndfile__play_8m_1a74c64864f5283ae06d4a981642a59af9" kindref="member">endif</ref></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bGoodResult<sp/>=<sp/>worker.<ref refid="class_effect_noise_reduction_1_1_worker_1a65f7cf1d082c6116b0c22eedbde2375b" kindref="member">Process</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>*mStatistics,<sp/>*<ref refid="class_effect_1a5d51a6ae7955c0a31c6b4df5a17a9f07" kindref="member">mFactory</ref>,<sp/>iter,<sp/><ref refid="class_effect_1ae83563966df5c0b3aba90dd183b15b53" kindref="member">mT0</ref>,<sp/><ref refid="class_effect_1a7681f0ae7a8245659b002078e78ef146" kindref="member">mT1</ref>);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mSettings-&gt;mDoProfile)<sp/>{</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bGoodResult)</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mSettings-&gt;mDoProfile<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>So<sp/>that<sp/>&quot;repeat<sp/>last<sp/>effect&quot;<sp/>will<sp/>reduce<sp/>noise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mStatistics.reset();<sp/></highlight><highlight class="comment">//<sp/>So<sp/>that<sp/>profiling<sp/>must<sp/>be<sp/>done<sp/>again<sp/>before<sp/>noise<sp/>reduction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/>this-&gt;<ref refid="class_effect_1af97713f3d7ca2c647d19e1ec4501d12e" kindref="member">ReplaceProcessedTracks</ref>(bGoodResult);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bGoodResult;</highlight></codeline>
<codeline lineno="639"><highlight class="normal">}</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641" refid="class_effect_noise_reduction_1_1_worker_1a54eef263ffe75d9782464b54e9cd9bfd" refkind="member"><highlight class="normal"><ref refid="class_effect_noise_reduction_1_1_worker_1a54eef263ffe75d9782464b54e9cd9bfd" kindref="member">EffectNoiseReduction::Worker::~Worker</ref>()</highlight></codeline>
<codeline lineno="642"><highlight class="normal">{</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><ref refid="_real_f_f_tf_8cpp_1ad005674cde11c0f9189a415b438053aa" kindref="member">EndFFT</ref>(hFFT);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ii<sp/>=<sp/>0,<sp/>nn<sp/>=<sp/>mQueue.size();<sp/>ii<sp/>&lt;<sp/>nn;<sp/>++ii)</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>mQueue[ii];</highlight></codeline>
<codeline lineno="646"><highlight class="normal">}</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_effect_noise_reduction_1_1_worker_1a65f7cf1d082c6116b0c22eedbde2375b" kindref="member">EffectNoiseReduction::Worker::Process</ref></highlight></codeline>
<codeline lineno="649" refid="class_effect_noise_reduction_1_1_worker_1a65f7cf1d082c6116b0c22eedbde2375b" refkind="member"><highlight class="normal">(<ref refid="class_effect_noise_reduction" kindref="compound">EffectNoiseReduction</ref><sp/>&amp;effect,<sp/><ref refid="class_effect_noise_reduction_1_1_statistics" kindref="compound">Statistics</ref><sp/>&amp;statistics,<sp/><ref refid="class_track_factory" kindref="compound">TrackFactory</ref><sp/>&amp;factory,</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><ref refid="class_selected_track_list_of_kind_iterator" kindref="compound">SelectedTrackListOfKindIterator</ref><sp/>&amp;iter,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_effect_1ae83563966df5c0b3aba90dd183b15b53" kindref="member">mT0</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_effect_1a7681f0ae7a8245659b002078e78ef146" kindref="member">mT1</ref>)</highlight></codeline>
<codeline lineno="651"><highlight class="normal">{</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*track<sp/>=<sp/>(<ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*)<sp/>iter.<ref refid="class_track_list_cond_iterator_1a1b09130ef5d92e19a60db05933d89ad5" kindref="member">First</ref>();</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(track)<sp/>{</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(track-&gt;<ref refid="class_wave_track_1a18bbe6e1bb4b1016c3a3de835c33b8fa" kindref="member">GetRate</ref>()<sp/>!=<sp/><ref refid="class_effect_1ab1a3d8e761e17f8dbe1a9ad749de4327" kindref="member">mSampleRate</ref>)<sp/>{</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mDoProfile)</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::wxMessageBox(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;All<sp/>noise<sp/>profile<sp/>data<sp/>must<sp/>have<sp/>the<sp/>same<sp/>sample<sp/>rate.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::wxMessageBox(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;The<sp/>sample<sp/>rate<sp/>of<sp/>the<sp/>noise<sp/>profile<sp/>must<sp/>match<sp/>that<sp/>of<sp/>the<sp/>sound<sp/>to<sp/>be<sp/>processed.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>trackStart<sp/>=<sp/>track-&gt;<ref refid="class_wave_track_1acd39f4f01272e112a2d132e48b60678e" kindref="member">GetStartTime</ref>();</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>trackEnd<sp/>=<sp/>track-&gt;<ref refid="class_wave_track_1a73f81dee4dcb79e0df3bb6a85b866ae1" kindref="member">GetEndTime</ref>();</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0<sp/>=<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">std::max</ref>(trackStart,<sp/>mT0);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1<sp/>=<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">std::min</ref>(trackEnd,<sp/>mT1);</highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t1<sp/>&gt;<sp/>t0)<sp/>{</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref><sp/>=<sp/>track-&gt;<ref refid="class_wave_track_1afe621ba06a0396725da44e937143972f" kindref="member">TimeToLongSamples</ref>(t0);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref><sp/>=<sp/>track-&gt;<ref refid="class_wave_track_1afe621ba06a0396725da44e937143972f" kindref="member">TimeToLongSamples</ref>(t1);</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref><sp/>=<sp/>(<ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref>)(end<sp/>-<sp/>start);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ProcessOne(effect,<sp/>statistics,<sp/>factory,</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count,<sp/>track,<sp/>start,<sp/>len))</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>track<sp/>=<sp/>(<ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*)<sp/>iter.<ref refid="class_track_list_cond_iterator_1a9e3f44333f6cc2d0171315d389fb6582" kindref="member">Next</ref>();</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++<ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref>;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mDoProfile)<sp/>{</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(statistics.<ref refid="class_effect_noise_reduction_1_1_statistics_1ab17125778a20ce16b8a8bd13b21cfdc3" kindref="member">mTotalWindows</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::wxMessageBox(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Selected<sp/>noise<sp/>profile<sp/>is<sp/>too<sp/>short.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="689"><highlight class="normal">}</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectNoiseReduction::Worker::ApplyFreqSmoothing(<ref refid="_noise_reduction_8cpp_1a64be07a13efb96ba9d376c4cbc6f501e" kindref="member">FloatVector</ref><sp/>&amp;gains)</highlight></codeline>
<codeline lineno="692"><highlight class="normal">{</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Given<sp/>an<sp/>array<sp/>of<sp/>gain<sp/>mutipliers,<sp/>average<sp/>them</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GEOMETRICALLY.<sp/><sp/>Don&apos;t<sp/>multiply<sp/>and<sp/>take<sp/>nth<sp/>root<sp/>--</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>may<sp/>quickly<sp/>cause<sp/>underflows.<sp/><sp/>Instead,<sp/>average<sp/>the<sp/>logs.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mFreqSmoothingBins<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*pScratch<sp/>=<sp/>&amp;mFreqSmoothingScratch[0];</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::fill(pScratch,<sp/>pScratch<sp/>+<sp/>mSpectrumSize,<sp/>0.0<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>);</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ii<sp/>=<sp/>0;<sp/>ii<sp/>&lt;<sp/>mSpectrumSize;<sp/>++ii)</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gains[ii]<sp/>=<sp/>log(gains[ii]);</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ii<sp/>=<sp/>0;<sp/>ii<sp/>&lt;<sp/>mSpectrumSize;<sp/>++ii)<sp/>{</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j0<sp/>=<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">std::max</ref>(0,<sp/>ii<sp/>-<sp/>mFreqSmoothingBins);</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j1<sp/>=<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">std::min</ref>(mSpectrumSize<sp/>-<sp/>1,<sp/>ii<sp/>+<sp/>mFreqSmoothingBins);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jj<sp/>=<sp/>j0;<sp/>jj<sp/>&lt;=<sp/>j1;<sp/>++jj)<sp/>{</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mFreqSmoothingScratch[ii]<sp/>+=<sp/>gains[jj];</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mFreqSmoothingScratch[ii]<sp/>/=<sp/>(j1<sp/>-<sp/>j0<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ii<sp/>=<sp/>0;<sp/>ii<sp/>&lt;<sp/>mSpectrumSize;<sp/>++ii)</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>gains[ii]<sp/>=<sp/>exp(mFreqSmoothingScratch[ii]);</highlight></codeline>
<codeline lineno="719"><highlight class="normal">}</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><ref refid="class_effect_noise_reduction_1_1_worker_1a1c81a2c1a4e3a6c887146d682e671a4a" kindref="member">EffectNoiseReduction::Worker::Worker</ref></highlight></codeline>
<codeline lineno="722" refid="class_effect_noise_reduction_1_1_worker_1a1c81a2c1a4e3a6c887146d682e671a4a" refkind="member"><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_effect_noise_reduction_1_1_settings" kindref="compound">Settings</ref><sp/>&amp;settings,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacepatest__suggested__vs__streaminfo__latency_1a14f2ecd6f756d329f6df4096833062d0" kindref="member">sampleRate</ref></highlight></codeline>
<codeline lineno="723"><highlight class="normal">#ifdef<sp/><ref refid="_experimental_8h_1a1b9e5b2efd9af8cf047a6f578ebada59" kindref="member">EXPERIMENTAL_SPECTRAL_EDITING</ref></highlight></codeline>
<codeline lineno="724"><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>f0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>f1</highlight></codeline>
<codeline lineno="725"><highlight class="normal">#<ref refid="sndfile__play_8m_1a74c64864f5283ae06d4a981642a59af9" kindref="member">endif</ref></highlight></codeline>
<codeline lineno="726"><highlight class="normal">)</highlight></codeline>
<codeline lineno="727"><highlight class="normal">:<sp/>mDoProfile(settings.<ref refid="class_effect_noise_reduction_1_1_settings_1acf83c314cff3398d8bc172508395d454" kindref="member">mDoProfile</ref>)</highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal">,<sp/><ref refid="class_effect_1ab1a3d8e761e17f8dbe1a9ad749de4327" kindref="member">mSampleRate</ref>(<ref refid="namespacepatest__suggested__vs__streaminfo__latency_1a14f2ecd6f756d329f6df4096833062d0" kindref="member">sampleRate</ref>)</highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal">,<sp/>mWindowSize(settings.<ref refid="class_effect_noise_reduction_1_1_settings_1a3d3a3d6e886e2db5d496fea164e49e81" kindref="member">WindowSize</ref>())</highlight></codeline>
<codeline lineno="732"><highlight class="normal">,<sp/>hFFT(<ref refid="_real_f_f_tf_8cpp_1a2b189c2319fd7e3a60cce2cdcdaafe02" kindref="member">InitializeFFT</ref>(mWindowSize))</highlight></codeline>
<codeline lineno="733"><highlight class="normal">,<sp/>mFFTBuffer(mWindowSize)</highlight></codeline>
<codeline lineno="734"><highlight class="normal">,<sp/>mInWaveBuffer(mWindowSize)</highlight></codeline>
<codeline lineno="735"><highlight class="normal">,<sp/>mOutOverlapBuffer(mWindowSize)</highlight></codeline>
<codeline lineno="736"><highlight class="normal">,<sp/>mInWindow()</highlight></codeline>
<codeline lineno="737"><highlight class="normal">,<sp/>mOutWindow()</highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal">,<sp/>mSpectrumSize(1<sp/>+<sp/>mWindowSize<sp/>/<sp/>2)</highlight></codeline>
<codeline lineno="740"><highlight class="normal">,<sp/>mFreqSmoothingScratch(mSpectrumSize)</highlight></codeline>
<codeline lineno="741"><highlight class="normal">,<sp/>mFreqSmoothingBins(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(settings.<ref refid="class_effect_noise_reduction_1_1_settings_1a118310261cec68f4f044fc80d88f02fc" kindref="member">mFreqSmoothingBands</ref>))</highlight></codeline>
<codeline lineno="742"><highlight class="normal">,<sp/>mBinLow(0)</highlight></codeline>
<codeline lineno="743"><highlight class="normal">,<sp/>mBinHigh(mSpectrumSize)</highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal">,<sp/>mNoiseReductionChoice(settings.<ref refid="class_effect_noise_reduction_1_1_settings_1a82ac53e1f2fc895ab08c2561dc69230e" kindref="member">mNoiseReductionChoice</ref>)</highlight></codeline>
<codeline lineno="746"><highlight class="normal">,<sp/>mStepsPerWindow(settings.<ref refid="class_effect_noise_reduction_1_1_settings_1ab6eda94ee9b1972ea8d68b8bc7e4253d" kindref="member">StepsPerWindow</ref>())</highlight></codeline>
<codeline lineno="747"><highlight class="normal">,<sp/>mStepSize(mWindowSize<sp/>/<sp/>mStepsPerWindow)</highlight></codeline>
<codeline lineno="748"><highlight class="normal">,<sp/>mMethod(settings.<ref refid="class_effect_noise_reduction_1_1_settings_1a673a66bef76870471ba358010c720ddb" kindref="member">mMethod</ref>)</highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Sensitivity<sp/>setting<sp/>is<sp/>a<sp/>base<sp/>10<sp/>log,<sp/>turn<sp/>it<sp/>into<sp/>a<sp/>natural<sp/>log</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal">,<sp/>mNewSensitivity(settings.<ref refid="class_effect_noise_reduction_1_1_settings_1a8678912f0a5fe978e3a4809ec405633d" kindref="member">mNewSensitivity</ref><sp/>*<sp/>log(10.0))</highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal">,<sp/>mInSampleCount(0)</highlight></codeline>
<codeline lineno="754"><highlight class="normal">,<sp/>mOutStepCount(0)</highlight></codeline>
<codeline lineno="755"><highlight class="normal">,<sp/>mInWavePos(0)</highlight></codeline>
<codeline lineno="756"><highlight class="normal">{</highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_SPECTRAL_EDITING</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>bin<sp/>=<sp/><ref refid="class_effect_1ab1a3d8e761e17f8dbe1a9ad749de4327" kindref="member">mSampleRate</ref><sp/>/<sp/>mWindowSize;</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f0<sp/>&gt;=<sp/>0.0<sp/>)</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBinLow<sp/>=<sp/>floor(f0<sp/>/<sp/>bin);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f1<sp/>&gt;=<sp/>0.0)</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBinHigh<sp/>=<sp/>ceil(f1<sp/>/<sp/>bin);</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>noiseGain<sp/>=<sp/>-settings.<ref refid="class_effect_noise_reduction_1_1_settings_1ac11f719d012357a416d91f761f63f789" kindref="member">mNoiseGain</ref>;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nAttackBlocks<sp/>=<sp/>1<sp/>+<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)(settings.<ref refid="class_effect_noise_reduction_1_1_settings_1a6bb04dd376410dab3a67ecb446a73af1" kindref="member">mAttackTime</ref><sp/>*<sp/><ref refid="namespacepatest__suggested__vs__streaminfo__latency_1a14f2ecd6f756d329f6df4096833062d0" kindref="member">sampleRate</ref><sp/>/<sp/>mStepSize);</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nReleaseBlocks<sp/>=<sp/>1<sp/>+<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)(settings.<ref refid="class_effect_noise_reduction_1_1_settings_1a1de6d038a5bd8e9d5158eeef06dc42cf" kindref="member">mReleaseTime</ref><sp/>*<sp/><ref refid="namespacepatest__suggested__vs__streaminfo__latency_1a14f2ecd6f756d329f6df4096833062d0" kindref="member">sampleRate</ref><sp/>/<sp/>mStepSize);</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Applies<sp/>to<sp/>amplitudes,<sp/>divide<sp/>by<sp/>20:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/>mNoiseAttenFactor<sp/>=<sp/><ref refid="_audacity_8h_1ae65fedb390ed942548ca02213e6a2813" kindref="member">DB_TO_LINEAR</ref>(noiseGain);</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>to<sp/>gain<sp/>factors<sp/>which<sp/>apply<sp/>to<sp/>amplitudes,<sp/>divide<sp/>by<sp/>20:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/>mOneBlockAttack<sp/>=<sp/><ref refid="_audacity_8h_1ae65fedb390ed942548ca02213e6a2813" kindref="member">DB_TO_LINEAR</ref>(noiseGain<sp/>/<sp/>nAttackBlocks);</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/>mOneBlockRelease<sp/>=<sp/><ref refid="_audacity_8h_1ae65fedb390ed942548ca02213e6a2813" kindref="member">DB_TO_LINEAR</ref>(noiseGain<sp/>/<sp/>nReleaseBlocks);</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Applies<sp/>to<sp/>power,<sp/>divide<sp/>by<sp/>10:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/>mOldSensitivityFactor<sp/>=<sp/>pow(10.0,<sp/>settings.<ref refid="class_effect_noise_reduction_1_1_settings_1a85fc0cc6d0dfb671fb63a0014fd16090" kindref="member">mOldSensitivity</ref><sp/>/<sp/>10.0);</highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/>mNWindowsToExamine<sp/>=<sp/>(mMethod<sp/>==<sp/>DM_OLD_METHOD)</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">std::max</ref>(2,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(minSignalTime<sp/>*<sp/><ref refid="namespacepatest__suggested__vs__streaminfo__latency_1a14f2ecd6f756d329f6df4096833062d0" kindref="member">sampleRate</ref><sp/>/<sp/>mStepSize))</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>1<sp/>+<sp/>mStepsPerWindow;</highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/>mCenter<sp/>=<sp/>mNWindowsToExamine<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/>wxASSERT(mCenter<sp/>&gt;=<sp/>1);<sp/></highlight><highlight class="comment">//<sp/>release<sp/>depends<sp/>on<sp/>this<sp/>assumption</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mDoProfile)</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>OLD_METHOD_AVAILABLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mHistoryLen<sp/>=<sp/>mNWindowsToExamine;</highlight></codeline>
<codeline lineno="788"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mHistoryLen<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Allow<sp/>long<sp/>enough<sp/>queue<sp/>for<sp/>sufficient<sp/>inspection<sp/>of<sp/>the<sp/>middle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>for<sp/>attack<sp/>processing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>See<sp/>ReduceNoise()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mHistoryLen<sp/>=<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">std::max</ref>(mNWindowsToExamine,<sp/>mCenter<sp/>+<sp/>nAttackBlocks);</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/>mQueue.resize(mHistoryLen);</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ii<sp/>=<sp/>0;<sp/>ii<sp/>&lt;<sp/>mHistoryLen;<sp/>++ii)</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mQueue[ii]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Record(mSpectrumSize);</highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>windows</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>constantTerm<sp/>=</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>windowTypesInfo[settings.<ref refid="class_effect_noise_reduction_1_1_settings_1a58e3a556866b785b7cd9d8203ab58518" kindref="member">mWindowTypes</ref>].productConstantTerm;</highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>One<sp/>or<sp/>the<sp/>other<sp/>window<sp/>must<sp/>by<sp/>multiplied<sp/>by<sp/>this<sp/>to<sp/>correct<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>overlap.<sp/><sp/>Must<sp/>scale<sp/>down<sp/>as<sp/>steps<sp/>get<sp/>smaller,<sp/>and<sp/>overlaps<sp/>larger.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>multiplier<sp/>=<sp/>1.0<sp/>/<sp/>(constantTerm<sp/>*<sp/>mStepsPerWindow);</highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>analysis<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(settings.<ref refid="class_effect_noise_reduction_1_1_settings_1a58e3a556866b785b7cd9d8203ab58518" kindref="member">mWindowTypes</ref>)<sp/>{</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WT_RECTANGULAR_HANN:</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rectangularOut<sp/>=</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>settings.<ref refid="class_effect_noise_reduction_1_1_settings_1a58e3a556866b785b7cd9d8203ab58518" kindref="member">mWindowTypes</ref><sp/>==<sp/>WT_HAMMING_RECTANGULAR<sp/>||</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>settings.<ref refid="class_effect_noise_reduction_1_1_settings_1a58e3a556866b785b7cd9d8203ab58518" kindref="member">mWindowTypes</ref><sp/>==<sp/>WT_HANN_RECTANGULAR;</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="layer3_8c_1a4b8bfe70f28d6faddcb10d6ecf8c1989" kindref="member">m</ref><sp/>=</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rectangularOut<sp/>?<sp/>multiplier<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>coefficients<sp/>=</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>windowTypesInfo[settings.<ref refid="class_effect_noise_reduction_1_1_settings_1a58e3a556866b785b7cd9d8203ab58518" kindref="member">mWindowTypes</ref>].inCoefficients;</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c0<sp/>=<sp/>coefficients[0];</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c1<sp/>=<sp/>coefficients[1];</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="conv2dtest_8m_1a869bd946456256c347112f5798b5b504" kindref="member">c2</ref><sp/>=<sp/>coefficients[2];</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mInWindow.resize(mWindowSize);</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ii<sp/>=<sp/>0;<sp/>ii<sp/>&lt;<sp/>mWindowSize;<sp/>++ii)</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mInWindow[ii]<sp/>=<sp/>m<sp/>*</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(c0<sp/>+<sp/>c1<sp/>*<sp/><ref refid="pffft_8c_1a57a66355e043ccefc17aca9338a2b748" kindref="member">cos</ref>((2.0*<ref refid="mathematics_8h_1ae71449b1cc6e6250b91f539153a7a0d3" kindref="member">M_PI</ref>*ii)<sp/>/<sp/>mWindowSize)</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>c2<sp/>*<sp/><ref refid="pffft_8c_1a57a66355e043ccefc17aca9338a2b748" kindref="member">cos</ref>((4.0*<ref refid="mathematics_8h_1ae71449b1cc6e6250b91f539153a7a0d3" kindref="member">M_PI</ref>*ii)<sp/>/<sp/>mWindowSize));</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mDoProfile)<sp/>{</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>synthesis<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(settings.<ref refid="class_effect_noise_reduction_1_1_settings_1a58e3a556866b785b7cd9d8203ab58518" kindref="member">mWindowTypes</ref>)<sp/>{</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WT_HANN_RECTANGULAR:</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WT_HAMMING_RECTANGULAR:</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WT_HAMMING_INV_HAMMING:</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mOutWindow.resize(mWindowSize);</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ii<sp/>=<sp/>0;<sp/>ii<sp/>&lt;<sp/>mWindowSize;<sp/>++ii)</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mOutWindow[ii]<sp/>=<sp/>multiplier<sp/>/<sp/>mInWindow[ii];</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>coefficients<sp/>=</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>windowTypesInfo[settings.<ref refid="class_effect_noise_reduction_1_1_settings_1a58e3a556866b785b7cd9d8203ab58518" kindref="member">mWindowTypes</ref>].outCoefficients;</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c0<sp/>=<sp/>coefficients[0];</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>c1<sp/>=<sp/>coefficients[1];</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="conv2dtest_8m_1a869bd946456256c347112f5798b5b504" kindref="member">c2</ref><sp/>=<sp/>coefficients[2];</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mOutWindow.resize(mWindowSize);</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ii<sp/>=<sp/>0;<sp/>ii<sp/>&lt;<sp/>mWindowSize;<sp/>++ii)</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mOutWindow[ii]<sp/>=<sp/>multiplier<sp/>*</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(c0<sp/>+<sp/>c1<sp/>*<sp/><ref refid="pffft_8c_1a57a66355e043ccefc17aca9338a2b748" kindref="member">cos</ref>((2.0*<ref refid="mathematics_8h_1ae71449b1cc6e6250b91f539153a7a0d3" kindref="member">M_PI</ref>*ii)<sp/>/<sp/>mWindowSize)</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>c2<sp/>*<sp/><ref refid="pffft_8c_1a57a66355e043ccefc17aca9338a2b748" kindref="member">cos</ref>((4.0*<ref refid="mathematics_8h_1ae71449b1cc6e6250b91f539153a7a0d3" kindref="member">M_PI</ref>*ii)<sp/>/<sp/>mWindowSize));</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="865"><highlight class="normal">}</highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectNoiseReduction::Worker::StartNewTrack()</highlight></codeline>
<codeline lineno="868"><highlight class="normal">{</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*pFill;</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ii<sp/>=<sp/>0;<sp/>ii<sp/>&lt;<sp/>mHistoryLen;<sp/>++ii)<sp/>{</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Record<sp/>&amp;record<sp/>=<sp/>*mQueue[ii];</highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pFill<sp/>=<sp/>&amp;record.mSpectrums[0];</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::fill(pFill,<sp/>pFill<sp/>+<sp/>mSpectrumSize,<sp/>0.0<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>);</highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pFill<sp/>=<sp/>&amp;record.mRealFFTs[0];</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::fill(pFill,<sp/>pFill<sp/>+<sp/>mSpectrumSize<sp/>-<sp/>1,<sp/>0.0<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>);</highlight></codeline>
<codeline lineno="878"><highlight class="normal"></highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pFill<sp/>=<sp/>&amp;record.mImagFFTs[0];</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::fill(pFill,<sp/>pFill<sp/>+<sp/>mSpectrumSize<sp/>-<sp/>1,<sp/>0.0<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>);</highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pFill<sp/>=<sp/>&amp;record.mGains[0];</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::fill(pFill,<sp/>pFill<sp/>+<sp/>mSpectrumSize,<sp/>mNoiseAttenFactor);</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/>pFill<sp/>=<sp/>&amp;mOutOverlapBuffer[0];</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/>std::fill(pFill,<sp/>pFill<sp/>+<sp/>mWindowSize,<sp/>0.0<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>);</highlight></codeline>
<codeline lineno="888"><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/>pFill<sp/>=<sp/>&amp;mInWaveBuffer[0];</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/>std::fill(pFill,<sp/>pFill<sp/>+<sp/>mWindowSize,<sp/>0.0<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>);</highlight></codeline>
<codeline lineno="891"><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mDoProfile)</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>do<sp/>not<sp/>want<sp/>leading<sp/>zero<sp/>padded<sp/>windows</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mInWavePos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mOutStepCount<sp/>=<sp/>-(mHistoryLen<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>So<sp/>that<sp/>the<sp/>queue<sp/>gets<sp/>primed<sp/>with<sp/>some<sp/>windows,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>zero-padded<sp/>in<sp/>front,<sp/>the<sp/>first<sp/>having<sp/>mStepSize</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>samples<sp/>of<sp/>wave<sp/>data:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mInWavePos<sp/>=<sp/>mWindowSize<sp/>-<sp/>mStepSize;</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>starts<sp/>negative,<sp/>to<sp/>count<sp/>up<sp/>until<sp/>the<sp/>queue<sp/>fills:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mOutStepCount<sp/>=<sp/>-(mHistoryLen<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>...<sp/>and<sp/>then<sp/>must<sp/>pass<sp/>over<sp/>the<sp/>padded<sp/>windows,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>before<sp/>the<sp/>first<sp/>full<sp/>window:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>(mStepsPerWindow<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/>mInSampleCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="912"><highlight class="normal">}</highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectNoiseReduction::Worker::ProcessSamples</highlight></codeline>
<codeline lineno="915"><highlight class="normal">(<ref refid="class_effect_noise_reduction_1_1_statistics" kindref="compound">Statistics</ref><sp/>&amp;statistics,<sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*outputTrack,</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref>)</highlight></codeline>
<codeline lineno="917"><highlight class="normal">{</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(len<sp/>&amp;&amp;<sp/>mOutStepCount<sp/>*<sp/>mStepSize<sp/>&lt;<sp/>mInSampleCount)<sp/>{</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>avail<sp/>=<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">std::min</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(len),<sp/>mWindowSize<sp/>-<sp/>mInWavePos);</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memmove(&amp;mInWaveBuffer[mInWavePos],<sp/>buffer,<sp/>avail<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buffer<sp/>+=<sp/>avail;</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>-=<sp/>avail;</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mInWavePos<sp/>+=<sp/>avail;</highlight></codeline>
<codeline lineno="924"><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mInWavePos<sp/>==<sp/>mWindowSize)<sp/>{</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FillFirstHistoryWindow();</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mDoProfile)</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GatherStatistics(statistics);</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReduceNoise(statistics,<sp/>outputTrack);</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++mOutStepCount;</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RotateHistoryWindows();</highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Rotate<sp/>for<sp/>overlap-add</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memmove(&amp;mInWaveBuffer[0],<sp/>&amp;mInWaveBuffer[mStepSize],</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(mWindowSize<sp/>-<sp/>mStepSize)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mInWavePos<sp/>-=<sp/>mStepSize;</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="940"><highlight class="normal">}</highlight></codeline>
<codeline lineno="941"><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectNoiseReduction::Worker::FillFirstHistoryWindow()</highlight></codeline>
<codeline lineno="943"><highlight class="normal">{</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Transform<sp/>samples<sp/>to<sp/>frequency<sp/>domain,<sp/>windowed<sp/>as<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mInWindow.size()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ii<sp/>=<sp/>0;<sp/>ii<sp/>&lt;<sp/>mWindowSize;<sp/>++ii)</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mFFTBuffer[ii]<sp/>=<sp/>mInWaveBuffer[ii]<sp/>*<sp/>mInWindow[ii];</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memmove(&amp;mFFTBuffer[0],<sp/>&amp;mInWaveBuffer[0],<sp/>mWindowSize<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><ref refid="_real_f_f_tf_8cpp_1abb12cd04470120d0f8154f4b0175ec92" kindref="member">RealFFTf</ref>(&amp;mFFTBuffer[0],<sp/>hFFT);</highlight></codeline>
<codeline lineno="951"><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/>Record<sp/>&amp;record<sp/>=<sp/>*mQueue[0];</highlight></codeline>
<codeline lineno="953"><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Store<sp/>real<sp/>and<sp/>imaginary<sp/>parts<sp/>for<sp/>later<sp/>inverse<sp/>FFT,<sp/>and<sp/>compute</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>power</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*pReal<sp/>=<sp/>&amp;record.mRealFFTs[1];</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*pImag<sp/>=<sp/>&amp;record.mImagFFTs[1];</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*pPower<sp/>=<sp/>&amp;record.mSpectrums[1];</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*pBitReversed<sp/>=<sp/>&amp;hFFT-&gt;BitReversed[1];</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="record_8c_1a6c49eed6a71ecf58a51b1f64f4ec8e55" kindref="member">last</ref><sp/>=<sp/>mSpectrumSize<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ii<sp/>=<sp/>1;<sp/>ii<sp/>&lt;<sp/><ref refid="record_8c_1a6c49eed6a71ecf58a51b1f64f4ec8e55" kindref="member">last</ref>;<sp/>++ii)<sp/>{</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kk<sp/>=<sp/>*pBitReversed++;</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>realPart<sp/>=<sp/>*pReal++<sp/>=<sp/>mFFTBuffer[kk];</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>imagPart<sp/>=<sp/>*pImag++<sp/>=<sp/>mFFTBuffer[kk<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pPower++<sp/>=<sp/>realPart<sp/>*<sp/>realPart<sp/>+<sp/>imagPart<sp/>*<sp/>imagPart;</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>DC<sp/>and<sp/>Fs/2<sp/>bins<sp/>need<sp/>to<sp/>be<sp/>handled<sp/>specially</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dc<sp/>=<sp/>mFFTBuffer[0];</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>record.mRealFFTs[0]<sp/>=<sp/>dc;</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>record.mSpectrums[0]<sp/>=<sp/>dc*dc;</highlight></codeline>
<codeline lineno="972"><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>nyquist<sp/>=<sp/>mFFTBuffer[1];</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>record.mImagFFTs[0]<sp/>=<sp/>nyquist;<sp/></highlight><highlight class="comment">//<sp/>For<sp/>Fs/2,<sp/>not<sp/>really<sp/>imaginary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>record.mSpectrums[<ref refid="record_8c_1a6c49eed6a71ecf58a51b1f64f4ec8e55" kindref="member">last</ref>]<sp/>=<sp/>nyquist<sp/>*<sp/>nyquist;</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="977"><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mNoiseReductionChoice<sp/>!=<sp/>NRC_ISOLATE_NOISE)</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Default<sp/>all<sp/>gains<sp/>to<sp/>the<sp/>reduction<sp/>factor,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>until<sp/>we<sp/>decide<sp/>to<sp/>raise<sp/>some<sp/>of<sp/>them<sp/>later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*pGain<sp/>=<sp/>&amp;record.mGains[0];</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::fill(pGain,<sp/>pGain<sp/>+<sp/>mSpectrumSize,<sp/>mNoiseAttenFactor);</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="985"><highlight class="normal">}</highlight></codeline>
<codeline lineno="986"><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectNoiseReduction::Worker::RotateHistoryWindows()</highlight></codeline>
<codeline lineno="988"><highlight class="normal">{</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/>Record<sp/>*save<sp/>=<sp/>mQueue[mHistoryLen<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/>mQueue.pop_back();</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/>mQueue.insert(mQueue.begin(),<sp/>save);</highlight></codeline>
<codeline lineno="992"><highlight class="normal">}</highlight></codeline>
<codeline lineno="993"><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectNoiseReduction::Worker::FinishTrackStatistics(<ref refid="class_effect_noise_reduction_1_1_statistics" kindref="compound">Statistics</ref><sp/>&amp;statistics)</highlight></codeline>
<codeline lineno="995"><highlight class="normal">{</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>windows<sp/>=<sp/>statistics.<ref refid="class_effect_noise_reduction_1_1_statistics_1adc7ddfa5b3c6d2cf88553e597d6e687f" kindref="member">mTrackWindows</ref>;</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>multiplier<sp/>=<sp/>statistics.<ref refid="class_effect_noise_reduction_1_1_statistics_1ab17125778a20ce16b8a8bd13b21cfdc3" kindref="member">mTotalWindows</ref>;</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>denom<sp/>=<sp/>windows<sp/>+<sp/>multiplier;</highlight></codeline>
<codeline lineno="999"><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Combine<sp/>averages<sp/>in<sp/>case<sp/>of<sp/>multiple<sp/>profile<sp/>tracks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(windows)</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ii<sp/>=<sp/>0,<sp/>nn<sp/>=<sp/>statistics.<ref refid="class_effect_noise_reduction_1_1_statistics_1a8eef84dd0517967f9ef56ed907068ece" kindref="member">mMeans</ref>.size();<sp/>ii<sp/>&lt;<sp/>nn;<sp/>++ii)<sp/>{</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>&amp;mean<sp/>=<sp/>statistics.<ref refid="class_effect_noise_reduction_1_1_statistics_1a8eef84dd0517967f9ef56ed907068ece" kindref="member">mMeans</ref>[ii];</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>&amp;sum<sp/>=<sp/>statistics.<ref refid="class_effect_noise_reduction_1_1_statistics_1af81af8f27eba423cc134bd9b94b7019e" kindref="member">mSums</ref>[ii];</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mean<sp/>=<sp/>(mean<sp/>*<sp/>multiplier<sp/>+<sp/>sum)<sp/>/<sp/>denom;</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>for<sp/>next<sp/>track</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"></highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reset<sp/>for<sp/>next<sp/>track</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/>statistics.<ref refid="class_effect_noise_reduction_1_1_statistics_1adc7ddfa5b3c6d2cf88553e597d6e687f" kindref="member">mTrackWindows</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/>statistics.<ref refid="class_effect_noise_reduction_1_1_statistics_1ab17125778a20ce16b8a8bd13b21cfdc3" kindref="member">mTotalWindows</ref><sp/>=<sp/>denom;</highlight></codeline>
<codeline lineno="1013"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"></highlight></codeline>
<codeline lineno="1015"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectNoiseReduction::Worker::FinishTrack</highlight></codeline>
<codeline lineno="1016"><highlight class="normal">(<ref refid="class_effect_noise_reduction_1_1_statistics" kindref="compound">Statistics</ref><sp/>&amp;statistics,<sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*outputTrack)</highlight></codeline>
<codeline lineno="1017"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Keep<sp/>flushing<sp/>empty<sp/>input<sp/>buffers<sp/>through<sp/>the<sp/>history</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>windows<sp/>until<sp/>we&apos;ve<sp/>output<sp/>exactly<sp/>as<sp/>many<sp/>samples<sp/>as</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>were<sp/>input.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Well,<sp/>not<sp/>exactly,<sp/>but<sp/>not<sp/>more<sp/>than<sp/>one<sp/>step-size<sp/>of<sp/>extra<sp/>samples</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>at<sp/>the<sp/>end.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We&apos;ll<sp/>DELETE<sp/>them<sp/>later<sp/>in<sp/>ProcessOne.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1024"><highlight class="normal"></highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><ref refid="_noise_reduction_8cpp_1a64be07a13efb96ba9d376c4cbc6f501e" kindref="member">FloatVector</ref><sp/><ref refid="namespacesmartmsgmerge_1ac2680eb7fa9c45a71b644e17efafadd9" kindref="member">empty</ref>(mStepSize);</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"></highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(mOutStepCount<sp/>*<sp/>mStepSize<sp/>&lt;<sp/>mInSampleCount)<sp/>{</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ProcessSamples(statistics,<sp/>outputTrack,<sp/>mStepSize,<sp/>&amp;empty[0]);</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1030"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"></highlight></codeline>
<codeline lineno="1032"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectNoiseReduction::Worker::GatherStatistics(<ref refid="class_effect_noise_reduction_1_1_statistics" kindref="compound">Statistics</ref><sp/>&amp;statistics)</highlight></codeline>
<codeline lineno="1033"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/>++statistics.<ref refid="class_effect_noise_reduction_1_1_statistics_1adc7ddfa5b3c6d2cf88553e597d6e687f" kindref="member">mTrackWindows</ref>;</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"></highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NEW<sp/>statistics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*pPower<sp/>=<sp/>&amp;mQueue[0]-&gt;mSpectrums[0];</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*pSum<sp/>=<sp/>&amp;statistics.<ref refid="class_effect_noise_reduction_1_1_statistics_1af81af8f27eba423cc134bd9b94b7019e" kindref="member">mSums</ref>[0];</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jj<sp/>=<sp/>0;<sp/>jj<sp/>&lt;<sp/>mSpectrumSize;<sp/>++jj)<sp/>{</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pSum++<sp/>+=<sp/>*pPower++;</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>OLD_METHOD_AVAILABLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>noise<sp/>threshold<sp/>for<sp/>each<sp/>frequency<sp/>is<sp/>the<sp/>maximum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>level<sp/>achieved<sp/>at<sp/>that<sp/>frequency<sp/>for<sp/>a<sp/>minimum<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mMinSignalBlocks<sp/>blocks<sp/>in<sp/>a<sp/>row<sp/>-<sp/>the<sp/>max<sp/>of<sp/>a<sp/>min.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"></highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>finish<sp/>=<sp/>mHistoryLen;</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"></highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>old<sp/>statistics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*pPower<sp/>=<sp/>&amp;mQueue[0]-&gt;mSpectrums[0];</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*pThreshold<sp/>=<sp/>&amp;statistics.mNoiseThreshold[0];</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jj<sp/>=<sp/>0;<sp/>jj<sp/>&lt;<sp/>mSpectrumSize;<sp/>++jj)<sp/>{</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref><sp/>=<sp/>*pPower++;</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ii<sp/>=<sp/>1;<sp/>ii<sp/>&lt;<sp/>finish;<sp/>++ii)</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min<sp/>=<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">std::min</ref>(min,<sp/>mQueue[ii]-&gt;mSpectrums[jj]);</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pThreshold<sp/>=<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">std::max</ref>(*pThreshold,<sp/>min);</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++pThreshold;</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1065"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Return<sp/>true<sp/>iff<sp/>the<sp/>given<sp/>band<sp/>of<sp/>the<sp/>&quot;center&quot;<sp/>window<sp/>looks<sp/>like<sp/>noise.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1068"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Examine<sp/>the<sp/>band<sp/>in<sp/>a<sp/>few<sp/>neighboring<sp/>windows<sp/>to<sp/>decide.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1069"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1070"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>EffectNoiseReduction::Worker::Classify(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_effect_noise_reduction_1_1_statistics" kindref="compound">Statistics</ref><sp/>&amp;statistics,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>band)</highlight></codeline>
<codeline lineno="1071"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(mMethod)<sp/>{</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>OLD_METHOD_AVAILABLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>DM_OLD_METHOD:</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref><sp/>=<sp/>mQueue[0]-&gt;mSpectrums[band];</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ii<sp/>=<sp/>1;<sp/>ii<sp/>&lt;<sp/>mNWindowsToExamine;<sp/>++ii)</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min<sp/>=<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">std::min</ref>(min,<sp/>mQueue[ii]-&gt;mSpectrums[band]);</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>min<sp/>&lt;=<sp/>mOldSensitivityFactor<sp/>*<sp/>statistics.mNoiseThreshold[band];</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>New<sp/>methods<sp/>suppose<sp/>an<sp/>exponential<sp/>distribution<sp/>of<sp/>power<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>noise;<sp/>NEW<sp/>sensitivity<sp/>is<sp/>meant<sp/>to<sp/>be<sp/>log<sp/>of<sp/>probability</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>noise<sp/>strays<sp/>above<sp/>the<sp/>threshold.<sp/><sp/>Call<sp/>that<sp/>probability</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>-<sp/>F.<sp/><sp/>The<sp/>quantile<sp/>function<sp/>of<sp/>an<sp/>exponential<sp/>distribution<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>log<sp/>(1<sp/>-<sp/>F)<sp/>*<sp/>mean.<sp/><sp/>Thus<sp/>simply<sp/>multiply<sp/>mean<sp/>by<sp/>sensitivity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>get<sp/>the<sp/>threshold.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>DM_MEDIAN:</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>method<sp/>examines<sp/>the<sp/>window<sp/>and<sp/>all<sp/>windows</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>partly<sp/>overlap<sp/>it,<sp/>and<sp/>takes<sp/>a<sp/>median,<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>avoid<sp/>being<sp/>fooled<sp/>by<sp/>up<sp/>and<sp/>down<sp/>excursions<sp/>into</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>either<sp/>the<sp/>mistake<sp/>of<sp/>classifying<sp/>noise<sp/>as<sp/>not<sp/>noise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(leaving<sp/>a<sp/>musical<sp/>noise<sp/>chime),<sp/>or<sp/>the<sp/>opposite</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(distorting<sp/>the<sp/>signal<sp/>with<sp/>a<sp/>drop<sp/>out).<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mNWindowsToExamine<sp/>==<sp/>3)</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>different<sp/>from<sp/>second<sp/>greatest.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>secondGreatest;</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mNWindowsToExamine<sp/>==<sp/>5)</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>greatest<sp/>=<sp/>0.0,<sp/>second<sp/>=<sp/>0.0,<sp/>third<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ii<sp/>=<sp/>0;<sp/>ii<sp/>&lt;<sp/>mNWindowsToExamine;<sp/>++ii)<sp/>{</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>power<sp/>=<sp/>mQueue[ii]-&gt;mSpectrums[band];</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(power<sp/>&gt;=<sp/>greatest)</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>third<sp/>=<sp/>second,<sp/>second<sp/>=<sp/>greatest,<sp/>greatest<sp/>=<sp/>power;</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(power<sp/>&gt;=<sp/>second)</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>third<sp/>=<sp/>second,<sp/>second<sp/>=<sp/>power;</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(power<sp/>&gt;=<sp/>third)</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>third<sp/>=<sp/>power;</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>third<sp/>&lt;=<sp/>mNewSensitivity<sp/>*<sp/>statistics.<ref refid="class_effect_noise_reduction_1_1_statistics_1a8eef84dd0517967f9ef56ed907068ece" kindref="member">mMeans</ref>[band];</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxASSERT(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/>secondGreatest:</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>DM_SECOND_GREATEST:</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>method<sp/>just<sp/>throws<sp/>out<sp/>the<sp/>high<sp/>outlier.<sp/><sp/>It</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>should<sp/>be<sp/>less<sp/>prone<sp/>to<sp/>distortions<sp/>and<sp/>more<sp/>prone<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>chimes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>greatest<sp/>=<sp/>0.0,<sp/>second<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ii<sp/>=<sp/>0;<sp/>ii<sp/>&lt;<sp/>mNWindowsToExamine;<sp/>++ii)<sp/>{</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>power<sp/>=<sp/>mQueue[ii]-&gt;mSpectrums[band];</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(power<sp/>&gt;=<sp/>greatest)</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>second<sp/>=<sp/>greatest,<sp/>greatest<sp/>=<sp/>power;</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(power<sp/>&gt;=<sp/>second)</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>second<sp/>=<sp/>power;</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>second<sp/>&lt;=<sp/>mNewSensitivity<sp/>*<sp/>statistics.<ref refid="class_effect_noise_reduction_1_1_statistics_1a8eef84dd0517967f9ef56ed907068ece" kindref="member">mMeans</ref>[band];</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxASSERT(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1136"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"></highlight></codeline>
<codeline lineno="1138"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectNoiseReduction::Worker::ReduceNoise</highlight></codeline>
<codeline lineno="1139"><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_effect_noise_reduction_1_1_statistics" kindref="compound">Statistics</ref><sp/>&amp;statistics,<sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*outputTrack)</highlight></codeline>
<codeline lineno="1140"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Raise<sp/>the<sp/>gain<sp/>for<sp/>elements<sp/>in<sp/>the<sp/>center<sp/>of<sp/>the<sp/>sliding<sp/>history</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>or,<sp/>if<sp/>isolating<sp/>noise,<sp/>zero<sp/>out<sp/>the<sp/>non-noise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*pGain<sp/>=<sp/>&amp;mQueue[mCenter]-&gt;mGains[0];</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mNoiseReductionChoice<sp/>==<sp/>NRC_ISOLATE_NOISE)<sp/>{</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>All<sp/>above<sp/>or<sp/>below<sp/>the<sp/>selected<sp/>frequency<sp/>range<sp/>is<sp/>non-noise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::fill(pGain,<sp/>pGain<sp/>+<sp/>mBinLow,<sp/>0.0<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>);</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::fill(pGain<sp/>+<sp/>mBinHigh,<sp/>pGain<sp/>+<sp/>mSpectrumSize,<sp/>0.0<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>);</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pGain<sp/>+=<sp/>mBinLow;</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jj<sp/>=<sp/>mBinLow;<sp/>jj<sp/>&lt;<sp/>mBinHigh;<sp/>++jj)<sp/>{</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isNoise<sp/>=<sp/>Classify(statistics,<sp/>jj);</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pGain++<sp/>=<sp/>isNoise<sp/>?<sp/>1.0<sp/>:<sp/>0.0;</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>All<sp/>above<sp/>or<sp/>below<sp/>the<sp/>selected<sp/>frequency<sp/>range<sp/>is<sp/>non-noise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::fill(pGain,<sp/>pGain<sp/>+<sp/>mBinLow,<sp/>1.0<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>);</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::fill(pGain<sp/>+<sp/>mBinHigh,<sp/>pGain<sp/>+<sp/>mSpectrumSize,<sp/>1.0<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>);</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pGain<sp/>+=<sp/>mBinLow;</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jj<sp/>=<sp/>mBinLow;<sp/>jj<sp/>&lt;<sp/>mBinHigh;<sp/>++jj)<sp/>{</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isNoise<sp/>=<sp/>Classify(statistics,<sp/>jj);</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!isNoise)<sp/></highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pGain<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++pGain;</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"></highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mNoiseReductionChoice<sp/>!=<sp/>NRC_ISOLATE_NOISE)</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>each<sp/>direction,<sp/>define<sp/>an<sp/>exponential<sp/>decay<sp/>of<sp/>gain<sp/>from<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>center;<sp/>make<sp/>actual<sp/>gains<sp/>the<sp/>maximum<sp/>of<sp/>mNoiseAttenFactor,<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>decay<sp/>curve,<sp/>and<sp/>their<sp/>prior<sp/>values.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1174"><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>First,<sp/>the<sp/>attack,<sp/>which<sp/>goes<sp/>backward<sp/>in<sp/>time,<sp/>which<sp/>is,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>toward<sp/>higher<sp/>indices<sp/>in<sp/>the<sp/>queue.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jj<sp/>=<sp/>0;<sp/>jj<sp/>&lt;<sp/>mSpectrumSize;<sp/>++jj)<sp/>{</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ii<sp/>=<sp/>mCenter<sp/>+<sp/>1;<sp/>ii<sp/>&lt;<sp/>mHistoryLen;<sp/>++ii)<sp/>{</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>minimum<sp/>=</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">std::max</ref>(mNoiseAttenFactor,</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mQueue[ii<sp/>-<sp/>1]-&gt;mGains[jj]<sp/>*<sp/>mOneBlockAttack);</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>&amp;gain<sp/>=<sp/>mQueue[ii]-&gt;mGains[jj];</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gain<sp/>&lt;<sp/>minimum)</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gain<sp/>=<sp/>minimum;</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>can<sp/>stop<sp/>now,<sp/>our<sp/>attack<sp/>curve<sp/>is<sp/>intersecting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>decay<sp/>curve<sp/>of<sp/>some<sp/>window<sp/>previously<sp/>processed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"></highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now,<sp/>release.<sp/><sp/>We<sp/>need<sp/>only<sp/>look<sp/>one<sp/>window<sp/>ahead.<sp/><sp/>This<sp/>part<sp/>will</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>be<sp/>visited<sp/>again<sp/>when<sp/>we<sp/>examine<sp/>the<sp/>next<sp/>window,<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>carry<sp/>the<sp/>decay<sp/>further.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*pNextGain<sp/>=<sp/>&amp;mQueue[mCenter<sp/>-<sp/>1]-&gt;mGains[0];</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*pThisGain<sp/>=<sp/>&amp;mQueue[mCenter]-&gt;mGains[0];</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nn<sp/>=<sp/>mSpectrumSize;<sp/>nn--;)<sp/>{</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pNextGain<sp/>=</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">std::max</ref>(*pNextGain,</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">std::max</ref>(mNoiseAttenFactor,</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pThisGain++<sp/>*<sp/>mOneBlockRelease));</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++pNextGain;</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"></highlight></codeline>
<codeline lineno="1208"><highlight class="normal"></highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mOutStepCount<sp/>&gt;=<sp/>-(mStepsPerWindow<sp/>-<sp/>1))<sp/>{</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Record<sp/>&amp;record<sp/>=<sp/>*mQueue[mHistoryLen<sp/>-<sp/>1];<sp/><sp/></highlight><highlight class="comment">//<sp/>end<sp/>of<sp/>the<sp/>queue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="record_8c_1a6c49eed6a71ecf58a51b1f64f4ec8e55" kindref="member">last</ref><sp/>=<sp/>mSpectrumSize<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"></highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mNoiseReductionChoice<sp/>!=<sp/>NRC_ISOLATE_NOISE)</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>frequency<sp/>smoothing<sp/>to<sp/>output<sp/>gain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Gains<sp/>are<sp/>not<sp/>less<sp/>than<sp/>mNoiseAttenFactor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ApplyFreqSmoothing(record.mGains);</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"></highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>gain<sp/>to<sp/>FFT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*pGain<sp/>=<sp/>&amp;record.mGains[1];</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*pReal<sp/>=<sp/>&amp;record.mRealFFTs[1];</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*pImag<sp/>=<sp/>&amp;record.mImagFFTs[1];</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*pBuffer<sp/>=<sp/>&amp;mFFTBuffer[2];</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nn<sp/>=<sp/>mSpectrumSize<sp/>-<sp/>2;</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mNoiseReductionChoice<sp/>==<sp/>NRC_LEAVE_RESIDUE)<sp/>{</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>nn--;)<sp/>{</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Subtract<sp/>the<sp/>gain<sp/>we<sp/>would<sp/>otherwise<sp/>apply<sp/>from<sp/>1,<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>negate<sp/>that<sp/>to<sp/>flip<sp/>the<sp/>phase.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gain<sp/>=<sp/>*pGain++<sp/>-<sp/>1.0;</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pBuffer++<sp/>=<sp/>*pReal++<sp/>*<sp/>gain;</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pBuffer++<sp/>=<sp/>*pImag++<sp/>*<sp/>gain;</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mFFTBuffer[0]<sp/>=<sp/>record.mRealFFTs[0]<sp/>*<sp/>(record.mGains[0]<sp/>-<sp/>1.0);</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>Fs/2<sp/>component<sp/>is<sp/>stored<sp/>as<sp/>the<sp/>imaginary<sp/>part<sp/>of<sp/>the<sp/>DC<sp/>component</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mFFTBuffer[1]<sp/>=<sp/>record.mImagFFTs[0]<sp/>*<sp/>(record.mGains[<ref refid="record_8c_1a6c49eed6a71ecf58a51b1f64f4ec8e55" kindref="member">last</ref>]<sp/>-<sp/>1.0);</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>nn--;)<sp/>{</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>gain<sp/>=<sp/>*pGain++;</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pBuffer++<sp/>=<sp/>*pReal++<sp/>*<sp/>gain;</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pBuffer++<sp/>=<sp/>*pImag++<sp/>*<sp/>gain;</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mFFTBuffer[0]<sp/>=<sp/>record.mRealFFTs[0]<sp/>*<sp/>record.mGains[0];</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>Fs/2<sp/>component<sp/>is<sp/>stored<sp/>as<sp/>the<sp/>imaginary<sp/>part<sp/>of<sp/>the<sp/>DC<sp/>component</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mFFTBuffer[1]<sp/>=<sp/>record.mImagFFTs[0]<sp/>*<sp/>record.mGains[<ref refid="record_8c_1a6c49eed6a71ecf58a51b1f64f4ec8e55" kindref="member">last</ref>];</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"></highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Invert<sp/>the<sp/>FFT<sp/>into<sp/>the<sp/>output<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_real_f_f_tf_8cpp_1a8ca4ddedc63a09ab210ebf984d616373" kindref="member">InverseRealFFTf</ref>(&amp;mFFTBuffer[0],<sp/>hFFT);</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"></highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Overlap-add</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mOutWindow.size()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*pOut<sp/>=<sp/>&amp;mOutOverlapBuffer[0];</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*pWindow<sp/>=<sp/>&amp;mOutWindow[0];</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*pBitReversed<sp/>=<sp/>&amp;hFFT-&gt;BitReversed[0];</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jj<sp/>=<sp/>0;<sp/>jj<sp/>&lt;<sp/><ref refid="record_8c_1a6c49eed6a71ecf58a51b1f64f4ec8e55" kindref="member">last</ref>;<sp/>++jj)<sp/>{</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kk<sp/>=<sp/>*pBitReversed++;</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pOut++<sp/>+=<sp/>mFFTBuffer[kk]<sp/>*<sp/>(*pWindow++);</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pOut++<sp/>+=<sp/>mFFTBuffer[kk<sp/>+<sp/>1]<sp/>*<sp/>(*pWindow++);</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*pOut<sp/>=<sp/>&amp;mOutOverlapBuffer[0];</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*pBitReversed<sp/>=<sp/>&amp;hFFT-&gt;BitReversed[0];</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jj<sp/>=<sp/>0;<sp/>jj<sp/>&lt;<sp/><ref refid="record_8c_1a6c49eed6a71ecf58a51b1f64f4ec8e55" kindref="member">last</ref>;<sp/>++jj)<sp/>{</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kk<sp/>=<sp/>*pBitReversed++;</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pOut++<sp/>+=<sp/>mFFTBuffer[kk];</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pOut++<sp/>+=<sp/>mFFTBuffer[kk<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"></highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*buffer<sp/>=<sp/>&amp;mOutOverlapBuffer[0];</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mOutStepCount<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Output<sp/>the<sp/>first<sp/>portion<sp/>of<sp/>the<sp/>overlap<sp/>buffer,<sp/>they&apos;re<sp/>done</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outputTrack-&gt;<ref refid="class_wave_track_1adc09591a8d9b92cbbed08d8ccf28bac5" kindref="member">Append</ref>((<ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref>)buffer,<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>,<sp/>mStepSize);</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"></highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Shift<sp/>the<sp/>remainder<sp/>over.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memmove(buffer,<sp/>buffer<sp/>+<sp/>mStepSize,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)*(mWindowSize<sp/>-<sp/>mStepSize));</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::fill(buffer<sp/>+<sp/>mWindowSize<sp/>-<sp/>mStepSize,<sp/>buffer<sp/>+<sp/>mWindowSize,<sp/>0.0<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>);</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1283"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"></highlight></codeline>
<codeline lineno="1285"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>EffectNoiseReduction::Worker::ProcessOne</highlight></codeline>
<codeline lineno="1286"><highlight class="normal">(<ref refid="class_effect_noise_reduction" kindref="compound">EffectNoiseReduction</ref><sp/>&amp;effect,<sp/><sp/><ref refid="class_effect_noise_reduction_1_1_statistics" kindref="compound">Statistics</ref><sp/>&amp;statistics,<sp/><ref refid="class_track_factory" kindref="compound">TrackFactory</ref><sp/>&amp;factory,</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref>,<sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*<sp/>track,<sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>,<sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>len)</highlight></codeline>
<codeline lineno="1288"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(track<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"></highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/>StartNewTrack();</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"></highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/>std::unique_ptr&lt;WaveTrack&gt;<sp/>outputTrack(</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mDoProfile<sp/>?<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>factory.<ref refid="class_track_factory_1ab1cb74f7da7619abac80e7aa5ebaa5f2" kindref="member">NewWaveTrack</ref>(track-&gt;<ref refid="class_wave_track_1aeacd5bae293c72523bcde439345739f7" kindref="member">GetSampleFormat</ref>(),<sp/>track-&gt;<ref refid="class_wave_track_1a18bbe6e1bb4b1016c3a3de835c33b8fa" kindref="member">GetRate</ref>()));</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"></highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>bufferSize<sp/>=<sp/>track-&gt;<ref refid="class_wave_track_1a59ca00cf8abf1c28d043effec2866870" kindref="member">GetMaxBlockSize</ref>();</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><ref refid="_noise_reduction_8cpp_1a64be07a13efb96ba9d376c4cbc6f501e" kindref="member">FloatVector</ref><sp/><ref refid="recplay_8c_1adbbab5cb2248179d231690a1a02ff977" kindref="member">buffer</ref>(bufferSize);</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"></highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bLoopSuccess<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>blockSize;</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>samplePos<sp/>=<sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>;</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(bLoopSuccess<sp/>&amp;&amp;<sp/>samplePos<sp/>&lt;<sp/>start<sp/>+<sp/>len)<sp/>{</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Get<sp/>a<sp/>blockSize<sp/>of<sp/>samples<sp/>(smaller<sp/>than<sp/>the<sp/>size<sp/>of<sp/>the<sp/>buffer)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>blockSize<sp/>=<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">std::min</ref>(start<sp/>+<sp/>len<sp/>-<sp/>samplePos,<sp/>track-&gt;<ref refid="class_wave_track_1afe9a831f943117dc2f818d0d003c4475" kindref="member">GetBestBlockSize</ref>(samplePos));</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"></highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Get<sp/>the<sp/>samples<sp/>from<sp/>the<sp/>track<sp/>and<sp/>put<sp/>them<sp/>in<sp/>the<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>track-&gt;<ref refid="class_wave_track_1a989e55726466fa1d8ec9aa4322f1c950" kindref="member">Get</ref>((<ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref>)&amp;buffer[0],<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>,<sp/>samplePos,<sp/>blockSize);</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>samplePos<sp/>+=<sp/>blockSize;</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"></highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mInSampleCount<sp/>+=<sp/>blockSize;</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ProcessSamples(statistics,<sp/>outputTrack.get(),<sp/>blockSize,<sp/>&amp;buffer[0]);</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"></highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>the<sp/>Progress<sp/>meter,<sp/>let<sp/>user<sp/>cancel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bLoopSuccess<sp/>=<sp/></highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!effect.<ref refid="class_effect_1ab24b2dba2e1279c914b0445a1b6129e1" kindref="member">TrackProgress</ref>(count,<sp/>(samplePos<sp/>-<sp/>start)<sp/>/<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)len);</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"></highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bLoopSuccess)<sp/>{</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mDoProfile)</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FinishTrackStatistics(statistics);</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FinishTrack(statistics,<sp/>&amp;*outputTrack);</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"></highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bLoopSuccess<sp/>&amp;&amp;<sp/>!mDoProfile)<sp/>{</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Flush<sp/>the<sp/>output<sp/>WaveTrack<sp/>(since<sp/>it&apos;s<sp/>buffered)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outputTrack-&gt;Flush();</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"></highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Take<sp/>the<sp/>output<sp/>track<sp/>and<sp/>insert<sp/>it<sp/>in<sp/>place<sp/>of<sp/>the<sp/>original</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sample<sp/>data<sp/>(as<sp/>operated<sp/>on<sp/>--<sp/>this<sp/>may<sp/>not<sp/>match<sp/>mT0/mT1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0<sp/>=<sp/>outputTrack-&gt;LongSamplesToTime(start);</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tLen<sp/>=<sp/>outputTrack-&gt;LongSamplesToTime(len);</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Filtering<sp/>effects<sp/>always<sp/>end<sp/>up<sp/>with<sp/>more<sp/>data<sp/>than<sp/>they<sp/>started<sp/>with.<sp/><sp/>Delete<sp/>this<sp/>&apos;tail&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>outputTrack-&gt;HandleClear(tLen,<sp/>outputTrack-&gt;GetEndTime(),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bResult<sp/>=<sp/>track-&gt;<ref refid="class_wave_track_1a0eddcd7d1b35068c7369145a5d97ee17" kindref="member">ClearAndPaste</ref>(t0,<sp/>t0<sp/>+<sp/>tLen,<sp/>&amp;*outputTrack,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxASSERT(bResult);<sp/></highlight><highlight class="comment">//<sp/>TO<sp/>DO:<sp/>Actually<sp/>handle<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxUnusedVar(bResult);</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"></highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bLoopSuccess;</highlight></codeline>
<codeline lineno="1343"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"></highlight></codeline>
<codeline lineno="1345"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1346"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EffectNoiseReduction::Dialog</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1347"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1348"><highlight class="normal"></highlight></codeline>
<codeline lineno="1349"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1350" refid="_noise_reduction_8cpp_1a0341d081395407fd92061819ba76eb96a1ae9215fdbd510aa098b276de3241d14" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="_noise_reduction_8cpp_1a0341d081395407fd92061819ba76eb96a1ae9215fdbd510aa098b276de3241d14" kindref="member">ID_BUTTON_GETPROFILE</ref><sp/>=<sp/>10001,</highlight></codeline>
<codeline lineno="1351" refid="_noise_reduction_8cpp_1a0341d081395407fd92061819ba76eb96ac464a1ac67cb4151d10de967e150eb64" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="_noise_reduction_8cpp_1a0341d081395407fd92061819ba76eb96ac464a1ac67cb4151d10de967e150eb64" kindref="member">ID_RADIOBUTTON_KEEPSIGNAL</ref>,</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ISOLATE_CHOICE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/>ID_RADIOBUTTON_KEEPNOISE,</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1355"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>RESIDUE_CHOICE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1356" refid="_noise_reduction_8cpp_1a0341d081395407fd92061819ba76eb96a96b12d6226e5bbead121b52ac8b5e6ba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="_noise_reduction_8cpp_1a0341d081395407fd92061819ba76eb96a96b12d6226e5bbead121b52ac8b5e6ba" kindref="member">ID_RADIOBUTTON_RESIDUE</ref>,</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1358"><highlight class="normal"></highlight></codeline>
<codeline lineno="1359"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ADVANCED_SETTINGS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/>ID_CHOICE_METHOD,</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1362"><highlight class="normal"></highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Slider/text<sp/>pairs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1364" refid="_noise_reduction_8cpp_1a0341d081395407fd92061819ba76eb96a1c554a3cf3435eb54967259fc7bbdbc2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="_noise_reduction_8cpp_1a0341d081395407fd92061819ba76eb96a1c554a3cf3435eb54967259fc7bbdbc2" kindref="member">ID_GAIN_SLIDER</ref>,</highlight></codeline>
<codeline lineno="1365" refid="_noise_reduction_8cpp_1a0341d081395407fd92061819ba76eb96a0f9f6d111ab6c41a6c0627ccc1769426" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="_noise_reduction_8cpp_1a0341d081395407fd92061819ba76eb96a0f9f6d111ab6c41a6c0627ccc1769426" kindref="member">ID_GAIN_TEXT</ref>,</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"></highlight></codeline>
<codeline lineno="1367" refid="_noise_reduction_8cpp_1a0341d081395407fd92061819ba76eb96a1dad4dd6b2d875165dcba436fd958162" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="_noise_reduction_8cpp_1a0341d081395407fd92061819ba76eb96a1dad4dd6b2d875165dcba436fd958162" kindref="member">ID_NEW_SENSITIVITY_SLIDER</ref>,</highlight></codeline>
<codeline lineno="1368" refid="_noise_reduction_8cpp_1a0341d081395407fd92061819ba76eb96aa55ea7d1b1875214fb831e5c8d9bc3d6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="_noise_reduction_8cpp_1a0341d081395407fd92061819ba76eb96aa55ea7d1b1875214fb831e5c8d9bc3d6" kindref="member">ID_NEW_SENSITIVITY_TEXT</ref>,</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"></highlight></codeline>
<codeline lineno="1370"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ATTACK_AND_RELEASE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/>ID_ATTACK_TIME_SLIDER,</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/>ID_ATTACK_TIME_TEXT,</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"></highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/>ID_RELEASE_TIME_SLIDER,</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/>ID_RELEASE_TIME_TEXT,</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1377"><highlight class="normal"></highlight></codeline>
<codeline lineno="1378" refid="_noise_reduction_8cpp_1a0341d081395407fd92061819ba76eb96a27044b77ecdb13db0926cb63749d2255" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="_noise_reduction_8cpp_1a0341d081395407fd92061819ba76eb96a27044b77ecdb13db0926cb63749d2255" kindref="member">ID_FREQ_SLIDER</ref>,</highlight></codeline>
<codeline lineno="1379" refid="_noise_reduction_8cpp_1a0341d081395407fd92061819ba76eb96ade8c28123faab7710accec1d4f4a6b47" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="_noise_reduction_8cpp_1a0341d081395407fd92061819ba76eb96ade8c28123faab7710accec1d4f4a6b47" kindref="member">ID_FREQ_TEXT</ref>,</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"></highlight></codeline>
<codeline lineno="1381" refid="_noise_reduction_8cpp_1a0341d081395407fd92061819ba76eb96a6ed1c9f1eed68a848b0a9ecfe3ae509d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="_noise_reduction_8cpp_1a0341d081395407fd92061819ba76eb96a6ed1c9f1eed68a848b0a9ecfe3ae509d" kindref="member">END_OF_BASIC_SLIDERS</ref>,</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"></highlight></codeline>
<codeline lineno="1383"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ADVANCED_SETTINGS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/>ID_OLD_SENSITIVITY_SLIDER<sp/>=<sp/><ref refid="_noise_reduction_8cpp_1a0341d081395407fd92061819ba76eb96a6ed1c9f1eed68a848b0a9ecfe3ae509d" kindref="member">END_OF_BASIC_SLIDERS</ref>,</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/>ID_OLD_SENSITIVITY_TEXT,</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"></highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/>END_OF_ADVANCED_SLIDERS,</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><ref refid="_noise_reduction_8cpp_1a0341d081395407fd92061819ba76eb96a48ba953126c788cf919b66f64de186e7" kindref="member">END_OF_SLIDERS</ref><sp/>=<sp/>END_OF_ADVANCED_SLIDERS,</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1390" refid="_noise_reduction_8cpp_1a0341d081395407fd92061819ba76eb96a48ba953126c788cf919b66f64de186e7" refkind="member"><highlight class="normal"><sp/><sp/><sp/>END_OF_SLIDERS<sp/>=<sp/><ref refid="_noise_reduction_8cpp_1a0341d081395407fd92061819ba76eb96a6ed1c9f1eed68a848b0a9ecfe3ae509d" kindref="member">END_OF_BASIC_SLIDERS</ref>,</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1392"><highlight class="normal"></highlight></codeline>
<codeline lineno="1393" refid="_noise_reduction_8cpp_1a0341d081395407fd92061819ba76eb96ac8ee536c53f485a980dfc3698ed21801" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="_noise_reduction_8cpp_1a0341d081395407fd92061819ba76eb96ac8ee536c53f485a980dfc3698ed21801" kindref="member">FIRST_SLIDER</ref><sp/>=<sp/><ref refid="_noise_reduction_8cpp_1a0341d081395407fd92061819ba76eb96a1c554a3cf3435eb54967259fc7bbdbc2" kindref="member">ID_GAIN_SLIDER</ref>,</highlight></codeline>
<codeline lineno="1394"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"></highlight></codeline>
<codeline lineno="1396"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"></highlight></codeline>
<codeline lineno="1398"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ControlInfo<sp/>{</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>double<sp/>(<ref refid="class_effect_noise_reduction_1_1_settings" kindref="compound">EffectNoiseReduction::Settings</ref>::*MemberPointer);</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"></highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Value(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>sliderSetting)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1402"><highlight class="keyword"><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valueMin<sp/>+</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(double(sliderSetting)<sp/>/<sp/>sliderMax)<sp/>*<sp/>(valueMax<sp/>-<sp/>valueMin);</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"></highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>SliderSetting(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1409"><highlight class="keyword"><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="src_2effects_2_effect_8h_1a7818cadc7bbc8c6533037b3b6d529672" kindref="member">TrapLong</ref>(</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.5<sp/>+<sp/>sliderMax<sp/>*<sp/>(value<sp/>-<sp/>valueMin)<sp/>/<sp/>(valueMax<sp/>-<sp/>valueMin),</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>sliderMax);</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"></highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>Text(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1416"><highlight class="keyword"><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(formatAsInt)</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wxString::Format(<ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(value));</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wxString::Format(<ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref>,<sp/>value);</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"></highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CreateControls(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>wxTextValidator<sp/>&amp;vld,<sp/><ref refid="class_shuttle_gui" kindref="compound">ShuttleGui</ref><sp/>&amp;<ref refid="xlftab_8c_1af933676109efed7ab34cea71d748a517" kindref="member">S</ref>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1424"><highlight class="keyword"><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxTextCtrl<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>text<sp/>=</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_1a0db2f531b7bd17f72c211883151f5640" kindref="member">Id</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>+<sp/>1).<ref refid="class_shuttle_gui_base_1aa9df960a9ed7fdffec419912b995788e" kindref="member">AddTextBox</ref>(textBoxCaption(),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),<sp/>0);</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a3afc5aecba69ad749aac2f740e34a471" kindref="member">SetStyle</ref>(wxSL_HORIZONTAL);</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>text-&gt;SetValidator(vld);</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"></highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxSlider<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>slider<sp/>=</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_1a0db2f531b7bd17f72c211883151f5640" kindref="member">Id</ref>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">).<ref refid="class_shuttle_gui_base_1ab5483f256392246255a5b5f6c4638c5e" kindref="member">AddSlider</ref>(wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),<sp/>0,<sp/>sliderMax);</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>slider-&gt;SetName(sliderName());</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>slider-&gt;SetRange(0,<sp/>sliderMax);</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>slider-&gt;SetSizeHints(150,<sp/>-1);</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"></highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/>MemberPointer<sp/>field;</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>valueMin;</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>valueMax;</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>sliderMax;</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(valueMin<sp/>-<sp/>valueMax)<sp/>/<sp/>sliderMax<sp/>is<sp/>the<sp/>value<sp/>increment<sp/>of<sp/>the<sp/>slider</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxChar*<sp/><ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref>;</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>formatAsInt;</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>textBoxCaption_;<sp/><sp/>wxString<sp/>textBoxCaption()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wxGetTranslation(textBoxCaption_);<sp/>}</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>sliderName_;<sp/><sp/>wxString<sp/>sliderName()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wxGetTranslation(sliderName_);<sp/>}</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"></highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/>ControlInfo(MemberPointer<sp/><ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>vMin,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>vMax,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>sMax,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxChar*<sp/>fmt,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fAsInt,</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;caption,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>)</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>field(f),<sp/>valueMin(vMin),<sp/>valueMax(vMax),<sp/>sliderMax(sMax),<sp/><ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref>(fmt),<sp/>formatAsInt(fAsInt)</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>textBoxCaption_(caption),<sp/>sliderName_(name)</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1453"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"></highlight></codeline>
<codeline lineno="1455"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ControlInfo<sp/>*controlInfo()<sp/>{</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ControlInfo<sp/>table[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ControlInfo(&amp;<ref refid="class_effect_noise_reduction_1_1_settings_1ac11f719d012357a416d91f761f63f789" kindref="member">EffectNoiseReduction::Settings::mNoiseGain</ref>,</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0,<sp/>48.0,<sp/>48,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_audacity_8h_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(</highlight><highlight class="stringliteral">&quot;&amp;Noise<sp/>reduction<sp/>(dB):&quot;</highlight><highlight class="normal">),<sp/><ref refid="_audacity_8h_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(</highlight><highlight class="stringliteral">&quot;Noise<sp/>reduction&quot;</highlight><highlight class="normal">)),</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ControlInfo(&amp;<ref refid="class_effect_noise_reduction_1_1_settings_1a8678912f0a5fe978e3a4809ec405633d" kindref="member">EffectNoiseReduction::Settings::mNewSensitivity</ref>,</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0,<sp/>24.0,<sp/>48,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;%.2f&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_audacity_8h_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(</highlight><highlight class="stringliteral">&quot;&amp;Sensitivity:&quot;</highlight><highlight class="normal">),<sp/><ref refid="_audacity_8h_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(</highlight><highlight class="stringliteral">&quot;Sensitivity&quot;</highlight><highlight class="normal">)),</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ATTACK_AND_RELEASE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ControlInfo(&amp;<ref refid="class_effect_noise_reduction_1_1_settings_1a6bb04dd376410dab3a67ecb446a73af1" kindref="member">EffectNoiseReduction::Settings::mAttackTime</ref>,</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>1.0,<sp/>100,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;%.2f&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_audacity_8h_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(</highlight><highlight class="stringliteral">&quot;Attac&amp;k<sp/>time<sp/>(secs):&quot;</highlight><highlight class="normal">),<sp/><ref refid="_audacity_8h_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(</highlight><highlight class="stringliteral">&quot;Attack<sp/>time&quot;</highlight><highlight class="normal">)),</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ControlInfo(&amp;<ref refid="class_effect_noise_reduction_1_1_settings_1a1de6d038a5bd8e9d5158eeef06dc42cf" kindref="member">EffectNoiseReduction::Settings::mReleaseTime</ref>,</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>1.0,<sp/>100,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;%.2f&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_audacity_8h_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(</highlight><highlight class="stringliteral">&quot;R&amp;elease<sp/>time<sp/>(secs):&quot;</highlight><highlight class="normal">),<sp/><ref refid="_audacity_8h_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(</highlight><highlight class="stringliteral">&quot;Release<sp/>time&quot;</highlight><highlight class="normal">)),</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ControlInfo(&amp;<ref refid="class_effect_noise_reduction_1_1_settings_1a118310261cec68f4f044fc80d88f02fc" kindref="member">EffectNoiseReduction::Settings::mFreqSmoothingBands</ref>,</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>12,<sp/>12,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_audacity_8h_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(</highlight><highlight class="stringliteral">&quot;&amp;Frequency<sp/>smoothing<sp/>(bands):&quot;</highlight><highlight class="normal">),<sp/><ref refid="_audacity_8h_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(</highlight><highlight class="stringliteral">&quot;Frequency<sp/>smoothing&quot;</highlight><highlight class="normal">)),</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"></highlight></codeline>
<codeline lineno="1475"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ADVANCED_SETTINGS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ControlInfo(&amp;<ref refid="class_effect_noise_reduction_1_1_settings_1a85fc0cc6d0dfb671fb63a0014fd16090" kindref="member">EffectNoiseReduction::Settings::mOldSensitivity</ref>,</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-20.0,<sp/>20.0,<sp/>4000,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;%.2f&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_audacity_8h_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(</highlight><highlight class="stringliteral">&quot;Sensiti&amp;vity<sp/>(dB):&quot;</highlight><highlight class="normal">),<sp/><ref refid="_audacity_8h_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(</highlight><highlight class="stringliteral">&quot;Old<sp/>Sensitivity&quot;</highlight><highlight class="normal">)),</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1480"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"></highlight></codeline>
<codeline lineno="1483"><highlight class="normal"></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>table;</highlight></codeline>
<codeline lineno="1484"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"></highlight></codeline>
<codeline lineno="1486"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1487"><highlight class="normal"></highlight></codeline>
<codeline lineno="1488"><highlight class="normal"></highlight></codeline>
<codeline lineno="1489"><highlight class="normal">BEGIN_EVENT_TABLE(<ref refid="class_effect_noise_reduction_1_1_dialog" kindref="compound">EffectNoiseReduction::Dialog</ref>,<sp/>wxDialog)</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><ref refid="_dependencies_8cpp_1a6f995727bd5033aa9a6968dbe152927f" kindref="member">EVT_BUTTON</ref>(wxID_OK,<sp/>EffectNoiseReduction::Dialog::OnReduceNoise)</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><ref refid="_dependencies_8cpp_1a6f995727bd5033aa9a6968dbe152927f" kindref="member">EVT_BUTTON</ref>(wxID_CANCEL,<sp/>EffectNoiseReduction::Dialog::OnCancel)</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><ref refid="_dependencies_8cpp_1a6f995727bd5033aa9a6968dbe152927f" kindref="member">EVT_BUTTON</ref>(<ref refid="src_2effects_2_effect_8h_1ace5cc8ba760b5cfac58bc674134294ce" kindref="member">ID_EFFECT_PREVIEW</ref>,<sp/>EffectNoiseReduction::Dialog::OnPreview)</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><ref refid="_dependencies_8cpp_1a6f995727bd5033aa9a6968dbe152927f" kindref="member">EVT_BUTTON</ref>(<ref refid="_noise_reduction_8cpp_1a0341d081395407fd92061819ba76eb96a1ae9215fdbd510aa098b276de3241d14" kindref="member">ID_BUTTON_GETPROFILE</ref>,<sp/>EffectNoiseReduction::Dialog::OnGetProfile)</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"></highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/>EVT_RADIOBUTTON(<ref refid="_noise_reduction_8cpp_1a0341d081395407fd92061819ba76eb96ac464a1ac67cb4151d10de967e150eb64" kindref="member">ID_RADIOBUTTON_KEEPSIGNAL</ref>,<sp/>EffectNoiseReduction::Dialog::OnNoiseReductionChoice)</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ISOLATE_CHOICE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/>EVT_RADIOBUTTON(ID_RADIOBUTTON_KEEPNOISE,<sp/>EffectNoiseReduction::Dialog::OnNoiseReductionChoice)</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1499"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>RESIDUE_CHOICE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/>EVT_RADIOBUTTON(<ref refid="_noise_reduction_8cpp_1a0341d081395407fd92061819ba76eb96a96b12d6226e5bbead121b52ac8b5e6ba" kindref="member">ID_RADIOBUTTON_RESIDUE</ref>,<sp/>EffectNoiseReduction::Dialog::OnNoiseReductionChoice)</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1502"><highlight class="normal"></highlight></codeline>
<codeline lineno="1503"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ADVANCED_SETTINGS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/>EVT_CHOICE(ID_CHOICE_METHOD,<sp/>EffectNoiseReduction::Dialog::OnMethodChoice)</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1506"><highlight class="normal"></highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/>EVT_SLIDER(<ref refid="_noise_reduction_8cpp_1a0341d081395407fd92061819ba76eb96a1c554a3cf3435eb54967259fc7bbdbc2" kindref="member">ID_GAIN_SLIDER</ref>,<sp/>EffectNoiseReduction::Dialog::OnSlider)</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/>EVT_TEXT(<ref refid="_noise_reduction_8cpp_1a0341d081395407fd92061819ba76eb96a0f9f6d111ab6c41a6c0627ccc1769426" kindref="member">ID_GAIN_TEXT</ref>,<sp/>EffectNoiseReduction::Dialog::OnText)</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"></highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/>EVT_SLIDER(<ref refid="_noise_reduction_8cpp_1a0341d081395407fd92061819ba76eb96a1dad4dd6b2d875165dcba436fd958162" kindref="member">ID_NEW_SENSITIVITY_SLIDER</ref>,<sp/>EffectNoiseReduction::Dialog::OnSlider)</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/>EVT_TEXT(<ref refid="_noise_reduction_8cpp_1a0341d081395407fd92061819ba76eb96aa55ea7d1b1875214fb831e5c8d9bc3d6" kindref="member">ID_NEW_SENSITIVITY_TEXT</ref>,<sp/>EffectNoiseReduction::Dialog::OnText)</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"></highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/>EVT_SLIDER(<ref refid="_noise_reduction_8cpp_1a0341d081395407fd92061819ba76eb96a27044b77ecdb13db0926cb63749d2255" kindref="member">ID_FREQ_SLIDER</ref>,<sp/>EffectNoiseReduction::Dialog::OnSlider)</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/>EVT_TEXT(<ref refid="_noise_reduction_8cpp_1a0341d081395407fd92061819ba76eb96ade8c28123faab7710accec1d4f4a6b47" kindref="member">ID_FREQ_TEXT</ref>,<sp/>EffectNoiseReduction::Dialog::OnText)</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"></highlight></codeline>
<codeline lineno="1516"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ATTACK_AND_RELEASE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/>EVT_SLIDER(ID_ATTACK_TIME_SLIDER,<sp/>EffectNoiseReduction::Dialog::OnSlider)</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/>EVT_TEXT(ID_ATTACK_TIME_TEXT,<sp/>EffectNoiseReduction::Dialog::OnText)</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"></highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/>EVT_SLIDER(ID_RELEASE_TIME_SLIDER,<sp/>EffectNoiseReduction::Dialog::OnSlider)</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/>EVT_TEXT(ID_RELEASE_TIME_TEXT,<sp/>EffectNoiseReduction::Dialog::OnText)</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1523"><highlight class="normal"></highlight></codeline>
<codeline lineno="1524"><highlight class="normal"></highlight></codeline>
<codeline lineno="1525"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ADVANCED_SETTINGS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/>EVT_SLIDER(ID_OLD_SENSITIVITY_SLIDER,<sp/>EffectNoiseReduction::Dialog::OnSlider)</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/>EVT_TEXT(ID_OLD_SENSITIVITY_TEXT,<sp/>EffectNoiseReduction::Dialog::OnText)</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><ref refid="_batch_command_dialog_8cpp_1a8c3469324b3e5d3e6c44c23a418ab937" kindref="member">END_EVENT_TABLE</ref>()</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"></highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><ref refid="class_effect_noise_reduction_1_1_dialog_1a861517942c2b428f9cbc23f285193550" kindref="member">EffectNoiseReduction::Dialog::Dialog</ref></highlight></codeline>
<codeline lineno="1532" refid="class_effect_noise_reduction_1_1_dialog_1a861517942c2b428f9cbc23f285193550" refkind="member"><highlight class="normal">(<ref refid="class_effect_noise_reduction" kindref="compound">EffectNoiseReduction</ref><sp/>*effect,</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><ref refid="class_effect_noise_reduction_1_1_settings" kindref="compound">EffectNoiseReduction::Settings</ref><sp/>*settings,</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/>wxWindow<sp/>*parent,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bHasProfile,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bAllowTwiddleSettings)</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/>:<sp/><ref refid="class_effect_dialog" kindref="compound">EffectDialog</ref>(<sp/>parent,<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Noise<sp/>Reduction&quot;</highlight><highlight class="normal">),<sp/><ref refid="_effect_interface_8h_1a4809a7bb3fd1a421902a667cc1405d43afd0f1aa24555662b091206287d30521b" kindref="member">EffectTypeProcess</ref>)</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/>,<sp/>m_pEffect(effect)</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/>,<sp/>m_pSettings(settings)<sp/></highlight><highlight class="comment">//<sp/>point<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/>,<sp/>mTempSettings(*settings)<sp/><sp/></highlight><highlight class="comment">//<sp/>copy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/>,<sp/>mbHasProfile(bHasProfile)</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/>,<sp/>mbAllowTwiddleSettings(bAllowTwiddleSettings)</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NULL<sp/>out<sp/>the<sp/>control<sp/>members<sp/>until<sp/>the<sp/>controls<sp/>are<sp/>created.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/>,<sp/>mKeepSignal(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ISOLATE_CHOICE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/>,<sp/>mKeepNoise(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1546"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>RESIDUE_CHOICE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/>,<sp/>mResidue(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1549"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_effect_dialog_1af973a07f9153c6bfe0d645c0d2a1d672" kindref="member">EffectDialog::Init</ref>();</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"></highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/>wxButton<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pButtonPreview<sp/>=</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(wxButton<sp/>*)wxWindow::FindWindowById(<ref refid="src_2effects_2_effect_8h_1ace5cc8ba760b5cfac58bc674134294ce" kindref="member">ID_EFFECT_PREVIEW</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/>wxButton<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pButtonReduceNoise<sp/>=</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(wxButton<sp/>*)wxWindow::FindWindowById(wxID_OK,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"></highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mbHasProfile<sp/>||<sp/>mbAllowTwiddleSettings)<sp/>{</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pButtonPreview-&gt;Enable(!mbAllowTwiddleSettings);</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pButtonReduceNoise-&gt;SetFocus();</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pButtonPreview-&gt;Enable(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pButtonReduceNoise-&gt;Enable(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1565"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"></highlight></codeline>
<codeline lineno="1567"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectNoiseReduction::Dialog::DisableControlsIfIsolating()</highlight></codeline>
<codeline lineno="1568"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>Isolate<sp/>is<sp/>chosen,<sp/>disable<sp/>controls<sp/>that<sp/>define</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;what<sp/>to<sp/>do<sp/>with<sp/>noise&quot;<sp/>rather<sp/>than<sp/>&quot;what<sp/>is<sp/>noise.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Else,<sp/>enable<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>does<sp/>NOT<sp/>include<sp/>sensitivity,<sp/>NEW<sp/>or<sp/>old,<sp/>nor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>choice<sp/>of<sp/>window<sp/>functions,<sp/>size,<sp/>or<sp/>step.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>method<sp/>choice<sp/>is<sp/>not<sp/>included,<sp/>because<sp/>it<sp/>affects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>sensitivity<sp/>slider<sp/>is<sp/>operative,<sp/>and<sp/>that<sp/>is<sp/>part</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>what<sp/>defines<sp/>noise.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1577"><highlight class="normal"></highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>toDisable[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_noise_reduction_8cpp_1a0341d081395407fd92061819ba76eb96a1c554a3cf3435eb54967259fc7bbdbc2" kindref="member">ID_GAIN_SLIDER</ref>,</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_noise_reduction_8cpp_1a0341d081395407fd92061819ba76eb96a0f9f6d111ab6c41a6c0627ccc1769426" kindref="member">ID_GAIN_TEXT</ref>,</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"></highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_noise_reduction_8cpp_1a0341d081395407fd92061819ba76eb96a27044b77ecdb13db0926cb63749d2255" kindref="member">ID_FREQ_SLIDER</ref>,</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_noise_reduction_8cpp_1a0341d081395407fd92061819ba76eb96ade8c28123faab7710accec1d4f4a6b47" kindref="member">ID_FREQ_TEXT</ref>,</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"></highlight></codeline>
<codeline lineno="1585"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ATTACK_AND_RELEASE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ID_ATTACK_TIME_SLIDER,</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ID_ATTACK_TIME_TEXT,</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"></highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ID_RELEASE_TIME_SLIDER,</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ID_RELEASE_TIME_TEXT,</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nToDisable<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(toDisable)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(toDisable[0]);</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bIsolating<sp/>=<sp/></highlight></codeline>
<codeline lineno="1596"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ISOLATE_CHOICE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mKeepNoise-&gt;GetValue();</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ii<sp/>=<sp/>nToDisable;<sp/>ii--;)</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxWindow::FindWindowById(toDisable[ii],<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)-&gt;Enable(!bIsolating);</highlight></codeline>
<codeline lineno="1603"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"></highlight></codeline>
<codeline lineno="1605"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ADVANCED_SETTINGS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1606"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectNoiseReduction::Dialog::EnableDisableSensitivityControls()</highlight></codeline>
<codeline lineno="1607"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/>wxChoice<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pChoice<sp/>=</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">wxChoice*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(wxWindow::FindWindowById(ID_CHOICE_METHOD,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bOldMethod<sp/>=</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pChoice-&gt;GetSelection()<sp/>==<sp/>DM_OLD_METHOD;</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/>wxWindow::FindWindowById(ID_OLD_SENSITIVITY_SLIDER,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)-&gt;Enable(bOldMethod);</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/>wxWindow::FindWindowById(ID_OLD_SENSITIVITY_TEXT,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)-&gt;Enable(bOldMethod);</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/>wxWindow::FindWindowById(<ref refid="_noise_reduction_8cpp_1a0341d081395407fd92061819ba76eb96a1dad4dd6b2d875165dcba436fd958162" kindref="member">ID_NEW_SENSITIVITY_SLIDER</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)-&gt;Enable(!bOldMethod);</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/>wxWindow::FindWindowById(<ref refid="_noise_reduction_8cpp_1a0341d081395407fd92061819ba76eb96aa55ea7d1b1875214fb831e5c8d9bc3d6" kindref="member">ID_NEW_SENSITIVITY_TEXT</ref>,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">)-&gt;Enable(!bOldMethod);</highlight></codeline>
<codeline lineno="1616"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1618"><highlight class="normal"></highlight></codeline>
<codeline lineno="1619"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectNoiseReduction::Dialog::OnGetProfile(wxCommandEvent<sp/>&amp;<sp/>WXUNUSED(event))</highlight></codeline>
<codeline lineno="1620"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Project<sp/>has<sp/>not<sp/>be<sp/>changed<sp/>so<sp/>skip<sp/>pushing<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_effect_manager_1a6d9acb7546cc925cd8a2e9ceffa4dda0" kindref="member">EffectManager::Get</ref>().<ref refid="class_effect_manager_1a325e912e7f378e8d791a55c3304d6344" kindref="member">SetSkipStateFlag</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"></highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_effect_1aa63d8b6e966d986e22e09d57a1ded772" kindref="member">TransferDataFromWindow</ref>())</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"></highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>code<sp/>distinguishes<sp/>this<sp/>first<sp/>step<sp/>from<sp/>the<sp/>actual<sp/>effect</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/>EndModal(1);</highlight></codeline>
<codeline lineno="1629"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"></highlight></codeline>
<codeline lineno="1631"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>handles<sp/>the<sp/>whole<sp/>radio<sp/>group</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1632"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectNoiseReduction::Dialog::OnNoiseReductionChoice(<sp/>wxCommandEvent<sp/>&amp;<sp/>WXUNUSED(event))</highlight></codeline>
<codeline lineno="1633"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mKeepSignal-&gt;GetValue())</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mTempSettings.mNoiseReductionChoice<sp/>=<sp/>NRC_REDUCE_NOISE;</highlight></codeline>
<codeline lineno="1636"><highlight class="normal">#ifdef<sp/>ISOLATE_CHOICE</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><ref refid="winfun_8c_1ab24f32995c1d94525943b4568cce20cb" kindref="member">if</ref><sp/>(mKeepNoise-&gt;GetValue())</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mTempSettings.mNoiseReductionChoice<sp/>=<sp/>NRC_ISOLATE_NOISE;</highlight></codeline>
<codeline lineno="1639"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="1640"><highlight class="normal">#ifdef<sp/><ref refid="_noise_reduction_8cpp_1a218c49528d756ea81ebe2fa38c2ae9db" kindref="member">RESIDUE_CHOICE</ref></highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mTempSettings.mNoiseReductionChoice<sp/>=<sp/>NRC_LEAVE_RESIDUE;</highlight></codeline>
<codeline lineno="1643"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/>DisableControlsIfIsolating();</highlight></codeline>
<codeline lineno="1645"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"></highlight></codeline>
<codeline lineno="1647"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ADVANCED_SETTINGS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1648"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectNoiseReduction::Dialog::OnMethodChoice(wxCommandEvent<sp/>&amp;)</highlight></codeline>
<codeline lineno="1649"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/>EnableDisableSensitivityControls();</highlight></codeline>
<codeline lineno="1651"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1653"><highlight class="normal"></highlight></codeline>
<codeline lineno="1654"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectNoiseReduction::Dialog::OnPreview(wxCommandEvent<sp/>&amp;<sp/>WXUNUSED(event))</highlight></codeline>
<codeline lineno="1655"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_effect_1aa63d8b6e966d986e22e09d57a1ded772" kindref="member">TransferDataFromWindow</ref>())</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"></highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>&amp;<sp/>restore<sp/>parameters<sp/>around<sp/>Preview,<sp/>because<sp/>we<sp/>didn&apos;t<sp/>do<sp/>OK.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_effect_noise_reduction_1_1_settings" kindref="compound">EffectNoiseReduction::Settings</ref><sp/>oldSettings(*m_pSettings);</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"></highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/>*m_pSettings<sp/>=<sp/>mTempSettings;</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/>m_pSettings-&gt;mDoProfile<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"></highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/>m_pEffect-&gt;Preview();</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"></highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/>*m_pSettings<sp/>=<sp/>oldSettings;</highlight></codeline>
<codeline lineno="1668"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"></highlight></codeline>
<codeline lineno="1670"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectNoiseReduction::Dialog::OnReduceNoise(<sp/>wxCommandEvent<sp/>&amp;<sp/>WXUNUSED(event))</highlight></codeline>
<codeline lineno="1671"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_effect_1aa63d8b6e966d986e22e09d57a1ded772" kindref="member">TransferDataFromWindow</ref>())</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"></highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/>EndModal(2);</highlight></codeline>
<codeline lineno="1676"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"></highlight></codeline>
<codeline lineno="1678"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectNoiseReduction::Dialog::OnCancel(wxCommandEvent<sp/>&amp;<sp/>WXUNUSED(event))</highlight></codeline>
<codeline lineno="1679"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/>EndModal(0);</highlight></codeline>
<codeline lineno="1681"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"></highlight></codeline>
<codeline lineno="1683" refid="class_effect_noise_reduction_1_1_dialog_1a46e0e7c4cf0672e2a6992b22b637633e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_effect_noise_reduction_1_1_dialog_1a46e0e7c4cf0672e2a6992b22b637633e" kindref="member">EffectNoiseReduction::Dialog::PopulateOrExchange</ref>(<ref refid="class_shuttle_gui" kindref="compound">ShuttleGui</ref><sp/>&amp;<sp/><ref refid="xlftab_8c_1af933676109efed7ab34cea71d748a517" kindref="member">S</ref>)</highlight></codeline>
<codeline lineno="1684"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1af3077c7ec169ef519b6d7afa80ec9a64" kindref="member">StartStatic</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Step<sp/>1&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a8ba6dd56c6623a20eec280355d930967" kindref="member">AddVariableText</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Select<sp/>a<sp/>few<sp/>seconds<sp/>of<sp/>just<sp/>noise<sp/>so<sp/>Audacity<sp/>knows<sp/>what<sp/>to<sp/>filter<sp/>out,\nthen<sp/>click<sp/>Get<sp/>Noise<sp/>Profile:&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//m_pButton_GetProfile<sp/>=</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_1a0db2f531b7bd17f72c211883151f5640" kindref="member">Id</ref>(<ref refid="_noise_reduction_8cpp_1a0341d081395407fd92061819ba76eb96a1ae9215fdbd510aa098b276de3241d14" kindref="member">ID_BUTTON_GETPROFILE</ref>).<ref refid="class_shuttle_gui_base_1a88b56806bad47b9301a6efad9b7c9eff" kindref="member">AddButton</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;&amp;Get<sp/>Noise<sp/>Profile&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1ac6ae219c1f976c24fc88a07ffdaee4cd" kindref="member">EndStatic</ref>();</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"></highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1af3077c7ec169ef519b6d7afa80ec9a64" kindref="member">StartStatic</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Step<sp/>2&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a8ba6dd56c6623a20eec280355d930967" kindref="member">AddVariableText</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Select<sp/>all<sp/>of<sp/>the<sp/>audio<sp/>you<sp/>want<sp/>filtered,<sp/>choose<sp/>how<sp/>much<sp/>noise<sp/>you<sp/>want\nfiltered<sp/>out,<sp/>and<sp/>then<sp/>click<sp/>&apos;OK&apos;<sp/>to<sp/>reduce<sp/>noise.\n&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"></highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1ae71efe4837e02680f854a905b3b27120" kindref="member">StartMultiColumn</ref>(3,<sp/>wxEXPAND);</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1ad4cabbeae683420ffe6ee2e279ede56f" kindref="member">SetStretchyCol</ref>(2);</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxTextValidator<sp/>vld(wxFILTER_NUMERIC);</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/><ref refid="_noise_reduction_8cpp_1a0341d081395407fd92061819ba76eb96ac8ee536c53f485a980dfc3698ed21801" kindref="member">FIRST_SLIDER</ref>;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&lt;<sp/><ref refid="_noise_reduction_8cpp_1a0341d081395407fd92061819ba76eb96a6ed1c9f1eed68a848b0a9ecfe3ae509d" kindref="member">END_OF_BASIC_SLIDERS</ref>;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>+=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ControlInfo<sp/>&amp;<ref refid="lib_2expat_8h_1a20806b446e455c50dc5653b7d43e3de2" kindref="member">info</ref><sp/>=<sp/>controlInfo()[(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>-<sp/><ref refid="_noise_reduction_8cpp_1a0341d081395407fd92061819ba76eb96ac8ee536c53f485a980dfc3698ed21801" kindref="member">FIRST_SLIDER</ref>)<sp/>/<sp/>2];</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info.CreateControls(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>vld,<sp/>S);</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a1a676a57ca191fde04599e4199e3f7f4" kindref="member">EndMultiColumn</ref>();</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"></highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1ae71efe4837e02680f854a905b3b27120" kindref="member">StartMultiColumn</ref>(</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2</highlight></codeline>
<codeline lineno="1712"><highlight class="normal">#ifdef<sp/><ref refid="_noise_reduction_8cpp_1a218c49528d756ea81ebe2fa38c2ae9db" kindref="member">RESIDUE_CHOICE</ref></highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+1</highlight></codeline>
<codeline lineno="1714"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="1715"><highlight class="normal">#ifdef<sp/>ISOLATE_CHOICE</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+1</highlight></codeline>
<codeline lineno="1717"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxALIGN_CENTER_HORIZONTAL);</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1aa64878f881c9394090275f01296888c6" kindref="member">AddPrompt</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Noise:&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mKeepSignal<sp/>=<sp/>S.<ref refid="class_shuttle_gui_1a0db2f531b7bd17f72c211883151f5640" kindref="member">Id</ref>(<ref refid="_noise_reduction_8cpp_1a0341d081395407fd92061819ba76eb96ac464a1ac67cb4151d10de967e150eb64" kindref="member">ID_RADIOBUTTON_KEEPSIGNAL</ref>)</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="class_shuttle_gui_base_1a7f7670bb731cda2f9c1da83640ba2e2d" kindref="member">AddRadioButton</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Re&amp;duce&quot;</highlight><highlight class="normal">));<sp/></highlight><highlight class="comment">/*<sp/>i18n-hint:<sp/>Translate<sp/>differently<sp/>from<sp/>&quot;Residue&quot;<sp/>!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1724"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ISOLATE_CHOICE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mKeepNoise<sp/>=<sp/>S.<ref refid="class_shuttle_gui_1a0db2f531b7bd17f72c211883151f5640" kindref="member">Id</ref>(ID_RADIOBUTTON_KEEPNOISE)</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="class_shuttle_gui_base_1a061bfd950a17f1da00c06bc353e04f44" kindref="member">AddRadioButtonToGroup</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;&amp;Isolate&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1728"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>RESIDUE_CHOICE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mResidue<sp/>=<sp/>S.<ref refid="class_shuttle_gui_1a0db2f531b7bd17f72c211883151f5640" kindref="member">Id</ref>(<ref refid="_noise_reduction_8cpp_1a0341d081395407fd92061819ba76eb96a96b12d6226e5bbead121b52ac8b5e6ba" kindref="member">ID_RADIOBUTTON_RESIDUE</ref>)</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="class_shuttle_gui_base_1a061bfd950a17f1da00c06bc353e04f44" kindref="member">AddRadioButtonToGroup</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Resid&amp;ue&quot;</highlight><highlight class="normal">));<sp/></highlight><highlight class="comment">/*<sp/>i18n-hint:<sp/>Means<sp/>the<sp/>difference<sp/>between<sp/>effect<sp/>and<sp/>original<sp/>sound.<sp/><sp/>Translate<sp/>differently<sp/>from<sp/>&quot;Reduce&quot;<sp/>!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1731"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a1a676a57ca191fde04599e4199e3f7f4" kindref="member">EndMultiColumn</ref>();</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1ac6ae219c1f976c24fc88a07ffdaee4cd" kindref="member">EndStatic</ref>();</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"></highlight></codeline>
<codeline lineno="1737"><highlight class="normal"></highlight></codeline>
<codeline lineno="1738"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ADVANCED_SETTINGS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1af3077c7ec169ef519b6d7afa80ec9a64" kindref="member">StartStatic</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Advanced<sp/>Settings&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1ae71efe4837e02680f854a905b3b27120" kindref="member">StartMultiColumn</ref>(2);</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxArrayString<sp/>windowTypeChoices;</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ii<sp/>=<sp/>0;<sp/>ii<sp/>&lt;<sp/>WT_N_WINDOW_TYPES;<sp/>++ii)</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>windowTypeChoices.Add(windowTypesInfo[ii].name);</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a2613dd7b8430a479e4ea8b0bb53736c6" kindref="member">TieChoice</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;&amp;Window<sp/>types&quot;</highlight><highlight class="normal">)<sp/>+<sp/>wxString(wxT(</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">)),</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mTempSettings.mWindowTypes,</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;windowTypeChoices);</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"></highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxArrayString<sp/>windowSizeChoices;</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>windowSizeChoices.Add(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;8&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>windowSizeChoices.Add(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;16&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>windowSizeChoices.Add(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;32&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>windowSizeChoices.Add(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;64&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>windowSizeChoices.Add(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;128&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>windowSizeChoices.Add(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;256&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>windowSizeChoices.Add(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;512&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>windowSizeChoices.Add(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;1024&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>windowSizeChoices.Add(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;2048<sp/>(default)&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>windowSizeChoices.Add(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;4096&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>windowSizeChoices.Add(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;8192&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>windowSizeChoices.Add(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;16384&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a2613dd7b8430a479e4ea8b0bb53736c6" kindref="member">TieChoice</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Window<sp/>si&amp;ze&quot;</highlight><highlight class="normal">)<sp/>+<sp/>wxString(wxT(</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">)),</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mTempSettings.mWindowSizeChoice,</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;windowSizeChoices);</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"></highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxArrayString<sp/>stepsPerWindowChoices;</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stepsPerWindowChoices.Add(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;2&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stepsPerWindowChoices.Add(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;4<sp/>(default)&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stepsPerWindowChoices.Add(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;8&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stepsPerWindowChoices.Add(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;16&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stepsPerWindowChoices.Add(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;32&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stepsPerWindowChoices.Add(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;64&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a2613dd7b8430a479e4ea8b0bb53736c6" kindref="member">TieChoice</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;S&amp;teps<sp/>per<sp/>window&quot;</highlight><highlight class="normal">)<sp/>+<sp/>wxString(wxT(</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">)),</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mTempSettings.mStepsPerWindowChoice,</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;stepsPerWindowChoices);</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"></highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_1a0db2f531b7bd17f72c211883151f5640" kindref="member">Id</ref>(ID_CHOICE_METHOD);</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxArrayString<sp/>methodChoices;</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nn<sp/>=<sp/>DM_N_METHODS;</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>OLD_METHOD_AVAILABLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--nn;</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ii<sp/>=<sp/>0;<sp/>ii<sp/>&lt;<sp/>nn;<sp/>++ii)</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>methodChoices.Add(discriminationMethodInfo[ii].name);</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a2613dd7b8430a479e4ea8b0bb53736c6" kindref="member">TieChoice</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Discrimination<sp/>&amp;method&quot;</highlight><highlight class="normal">)<sp/>+<sp/>wxString(wxT(</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">)),</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mTempSettings.mMethod,</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;methodChoices);</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a1a676a57ca191fde04599e4199e3f7f4" kindref="member">EndMultiColumn</ref>();</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"></highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1ae71efe4837e02680f854a905b3b27120" kindref="member">StartMultiColumn</ref>(3,<sp/>wxEXPAND);</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1ad4cabbeae683420ffe6ee2e279ede56f" kindref="member">SetStretchyCol</ref>(2);</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxTextValidator<sp/>vld(wxFILTER_NUMERIC);</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/><ref refid="_noise_reduction_8cpp_1a0341d081395407fd92061819ba76eb96a6ed1c9f1eed68a848b0a9ecfe3ae509d" kindref="member">END_OF_BASIC_SLIDERS</ref>;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&lt;<sp/>END_OF_ADVANCED_SLIDERS;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>+=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ControlInfo<sp/>&amp;<ref refid="lib_2expat_8h_1a20806b446e455c50dc5653b7d43e3de2" kindref="member">info</ref><sp/>=<sp/>controlInfo[(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>-<sp/><ref refid="_noise_reduction_8cpp_1a0341d081395407fd92061819ba76eb96ac8ee536c53f485a980dfc3698ed21801" kindref="member">FIRST_SLIDER</ref>)<sp/>/<sp/>2];</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info.CreateControls(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>vld,<sp/>S);</highlight></codeline>
<codeline lineno="1807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a1a676a57ca191fde04599e4199e3f7f4" kindref="member">EndMultiColumn</ref>();</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1ac6ae219c1f976c24fc88a07ffdaee4cd" kindref="member">EndStatic</ref>();</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1813"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1814"><highlight class="normal"></highlight></codeline>
<codeline lineno="1815" refid="class_effect_noise_reduction_1_1_dialog_1a12e2a8c9812c5905791fe4127130d4a6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_effect_noise_reduction_1_1_dialog_1a12e2a8c9812c5905791fe4127130d4a6" kindref="member">EffectNoiseReduction::Dialog::TransferDataToWindow</ref>()</highlight></codeline>
<codeline lineno="1816"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>the<sp/>choice<sp/>controls:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_effect_dialog_1a63663be1cbaf2222262b354223cce1aa" kindref="member">EffectDialog::TransferDataToWindow</ref>())</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"></highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/><ref refid="_noise_reduction_8cpp_1a0341d081395407fd92061819ba76eb96ac8ee536c53f485a980dfc3698ed21801" kindref="member">FIRST_SLIDER</ref>;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&lt;<sp/><ref refid="_noise_reduction_8cpp_1a0341d081395407fd92061819ba76eb96a48ba953126c788cf919b66f64de186e7" kindref="member">END_OF_SLIDERS</ref>;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>+=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxSlider*<sp/>slider<sp/>=</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">wxSlider*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(wxWindow::FindWindowById(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxTextCtrl*<sp/>text<sp/>=</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">wxTextCtrl*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(wxWindow::FindWindowById(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>+<sp/>1,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ControlInfo<sp/>&amp;<ref refid="lib_2expat_8h_1a20806b446e455c50dc5653b7d43e3de2" kindref="member">info</ref><sp/>=<sp/>controlInfo()[(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>-<sp/><ref refid="_noise_reduction_8cpp_1a0341d081395407fd92061819ba76eb96ac8ee536c53f485a980dfc3698ed21801" kindref="member">FIRST_SLIDER</ref>)<sp/>/<sp/>2];</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>field<sp/>=<sp/>mTempSettings.*(info.field);</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>text-&gt;SetValue(info.Text(field));</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>slider-&gt;SetValue(info.SliderSetting(field));</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1831"><highlight class="normal"></highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/>mKeepSignal-&gt;SetValue(mTempSettings.mNoiseReductionChoice<sp/>==<sp/>NRC_REDUCE_NOISE);</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ISOLATE_CHOICE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><sp/>mKeepNoise-&gt;SetValue(mTempSettings.mNoiseReductionChoice<sp/>==<sp/>NRC_ISOLATE_NOISE);</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1836"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>RESIDUE_CHOICE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/><sp/>mResidue-&gt;SetValue(mTempSettings.mNoiseReductionChoice<sp/>==<sp/>NRC_LEAVE_RESIDUE);</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1839"><highlight class="normal"></highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>enabled<sp/>states<sp/>of<sp/>controls</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/><sp/>DisableControlsIfIsolating();</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ADVANCED_SETTINGS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/><sp/>EnableDisableSensitivityControls();</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1845"><highlight class="normal"></highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1847"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"></highlight></codeline>
<codeline lineno="1849" refid="class_effect_noise_reduction_1_1_dialog_1a3a77cd1c05ba89b3b9fc9572fd1c5f58" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_effect_noise_reduction_1_1_dialog_1a3a77cd1c05ba89b3b9fc9572fd1c5f58" kindref="member">EffectNoiseReduction::Dialog::TransferDataFromWindow</ref>()</highlight></codeline>
<codeline lineno="1850"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>the<sp/>choice<sp/>controls:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_effect_dialog_1a83fb932c4f20edd72a808dfb64d8f76e" kindref="member">EffectDialog::TransferDataFromWindow</ref>())</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"></highlight></codeline>
<codeline lineno="1855"><highlight class="normal"><sp/><sp/><sp/>wxCommandEvent<sp/><ref refid="database_8c_1a4497856461b72aa327a367542f73bff3" kindref="member">dummy</ref>;</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"><sp/><sp/><sp/>OnNoiseReductionChoice(dummy);</highlight></codeline>
<codeline lineno="1857"><highlight class="normal"></highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mTempSettings.Validate();</highlight></codeline>
<codeline lineno="1859"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"></highlight></codeline>
<codeline lineno="1861"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectNoiseReduction::Dialog::OnText(wxCommandEvent<sp/>&amp;event)</highlight></codeline>
<codeline lineno="1862"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.GetId();</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>-<sp/><ref refid="_noise_reduction_8cpp_1a0341d081395407fd92061819ba76eb96ac8ee536c53f485a980dfc3698ed21801" kindref="member">FIRST_SLIDER</ref><sp/>-<sp/>1)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ControlInfo<sp/>&amp;<ref refid="lib_2expat_8h_1a20806b446e455c50dc5653b7d43e3de2" kindref="member">info</ref><sp/>=<sp/>controlInfo()[idx];</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/><sp/>wxTextCtrl*<sp/>text<sp/>=</highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">wxTextCtrl*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(wxWindow::FindWindowById(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/><sp/>wxSlider*<sp/>slider<sp/>=</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">wxSlider*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(wxWindow::FindWindowById(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>-<sp/>1,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;field<sp/>=<sp/>mTempSettings.*(info.field);</highlight></codeline>
<codeline lineno="1871"><highlight class="normal"></highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/><sp/>text-&gt;GetValue().ToDouble(&amp;field);</highlight></codeline>
<codeline lineno="1873"><highlight class="normal"><sp/><sp/><sp/>slider-&gt;SetValue(info.SliderSetting(field));</highlight></codeline>
<codeline lineno="1874"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1875"><highlight class="normal"></highlight></codeline>
<codeline lineno="1876"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectNoiseReduction::Dialog::OnSlider(wxCommandEvent<sp/>&amp;event)</highlight></codeline>
<codeline lineno="1877"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">.GetId();</highlight></codeline>
<codeline lineno="1879"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>-<sp/><ref refid="_noise_reduction_8cpp_1a0341d081395407fd92061819ba76eb96ac8ee536c53f485a980dfc3698ed21801" kindref="member">FIRST_SLIDER</ref>)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ControlInfo<sp/>&amp;<ref refid="lib_2expat_8h_1a20806b446e455c50dc5653b7d43e3de2" kindref="member">info</ref><sp/>=<sp/>controlInfo()[idx];</highlight></codeline>
<codeline lineno="1881"><highlight class="normal"><sp/><sp/><sp/>wxSlider*<sp/>slider<sp/>=</highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">wxSlider*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(wxWindow::FindWindowById(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><sp/><sp/><sp/>wxTextCtrl*<sp/>text<sp/>=</highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">wxTextCtrl*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(wxWindow::FindWindowById(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>+<sp/>1,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;field<sp/>=<sp/>mTempSettings.*(info.field);</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"></highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/><sp/>field<sp/>=<sp/>info.Value(slider-&gt;GetValue());</highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/><sp/>text-&gt;SetValue(info.Text(field));</highlight></codeline>
<codeline lineno="1889"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/NoiseReduction.cpp"/>
  </compounddef>
</doxygen>
