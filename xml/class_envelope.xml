<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_envelope" kind="class" language="C++" prot="public" final="yes">
    <compoundname>Envelope</compoundname>
    <basecompoundref refid="class_x_m_l_tag_handler" prot="public" virt="non-virtual">XMLTagHandler</basecompoundref>
    <includes refid="src_2_envelope_8h" local="no">Envelope.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_envelope_1a9d731938466d764c7079a95647a1d8e4" prot="private" static="no" mutable="no">
        <type><ref refid="src_2_envelope_8h_1af280411d53741dc361cd21582accd4cf" kindref="member">EnvArray</ref></type>
        <definition>EnvArray Envelope::mEnv</definition>
        <argsstring></argsstring>
        <name>mEnv</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="211" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" bodystart="211" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_envelope_1a560376f8e9574cfb4f2c3f77c3f4a694" prot="private" static="no" mutable="no">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool Envelope::mMirror</definition>
        <argsstring></argsstring>
        <name>mMirror</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="212" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" bodystart="212" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_envelope_1a2b18e5a1a70005619236bea273c145ca" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Envelope::mOffset</definition>
        <argsstring></argsstring>
        <name>mOffset</name>
        <briefdescription>
<para>The time at which the envelope starts, i.e. the start offset. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="215" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" bodystart="215" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_envelope_1ab14515571853067f7481516da6a1dd58" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Envelope::mTrackLen</definition>
        <argsstring></argsstring>
        <name>mTrackLen</name>
        <briefdescription>
<para>The length of the envelope, which is the same as the length of the underlying track (normally) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="218" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" bodystart="218" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_envelope_1a77dd2e9c35707200729399658cd9177d" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Envelope::mTrackEpsilon</definition>
        <argsstring></argsstring>
        <name>mTrackEpsilon</name>
        <briefdescription>
<para>The shortest distance appart that points on an envelope can be before being considered the same point. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="224" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" bodystart="224" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_envelope_1a518070736afa6e79c8b3f9338290f828" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Envelope::mDefaultValue</definition>
        <argsstring></argsstring>
        <name>mDefaultValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="225" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" bodystart="225" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_envelope_1ac3649976f60abbcc20d0eaeaa55c4ac1" prot="private" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int Envelope::mContourOffset</definition>
        <argsstring></argsstring>
        <name>mContourOffset</name>
        <briefdescription>
<para>Number of pixels contour is from the true envelope. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="228" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" bodystart="228" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_envelope_1a0c971578512a3172b783182d8bf8553f" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Envelope::mInitialVal</definition>
        <argsstring></argsstring>
        <name>mInitialVal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="230" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" bodystart="230" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_envelope_1a5159ae9d5d5fa401891754f125740e08" prot="private" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int Envelope::mDragPoint</definition>
        <argsstring></argsstring>
        <name>mDragPoint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="233" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" bodystart="233" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_envelope_1abffccff738e0425e9b960928342491ec" prot="private" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int Envelope::mInitialY</definition>
        <argsstring></argsstring>
        <name>mInitialY</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="234" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" bodystart="234" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_envelope_1a04b6742c34f4847fadea3bc0d13c51e6" prot="private" static="no" mutable="no">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool Envelope::mUpper</definition>
        <argsstring></argsstring>
        <name>mUpper</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="235" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" bodystart="235" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_envelope_1aa3f878fce44c5d49612b3e80f616f29a" prot="private" static="no" mutable="no">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool Envelope::mIsDeleting</definition>
        <argsstring></argsstring>
        <name>mIsDeleting</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="236" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" bodystart="236" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_envelope_1a2221d002d25bcc64bc6e0374eadec8da" prot="private" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int Envelope::mButton</definition>
        <argsstring></argsstring>
        <name>mButton</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="237" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" bodystart="237" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_envelope_1a2c53752bfdf28ae1cb71c55676572307" prot="private" static="no" mutable="no">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool Envelope::mDB</definition>
        <argsstring></argsstring>
        <name>mDB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="238" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" bodystart="238" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_envelope_1ab9e3c6b1cb838cbe9af7777c7073b05c" prot="private" static="no" mutable="no">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool Envelope::mDirty</definition>
        <argsstring></argsstring>
        <name>mDirty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="239" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" bodystart="239" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_envelope_1a089bace335e7dbf681bc8c47c2f4eb9b" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Envelope::mMinValue</definition>
        <argsstring></argsstring>
        <name>mMinValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="241" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_envelope_1a72eb0047848fa23bf099993c3ef57317" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Envelope::mMaxValue</definition>
        <argsstring></argsstring>
        <name>mMaxValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="241" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" bodystart="241" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_envelope_1a6a89c914b2fee4cfe7a4b780117da497" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Envelope::lastIntegral_t0</definition>
        <argsstring></argsstring>
        <name>lastIntegral_t0</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="244" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" bodystart="244" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_envelope_1acd4f472b01fdf9b895b356d9e4fc71df" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Envelope::lastIntegral_t1</definition>
        <argsstring></argsstring>
        <name>lastIntegral_t1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="245" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" bodystart="245" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_envelope_1ab3f61d052d78a140038601688bef311a" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Envelope::lastIntegral_result</definition>
        <argsstring></argsstring>
        <name>lastIntegral_result</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="246" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" bodystart="246" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_envelope_1a3b36a5947628776b9a54ec3315c04653" prot="private" static="no" mutable="yes">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int Envelope::mSearchGuess</definition>
        <argsstring></argsstring>
        <name>mSearchGuess</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="248" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" bodystart="248" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_envelope_1ac609dfa5fe79dd719530e8c29bb35725" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Envelope::Envelope</definition>
        <argsstring>()</argsstring>
        <name>Envelope</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="79" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Envelope.cpp" bodystart="45" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="class_envelope_1a558e8ecaf782edcef59c43fbb99e5235" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void Envelope::Initialize</definition>
        <argsstring>(int numPoints)</argsstring>
        <name>Initialize</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>numPoints</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="80" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_envelope_1a0d854766d1fc084d27ddb7b6cf7967af" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>Envelope::~Envelope</definition>
        <argsstring>()</argsstring>
        <name>~Envelope</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="82" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Envelope.cpp" bodystart="72" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="class_envelope_1abd472dcf0eb0f885452a0cad1dae0696" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool Envelope::GetInterpolateDB</definition>
        <argsstring>()</argsstring>
        <name>GetInterpolateDB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="84" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" bodystart="84" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="class_envelope_1ad2ed64914b2d02981f892b813c72707f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void Envelope::SetInterpolateDB</definition>
        <argsstring>(bool db)</argsstring>
        <name>SetInterpolateDB</name>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>db</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="85" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" bodystart="85" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="class_envelope_1a8dec76fbda8fa4dafacd5053fcd21bfc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void Envelope::Mirror</definition>
        <argsstring>(bool mirror)</argsstring>
        <name>Mirror</name>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>mirror</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="86" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Envelope.cpp" bodystart="76" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="class_envelope_1a3c41e639b37089510d6e754ef5b44176" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void Envelope::Rescale</definition>
        <argsstring>(double minValue, double maxValue)</argsstring>
        <name>Rescale</name>
        <param>
          <type>double</type>
          <declname>minValue</declname>
        </param>
        <param>
          <type>double</type>
          <declname>maxValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Rescale function for time tracks (could also be used for other tracks though). This is used to load old time track project files where the envelope used a 0 to 1 range instead of storing the actual time track values. This function will change the range of the envelope and rescale all envelope points accordingly (unlike SetRange, which clamps the envelope points to the NEW range).  - the NEW minimum value  - the NEW maximum value </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="87" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Envelope.cpp" bodystart="87" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="class_envelope_1afd222aeb08ec8c091cf576b8bf0c7a3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void Envelope::Flatten</definition>
        <argsstring>(double value)</argsstring>
        <name>Flatten</name>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Flatten removes all points from the envelope to make it horizontal at a chosen y-value.  - the y-value for the flat envelope. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="89" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Envelope.cpp" bodystart="109" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="class_envelope_1a2e71d43f9b2f683080c57e57fb93355c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int Envelope::GetDragPoint</definition>
        <argsstring>(void)</argsstring>
        <name>GetDragPoint</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="90" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" bodystart="90" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="class_envelope_1ad5ddd2293653954e70ab48e02a3ee7a5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Envelope::GetMinValue</definition>
        <argsstring>() const </argsstring>
        <name>GetMinValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="92" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" bodystart="92" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="class_envelope_1a52926076ca223b39d682fd168e2a17fb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Envelope::GetMaxValue</definition>
        <argsstring>() const </argsstring>
        <name>GetMaxValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="93" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" bodystart="93" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="class_envelope_1aecfc3bd5b11d5b7a8eebdeedaab11e8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void Envelope::SetRange</definition>
        <argsstring>(double minValue, double maxValue)</argsstring>
        <name>SetRange</name>
        <param>
          <type>double</type>
          <declname>minValue</declname>
        </param>
        <param>
          <type>double</type>
          <declname>maxValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="94" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Envelope.cpp" bodystart="115" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="class_envelope_1a4a8e03849f2caa80641c7aabcbf36ee7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Envelope::ClampValue</definition>
        <argsstring>(double value)</argsstring>
        <name>ClampValue</name>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="96" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" bodystart="96" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="class_envelope_1aa444e5a16c01d003f5abc83d2ad9d1fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool Envelope::HandleXMLTag</definition>
        <argsstring>(const wxChar *tag, const wxChar **attrs) override</argsstring>
        <name>HandleXMLTag</name>
        <reimplements refid="class_x_m_l_tag_handler_1aa1891aeb2d34e28a6ee0dd02391039b8">HandleXMLTag</reimplements>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> wxChar *</type>
          <declname>tag</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> wxChar **</type>
          <declname>attrs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="105" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Envelope.cpp" bodystart="249" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="class_envelope_1a2106f326d699adab9b44029782e9b1d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_x_m_l_tag_handler" kindref="compound">XMLTagHandler</ref> *</type>
        <definition>XMLTagHandler * Envelope::HandleXMLChild</definition>
        <argsstring>(const wxChar *tag) override</argsstring>
        <name>HandleXMLChild</name>
        <reimplements refid="class_x_m_l_tag_handler_1ad37304e1f592a76a9dd80b5455db741b">HandleXMLChild</reimplements>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> wxChar *</type>
          <declname>tag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="106" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Envelope.cpp" bodystart="276" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="class_envelope_1a893b472ea27b24c980d6e5efcd5c5e55" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void Envelope::WriteXML</definition>
        <argsstring>(XMLWriter &amp;xmlFile) const </argsstring>
        <name>WriteXML</name>
        <param>
          <type><ref refid="class_x_m_l_writer" kindref="compound">XMLWriter</ref> &amp;</type>
          <declname>xmlFile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="107" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Envelope.cpp" bodystart="284" bodyend="300"/>
      </memberdef>
      <memberdef kind="function" id="class_envelope_1a4463f20563902ef78367735ea25440f4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void Envelope::DrawPoints</definition>
        <argsstring>(wxDC &amp;dc, const wxRect &amp;r, const ZoomInfo &amp;zoomInfo, bool dB, double dBRange, float zoomMin, float zoomMax) const </argsstring>
        <name>DrawPoints</name>
        <param>
          <type>wxDC &amp;</type>
          <declname>dc</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> wxRect &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="class_zoom_info" kindref="compound">ZoomInfo</ref> &amp;</type>
          <declname>zoomInfo</declname>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>dB</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dBRange</declname>
        </param>
        <param>
          <type>float</type>
          <declname>zoomMin</declname>
        </param>
        <param>
          <type>float</type>
          <declname>zoomMax</declname>
        </param>
        <briefdescription>
<para>TODO: This should probably move to track artist. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="109" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Envelope.cpp" bodystart="187" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="class_envelope_1a2f3f0bb42830e4116b493db3b86b9e51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool Envelope::MouseEvent</definition>
        <argsstring>(wxMouseEvent &amp;event, wxRect &amp;r, const ZoomInfo &amp;zoomInfo, bool dB, double dBRange, float zoomMin, float zoomMax)</argsstring>
        <name>MouseEvent</name>
        <param>
          <type>wxMouseEvent &amp;</type>
          <declname>event</declname>
        </param>
        <param>
          <type>wxRect &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="class_zoom_info" kindref="compound">ZoomInfo</ref> &amp;</type>
          <declname>zoomInfo</declname>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>dB</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dBRange</declname>
        </param>
        <param>
          <type>float</type>
          <declname>zoomMin</declname>
        </param>
        <param>
          <type>float</type>
          <declname>zoomMax</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="115" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Envelope.cpp" bodystart="562" bodyend="575"/>
      </memberdef>
      <memberdef kind="function" id="class_envelope_1ae66b7db56e9cb460628292060d9e332e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool Envelope::HandleMouseButtonDown</definition>
        <argsstring>(wxMouseEvent &amp;event, wxRect &amp;r, const ZoomInfo &amp;zoomInfo, bool dB, double dBRange, float zoomMin, float zoomMax)</argsstring>
        <name>HandleMouseButtonDown</name>
        <param>
          <type>wxMouseEvent &amp;</type>
          <declname>event</declname>
        </param>
        <param>
          <type>wxRect &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="class_zoom_info" kindref="compound">ZoomInfo</ref> &amp;</type>
          <declname>zoomInfo</declname>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>dB</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dBRange</declname>
        </param>
        <param>
          <type>float</type>
          <declname>zoomMin</declname>
        </param>
        <param>
          <type>float</type>
          <declname>zoomMax</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>HandleMouseButtonDown either finds an existing control point or adds a NEW one which is then recorded as the point to drag. This is slightly complicated by there possibly being four control points for a given time value: We have an upper and lower envelope line. Also we may be showing an inner envelope (at 0.5 the range). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="118" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Envelope.cpp" bodystart="334" bodyend="449"/>
      </memberdef>
      <memberdef kind="function" id="class_envelope_1aaf2fc278113f16514224baddd433396d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool Envelope::HandleDragging</definition>
        <argsstring>(wxMouseEvent &amp;event, wxRect &amp;r, const ZoomInfo &amp;zoomInfo, bool dB, double dBRange, float zoomMin, float zoomMax)</argsstring>
        <name>HandleDragging</name>
        <param>
          <type>wxMouseEvent &amp;</type>
          <declname>event</declname>
        </param>
        <param>
          <type>wxRect &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="class_zoom_info" kindref="compound">ZoomInfo</ref> &amp;</type>
          <declname>zoomInfo</declname>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>dB</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dBRange</declname>
        </param>
        <param>
          <type>float</type>
          <declname>zoomMin</declname>
        </param>
        <param>
          <type>float</type>
          <declname>zoomMax</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="121" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Envelope.cpp" bodystart="514" bodyend="538"/>
      </memberdef>
      <memberdef kind="function" id="class_envelope_1aafe718b93cff1640604e8828c999b145" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool Envelope::HandleMouseButtonUp</definition>
        <argsstring>()</argsstring>
        <name>HandleMouseButtonUp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="124" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Envelope.cpp" bodystart="541" bodyend="549"/>
      </memberdef>
      <memberdef kind="function" id="class_envelope_1aea71e31c98b00f9dd6e1b73698b65ae9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void Envelope::CollapseRegion</definition>
        <argsstring>(double t0, double t1)</argsstring>
        <name>CollapseRegion</name>
        <param>
          <type>double</type>
          <declname>t0</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="127" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Envelope.cpp" bodystart="577" bodyend="606"/>
      </memberdef>
      <memberdef kind="function" id="class_envelope_1a8cd3c5f0d2d7497be273995f757e78da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void Envelope::CopyFrom</definition>
        <argsstring>(const Envelope *e, double t0, double t1)</argsstring>
        <name>CopyFrom</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="class_envelope" kindref="compound">Envelope</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t0</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="128" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Envelope.cpp" bodystart="129" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="class_envelope_1ae42c4f792fbadbc7843e46d7e77dcb40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void Envelope::Paste</definition>
        <argsstring>(double t0, const Envelope *e)</argsstring>
        <name>Paste</name>
        <param>
          <type>double</type>
          <declname>t0</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="class_envelope" kindref="compound">Envelope</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="129" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Envelope.cpp" bodystart="613" bodyend="799"/>
      </memberdef>
      <memberdef kind="function" id="class_envelope_1a86f4d425aef4615f5865631df851c14a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void Envelope::InsertSpace</definition>
        <argsstring>(double t0, double tlen)</argsstring>
        <name>InsertSpace</name>
        <param>
          <type>double</type>
          <declname>t0</declname>
        </param>
        <param>
          <type>double</type>
          <declname>tlen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="130" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Envelope.cpp" bodystart="842" bodyend="851"/>
      </memberdef>
      <memberdef kind="function" id="class_envelope_1a7b5895b783e85bfa1bfac92a41256091" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void Envelope::RemoveUnneededPoints</definition>
        <argsstring>(double time=-1, double tolerence=0.001)</argsstring>
        <name>RemoveUnneededPoints</name>
        <param>
          <type>double</type>
          <declname>time</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>double</type>
          <declname>tolerence</declname>
          <defval>0.001</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="131" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Envelope.cpp" bodystart="806" bodyend="840"/>
      </memberdef>
      <memberdef kind="function" id="class_envelope_1a498cad9b8d16438f815720a0916964b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void Envelope::SetOffset</definition>
        <argsstring>(double newOffset)</argsstring>
        <name>SetOffset</name>
        <param>
          <type>double</type>
          <declname>newOffset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="134" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Envelope.cpp" bodystart="975" bodyend="978"/>
      </memberdef>
      <memberdef kind="function" id="class_envelope_1a45f0a9c67e5e9a66acc9debd4bdc6a37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void Envelope::SetTrackLen</definition>
        <argsstring>(double trackLen)</argsstring>
        <name>SetTrackLen</name>
        <param>
          <type>double</type>
          <declname>trackLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="135" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Envelope.cpp" bodystart="980" bodyend="991"/>
      </memberdef>
      <memberdef kind="function" id="class_envelope_1ac5729053c923e47b43f0f063845c2ce9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Envelope::GetValue</definition>
        <argsstring>(double t) const </argsstring>
        <name>GetValue</name>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Get envelope value at time t. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="139" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Envelope.cpp" bodystart="994" bodyend="1001"/>
      </memberdef>
      <memberdef kind="function" id="class_envelope_1a5daec75b3aa3b0da7919fc986014e1db" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void Envelope::GetValues</definition>
        <argsstring>(double *buffer, int len, double t0, double tstep) const </argsstring>
        <name>GetValues</name>
        <param>
          <type>double *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>len</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t0</declname>
        </param>
        <param>
          <type>double</type>
          <declname>tstep</declname>
        </param>
        <briefdescription>
<para>Get many envelope points at once. </para>        </briefdescription>
        <detaileddescription>
<para>This is much faster than calling <ref refid="class_envelope_1ac5729053c923e47b43f0f063845c2ce9" kindref="member">GetValue()</ref> multiple times if you need more than one value in a row. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="145" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Envelope.cpp" bodystart="1061" bodyend="1145"/>
      </memberdef>
      <memberdef kind="function" id="class_envelope_1ae44d6e61da318696e639634a8c8d8716" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void Envelope::GetValues</definition>
        <argsstring>(double *buffer, int bufferLen, int leftOffset, const ZoomInfo &amp;zoomInfo) const </argsstring>
        <name>GetValues</name>
        <param>
          <type>double *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>bufferLen</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>leftOffset</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="class_zoom_info" kindref="compound">ZoomInfo</ref> &amp;</type>
          <declname>zoomInfo</declname>
        </param>
        <briefdescription>
<para>Get many envelope points at once, but don&apos;t assume uniform time step. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="149" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Envelope.cpp" bodystart="1148" bodyend="1152"/>
      </memberdef>
      <memberdef kind="function" id="class_envelope_1a0522a3b43f88776e2d3f1d65204a25a3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int Envelope::NumberOfPointsAfter</definition>
        <argsstring>(double t) const </argsstring>
        <name>NumberOfPointsAfter</name>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="152" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Envelope.cpp" bodystart="1154" bodyend="1170"/>
      </memberdef>
      <memberdef kind="function" id="class_envelope_1ab940988f63a01c64723d487708c3fefc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Envelope::NextPointAfter</definition>
        <argsstring>(double t) const </argsstring>
        <name>NextPointAfter</name>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="153" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Envelope.cpp" bodystart="1172" bodyend="1187"/>
      </memberdef>
      <memberdef kind="function" id="class_envelope_1ab2378b3d8c5b1c0141f4bf89266e0534" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Envelope::Average</definition>
        <argsstring>(double t0, double t1) const </argsstring>
        <name>Average</name>
        <param>
          <type>double</type>
          <declname>t0</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="155" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Envelope.cpp" bodystart="1189" bodyend="1195"/>
      </memberdef>
      <memberdef kind="function" id="class_envelope_1ab4a29c49b1fbdac9551788cb2d50781c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Envelope::AverageOfInverse</definition>
        <argsstring>(double t0, double t1) const </argsstring>
        <name>AverageOfInverse</name>
        <param>
          <type>double</type>
          <declname>t0</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="156" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Envelope.cpp" bodystart="1197" bodyend="1203"/>
      </memberdef>
      <memberdef kind="function" id="class_envelope_1ad6d739d852e20413e026baadc8a40729" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Envelope::Integral</definition>
        <argsstring>(double t0, double t1) const </argsstring>
        <name>Integral</name>
        <param>
          <type>double</type>
          <declname>t0</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="157" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Envelope.cpp" bodystart="1288" bodyend="1346"/>
      </memberdef>
      <memberdef kind="function" id="class_envelope_1a66abd2af2ac108e4a9959222d69e397e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Envelope::IntegralOfInverse</definition>
        <argsstring>(double t0, double t1) const </argsstring>
        <name>IntegralOfInverse</name>
        <param>
          <type>double</type>
          <declname>t0</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="158" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Envelope.cpp" bodystart="1348" bodyend="1406"/>
      </memberdef>
      <memberdef kind="function" id="class_envelope_1a2646b651b45e74bd9785cb1b966aad08" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Envelope::SolveIntegralOfInverse</definition>
        <argsstring>(double t0, double area) const </argsstring>
        <name>SolveIntegralOfInverse</name>
        <param>
          <type>double</type>
          <declname>t0</declname>
        </param>
        <param>
          <type>double</type>
          <declname>area</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="159" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Envelope.cpp" bodystart="1408" bodyend="1504"/>
      </memberdef>
      <memberdef kind="function" id="class_envelope_1a704dff79bba85d7dc1d965fbb70d8481" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void Envelope::print</definition>
        <argsstring>() const </argsstring>
        <name>print</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="161" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Envelope.cpp" bodystart="1506" bodyend="1510"/>
      </memberdef>
      <memberdef kind="function" id="class_envelope_1a7c7f0e5152dc8d42ab35357955311fde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void Envelope::testMe</definition>
        <argsstring>()</argsstring>
        <name>testMe</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="162" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Envelope.cpp" bodystart="1521" bodyend="1576"/>
      </memberdef>
      <memberdef kind="function" id="class_envelope_1afad36ffbd6adb3645bc0d8f59c6f629c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool Envelope::IsDirty</definition>
        <argsstring>() const </argsstring>
        <name>IsDirty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="164" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_envelope_1aa0d5f77099711f3843108dbce4cf4ed2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int Envelope::Insert</definition>
        <argsstring>(double when, double value)</argsstring>
        <name>Insert</name>
        <param>
          <type>double</type>
          <declname>when</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Add a point at a particular spot. </para>        </briefdescription>
        <detaileddescription>
<para>Add a control point to the envelope.</para><para>Control point positions start at zero and are measured in seconds from the start of the envelope. The position of the envelope on the project-wide time scale is store in seconds in Envelope::mOffset. This is worth remembering. If you call <ref refid="class_envelope_1aa0d5f77099711f3843108dbce4cf4ed2" kindref="member">Envelope::Insert()</ref> from <ref refid="class_wave_clip" kindref="compound">WaveClip</ref>, or anywhere else outside the <ref refid="class_envelope" kindref="compound">Envelope</ref> class that is using project timing, subtract the envelope&apos;s mOffset from the time. If you call <ref refid="class_envelope_1aa0d5f77099711f3843108dbce4cf4ed2" kindref="member">Envelope::Insert()</ref> from within <ref refid="class_envelope" kindref="compound">Envelope</ref>, don&apos;t subtract mOffset because you are working in relative time inside the envelope <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>when</parametername>
</parameternamelist>
<parameterdescription>
<para>the time in seconds when the envelope point should be created. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>the envelope value to use at the given point. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the index of the NEW envelope point within array of envelope points. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="167" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Envelope.cpp" bodystart="920" bodyend="971"/>
      </memberdef>
      <memberdef kind="function" id="class_envelope_1a5bb5b7edd16d65b896b585e4f9bed968" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int Envelope::Move</definition>
        <argsstring>(double when, double value)</argsstring>
        <name>Move</name>
        <param>
          <type>double</type>
          <declname>when</declname>
        </param>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Move a point at when to value. </para>        </briefdescription>
        <detaileddescription>
<para>Returns 0 if point moved, -1 if not found. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="172" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Envelope.cpp" bodystart="853" bodyend="868"/>
      </memberdef>
      <memberdef kind="function" id="class_envelope_1a9f1b3d27d312bc44e97e8b2268bedef8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void Envelope::Delete</definition>
        <argsstring>(int point)</argsstring>
        <name>Delete</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>point</declname>
        </param>
        <briefdescription>
<para>DELETE a point by its position in array. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="175" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Envelope.cpp" bodystart="551" bodyend="554"/>
      </memberdef>
      <memberdef kind="function" id="class_envelope_1ae2a0d5a7527999919d9eefe526bb44fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void Envelope::Insert</definition>
        <argsstring>(int point, const EnvPoint &amp;p)</argsstring>
        <name>Insert</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>point</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="class_env_point" kindref="compound">EnvPoint</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>insert a point </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="178" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Envelope.cpp" bodystart="556" bodyend="559"/>
      </memberdef>
      <memberdef kind="function" id="class_envelope_1adfc11a49a3ca8a9a5f4b51ff4131c9c1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int Envelope::GetNumberOfPoints</definition>
        <argsstring>() const </argsstring>
        <name>GetNumberOfPoints</name>
        <briefdescription>
<para>Return number of points. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="181" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Envelope.cpp" bodystart="871" bodyend="874"/>
      </memberdef>
      <memberdef kind="function" id="class_envelope_1a87cb929c2866ef1ca20e947f22d23747" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="class_env_point" kindref="compound">EnvPoint</ref> &amp;</type>
        <definition>const EnvPoint&amp; Envelope::operator[]</definition>
        <argsstring>(int index) const </argsstring>
        <name>operator[]</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Accessor for points. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="184" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" bodystart="184" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="class_envelope_1a43bdb8e0be30685682f11beaf1c051f1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void Envelope::GetPoints</definition>
        <argsstring>(double *bufferWhen, double *bufferValue, int bufferLen) const </argsstring>
        <name>GetPoints</name>
        <param>
          <type>double *</type>
          <declname>bufferWhen</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>bufferValue</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>bufferLen</declname>
        </param>
        <briefdescription>
<para>Returns the sets of when and value pairs. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="190" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Envelope.cpp" bodystart="876" bodyend="888"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_envelope_1a2c30d2ea993cea6e237d42edeca053e2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_env_point" kindref="compound">EnvPoint</ref> *</type>
        <definition>EnvPoint * Envelope::AddPointAtEnd</definition>
        <argsstring>(double t, double val)</argsstring>
        <name>AddPointAtEnd</name>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="195" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Envelope.cpp" bodystart="123" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="class_envelope_1a4fcc7a0eb67580d0f609d35e72b79b8f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void Envelope::MarkDragPointForDeletion</definition>
        <argsstring>()</argsstring>
        <name>MarkDragPointForDeletion</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Mark dragged point for deletion. It will be deleted on mouse button up. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="196" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Envelope.cpp" bodystart="453" bodyend="477"/>
      </memberdef>
      <memberdef kind="function" id="class_envelope_1aaf795e9ab5336eac320b1a55919cf12e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Envelope::ValueOfPixel</definition>
        <argsstring>(int y, int height, bool upper, bool dB, double dBRange, float zoomMin, float zoomMax)</argsstring>
        <name>ValueOfPixel</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>height</declname>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>upper</declname>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>dB</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dBRange</declname>
        </param>
        <param>
          <type>float</type>
          <declname>zoomMin</declname>
        </param>
        <param>
          <type>float</type>
          <declname>zoomMax</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="_track_artist_8cpp_1ae9fe7afff0bfbea92663e8a2c0ecf0cb" kindref="member">ValueOfPixel()</ref> converts a y position on screen to an envelope value. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>- y position, usually of the mouse.relative to the clip. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>- height of the rectangle we are in.  - true if we are on the upper line, false if on lower.  - display mode either linear or log.  - vertical scale, typically -1.0  - vertical scale, typically +1.0 </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="197" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Envelope.cpp" bodystart="314" bodyend="326"/>
      </memberdef>
      <memberdef kind="function" id="class_envelope_1aef0cee86409ab553432081c3b15465e4" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void Envelope::BinarySearchForTime</definition>
        <argsstring>(int &amp;Lo, int &amp;Hi, double t) const </argsstring>
        <name>BinarySearchForTime</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> &amp;</type>
          <declname>Lo</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> &amp;</type>
          <declname>Hi</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Lo</parametername>
</parameternamelist>
<parameterdescription>
<para>returns last index at or before this time. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Hi</parametername>
</parameternamelist>
<parameterdescription>
<para>returns first index after this time. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="200" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Envelope.cpp" bodystart="1005" bodyend="1045"/>
      </memberdef>
      <memberdef kind="function" id="class_envelope_1a6b5c45db6dac740d145b2c87b8a6a10c" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Envelope::GetInterpolationStartValueAtPoint</definition>
        <argsstring>(int iPoint) const </argsstring>
        <name>GetInterpolationStartValueAtPoint</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>iPoint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>GetInterpolationStartValueAtPoint() is used to select either the envelope value or its log depending on whether we are doing linear or log interpolation. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iPoint</parametername>
</parameternamelist>
<parameterdescription>
<para>index in env array to look at. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>value there, or its (safe) log10. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="201" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Envelope.cpp" bodystart="1052" bodyend="1059"/>
      </memberdef>
      <memberdef kind="function" id="class_envelope_1ae8a28bf1c87194510ddf7ae364876cb9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void Envelope::MoveDraggedPoint</definition>
        <argsstring>(wxMouseEvent &amp;event, wxRect &amp;r, const ZoomInfo &amp;zoomInfo, bool dB, double dBRange, float zoomMin, float zoomMax)</argsstring>
        <name>MoveDraggedPoint</name>
        <param>
          <type>wxMouseEvent &amp;</type>
          <declname>event</declname>
        </param>
        <param>
          <type>wxRect &amp;</type>
          <declname>r</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="class_zoom_info" kindref="compound">ZoomInfo</ref> &amp;</type>
          <declname>zoomInfo</declname>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>dB</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dBRange</declname>
        </param>
        <param>
          <type>float</type>
          <declname>zoomMin</declname>
        </param>
        <param>
          <type>float</type>
          <declname>zoomMax</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="202" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Envelope.cpp" bodystart="479" bodyend="512"/>
      </memberdef>
      <memberdef kind="function" id="class_envelope_1aeba101df108913ec4e9348c6fbeca148" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void Envelope::resetIntegralMemoizer</definition>
        <argsstring>()</argsstring>
        <name>resetIntegralMemoizer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="208" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" bodystart="208" bodyend="208"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>STK envelope base class. </para>    </briefdescription>
    <detaileddescription>
<para>Draggable curve used in <ref refid="class_track_panel" kindref="compound">TrackPanel</ref> for varying amplification.</para><para>This class implements a simple envelope generator which is capable of ramping to a target value by a specified <emphasis>rate</emphasis>. It also responds to simple <emphasis>keyOn</emphasis> and <emphasis>keyOff</emphasis> messages, ramping to 1.0 on keyOn and to 0.0 on keyOff.</para><para>by Perry R. Cook and Gary P. Scavone, 1995 - 2005.</para><para>This class manages an envelope - i.e. a piecewise linear funtion that the user can edit by dragging control points around. The envelope is most commonly used to control the amplitude of a waveform, but it is also used to shape the Equalization curve. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="3841">
        <label>XMLTagHandler</label>
        <link refid="class_x_m_l_tag_handler"/>
      </node>
      <node id="3840">
        <label>Envelope</label>
        <link refid="class_envelope"/>
        <childnode refid="3841" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3843">
        <label>XMLTagHandler</label>
        <link refid="class_x_m_l_tag_handler"/>
      </node>
      <node id="3842">
        <label>Envelope</label>
        <link refid="class_envelope"/>
        <childnode refid="3843" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" line="77" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/Envelope.h" bodystart="77" bodyend="250"/>
    <listofallmembers>
      <member refid="class_envelope_1a2c30d2ea993cea6e237d42edeca053e2" prot="private" virt="non-virtual"><scope>Envelope</scope><name>AddPointAtEnd</name></member>
      <member refid="class_envelope_1ab2378b3d8c5b1c0141f4bf89266e0534" prot="public" virt="non-virtual"><scope>Envelope</scope><name>Average</name></member>
      <member refid="class_envelope_1ab4a29c49b1fbdac9551788cb2d50781c" prot="public" virt="non-virtual"><scope>Envelope</scope><name>AverageOfInverse</name></member>
      <member refid="class_envelope_1aef0cee86409ab553432081c3b15465e4" prot="private" virt="non-virtual"><scope>Envelope</scope><name>BinarySearchForTime</name></member>
      <member refid="class_envelope_1a4a8e03849f2caa80641c7aabcbf36ee7" prot="public" virt="non-virtual"><scope>Envelope</scope><name>ClampValue</name></member>
      <member refid="class_envelope_1aea71e31c98b00f9dd6e1b73698b65ae9" prot="public" virt="non-virtual"><scope>Envelope</scope><name>CollapseRegion</name></member>
      <member refid="class_envelope_1a8cd3c5f0d2d7497be273995f757e78da" prot="public" virt="non-virtual"><scope>Envelope</scope><name>CopyFrom</name></member>
      <member refid="class_envelope_1a9f1b3d27d312bc44e97e8b2268bedef8" prot="public" virt="non-virtual"><scope>Envelope</scope><name>Delete</name></member>
      <member refid="class_envelope_1a4463f20563902ef78367735ea25440f4" prot="public" virt="non-virtual"><scope>Envelope</scope><name>DrawPoints</name></member>
      <member refid="class_envelope_1ac609dfa5fe79dd719530e8c29bb35725" prot="public" virt="non-virtual"><scope>Envelope</scope><name>Envelope</name></member>
      <member refid="class_envelope_1afd222aeb08ec8c091cf576b8bf0c7a3b" prot="public" virt="non-virtual"><scope>Envelope</scope><name>Flatten</name></member>
      <member refid="class_envelope_1a2e71d43f9b2f683080c57e57fb93355c" prot="public" virt="non-virtual"><scope>Envelope</scope><name>GetDragPoint</name></member>
      <member refid="class_envelope_1abd472dcf0eb0f885452a0cad1dae0696" prot="public" virt="non-virtual"><scope>Envelope</scope><name>GetInterpolateDB</name></member>
      <member refid="class_envelope_1a6b5c45db6dac740d145b2c87b8a6a10c" prot="private" virt="non-virtual"><scope>Envelope</scope><name>GetInterpolationStartValueAtPoint</name></member>
      <member refid="class_envelope_1a52926076ca223b39d682fd168e2a17fb" prot="public" virt="non-virtual"><scope>Envelope</scope><name>GetMaxValue</name></member>
      <member refid="class_envelope_1ad5ddd2293653954e70ab48e02a3ee7a5" prot="public" virt="non-virtual"><scope>Envelope</scope><name>GetMinValue</name></member>
      <member refid="class_envelope_1adfc11a49a3ca8a9a5f4b51ff4131c9c1" prot="public" virt="non-virtual"><scope>Envelope</scope><name>GetNumberOfPoints</name></member>
      <member refid="class_envelope_1a43bdb8e0be30685682f11beaf1c051f1" prot="public" virt="non-virtual"><scope>Envelope</scope><name>GetPoints</name></member>
      <member refid="class_envelope_1ac5729053c923e47b43f0f063845c2ce9" prot="public" virt="non-virtual"><scope>Envelope</scope><name>GetValue</name></member>
      <member refid="class_envelope_1a5daec75b3aa3b0da7919fc986014e1db" prot="public" virt="non-virtual"><scope>Envelope</scope><name>GetValues</name></member>
      <member refid="class_envelope_1ae44d6e61da318696e639634a8c8d8716" prot="public" virt="non-virtual"><scope>Envelope</scope><name>GetValues</name></member>
      <member refid="class_envelope_1aaf2fc278113f16514224baddd433396d" prot="public" virt="non-virtual"><scope>Envelope</scope><name>HandleDragging</name></member>
      <member refid="class_envelope_1ae66b7db56e9cb460628292060d9e332e" prot="public" virt="non-virtual"><scope>Envelope</scope><name>HandleMouseButtonDown</name></member>
      <member refid="class_envelope_1aafe718b93cff1640604e8828c999b145" prot="public" virt="non-virtual"><scope>Envelope</scope><name>HandleMouseButtonUp</name></member>
      <member refid="class_envelope_1a2106f326d699adab9b44029782e9b1d9" prot="public" virt="virtual"><scope>Envelope</scope><name>HandleXMLChild</name></member>
      <member refid="class_x_m_l_tag_handler_1a2440581a01bc2dc3a098083fa694c9bf" prot="public" virt="virtual"><scope>Envelope</scope><name>HandleXMLContent</name></member>
      <member refid="class_x_m_l_tag_handler_1af4d7389b5029a37c4b3c665eab464660" prot="public" virt="virtual"><scope>Envelope</scope><name>HandleXMLEndTag</name></member>
      <member refid="class_envelope_1aa444e5a16c01d003f5abc83d2ad9d1fd" prot="public" virt="virtual"><scope>Envelope</scope><name>HandleXMLTag</name></member>
      <member refid="class_envelope_1a558e8ecaf782edcef59c43fbb99e5235" prot="public" virt="non-virtual"><scope>Envelope</scope><name>Initialize</name></member>
      <member refid="class_envelope_1aa0d5f77099711f3843108dbce4cf4ed2" prot="public" virt="non-virtual"><scope>Envelope</scope><name>Insert</name></member>
      <member refid="class_envelope_1ae2a0d5a7527999919d9eefe526bb44fc" prot="public" virt="non-virtual"><scope>Envelope</scope><name>Insert</name></member>
      <member refid="class_envelope_1a86f4d425aef4615f5865631df851c14a" prot="public" virt="non-virtual"><scope>Envelope</scope><name>InsertSpace</name></member>
      <member refid="class_envelope_1ad6d739d852e20413e026baadc8a40729" prot="public" virt="non-virtual"><scope>Envelope</scope><name>Integral</name></member>
      <member refid="class_envelope_1a66abd2af2ac108e4a9959222d69e397e" prot="public" virt="non-virtual"><scope>Envelope</scope><name>IntegralOfInverse</name></member>
      <member refid="class_envelope_1afad36ffbd6adb3645bc0d8f59c6f629c" prot="public" virt="non-virtual"><scope>Envelope</scope><name>IsDirty</name></member>
      <member refid="class_envelope_1ab3f61d052d78a140038601688bef311a" prot="private" virt="non-virtual"><scope>Envelope</scope><name>lastIntegral_result</name></member>
      <member refid="class_envelope_1a6a89c914b2fee4cfe7a4b780117da497" prot="private" virt="non-virtual"><scope>Envelope</scope><name>lastIntegral_t0</name></member>
      <member refid="class_envelope_1acd4f472b01fdf9b895b356d9e4fc71df" prot="private" virt="non-virtual"><scope>Envelope</scope><name>lastIntegral_t1</name></member>
      <member refid="class_envelope_1a4fcc7a0eb67580d0f609d35e72b79b8f" prot="private" virt="non-virtual"><scope>Envelope</scope><name>MarkDragPointForDeletion</name></member>
      <member refid="class_envelope_1a2221d002d25bcc64bc6e0374eadec8da" prot="private" virt="non-virtual"><scope>Envelope</scope><name>mButton</name></member>
      <member refid="class_envelope_1ac3649976f60abbcc20d0eaeaa55c4ac1" prot="private" virt="non-virtual"><scope>Envelope</scope><name>mContourOffset</name></member>
      <member refid="class_envelope_1a2c53752bfdf28ae1cb71c55676572307" prot="private" virt="non-virtual"><scope>Envelope</scope><name>mDB</name></member>
      <member refid="class_envelope_1a518070736afa6e79c8b3f9338290f828" prot="private" virt="non-virtual"><scope>Envelope</scope><name>mDefaultValue</name></member>
      <member refid="class_envelope_1ab9e3c6b1cb838cbe9af7777c7073b05c" prot="private" virt="non-virtual"><scope>Envelope</scope><name>mDirty</name></member>
      <member refid="class_envelope_1a5159ae9d5d5fa401891754f125740e08" prot="private" virt="non-virtual"><scope>Envelope</scope><name>mDragPoint</name></member>
      <member refid="class_envelope_1a9d731938466d764c7079a95647a1d8e4" prot="private" virt="non-virtual"><scope>Envelope</scope><name>mEnv</name></member>
      <member refid="class_envelope_1a0c971578512a3172b783182d8bf8553f" prot="private" virt="non-virtual"><scope>Envelope</scope><name>mInitialVal</name></member>
      <member refid="class_envelope_1abffccff738e0425e9b960928342491ec" prot="private" virt="non-virtual"><scope>Envelope</scope><name>mInitialY</name></member>
      <member refid="class_envelope_1a8dec76fbda8fa4dafacd5053fcd21bfc" prot="public" virt="non-virtual"><scope>Envelope</scope><name>Mirror</name></member>
      <member refid="class_envelope_1aa3f878fce44c5d49612b3e80f616f29a" prot="private" virt="non-virtual"><scope>Envelope</scope><name>mIsDeleting</name></member>
      <member refid="class_envelope_1a72eb0047848fa23bf099993c3ef57317" prot="private" virt="non-virtual"><scope>Envelope</scope><name>mMaxValue</name></member>
      <member refid="class_envelope_1a089bace335e7dbf681bc8c47c2f4eb9b" prot="private" virt="non-virtual"><scope>Envelope</scope><name>mMinValue</name></member>
      <member refid="class_envelope_1a560376f8e9574cfb4f2c3f77c3f4a694" prot="private" virt="non-virtual"><scope>Envelope</scope><name>mMirror</name></member>
      <member refid="class_envelope_1a2b18e5a1a70005619236bea273c145ca" prot="private" virt="non-virtual"><scope>Envelope</scope><name>mOffset</name></member>
      <member refid="class_envelope_1a2f3f0bb42830e4116b493db3b86b9e51" prot="public" virt="non-virtual"><scope>Envelope</scope><name>MouseEvent</name></member>
      <member refid="class_envelope_1a5bb5b7edd16d65b896b585e4f9bed968" prot="public" virt="non-virtual"><scope>Envelope</scope><name>Move</name></member>
      <member refid="class_envelope_1ae8a28bf1c87194510ddf7ae364876cb9" prot="private" virt="non-virtual"><scope>Envelope</scope><name>MoveDraggedPoint</name></member>
      <member refid="class_envelope_1a3b36a5947628776b9a54ec3315c04653" prot="private" virt="non-virtual"><scope>Envelope</scope><name>mSearchGuess</name></member>
      <member refid="class_envelope_1a77dd2e9c35707200729399658cd9177d" prot="private" virt="non-virtual"><scope>Envelope</scope><name>mTrackEpsilon</name></member>
      <member refid="class_envelope_1ab14515571853067f7481516da6a1dd58" prot="private" virt="non-virtual"><scope>Envelope</scope><name>mTrackLen</name></member>
      <member refid="class_envelope_1a04b6742c34f4847fadea3bc0d13c51e6" prot="private" virt="non-virtual"><scope>Envelope</scope><name>mUpper</name></member>
      <member refid="class_envelope_1ab940988f63a01c64723d487708c3fefc" prot="public" virt="non-virtual"><scope>Envelope</scope><name>NextPointAfter</name></member>
      <member refid="class_envelope_1a0522a3b43f88776e2d3f1d65204a25a3" prot="public" virt="non-virtual"><scope>Envelope</scope><name>NumberOfPointsAfter</name></member>
      <member refid="class_envelope_1a87cb929c2866ef1ca20e947f22d23747" prot="public" virt="non-virtual"><scope>Envelope</scope><name>operator[]</name></member>
      <member refid="class_envelope_1ae42c4f792fbadbc7843e46d7e77dcb40" prot="public" virt="non-virtual"><scope>Envelope</scope><name>Paste</name></member>
      <member refid="class_envelope_1a704dff79bba85d7dc1d965fbb70d8481" prot="public" virt="non-virtual"><scope>Envelope</scope><name>print</name></member>
      <member refid="class_x_m_l_tag_handler_1a8e91945b6b8c9a4f85ea3b33d9a4c1ae" prot="public" virt="non-virtual"><scope>Envelope</scope><name>ReadXMLChild</name></member>
      <member refid="class_x_m_l_tag_handler_1a61e36b40c048430bf94ca82dee0c7b65" prot="public" virt="non-virtual"><scope>Envelope</scope><name>ReadXMLContent</name></member>
      <member refid="class_x_m_l_tag_handler_1a9e5ffb1c69cf9f5e3168bcefc89d2462" prot="public" virt="non-virtual"><scope>Envelope</scope><name>ReadXMLEndTag</name></member>
      <member refid="class_x_m_l_tag_handler_1ae4ca0c0282252907d45b65a1ba099fd1" prot="public" virt="non-virtual"><scope>Envelope</scope><name>ReadXMLTag</name></member>
      <member refid="class_envelope_1a7b5895b783e85bfa1bfac92a41256091" prot="public" virt="non-virtual"><scope>Envelope</scope><name>RemoveUnneededPoints</name></member>
      <member refid="class_envelope_1a3c41e639b37089510d6e754ef5b44176" prot="public" virt="non-virtual"><scope>Envelope</scope><name>Rescale</name></member>
      <member refid="class_envelope_1aeba101df108913ec4e9348c6fbeca148" prot="private" virt="non-virtual"><scope>Envelope</scope><name>resetIntegralMemoizer</name></member>
      <member refid="class_envelope_1ad2ed64914b2d02981f892b813c72707f" prot="public" virt="non-virtual"><scope>Envelope</scope><name>SetInterpolateDB</name></member>
      <member refid="class_envelope_1a498cad9b8d16438f815720a0916964b5" prot="public" virt="non-virtual"><scope>Envelope</scope><name>SetOffset</name></member>
      <member refid="class_envelope_1aecfc3bd5b11d5b7a8eebdeedaab11e8e" prot="public" virt="non-virtual"><scope>Envelope</scope><name>SetRange</name></member>
      <member refid="class_envelope_1a45f0a9c67e5e9a66acc9debd4bdc6a37" prot="public" virt="non-virtual"><scope>Envelope</scope><name>SetTrackLen</name></member>
      <member refid="class_envelope_1a2646b651b45e74bd9785cb1b966aad08" prot="public" virt="non-virtual"><scope>Envelope</scope><name>SolveIntegralOfInverse</name></member>
      <member refid="class_envelope_1a7c7f0e5152dc8d42ab35357955311fde" prot="public" virt="non-virtual"><scope>Envelope</scope><name>testMe</name></member>
      <member refid="class_envelope_1aaf795e9ab5336eac320b1a55919cf12e" prot="private" virt="non-virtual"><scope>Envelope</scope><name>ValueOfPixel</name></member>
      <member refid="class_envelope_1a893b472ea27b24c980d6e5efcd5c5e55" prot="public" virt="non-virtual"><scope>Envelope</scope><name>WriteXML</name></member>
      <member refid="class_x_m_l_tag_handler_1a41758d92758cdaa7c289a66fc2665b1d" prot="public" virt="non-virtual"><scope>Envelope</scope><name>XMLTagHandler</name></member>
      <member refid="class_envelope_1a0d854766d1fc084d27ddb7b6cf7967af" prot="public" virt="virtual"><scope>Envelope</scope><name>~Envelope</name></member>
      <member refid="class_x_m_l_tag_handler_1a40e32f14dfb9f32faa79ec560803e204" prot="public" virt="virtual"><scope>Envelope</scope><name>~XMLTagHandler</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
