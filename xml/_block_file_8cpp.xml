<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_block_file_8cpp" kind="file" language="C++">
    <compoundname>BlockFile.cpp</compoundname>
    <includes refid="_block_file_8h" local="yes">BlockFile.h</includes>
    <includes refid="float_8h" local="no">float.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">wx/utils.h</includes>
    <includes local="no">wx/filefn.h</includes>
    <includes local="no">wx/ffile.h</includes>
    <includes local="no">wx/log.h</includes>
    <includes local="no">wx/math.h</includes>
    <includes refid="_internat_8h" local="yes">Internat.h</includes>
    <includes refid="_memory_x_8h" local="yes">MemoryX.h</includes>
    <incdepgraph>
      <node id="35253">
        <label>wx/filefn.h</label>
      </node>
      <node id="35237">
        <label>wx/ffile.h</label>
      </node>
      <node id="35234">
        <label>C:/_dev/OpenU/Audacity/audacity/src/BlockFile.cpp</label>
        <link refid="BlockFile.cpp"/>
        <childnode refid="35235" relation="include">
        </childnode>
        <childnode refid="35248" relation="include">
        </childnode>
        <childnode refid="35251" relation="include">
        </childnode>
        <childnode refid="35252" relation="include">
        </childnode>
        <childnode refid="35253" relation="include">
        </childnode>
        <childnode refid="35237" relation="include">
        </childnode>
        <childnode refid="35254" relation="include">
        </childnode>
        <childnode refid="35255" relation="include">
        </childnode>
        <childnode refid="35256" relation="include">
        </childnode>
        <childnode refid="35258" relation="include">
        </childnode>
      </node>
      <node id="35249">
        <label>FLAC/ordinals.h</label>
        <link refid="ordinals_8h"/>
        <childnode refid="35250" relation="include">
        </childnode>
      </node>
      <node id="35256">
        <label>Internat.h</label>
        <link refid="_internat_8h"/>
        <childnode refid="35243" relation="include">
        </childnode>
        <childnode refid="35236" relation="include">
        </childnode>
        <childnode refid="35257" relation="include">
        </childnode>
      </node>
      <node id="35239">
        <label>xml/XMLTagHandler.h</label>
        <link refid="_x_m_l_tag_handler_8h"/>
        <childnode refid="35240" relation="include">
        </childnode>
        <childnode refid="35236" relation="include">
        </childnode>
        <childnode refid="35241" relation="include">
        </childnode>
        <childnode refid="35242" relation="include">
        </childnode>
      </node>
      <node id="35250">
        <label>stdint.h</label>
      </node>
      <node id="35252">
        <label>wx/utils.h</label>
      </node>
      <node id="35246">
        <label>wx/defs.h</label>
      </node>
      <node id="35247">
        <label>audacity/Types.h</label>
        <link refid="include_2audacity_2_types_8h"/>
        <childnode refid="35236" relation="include">
        </childnode>
        <childnode refid="35243" relation="include">
        </childnode>
      </node>
      <node id="35235">
        <label>BlockFile.h</label>
        <link refid="_block_file_8h"/>
        <childnode refid="35236" relation="include">
        </childnode>
        <childnode refid="35237" relation="include">
        </childnode>
        <childnode refid="35238" relation="include">
        </childnode>
        <childnode refid="35239" relation="include">
        </childnode>
        <childnode refid="35242" relation="include">
        </childnode>
        <childnode refid="35245" relation="include">
        </childnode>
      </node>
      <node id="35238">
        <label>wx/filename.h</label>
      </node>
      <node id="35240">
        <label>../Audacity.h</label>
        <link refid="_audacity_8h"/>
      </node>
      <node id="35248">
        <label>float.h</label>
        <link refid="float_8h"/>
        <childnode refid="35249" relation="include">
        </childnode>
      </node>
      <node id="35244">
        <label>wx/dynarray.h</label>
      </node>
      <node id="35236">
        <label>wx/string.h</label>
      </node>
      <node id="35254">
        <label>wx/log.h</label>
      </node>
      <node id="35251">
        <label>math.h</label>
      </node>
      <node id="35243">
        <label>wx/arrstr.h</label>
      </node>
      <node id="35258">
        <label>MemoryX.h</label>
        <link refid="_memory_x_8h"/>
        <childnode refid="35259" relation="include">
        </childnode>
      </node>
      <node id="35257">
        <label>wx/longlong.h</label>
      </node>
      <node id="35241">
        <label>stdio.h</label>
      </node>
      <node id="35245">
        <label>SampleFormat.h</label>
        <link refid="_sample_format_8h"/>
        <childnode refid="35240" relation="include">
        </childnode>
        <childnode refid="35246" relation="include">
        </childnode>
        <childnode refid="35247" relation="include">
        </childnode>
      </node>
      <node id="35259">
        <label>memory</label>
      </node>
      <node id="35255">
        <label>wx/math.h</label>
      </node>
      <node id="35242">
        <label>XMLWriter.h</label>
        <link refid="_x_m_l_writer_8h"/>
        <childnode refid="35243" relation="include">
        </childnode>
        <childnode refid="35244" relation="include">
        </childnode>
        <childnode refid="35237" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="_block_file_8cpp_1aa8d17abc4380658b43eb66e42c20e809" prot="public" static="no">
        <name>BLOCKFILE_DEBUG_OUTPUT</name>
        <param><defname>op</defname></param>
        <param><defname>i</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.cpp" line="67" column="10" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.cpp" bodystart="67" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_block_file_8cpp_1ae0143398bc5ebd373ed7b7bcb395d651" prot="public" static="yes" mutable="no">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>const int headerTagLen</definition>
        <argsstring></argsstring>
        <name>headerTagLen</name>
        <initializer>= 20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.cpp" line="70" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.cpp" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_block_file_8cpp_1acc1687a8c24e0502fbe4a2712d06da6e" prot="public" static="yes" mutable="no">
        <type>char</type>
        <definition>char headerTag[headerTagLen+1]</definition>
        <argsstring>[headerTagLen+1]</argsstring>
        <name>headerTag</name>
        <initializer>= &quot;AudacityBlockFile112&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.cpp" line="71" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.cpp" bodystart="71" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_block_file_8cpp_1ac95921ca0e742e2890479ec809e7162a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void ComputeMinMax256</definition>
        <argsstring>(float *summary256, float *outMin, float *outMax, int *outBads)</argsstring>
        <name>ComputeMinMax256</name>
        <param>
          <type>float *</type>
          <declname>summary256</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>outMin</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>outMax</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>outBads</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.cpp" line="309" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.cpp" bodystart="309" bodyend="336"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>Audacity:<sp/>A<sp/>Digital<sp/>Audio<sp/>Editor</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>BlockFile.cpp</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>Joshua<sp/>Haberman</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/>Dominic<sp/>Mazzoni</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment">*******************************************************************/</highlight><highlight class="comment">/****************************************************************/</highlight><highlight class="comment">/*******************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_block_file_8h" kindref="compound">BlockFile.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="float_8h" kindref="compound">float.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/utils.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/filefn.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/ffile.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/log.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_internat_8h" kindref="compound">Internat.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_memory_x_8h" kindref="compound">MemoryX.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//<sp/>msmeyer:<sp/>Define<sp/>this<sp/>to<sp/>add<sp/>debug<sp/>output<sp/>via<sp/>printf()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>DEBUG_BLOCKFILE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG_BLOCKFILE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BLOCKFILE_DEBUG_OUTPUT(op,<sp/>i)<sp/>\</highlight></codeline>
<codeline lineno="64"><highlight class="preprocessor"><sp/><sp/><sp/>wxPrintf(wxT(&quot;[BlockFile<sp/>%x<sp/>%s]<sp/>%s:<sp/>%i\n&quot;),<sp/>(unsigned)this,<sp/>\</highlight></codeline>
<codeline lineno="65"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mFileName.GetFullName().c_str(),<sp/>wxT(op),<sp/>i);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="_block_file_8cpp_1aa8d17abc4380658b43eb66e42c20e809" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BLOCKFILE_DEBUG_OUTPUT(op,<sp/>i)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>headerTagLen<sp/>=<sp/>20;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>headerTag[headerTagLen<sp/>+<sp/>1]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;AudacityBlockFile112&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="class_summary_info_1a7df4df01af50e1d64556c32db97d0822" refkind="member"><highlight class="normal"><ref refid="class_summary_info_1a7df4df01af50e1d64556c32db97d0822" kindref="member">SummaryInfo::SummaryInfo</ref>(<ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="test__rw__echo_8c_1a39c8d1039645bc924aecc49d76f472a0" kindref="member">samples</ref>)</highlight></codeline>
<codeline lineno="74"><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_summary_info_1afaa245d4d0a8dbc327b10ad71063bd8b" kindref="member">format</ref><sp/>=<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_summary_info_1a542593f4e293ce5ea69da7a0febdcea5" kindref="member">fields</ref><sp/>=<sp/>3;<sp/></highlight><highlight class="comment">/*<sp/>min,<sp/>max,<sp/>rms<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_summary_info_1a874942fe0174f7030bb0ad8361780bfd" kindref="member">bytesPerFrame</ref><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(float)<sp/>*<sp/><ref refid="class_summary_info_1a542593f4e293ce5ea69da7a0febdcea5" kindref="member">fields</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_summary_info_1a20e734e06be335e039aeedc1c2833ece" kindref="member">frames64K</ref><sp/>=<sp/>(samples<sp/>+<sp/>65535)<sp/>/<sp/>65536;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_summary_info_1a00a14b80fc6fd53b1a487d3c330e5ab0" kindref="member">frames256</ref><sp/>=<sp/><ref refid="class_summary_info_1a20e734e06be335e039aeedc1c2833ece" kindref="member">frames64K</ref><sp/>*<sp/>256;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_summary_info_1aca2983511bb953ffa03d1d007fac7ab7" kindref="member">offset64K</ref><sp/>=<sp/>headerTagLen;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_summary_info_1ab41427f2e0bf3978ffec891676cdd794" kindref="member">offset256</ref><sp/>=<sp/><ref refid="class_summary_info_1aca2983511bb953ffa03d1d007fac7ab7" kindref="member">offset64K</ref><sp/>+<sp/>(<ref refid="class_summary_info_1a20e734e06be335e039aeedc1c2833ece" kindref="member">frames64K</ref><sp/>*<sp/><ref refid="class_summary_info_1a874942fe0174f7030bb0ad8361780bfd" kindref="member">bytesPerFrame</ref>);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_summary_info_1a4d7f7e6b04369c78c001cb46390a9d96" kindref="member">totalSummaryBytes</ref><sp/>=<sp/><ref refid="class_summary_info_1ab41427f2e0bf3978ffec891676cdd794" kindref="member">offset256</ref><sp/>+<sp/>(<ref refid="class_summary_info_1a00a14b80fc6fd53b1a487d3c330e5ab0" kindref="member">frames256</ref><sp/>*<sp/><ref refid="class_summary_info_1a874942fe0174f7030bb0ad8361780bfd" kindref="member">bytesPerFrame</ref>);</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*BlockFile::fullSummary<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="class_block_file_1a26e78f672ba0d663668b5aa7e7f7902b" refkind="member"><highlight class="normal"><ref refid="class_block_file_1a26e78f672ba0d663668b5aa7e7f7902b" kindref="member">BlockFile::BlockFile</ref>(wxFileName<sp/>fileName,<sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="test__rw__echo_8c_1a39c8d1039645bc924aecc49d76f472a0" kindref="member">samples</ref>):</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/>mLockCount(0),</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/>mRefCount(1),</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/>mFileName(fileName),</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/>mLen(samples),</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/>mSummaryInfo(samples)</highlight></codeline>
<codeline lineno="107"><highlight class="normal">{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_block_file_1a670ed2ad2e13a94e3fb7c2ae32785811" kindref="member">mSilentLog</ref>=<ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="class_block_file_1ac6dd550c49ac5c86d7e8c13bbedc76e6" refkind="member"><highlight class="normal"><ref refid="class_block_file_1ac6dd550c49ac5c86d7e8c13bbedc76e6" kindref="member">BlockFile::~BlockFile</ref>()</highlight></codeline>
<codeline lineno="112"><highlight class="normal">{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_block_file_1a6f4769dbd80bb4a14e7d28fdad672ded" kindref="member">IsLocked</ref>()<sp/>&amp;&amp;<sp/><ref refid="class_block_file_1ab4d7e450d154ad4ccee1d0f4a26093f0" kindref="member">mFileName</ref>.HasName())</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="filefn_8cpp_1a147f3601590c8c29a97d1101e03b2b90" kindref="member">wxRemoveFile</ref>(<ref refid="class_block_file_1ab4d7e450d154ad4ccee1d0f4a26093f0" kindref="member">mFileName</ref>.GetFullPath());</highlight></codeline>
<codeline lineno="115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="class_block_file_1a07fa90d9e26b0f5c4bc76716aff0fa87" refkind="member"><highlight class="normal">wxFileName<sp/><ref refid="class_block_file_1a07fa90d9e26b0f5c4bc76716aff0fa87" kindref="member">BlockFile::GetFileName</ref>()</highlight></codeline>
<codeline lineno="123"><highlight class="normal">{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_block_file_1ab4d7e450d154ad4ccee1d0f4a26093f0" kindref="member">mFileName</ref>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="class_block_file_1a3d4e44c3aacfcaa78e23c8868e8c3760" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_block_file_1a3d4e44c3aacfcaa78e23c8868e8c3760" kindref="member">BlockFile::SetFileName</ref>(wxFileName<sp/>&amp;<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>)</highlight></codeline>
<codeline lineno="129"><highlight class="normal">{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_block_file_1ab4d7e450d154ad4ccee1d0f4a26093f0" kindref="member">mFileName</ref>=<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="class_block_file_1a5380b2450594af576dfd122cad12be1c" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_block_file_1a5380b2450594af576dfd122cad12be1c" kindref="member">BlockFile::Lock</ref>()</highlight></codeline>
<codeline lineno="144"><highlight class="normal">{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/>mLockCount++;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><ref refid="_block_file_8cpp_1aa8d17abc4380658b43eb66e42c20e809" kindref="member">BLOCKFILE_DEBUG_OUTPUT</ref>(</highlight><highlight class="stringliteral">&quot;Lock&quot;</highlight><highlight class="normal">,<sp/>mLockCount);</highlight></codeline>
<codeline lineno="147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="150" refid="class_block_file_1addbc143efdfd7f74a7c6beed6023745f" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_block_file_1addbc143efdfd7f74a7c6beed6023745f" kindref="member">BlockFile::Unlock</ref>()</highlight></codeline>
<codeline lineno="151"><highlight class="normal">{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/>mLockCount--;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><ref refid="_block_file_8cpp_1aa8d17abc4380658b43eb66e42c20e809" kindref="member">BLOCKFILE_DEBUG_OUTPUT</ref>(</highlight><highlight class="stringliteral">&quot;Unlock&quot;</highlight><highlight class="normal">,<sp/>mLockCount);</highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="class_block_file_1a6f4769dbd80bb4a14e7d28fdad672ded" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_block_file_1a6f4769dbd80bb4a14e7d28fdad672ded" kindref="member">BlockFile::IsLocked</ref>()</highlight></codeline>
<codeline lineno="158"><highlight class="normal">{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mLockCount<sp/>&gt;<sp/>0;</highlight></codeline>
<codeline lineno="160"><highlight class="normal">}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>BlockFile::Ref()</highlight></codeline>
<codeline lineno="165"><highlight class="normal">{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/>mRefCount++;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><ref refid="_block_file_8cpp_1aa8d17abc4380658b43eb66e42c20e809" kindref="member">BLOCKFILE_DEBUG_OUTPUT</ref>(</highlight><highlight class="stringliteral">&quot;Ref&quot;</highlight><highlight class="normal">,<sp/>mRefCount);</highlight></codeline>
<codeline lineno="168"><highlight class="normal">}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>BlockFile::Deref()</highlight></codeline>
<codeline lineno="174"><highlight class="normal">{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/>mRefCount--;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><ref refid="_block_file_8cpp_1aa8d17abc4380658b43eb66e42c20e809" kindref="member">BLOCKFILE_DEBUG_OUTPUT</ref>(</highlight><highlight class="stringliteral">&quot;Deref&quot;</highlight><highlight class="normal">,<sp/>mRefCount);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mRefCount<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184" refid="class_block_file_1a2850975073dae96a78ac8b8e35ac376d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_block_file_1a2850975073dae96a78ac8b8e35ac376d" kindref="member">BlockFile::Deinit</ref>()</highlight></codeline>
<codeline lineno="185"><highlight class="normal">{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fullSummary)</highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>fullSummary;</highlight></codeline>
<codeline lineno="187"><highlight class="normal">}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="203" refid="class_block_file_1a87b1269de50226600c5f52729117be30" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="class_block_file_1a87b1269de50226600c5f52729117be30" kindref="member">BlockFile::CalcSummary</ref>(<ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref><sp/><ref refid="structbuffer" kindref="compound">buffer</ref>,<sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>,</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792" kindref="member">sampleFormat</ref><sp/><ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref>)</highlight></codeline>
<codeline lineno="205"><highlight class="normal">{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fullSummary)</highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>fullSummary;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/>fullSummary<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[<ref refid="class_block_file_1a4c81c30a570684d5287ed58acd3da259" kindref="member">mSummaryInfo</ref>.<ref refid="class_summary_info_1a4d7f7e6b04369c78c001cb46390a9d96" kindref="member">totalSummaryBytes</ref>];</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/>memcpy(fullSummary,<sp/>headerTag,<sp/>headerTagLen);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*summary64K<sp/>=<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*)(fullSummary<sp/>+<sp/><ref refid="class_block_file_1a4c81c30a570684d5287ed58acd3da259" kindref="member">mSummaryInfo</ref>.<ref refid="class_summary_info_1aca2983511bb953ffa03d1d007fac7ab7" kindref="member">offset64K</ref>);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*summary256<sp/>=<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*)(fullSummary<sp/>+<sp/><ref refid="class_block_file_1a4c81c30a570684d5287ed58acd3da259" kindref="member">mSummaryInfo</ref>.<ref refid="class_summary_info_1ab41427f2e0bf3978ffec891676cdd794" kindref="member">offset256</ref>);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*fbuffer<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[<ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>];</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><ref refid="_sample_format_8cpp_1a2819d83a15a7623e52e6562b3329471c" kindref="member">CopySamples</ref>(buffer,<sp/>format,</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref>)fbuffer,<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>,<sp/>len);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>sumLen;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/>j,<sp/>jcount;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>,<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sumsq;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Recalc<sp/>256<sp/>summaries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/>sumLen<sp/>=<sp/>(len<sp/>+<sp/>255)<sp/>/<sp/>256;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>sumLen;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>min<sp/>=<sp/>fbuffer[i<sp/>*<sp/>256];</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>max<sp/>=<sp/>fbuffer[i<sp/>*<sp/>256];</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sumsq<sp/>=<sp/>((float)min)<sp/>*<sp/>((float)min);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>jcount<sp/>=<sp/>256;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>*<sp/>256<sp/>+<sp/>jcount<sp/>&gt;<sp/>len)</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jcount<sp/>=<sp/>len<sp/>-<sp/>i<sp/>*<sp/>256;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>1;<sp/>j<sp/>&lt;<sp/>jcount;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>f1<sp/>=<sp/>fbuffer[i<sp/>*<sp/>256<sp/>+<sp/>j];</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sumsq<sp/>+=<sp/>((float)f1)<sp/>*<sp/>((float)f1);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f1<sp/>&lt;<sp/>min)</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min<sp/>=<sp/>f1;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f1<sp/>&gt;<sp/>max)</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max<sp/>=<sp/>f1;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rms<sp/>=<sp/>(float)sqrt(sumsq<sp/>/<sp/>jcount);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>summary256[i<sp/>*<sp/>3]<sp/>=<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>summary256[i<sp/>*<sp/>3<sp/>+<sp/>1]<sp/>=<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>summary256[i<sp/>*<sp/>3<sp/>+<sp/>2]<sp/>=<sp/>rms;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>sumLen;<sp/>i<sp/>&lt;<sp/><ref refid="class_block_file_1a4c81c30a570684d5287ed58acd3da259" kindref="member">mSummaryInfo</ref>.<ref refid="class_summary_info_1a00a14b80fc6fd53b1a487d3c330e5ab0" kindref="member">frames256</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>filling<sp/>in<sp/>the<sp/>remaining<sp/>bits<sp/>with<sp/>non-harming/contributing<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>summary256[i<sp/>*<sp/>3]<sp/>=<sp/>FLT_MAX;<sp/><sp/></highlight><highlight class="comment">//<sp/>min</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>summary256[i<sp/>*<sp/>3<sp/>+<sp/>1]<sp/>=<sp/>-FLT_MAX;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>max</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>summary256[i<sp/>*<sp/>3<sp/>+<sp/>2]<sp/>=<sp/>0.0f;<sp/></highlight><highlight class="comment">//<sp/>rms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Recalc<sp/>64K<sp/>summaries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/>sumLen<sp/>=<sp/>(len<sp/>+<sp/>65535)<sp/>/<sp/>65536;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>sumLen;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>min<sp/>=<sp/>summary256[3<sp/>*<sp/>i<sp/>*<sp/>256];</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>max<sp/>=<sp/>summary256[3<sp/>*<sp/>i<sp/>*<sp/>256<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sumsq<sp/>=<sp/>(float)summary256[3<sp/>*<sp/>i<sp/>*<sp/>256<sp/>+<sp/>2];</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sumsq<sp/>*=<sp/>sumsq;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>1;<sp/>j<sp/>&lt;<sp/>256;<sp/>j++)<sp/>{<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>can<sp/>overflow<sp/>the<sp/>useful<sp/>summary256<sp/>values<sp/>here,<sp/>but<sp/>have<sp/>put<sp/>non-harmful<sp/>values<sp/>in<sp/>them</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(summary256[3<sp/>*<sp/>(i<sp/>*<sp/>256<sp/>+<sp/>j)]<sp/>&lt;<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>)</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min<sp/>=<sp/>summary256[3<sp/>*<sp/>(i<sp/>*<sp/>256<sp/>+<sp/>j)];</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(summary256[3<sp/>*<sp/>(i<sp/>*<sp/>256<sp/>+<sp/>j)<sp/>+<sp/>1]<sp/>&gt;<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>)</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max<sp/>=<sp/>summary256[3<sp/>*<sp/>(i<sp/>*<sp/>256<sp/>+<sp/>j)<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1fixpy2_1a721a8f58a4734bba827b4f6d985f98ff" kindref="member">r1</ref><sp/>=<sp/>summary256[3<sp/>*<sp/>(i<sp/>*<sp/>256<sp/>+<sp/>j)<sp/>+<sp/>2];</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sumsq<sp/>+=<sp/>r1*<ref refid="namespacewaflib_1_1fixpy2_1a721a8f58a4734bba827b4f6d985f98ff" kindref="member">r1</ref>;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rms<sp/>=<sp/>(float)sqrt(sumsq<sp/>/<sp/>256);<sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>&apos;256&apos;<sp/>is<sp/>not<sp/>quite<sp/>right<sp/>at<sp/>the<sp/>edges<sp/>as<sp/>not<sp/>all<sp/>summary256<sp/>entries<sp/>will<sp/>be<sp/>filled<sp/>with<sp/>useful<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>summary64K[i<sp/>*<sp/>3]<sp/>=<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>summary64K[i<sp/>*<sp/>3<sp/>+<sp/>1]<sp/>=<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>summary64K[i<sp/>*<sp/>3<sp/>+<sp/>2]<sp/>=<sp/>rms;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>sumLen;<sp/>i<sp/>&lt;<sp/><ref refid="class_block_file_1a4c81c30a570684d5287ed58acd3da259" kindref="member">mSummaryInfo</ref>.<ref refid="class_summary_info_1a20e734e06be335e039aeedc1c2833ece" kindref="member">frames64K</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>summary64K[i<sp/>*<sp/>3]<sp/>=<sp/>0.0f;<sp/><sp/></highlight><highlight class="comment">//<sp/>probably<sp/>should<sp/>be<sp/>FLT_MAX,<sp/>need<sp/>a<sp/>test<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>summary64K[i<sp/>*<sp/>3<sp/>+<sp/>1]<sp/>=<sp/>0.0f;<sp/></highlight><highlight class="comment">//<sp/>probably<sp/>should<sp/>be<sp/>-FLT_MAX,<sp/>need<sp/>a<sp/>test<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>summary64K[i<sp/>*<sp/>3<sp/>+<sp/>2]<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Recalc<sp/>block-level<sp/>summary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/>min<sp/>=<sp/>summary64K[0];</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/>max<sp/>=<sp/>summary64K[1];</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/>sumsq<sp/>=<sp/>(float)summary64K[2];</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/>sumsq<sp/>*=<sp/>sumsq;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>sumLen;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(summary64K[3*i]<sp/>&lt;<sp/>min)</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min<sp/>=<sp/>summary64K[3*<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(summary64K[3*i+1]<sp/>&gt;<sp/>max)</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max<sp/>=<sp/>summary64K[3*i+1];</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1fixpy2_1a721a8f58a4734bba827b4f6d985f98ff" kindref="member">r1</ref><sp/>=<sp/>(float)summary64K[3*i+2];</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sumsq<sp/>+=<sp/>(r1*<ref refid="namespacewaflib_1_1fixpy2_1a721a8f58a4734bba827b4f6d985f98ff" kindref="member">r1</ref>);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_block_file_1a733757c3a2c9d2e51beab8acbc86f913" kindref="member">mMin</ref><sp/>=<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_block_file_1abda14ef73ea31a585b26e289a99ac356" kindref="member">mMax</ref><sp/>=<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_block_file_1a9b863f624b2d76a5ec29390cebed698f" kindref="member">mRMS</ref><sp/>=<sp/>sqrt(sumsq<sp/>/<sp/>sumLen);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>fbuffer;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fullSummary;</highlight></codeline>
<codeline lineno="307"><highlight class="normal">}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ComputeMinMax256(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*summary256,</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*outMin,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*outMax,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*outBads)</highlight></codeline>
<codeline lineno="311"><highlight class="normal">{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>,<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="charmaps_8h_1afe308d4985b5e0160df686b81d58a0c1" kindref="member">bad</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/>min<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/>max<sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;<sp/>i&lt;256;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(summary256[3*i]<sp/>&lt;<sp/>min)</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min<sp/>=<sp/>summary256[3*<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(summary256[3*i]<sp/>&gt;=<sp/>min))</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bad++;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(summary256[3*i+1]<sp/>&gt;<sp/>max)</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max<sp/>=<sp/>summary256[3*i+1];</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(summary256[3*i+1]<sp/>&lt;=<sp/>max))</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bad++;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wxIsNaN(summary256[3*i+2]))</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bad++;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(summary256[3*i+2]<sp/>&lt;<sp/>-1<sp/>||<sp/>summary256[3*i+2]<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bad++;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/>*outMin<sp/>=<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/>*outMax<sp/>=<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/>*outBads<sp/>=<sp/><ref refid="charmaps_8h_1afe308d4985b5e0160df686b81d58a0c1" kindref="member">bad</ref>;</highlight></codeline>
<codeline lineno="336"><highlight class="normal">}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="340" refid="class_block_file_1abb3580667f6451b2ab0d4cc1a45f7a7a" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_block_file_1abb3580667f6451b2ab0d4cc1a45f7a7a" kindref="member">BlockFile::FixSummary</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>)</highlight></codeline>
<codeline lineno="341"><highlight class="normal">{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_block_file_1a4c81c30a570684d5287ed58acd3da259" kindref="member">mSummaryInfo</ref>.<ref refid="class_summary_info_1afaa245d4d0a8dbc327b10ad71063bd8b" kindref="member">format</ref><sp/>!=<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref><sp/>||</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_block_file_1a4c81c30a570684d5287ed58acd3da259" kindref="member">mSummaryInfo</ref>.<ref refid="class_summary_info_1a542593f4e293ce5ea69da7a0febdcea5" kindref="member">fields</ref><sp/>!=<sp/>3)</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*summary64K<sp/>=<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*)((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)data<sp/>+<sp/><ref refid="class_block_file_1a4c81c30a570684d5287ed58acd3da259" kindref="member">mSummaryInfo</ref>.<ref refid="class_summary_info_1aca2983511bb953ffa03d1d007fac7ab7" kindref="member">offset64K</ref>);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*summary256<sp/>=<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*)((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)data<sp/>+<sp/><ref refid="class_block_file_1a4c81c30a570684d5287ed58acd3da259" kindref="member">mSummaryInfo</ref>.<ref refid="class_summary_info_1ab41427f2e0bf3978ffec891676cdd794" kindref="member">offset256</ref>);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>,<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="charmaps_8h_1afe308d4985b5e0160df686b81d58a0c1" kindref="member">bad</ref>;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/>ComputeMinMax256(summary256,<sp/>&amp;min,<sp/>&amp;max,<sp/>&amp;bad);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(min<sp/>!=<sp/>summary64K[0]<sp/>||<sp/>max<sp/>!=<sp/>summary64K[1]<sp/>||<sp/>bad<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*)data;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref><sp/>=<sp/><ref refid="class_block_file_1a4c81c30a570684d5287ed58acd3da259" kindref="member">mSummaryInfo</ref>.<ref refid="class_summary_info_1a4d7f7e6b04369c78c001cb46390a9d96" kindref="member">totalSummaryBytes</ref><sp/>/<sp/>4;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;<sp/>i&lt;<ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[i]<sp/>=<sp/>wxUINT32_SWAP_ALWAYS(buffer[i]);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ComputeMinMax256(summary256,<sp/>&amp;min,<sp/>&amp;max,<sp/>&amp;bad);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(min<sp/>==<sp/>summary64K[0]<sp/>&amp;&amp;<sp/>max<sp/>==<sp/>summary64K[1]<sp/>&amp;&amp;<sp/>bad<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>byte-swapping<sp/>worked!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Hmmm,<sp/>no<sp/>better,<sp/>we<sp/>should<sp/>swap<sp/>back</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;<sp/>i&lt;<ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[i]<sp/>=<sp/>wxUINT32_SWAP_ALWAYS(buffer[i]);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="373"><highlight class="normal">}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="386" refid="class_block_file_1ab69b57d79727454d7cea8d1f204791ba" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_block_file_1ab69b57d79727454d7cea8d1f204791ba" kindref="member">BlockFile::GetMinMax</ref>(<ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>,<sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>,</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*outMin,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*outMax,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*outRMS)</highlight></codeline>
<codeline lineno="388"><highlight class="normal">{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>actually<sp/>use<sp/>summaries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_sample_buffer" kindref="compound">SampleBuffer</ref><sp/>blockData(len,<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/>this-&gt;<ref refid="class_block_file_1ad1355b9c8421a6f1a6b6d8cf3d3f073e" kindref="member">ReadData</ref>(blockData.<ref refid="class_sample_buffer_1a67109e75aa852d6196692e683d248dcd" kindref="member">ptr</ref>(),<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>,<sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>,<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref><sp/>=<sp/>FLT_MAX;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref><sp/>=<sp/>-FLT_MAX;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sumsq<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++<sp/>)</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sample<sp/>=<sp/>((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*)blockData.<ref refid="class_sample_buffer_1a67109e75aa852d6196692e683d248dcd" kindref="member">ptr</ref>())[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>sample<sp/>&gt;<sp/>max<sp/>)</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max<sp/>=<sp/>sample;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>sample<sp/>&lt;<sp/>min<sp/>)</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min<sp/>=<sp/>sample;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sumsq<sp/>+=<sp/>(sample*sample);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/>*outMin<sp/>=<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/>*outMax<sp/>=<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/>*outRMS<sp/>=<sp/>sqrt(sumsq/len);</highlight></codeline>
<codeline lineno="411"><highlight class="normal">}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="423" refid="class_block_file_1abae40b15d56cb0757abfd57ff036634a" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_block_file_1ab69b57d79727454d7cea8d1f204791ba" kindref="member">BlockFile::GetMinMax</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*outMin,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*outMax,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*outRMS)</highlight></codeline>
<codeline lineno="424"><highlight class="normal">{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/>*outMin<sp/>=<sp/><ref refid="class_block_file_1a733757c3a2c9d2e51beab8acbc86f913" kindref="member">mMin</ref>;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/>*outMax<sp/>=<sp/><ref refid="class_block_file_1abda14ef73ea31a585b26e289a99ac356" kindref="member">mMax</ref>;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/>*outRMS<sp/>=<sp/><ref refid="class_block_file_1a9b863f624b2d76a5ec29390cebed698f" kindref="member">mRMS</ref>;</highlight></codeline>
<codeline lineno="428"><highlight class="normal">}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="439" refid="class_block_file_1a3f7acc98f1761d78cccbd031314a33ea" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_block_file_1a3f7acc98f1761d78cccbd031314a33ea" kindref="member">BlockFile::Read256</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref>,</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>,<sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>)</highlight></codeline>
<codeline lineno="441"><highlight class="normal">{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/>wxASSERT(start<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="namespacewaflib_1_1_tools_1_1waf__unit__test_1ad245dac5d636a5c5f49cb0e232d332f4" kindref="member">summary</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[<ref refid="class_block_file_1a4c81c30a570684d5287ed58acd3da259" kindref="member">mSummaryInfo</ref>.<ref refid="class_summary_info_1a4d7f7e6b04369c78c001cb46390a9d96" kindref="member">totalSummaryBytes</ref>];</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/>this-&gt;<ref refid="class_block_file_1ab9edd6f8cd08f7075b5c878c9a4ea121" kindref="member">ReadSummary</ref>(summary);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(start+len<sp/>&gt;<sp/><ref refid="class_block_file_1a4c81c30a570684d5287ed58acd3da259" kindref="member">mSummaryInfo</ref>.<ref refid="class_summary_info_1a00a14b80fc6fd53b1a487d3c330e5ab0" kindref="member">frames256</ref>)</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/><ref refid="class_block_file_1a4c81c30a570684d5287ed58acd3da259" kindref="member">mSummaryInfo</ref>.<ref refid="class_summary_info_1a00a14b80fc6fd53b1a487d3c330e5ab0" kindref="member">frames256</ref><sp/>-<sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><ref refid="_sample_format_8cpp_1a2819d83a15a7623e52e6562b3329471c" kindref="member">CopySamples</ref>(summary<sp/>+<sp/><ref refid="class_block_file_1a4c81c30a570684d5287ed58acd3da259" kindref="member">mSummaryInfo</ref>.<ref refid="class_summary_info_1ab41427f2e0bf3978ffec891676cdd794" kindref="member">offset256</ref><sp/>+<sp/>(start<sp/>*<sp/><ref refid="class_block_file_1a4c81c30a570684d5287ed58acd3da259" kindref="member">mSummaryInfo</ref>.<ref refid="class_summary_info_1a874942fe0174f7030bb0ad8361780bfd" kindref="member">bytesPerFrame</ref>),</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_block_file_1a4c81c30a570684d5287ed58acd3da259" kindref="member">mSummaryInfo</ref>.<ref refid="class_summary_info_1afaa245d4d0a8dbc327b10ad71063bd8b" kindref="member">format</ref>,</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref>)buffer,<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>,<sp/>len<sp/>*<sp/><ref refid="class_block_file_1a4c81c30a570684d5287ed58acd3da259" kindref="member">mSummaryInfo</ref>.<ref refid="class_summary_info_1a542593f4e293ce5ea69da7a0febdcea5" kindref="member">fields</ref>);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_block_file_1a4c81c30a570684d5287ed58acd3da259" kindref="member">mSummaryInfo</ref>.<ref refid="class_summary_info_1a542593f4e293ce5ea69da7a0febdcea5" kindref="member">fields</ref><sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>RMS<sp/>info</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=len-1;<sp/>i&gt;=0;<sp/>i--)<sp/>{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[3*i+2]<sp/>=<sp/>(fabs(buffer[2*i])<sp/>+<sp/>fabs(buffer[2*i+1]))/4.0;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[3*i+1]<sp/>=<sp/>buffer[2*i+1];</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[3*<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>buffer[2*<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/><ref refid="namespacewaflib_1_1_tools_1_1waf__unit__test_1ad245dac5d636a5c5f49cb0e232d332f4" kindref="member">summary</ref>;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="467"><highlight class="normal">}</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="478" refid="class_block_file_1acf929dfa98eab1cbd93b7d79394bc141" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_block_file_1acf929dfa98eab1cbd93b7d79394bc141" kindref="member">BlockFile::Read64K</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref>,</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>,<sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>)</highlight></codeline>
<codeline lineno="480"><highlight class="normal">{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/>wxASSERT(start<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="namespacewaflib_1_1_tools_1_1waf__unit__test_1ad245dac5d636a5c5f49cb0e232d332f4" kindref="member">summary</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[<ref refid="class_block_file_1a4c81c30a570684d5287ed58acd3da259" kindref="member">mSummaryInfo</ref>.<ref refid="class_summary_info_1a4d7f7e6b04369c78c001cb46390a9d96" kindref="member">totalSummaryBytes</ref>];</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/>this-&gt;<ref refid="class_block_file_1ab9edd6f8cd08f7075b5c878c9a4ea121" kindref="member">ReadSummary</ref>(summary);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(start+len<sp/>&gt;<sp/><ref refid="class_block_file_1a4c81c30a570684d5287ed58acd3da259" kindref="member">mSummaryInfo</ref>.<ref refid="class_summary_info_1a20e734e06be335e039aeedc1c2833ece" kindref="member">frames64K</ref>)</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/><ref refid="class_block_file_1a4c81c30a570684d5287ed58acd3da259" kindref="member">mSummaryInfo</ref>.<ref refid="class_summary_info_1a20e734e06be335e039aeedc1c2833ece" kindref="member">frames64K</ref><sp/>-<sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><ref refid="_sample_format_8cpp_1a2819d83a15a7623e52e6562b3329471c" kindref="member">CopySamples</ref>(summary<sp/>+<sp/><ref refid="class_block_file_1a4c81c30a570684d5287ed58acd3da259" kindref="member">mSummaryInfo</ref>.<ref refid="class_summary_info_1aca2983511bb953ffa03d1d007fac7ab7" kindref="member">offset64K</ref><sp/>+</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(start<sp/>*<sp/><ref refid="class_block_file_1a4c81c30a570684d5287ed58acd3da259" kindref="member">mSummaryInfo</ref>.<ref refid="class_summary_info_1a874942fe0174f7030bb0ad8361780bfd" kindref="member">bytesPerFrame</ref>),</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_block_file_1a4c81c30a570684d5287ed58acd3da259" kindref="member">mSummaryInfo</ref>.<ref refid="class_summary_info_1afaa245d4d0a8dbc327b10ad71063bd8b" kindref="member">format</ref>,</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref>)buffer,<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>,<sp/>len*<ref refid="class_block_file_1a4c81c30a570684d5287ed58acd3da259" kindref="member">mSummaryInfo</ref>.<ref refid="class_summary_info_1a542593f4e293ce5ea69da7a0febdcea5" kindref="member">fields</ref>);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_block_file_1a4c81c30a570684d5287ed58acd3da259" kindref="member">mSummaryInfo</ref>.<ref refid="class_summary_info_1a542593f4e293ce5ea69da7a0febdcea5" kindref="member">fields</ref><sp/>==<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>RMS<sp/>info;<sp/>make<sp/>guess</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=len-1;<sp/>i&gt;=0;<sp/>i--)<sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[3*i+2]<sp/>=<sp/>(fabs(buffer[2*i])<sp/>+<sp/>fabs(buffer[2*i+1]))/4.0;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[3*i+1]<sp/>=<sp/>buffer[2*i+1];</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[3*<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>buffer[2*<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/><ref refid="namespacewaflib_1_1_tools_1_1waf__unit__test_1ad245dac5d636a5c5f49cb0e232d332f4" kindref="member">summary</ref>;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="507"><highlight class="normal">}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="528" refid="class_alias_block_file_1a6cebfd8ef018be265051795e73d871bd" refkind="member"><highlight class="normal"><ref refid="class_alias_block_file_1a6cebfd8ef018be265051795e73d871bd" kindref="member">AliasBlockFile::AliasBlockFile</ref>(wxFileName<sp/>baseFileName,</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxFileName<sp/>aliasedFileName,</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>aliasStart,</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>aliasLen,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>aliasChannel):</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_block_file" kindref="compound">BlockFile</ref>(wxFileName(baseFileName.<ref refid="_mac_file_utils_8c_1a76460f65bf10fe2762d895528387fd78" kindref="member">GetFullPath</ref>()<sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;.auf&quot;</highlight><highlight class="normal">)),<sp/>aliasLen),</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/>mAliasedFileName(aliasedFileName),</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/>mAliasStart(aliasStart),</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/>mAliasChannel(aliasChannel)</highlight></codeline>
<codeline lineno="536"><highlight class="normal">{</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_alias_block_file_1a5c0cb39191f74e9941bd614fbd5d9a35" kindref="member">mSilentAliasLog</ref>=<ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="538"><highlight class="normal">}</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540" refid="class_alias_block_file_1a1951a2471e5e73492e9cbbf12a97b13d" refkind="member"><highlight class="normal"><ref refid="class_alias_block_file_1a6cebfd8ef018be265051795e73d871bd" kindref="member">AliasBlockFile::AliasBlockFile</ref>(wxFileName<sp/>existingSummaryFileName,</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxFileName<sp/>aliasedFileName,</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>aliasStart,</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>aliasLen,</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>aliasChannel,</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rms):</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_block_file" kindref="compound">BlockFile</ref>(existingSummaryFileName,<sp/>aliasLen),</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_alias_block_file_1a8c098b2f0b168462fcaa45a6dad4682c" kindref="member">mAliasedFileName</ref>(aliasedFileName),</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_alias_block_file_1a25ce7e8f04c9bc5300395c4eb4ebd5f4" kindref="member">mAliasStart</ref>(aliasStart),</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_alias_block_file_1afe28fdf0e410949f7957c8bab52358df" kindref="member">mAliasChannel</ref>(aliasChannel)</highlight></codeline>
<codeline lineno="550"><highlight class="normal">{</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_block_file_1a733757c3a2c9d2e51beab8acbc86f913" kindref="member">mMin</ref><sp/>=<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_block_file_1abda14ef73ea31a585b26e289a99ac356" kindref="member">mMax</ref><sp/>=<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_block_file_1a9b863f624b2d76a5ec29390cebed698f" kindref="member">mRMS</ref><sp/>=<sp/>rms;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_alias_block_file_1a5c0cb39191f74e9941bd614fbd5d9a35" kindref="member">mSilentAliasLog</ref>=<ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="555"><highlight class="normal">}</highlight></codeline>
<codeline lineno="560" refid="class_alias_block_file_1a0ffabad5ed7a43d188d56db822a9421a" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_alias_block_file_1a0ffabad5ed7a43d188d56db822a9421a" kindref="member">AliasBlockFile::WriteSummary</ref>()</highlight></codeline>
<codeline lineno="561"><highlight class="normal">{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>checked<sp/>carefully<sp/>in<sp/>the<sp/>DirManager</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//wxASSERT(<sp/>!wxFileExists(FILENAME(mFileName.GetFullPath())));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>I<sp/>would<sp/>much<sp/>rather<sp/>have<sp/>this<sp/>code<sp/>as<sp/>part<sp/>of<sp/>the<sp/>constructor,<sp/>but</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>I<sp/>can&apos;t<sp/>call<sp/>virtual<sp/>functions<sp/>from<sp/>the<sp/>constructor.<sp/><sp/>So<sp/>we<sp/>just</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>need<sp/>to<sp/>ensure<sp/>that<sp/>every<sp/>derived<sp/>class<sp/>calls<sp/>this<sp/>in<sp/>*its*<sp/>constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/>wxFFile<sp/>summaryFile(<ref refid="class_block_file_1ab4d7e450d154ad4ccee1d0f4a26093f0" kindref="member">mFileName</ref>.GetFullPath(),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;wb&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!summaryFile.IsOpened()<sp/>){</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Never<sp/>silence<sp/>the<sp/>Log<sp/>w.r.t<sp/>write<sp/>errors;<sp/>they<sp/>always<sp/>count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>as<sp/>NEW<sp/>errors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxLogError(wxT(</highlight><highlight class="stringliteral">&quot;Unable<sp/>to<sp/>write<sp/>summary<sp/>data<sp/>to<sp/>file<sp/>%s&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_block_file_1ab4d7e450d154ad4ccee1d0f4a26093f0" kindref="member">mFileName</ref>.GetFullPath().c_str());</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>can&apos;t<sp/>write,<sp/>there&apos;s<sp/>nothing<sp/>to<sp/>do.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>To<sp/>build<sp/>the<sp/>summary<sp/>data,<sp/>call<sp/>ReadData<sp/>(implemented<sp/>by<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>derived<sp/>classes)<sp/>to<sp/>get<sp/>the<sp/>sample<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_sample_buffer" kindref="compound">SampleBuffer</ref><sp/>sampleData(<ref refid="class_block_file_1a732a85cd5906a03310bd23fc91b83d40" kindref="member">mLen</ref>,<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/>this-&gt;<ref refid="class_block_file_1ad1355b9c8421a6f1a6b6d8cf3d3f073e" kindref="member">ReadData</ref>(sampleData.<ref refid="class_sample_buffer_1a67109e75aa852d6196692e683d248dcd" kindref="member">ptr</ref>(),<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>,<sp/>0,<sp/><ref refid="class_block_file_1a732a85cd5906a03310bd23fc91b83d40" kindref="member">mLen</ref>);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*summaryData<sp/>=<sp/><ref refid="class_block_file_1a87b1269de50226600c5f52729117be30" kindref="member">BlockFile::CalcSummary</ref>(sampleData.<ref refid="class_sample_buffer_1a67109e75aa852d6196692e683d248dcd" kindref="member">ptr</ref>(),<sp/><ref refid="class_block_file_1a732a85cd5906a03310bd23fc91b83d40" kindref="member">mLen</ref>,</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/>summaryFile.Write(summaryData,<sp/><ref refid="class_block_file_1a4c81c30a570684d5287ed58acd3da259" kindref="member">mSummaryInfo</ref>.<ref refid="class_summary_info_1a4d7f7e6b04369c78c001cb46390a9d96" kindref="member">totalSummaryBytes</ref>);</highlight></codeline>
<codeline lineno="587"><highlight class="normal">}</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589" refid="class_alias_block_file_1a1859a5a0ff7873450ecd770e1703cdbf" refkind="member"><highlight class="normal"><ref refid="class_alias_block_file_1a1859a5a0ff7873450ecd770e1703cdbf" kindref="member">AliasBlockFile::~AliasBlockFile</ref>()</highlight></codeline>
<codeline lineno="590"><highlight class="normal">{</highlight></codeline>
<codeline lineno="591"><highlight class="normal">}</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="598" refid="class_alias_block_file_1a7f30a5da5964e3dfbd35657f3bacbf9b" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_alias_block_file_1a7f30a5da5964e3dfbd35657f3bacbf9b" kindref="member">AliasBlockFile::ReadSummary</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>)</highlight></codeline>
<codeline lineno="599"><highlight class="normal">{</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/>wxFFile<sp/>summaryFile(<ref refid="class_block_file_1ab4d7e450d154ad4ccee1d0f4a26093f0" kindref="member">mFileName</ref>.GetFullPath(),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_maybe" kindref="compound">Maybe&lt;wxLogNull&gt;</ref><sp/>silence{};</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_block_file_1a670ed2ad2e13a94e3fb7c2ae32785811" kindref="member">mSilentLog</ref>)</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>silence.<ref refid="class_maybe_1ad1a6ede9fc786af6ce70547692489bac" kindref="member">create</ref>();</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!summaryFile.IsOpened()){</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NEW<sp/>model;<sp/>we<sp/>need<sp/>to<sp/>return<sp/>valid<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(data,<sp/>0,<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<ref refid="class_block_file_1a4c81c30a570684d5287ed58acd3da259" kindref="member">mSummaryInfo</ref>.<ref refid="class_summary_info_1a4d7f7e6b04369c78c001cb46390a9d96" kindref="member">totalSummaryBytes</ref>);</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>silence<sp/>the<sp/>logging<sp/>for<sp/>this<sp/>operation<sp/>in<sp/>this<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>after<sp/>first<sp/>occurrence<sp/>of<sp/>error;<sp/>it&apos;s<sp/>already<sp/>reported<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>spewing<sp/>at<sp/>the<sp/>user<sp/>will<sp/>complicate<sp/>the<sp/>user&apos;s<sp/>ability<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>deal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_block_file_1a670ed2ad2e13a94e3fb7c2ae32785811" kindref="member">mSilentLog</ref><sp/>=<sp/><ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><ref refid="class_block_file_1a670ed2ad2e13a94e3fb7c2ae32785811" kindref="member">mSilentLog</ref><sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;<sp/></highlight><highlight class="comment">//<sp/>worked<sp/>properly,<sp/>any<sp/>future<sp/>error<sp/>is<sp/>NEW</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>read<sp/>=<sp/>summaryFile.Read(data,<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<ref refid="class_block_file_1a4c81c30a570684d5287ed58acd3da259" kindref="member">mSummaryInfo</ref>.<ref refid="class_summary_info_1a4d7f7e6b04369c78c001cb46390a9d96" kindref="member">totalSummaryBytes</ref>);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_block_file_1abb3580667f6451b2ab0d4cc1a45f7a7a" kindref="member">FixSummary</ref>(data);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(read<sp/>==<sp/><ref refid="class_block_file_1a4c81c30a570684d5287ed58acd3da259" kindref="member">mSummaryInfo</ref>.<ref refid="class_summary_info_1a4d7f7e6b04369c78c001cb46390a9d96" kindref="member">totalSummaryBytes</ref>);</highlight></codeline>
<codeline lineno="628"><highlight class="normal">}</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="633" refid="class_alias_block_file_1a31bb494e5380ccbcb21fb32b55d81370" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_alias_block_file_1a31bb494e5380ccbcb21fb32b55d81370" kindref="member">AliasBlockFile::ChangeAliasedFileName</ref>(wxFileName<sp/>newAliasedFile)</highlight></codeline>
<codeline lineno="634"><highlight class="normal">{</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_alias_block_file_1a8c098b2f0b168462fcaa45a6dad4682c" kindref="member">mAliasedFileName</ref><sp/>=<sp/>newAliasedFile;</highlight></codeline>
<codeline lineno="636"><highlight class="normal">}</highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight></codeline>
<codeline lineno="638" refid="class_alias_block_file_1afca79ab159bebe787ecbf025fe645249" refkind="member"><highlight class="normal">wxLongLong<sp/><ref refid="class_alias_block_file_1afca79ab159bebe787ecbf025fe645249" kindref="member">AliasBlockFile::GetSpaceUsage</ref>()</highlight></codeline>
<codeline lineno="639"><highlight class="normal">{</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/>wxFFile<sp/>summaryFile(<ref refid="class_block_file_1ab4d7e450d154ad4ccee1d0f4a26093f0" kindref="member">mFileName</ref>.GetFullPath());</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>summaryFile.Length();</highlight></codeline>
<codeline lineno="642"><highlight class="normal">}</highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.cpp"/>
  </compounddef>
</doxygen>
