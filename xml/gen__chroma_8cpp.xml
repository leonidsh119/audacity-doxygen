<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="gen__chroma_8cpp" kind="file" language="C++">
    <compoundname>gen_chroma.cpp</compoundname>
    <includes local="yes">stdlib.h</includes>
    <includes local="yes">stdio.h</includes>
    <includes refid="assert_8h" local="yes">assert.h</includes>
    <includes local="yes">string.h</includes>
    <includes local="yes">math.h</includes>
    <includes local="no">fstream</includes>
    <includes refid="allegro_8h" local="yes">allegro.h</includes>
    <includes refid="_f_f_t3_8h" local="yes">fft3/FFT3.h</includes>
    <includes refid="audioreader_8h" local="yes">audioreader.h</includes>
    <includes refid="scorealign_8h" local="yes">scorealign.h</includes>
    <includes refid="gen__chroma_8h" local="yes">gen_chroma.h</includes>
    <includes refid="comp__chroma_8h" local="yes">comp_chroma.h</includes>
    <includes local="yes">mfmidi.h</includes>
    <includes refid="sautils_8h" local="yes">sautils.h</includes>
    <incdepgraph>
      <node id="19132">
        <label>allegro.h</label>
        <link refid="allegro_8h"/>
        <childnode refid="19128" relation="include">
        </childnode>
        <childnode refid="19133" relation="include">
        </childnode>
        <childnode refid="19134" relation="include">
        </childnode>
      </node>
      <node id="19138">
        <label>gen_chroma.h</label>
        <link refid="gen__chroma_8h"/>
      </node>
      <node id="19126">
        <label>stdlib.h</label>
      </node>
      <node id="19137">
        <label>scorealign.h</label>
        <link refid="scorealign_8h"/>
      </node>
      <node id="19125">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/gen_chroma.cpp</label>
        <link refid="gen_chroma.cpp"/>
        <childnode refid="19126" relation="include">
        </childnode>
        <childnode refid="19127" relation="include">
        </childnode>
        <childnode refid="19128" relation="include">
        </childnode>
        <childnode refid="19129" relation="include">
        </childnode>
        <childnode refid="19130" relation="include">
        </childnode>
        <childnode refid="19131" relation="include">
        </childnode>
        <childnode refid="19132" relation="include">
        </childnode>
        <childnode refid="19135" relation="include">
        </childnode>
        <childnode refid="19136" relation="include">
        </childnode>
        <childnode refid="19137" relation="include">
        </childnode>
        <childnode refid="19138" relation="include">
        </childnode>
        <childnode refid="19139" relation="include">
        </childnode>
        <childnode refid="19140" relation="include">
        </childnode>
        <childnode refid="19141" relation="include">
        </childnode>
      </node>
      <node id="19136">
        <label>audioreader.h</label>
        <link refid="audioreader_8h"/>
      </node>
      <node id="19140">
        <label>mfmidi.h</label>
      </node>
      <node id="19128">
        <label>assert.h</label>
        <link refid="assert_8h"/>
      </node>
      <node id="19131">
        <label>fstream</label>
      </node>
      <node id="19134">
        <label>ostream</label>
      </node>
      <node id="19135">
        <label>fft3/FFT3.h</label>
        <link refid="_f_f_t3_8h"/>
      </node>
      <node id="19129">
        <label>string.h</label>
      </node>
      <node id="19130">
        <label>math.h</label>
      </node>
      <node id="19141">
        <label>sautils.h</label>
        <link refid="sautils_8h"/>
      </node>
      <node id="19139">
        <label>comp_chroma.h</label>
        <link refid="comp__chroma_8h"/>
      </node>
      <node id="19127">
        <label>stdio.h</label>
      </node>
      <node id="19133">
        <label>istream</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_event__list" prot="public">Event_list</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="gen__chroma_8cpp_1abb702d8b501669a23aa0ab3b281b9384" prot="public" static="no">
        <name>min</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>((x)&lt;(y)?(x):(y))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/gen_chroma.cpp" line="27" column="10" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/gen_chroma.cpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gen__chroma_8cpp_1ac39d9cef6a5e030ba8d9e11121054268" prot="public" static="no">
        <name>max</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>((x)&gt;(y)?(x):(y))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/gen_chroma.cpp" line="32" column="10" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/gen_chroma.cpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gen__chroma_8cpp_1a850b3bf1e09af2a0e4660c9565efb957" prot="public" static="no">
        <name>PRINT_BIN_ENERGY</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/gen_chroma.cpp" line="35" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/gen_chroma.cpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gen__chroma_8cpp_1ad86bc04f7f667b1bdced8a0f06d96861" prot="public" static="no">
        <name>p1</name>
        <initializer>0.0577622650466621</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/gen_chroma.cpp" line="37" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/gen_chroma.cpp" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="gen__chroma_8cpp_1a938e6a2861f684cc1f7e2de661446e35" prot="public" static="no">
        <name>p2</name>
        <initializer>2.1011784386926213</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/gen_chroma.cpp" line="38" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/gen_chroma.cpp" bodystart="38" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="gen__chroma_8cpp_1a29b3d9ab4f3c32614a52be7e1a6c1f88" prot="public" static="no">
        <type><ref refid="class_event__list" kindref="compound">Event_list</ref> *</type>
        <definition>typedef Event_list* Event_list_ptr</definition>
        <argsstring></argsstring>
        <name>Event_list_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/gen_chroma.cpp" line="424" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/gen_chroma.cpp" bodystart="424" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="gen__chroma_8cpp_1a3c038f5bc23427fc2353431b22e06d10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float hz_to_step</definition>
        <argsstring>(float hz)</argsstring>
        <name>hz_to_step</name>
        <param>
          <type>float</type>
          <declname>hz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/gen_chroma.cpp" line="44" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/gen_chroma.cpp" bodystart="44" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="gen__chroma_8cpp_1a0f0eb1d3260de834f9417faa8b08c141" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void gen_Magnitude</definition>
        <argsstring>(float *inR, float *inI, int low, int hi, float *out)</argsstring>
        <name>gen_Magnitude</name>
        <param>
          <type>float *</type>
          <declname>inR</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>inI</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>low</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>hi</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/gen_chroma.cpp" line="55" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/gen_chroma.cpp" bodystart="55" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="gen__chroma_8cpp_1a8fde58e0f817d9220271c0802b355cc2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void print_Bins</definition>
        <argsstring>(float *bins, int numBins)</argsstring>
        <name>print_Bins</name>
        <param>
          <type>float *</type>
          <declname>bins</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>numBins</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/gen_chroma.cpp" line="81" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/gen_chroma.cpp" bodystart="81" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="gen__chroma_8cpp_1aa53328605f00651991f0a6b251dd2f14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int min_Bin_Num</definition>
        <argsstring>(float *bins, int numBins)</argsstring>
        <name>min_Bin_Num</name>
        <param>
          <type>float *</type>
          <declname>bins</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>numBins</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/gen_chroma.cpp" line="106" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/gen_chroma.cpp" bodystart="106" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="gen__chroma_8cpp_1a2a8cc8180000265c2e7284d2f9f36a3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void gen_Hamming</definition>
        <argsstring>(float *h, int n)</argsstring>
        <name>gen_Hamming</name>
        <param>
          <type>float *</type>
          <declname>h</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/gen_chroma.cpp" line="126" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/gen_chroma.cpp" bodystart="126" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="gen__chroma_8cpp_1aac0e2df647c3083b54701ce06d095c0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int nextPowerOf2</definition>
        <argsstring>(int n)</argsstring>
        <name>nextPowerOf2</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/gen_chroma.cpp" line="139" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/gen_chroma.cpp" bodystart="139" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="gen__chroma_8cpp_1a54d90d2eee9d9283d37b3c1acc5128c5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void normalize</definition>
        <argsstring>(float *cv)</argsstring>
        <name>normalize</name>
        <param>
          <type>float *</type>
          <declname>cv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/gen_chroma.cpp" line="150" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/gen_chroma.cpp" bodystart="150" bodyend="174"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#include<sp/>&quot;malloc.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stdlib.h&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>for<sp/>OSX<sp/>compatibility,<sp/>malloc.h<sp/>-&gt;<sp/>stdlib.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stdio.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="assert_8h" kindref="compound">assert.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;string.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;math.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="allegro_8h" kindref="compound">allegro.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_f_f_t3_8h" kindref="compound">fft3/FFT3.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="audioreader_8h" kindref="compound">audioreader.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="scorealign_8h" kindref="compound">scorealign.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="gen__chroma_8h" kindref="compound">gen_chroma.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="comp__chroma_8h" kindref="compound">comp_chroma.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;mfmidi.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sautils_8h" kindref="compound">sautils.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SA_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>cout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd" kindref="compound">std</ref>;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>min</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>min</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="gen__chroma_8cpp_1abb702d8b501669a23aa0ab3b281b9384" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>min(x,y)<sp/>((x)&lt;(y)?(x):(y))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>max</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>max</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="gen__chroma_8cpp_1ac39d9cef6a5e030ba8d9e11121054268" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>max(x,y)<sp/>((x)&gt;(y)?(x):(y))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//if<sp/>1,<sp/>causes<sp/>printing<sp/>internally</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="gen__chroma_8cpp_1a850b3bf1e09af2a0e4660c9565efb957" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PRINT_BIN_ENERGY<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="gen__chroma_8cpp_1ad86bc04f7f667b1bdced8a0f06d96861" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>p1<sp/>0.0577622650466621</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="gen__chroma_8cpp_1a938e6a2861f684cc1f7e2de661446e35" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>p2<sp/>2.1011784386926213</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/>each<sp/>row<sp/>is<sp/>one<sp/>chroma<sp/>vector,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/>data<sp/>is<sp/>stored<sp/>as<sp/>an<sp/>array<sp/>of<sp/>chroma<sp/>vectors:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/>vector<sp/>1,<sp/>vector<sp/>2,<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="gen__chroma_8cpp_1a3c038f5bc23427fc2353431b22e06d10" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="gen__chroma_8cpp_1a3c038f5bc23427fc2353431b22e06d10" kindref="member">hz_to_step</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>hz)</highlight></codeline>
<codeline lineno="45"><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>float((log(hz)<sp/>-<sp/><ref refid="gen__chroma_8cpp_1a938e6a2861f684cc1f7e2de661446e35" kindref="member">p2</ref>)<sp/>/<sp/><ref refid="gen__chroma_8cpp_1ad86bc04f7f667b1bdced8a0f06d96861" kindref="member">p1</ref>);</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GEN_MAGNITUDE</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/><sp/><sp/>given<sp/>the<sp/>real<sp/>and<sp/>imaginary<sp/>portions<sp/>of<sp/>a<sp/>complex<sp/>FFT<sp/>function,<sp/>compute<sp/></highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/><sp/><sp/>the<sp/>magnitude<sp/>of<sp/>the<sp/>fft<sp/>bin.</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/><sp/><sp/>NOTE:<sp/>out<sp/>should<sp/>be<sp/>length<sp/>n</highlight></codeline>
<codeline lineno="54"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="gen__chroma_8cpp_1a0f0eb1d3260de834f9417faa8b08c141" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="gen__chroma_8cpp_1a0f0eb1d3260de834f9417faa8b08c141" kindref="member">gen_Magnitude</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>inR,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>inI,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>low,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hi,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>)</highlight></codeline>
<codeline lineno="56"><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>low;<sp/>i<sp/>&lt;<sp/>hi;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>magVal<sp/>=<sp/>sqrt(inR[i]<sp/>*<sp/>inR[i]<sp/>+<sp/>inI[i]<sp/>*<sp/>inI[i]);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;<sp/><sp/><sp/>%d:<sp/>sqrt(%g^2+%g^2)=%g\n&quot;,i,inR[i],inI[i+1],magVal);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>out[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]=<sp/>magVal;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SA_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>1000)<sp/>fprintf(dbf,<sp/></highlight><highlight class="stringliteral">&quot;gen_Magnitude:<sp/>%d<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>i,<sp/>magVal);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PRINT_BINS</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>function<sp/>is<sp/>intended<sp/>for<sp/>debugging<sp/>purposes.</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/><sp/><sp/><sp/>pass<sp/>in<sp/>an<sp/>array<sp/>representing<sp/>the<sp/>&quot;mid<sp/>point&quot;</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/><sp/><sp/><sp/>of<sp/>each<sp/>bin,<sp/>and<sp/>the<sp/>number<sp/>of<sp/>bins.<sp/><sp/>The</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/><sp/><sp/><sp/>function<sp/>will<sp/>print<sp/>out:</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/><sp/><sp/><sp/>i<sp/>value</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/><sp/><sp/><sp/>index<sp/>falue</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/><sp/><sp/><sp/>low<sp/>range<sp/>of<sp/>the<sp/>bin</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/><sp/><sp/><sp/>middle<sp/>of<sp/>the<sp/>bin</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/><sp/><sp/><sp/>high<sp/>range<sp/>of<sp/>the<sp/>bin</highlight></codeline>
<codeline lineno="80"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="gen__chroma_8cpp_1a8fde58e0f817d9220271c0802b355cc2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="gen__chroma_8cpp_1a8fde58e0f817d9220271c0802b355cc2" kindref="member">print_Bins</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>bins,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numBins){</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;BINS:<sp/>\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;numBins;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>i<sp/>%<sp/>numBins;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indexNext<sp/>=<sp/>(index<sp/>+<sp/>1)<sp/>%<sp/>numBins;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indexPrev<sp/>=<sp/>(index<sp/>-<sp/>1)<sp/>%<sp/>numBins;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>maxValue<sp/>=(bins[index]+bins[indexNext])/2;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>minValue=(bins[index]+bins[indexPrev])/2;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(index<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxValue<sp/>=bins[index]+(bins[index]-((bins[index]+bins[indexPrev])/2));</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(index<sp/>==<sp/>2)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minValue<sp/>=bins[index]-(((bins[index]+bins[indexNext])/2)-bins[index]);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;%d<sp/>(%d)<sp/>%g||%g||%g\n&quot;</highlight><highlight class="normal">,i,index,minValue,bins[i],maxValue);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MIN_BIN_NUM</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/><sp/><sp/><sp/>Returns<sp/>the<sp/>index<sp/>in<sp/>the<sp/>array<sp/>of<sp/>bins</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/><sp/><sp/><sp/>of<sp/>the<sp/>&quot;smallest&quot;<sp/>bin.<sp/><sp/>aka,<sp/>the<sp/>bin</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/><sp/><sp/><sp/>whose<sp/>midpoint<sp/>is<sp/>the<sp/>smallest.</highlight></codeline>
<codeline lineno="105"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="gen__chroma_8cpp_1aa53328605f00651991f0a6b251dd2f14" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="gen__chroma_8cpp_1aa53328605f00651991f0a6b251dd2f14" kindref="member">min_Bin_Num</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>bins,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numBins){</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minIndex=0;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>minValue=bins[0];</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>numBins;<sp/>i++)<sp/>{<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(minValue<sp/>&gt;<sp/>bins[i])<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minValue<sp/>=<sp/>bins[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minIndex<sp/>=<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>minIndex;</highlight></codeline>
<codeline lineno="118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GEN_HAMMING</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/><sp/><sp/><sp/>given<sp/>data<sp/>from<sp/>reading<sp/>in<sp/>a<sp/>section<sp/>of<sp/>a<sp/>sound<sp/>file</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/><sp/><sp/><sp/>applies<sp/>the<sp/>hamming<sp/>function<sp/>to<sp/>each<sp/>sample.</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/><sp/><sp/><sp/>n<sp/>specifies<sp/>the<sp/>length<sp/>of<sp/>in<sp/>and<sp/>out.</highlight></codeline>
<codeline lineno="125"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="gen__chroma_8cpp_1a2a8cc8180000265c2e7284d2f9f36a3d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="gen__chroma_8cpp_1a2a8cc8180000265c2e7284d2f9f36a3d" kindref="member">gen_Hamming</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>h,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="127"><highlight class="normal">{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>n;<sp/>k++)<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cos_value<sp/>=<sp/>(float)<sp/><ref refid="pffft_8c_1a57a66355e043ccefc17aca9338a2b748" kindref="member">cos</ref>(2.0<sp/>*<sp/><ref refid="mathematics_8h_1ae71449b1cc6e6250b91f539153a7a0d3" kindref="member">M_PI</ref><sp/>*<sp/>k<sp/>*<sp/>(1.0<sp/>/<sp/>n));</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>]<sp/>=<sp/>0.54F<sp/>+<sp/>(-0.46F<sp/>*<sp/>cos_value);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NEXTPOWEROF2</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/><sp/><sp/><sp/>given<sp/>an<sp/>int<sp/>n,<sp/>finds<sp/>the<sp/>next<sp/>power<sp/>of<sp/>2<sp/>larger<sp/>than</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/><sp/><sp/><sp/>or<sp/>equal<sp/>to<sp/>n.</highlight></codeline>
<codeline lineno="138"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="gen__chroma_8cpp_1aac0e2df647c3083b54701ce06d095c0d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="gen__chroma_8cpp_1aac0e2df647c3083b54701ce06d095c0d" kindref="member">nextPowerOf2</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="140"><highlight class="normal">{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(result<sp/>&lt;<sp/>n)<sp/>result<sp/>=<sp/>(result<sp/>&lt;&lt;<sp/>1);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="comment">//<sp/>normalize<sp/>a<sp/>chroma<sp/>vector<sp/>(from<sp/>audio<sp/>or<sp/>midi)<sp/>to<sp/>have</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="comment">//<sp/>mean<sp/>of<sp/>0<sp/>and<sp/>std.<sp/>dev.<sp/>of<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>normalize(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*cv)</highlight></codeline>
<codeline lineno="151"><highlight class="normal">{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>avg<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/><ref refid="gen__chroma_8h_1a90c6cc0f5dead0329b02cc71e4291394" kindref="member">CHROMA_BIN_COUNT</ref>;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>avg<sp/>+=<sp/>cv[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>avg<sp/>/=<sp/><ref refid="gen__chroma_8h_1a90c6cc0f5dead0329b02cc71e4291394" kindref="member">CHROMA_BIN_COUNT</ref>;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Normalize<sp/>this<sp/>frame<sp/>to<sp/>avg.<sp/>0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/><ref refid="gen__chroma_8h_1a90c6cc0f5dead0329b02cc71e4291394" kindref="member">CHROMA_BIN_COUNT</ref>;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>-=<sp/>avg;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Calculate<sp/>std.<sp/>dev.<sp/>for<sp/>this<sp/>frame<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/><ref refid="gen__chroma_8h_1a90c6cc0f5dead0329b02cc71e4291394" kindref="member">CHROMA_BIN_COUNT</ref>;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref><sp/>=<sp/>cv[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum<sp/>+=<sp/>x<sp/>*<sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>dev<sp/>=<sp/>sqrt(sum<sp/>/<sp/>CHROMA_BIN_COUNT);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dev<sp/>==<sp/>0.0)<sp/>dev<sp/>=<sp/>1.0F;<sp/></highlight><highlight class="comment">/*<sp/>don&apos;t<sp/>divide<sp/>by<sp/>zero<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Normalize<sp/>this<sp/>frame<sp/>to<sp/>std.<sp/>dev.<sp/>1*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/><ref refid="gen__chroma_8h_1a90c6cc0f5dead0329b02cc71e4291394" kindref="member">CHROMA_BIN_COUNT</ref>;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)<sp/>cv[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>/=<sp/>dev;</highlight></codeline>
<codeline lineno="174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>GEN_CHROMA_AUDIO<sp/>--<sp/>compute<sp/>chroma<sp/>for<sp/>an<sp/>audio<sp/>file<sp/></highlight></codeline>
<codeline lineno="178"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="180"><highlight class="comment"><sp/><sp/><sp/><sp/>generates<sp/>the<sp/>chroma<sp/>energy<sp/>for<sp/>a<sp/>given<sp/>sequence</highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/><sp/><sp/><sp/>with<sp/>a<sp/>low<sp/>cutoff<sp/>and<sp/>high<sp/>cutoff.<sp/><sp/></highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>chroma<sp/>energy<sp/>is<sp/>placed<sp/>in<sp/>the<sp/>float<sp/>*chrom_energy.</highlight></codeline>
<codeline lineno="183"><highlight class="comment"><sp/><sp/><sp/><sp/>this<sp/>2D<sp/>is<sp/>an<sp/>array<sp/>of<sp/>pointers.</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>function<sp/>returns<sp/>the<sp/>number<sp/>of<sp/>frames<sp/></highlight></codeline>
<codeline lineno="185"><highlight class="comment"><sp/><sp/><sp/><sp/>(aka<sp/>the<sp/>length<sp/>of<sp/>the<sp/>1st<sp/>dimention<sp/>of<sp/>chrom_energy)</highlight></codeline>
<codeline lineno="186"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187" refid="class_scorealign_1a321aa0e85c1b8d97158ad1eebe0f29d0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_scorealign_1a321aa0e85c1b8d97158ad1eebe0f29d0" kindref="member">Scorealign::gen_chroma_audio</ref>(<ref refid="class_audio__reader" kindref="compound">Audio_reader</ref><sp/>&amp;reader,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hcutoff,<sp/></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lcutoff,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>**chrom_energy,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*actual_frame_period,<sp/></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="190"><highlight class="normal">{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sample_rate<sp/>=<sp/>reader.<ref refid="class_audio__reader_1aae32f2ab4cf0dfa48c83ef5ce6dbfc2a" kindref="member">get_sample_rate</ref>();</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>reg11[<ref refid="gen__chroma_8h_1a90c6cc0f5dead0329b02cc71e4291394" kindref="member">CHROMA_BIN_COUNT</ref>];<sp/></highlight><highlight class="comment">//<sp/>temp<sp/>storage1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>reg12[<ref refid="gen__chroma_8h_1a90c6cc0f5dead0329b02cc71e4291394" kindref="member">CHROMA_BIN_COUNT</ref>];<sp/></highlight><highlight class="comment">//<sp/>temp<sp/>storage2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="mm_8c_1ab421ea2a103f8a57c338dc30e3cf4f6b" kindref="member">verbose</ref>)<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;==============FILE<sp/>%d====================\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader.<ref refid="class_audio__reader_1ad05e1d11a1417ea626087457b0b281a7" kindref="member">print_info</ref>();</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>DEBUG_LOG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(dbf,<sp/></highlight><highlight class="stringliteral">&quot;********<sp/>BEGIN<sp/>AUDIO<sp/>CHROMA<sp/>COMPUTATION<sp/>*********\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>seems<sp/>like<sp/>a<sp/>poor<sp/>way<sp/>to<sp/>set<sp/>actual_frame_period_0<sp/>or<sp/>_1<sp/>in<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>Scorealign<sp/>object,<sp/>but<sp/>I&apos;m<sp/>not<sp/>sure<sp/>what<sp/>would<sp/>be<sp/>better:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>*actual_frame_period<sp/>=<sp/>float(reader.<ref refid="class_audio__reader_1a18f336bca2ab2d688bfe313a8fcdbb40" kindref="member">actual_frame_period</ref>);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="gen__chroma_8h_1a90c6cc0f5dead0329b02cc71e4291394" kindref="member">CHROMA_BIN_COUNT</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reg11[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>-999;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="gen__chroma_8h_1a90c6cc0f5dead0329b02cc71e4291394" kindref="member">CHROMA_BIN_COUNT</ref>;<sp/>i++){</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reg12[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*=============================================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>allocate<sp/>some<sp/>buffers<sp/>for<sp/>use<sp/>in<sp/>the<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>full_data_size<sp/>=<sp/><ref refid="gen__chroma_8cpp_1aac0e2df647c3083b54701ce06d095c0d" kindref="member">nextPowerOf2</ref>(reader.<ref refid="class_audio__reader_1a3932b89b7f9a24ab2f41216e2c8e4a95" kindref="member">samples_per_frame</ref>);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="mm_8c_1ab421ea2a103f8a57c338dc30e3cf4f6b" kindref="member">verbose</ref>)<sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>samples<sp/>per<sp/>frame<sp/>is<sp/>%ld<sp/>\n&quot;</highlight><highlight class="normal">,<sp/>reader.<ref refid="class_audio__reader_1a3932b89b7f9a24ab2f41216e2c8e4a95" kindref="member">samples_per_frame</ref>);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>total<sp/>chroma<sp/>frames<sp/>%ld\n&quot;</highlight><highlight class="normal">,<sp/>reader.<ref refid="class_audio__reader_1a611b81d8b494d5a1e9779bb9d8cbc018" kindref="member">frame_count</ref>);<sp/></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>printf(&quot;<sp/><sp/><sp/>Window<sp/>size<sp/><sp/>%g<sp/>second<sp/>\n&quot;,<sp/>reader.window_size);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>hopsize<sp/>in<sp/>samples<sp/>%ld<sp/>\n&quot;</highlight><highlight class="normal">,<sp/>reader.<ref refid="class_audio__reader_1a535c41bffd9d2eca08697fa3a7848d2d" kindref="member">hop_samples</ref>);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>fft<sp/>size<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>full_data_size);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*full_data<sp/>=<sp/><ref refid="sautils_8h_1ade0072e12dad159bbf06858a91e47a8c" kindref="member">ALLOC</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">,<sp/>full_data_size);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*fft_dataR<sp/>=<sp/><ref refid="sautils_8h_1ade0072e12dad159bbf06858a91e47a8c" kindref="member">ALLOC</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">,<sp/>full_data_size);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*fft_dataI<sp/>=<sp/><ref refid="sautils_8h_1ade0072e12dad159bbf06858a91e47a8c" kindref="member">ALLOC</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">,<sp/>full_data_size);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//set<sp/>to<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(full_data,<sp/>0,<sp/>full_data_size<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(fft_dataR,<sp/>0,<sp/>full_data_size<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">));<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(fft_dataI,<sp/>0,<sp/>full_data_size<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//check<sp/>to<sp/>see<sp/>if<sp/>memory<sp/>has<sp/>been<sp/>allocated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(full_data<sp/>!=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(fft_dataR<sp/>!=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(fft_dataI<sp/>!=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*bin_map<sp/>=<sp/><ref refid="sautils_8h_1ade0072e12dad159bbf06858a91e47a8c" kindref="member">ALLOC</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/>full_data_size);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//set<sp/>up<sp/>the<sp/>chrom_energy<sp/>array;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>*chrom_energy<sp/>=<sp/><ref refid="sautils_8h_1ade0072e12dad159bbf06858a91e47a8c" kindref="member">ALLOC</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">,<sp/>reader.<ref refid="class_audio__reader_1a611b81d8b494d5a1e9779bb9d8cbc018" kindref="member">frame_count</ref><sp/>*<sp/>(CHROMA_BIN_COUNT<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cv_index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>up<sp/>mapping<sp/>from<sp/>spectral<sp/>bins<sp/>to<sp/>chroma<sp/>bins</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ordinarily,<sp/>we<sp/>would<sp/>add<sp/>0.5<sp/>to<sp/>round<sp/>to<sp/>nearest<sp/>bin,<sp/>but<sp/>we<sp/>also</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>want<sp/>to<sp/>subtract<sp/>0.5<sp/>because<sp/>the<sp/>bin<sp/>has<sp/>a<sp/>width<sp/>of<sp/>+/-<sp/>0.5.<sp/>These</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>two<sp/>cancel<sp/>out,<sp/>so<sp/>we<sp/>can<sp/>just<sp/>round<sp/>down<sp/>and<sp/>get<sp/>the<sp/>right<sp/>answer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_bins_to_use<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)<sp/>(hcutoff<sp/>*<sp/>full_data_size<sp/>/<sp/>sample_rate);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>But<sp/>then<sp/>we<sp/>want<sp/>to<sp/>add<sp/>1<sp/>because<sp/>the<sp/>loops<sp/>will<sp/>only<sp/>go<sp/>to<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>high_bin<sp/>-<sp/>1:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>high_bin<sp/>=<sp/><ref refid="gen__chroma_8cpp_1abb702d8b501669a23aa0ab3b281b9384" kindref="member">min</ref>(num_bins_to_use<sp/>+<sp/>1,<sp/>full_data_size);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;center<sp/>freq<sp/>of<sp/>high<sp/>bin<sp/>is<sp/>%g\n&quot;,<sp/>(high_bin<sp/>-<sp/>1)<sp/>*<sp/>sample_rate<sp/>/<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>full_data_size);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;high<sp/>freq<sp/>of<sp/>high<sp/>bin<sp/>is<sp/>%g\n&quot;,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>(high_bin<sp/>-<sp/>1<sp/>+<sp/>0.5)<sp/>*<sp/>sample_rate<sp/>/<sp/>full_data_size);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we<sp/>add<sp/>0.5,<sp/>we&apos;ll<sp/>round<sp/>to<sp/>nearest<sp/>bin<sp/>center<sp/>frequency,<sp/>but</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>bin<sp/>covers<sp/>a<sp/>frequency<sp/>range<sp/>that<sp/>goes<sp/>0.5<sp/>bin<sp/>width<sp/>lower,<sp/>so<sp/>we</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>add<sp/>1<sp/>before<sp/>rounding.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>low_bin<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)<sp/>(lcutoff<sp/>*<sp/>full_data_size<sp/>/<sp/>sample_rate);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;center<sp/>freq<sp/>of<sp/>low<sp/>bin<sp/>is<sp/>%g\n&quot;,<sp/>low_bin<sp/>*<sp/>sample_rate<sp/>/<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>full_data_size);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;low<sp/>freq<sp/>of<sp/>low<sp/>bin<sp/>is<sp/>%g\n&quot;,<sp/>(low_bin<sp/>-<sp/>0.5)<sp/>*<sp/>sample_rate<sp/>/<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>full_data_size);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;frequency<sp/>spacing<sp/>of<sp/>bins<sp/>is<sp/>%g\n&quot;,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>sample_rate<sp/>/<sp/>full_data_size);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>freq<sp/>=<sp/>low_bin<sp/>*<sp/>sample_rate<sp/>/<sp/>full_data_size;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>low_bin;<sp/>i<sp/>&lt;<sp/>high_bin;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>raw_bin<sp/>=<sp/><ref refid="gen__chroma_8cpp_1a3c038f5bc23427fc2353431b22e06d10" kindref="member">hz_to_step</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">(freq));</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>round_bin<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)<sp/>(raw_bin<sp/>+<sp/>0.5<ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref>);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mod_bin<sp/>=<sp/>round_bin<sp/>%<sp/>12;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bin_map[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>mod_bin;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>freq<sp/>+=<sp/>sample_rate<sp/>/<sp/>full_data_size;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>printf(&quot;BIN_COUNT<sp/>is<sp/>!!!!!!!!!!!!!<sp/><sp/><sp/>%d\n&quot;,CHROMA_BIN_COUNT);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>Hamming<sp/>window<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*hamming<sp/>=<sp/><ref refid="sautils_8h_1ade0072e12dad159bbf06858a91e47a8c" kindref="member">ALLOC</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">,<sp/>reader.<ref refid="class_audio__reader_1a3932b89b7f9a24ab2f41216e2c8e4a95" kindref="member">samples_per_frame</ref>);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="gen__chroma_8cpp_1a2a8cc8180000265c2e7284d2f9f36a3d" kindref="member">gen_Hamming</ref>(hamming,<sp/>reader.<ref refid="class_audio__reader_1a3932b89b7f9a24ab2f41216e2c8e4a95" kindref="member">samples_per_frame</ref>);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(reader.<ref refid="class_audio__reader_1ae91a82ce414add504469c6423618098c" kindref="member">read_window</ref>(full_data))<sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//fill<sp/>out<sp/>array<sp/>with<sp/>0&apos;s<sp/>till<sp/>next<sp/>power<sp/>of<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SA_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(dbf,<sp/></highlight><highlight class="stringliteral">&quot;samples_per_frame<sp/>%d<sp/>sample<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader.<ref refid="class_audio__reader_1a3932b89b7f9a24ab2f41216e2c8e4a95" kindref="member">samples_per_frame</ref>,<sp/>full_data[0]);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>reader.<ref refid="class_audio__reader_1a3932b89b7f9a24ab2f41216e2c8e4a95" kindref="member">samples_per_frame</ref>;<sp/>i<sp/>&lt;<sp/>full_data_size;<sp/>i++)<sp/></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>full_data[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SA_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(dbf,<sp/></highlight><highlight class="stringliteral">&quot;preFFT:<sp/>full_data[1000]<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>full_data[1000]);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>compute<sp/>the<sp/>RMS,<sp/>then<sp/>apply<sp/>the<sp/>Hamming<sp/>window<sp/>to<sp/>the<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rms<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>reader.<ref refid="class_audio__reader_1a3932b89b7f9a24ab2f41216e2c8e4a95" kindref="member">samples_per_frame</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref><sp/>=<sp/>full_data[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rms<sp/>+=<sp/>x<sp/>*<sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>full_data[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>x<sp/>*<sp/>hamming[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rms<sp/>=<sp/>sqrt(rms<sp/>/<sp/>reader.<ref refid="class_audio__reader_1a3932b89b7f9a24ab2f41216e2c8e4a95" kindref="member">samples_per_frame</ref>);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SA_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(dbf,<sp/></highlight><highlight class="stringliteral">&quot;preFFT:<sp/>hammingData[1000]<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>full_data[1000]);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_f_f_t3_8cpp_1a94f8893cf4d802c5910a40a4931aec26" kindref="member">FFT3</ref>(full_data_size,<sp/>0,<sp/>full_data,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>fft_dataR,<sp/>fft_dataI);<sp/></highlight><highlight class="comment">//fft3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//given<sp/>the<sp/>fft,<sp/>compute<sp/>the<sp/>energy<sp/>of<sp/>each<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="gen__chroma_8cpp_1a0f0eb1d3260de834f9417faa8b08c141" kindref="member">gen_Magnitude</ref>(fft_dataR,<sp/>fft_dataI,<sp/>low_bin,<sp/>high_bin,<sp/>full_data);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*-------------------------------------</highlight></codeline>
<codeline lineno="312"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GENERATE<sp/>BINS<sp/>AND<sp/>PUT</highlight></codeline>
<codeline lineno="313"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>THE<sp/>CORRECT<sp/>ENERGY<sp/>IN</highlight></codeline>
<codeline lineno="314"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EACH<sp/>BIN,<sp/>CORRESPONDING</highlight></codeline>
<codeline lineno="315"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TO<sp/>THE<sp/>CORRECT<sp/>PITCH</highlight></codeline>
<codeline lineno="316"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>binEnergy[<ref refid="gen__chroma_8h_1a90c6cc0f5dead0329b02cc71e4291394" kindref="member">CHROMA_BIN_COUNT</ref>];</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>binCount[<ref refid="gen__chroma_8h_1a90c6cc0f5dead0329b02cc71e4291394" kindref="member">CHROMA_BIN_COUNT</ref>];</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="gen__chroma_8h_1a90c6cc0f5dead0329b02cc71e4291394" kindref="member">CHROMA_BIN_COUNT</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>binCount[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>0;<sp/></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>binEnergy[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>low_bin;<sp/>i<sp/>&lt;<sp/>high_bin;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mod_bin<sp/>=<sp/>bin_map[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>binEnergy[mod_bin]<sp/>+=<sp/>full_data[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>binCount[mod_bin]++;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*-------------------------------------</highlight></codeline>
<codeline lineno="333"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>END<sp/>OF<sp/>BIN<sp/>GENERATION</highlight></codeline>
<codeline lineno="334"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-------------------------------------*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>THE<sp/>FOLLOWING<sp/>LOOKS<sp/>LIKE<sp/>SOME<sp/>OLD<sp/>CODE<sp/>TO<sp/>COMPUTE</highlight></codeline>
<codeline lineno="336"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>CHROMA<sp/>FLUX,<sp/>BUT<sp/>IT<sp/>IS<sp/>NOT<sp/>IN<sp/>USE<sp/>NOW<sp/></highlight></codeline>
<codeline lineno="337"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="338"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(PRINT_BIN_ENERGY)<sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float<sp/>mao1;</highlight></codeline>
<codeline lineno="340"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float<sp/>sum=0.;</highlight></codeline>
<codeline lineno="341"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="342"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>CHROMA_BIN_COUNT;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="343"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reg12[i]=binEnergy[i]<sp/>/<sp/>binCount[i];</highlight></codeline>
<codeline lineno="344"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="345"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="346"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(reg11[0]==-999){</highlight></codeline>
<codeline lineno="347"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;Chroma<sp/>Flux<sp/>\n\n&quot;);</highlight></codeline>
<codeline lineno="348"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>CHROMA_BIN_COUNT;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="351"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>CHROMA_BIN_COUNT;<sp/>k++)<sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float<sp/>x<sp/>=<sp/>reg11[k];</highlight></codeline>
<codeline lineno="353"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float<sp/>y<sp/>=<sp/>reg12[k];</highlight></codeline>
<codeline lineno="354"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float<sp/>diff<sp/>=<sp/>x<sp/>-<sp/>y;</highlight></codeline>
<codeline lineno="355"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum<sp/>+=<sp/>diff<sp/>*<sp/>diff;</highlight></codeline>
<codeline lineno="356"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mao1<sp/>=<sp/>sqrt(sum);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="358"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sequence++;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="359"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="360"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mao1<sp/>=<sp/>0.;</highlight></codeline>
<codeline lineno="361"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>CHROMA_BIN_COUNT;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reg11[i]=reg12[i];</highlight></codeline>
<codeline lineno="364"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//fclose(Pointer);</highlight></codeline>
<codeline lineno="366"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//put<sp/>chrom<sp/>energy<sp/>into<sp/>the<sp/>returned<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SA_VERBOSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(dbf,<sp/></highlight><highlight class="stringliteral">&quot;cv_index<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>cv_index);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(cv_index<sp/>&lt;<sp/>reader.<ref refid="class_audio__reader_1a611b81d8b494d5a1e9779bb9d8cbc018" kindref="member">frame_count</ref>);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*cv<sp/>=<sp/><ref refid="gen__chroma_8h_1a3684475bbf75f0289ace8fe9d5ed3272" kindref="member">AREF1</ref>(*chrom_energy,<sp/>cv_index);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/><sp/>i<sp/>&lt;<sp/><ref refid="gen__chroma_8h_1a90c6cc0f5dead0329b02cc71e4291394" kindref="member">CHROMA_BIN_COUNT</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>binEnergy[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>/<sp/>binCount[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rms<sp/>&lt;<sp/>silence_threshold)<sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;silence&quot;<sp/>flag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv[<ref refid="gen__chroma_8h_1a90c6cc0f5dead0329b02cc71e4291394" kindref="member">CHROMA_BIN_COUNT</ref>]<sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv[<ref refid="gen__chroma_8h_1a90c6cc0f5dead0329b02cc71e4291394" kindref="member">CHROMA_BIN_COUNT</ref>]<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>normalize<sp/>the<sp/>non-silent<sp/>frames</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normalize(cv);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>DEBUG_LOG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(dbf,<sp/></highlight><highlight class="stringliteral">&quot;%d@%g)<sp/>&quot;</highlight><highlight class="normal">,<sp/>cv_index,<sp/>cv_index<sp/>*<sp/>reader.<ref refid="class_audio__reader_1a18f336bca2ab2d688bfe313a8fcdbb40" kindref="member">actual_frame_period</ref>);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="gen__chroma_8h_1a90c6cc0f5dead0329b02cc71e4291394" kindref="member">CHROMA_BIN_COUNT</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(dbf,<sp/></highlight><highlight class="stringliteral">&quot;%d:%g<sp/>&quot;</highlight><highlight class="normal">,<sp/>i,<sp/>cv[i]);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(dbf,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>sil?:%g\n\n&quot;</highlight><highlight class="normal">,<sp/>cv[CHROMA_BIN_COUNT]);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv_index++;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(progress<sp/>&amp;&amp;<sp/>cv_index<sp/>%<sp/>10<sp/>==<sp/>0<sp/>&amp;&amp;<sp/></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!progress-&gt;set_feature_progress(</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">(cv_index<sp/>*<sp/>reader.<ref refid="class_audio__reader_1a18f336bca2ab2d688bfe313a8fcdbb40" kindref="member">actual_frame_period</ref>)))<sp/>{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>end<sp/>of<sp/>while<sp/>((readcount<sp/>=<sp/>read_mono_floats...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>free(hamming);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>free(fft_dataI);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>free(fft_dataR);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>free(full_data);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="mm_8c_1ab421ea2a103f8a57c338dc30e3cf4f6b" kindref="member">verbose</ref>)</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;\nGenerated<sp/>Chroma.<sp/>file%d_frames<sp/>is<sp/>%i\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>file0_frames);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cv_index;</highlight></codeline>
<codeline lineno="408"><highlight class="normal">}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411" refid="class_event__list" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_event__list" kindref="compound">Event_list</ref><sp/>{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="413" refid="class_event__list_1a9a08b25f82f30b67a9c72549365075a9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_alg__note" kindref="compound">Alg_note_ptr</ref><sp/><ref refid="class_event__list_1a9a08b25f82f30b67a9c72549365075a9" kindref="member">note</ref>;</highlight></codeline>
<codeline lineno="414" refid="class_event__list_1aef3eab88092e0ddaa831b909a67df200" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_event__list" kindref="compound">Event_list</ref><sp/>*<ref refid="class_event__list_1aef3eab88092e0ddaa831b909a67df200" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416" refid="class_event__list_1a2ba65aba38bc4884bf2322a59c2b4771" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_event__list_1a2ba65aba38bc4884bf2322a59c2b4771" kindref="member">Event_list</ref>(<ref refid="allegro_8h_1aeb8db009b4ffadef2e7ca0e4936f0307" kindref="member">Alg_event_ptr</ref><sp/>event_,<sp/><ref refid="class_event__list" kindref="compound">Event_list</ref><sp/>*next_)<sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>note<sp/>=<sp/>(<ref refid="allegro_8h_1a49bc03b187e4468a764d73df4c860206" kindref="member">Alg_note_ptr</ref>)<sp/>event_;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next<sp/>=<sp/>next_;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421" refid="class_event__list_1a7a70bc8e8857563243aeace737adfeb0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_event__list_1a7a70bc8e8857563243aeace737adfeb0" kindref="member">~Event_list</ref>()<sp/>{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="423"><highlight class="normal">};</highlight></codeline>
<codeline lineno="424" refid="gen__chroma_8cpp_1a29b3d9ab4f3c32614a52be7e1a6c1f88" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_event__list" kindref="compound">Event_list</ref><sp/>*<ref refid="gen__chroma_8cpp_1a29b3d9ab4f3c32614a52be7e1a6c1f88" kindref="member">Event_list_ptr</ref>;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>gen_chroma_midi<sp/>--<sp/>generate<sp/>chroma<sp/>vectors<sp/>for<sp/>midi<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="429"><highlight class="comment"><sp/><sp/><sp/><sp/>generates<sp/>the<sp/>chroma<sp/>energy<sp/>for<sp/>a<sp/>given<sp/>sequence</highlight></codeline>
<codeline lineno="430"><highlight class="comment"><sp/><sp/><sp/><sp/>with<sp/>a<sp/>low<sp/>cutoff<sp/>and<sp/>high<sp/>cutoff.<sp/><sp/></highlight></codeline>
<codeline lineno="431"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>chroma<sp/>energy<sp/>is<sp/>placed<sp/>in<sp/>the<sp/>float<sp/>*chrom_energy.</highlight></codeline>
<codeline lineno="432"><highlight class="comment"><sp/><sp/><sp/><sp/>this<sp/>2D<sp/>is<sp/>an<sp/>array<sp/>of<sp/>pointers.</highlight></codeline>
<codeline lineno="433"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>function<sp/>returns<sp/>the<sp/>number<sp/>of<sp/>frames<sp/></highlight></codeline>
<codeline lineno="434"><highlight class="comment"><sp/><sp/><sp/><sp/>(aka<sp/>the<sp/>length<sp/>of<sp/>the<sp/>1st<sp/>dimension<sp/>of<sp/>chrom_energy)</highlight></codeline>
<codeline lineno="435"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="436"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="437"><highlight class="comment"><sp/><sp/>Notes:<sp/>keep<sp/>a<sp/>list<sp/>of<sp/>notes<sp/>that<sp/>are<sp/>sounding.</highlight></codeline>
<codeline lineno="438"><highlight class="comment"><sp/><sp/>For<sp/>each<sp/>frame,<sp/></highlight></codeline>
<codeline lineno="439"><highlight class="comment"><sp/><sp/><sp/><sp/>zero<sp/>the<sp/>vector</highlight></codeline>
<codeline lineno="440"><highlight class="comment"><sp/><sp/><sp/><sp/>while<sp/>next<sp/>note<sp/>starts<sp/>before<sp/>end<sp/>of<sp/>frame,<sp/>insert<sp/>note<sp/>in<sp/>list</highlight></codeline>
<codeline lineno="441"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>each<sp/>note<sp/>in<sp/>list,<sp/>compute<sp/>weight<sp/>and<sp/>add<sp/>to<sp/>vector.<sp/>Remove</highlight></codeline>
<codeline lineno="442"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>note<sp/>ends<sp/>before<sp/>frame<sp/>start<sp/>time.<sp/><sp/></highlight></codeline>
<codeline lineno="443"><highlight class="comment"><sp/><sp/>How<sp/>many<sp/>frames?<sp/></highlight></codeline>
<codeline lineno="444"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446" refid="class_scorealign_1a3e123c40feefe620c0e830ef9380baa1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_scorealign_1a3e123c40feefe620c0e830ef9380baa1" kindref="member">Scorealign::gen_chroma_midi</ref>(<ref refid="class_alg__seq" kindref="compound">Alg_seq</ref><sp/>&amp;seq,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="seqread_8c_1a3c79b5a9ee81c3835b8de9b0d900d2de" kindref="member">dur</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nnotes,</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hcutoff,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lcutoff,</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>**chrom_energy,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*actual_frame_period,</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="450"><highlight class="normal">{<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>silence_threshold<sp/>is<sp/>compared<sp/>to<sp/>the<sp/>*average*<sp/>of<sp/>chroma<sp/>bins.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Rather<sp/>than<sp/>divide<sp/>the<sp/>sum<sp/>by<sp/>CHROMA_BIN_COUNT<sp/>to<sp/>compute<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>average,<sp/>just<sp/>compute<sp/>the<sp/>sum<sp/>and<sp/>compare<sp/>to<sp/>silence_threshold<sp/>*<sp/>12</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>threshold<sp/>=<sp/>(float)<sp/>(silence_threshold<sp/>*<sp/><ref refid="gen__chroma_8h_1a90c6cc0f5dead0329b02cc71e4291394" kindref="member">CHROMA_BIN_COUNT</ref>);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="mm_8c_1ab421ea2a103f8a57c338dc30e3cf4f6b" kindref="member">verbose</ref>)<sp/>{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;==============FILE<sp/>%d====================\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="scorealign_8h_1a61fdb24fabaa450f0d682a4025495730" kindref="member">SA_V</ref>(seq.<ref refid="class_alg__seq_1a0e343d15fce9075f9ddcc74b8b4c2ba2" kindref="member">write</ref>(cout,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>DEBUG_LOG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(dbf,<sp/></highlight><highlight class="stringliteral">&quot;********<sp/>BEGIN<sp/>MIDI<sp/>CHROMA<sp/>COMPUTATION<sp/>*********\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*=============================================================*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>*actual_frame_period<sp/>=<sp/>frame_period;<sp/></highlight><highlight class="comment">//<sp/>since<sp/>we<sp/>don&apos;t<sp/>quantize<sp/>to<sp/>samples</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*=============================================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>seq.<ref refid="class_alg__seq_1adb0471cd38ff38433afd46f726efa5c2" kindref="member">convert_to_seconds</ref>();</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//float<sp/>dur<sp/>=<sp/>0.0F;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//int<sp/>nnotes<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//nnotes<sp/>=<sp/>find_midi_duration(seq,<sp/>&amp;dur);<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*================================================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frame_count=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)ceil(((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)dur/<sp/>frame_period<sp/>+<sp/>1));<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*================================================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="mm_8c_1ab421ea2a103f8a57c338dc30e3cf4f6b" kindref="member">verbose</ref>)<sp/>{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>note<sp/>count<sp/>=<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>nnotes);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>duration<sp/>in<sp/>sec<sp/>=<sp/>%f\n&quot;</highlight><highlight class="normal">,<sp/>dur);<sp/></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>chroma<sp/>frames<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>frame_count);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//set<sp/>up<sp/>the<sp/>chrom_energy<sp/>array;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>(*chrom_energy)<sp/>=<sp/><ref refid="sautils_8h_1ade0072e12dad159bbf06858a91e47a8c" kindref="member">ALLOC</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">,<sp/>frame_count<sp/>*<sp/>(CHROMA_BIN_COUNT<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_event__list" kindref="compound">Event_list_ptr</ref><sp/>list<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_alg__iterator" kindref="compound">Alg_iterator</ref><sp/>iterator(&amp;seq,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>iterator.<ref refid="class_alg__iterator_1a59c05da591cc008ff1be195335646046" kindref="member">begin</ref>();</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="allegro_8h_1aeb8db009b4ffadef2e7ca0e4936f0307" kindref="member">Alg_event_ptr</ref><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal"><sp/>=<sp/>iterator.<ref refid="class_alg__iterator_1af175a74563cdefc967e4b568763fa818" kindref="member">next</ref>();</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cv_index;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(cv_index<sp/>=<sp/>0;<sp/>cv_index<sp/>&lt;<sp/>frame_count;<sp/>cv_index++)<sp/>{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*====================================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>frame_begin<sp/>=<sp/>(float)<sp/><ref refid="gen__chroma_8cpp_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>(cv_index<sp/>*<sp/>frame_period<sp/>-<sp/></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>window_size<sp/>/<sp/>2.0,<sp/>0.0);<sp/></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//chooses<sp/>zero<sp/>if<sp/>negative</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>frame_end<sp/>=<sp/>(float)<sp/>(cv_index<sp/>*<sp/>frame_period<sp/>+<sp/>window_size<sp/>/<sp/>2.0);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*============================================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*cv<sp/>=<sp/><ref refid="gen__chroma_8h_1a3684475bbf75f0289ace8fe9d5ed3272" kindref="member">AREF1</ref>(*chrom_energy,<sp/>cv_index);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>zero<sp/>the<sp/>vector<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>CHROMA_BIN_COUNT<sp/>+<sp/>1;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)<sp/>cv[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>add<sp/>new<sp/>notes<sp/>that<sp/>are<sp/>in<sp/>the<sp/>frame<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(event<sp/>&amp;&amp;<sp/>event-&gt;time<sp/>&lt;<sp/>frame_end)<sp/>{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event-&gt;is_note())<sp/>{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_event__list" kindref="compound">Event_list</ref>(event,<sp/>list);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal"><sp/>=<sp/>iterator.<ref refid="class_alg__iterator_1af175a74563cdefc967e4b568763fa818" kindref="member">next</ref>();</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>remove<sp/>notes<sp/>that<sp/>are<sp/>no<sp/>longer<sp/>sounding<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_event__list" kindref="compound">Event_list_ptr</ref><sp/>*ptr<sp/>=<sp/>&amp;list;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*ptr)<sp/>{</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((*ptr)<sp/>&amp;&amp;<sp/></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*ptr)-&gt;note-&gt;time<sp/>+<sp/>(*ptr)-&gt;note-&gt;dur<sp/>&lt;<sp/>frame_begin)<sp/>{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_event__list" kindref="compound">Event_list_ptr</ref><sp/>temp<sp/>=<sp/>*ptr;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ptr<sp/>=<sp/>(*ptr)-&gt;<ref refid="class_event__list_1aef3eab88092e0ddaa831b909a67df200" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>temp;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*ptr)<sp/>ptr<sp/>=<sp/>&amp;((*ptr)-&gt;next);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sum<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_event__list" kindref="compound">Event_list_ptr</ref><sp/>item<sp/>=<sp/>list;<sp/>item;<sp/>item<sp/>=<sp/>item-&gt;<ref refid="class_event__list_1aef3eab88092e0ddaa831b909a67df200" kindref="member">next</ref>)<sp/>{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>compute<sp/>duration<sp/>of<sp/>overlap<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>overlap<sp/>=<sp/></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="gen__chroma_8cpp_1abb702d8b501669a23aa0ab3b281b9384" kindref="member">min</ref>(frame_end,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>(item-&gt;note-&gt;time<sp/>+<sp/>item-&gt;note-&gt;dur))<sp/>-<sp/></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="gen__chroma_8cpp_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>(frame_begin,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>item-&gt;note-&gt;time);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>velocity<sp/>=<sp/>item-&gt;note-&gt;loud;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="lspdata_8c_1a188f5f4011d6169f76ee43763c198076" kindref="member">weight</ref><sp/>=<sp/>overlap<sp/>*<sp/>velocity;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>DEBUG_LOG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(dbf,<sp/></highlight><highlight class="stringliteral">&quot;%3d<sp/>pitch<sp/>%g<sp/>starting<sp/>%g<sp/>key<sp/>%ld<sp/>overlap<sp/>%g<sp/>velocity<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv_index,<sp/>item-&gt;note-&gt;pitch,<sp/>item-&gt;note-&gt;time,<sp/></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>item-&gt;note-&gt;get_identifier(),<sp/>overlap,<sp/>velocity);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv[(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)<sp/>item-&gt;note-&gt;pitch<sp/>%<sp/>12]<sp/>+=<sp/>weight;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sum<sp/>+=<sp/>weight;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sum<sp/>&lt;<sp/>threshold)<sp/>{</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv[<ref refid="gen__chroma_8h_1a90c6cc0f5dead0329b02cc71e4291394" kindref="member">CHROMA_BIN_COUNT</ref>]<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>normalize(cv);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>DEBUG_LOG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(dbf,<sp/></highlight><highlight class="stringliteral">&quot;%d@%g)<sp/>&quot;</highlight><highlight class="normal">,<sp/>cv_index,<sp/>frame_begin);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/><ref refid="gen__chroma_8h_1a90c6cc0f5dead0329b02cc71e4291394" kindref="member">CHROMA_BIN_COUNT</ref>;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(dbf,<sp/></highlight><highlight class="stringliteral">&quot;%d:%g<sp/>&quot;</highlight><highlight class="normal">,<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/>cv[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(dbf,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>sil?:%g\n\n&quot;</highlight><highlight class="normal">,<sp/>cv[CHROMA_BIN_COUNT]);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cv_index<sp/>%<sp/>10<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>progress<sp/>&amp;&amp;<sp/></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!progress-&gt;set_feature_progress(</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">(cv_index<sp/>*<sp/>*actual_frame_period)))<sp/>{</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(list)<sp/>{</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_event__list" kindref="compound">Event_list_ptr</ref><sp/>temp<sp/>=<sp/>list;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list<sp/>=<sp/>list-&gt;<ref refid="class_event__list_1aef3eab88092e0ddaa831b909a67df200" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>temp;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>iterator.<ref refid="class_alg__iterator_1a92b44e65fa07d97f7f41494b06201543" kindref="member">end</ref>();</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="mm_8c_1ab421ea2a103f8a57c338dc30e3cf4f6b" kindref="member">verbose</ref>)</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;\nGenerated<sp/>Chroma.<sp/>file%d_frames<sp/>is<sp/>%i\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>file0_frames);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>frame_count;</highlight></codeline>
<codeline lineno="571"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libscorealign/gen_chroma.cpp"/>
  </compounddef>
</doxygen>
