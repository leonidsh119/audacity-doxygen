<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="ffmpeg_2libavutil_2file_8h" kind="file" language="C++">
    <compoundname>file.h</compoundname>
    <includes local="no">stdint.h</includes>
    <includes refid="avutil_8h" local="yes">avutil.h</includes>
    <incdepgraph>
      <node id="3835">
        <label>mathematics.h</label>
        <link refid="mathematics_8h"/>
        <childnode refid="3818" relation="include">
        </childnode>
        <childnode refid="3824" relation="include">
        </childnode>
        <childnode refid="3828" relation="include">
        </childnode>
        <childnode refid="3836" relation="include">
        </childnode>
        <childnode refid="3837" relation="include">
        </childnode>
      </node>
      <node id="3836">
        <label>rational.h</label>
        <link refid="rational_8h"/>
        <childnode refid="3818" relation="include">
        </childnode>
        <childnode refid="3823" relation="include">
        </childnode>
        <childnode refid="3828" relation="include">
        </childnode>
      </node>
      <node id="3839">
        <label>stdarg.h</label>
      </node>
      <node id="3828">
        <label>attributes.h</label>
        <link refid="attributes_8h"/>
      </node>
      <node id="3819">
        <label>avutil.h</label>
        <link refid="avutil_8h"/>
        <childnode refid="3820" relation="include">
        </childnode>
        <childnode refid="3833" relation="include">
        </childnode>
        <childnode refid="3829" relation="include">
        </childnode>
        <childnode refid="3830" relation="include">
        </childnode>
        <childnode refid="3835" relation="include">
        </childnode>
        <childnode refid="3836" relation="include">
        </childnode>
        <childnode refid="3838" relation="include">
        </childnode>
        <childnode refid="3840" relation="include">
        </childnode>
      </node>
      <node id="3818">
        <label>stdint.h</label>
      </node>
      <node id="3831">
        <label>libavutil/avconfig.h</label>
        <link refid="avconfig_8h"/>
      </node>
      <node id="3826">
        <label>stdlib.h</label>
      </node>
      <node id="3821">
        <label>errno.h</label>
      </node>
      <node id="3817">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/file.h</label>
        <link refid="ffmpeg/libavutil/file.h"/>
        <childnode refid="3818" relation="include">
        </childnode>
        <childnode refid="3819" relation="include">
        </childnode>
      </node>
      <node id="3829">
        <label>version.h</label>
        <link refid="ffmpeg_2libavutil_2version_8h"/>
        <childnode refid="3830" relation="include">
        </childnode>
      </node>
      <node id="3834">
        <label>stddef.h</label>
      </node>
      <node id="3823">
        <label>limits.h</label>
      </node>
      <node id="3833">
        <label>error.h</label>
        <link refid="error_8h"/>
        <childnode refid="3821" relation="include">
        </childnode>
        <childnode refid="3834" relation="include">
        </childnode>
      </node>
      <node id="3838">
        <label>log.h</label>
        <link refid="ffmpeg_2libavutil_2log_8h"/>
        <childnode refid="3839" relation="include">
        </childnode>
        <childnode refid="3819" relation="include">
        </childnode>
        <childnode refid="3828" relation="include">
        </childnode>
      </node>
      <node id="3827">
        <label>string.h</label>
      </node>
      <node id="3832">
        <label>mem.h</label>
        <link refid="ffmpeg_2libavutil_2mem_8h"/>
        <childnode refid="3823" relation="include">
        </childnode>
        <childnode refid="3818" relation="include">
        </childnode>
        <childnode refid="3828" relation="include">
        </childnode>
        <childnode refid="3833" relation="include">
        </childnode>
        <childnode refid="3819" relation="include">
        </childnode>
      </node>
      <node id="3837">
        <label>intfloat.h</label>
        <link refid="intfloat_8h"/>
        <childnode refid="3818" relation="include">
        </childnode>
        <childnode refid="3828" relation="include">
        </childnode>
      </node>
      <node id="3841">
        <label>old_pix_fmts.h</label>
        <link refid="old__pix__fmts_8h"/>
      </node>
      <node id="3824">
        <label>math.h</label>
      </node>
      <node id="3830">
        <label>macros.h</label>
        <link refid="ffmpeg_2libavutil_2macros_8h"/>
      </node>
      <node id="3820">
        <label>common.h</label>
        <link refid="ffmpeg_2libavutil_2common_8h"/>
        <childnode refid="3821" relation="include">
        </childnode>
        <childnode refid="3822" relation="include">
        </childnode>
        <childnode refid="3823" relation="include">
        </childnode>
        <childnode refid="3824" relation="include">
        </childnode>
        <childnode refid="3818" relation="include">
        </childnode>
        <childnode refid="3825" relation="include">
        </childnode>
        <childnode refid="3826" relation="include">
        </childnode>
        <childnode refid="3827" relation="include">
        </childnode>
        <childnode refid="3828" relation="include">
        </childnode>
        <childnode refid="3829" relation="include">
        </childnode>
        <childnode refid="3831" relation="include">
        </childnode>
        <childnode refid="3820" relation="include">
        </childnode>
        <childnode refid="3832" relation="include">
        </childnode>
      </node>
      <node id="3825">
        <label>stdio.h</label>
      </node>
      <node id="3840">
        <label>pixfmt.h</label>
        <link refid="pixfmt_8h"/>
        <childnode refid="3831" relation="include">
        </childnode>
        <childnode refid="3829" relation="include">
        </childnode>
        <childnode refid="3841" relation="include">
        </childnode>
      </node>
      <node id="3822">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="ffmpeg_2libavutil_2file_8h_1a20ab80637ab92af5fbbe4c00be406ad3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_file_map</definition>
        <argsstring>(const char *filename, uint8_t **bufptr, size_t *size, int log_offset, void *log_ctx)</argsstring>
        <name>av_file_map</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> **</type>
          <declname>bufptr</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>log_offset</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>log_ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Read the file with name filename, and put its content in a newly allocated buffer or map it with mmap() when available. In case of success set *bufptr to the read or mmapped buffer, and *size to the size in bytes of the buffer in *bufptr. The returned buffer must be released with <ref refid="ffmpeg_2libavutil_2file_8h_1a12e643af4a329ae6d1d567d8a782af1e" kindref="member">av_file_unmap()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>log_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>loglevel offset used for logging </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>log_ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>context used for logging </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a non negative number in case of success, a negative value corresponding to an AVERROR error code in case of failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/file.h" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ffmpeg_2libavutil_2file_8h_1a12e643af4a329ae6d1d567d8a782af1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void av_file_unmap</definition>
        <argsstring>(uint8_t *bufptr, size_t size)</argsstring>
        <name>av_file_unmap</name>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> *</type>
          <declname>bufptr</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unmap or free the buffer bufptr created by <ref refid="ffmpeg_2libavutil_2file_8h_1a20ab80637ab92af5fbbe4c00be406ad3" kindref="member">av_file_map()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>size in bytes of bufptr, must be the same as returned by <ref refid="ffmpeg_2libavutil_2file_8h_1a20ab80637ab92af5fbbe4c00be406ad3" kindref="member">av_file_map()</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/file.h" line="52" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ffmpeg_2libavutil_2file_8h_1a8c2cb7d30f32e871d353c2f2b2dd6ba2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_tempfile</definition>
        <argsstring>(const char *prefix, char **filename, int log_offset, void *log_ctx)</argsstring>
        <name>av_tempfile</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>prefix</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>filename</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>log_offset</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>log_ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Wrapper to work around the lack of mkstemp() on mingw. Also, tries to create file in /tmp first, if possible. *prefix can be a character constant; *filename will be allocated internally. <simplesect kind="return"><para>file descriptor of opened file (or -1 on error) and opened file name in **filename. </para></simplesect>
<simplesect kind="note"><para>On very old libcs it is necessary to set a secure umask before calling this, <ref refid="ffmpeg_2libavutil_2file_8h_1a8c2cb7d30f32e871d353c2f2b2dd6ba2" kindref="member">av_tempfile()</ref> can&apos;t call umask itself as it is used in libraries and could interfere with the calling application. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/file.h" line="64" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Misc file utilities. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>FFmpeg.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>FFmpeg<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>License<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>version<sp/>2.1<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>FFmpeg<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>License<sp/>along<sp/>with<sp/>FFmpeg;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>Street,<sp/>Fifth<sp/>Floor,<sp/>Boston,<sp/>MA<sp/>02110-1301<sp/>USA</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>AVUTIL_FILE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AVUTIL_FILE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="avutil_8h" kindref="compound">avutil.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ffmpeg_2libavutil_2file_8h_1a20ab80637ab92af5fbbe4c00be406ad3" kindref="member">av_file_map</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="octave__test_8m_1a2ff994e16bf9521154de4cf659a3b689" kindref="member">filename</ref>,<sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/>**bufptr,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*<ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref>,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>log_offset,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*log_ctx);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ffmpeg_2libavutil_2file_8h_1a12e643af4a329ae6d1d567d8a782af1e" kindref="member">av_file_unmap</ref>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/>*bufptr,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ffmpeg_2libavutil_2file_8h_1a8c2cb7d30f32e871d353c2f2b2dd6ba2" kindref="member">av_tempfile</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structprefix" kindref="compound">prefix</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<ref refid="octave__test_8m_1a2ff994e16bf9521154de4cf659a3b689" kindref="member">filename</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>log_offset,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*log_ctx);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>AVUTIL_FILE_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/file.h"/>
  </compounddef>
</doxygen>
