<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="term_8c" kind="file" language="C++">
    <compoundname>term.c</compoundname>
    <includes local="no">termios.h</includes>
    <includes local="no">asm/ioctls.h</includes>
    <includes local="no">sys/ioctl.h</includes>
    <includes local="no">signal.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">unistd.h</includes>
    <includes local="no">stdio.h</includes>
    <incdepgraph>
      <node id="15950">
        <label>stdlib.h</label>
      </node>
      <node id="15946">
        <label>termios.h</label>
      </node>
      <node id="15948">
        <label>sys/ioctl.h</label>
      </node>
      <node id="15947">
        <label>asm/ioctls.h</label>
      </node>
      <node id="15951">
        <label>unistd.h</label>
      </node>
      <node id="15949">
        <label>signal.h</label>
      </node>
      <node id="15945">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/sys/unix/term.c</label>
        <link refid="term.c"/>
        <childnode refid="15946" relation="include">
        </childnode>
        <childnode refid="15947" relation="include">
        </childnode>
        <childnode refid="15948" relation="include">
        </childnode>
        <childnode refid="15949" relation="include">
        </childnode>
        <childnode refid="15950" relation="include">
        </childnode>
        <childnode refid="15951" relation="include">
        </childnode>
        <childnode refid="15952" relation="include">
        </childnode>
      </node>
      <node id="15952">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="term_8c_1a625c9ba637aa53c043a3d8c5ded9a1ff" prot="public" static="no">
        <name>ERROR</name>
        <param><defname>s</defname></param>
        <initializer><ref refid="hashrout_8h_1a9842e92184417c07866419916b2b3ce3" kindref="member">return</ref> (perror(<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>), -1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/sys/unix/term.c" line="100" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/sys/unix/term.c" bodystart="100" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="term_8c_1afcf68e16df70be9eb4a3accfc5ec8e4a" prot="public" static="yes" mutable="no">
        <type>struct termios</type>
        <definition>struct termios current</definition>
        <argsstring></argsstring>
        <name>current</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/sys/unix/term.c" line="22" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/sys/unix/term.c" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="term_8c_1acb0bbc6d54e6cf43cb20b1bdcbcee972" prot="public" static="yes" mutable="no">
        <type>struct termios</type>
        <definition>struct termios initial</definition>
        <argsstring></argsstring>
        <name>initial</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/sys/unix/term.c" line="22" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/sys/unix/term.c" bodystart="28" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="term_8c_1a69eaa5259d86ae3b370969f776ab89e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void ctcinit</definition>
        <argsstring>()</argsstring>
        <name>ctcinit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/sys/unix/term.c" line="22" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/nyx.c" bodystart="1251" bodyend="1251"/>
      </memberdef>
      <memberdef kind="function" id="term_8c_1acdf889802ced703604af9dedb043149b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void term_restore</definition>
        <argsstring>(void)</argsstring>
        <name>term_restore</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/sys/unix/term.c" line="31" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/sys/unix/term.c" bodystart="31" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="term_8c_1ab1e8e59996de7dc367c466841c31594d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void term_exit</definition>
        <argsstring>()</argsstring>
        <name>term_exit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/sys/unix/term.c" line="37" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/sys/unix/term.c" bodystart="37" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="term_8c_1a6328d40568105ab71b964f8ecc86dcef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void term_ctrlz</definition>
        <argsstring>()</argsstring>
        <name>term_ctrlz</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/sys/unix/term.c" line="44" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/sys/unix/term.c" bodystart="44" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="term_8c_1a7bf06c9032187b8a4323c3b709396d29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void term_cont</definition>
        <argsstring>()</argsstring>
        <name>term_cont</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/sys/unix/term.c" line="53" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/sys/unix/term.c" bodystart="53" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="term_8c_1ac7072b9c76dd77ce9900197d0133b0ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void term_init</definition>
        <argsstring>(void)</argsstring>
        <name>term_init</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/sys/unix/term.c" line="60" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/sys/unix/term.c" bodystart="60" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="term_8c_1ad60143345e2fe0b73e88d0af697044dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void term_character</definition>
        <argsstring>(void)</argsstring>
        <name>term_character</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/sys/unix/term.c" line="78" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/sys/unix/term.c" bodystart="78" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="term_8c_1a44d0f18c978f35f1141bdc9a1bf3a988" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void term_line</definition>
        <argsstring>(void)</argsstring>
        <name>term_line</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/sys/unix/term.c" line="93" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/sys/unix/term.c" bodystart="93" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="term_8c_1a139c382b0ac17a0af5e6d39e0bad1d6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int term_testchar</definition>
        <argsstring>()</argsstring>
        <name>term_testchar</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/sys/unix/term.c" line="106" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/sys/unix/term.c" bodystart="106" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="term_8c_1a9a4009b3c409394d8afdd1ddbc22cc4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int term_getchar</definition>
        <argsstring>()</argsstring>
        <name>term_getchar</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/sys/unix/term.c" line="127" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/sys/unix/term.c" bodystart="127" bodyend="132"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>term.c<sp/>--<sp/>Routines<sp/>for<sp/>managing<sp/>terminal<sp/>I/O<sp/>settings<sp/>by<sp/>Alan<sp/>Cox.</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>From<sp/>LJ<sp/>17<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Thanks<sp/>to<sp/>Dave<sp/>Cook<sp/>for<sp/>rescuing<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>CHANGE<sp/>LOG</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>--------------------------------------------------------------------</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>28Apr03<sp/><sp/>dm<sp/><sp/>include<sp/>ioctl.h<sp/>and<sp/>declare<sp/>void<sp/>ctcinit();</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;termios.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__APPLE__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;asm/ioctls.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/ioctl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;signal.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="term_8c_1a69eaa5259d86ae3b370969f776ab89e4" kindref="member">ctcinit</ref>();</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>will<sp/>be<sp/>used<sp/>for<sp/>new<sp/>terminal<sp/>settings.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">termios<sp/>current;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>This<sp/>will<sp/>hold<sp/>the<sp/>initial<sp/>state<sp/>so<sp/>that<sp/>we<sp/>can<sp/>restor<sp/>it<sp/>later.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">termios<sp/>initial;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Restor<sp/>the<sp/>termianl<sp/>settings<sp/>to<sp/>those<sp/>saved<sp/>when<sp/>term_init<sp/>was<sp/>called.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="term_8c_1acdf889802ced703604af9dedb043149b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="term_8c_1acdf889802ced703604af9dedb043149b" kindref="member">term_restore</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>tcsetattr(0,<sp/>TCSANOW,<sp/>&amp;initial);</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Clean<sp/>up<sp/>termianl;<sp/>called<sp/>on<sp/>exit.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="term_8h_1ab1e8e59996de7dc367c466841c31594d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="term_8c_1ab1e8e59996de7dc367c466841c31594d" kindref="member">term_exit</ref>()</highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="term_8c_1acdf889802ced703604af9dedb043149b" kindref="member">term_restore</ref>();</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Will<sp/>be<sp/>called<sp/>when<sp/>contrl-Z<sp/>is<sp/>pressed;</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/>this<sp/>correctly<sp/>handles<sp/>the<sp/>terminal.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="term_8c_1a6328d40568105ab71b964f8ecc86dcef" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="term_8c_1a6328d40568105ab71b964f8ecc86dcef" kindref="member">term_ctrlz</ref>()</highlight></codeline>
<codeline lineno="45"><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>signal(SIGTSTP,<sp/><ref refid="term_8c_1a6328d40568105ab71b964f8ecc86dcef" kindref="member">term_ctrlz</ref>);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="term_8c_1acdf889802ced703604af9dedb043149b" kindref="member">term_restore</ref>();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>kill(getpid(),<sp/>SIGSTOP);</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Will<sp/>be<sp/>called<sp/>when<sp/>the<sp/>application<sp/>is<sp/>continued</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/>after<sp/>having<sp/>been<sp/>stopped.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="term_8c_1a7bf06c9032187b8a4323c3b709396d29" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="term_8c_1a7bf06c9032187b8a4323c3b709396d29" kindref="member">term_cont</ref>()</highlight></codeline>
<codeline lineno="54"><highlight class="normal">{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>signal(SIGCONT,<sp/><ref refid="term_8c_1a7bf06c9032187b8a4323c3b709396d29" kindref="member">term_cont</ref>);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>tcsetattr(0,<sp/>TCSANOW,<sp/>&amp;current);</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Needs<sp/>to<sp/>be<sp/>called<sp/>to<sp/>initialize<sp/>the<sp/>terminal.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="term_8h_1ac743d5797dd0f5f8634b72786c6bbfe0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="term_8c_1ac7072b9c76dd77ce9900197d0133b0ba" kindref="member">term_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="61"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>stdin<sp/>isn&apos;t<sp/>a<sp/>terminal<sp/>this<sp/>fails.</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>But<sp/>then<sp/>so<sp/>does<sp/>tcsetattr(),<sp/>so<sp/>it<sp/>doesn&apos;t<sp/>matter.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>tcgetattr(0,<sp/>&amp;initial);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Save<sp/>a<sp/>copy<sp/>to<sp/>work<sp/>with<sp/>later.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>current<sp/>=<sp/>initial;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>_must_<sp/>clean<sp/>up<sp/>when<sp/>we<sp/>exit.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>signal(SIGINT,<sp/>term_exit);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="term_8c_1a69eaa5259d86ae3b370969f776ab89e4" kindref="member">ctcinit</ref>();<sp/></highlight><highlight class="comment">/*<sp/>XLisp<sp/>wants<sp/>to<sp/>catch<sp/>ctrl<sp/>C<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>signal(SIGQUIT,<sp/><ref refid="term_8c_1ab1e8e59996de7dc367c466841c31594d" kindref="member">term_exit</ref>);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Control-Z<sp/>must<sp/>also<sp/>be<sp/>handled.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>signal(SIGTSTP,<sp/><ref refid="term_8c_1a6328d40568105ab71b964f8ecc86dcef" kindref="member">term_ctrlz</ref>);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>signal(SIGCONT,<sp/><ref refid="term_8c_1a7bf06c9032187b8a4323c3b709396d29" kindref="member">term_cont</ref>);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>atexit(<ref refid="term_8c_1ab1e8e59996de7dc367c466841c31594d" kindref="member">term_exit</ref>);</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Set<sp/>character-by-character<sp/>input<sp/>mode.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="term_8h_1ae44b448f09240ba35998a43c40e9b5da" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="term_8c_1ad60143345e2fe0b73e88d0af697044dd" kindref="member">term_character</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="79"><highlight class="normal">{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>One<sp/>or<sp/>more<sp/>characters<sp/>are<sp/>sufficient<sp/>to<sp/>cause<sp/>a<sp/>read<sp/>return.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>current.c_cc[VMIN]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>No<sp/>timeout;<sp/>read<sp/>waits<sp/>forever<sp/>until<sp/>ready.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>current.c_cc[VTIME]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Line-by-line<sp/>mode<sp/>off<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>current.c_lflag<sp/>&amp;=<sp/>~ICANON;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>READ_LINE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>current.c_lflag<sp/>&amp;=<sp/>~ECHO;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>tcsetattr(0,<sp/>TCSANOW,<sp/>&amp;current);</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Return<sp/>to<sp/>line-by-line<sp/>input<sp/>mode.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="term_8c_1a44d0f18c978f35f1141bdc9a1bf3a988" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="term_8c_1a44d0f18c978f35f1141bdc9a1bf3a988" kindref="member">term_line</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="94"><highlight class="normal">{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>current.c_lflag<sp/>|=<sp/>ICANON;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>tcsetattr(0,<sp/>TCSANOW,<sp/>&amp;current);</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="term_8c_1a625c9ba637aa53c043a3d8c5ded9a1ff" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ERROR(s)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(perror(s),<sp/>-1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>term_testchar<sp/>--<sp/>tell<sp/>whether<sp/>character<sp/>is<sp/>ready<sp/>or<sp/>not,</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/>*<sp/>if<sp/>ready,<sp/>return<sp/>it,<sp/>otherwise<sp/>return<sp/>-2</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="term_8h_1a139c382b0ac17a0af5e6d39e0bad1d6d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="term_8c_1a139c382b0ac17a0af5e6d39e0bad1d6d" kindref="member">term_testchar</ref>()</highlight></codeline>
<codeline lineno="107"><highlight class="normal">{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ioctl(0,<sp/>FIONREAD,<sp/>&amp;n)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="term_8c_1a625c9ba637aa53c043a3d8c5ded9a1ff" kindref="member">ERROR</ref>(</highlight><highlight class="stringliteral">&quot;IOgetchar&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-2;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(read(0,<sp/>&amp;c,<sp/>1))<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EOF;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="term_8c_1a625c9ba637aa53c043a3d8c5ded9a1ff" kindref="member">ERROR</ref>(</highlight><highlight class="stringliteral">&quot;IOgetchar-read&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>term_getchar<sp/>--<sp/>get<sp/>a<sp/>character<sp/>(block<sp/>if<sp/>necessary)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="term_8h_1a9a4009b3c409394d8afdd1ddbc22cc4c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="term_8c_1a9a4009b3c409394d8afdd1ddbc22cc4c" kindref="member">term_getchar</ref>()</highlight></codeline>
<codeline lineno="128"><highlight class="normal">{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rslt<sp/>=<sp/>read(0,<sp/>&amp;c,<sp/>1);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(rslt<sp/>==<sp/>1<sp/>?<sp/>c<sp/>:<sp/>EOF);</highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/sys/unix/term.c"/>
  </compounddef>
</doxygen>
