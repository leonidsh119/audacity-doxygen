<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="struct_lilv_header" kind="struct" language="C++" prot="public">
    <compoundname>LilvHeader</compoundname>
    <includes refid="lilv__internal_8h" local="no">lilv_internal.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_lilv_header_1accd62b6164586c0c3c128d3394ef3160" prot="public" static="no" mutable="no">
        <type><ref refid="lilv_8h_1a91c1745aa6ffca2b6b87c56df6c5ab86" kindref="member">LilvWorld</ref> *</type>
        <definition>LilvWorld* LilvHeader::world</definition>
        <argsstring></argsstring>
        <name>world</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/lilv_internal.h" line="86" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/lilv_internal.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_lilv_header_1adc86de51f1f6d22ee4c28b88ae7b1b85" prot="public" static="no" mutable="no">
        <type><ref refid="lilv_8h_1ae183dca3dca5368d34dbd863a405437b" kindref="member">LilvNode</ref> *</type>
        <definition>LilvNode* LilvHeader::uri</definition>
        <argsstring></argsstring>
        <name>uri</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/lilv_internal.h" line="87" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/lilv_internal.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Header of an LilvPlugin, LilvPluginClass, or LilvUI. Any of these structs may be safely casted to <ref refid="struct_lilv_header" kindref="compound">LilvHeader</ref>, which is used to implement collections using the same comparator. </para>    </detaileddescription>
    <collaborationgraph>
      <node id="6529">
        <label>SordLiteralMetadata</label>
        <link refid="struct_sord_literal_metadata"/>
        <childnode refid="6526" relation="usage">
          <edgelabel>datatype</edgelabel>
        </childnode>
      </node>
      <node id="6534">
        <label>Cursor</label>
        <link refid="struct_cursor"/>
      </node>
      <node id="6526">
        <label>SordNodeImpl</label>
        <link refid="struct_sord_node_impl"/>
        <childnode refid="6527" relation="usage">
          <edgelabel>res</edgelabel>
        </childnode>
        <childnode refid="6528" relation="usage">
          <edgelabel>node</edgelabel>
        </childnode>
        <childnode refid="6529" relation="usage">
          <edgelabel>lit</edgelabel>
        </childnode>
      </node>
      <node id="6535">
        <label>SerdError</label>
        <link refid="struct_serd_error"/>
      </node>
      <node id="6524">
        <label>LilvHeader</label>
        <link refid="struct_lilv_header"/>
        <childnode refid="6525" relation="usage">
          <edgelabel>uri</edgelabel>
        </childnode>
        <childnode refid="6530" relation="usage">
          <edgelabel>world</edgelabel>
        </childnode>
      </node>
      <node id="6525">
        <label>LilvNodeImpl</label>
        <link refid="struct_lilv_node_impl"/>
        <childnode refid="6526" relation="usage">
          <edgelabel>node</edgelabel>
        </childnode>
        <childnode refid="6530" relation="usage">
          <edgelabel>world</edgelabel>
        </childnode>
      </node>
      <node id="6543">
        <label>ZixTreeNodeImpl</label>
        <link refid="struct_zix_tree_node_impl"/>
        <childnode refid="6543" relation="usage">
          <edgelabel>right</edgelabel>
          <edgelabel>left</edgelabel>
          <edgelabel>parent</edgelabel>
        </childnode>
      </node>
      <node id="6541">
        <label>SordModelImpl</label>
        <link refid="struct_sord_model_impl"/>
        <childnode refid="6537" relation="usage">
          <edgelabel>world</edgelabel>
        </childnode>
        <childnode refid="6542" relation="usage">
          <edgelabel>indices</edgelabel>
        </childnode>
      </node>
      <node id="6531">
        <label>LilvPluginClassImpl</label>
        <link refid="struct_lilv_plugin_class_impl"/>
        <childnode refid="6525" relation="usage">
          <edgelabel>parent_uri</edgelabel>
          <edgelabel>uri</edgelabel>
          <edgelabel>label</edgelabel>
        </childnode>
        <childnode refid="6530" relation="usage">
          <edgelabel>world</edgelabel>
        </childnode>
      </node>
      <node id="6540">
        <label>LilvOptions</label>
        <link refid="struct_lilv_options"/>
      </node>
      <node id="6538">
        <label>ZixHashImpl</label>
        <link refid="struct_zix_hash_impl"/>
        <childnode refid="6539" relation="usage">
          <edgelabel>buckets</edgelabel>
        </childnode>
      </node>
      <node id="6542">
        <label>ZixTreeImpl</label>
        <link refid="struct_zix_tree_impl"/>
        <childnode refid="6543" relation="usage">
          <edgelabel>root</edgelabel>
        </childnode>
      </node>
      <node id="6528">
        <label>SerdNode</label>
        <link refid="struct_serd_node"/>
      </node>
      <node id="6536">
        <label>SerdStack</label>
        <link refid="struct_serd_stack"/>
      </node>
      <node id="6537">
        <label>SordWorldImpl</label>
        <link refid="struct_sord_world_impl"/>
        <childnode refid="6538" relation="usage">
          <edgelabel>nodes</edgelabel>
        </childnode>
        <childnode refid="6535" relation="usage">
          <edgelabel>error_sink</edgelabel>
        </childnode>
      </node>
      <node id="6530">
        <label>LilvWorldImpl</label>
        <link refid="struct_lilv_world_impl"/>
        <childnode refid="6531" relation="usage">
          <edgelabel>lv2_plugin_class</edgelabel>
        </childnode>
        <childnode refid="6532" relation="usage">
          <edgelabel>specs</edgelabel>
        </childnode>
        <childnode refid="6533" relation="usage">
          <edgelabel>reader</edgelabel>
        </childnode>
        <childnode refid="6537" relation="usage">
          <edgelabel>world</edgelabel>
        </childnode>
        <childnode refid="6540" relation="usage">
          <edgelabel>opt</edgelabel>
        </childnode>
        <childnode refid="6541" relation="usage">
          <edgelabel>model</edgelabel>
        </childnode>
        <childnode refid="6526" relation="usage">
          <edgelabel>xsd_integer</edgelabel>
          <edgelabel>rdfs_label</edgelabel>
          <edgelabel>lv2_optionalFeature</edgelabel>
          <edgelabel>doap_name</edgelabel>
          <edgelabel>xsd_boolean</edgelabel>
          <edgelabel>lv2_latency</edgelabel>
          <edgelabel>dc_replaces</edgelabel>
          <edgelabel>xsd_base64Binary</edgelabel>
          <edgelabel>rdfs_subClassOf</edgelabel>
          <edgelabel>lv2_requiredFeature</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
        <childnode refid="6542" relation="usage">
          <edgelabel>libs</edgelabel>
        </childnode>
      </node>
      <node id="6539">
        <label>ZixHashEntry</label>
        <link refid="struct_zix_hash_entry"/>
        <childnode refid="6539" relation="usage">
          <edgelabel>next</edgelabel>
        </childnode>
      </node>
      <node id="6533">
        <label>SerdReaderImpl</label>
        <link refid="struct_serd_reader_impl"/>
        <childnode refid="6534" relation="usage">
          <edgelabel>cur</edgelabel>
        </childnode>
        <childnode refid="6528" relation="usage">
          <edgelabel>default_graph</edgelabel>
          <edgelabel>statement_sink</edgelabel>
          <edgelabel>end_sink</edgelabel>
          <edgelabel>prefix_sink</edgelabel>
          <edgelabel>base_sink</edgelabel>
        </childnode>
        <childnode refid="6535" relation="usage">
          <edgelabel>error_sink</edgelabel>
        </childnode>
        <childnode refid="6536" relation="usage">
          <edgelabel>stack</edgelabel>
        </childnode>
      </node>
      <node id="6527">
        <label>SordResourceMetadata</label>
        <link refid="struct_sord_resource_metadata"/>
      </node>
      <node id="6532">
        <label>LilvSpecImpl</label>
        <link refid="struct_lilv_spec_impl"/>
        <childnode refid="6532" relation="usage">
          <edgelabel>next</edgelabel>
        </childnode>
        <childnode refid="6526" relation="usage">
          <edgelabel>bundle</edgelabel>
          <edgelabel>spec</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/lilv_internal.h" line="85" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/lilv_internal.h" bodystart="85" bodyend="88"/>
    <listofallmembers>
      <member refid="struct_lilv_header_1adc86de51f1f6d22ee4c28b88ae7b1b85" prot="public" virt="non-virtual"><scope>LilvHeader</scope><name>uri</name></member>
      <member refid="struct_lilv_header_1accd62b6164586c0c3c128d3394ef3160" prot="public" virt="non-virtual"><scope>LilvHeader</scope><name>world</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
