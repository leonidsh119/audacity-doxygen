<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="ptlinux_8c" kind="file" language="C++">
    <compoundname>ptlinux.c</compoundname>
    <includes local="no">stdlib.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">unistd.h</includes>
    <includes refid="lib-src_2libvorbis_2macos_2compat_2sys_2_types_8h" local="no">sys/types.h</includes>
    <includes refid="porttime_8h" local="yes">porttime.h</includes>
    <includes refid="win_2_projects_2libsndfile_2sys_2time_8h" local="yes">sys/time.h</includes>
    <includes local="yes">sys/resource.h</includes>
    <includes local="yes">sys/timeb.h</includes>
    <includes local="yes">pthread.h</includes>
    <incdepgraph>
      <node id="31142">
        <label>sys/types.h</label>
        <link refid="lib-src_2libvorbis_2macos_2compat_2sys_2_types_8h"/>
        <childnode refid="31143" relation="include">
        </childnode>
        <childnode refid="31144" relation="include">
        </childnode>
        <childnode refid="31145" relation="include">
        </childnode>
      </node>
      <node id="31147">
        <label>stdint.h</label>
      </node>
      <node id="31139">
        <label>stdlib.h</label>
      </node>
      <node id="31146">
        <label>porttime.h</label>
        <link refid="porttime_8h"/>
        <childnode refid="31147" relation="include">
        </childnode>
      </node>
      <node id="31144">
        <label>alloca.h</label>
      </node>
      <node id="31149">
        <label>sys/resource.h</label>
      </node>
      <node id="31151">
        <label>pthread.h</label>
      </node>
      <node id="31143">
        <label>MacTypes.h</label>
      </node>
      <node id="31145">
        <label>string.h</label>
      </node>
      <node id="31141">
        <label>unistd.h</label>
      </node>
      <node id="31150">
        <label>sys/timeb.h</label>
      </node>
      <node id="31148">
        <label>sys/time.h</label>
        <link refid="win_2_projects_2libsndfile_2sys_2time_8h"/>
      </node>
      <node id="31138">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/porttime/ptlinux.c</label>
        <link refid="ptlinux.c"/>
        <childnode refid="31139" relation="include">
        </childnode>
        <childnode refid="31140" relation="include">
        </childnode>
        <childnode refid="31141" relation="include">
        </childnode>
        <childnode refid="31142" relation="include">
        </childnode>
        <childnode refid="31146" relation="include">
        </childnode>
        <childnode refid="31148" relation="include">
        </childnode>
        <childnode refid="31149" relation="include">
        </childnode>
        <childnode refid="31150" relation="include">
        </childnode>
        <childnode refid="31151" relation="include">
        </childnode>
      </node>
      <node id="31140">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structpt__callback__parameters" prot="public">pt_callback_parameters</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="ptlinux_8c_1aa8cecfc5c5c054d2875c03e77b7be15d" prot="public" static="no">
        <name>TRUE</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/porttime/ptlinux.c" line="37" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/porttime/ptlinux.c" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="ptlinux_8c_1aa93f0eb578d23995850d61f7d61c55c1" prot="public" static="no">
        <name>FALSE</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/porttime/ptlinux.c" line="38" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/porttime/ptlinux.c" bodystart="38" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="ptlinux_8c_1ad33ffb4eb28d971aaf7b80b897548657" prot="public" static="yes" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int time_started_flag</definition>
        <argsstring></argsstring>
        <name>time_started_flag</name>
        <initializer>= <ref refid="twolame_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/porttime/ptlinux.c" line="40" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/porttime/ptlinux.c" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ptlinux_8c_1aa8abc76b737dc45c544d187759d64615" prot="public" static="yes" mutable="no">
        <type>struct timeb</type>
        <definition>struct timeb time_offset</definition>
        <argsstring></argsstring>
        <name>time_offset</name>
        <initializer>= {0, 0, 0, 0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/porttime/ptlinux.c" line="40" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/porttime/ptlinux.c" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ptlinux_8c_1a254d595de7ea8b73a13eb284a31bc464" prot="public" static="yes" mutable="no">
        <type>pthread_t</type>
        <definition>pthread_t pt_thread_pid</definition>
        <argsstring></argsstring>
        <name>pt_thread_pid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/porttime/ptlinux.c" line="42" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/porttime/ptlinux.c" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ptlinux_8c_1af60082552d91b9788e6465fa3eef4b0f" prot="public" static="yes" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int pt_thread_created</definition>
        <argsstring></argsstring>
        <name>pt_thread_created</name>
        <initializer>= <ref refid="twolame_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/porttime/ptlinux.c" line="43" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/porttime/ptlinux.c" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="ptlinux_8c_1a041415ad5239115dea8a01975154f44f" prot="public" static="yes" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int pt_callback_proc_id</definition>
        <argsstring></argsstring>
        <name>pt_callback_proc_id</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/porttime/ptlinux.c" line="53" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/porttime/ptlinux.c" bodystart="53" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="ptlinux_8c_1ac2869e29da754c7c0b9b6db5b51f2a43" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
        <definition>static void* Pt_CallbackProc</definition>
        <argsstring>(void *p)</argsstring>
        <name>Pt_CallbackProc</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/porttime/ptlinux.c" line="55" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/porttime/ptlinux.c" bodystart="55" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="ptlinux_8c_1a67205dae78222df6fa27d3c20dd574f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="porttime_8h_1acfaa38b7bc53259ca92514f2b2c02484" kindref="member">PtError</ref></type>
        <definition>PtError Pt_Start</definition>
        <argsstring>(int resolution, PtCallback *callback, void *userData)</argsstring>
        <name>Pt_Start</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>resolution</declname>
        </param>
        <param>
          <type><ref refid="porttime_8h_1a41902497f5f1087f9ad9277a93166fd0" kindref="member">PtCallback</ref> *</type>
          <declname>callback</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>userData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/porttime/ptlinux.c" line="79" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/porttime/ptlinux.c" bodystart="79" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="ptlinux_8c_1a1ec792a0ae207b7243018b84de1bae4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="porttime_8h_1acfaa38b7bc53259ca92514f2b2c02484" kindref="member">PtError</ref></type>
        <definition>PtError Pt_Stop</definition>
        <argsstring>()</argsstring>
        <name>Pt_Stop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/porttime/ptlinux.c" line="102" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/porttime/ptlinux.c" bodystart="102" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="ptlinux_8c_1a8e5fb8ff92c50c61a25d63911b30efc4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int Pt_Started</definition>
        <argsstring>()</argsstring>
        <name>Pt_Started</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/porttime/ptlinux.c" line="115" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/porttime/ptlinux.c" bodystart="115" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="ptlinux_8c_1adc561fd1f67132ffd377ac585477b3e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="porttime_8h_1afae5a66584458fb7e0e9ace7f200a7a3" kindref="member">PtTimestamp</ref></type>
        <definition>PtTimestamp Pt_Time</definition>
        <argsstring>()</argsstring>
        <name>Pt_Time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/porttime/ptlinux.c" line="121" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/porttime/ptlinux.c" bodystart="121" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="ptlinux_8c_1a18ead77ffb575933881f40cb2589a072" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void Pt_Sleep</definition>
        <argsstring>(int32_t duration)</argsstring>
        <name>Pt_Sleep</name>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a37994e3b11c72957c6f454c6ec96d43d" kindref="member">int32_t</ref></type>
          <declname>duration</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/porttime/ptlinux.c" line="132" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/porttime/ptlinux.c" bodystart="132" bodyend="135"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>ptlinux.c<sp/>--<sp/>portable<sp/>timer<sp/>implementation<sp/>for<sp/>linux<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>IMPLEMENTATION<sp/>NOTES<sp/>(by<sp/>Mark<sp/>Nelson):<sp/></highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment">Unlike<sp/>Windows,<sp/>Linux<sp/>has<sp/>no<sp/>system<sp/>call<sp/>to<sp/>request<sp/>a<sp/>periodic<sp/>callback,</highlight></codeline>
<codeline lineno="7"><highlight class="comment">so<sp/>if<sp/>Pt_Start()<sp/>receives<sp/>a<sp/>callback<sp/>parameter,<sp/>it<sp/>must<sp/>create<sp/>a<sp/>thread</highlight></codeline>
<codeline lineno="8"><highlight class="comment">that<sp/>wakes<sp/>up<sp/>periodically<sp/>and<sp/>calls<sp/>the<sp/>provided<sp/>callback<sp/>function.</highlight></codeline>
<codeline lineno="9"><highlight class="comment">If<sp/>running<sp/>as<sp/>superuser,<sp/>use<sp/>setpriority()<sp/>to<sp/>renice<sp/>thread<sp/>to<sp/>-20.<sp/><sp/></highlight></codeline>
<codeline lineno="10"><highlight class="comment">One<sp/>could<sp/>also<sp/>set<sp/>the<sp/>timer<sp/>thread<sp/>to<sp/>a<sp/>real-time<sp/>priority<sp/>(SCHED_FIFO</highlight></codeline>
<codeline lineno="11"><highlight class="comment">and<sp/>SCHED_RR),<sp/>but<sp/>this<sp/>is<sp/>dangerous<sp/>for<sp/>This<sp/>is<sp/>necessary<sp/>because<sp/><sp/></highlight></codeline>
<codeline lineno="12"><highlight class="comment">if<sp/>the<sp/>callback<sp/>hangs<sp/>it&apos;ll<sp/>never<sp/>return.<sp/>A<sp/>more<sp/>serious<sp/>reason</highlight></codeline>
<codeline lineno="13"><highlight class="comment">is<sp/>that<sp/>the<sp/>current<sp/>scheduler<sp/>implementation<sp/>busy-waits<sp/>instead<sp/></highlight></codeline>
<codeline lineno="14"><highlight class="comment">of<sp/>sleeping<sp/>when<sp/>realtime<sp/>threads<sp/>request<sp/>a<sp/>sleep<sp/>of<sp/>&lt;=2ms<sp/>(as<sp/>a<sp/>way<sp/></highlight></codeline>
<codeline lineno="15"><highlight class="comment">to<sp/>get<sp/>around<sp/>the<sp/>10ms<sp/>granularity),<sp/>which<sp/>means<sp/>the<sp/>thread<sp/>would<sp/>never<sp/></highlight></codeline>
<codeline lineno="16"><highlight class="comment">let<sp/>anyone<sp/>else<sp/>on<sp/>the<sp/>CPU.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"></highlight></codeline>
<codeline lineno="18"><highlight class="comment">CHANGE<sp/>LOG</highlight></codeline>
<codeline lineno="19"><highlight class="comment"></highlight></codeline>
<codeline lineno="20"><highlight class="comment">18-Jul-03<sp/>Roger<sp/>Dannenberg<sp/>--<sp/>Simplified<sp/>code<sp/>to<sp/>set<sp/>priority<sp/>of<sp/>timer</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thread.<sp/>Simplified<sp/>implementation<sp/>notes.<sp/></highlight></codeline>
<codeline lineno="22"><highlight class="comment"></highlight></codeline>
<codeline lineno="23"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>stdlib,<sp/>stdio,<sp/>unistd,<sp/>and<sp/>sys/types<sp/>were<sp/>added<sp/>because<sp/>they<sp/>appeared</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>in<sp/>a<sp/>Gentoo<sp/>patch,<sp/>but<sp/>I&apos;m<sp/>not<sp/>sure<sp/>why<sp/>they<sp/>are<sp/>needed.<sp/>-RBD</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="lib-src_2libvorbis_2macos_2compat_2sys_2_types_8h" kindref="compound">sys/types.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="porttime_8h" kindref="compound">porttime.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="win_2_projects_2libsndfile_2sys_2time_8h" kindref="compound">sys/time.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;sys/resource.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;sys/timeb.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pthread.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="ptlinux_8c_1aa8cecfc5c5c054d2875c03e77b7be15d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TRUE<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="ptlinux_8c_1aa93f0eb578d23995850d61f7d61c55c1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FALSE<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>time_started_flag<sp/>=<sp/><ref refid="ptlinux_8c_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timeb<sp/>time_offset<sp/>=<sp/>{0,<sp/>0,<sp/>0,<sp/>0};</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>pthread_t<sp/>pt_thread_pid;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pt_thread_created<sp/>=<sp/><ref refid="ptlinux_8c_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>note<sp/>that<sp/>this<sp/>is<sp/>static<sp/>data<sp/>--<sp/>we<sp/>only<sp/>need<sp/>one<sp/>copy<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="structpt__callback__parameters" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="47" refid="structpt__callback__parameters_1aacadd50758ca9ababae9a1db0b6cbc63" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structpt__callback__parameters_1aacadd50758ca9ababae9a1db0b6cbc63" kindref="member">id</ref>;</highlight></codeline>
<codeline lineno="48" refid="structpt__callback__parameters_1a6fbc94070203cea7f70c85f2fe1b205c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structpt__callback__parameters_1a6fbc94070203cea7f70c85f2fe1b205c" kindref="member">resolution</ref>;</highlight></codeline>
<codeline lineno="49" refid="structpt__callback__parameters_1a678d163dd60f8597c9e79abab9bacfb0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="porttime_8h_1a41902497f5f1087f9ad9277a93166fd0" kindref="member">PtCallback</ref><sp/>*<ref refid="structpt__callback__parameters_1a678d163dd60f8597c9e79abab9bacfb0" kindref="member">callback</ref>;</highlight></codeline>
<codeline lineno="50" refid="structpt__callback__parameters_1ade1aadaf39085d58efdbca011bdd8ed3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structpt__callback__parameters_1ade1aadaf39085d58efdbca011bdd8ed3" kindref="member">userData</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}<sp/><ref refid="structpt__callback__parameters" kindref="compound">pt_callback_parameters</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pt_callback_proc_id<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*Pt_CallbackProc(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>)</highlight></codeline>
<codeline lineno="56"><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpt__callback__parameters" kindref="compound">pt_callback_parameters</ref><sp/>*parameters<sp/>=<sp/>(<ref refid="structpt__callback__parameters" kindref="compound">pt_callback_parameters</ref><sp/>*)<sp/>p;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mytime<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>to<sp/>kill<sp/>a<sp/>process,<sp/>just<sp/>increment<sp/>the<sp/>pt_callback_proc_id<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>printf(&quot;pt_callback_proc_id<sp/>%d,<sp/>id<sp/>%d\n&quot;,<sp/>pt_callback_proc_id,</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parameters-&gt;id);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(geteuid()<sp/>==<sp/>0)<sp/>setpriority(PRIO_PROCESS,<sp/>0,<sp/>-20);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(pt_callback_proc_id<sp/>==<sp/>parameters-&gt;<ref refid="structpt__callback__parameters_1aacadd50758ca9ababae9a1db0b6cbc63" kindref="member">id</ref>)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>wait<sp/>for<sp/>a<sp/>multiple<sp/>of<sp/>resolution<sp/>ms<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timeval<sp/>timeout;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>delay<sp/>=<sp/>mytime++<sp/>*<sp/>parameters-&gt;<ref refid="structpt__callback__parameters_1a6fbc94070203cea7f70c85f2fe1b205c" kindref="member">resolution</ref><sp/>-<sp/><ref refid="ptlinux_8c_1adc561fd1f67132ffd377ac585477b3e0" kindref="member">Pt_Time</ref>();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(delay<sp/>&lt;<sp/>0)<sp/>delay<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timeout.tv_sec<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timeout.tv_usec<sp/>=<sp/>delay<sp/>*<sp/>1000;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>select(0,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>&amp;timeout);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*(parameters-&gt;<ref refid="structpt__callback__parameters_1a678d163dd60f8597c9e79abab9bacfb0" kindref="member">callback</ref>))(<ref refid="ptlinux_8c_1adc561fd1f67132ffd377ac585477b3e0" kindref="member">Pt_Time</ref>(),<sp/>parameters-&gt;<ref refid="structpt__callback__parameters_1ade1aadaf39085d58efdbca011bdd8ed3" kindref="member">userData</ref>);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>printf(&quot;Pt_CallbackProc<sp/>exiting\n&quot;);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>free(parameters);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="ptlinux_8c_1a67205dae78222df6fa27d3c20dd574f5" refkind="member"><highlight class="normal"><ref refid="porttime_8h_1acfaa38b7bc53259ca92514f2b2c02484" kindref="member">PtError</ref><sp/><ref refid="ptlinux_8c_1a67205dae78222df6fa27d3c20dd574f5" kindref="member">Pt_Start</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>resolution,<sp/><ref refid="porttime_8h_1a41902497f5f1087f9ad9277a93166fd0" kindref="member">PtCallback</ref><sp/>*callback,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="xmlparse_8c_1a4b666535c828e23ccd16510a0a1a1943" kindref="member">userData</ref>)</highlight></codeline>
<codeline lineno="80"><highlight class="normal">{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(time_started_flag)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="porttime_8h_1acfaa38b7bc53259ca92514f2b2c02484acbc4fa9cb00ea6f0e5ca6b97e0d3cf02" kindref="member">ptNoError</ref>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>ftime(&amp;time_offset);<sp/></highlight><highlight class="comment">/*<sp/>need<sp/>this<sp/>set<sp/>before<sp/>process<sp/>runs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(callback)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpt__callback__parameters" kindref="compound">pt_callback_parameters</ref><sp/>*parms<sp/>=<sp/>(<ref refid="structpt__callback__parameters" kindref="compound">pt_callback_parameters</ref><sp/>*)<sp/></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structpt__callback__parameters" kindref="compound">pt_callback_parameters</ref>));</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!parms)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="porttime_8h_1acfaa38b7bc53259ca92514f2b2c02484a05521ab2716ca523bf4d7d31c6ba90e1" kindref="member">ptInsufficientMemory</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parms-&gt;<ref refid="structpt__callback__parameters_1aacadd50758ca9ababae9a1db0b6cbc63" kindref="member">id</ref><sp/>=<sp/>pt_callback_proc_id;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parms-&gt;<ref refid="structpt__callback__parameters_1a6fbc94070203cea7f70c85f2fe1b205c" kindref="member">resolution</ref><sp/>=<sp/>resolution;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parms-&gt;<ref refid="structpt__callback__parameters_1a678d163dd60f8597c9e79abab9bacfb0" kindref="member">callback</ref><sp/>=<sp/>callback;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parms-&gt;<ref refid="structpt__callback__parameters_1ade1aadaf39085d58efdbca011bdd8ed3" kindref="member">userData</ref><sp/>=<sp/><ref refid="xmlparse_8c_1a4b666535c828e23ccd16510a0a1a1943" kindref="member">userData</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>pthread_create(&amp;pt_thread_pid,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pt_CallbackProc,<sp/>parms);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>!=<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="porttime_8h_1acfaa38b7bc53259ca92514f2b2c02484a72ce5f2ca96bd5c8d7d556c66ce6881e" kindref="member">ptHostError</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pt_thread_created<sp/>=<sp/><ref refid="ptlinux_8c_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>time_started_flag<sp/>=<sp/><ref refid="ptlinux_8c_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="porttime_8h_1acfaa38b7bc53259ca92514f2b2c02484acbc4fa9cb00ea6f0e5ca6b97e0d3cf02" kindref="member">ptNoError</ref>;</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="ptlinux_8c_1a1ec792a0ae207b7243018b84de1bae4d" refkind="member"><highlight class="normal"><ref refid="porttime_8h_1acfaa38b7bc53259ca92514f2b2c02484" kindref="member">PtError</ref><sp/><ref refid="ptlinux_8c_1a1ec792a0ae207b7243018b84de1bae4d" kindref="member">Pt_Stop</ref>()</highlight></codeline>
<codeline lineno="103"><highlight class="normal">{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>printf(&quot;Pt_Stop<sp/>called\n&quot;);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>pt_callback_proc_id++;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pt_thread_created)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pthread_join(pt_thread_pid,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pt_thread_created<sp/>=<sp/><ref refid="ptlinux_8c_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>time_started_flag<sp/>=<sp/><ref refid="ptlinux_8c_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="porttime_8h_1acfaa38b7bc53259ca92514f2b2c02484acbc4fa9cb00ea6f0e5ca6b97e0d3cf02" kindref="member">ptNoError</ref>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="ptlinux_8c_1a8e5fb8ff92c50c61a25d63911b30efc4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ptlinux_8c_1a8e5fb8ff92c50c61a25d63911b30efc4" kindref="member">Pt_Started</ref>()</highlight></codeline>
<codeline lineno="116"><highlight class="normal">{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>time_started_flag;</highlight></codeline>
<codeline lineno="118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="ptlinux_8c_1adc561fd1f67132ffd377ac585477b3e0" refkind="member"><highlight class="normal"><ref refid="porttime_8h_1afae5a66584458fb7e0e9ace7f200a7a3" kindref="member">PtTimestamp</ref><sp/><ref refid="ptlinux_8c_1adc561fd1f67132ffd377ac585477b3e0" kindref="member">Pt_Time</ref>()</highlight></codeline>
<codeline lineno="122"><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>seconds,<sp/>milliseconds;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timeb<sp/>now;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>ftime(&amp;now);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>seconds<sp/>=<sp/>now.time<sp/>-<sp/>time_offset.time;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>milliseconds<sp/>=<sp/>now.millitm<sp/>-<sp/>time_offset.millitm;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>seconds<sp/>*<sp/>1000<sp/>+<sp/>milliseconds;</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="ptlinux_8c_1a18ead77ffb575933881f40cb2589a072" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ptlinux_8c_1a18ead77ffb575933881f40cb2589a072" kindref="member">Pt_Sleep</ref>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a37994e3b11c72957c6f454c6ec96d43d" kindref="member">int32_t</ref><sp/>duration)</highlight></codeline>
<codeline lineno="133"><highlight class="normal">{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>usleep(duration<sp/>*<sp/>1000);</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/porttime/ptlinux.c"/>
  </compounddef>
</doxygen>
