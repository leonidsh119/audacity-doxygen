<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_trunc_silence_8cpp" kind="file" language="C++">
    <compoundname>TruncSilence.cpp</compoundname>
    <includes refid="_audacity_8h" local="yes">../Audacity.h</includes>
    <includes refid="_trunc_silence_8h" local="yes">TruncSilence.h</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">list</includes>
    <includes local="no">limits</includes>
    <includes local="no">math.h</includes>
    <includes local="no">wx/checkbox.h</includes>
    <includes local="no">wx/choice.h</includes>
    <includes local="no">wx/valgen.h</includes>
    <includes refid="_prefs_8h" local="yes">../Prefs.h</includes>
    <includes refid="_project_8h" local="yes">../Project.h</includes>
    <includes refid="_shuttle_gui_8h" local="yes">../ShuttleGui.h</includes>
    <includes refid="_wave_track_8h" local="yes">../WaveTrack.h</includes>
    <includes refid="valnum_8h" local="yes">../widgets/valnum.h</includes>
    <incdepgraph>
      <node id="44431">
        <label>list</label>
      </node>
      <node id="44454">
        <label>wx/dir.h</label>
      </node>
      <node id="44434">
        <label>wx/choice.h</label>
      </node>
      <node id="44487">
        <label>WaveClip.h</label>
        <link refid="_wave_clip_8h"/>
        <childnode refid="44394" relation="include">
        </childnode>
        <childnode refid="44486" relation="include">
        </childnode>
        <childnode refid="44425" relation="include">
        </childnode>
        <childnode refid="44463" relation="include">
        </childnode>
        <childnode refid="44442" relation="include">
        </childnode>
        <childnode refid="44417" relation="include">
        </childnode>
        <childnode refid="44488" relation="include">
        </childnode>
        <childnode refid="44485" relation="include">
        </childnode>
        <childnode refid="44424" relation="include">
        </childnode>
        <childnode refid="44398" relation="include">
        </childnode>
        <childnode refid="44489" relation="include">
        </childnode>
        <childnode refid="44447" relation="include">
        </childnode>
      </node>
      <node id="44441">
        <label>wx/hashmap.h</label>
      </node>
      <node id="44432">
        <label>limits</label>
      </node>
      <node id="44472">
        <label>toolbars/SelectionBarListener.h</label>
        <link refid="_selection_bar_listener_8h"/>
      </node>
      <node id="44427">
        <label>wx/gauge.h</label>
      </node>
      <node id="44445">
        <label>wx/ffile.h</label>
      </node>
      <node id="44397">
        <label>wx/event.h</label>
      </node>
      <node id="44470">
        <label>audacity/ModuleInterface.h</label>
        <link refid="_module_interface_8h"/>
        <childnode refid="44409" relation="include">
        </childnode>
        <childnode refid="44411" relation="include">
        </childnode>
        <childnode refid="44471" relation="include">
        </childnode>
      </node>
      <node id="44477">
        <label>wx/dcclient.h</label>
      </node>
      <node id="44414">
        <label>wx/cmdline.h</label>
      </node>
      <node id="44393">
        <label>C:/_dev/OpenU/Audacity/audacity/src/effects/TruncSilence.cpp</label>
        <link refid="TruncSilence.cpp"/>
        <childnode refid="44394" relation="include">
        </childnode>
        <childnode refid="44395" relation="include">
        </childnode>
        <childnode refid="44430" relation="include">
        </childnode>
        <childnode refid="44431" relation="include">
        </childnode>
        <childnode refid="44432" relation="include">
        </childnode>
        <childnode refid="44421" relation="include">
        </childnode>
        <childnode refid="44433" relation="include">
        </childnode>
        <childnode refid="44434" relation="include">
        </childnode>
        <childnode refid="44435" relation="include">
        </childnode>
        <childnode refid="44436" relation="include">
        </childnode>
        <childnode refid="44438" relation="include">
        </childnode>
        <childnode refid="44479" relation="include">
        </childnode>
        <childnode refid="44483" relation="include">
        </childnode>
        <childnode refid="44491" relation="include">
        </childnode>
      </node>
      <node id="44410">
        <label>audacity/EffectInterface.h</label>
        <link refid="_effect_interface_8h"/>
        <childnode refid="44409" relation="include">
        </childnode>
        <childnode refid="44411" relation="include">
        </childnode>
        <childnode refid="44408" relation="include">
        </childnode>
        <childnode refid="44412" relation="include">
        </childnode>
        <childnode refid="44416" relation="include">
        </childnode>
      </node>
      <node id="44423">
        <label>../Internat.h</label>
        <link refid="_internat_8h"/>
        <childnode refid="44396" relation="include">
        </childnode>
        <childnode refid="44399" relation="include">
        </childnode>
        <childnode refid="44424" relation="include">
        </childnode>
      </node>
      <node id="44442">
        <label>xml/XMLTagHandler.h</label>
        <link refid="_x_m_l_tag_handler_8h"/>
        <childnode refid="44394" relation="include">
        </childnode>
        <childnode refid="44399" relation="include">
        </childnode>
        <childnode refid="44443" relation="include">
        </childnode>
        <childnode refid="44444" relation="include">
        </childnode>
      </node>
      <node id="44448">
        <label>TrackPanelListener.h</label>
        <link refid="_track_panel_listener_8h"/>
      </node>
      <node id="44420">
        <label>wx/wxchar.h</label>
      </node>
      <node id="44476">
        <label>wx/frame.h</label>
      </node>
      <node id="44463">
        <label>ondemand/ODTaskThread.h</label>
        <link refid="_o_d_task_thread_8h"/>
        <childnode refid="44464" relation="include">
        </childnode>
        <childnode refid="44394" relation="include">
        </childnode>
      </node>
      <node id="44408">
        <label>audacity/ConfigInterface.h</label>
        <link refid="_config_interface_8h"/>
        <childnode refid="44409" relation="include">
        </childnode>
      </node>
      <node id="44429">
        <label>wx/utils.h</label>
      </node>
      <node id="44426">
        <label>wx/evtloop.h</label>
      </node>
      <node id="44481">
        <label>WrappedType.h</label>
        <link refid="_wrapped_type_8h"/>
        <childnode refid="44394" relation="include">
        </childnode>
      </node>
      <node id="44417">
        <label>../Experimental.h</label>
        <link refid="_experimental_8h"/>
        <childnode refid="44418" relation="include">
        </childnode>
      </node>
      <node id="44459">
        <label>wx/timer.h</label>
      </node>
      <node id="44485">
        <label>wx/gdicmn.h</label>
      </node>
      <node id="44446">
        <label>ViewInfo.h</label>
        <link refid="_view_info_8h"/>
        <childnode refid="44447" relation="include">
        </childnode>
        <childnode refid="44419" relation="include">
        </childnode>
      </node>
      <node id="44422">
        <label>../Shuttle.h</label>
        <link refid="_shuttle_8h"/>
      </node>
      <node id="44415">
        <label>wx/fileconf.h</label>
      </node>
      <node id="44468">
        <label>map</label>
      </node>
      <node id="44490">
        <label>WaveTrackLocation.h</label>
        <link refid="_wave_track_location_8h"/>
      </node>
      <node id="44471">
        <label>audacity/PluginInterface.h</label>
        <link refid="_plugin_interface_8h"/>
        <childnode refid="44409" relation="include">
        </childnode>
        <childnode refid="44408" relation="include">
        </childnode>
        <childnode refid="44410" relation="include">
        </childnode>
        <childnode refid="44411" relation="include">
        </childnode>
        <childnode refid="44469" relation="include">
        </childnode>
        <childnode refid="44470" relation="include">
        </childnode>
      </node>
      <node id="44482">
        <label>wx/scrolbar.h</label>
      </node>
      <node id="44488">
        <label>RealFFTf.h</label>
        <link refid="_real_f_f_tf_8h"/>
        <childnode refid="44417" relation="include">
        </childnode>
      </node>
      <node id="44473">
        <label>toolbars/SpectralSelectionBarListener.h</label>
        <link refid="_spectral_selection_bar_listener_8h"/>
        <childnode refid="44394" relation="include">
        </childnode>
      </node>
      <node id="44428">
        <label>wx/stattext.h</label>
      </node>
      <node id="44458">
        <label>wx/socket.h</label>
      </node>
      <node id="44475">
        <label>wx/generic/dragimgg.h</label>
      </node>
      <node id="44411">
        <label>audacity/IdentInterface.h</label>
        <link refid="_ident_interface_8h"/>
        <childnode refid="44409" relation="include">
        </childnode>
      </node>
      <node id="44398">
        <label>wx/list.h</label>
      </node>
      <node id="44433">
        <label>wx/checkbox.h</label>
      </node>
      <node id="44451">
        <label>wx/menu.h</label>
      </node>
      <node id="44418">
        <label>wx/defs.h</label>
      </node>
      <node id="44462">
        <label>wx/window.h</label>
      </node>
      <node id="44406">
        <label>wx/intl.h</label>
      </node>
      <node id="44425">
        <label>../widgets/ProgressDialog.h</label>
        <link refid="_progress_dialog_8h"/>
        <childnode refid="44394" relation="include">
        </childnode>
        <childnode refid="44418" relation="include">
        </childnode>
        <childnode refid="44416" relation="include">
        </childnode>
        <childnode refid="44426" relation="include">
        </childnode>
        <childnode refid="44427" relation="include">
        </childnode>
        <childnode refid="44428" relation="include">
        </childnode>
        <childnode refid="44429" relation="include">
        </childnode>
      </node>
      <node id="44404">
        <label>wx/bmpbuttn.h</label>
      </node>
      <node id="44409">
        <label>audacity/Types.h</label>
        <link refid="include_2audacity_2_types_8h"/>
        <childnode refid="44399" relation="include">
        </childnode>
        <childnode refid="44396" relation="include">
        </childnode>
      </node>
      <node id="44467">
        <label>../PluginManager.h</label>
        <link refid="_plugin_manager_8h"/>
        <childnode refid="44418" relation="include">
        </childnode>
        <childnode refid="44405" relation="include">
        </childnode>
        <childnode refid="44415" relation="include">
        </childnode>
        <childnode refid="44399" relation="include">
        </childnode>
        <childnode refid="44468" relation="include">
        </childnode>
        <childnode refid="44410" relation="include">
        </childnode>
        <childnode refid="44469" relation="include">
        </childnode>
        <childnode refid="44470" relation="include">
        </childnode>
        <childnode refid="44471" relation="include">
        </childnode>
      </node>
      <node id="44416">
        <label>wx/dialog.h</label>
      </node>
      <node id="44435">
        <label>wx/valgen.h</label>
      </node>
      <node id="44440">
        <label>wx/filename.h</label>
      </node>
      <node id="44465">
        <label>effects/EffectManager.h</label>
        <link refid="_effect_manager_8h"/>
        <childnode refid="44417" relation="include">
        </childnode>
        <childnode refid="44434" relation="include">
        </childnode>
        <childnode refid="44416" relation="include">
        </childnode>
        <childnode refid="44397" relation="include">
        </childnode>
        <childnode refid="44466" relation="include">
        </childnode>
        <childnode refid="44399" relation="include">
        </childnode>
        <childnode refid="44410" relation="include">
        </childnode>
        <childnode refid="44467" relation="include">
        </childnode>
        <childnode refid="44400" relation="include">
        </childnode>
      </node>
      <node id="44412">
        <label>audacity/EffectAutomationParameters.h</label>
        <link refid="_effect_automation_parameters_8h"/>
        <childnode refid="44413" relation="include">
        </childnode>
        <childnode refid="44414" relation="include">
        </childnode>
        <childnode refid="44415" relation="include">
        </childnode>
        <childnode refid="44406" relation="include">
        </childnode>
      </node>
      <node id="44436">
        <label>../Prefs.h</label>
        <link refid="_prefs_8h"/>
        <childnode refid="44394" relation="include">
        </childnode>
        <childnode refid="44437" relation="include">
        </childnode>
        <childnode refid="44415" relation="include">
        </childnode>
      </node>
      <node id="44450">
        <label>commands/CommandManager.h</label>
        <link refid="_command_manager_8h"/>
        <childnode refid="44417" relation="include">
        </childnode>
        <childnode refid="44401" relation="include">
        </childnode>
        <childnode refid="44447" relation="include">
        </childnode>
        <childnode refid="44399" relation="include">
        </childnode>
        <childnode refid="44405" relation="include">
        </childnode>
        <childnode refid="44451" relation="include">
        </childnode>
        <childnode refid="44441" relation="include">
        </childnode>
        <childnode refid="44452" relation="include">
        </childnode>
        <childnode refid="44442" relation="include">
        </childnode>
        <childnode refid="44409" relation="include">
        </childnode>
      </node>
      <node id="44395">
        <label>TruncSilence.h</label>
        <link refid="_trunc_silence_8h"/>
        <childnode refid="44396" relation="include">
        </childnode>
        <childnode refid="44397" relation="include">
        </childnode>
        <childnode refid="44398" relation="include">
        </childnode>
        <childnode refid="44399" relation="include">
        </childnode>
        <childnode refid="44400" relation="include">
        </childnode>
      </node>
      <node id="44394">
        <label>../Audacity.h</label>
        <link refid="_audacity_8h"/>
      </node>
      <node id="44461">
        <label>wx/grid.h</label>
      </node>
      <node id="44447">
        <label>vector</label>
      </node>
      <node id="44400">
        <label>Effect.h</label>
        <link refid="src_2effects_2_effect_8h"/>
        <childnode refid="44394" relation="include">
        </childnode>
        <childnode refid="44401" relation="include">
        </childnode>
        <childnode refid="44403" relation="include">
        </childnode>
        <childnode refid="44404" relation="include">
        </childnode>
        <childnode refid="44405" relation="include">
        </childnode>
        <childnode refid="44406" relation="include">
        </childnode>
        <childnode refid="44399" relation="include">
        </childnode>
        <childnode refid="44407" relation="include">
        </childnode>
        <childnode refid="44408" relation="include">
        </childnode>
        <childnode refid="44410" relation="include">
        </childnode>
        <childnode refid="44417" relation="include">
        </childnode>
        <childnode refid="44419" relation="include">
        </childnode>
        <childnode refid="44422" relation="include">
        </childnode>
        <childnode refid="44423" relation="include">
        </childnode>
        <childnode refid="44425" relation="include">
        </childnode>
      </node>
      <node id="44405">
        <label>wx/dynarray.h</label>
      </node>
      <node id="44438">
        <label>../Project.h</label>
        <link refid="_project_8h"/>
        <childnode refid="44394" relation="include">
        </childnode>
        <childnode refid="44417" relation="include">
        </childnode>
        <childnode refid="44439" relation="include">
        </childnode>
        <childnode refid="44446" relation="include">
        </childnode>
        <childnode refid="44448" relation="include">
        </childnode>
        <childnode refid="44449" relation="include">
        </childnode>
        <childnode refid="44450" relation="include">
        </childnode>
        <childnode refid="44465" relation="include">
        </childnode>
        <childnode refid="44442" relation="include">
        </childnode>
        <childnode refid="44472" relation="include">
        </childnode>
        <childnode refid="44473" relation="include">
        </childnode>
        <childnode refid="44418" relation="include">
        </childnode>
        <childnode refid="44397" relation="include">
        </childnode>
        <childnode refid="44457" relation="include">
        </childnode>
        <childnode refid="44474" relation="include">
        </childnode>
        <childnode refid="44475" relation="include">
        </childnode>
        <childnode refid="44476" relation="include">
        </childnode>
        <childnode refid="44406" relation="include">
        </childnode>
        <childnode refid="44477" relation="include">
        </childnode>
        <childnode refid="44478" relation="include">
        </childnode>
      </node>
      <node id="44469">
        <label>audacity/ImporterInterface.h</label>
        <link refid="_importer_interface_8h"/>
        <childnode refid="44409" relation="include">
        </childnode>
        <childnode refid="44408" relation="include">
        </childnode>
        <childnode refid="44411" relation="include">
        </childnode>
      </node>
      <node id="44399">
        <label>wx/string.h</label>
      </node>
      <node id="44452">
        <label>../AudacityApp.h</label>
        <link refid="_audacity_app_8h"/>
        <childnode refid="44394" relation="include">
        </childnode>
        <childnode refid="44453" relation="include">
        </childnode>
        <childnode refid="44414" relation="include">
        </childnode>
        <childnode refid="44454" relation="include">
        </childnode>
        <childnode refid="44397" relation="include">
        </childnode>
        <childnode refid="44455" relation="include">
        </childnode>
        <childnode refid="44406" relation="include">
        </childnode>
        <childnode refid="44456" relation="include">
        </childnode>
        <childnode refid="44457" relation="include">
        </childnode>
        <childnode refid="44458" relation="include">
        </childnode>
        <childnode refid="44459" relation="include">
        </childnode>
        <childnode refid="44460" relation="include">
        </childnode>
        <childnode refid="44463" relation="include">
        </childnode>
        <childnode refid="44417" relation="include">
        </childnode>
      </node>
      <node id="44466">
        <label>wx/listbox.h</label>
      </node>
      <node id="44489">
        <label>wx/msgdlg.h</label>
      </node>
      <node id="44457">
        <label>wx/log.h</label>
      </node>
      <node id="44421">
        <label>math.h</label>
      </node>
      <node id="44439">
        <label>DirManager.h</label>
        <link refid="_dir_manager_8h"/>
        <childnode refid="44398" relation="include">
        </childnode>
        <childnode refid="44399" relation="include">
        </childnode>
        <childnode refid="44440" relation="include">
        </childnode>
        <childnode refid="44441" relation="include">
        </childnode>
        <childnode refid="44429" relation="include">
        </childnode>
        <childnode refid="44409" relation="include">
        </childnode>
        <childnode refid="44442" relation="include">
        </childnode>
      </node>
      <node id="44419">
        <label>../SelectedRegion.h</label>
        <link refid="_selected_region_8h"/>
        <childnode refid="44394" relation="include">
        </childnode>
        <childnode refid="44417" relation="include">
        </childnode>
        <childnode refid="44418" relation="include">
        </childnode>
        <childnode refid="44420" relation="include">
        </childnode>
        <childnode refid="44421" relation="include">
        </childnode>
      </node>
      <node id="44396">
        <label>wx/arrstr.h</label>
      </node>
      <node id="44437">
        <label>wx/config.h</label>
      </node>
      <node id="44480">
        <label>wx/sizer.h</label>
      </node>
      <node id="44456">
        <label>wx/snglinst.h</label>
      </node>
      <node id="44484">
        <label>Track.h</label>
        <link refid="src_2track_8h"/>
        <childnode refid="44394" relation="include">
        </childnode>
        <childnode refid="44401" relation="include">
        </childnode>
        <childnode refid="44447" relation="include">
        </childnode>
        <childnode refid="44405" relation="include">
        </childnode>
        <childnode refid="44397" relation="include">
        </childnode>
        <childnode refid="44485" relation="include">
        </childnode>
        <childnode refid="44424" relation="include">
        </childnode>
        <childnode refid="44399" relation="include">
        </childnode>
        <childnode refid="44417" relation="include">
        </childnode>
        <childnode refid="44486" relation="include">
        </childnode>
        <childnode refid="44442" relation="include">
        </childnode>
      </node>
      <node id="44464">
        <label>wx/thread.h</label>
      </node>
      <node id="44474">
        <label>wx/dragimag.h</label>
      </node>
      <node id="44491">
        <label>../widgets/valnum.h</label>
        <link refid="valnum_8h"/>
        <childnode refid="44418" relation="include">
        </childnode>
      </node>
      <node id="44407">
        <label>wx/tglbtn.h</label>
      </node>
      <node id="44401">
        <label>../MemoryX.h</label>
        <link refid="_memory_x_8h"/>
        <childnode refid="44402" relation="include">
        </childnode>
      </node>
      <node id="44479">
        <label>../ShuttleGui.h</label>
        <link refid="_shuttle_gui_8h"/>
        <childnode refid="44394" relation="include">
        </childnode>
        <childnode refid="44401" relation="include">
        </childnode>
        <childnode refid="44461" relation="include">
        </childnode>
        <childnode refid="44480" relation="include">
        </childnode>
        <childnode refid="44399" relation="include">
        </childnode>
        <childnode refid="44481" relation="include">
        </childnode>
        <childnode refid="44482" relation="include">
        </childnode>
      </node>
      <node id="44460">
        <label>widgets/FileHistory.h</label>
        <link refid="_file_history_8h"/>
        <childnode refid="44418" relation="include">
        </childnode>
        <childnode refid="44434" relation="include">
        </childnode>
        <childnode refid="44405" relation="include">
        </childnode>
        <childnode refid="44397" relation="include">
        </childnode>
        <childnode refid="44461" relation="include">
        </childnode>
        <childnode refid="44399" relation="include">
        </childnode>
        <childnode refid="44462" relation="include">
        </childnode>
      </node>
      <node id="44403">
        <label>set</label>
      </node>
      <node id="44478">
        <label>Menus.h</label>
        <link refid="_menus_8h"/>
        <childnode refid="44417" relation="include">
        </childnode>
      </node>
      <node id="44453">
        <label>wx/app.h</label>
        <link refid="app_8h"/>
      </node>
      <node id="44424">
        <label>wx/longlong.h</label>
      </node>
      <node id="44483">
        <label>../WaveTrack.h</label>
        <link refid="_wave_track_8h"/>
        <childnode refid="44484" relation="include">
        </childnode>
        <childnode refid="44486" relation="include">
        </childnode>
        <childnode refid="44487" relation="include">
        </childnode>
        <childnode refid="44417" relation="include">
        </childnode>
        <childnode refid="44425" relation="include">
        </childnode>
        <childnode refid="44447" relation="include">
        </childnode>
        <childnode refid="44485" relation="include">
        </childnode>
        <childnode refid="44424" relation="include">
        </childnode>
        <childnode refid="44464" relation="include">
        </childnode>
        <childnode refid="44490" relation="include">
        </childnode>
      </node>
      <node id="44430">
        <label>algorithm</label>
      </node>
      <node id="44443">
        <label>stdio.h</label>
      </node>
      <node id="44486">
        <label>SampleFormat.h</label>
        <link refid="_sample_format_8h"/>
        <childnode refid="44394" relation="include">
        </childnode>
        <childnode refid="44418" relation="include">
        </childnode>
        <childnode refid="44409" relation="include">
        </childnode>
      </node>
      <node id="44413">
        <label>locale.h</label>
      </node>
      <node id="44455">
        <label>wx/docview.h</label>
      </node>
      <node id="44402">
        <label>memory</label>
      </node>
      <node id="44444">
        <label>XMLWriter.h</label>
        <link refid="_x_m_l_writer_8h"/>
        <childnode refid="44396" relation="include">
        </childnode>
        <childnode refid="44405" relation="include">
        </childnode>
        <childnode refid="44445" relation="include">
        </childnode>
      </node>
      <node id="44449">
        <label>AudioIOListener.h</label>
        <link refid="_audio_i_o_listener_8h"/>
        <childnode refid="44399" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="class_region_list" prot="public">RegionList</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="_trunc_silence_8cpp_1a4ff3aff0c24826cc436063f26548c34a" prot="public" static="no">
        <name>DefaultAndLimits</name>
        <param><defname>name</defname></param>
        <param><defname>def</defname></param>
        <param><defname>min</defname></param>
        <param><defname>max</defname></param>
        <initializer>static <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> double DEF_ ## <ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref> = (def); \
   static <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> double MIN_ ## <ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref> = (<ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>); \
   static <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> double MAX_ ## <ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref> = (<ref refid="_t_d_stretch_8cpp_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>);</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/TruncSilence.cpp" line="53" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/effects/TruncSilence.cpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="_trunc_silence_8cpp_1aba373eb25dc2f3d2995492627e951b4e" prot="public" static="no">
        <name>kActions</name>
        <enumvalue id="_trunc_silence_8cpp_1aba373eb25dc2f3d2995492627e951b4ea9794e443f5dbbd8a0690aeb4bd82a0ef" prot="public">
          <name>kTruncate</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_trunc_silence_8cpp_1aba373eb25dc2f3d2995492627e951b4ea5ad36f76f762805d173cd453928743fb" prot="public">
          <name>kCompress</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_trunc_silence_8cpp_1aba373eb25dc2f3d2995492627e951b4ea348c9fc2ed7c3e3ed49f5bee497cabb3" prot="public">
          <name>kNumActions</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/TruncSilence.cpp" line="40" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/effects/TruncSilence.cpp" bodystart="39" bodyend="44"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_trunc_silence_8cpp_1af946a0bd7f2940e3a3079625d3a4e50e" prot="public" static="yes" mutable="no">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> wxChar *</type>
        <definition>const wxChar* kActionStrings[kNumActions]</definition>
        <argsstring>[kNumActions]</argsstring>
        <name>kActionStrings</name>
        <initializer>=
{
   <ref refid="_theme_8cpp_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(&quot;Truncate Detected Silence&quot;),

}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/TruncSilence.cpp" line="46" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/effects/TruncSilence.cpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_trunc_silence_8cpp_1abf7dd09f68fc6079cdbcc1367e376b8a" prot="public" static="yes" mutable="no">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref></type>
        <definition>const sampleCount DEF_BlendFrameCount</definition>
        <argsstring></argsstring>
        <name>DEF_BlendFrameCount</name>
        <initializer>= 100</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/TruncSilence.cpp" line="68" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/effects/TruncSilence.cpp" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_trunc_silence_8cpp_1ada8de04b96c402276739f00806a6d246" prot="public" static="yes" mutable="no">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> double</type>
        <definition>const double DEF_MinTruncMs</definition>
        <argsstring></argsstring>
        <name>DEF_MinTruncMs</name>
        <initializer>= 0.001</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/TruncSilence.cpp" line="72" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/effects/TruncSilence.cpp" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_trunc_silence_8cpp_1acead85899b97311047a5aeda15fa612d" prot="public" static="no" mutable="no">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> double</type>
        <definition>const double detectFrac</definition>
        <argsstring></argsstring>
        <name>detectFrac</name>
        <initializer>= 0.4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/TruncSilence.cpp" line="75" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/effects/TruncSilence.cpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_trunc_silence_8cpp_1a45eee0d2b508552af5e238059741b76f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Param</definition>
        <argsstring>(DbIndex, int, XO(&quot;Db&quot;), 0, 0, Enums::NumDbChoices-1, 1)</argsstring>
        <name>Param</name>
        <param>
          <type>DbIndex</type>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        </param>
        <param>
          <type><ref refid="_theme_8cpp_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(&quot;Db&quot;)</type>
        </param>
        <param>
          <type>0</type>
        </param>
        <param>
          <type>0</type>
        </param>
        <param>
          <type><ref refid="class_enums_1af68f2c8c485e9bdce28e025246d686aa" kindref="member">Enums::NumDbChoices</ref>-</type>
          <declname>1</declname>
        </param>
        <param>
          <type>1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/TruncSilence.cpp" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_trunc_silence_8cpp_1aee5e688ec9e6d22d546dce90bac3e208" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Param</definition>
        <argsstring>(ActIndex, int, XO(&quot;Action&quot;), kTruncate, 0, kNumActions-1, 1)</argsstring>
        <name>Param</name>
        <param>
          <type>ActIndex</type>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        </param>
        <param>
          <type><ref refid="_theme_8cpp_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(&quot;Action&quot;)</type>
        </param>
        <param>
          <type><ref refid="_trunc_silence_8cpp_1aba373eb25dc2f3d2995492627e951b4ea9794e443f5dbbd8a0690aeb4bd82a0ef" kindref="member">kTruncate</ref></type>
        </param>
        <param>
          <type>0</type>
        </param>
        <param>
          <type><ref refid="_trunc_silence_8cpp_1aba373eb25dc2f3d2995492627e951b4ea348c9fc2ed7c3e3ed49f5bee497cabb3" kindref="member">kNumActions</ref>-</type>
          <declname>1</declname>
        </param>
        <param>
          <type>1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/TruncSilence.cpp" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_trunc_silence_8cpp_1ad332d9b139425fc8080038caef1ce050" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Param</definition>
        <argsstring>(Minimum, double, XO(&quot;Minimum&quot;), 0.5, 0.001, 10000.0, 1)</argsstring>
        <name>Param</name>
        <param>
          <type>Minimum</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type><ref refid="_theme_8cpp_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(&quot;Minimum&quot;)</type>
        </param>
        <param>
          <type>0.</type>
          <declname>5</declname>
        </param>
        <param>
          <type>0.</type>
          <declname>001</declname>
        </param>
        <param>
          <type>10000.</type>
          <declname>0</declname>
        </param>
        <param>
          <type>1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/TruncSilence.cpp" line="63" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_trunc_silence_8cpp_1a9a0925a8f242c7119f602f6f263f207f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Param</definition>
        <argsstring>(Truncate, double, XO(&quot;Truncate&quot;), 0.5, 0.0, 10000.0, 1)</argsstring>
        <name>Param</name>
        <param>
          <type>Truncate</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type><ref refid="_theme_8cpp_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(&quot;Truncate&quot;)</type>
        </param>
        <param>
          <type>0.</type>
          <declname>5</declname>
        </param>
        <param>
          <type>0.</type>
          <declname>0</declname>
        </param>
        <param>
          <type>10000.</type>
          <declname>0</declname>
        </param>
        <param>
          <type>1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/TruncSilence.cpp" line="64" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_trunc_silence_8cpp_1af94d2a386273c75178870fefc380f0c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Param</definition>
        <argsstring>(Compress, double, XO(&quot;Compress&quot;), 50.0, 0.0, 99.9, 1)</argsstring>
        <name>Param</name>
        <param>
          <type>Compress</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type><ref refid="_theme_8cpp_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(&quot;Compress&quot;)</type>
        </param>
        <param>
          <type>50.</type>
          <declname>0</declname>
        </param>
        <param>
          <type>0.</type>
          <declname>0</declname>
        </param>
        <param>
          <type>99.</type>
          <declname>9</declname>
        </param>
        <param>
          <type>1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/TruncSilence.cpp" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="_trunc_silence_8cpp_1a1f3999d19a966dd922d68cd4116c8aad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Param</definition>
        <argsstring>(Independent, bool, XO(&quot;Independent&quot;), false, false, true, 1)</argsstring>
        <name>Param</name>
        <param>
          <type>Independent</type>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        </param>
        <param>
          <type><ref refid="_theme_8cpp_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(&quot;Independent&quot;)</type>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1a65e9886d74aaee76545e83dd09011727" kindref="member">false</ref></type>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1a65e9886d74aaee76545e83dd09011727" kindref="member">false</ref></type>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1a41f9c5fb8b08eb5dc3edce4dcb37fee7" kindref="member">true</ref></type>
        </param>
        <param>
          <type>1</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/TruncSilence.cpp" line="66" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>Audacity:<sp/>A<sp/>Digital<sp/>Audio<sp/>Editor</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>TruncSilence.cpp</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>Lynn<sp/>Allan<sp/>(from<sp/>DM&apos;s<sp/>Normalize)</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/>Philip<sp/>Van<sp/>Baren<sp/>(more<sp/>options<sp/>and<sp/>boundary<sp/>fixes)</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment">*******************************************************************/</highlight><highlight class="comment">/*******************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Audacity.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_trunc_silence_8h" kindref="compound">TruncSilence.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;list&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/checkbox.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/choice.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/valgen.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Prefs.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Project.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../ShuttleGui.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../WaveTrack.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../widgets/valnum.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Declaration<sp/>of<sp/>RegionList</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="class_region_list" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_region_list" kindref="compound">RegionList</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::list<sp/>&lt;<sp/>Region<sp/>&gt;<sp/>{};</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="_trunc_silence_8cpp_1aba373eb25dc2f3d2995492627e951b4e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="_trunc_silence_8cpp_1aba373eb25dc2f3d2995492627e951b4e" kindref="member">kActions</ref></highlight></codeline>
<codeline lineno="40"><highlight class="normal">{</highlight></codeline>
<codeline lineno="41" refid="_trunc_silence_8cpp_1aba373eb25dc2f3d2995492627e951b4ea9794e443f5dbbd8a0690aeb4bd82a0ef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="_trunc_silence_8cpp_1aba373eb25dc2f3d2995492627e951b4ea9794e443f5dbbd8a0690aeb4bd82a0ef" kindref="member">kTruncate</ref>,</highlight></codeline>
<codeline lineno="42" refid="_trunc_silence_8cpp_1aba373eb25dc2f3d2995492627e951b4ea5ad36f76f762805d173cd453928743fb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="_trunc_silence_8cpp_1aba373eb25dc2f3d2995492627e951b4ea5ad36f76f762805d173cd453928743fb" kindref="member">kCompress</ref>,</highlight></codeline>
<codeline lineno="43" refid="_trunc_silence_8cpp_1aba373eb25dc2f3d2995492627e951b4ea348c9fc2ed7c3e3ed49f5bee497cabb3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="_trunc_silence_8cpp_1aba373eb25dc2f3d2995492627e951b4ea348c9fc2ed7c3e3ed49f5bee497cabb3" kindref="member">kNumActions</ref></highlight></codeline>
<codeline lineno="44"><highlight class="normal">};</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxChar<sp/>*kActionStrings[<ref refid="_trunc_silence_8cpp_1aba373eb25dc2f3d2995492627e951b4ea348c9fc2ed7c3e3ed49f5bee497cabb3" kindref="member">kNumActions</ref>]<sp/>=</highlight></codeline>
<codeline lineno="47"><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><ref refid="_audacity_8h_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(</highlight><highlight class="stringliteral">&quot;Truncate<sp/>Detected<sp/>Silence&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><ref refid="_audacity_8h_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(</highlight><highlight class="stringliteral">&quot;Compress<sp/>Excess<sp/>Silence&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="50"><highlight class="normal">};</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Define<sp/>defaults,<sp/>minimums,<sp/>and<sp/>maximums<sp/>for<sp/>each<sp/>parameter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="_trunc_silence_8cpp_1a4ff3aff0c24826cc436063f26548c34a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DefaultAndLimits(name,<sp/>def,<sp/>min,<sp/>max)<sp/>\</highlight></codeline>
<codeline lineno="54"><highlight class="preprocessor"><sp/><sp/><sp/>static<sp/>const<sp/>double<sp/>DEF_<sp/>##<sp/>name<sp/>=<sp/>(def);<sp/>\</highlight></codeline>
<codeline lineno="55"><highlight class="preprocessor"><sp/><sp/><sp/>static<sp/>const<sp/>double<sp/>MIN_<sp/>##<sp/>name<sp/>=<sp/>(min);<sp/>\</highlight></codeline>
<codeline lineno="56"><highlight class="preprocessor"><sp/><sp/><sp/>static<sp/>const<sp/>double<sp/>MAX_<sp/>##<sp/>name<sp/>=<sp/>(max);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Define<sp/>keys,<sp/>defaults,<sp/>minimums,<sp/>and<sp/>maximums<sp/>for<sp/>the<sp/>effect<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>Name<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Type<sp/><sp/><sp/><sp/><sp/>Key<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Def<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Min<sp/><sp/><sp/><sp/><sp/><sp/>Max<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Scale</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><ref refid="_trunc_silence_8cpp_1a45eee0d2b508552af5e238059741b76f" kindref="member">Param</ref>(<sp/>DbIndex,<sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><ref refid="_audacity_8h_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(</highlight><highlight class="stringliteral">&quot;Db&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_enums_1af68f2c8c485e9bdce28e025246d686aa" kindref="member">Enums::NumDbChoices</ref><sp/>-<sp/>1,<sp/><sp/><sp/>1<sp/><sp/>);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><ref refid="_trunc_silence_8cpp_1a45eee0d2b508552af5e238059741b76f" kindref="member">Param</ref>(<sp/>ActIndex,<sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><ref refid="_audacity_8h_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(</highlight><highlight class="stringliteral">&quot;Action&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/><sp/><ref refid="_trunc_silence_8cpp_1aba373eb25dc2f3d2995492627e951b4ea9794e443f5dbbd8a0690aeb4bd82a0ef" kindref="member">kTruncate</ref>,<sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_trunc_silence_8cpp_1aba373eb25dc2f3d2995492627e951b4ea348c9fc2ed7c3e3ed49f5bee497cabb3" kindref="member">kNumActions</ref><sp/>-<sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1<sp/><sp/>);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><ref refid="_trunc_silence_8cpp_1a45eee0d2b508552af5e238059741b76f" kindref="member">Param</ref>(<sp/>Minimum,<sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/><sp/><ref refid="_audacity_8h_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(</highlight><highlight class="stringliteral">&quot;Minimum&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/><sp/>0.5,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.001,<sp/><sp/><sp/>10000.0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1<sp/><sp/>);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><ref refid="_trunc_silence_8cpp_1a45eee0d2b508552af5e238059741b76f" kindref="member">Param</ref>(<sp/>Truncate,<sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/><sp/><ref refid="_audacity_8h_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(</highlight><highlight class="stringliteral">&quot;Truncate&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/>0.5,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0,<sp/><sp/><sp/><sp/><sp/>10000.0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1<sp/><sp/>);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><ref refid="_trunc_silence_8cpp_1a45eee0d2b508552af5e238059741b76f" kindref="member">Param</ref>(<sp/>Compress,<sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/><sp/><ref refid="_audacity_8h_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(</highlight><highlight class="stringliteral">&quot;Compress&quot;</highlight><highlight class="normal">),<sp/><sp/><sp/>50.0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0,<sp/><sp/><sp/><sp/><sp/>99.9,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1<sp/><sp/>);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><ref refid="_trunc_silence_8cpp_1a45eee0d2b508552af5e238059741b76f" kindref="member">Param</ref>(<sp/>Independent,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">,<sp/><sp/><ref refid="_audacity_8h_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(</highlight><highlight class="stringliteral">&quot;Independent&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/><sp/><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1<sp/><sp/>);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>DEF_BlendFrameCount<sp/>=<sp/>100;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Lower<sp/>bound<sp/>on<sp/>the<sp/>amount<sp/>of<sp/>silence<sp/>to<sp/>find<sp/>at<sp/>a<sp/>time<sp/>--<sp/>this<sp/>avoids</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">//<sp/>detecting<sp/>silence<sp/>repeatedly<sp/>in<sp/>low-frequency<sp/>sounds.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>DEF_MinTruncMs<sp/>=<sp/>0.001;<sp/></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Typical<sp/>fraction<sp/>of<sp/>total<sp/>time<sp/>taken<sp/>by<sp/>detection<sp/>(better<sp/>to<sp/>guess<sp/>low)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="_trunc_silence_8cpp_1acead85899b97311047a5aeda15fa612d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_trunc_silence_8cpp_1acead85899b97311047a5aeda15fa612d" kindref="member">detectFrac</ref><sp/>=<sp/>0.4;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal">BEGIN_EVENT_TABLE(<ref refid="class_effect_trunc_silence" kindref="compound">EffectTruncSilence</ref>,<sp/>wxEvtHandler)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/>EVT_CHOICE(wxID_ANY,<sp/><ref refid="class_effect_trunc_silence" kindref="compound">EffectTruncSilence</ref>::OnControlChange)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/>EVT_TEXT(wxID_ANY,<sp/><ref refid="class_effect_trunc_silence" kindref="compound">EffectTruncSilence</ref>::OnControlChange)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><ref refid="_batch_command_dialog_8cpp_1a8c3469324b3e5d3e6c44c23a418ab937" kindref="member">END_EVENT_TABLE</ref>()</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="class_effect_trunc_silence_1a511e243b524d44a2e1b04d267779c808" refkind="member"><highlight class="normal"><ref refid="class_effect_trunc_silence" kindref="compound">EffectTruncSilence</ref>::<ref refid="class_effect_trunc_silence" kindref="compound">EffectTruncSilence</ref>()</highlight></codeline>
<codeline lineno="83"><highlight class="normal">{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/>mDbChoices<sp/>=<sp/>wxArrayString(<ref refid="class_enums_1af68f2c8c485e9bdce28e025246d686aa" kindref="member">Enums::NumDbChoices</ref>,<sp/><ref refid="class_enums_1a93eebf0af1a98c64fa3af929766f747b" kindref="member">Enums::GetDbChoices</ref>());</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/>mInitialAllowedSilence<sp/>=<sp/>DEF_Minimum;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/>mTruncLongestAllowedSilence<sp/>=<sp/>DEF_Truncate;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/>mSilenceCompressPercent<sp/>=<sp/>DEF_Compress;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/>mTruncDbChoiceIndex<sp/>=<sp/>DEF_DbIndex;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/>mActionIndex<sp/>=<sp/>DEF_ActIndex;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/>mbIndependent<sp/>=<sp/>DEF_Independent;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/>SetLinearEffectFlag(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>used<sp/>to<sp/>be<sp/>changeable<sp/>via<sp/>the<sp/>audacity.cfg/registery.<sp/><sp/>Doubtful<sp/>that<sp/>was</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ever<sp/>done.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Original<sp/>comment:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>mBlendFrameCount<sp/>only<sp/>retrieved<sp/>from<sp/>prefs<sp/>...<sp/>not<sp/>using<sp/>dialog</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>Only<sp/>way<sp/>to<sp/>change<sp/>(for<sp/>windows)<sp/>is<sp/>thru<sp/>registry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>The<sp/>values<sp/>should<sp/>be<sp/>figured<sp/>dynamically<sp/>...<sp/>too<sp/>many<sp/>frames<sp/>could<sp/>be<sp/>invalid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/>mBlendFrameCount<sp/>=<sp/>DEF_BlendFrameCount;</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="class_effect_trunc_silence_1a809e25b236478f443634c3b8c0c31fb4" refkind="member"><highlight class="normal"><ref refid="class_effect_trunc_silence_1a809e25b236478f443634c3b8c0c31fb4" kindref="member">EffectTruncSilence::~EffectTruncSilence</ref>()</highlight></codeline>
<codeline lineno="107"><highlight class="normal">{</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment">//<sp/>IdentInterface<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="class_effect_trunc_silence_1af21c9278ec1517512bcfe5caea204dbd" refkind="member"><highlight class="normal">wxString<sp/><ref refid="class_effect_trunc_silence_1af21c9278ec1517512bcfe5caea204dbd" kindref="member">EffectTruncSilence::GetSymbol</ref>()</highlight></codeline>
<codeline lineno="113"><highlight class="normal">{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_trunc_silence_8h_1a0708f18b83b99c41fb606b83b0f6d698" kindref="member">TRUNCATESILENCE_PLUGIN_SYMBOL</ref>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="class_effect_trunc_silence_1a1ca210d00302b04300c66fd28e40664a" refkind="member"><highlight class="normal">wxString<sp/><ref refid="class_effect_trunc_silence_1a1ca210d00302b04300c66fd28e40664a" kindref="member">EffectTruncSilence::GetDescription</ref>()</highlight></codeline>
<codeline lineno="118"><highlight class="normal">{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_audacity_8h_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(</highlight><highlight class="stringliteral">&quot;Automatically<sp/>reduces<sp/>the<sp/>length<sp/>of<sp/>passages<sp/>where<sp/>the<sp/>volume<sp/>is<sp/>below<sp/>a<sp/>specified<sp/>level&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EffectIdentInterface<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="class_effect_trunc_silence_1a872b2edd882b062498b9f37d95c4d340" refkind="member"><highlight class="normal"><ref refid="_effect_interface_8h_1a4809a7bb3fd1a421902a667cc1405d43" kindref="member">EffectType</ref><sp/><ref refid="class_effect_trunc_silence_1a872b2edd882b062498b9f37d95c4d340" kindref="member">EffectTruncSilence::GetType</ref>()</highlight></codeline>
<codeline lineno="125"><highlight class="normal">{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_effect_interface_8h_1a4809a7bb3fd1a421902a667cc1405d43afd0f1aa24555662b091206287d30521b" kindref="member">EffectTypeProcess</ref>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EffectClientInterface<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="class_effect_trunc_silence_1ac9232fe5cdf3d12f588b9e706be6fb6d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_effect_trunc_silence_1ac9232fe5cdf3d12f588b9e706be6fb6d" kindref="member">EffectTruncSilence::GetAutomationParameters</ref>(<ref refid="class_effect_automation_parameters" kindref="compound">EffectAutomationParameters</ref><sp/>&amp;<sp/>parms)</highlight></codeline>
<codeline lineno="132"><highlight class="normal">{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/>parms.Write(KEY_DbIndex,<sp/><ref refid="class_enums_1a9417be74f0aabc332d79926d0a244a94" kindref="member">Enums::DbChoices</ref>[mTruncDbChoiceIndex]);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/>parms.Write(KEY_ActIndex,<sp/>kActionStrings[mActionIndex]);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/>parms.Write(KEY_Minimum,<sp/>mInitialAllowedSilence);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/>parms.Write(KEY_Truncate,<sp/>mTruncLongestAllowedSilence);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/>parms.Write(KEY_Compress,<sp/>mSilenceCompressPercent);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/>parms.Write(KEY_Independent,<sp/>mbIndependent);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="class_effect_trunc_silence_1ae106b0a91b203ccefc0a866b70b90df6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_effect_trunc_silence_1ae106b0a91b203ccefc0a866b70b90df6" kindref="member">EffectTruncSilence::SetAutomationParameters</ref>(<ref refid="class_effect_automation_parameters" kindref="compound">EffectAutomationParameters</ref><sp/>&amp;<sp/>parms)</highlight></codeline>
<codeline lineno="144"><highlight class="normal">{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/>wxArrayString<sp/>actions(<ref refid="_trunc_silence_8cpp_1aba373eb25dc2f3d2995492627e951b4ea348c9fc2ed7c3e3ed49f5bee497cabb3" kindref="member">kNumActions</ref>,<sp/>kActionStrings);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/>actions.Insert(wxT(</highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">),<sp/>0);<sp/></highlight><highlight class="comment">//<sp/>Compatible<sp/>with<sp/>2.1.0<sp/>and<sp/>before</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/>actions.Insert(wxT(</highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal">),<sp/>1);<sp/></highlight><highlight class="comment">//<sp/>Compatible<sp/>with<sp/>2.1.0<sp/>and<sp/>before</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><ref refid="src_2effects_2_effect_8h_1a0384500117ae1d5b98296bfb7b08d943" kindref="member">ReadAndVerifyDouble</ref>(Minimum);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><ref refid="src_2effects_2_effect_8h_1a0384500117ae1d5b98296bfb7b08d943" kindref="member">ReadAndVerifyDouble</ref>(Truncate);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><ref refid="src_2effects_2_effect_8h_1a0384500117ae1d5b98296bfb7b08d943" kindref="member">ReadAndVerifyDouble</ref>(Compress);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><ref refid="src_2effects_2_effect_8h_1a7f66a6fc07a71dc42f7d8bf7248d210e" kindref="member">ReadAndVerifyEnum</ref>(DbIndex,<sp/>mDbChoices);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><ref refid="src_2effects_2_effect_8h_1a7f66a6fc07a71dc42f7d8bf7248d210e" kindref="member">ReadAndVerifyEnum</ref>(ActIndex,<sp/>actions);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><ref refid="src_2effects_2_effect_8h_1a43f199fdc7a828221d649fd0cd76dd1e" kindref="member">ReadAndVerifyBool</ref>(Independent);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/>mInitialAllowedSilence<sp/>=<sp/>Minimum;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/>mTruncLongestAllowedSilence<sp/>=<sp/>Truncate;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/>mSilenceCompressPercent<sp/>=<sp/>Compress;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/>mTruncDbChoiceIndex<sp/>=<sp/>DbIndex;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/>mActionIndex<sp/>=<sp/>ActIndex;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/>mbIndependent<sp/>=<sp/>Independent;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Readjust<sp/>for<sp/>2.1.0<sp/>or<sp/>before</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mActionIndex<sp/>&gt;=<sp/><ref refid="_trunc_silence_8cpp_1aba373eb25dc2f3d2995492627e951b4ea348c9fc2ed7c3e3ed49f5bee497cabb3" kindref="member">kNumActions</ref>)</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mActionIndex<sp/>-=<sp/><ref refid="_trunc_silence_8cpp_1aba373eb25dc2f3d2995492627e951b4ea348c9fc2ed7c3e3ed49f5bee497cabb3" kindref="member">kNumActions</ref>;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="170"><highlight class="normal">}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Effect<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="class_effect_trunc_silence_1ae700223d7e6f5e6d0ae9ade60f2cb6e4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_effect_trunc_silence_1ae700223d7e6f5e6d0ae9ade60f2cb6e4" kindref="member">EffectTruncSilence::CalcPreviewInputLength</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>previewLength<sp/>*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="175"><highlight class="normal">{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>inputLength<sp/>=<sp/>mT1<sp/>-<sp/>mT0;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>minInputLength<sp/>=<sp/>inputLength;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Master<sp/>list<sp/>of<sp/>silent<sp/>regions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_region_list" kindref="compound">RegionList</ref><sp/>silences;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>with<sp/>the<sp/>whole<sp/>selection<sp/>silent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/>silences.push_back(<ref refid="_v_s_t_control_g_t_k_8h_1a1fea9f23277a9588e3a7adbc48b50e4c" kindref="member">Region</ref>(mT0,<sp/>mT1));</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_selected_track_list_of_kind_iterator" kindref="compound">SelectedTrackListOfKindIterator</ref><sp/>iter(<ref refid="class_track_1a4a6604845139575dfc25be299aeb60efab39033be088537a007532668cb6d16a8" kindref="member">Track::Wave</ref>,<sp/>mTracks);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>whichTrack<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref><sp/>=<sp/>iter.<ref refid="class_track_list_cond_iterator_1a1b09130ef5d92e19a60db05933d89ad5" kindref="member">First</ref>();<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>;<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref><sp/>=<sp/>iter.<ref refid="class_track_list_cond_iterator_1a9e3f44333f6cc2d0171315d389fb6582" kindref="member">Next</ref>())<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wt<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_region_list" kindref="compound">RegionList</ref><sp/>trackSilences;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>index<sp/>=<sp/>wt-&gt;<ref refid="class_wave_track_1afe621ba06a0396725da44e937143972f" kindref="member">TimeToLongSamples</ref>(mT0);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>silentFrame<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>length<sp/>of<sp/>the<sp/>current<sp/>silence</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Analyze(silences,<sp/>trackSilences,<sp/>wt,<sp/>&amp;silentFrame,<sp/>&amp;index,<sp/>whichTrack,<sp/>&amp;inputLength,<sp/>&amp;minInputLength);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>whichTrack++;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>inputLength;</highlight></codeline>
<codeline lineno="201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204" refid="class_effect_trunc_silence_1a7c3ba17d97a79de598a9d035f9e391a6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_effect_trunc_silence_1a7c3ba17d97a79de598a9d035f9e391a6" kindref="member">EffectTruncSilence::Startup</ref>()</highlight></codeline>
<codeline lineno="205"><highlight class="normal">{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/><ref refid="lib_2expat_8h_1a938e186c531ea86ae9adf3c0a649d8fc" kindref="member">base</ref><sp/>=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;/Effects/TruncateSilence/&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Migrate<sp/>settings<sp/>from<sp/>2.1.0<sp/>or<sp/>before</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Already<sp/>migrated,<sp/>so<sp/>bail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Exists(base<sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;Migrated&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>the<sp/>old<sp/>&quot;current&quot;<sp/>settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Exists(base))</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mTruncDbChoiceIndex<sp/>=<sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(base<sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;DbChoiceIndex&quot;</highlight><highlight class="normal">),<sp/>4L);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((mTruncDbChoiceIndex<sp/>&lt;<sp/>0)<sp/>||<sp/>(mTruncDbChoiceIndex<sp/>&gt;=<sp/><ref refid="class_enums_1af68f2c8c485e9bdce28e025246d686aa" kindref="member">Enums::NumDbChoices</ref>))</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>corrupted<sp/>Prefs?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mTruncDbChoiceIndex<sp/>=<sp/>4L;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mActionIndex<sp/>=<sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(base<sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;ProcessChoice&quot;</highlight><highlight class="normal">),<sp/>0L);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((mActionIndex<sp/>&lt;<sp/>0)<sp/>||<sp/>(mActionIndex<sp/>&gt;<sp/>1))</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>corrupted<sp/>Prefs?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mActionIndex<sp/>=<sp/>0L;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(base<sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;InitialAllowedSilence&quot;</highlight><highlight class="normal">),<sp/>&amp;mInitialAllowedSilence,<sp/>0.5);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((mInitialAllowedSilence<sp/>&lt;<sp/>0.001)<sp/>||<sp/>(mInitialAllowedSilence<sp/>&gt;<sp/>10000.0))</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>corrupted<sp/>Prefs?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mInitialAllowedSilence<sp/>=<sp/>0.5;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(base<sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;LongestAllowedSilence&quot;</highlight><highlight class="normal">),<sp/>&amp;mTruncLongestAllowedSilence,<sp/>0.5);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((mTruncLongestAllowedSilence<sp/>&lt;<sp/>0.0)<sp/>||<sp/>(mTruncLongestAllowedSilence<sp/>&gt;<sp/>10000.0))</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>corrupted<sp/>Prefs?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mTruncLongestAllowedSilence<sp/>=<sp/>0.5;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(base<sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;CompressPercent&quot;</highlight><highlight class="normal">),<sp/>&amp;mSilenceCompressPercent,<sp/>50.0);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((mSilenceCompressPercent<sp/>&lt;<sp/>0.0)<sp/>||<sp/>(mSilenceCompressPercent<sp/>&gt;<sp/>100.0))</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>corrupted<sp/>Prefs?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mSilenceCompressPercent<sp/>=<sp/>50.0;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SaveUserPreset(GetCurrentSettingsGroup());</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>not<sp/>migrate<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Write(base<sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;Migrated&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254" refid="class_effect_trunc_silence_1a1c46b1f138fc21cd3d0ae1e81ace10f9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_effect_trunc_silence_1a1c46b1f138fc21cd3d0ae1e81ace10f9" kindref="member">EffectTruncSilence::Process</ref>()</highlight></codeline>
<codeline lineno="255"><highlight class="normal">{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>success<sp/>=</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mbIndependent</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>ProcessIndependently()</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>ProcessAll();</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(success)</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ReplaceProcessedTracks(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>success;</highlight></codeline>
<codeline lineno="265"><highlight class="normal">}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>EffectTruncSilence::ProcessIndependently()</highlight></codeline>
<codeline lineno="268"><highlight class="normal">{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>nGroups<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>syncLock<sp/>=<sp/><ref refid="_project_8cpp_1a897aa047b58617a9acc187fc882e3bb4" kindref="member">::GetActiveProject</ref>()-&gt;<ref refid="class_audacity_project_1aa24fdad451943202139086ff4c4f48bc" kindref="member">IsSyncLocked</ref>();</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>it&apos;s<sp/>permissible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_selected_track_list_of_kind_iterator" kindref="compound">SelectedTrackListOfKindIterator</ref><sp/>iter(<ref refid="class_track_1a4a6604845139575dfc25be299aeb60efab39033be088537a007532668cb6d16a8" kindref="member">Track::Wave</ref>,<sp/>mTracks);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_track" kindref="compound">Track</ref><sp/>*track<sp/>=<sp/>iter.<ref refid="class_track_list_cond_iterator_1a1b09130ef5d92e19a60db05933d89ad5" kindref="member">First</ref>();<sp/>track;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>track<sp/>=<sp/>iter.<ref refid="class_track_list_cond_iterator_1a9e3f44333f6cc2d0171315d389fb6582" kindref="member">Next</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/></highlight><highlight class="comment">//<sp/>skip<sp/>linked<sp/>tracks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(syncLock)<sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>link<sp/>=<sp/>track-&gt;<ref refid="class_track_1afafc93348a2d442bf956fa072d3d769b" kindref="member">GetLink</ref>();</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sync_locked_tracks_iterator" kindref="compound">SyncLockedTracksIterator</ref><sp/>syncIter(mTracks);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_track" kindref="compound">Track</ref><sp/>*track2<sp/>=<sp/>syncIter.<ref refid="class_sync_locked_tracks_iterator_1aa53e5be7c38eca13ad9030c8e497164c" kindref="member">StartWith</ref>(track);<sp/>track2;<sp/>track2<sp/>=<sp/>syncIter.<ref refid="class_sync_locked_tracks_iterator_1a09ddbd2c99421aa60ec63c1ec0ce3f51" kindref="member">Next</ref>())<sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(track2-&gt;GetKind()<sp/>==<sp/><ref refid="class_track_1a4a6604845139575dfc25be299aeb60efab39033be088537a007532668cb6d16a8" kindref="member">Track::Wave</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!(track2<sp/>==<sp/>track<sp/>||<sp/>track2<sp/>==<sp/>link)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>track2-&gt;GetSelected())<sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::wxMessageBox(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;When<sp/>truncating<sp/>independently,<sp/>there<sp/>may<sp/>only<sp/>be<sp/>one<sp/>selected<sp/>audio<sp/>track<sp/>in<sp/>each<sp/>sync-lock<sp/>group.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++nGroups;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nGroups<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>nothing<sp/>to<sp/>do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>do<sp/>the<sp/>work</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>tracks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/>CopyInputTracks(<ref refid="class_track_1a4a6604845139575dfc25be299aeb60efaa2633d5555a8b46b60c277da23d207f4" kindref="member">Track::All</ref>);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>newT1<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>iGroup<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_selected_track_list_of_kind_iterator" kindref="compound">SelectedTrackListOfKindIterator</ref><sp/>iter(<ref refid="class_track_1a4a6604845139575dfc25be299aeb60efab39033be088537a007532668cb6d16a8" kindref="member">Track::Wave</ref>,<sp/>mOutputTracks);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_track" kindref="compound">Track</ref><sp/>*track<sp/>=<sp/>iter.<ref refid="class_track_list_cond_iterator_1a1b09130ef5d92e19a60db05933d89ad5" kindref="member">First</ref>();<sp/>track;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++iGroup,<sp/>track<sp/>=<sp/>iter.<ref refid="class_track_list_cond_iterator_1a9e3f44333f6cc2d0171315d389fb6582" kindref="member">Next</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/></highlight><highlight class="comment">//<sp/>skip<sp/>linked<sp/>tracks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>link<sp/>=<sp/>track-&gt;<ref refid="class_track_1afafc93348a2d442bf956fa072d3d769b" kindref="member">GetLink</ref>();</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="record_8c_1a6c49eed6a71ecf58a51b1f64f4ec8e55" kindref="member">last</ref><sp/>=<sp/>link<sp/>?<sp/>link<sp/>:<sp/>track;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_region_list" kindref="compound">RegionList</ref><sp/>silences;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!FindSilences(silences,<sp/>mOutputTracks,<sp/>track,<sp/>last))</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Treat<sp/>tracks<sp/>in<sp/>the<sp/>sync<sp/>lock<sp/>group<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*groupFirst,<sp/>*groupLast;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(syncLock)<sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sync_locked_tracks_iterator" kindref="compound">SyncLockedTracksIterator</ref><sp/>syncIter(mOutputTracks);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>groupFirst<sp/>=<sp/>syncIter.<ref refid="class_sync_locked_tracks_iterator_1aa53e5be7c38eca13ad9030c8e497164c" kindref="member">StartWith</ref>(track);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>groupLast<sp/>=<sp/>syncIter.<ref refid="class_sync_locked_tracks_iterator_1ac9ce3caff468dfc78feaa008bdcb9783" kindref="member">Last</ref>();</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>groupFirst<sp/>=<sp/>track;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>groupLast<sp/>=<sp/><ref refid="record_8c_1a6c49eed6a71ecf58a51b1f64f4ec8e55" kindref="member">last</ref>;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>totalCutLen<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!DoRemoval(silences,<sp/>iGroup,<sp/>nGroups,<sp/>groupFirst,<sp/>groupLast,<sp/>totalCutLen))</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newT1<sp/>=<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">std::max</ref>(newT1,<sp/>mT1<sp/>-<sp/>totalCutLen);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/>mT1<sp/>=<sp/>newT1;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="340"><highlight class="normal">}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>EffectTruncSilence::ProcessAll()</highlight></codeline>
<codeline lineno="343"><highlight class="normal">{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>tracks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/>CopyInputTracks(<ref refid="class_track_1a4a6604845139575dfc25be299aeb60efaa2633d5555a8b46b60c277da23d207f4" kindref="member">Track::All</ref>);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Master<sp/>list<sp/>of<sp/>silent<sp/>regions.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>list<sp/>should<sp/>always<sp/>be<sp/>kept<sp/>in<sp/>order.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_region_list" kindref="compound">RegionList</ref><sp/>silences;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_selected_track_list_of_kind_iterator" kindref="compound">SelectedTrackListOfKindIterator</ref><sp/>iter(<ref refid="class_track_1a4a6604845139575dfc25be299aeb60efab39033be088537a007532668cb6d16a8" kindref="member">Track::Wave</ref>,<sp/>mTracks);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FindSilences(silences,<sp/>mTracks,<sp/>iter.<ref refid="class_track_list_cond_iterator_1a1b09130ef5d92e19a60db05933d89ad5" kindref="member">First</ref>(),<sp/>iter.<ref refid="class_track_list_cond_iterator_1abf53bb5c398f4fde2ee09fd13a37322e" kindref="member">Last</ref>()))<sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track_list_iterator" kindref="compound">TrackListIterator</ref><sp/>iterOut(mOutputTracks);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>totalCutLen<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>first<sp/>=<sp/>iterOut.<ref refid="class_track_list_iterator_1a81e19731fba5e1b83552aaf36c6f227c" kindref="member">First</ref>();</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(DoRemoval(silences,<sp/>0,<sp/>1,<sp/>first,<sp/>iterOut.<ref refid="class_track_list_iterator_1a071f2a9fd59d6e84718bf43881ca564b" kindref="member">Last</ref>(),<sp/>totalCutLen))<sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mT1<sp/>-=<sp/>totalCutLen;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="363"><highlight class="normal">}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>EffectTruncSilence::FindSilences</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/>(<ref refid="class_region_list" kindref="compound">RegionList</ref><sp/>&amp;silences,<sp/><ref refid="class_track_list" kindref="compound">TrackList</ref><sp/>*list,<sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*firstTrack,<sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*lastTrack)</highlight></codeline>
<codeline lineno="367"><highlight class="normal">{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>with<sp/>the<sp/>whole<sp/>selection<sp/>silent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/>silences.push_back(<ref refid="_v_s_t_control_g_t_k_8h_1a1fea9f23277a9588e3a7adbc48b50e4c" kindref="member">Region</ref>(mT0,<sp/>mT1));</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>non-silent<sp/>regions<sp/>in<sp/>each<sp/>track</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_selected_track_list_of_kind_iterator" kindref="compound">SelectedTrackListOfKindIterator</ref><sp/>iter(<ref refid="class_track_1a4a6604845139575dfc25be299aeb60efab39033be088537a007532668cb6d16a8" kindref="member">Track::Wave</ref>,<sp/>list);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>whichTrack<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>lastSeen<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref><sp/>=<sp/>iter.<ref refid="class_track_list_cond_iterator_1a76bdf28da57b0da798563d6dfb3c347e" kindref="member">StartWith</ref>(firstTrack);<sp/>!lastSeen<sp/>&amp;&amp;<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>;<sp/>t<sp/>=<sp/>iter.<ref refid="class_track_list_cond_iterator_1a9e3f44333f6cc2d0171315d389fb6582" kindref="member">Next</ref>())</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lastSeen<sp/>=<sp/>(t<sp/>==<sp/>lastTrack);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wt<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Smallest<sp/>silent<sp/>region<sp/>to<sp/>detect<sp/>in<sp/>frames</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>minSilenceFrames<sp/>=</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref>(<ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">std::max</ref>(mInitialAllowedSilence,<sp/>DEF_MinTruncMs)<sp/>*<sp/>wt-&gt;<ref refid="class_wave_track_1a18bbe6e1bb4b1016c3a3de835c33b8fa" kindref="member">GetRate</ref>());</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Scan<sp/>the<sp/>track<sp/>for<sp/>silences</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_region_list" kindref="compound">RegionList</ref><sp/>trackSilences;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>index<sp/>=<sp/>wt-&gt;<ref refid="class_wave_track_1afe621ba06a0396725da44e937143972f" kindref="member">TimeToLongSamples</ref>(mT0);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>silentFrame<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Detect<sp/>silences</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>cancelled<sp/>=<sp/>!(Analyze(silences,<sp/>trackSilences,<sp/>wt,<sp/>&amp;silentFrame,<sp/>&amp;index,<sp/>whichTrack));</highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Buffer<sp/>has<sp/>been<sp/>freed,<sp/>so<sp/>we&apos;re<sp/>OK<sp/>to<sp/>return<sp/>if<sp/>cancelled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cancelled)</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReplaceProcessedTracks(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(silentFrame<sp/>&gt;=<sp/>minSilenceFrames)</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Track<sp/>ended<sp/>in<sp/>silence<sp/>--<sp/>record<sp/>region</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trackSilences.push_back(<ref refid="_v_s_t_control_g_t_k_8h_1a1fea9f23277a9588e3a7adbc48b50e4c" kindref="member">Region</ref>(</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wt-&gt;<ref refid="class_wave_track_1a16171cfb9bd446a6d16e0e5ac1695318" kindref="member">LongSamplesToTime</ref>(index<sp/>-<sp/>silentFrame),</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wt-&gt;<ref refid="class_wave_track_1a16171cfb9bd446a6d16e0e5ac1695318" kindref="member">LongSamplesToTime</ref>(index)</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>));</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Intersect<sp/>with<sp/>the<sp/>overall<sp/>silent<sp/>region<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Intersect(silences,<sp/>trackSilences);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>whichTrack++;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="417"><highlight class="normal">}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>EffectTruncSilence::DoRemoval</highlight></codeline>
<codeline lineno="420"><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_region_list" kindref="compound">RegionList</ref><sp/>&amp;silences,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>iGroup,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>nGroups,<sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*firstTrack,<sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*lastTrack,</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;totalCutLen)</highlight></codeline>
<codeline lineno="422"><highlight class="normal">{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>remove<sp/>the<sp/>silent<sp/>regions<sp/>from<sp/>all<sp/>selected<sp/>/<sp/>sync-lock<sp/>selected<sp/>tracks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Loop<sp/>over<sp/>detected<sp/>regions<sp/>in<sp/>reverse<sp/>(so<sp/>cuts<sp/>don&apos;t<sp/>change<sp/>time<sp/>values</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>down<sp/>the<sp/>line)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>whichReg<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/>RegionList::const_reverse_iterator<sp/>rit;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(rit<sp/>=<sp/>silences.rbegin();<sp/>rit<sp/>!=<sp/>silences.rend();<sp/>++rit)</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_region" kindref="compound">Region</ref><sp/>&amp;region<sp/>=<sp/>*rit;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_region" kindref="compound">Region</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>&amp;region;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Progress<sp/>dialog<sp/>and<sp/>cancellation.<sp/>Do<sp/>additional<sp/>cleanup<sp/>before<sp/>return.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>frac<sp/>=<sp/>detectFrac<sp/>+</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(1<sp/>-<sp/><ref refid="_trunc_silence_8cpp_1acead85899b97311047a5aeda15fa612d" kindref="member">detectFrac</ref>)<sp/>*<sp/>(iGroup<sp/>+<sp/>whichReg<sp/>/<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(silences.size()))<sp/>/<sp/>nGroups;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(TotalProgress(frac))</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReplaceProcessedTracks(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Intersection<sp/>may<sp/>create<sp/>regions<sp/>smaller<sp/>than<sp/>allowed;<sp/>ignore<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Allow<sp/>one<sp/>nanosecond<sp/>extra<sp/>for<sp/>consistent<sp/>results<sp/>with<sp/>exact<sp/>milliseconds<sp/>of<sp/>allowed<sp/>silence.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((r-&gt;<ref refid="struct_region_1ae97386d49f9f1ee231793ae71dd990d0" kindref="member">end</ref><sp/>-<sp/>r-&gt;<ref refid="struct_region_1a2241d9f45df2ea4dde3bd752bcb079c0" kindref="member">start</ref>)<sp/>&lt;<sp/>(mInitialAllowedSilence<sp/>-<sp/>0.000000001))</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>NEW<sp/>silence<sp/>length<sp/>as<sp/>requested</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>inLength<sp/>=<sp/>r-&gt;<ref refid="struct_region_1ae97386d49f9f1ee231793ae71dd990d0" kindref="member">end</ref><sp/>-<sp/>r-&gt;<ref refid="struct_region_1a2241d9f45df2ea4dde3bd752bcb079c0" kindref="member">start</ref>;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>outLength;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(mActionIndex)</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_trunc_silence_8cpp_1aba373eb25dc2f3d2995492627e951b4ea9794e443f5dbbd8a0690aeb4bd82a0ef" kindref="member">kTruncate</ref>:</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outLength<sp/>=<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">std::min</ref>(mTruncLongestAllowedSilence,<sp/>inLength);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_trunc_silence_8cpp_1aba373eb25dc2f3d2995492627e951b4ea5ad36f76f762805d173cd453928743fb" kindref="member">kCompress</ref>:</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outLength<sp/>=<sp/>mInitialAllowedSilence<sp/>+</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(inLength<sp/>-<sp/>mInitialAllowedSilence)<sp/>*<sp/>mSilenceCompressPercent<sp/>/<sp/>100.0;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">//<sp/>Not<sp/>currently<sp/>used.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outLength<sp/>=<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">std::min</ref>(mInitialAllowedSilence<sp/>+</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(inLength<sp/>-<sp/>mInitialAllowedSilence)<sp/>*<sp/>mSilenceCompressPercent<sp/>/<sp/>100.0,</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mTruncLongestAllowedSilence);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cutLen<sp/>=<sp/>inLength<sp/>-<sp/>outLength;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>totalCutLen<sp/>+=<sp/>cutLen;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track_list_iterator" kindref="compound">TrackListIterator</ref><sp/>iterOut(mOutputTracks);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>lastSeen<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref><sp/>=<sp/>iterOut.<ref refid="class_track_list_iterator_1a4eea44fac9add00ff978213df1652441" kindref="member">StartWith</ref>(firstTrack);<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref><sp/>&amp;&amp;<sp/>!lastSeen;<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref><sp/>=<sp/>iterOut.<ref refid="class_track_list_iterator_1a2f22c9a396a8803881ca6d9784039706" kindref="member">Next</ref>())</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastSeen<sp/>=<sp/>(<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref><sp/>==<sp/>lastTrack);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>-&gt;GetSelected()<sp/>||<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>-&gt;IsSyncLockSelected()))</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>waste<sp/>time<sp/>past<sp/>the<sp/>end<sp/>of<sp/>a<sp/>track</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>-&gt;GetEndTime()<sp/>&lt;<sp/>r-&gt;<ref refid="struct_region_1a2241d9f45df2ea4dde3bd752bcb079c0" kindref="member">start</ref>)</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cutStart<sp/>=<sp/>(r-&gt;<ref refid="struct_region_1a2241d9f45df2ea4dde3bd752bcb079c0" kindref="member">start</ref><sp/>+<sp/>r-&gt;<ref refid="struct_region_1ae97386d49f9f1ee231793ae71dd990d0" kindref="member">end</ref><sp/>-<sp/>cutLen)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cutEnd<sp/>=<sp/>cutStart<sp/>+<sp/>cutLen;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>-&gt;GetKind()<sp/>==<sp/><ref refid="class_track_1a4a6604845139575dfc25be299aeb60efab39033be088537a007532668cb6d16a8" kindref="member">Track::Wave</ref>)</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>WaveTracks,<sp/>clear<sp/>with<sp/>a<sp/>cross-fade</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wt<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>blendFrames<sp/>=<sp/>mBlendFrameCount;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Round<sp/>start/end<sp/>times<sp/>to<sp/>frame<sp/>boundaries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cutStart<sp/>=<sp/>wt-&gt;<ref refid="class_wave_track_1a16171cfb9bd446a6d16e0e5ac1695318" kindref="member">LongSamplesToTime</ref>(wt-&gt;<ref refid="class_wave_track_1afe621ba06a0396725da44e937143972f" kindref="member">TimeToLongSamples</ref>(cutStart));</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cutEnd<sp/>=<sp/>wt-&gt;<ref refid="class_wave_track_1a16171cfb9bd446a6d16e0e5ac1695318" kindref="member">LongSamplesToTime</ref>(wt-&gt;<ref refid="class_wave_track_1afe621ba06a0396725da44e937143972f" kindref="member">TimeToLongSamples</ref>(cutEnd));</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>the<sp/>cross-fade<sp/>does<sp/>not<sp/>affect<sp/>non-silent<sp/>frames</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(wt-&gt;<ref refid="class_wave_track_1a16171cfb9bd446a6d16e0e5ac1695318" kindref="member">LongSamplesToTime</ref>(blendFrames)<sp/>&gt;<sp/>inLength)</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blendFrames<sp/>=<sp/>wt-&gt;<ref refid="class_wave_track_1afe621ba06a0396725da44e937143972f" kindref="member">TimeToLongSamples</ref>(inLength);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Perform<sp/>cross-fade<sp/>in<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*buf1<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[blendFrames];</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*buf2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[blendFrames];</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>t1<sp/>=<sp/>wt-&gt;<ref refid="class_wave_track_1afe621ba06a0396725da44e937143972f" kindref="member">TimeToLongSamples</ref>(cutStart)<sp/>-<sp/>blendFrames<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>t2<sp/>=<sp/>wt-&gt;<ref refid="class_wave_track_1afe621ba06a0396725da44e937143972f" kindref="member">TimeToLongSamples</ref>(cutEnd)<sp/>-<sp/>blendFrames<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wt-&gt;<ref refid="class_wave_track_1a989e55726466fa1d8ec9aa4322f1c950" kindref="member">Get</ref>((<ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref>)buf1,<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>,<sp/>t1,<sp/>blendFrames);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wt-&gt;<ref refid="class_wave_track_1a989e55726466fa1d8ec9aa4322f1c950" kindref="member">Get</ref>((<ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref>)buf2,<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>,<sp/>t2,<sp/>blendFrames);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>blendFrames;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf1[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>((blendFrames-<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>*<sp/>buf1[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>+<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>*<sp/>buf2[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>])<sp/>/</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(double)blendFrames;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Perform<sp/>the<sp/>cut</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wt-&gt;<ref refid="class_wave_track_1a0643176c8e3d2b4de917b002af73e0ea" kindref="member">Clear</ref>(cutStart,<sp/>cutEnd);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>cross-faded<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wt-&gt;<ref refid="class_wave_track_1aea32b02fe3634c9f6d0a79af3da7c987" kindref="member">Set</ref>((<ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref>)buf1,<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>,<sp/>t1,<sp/>blendFrames);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>buf1;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>buf2;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Non-wave<sp/>tracks:<sp/>just<sp/>do<sp/>a<sp/>sync-lock<sp/>adjust</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>-&gt;SyncLockAdjust(cutEnd,<sp/>cutStart);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++whichReg;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="533"><highlight class="normal">}</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535" refid="class_effect_trunc_silence_1a07cbde72571e71fbfc1c49db17245182" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_effect_trunc_silence_1a07cbde72571e71fbfc1c49db17245182" kindref="member">EffectTruncSilence::Analyze</ref>(<ref refid="class_region_list" kindref="compound">RegionList</ref>&amp;<sp/>silenceList,</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_region_list" kindref="compound">RegionList</ref>&amp;<sp/>trackSilences,</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*<sp/>wt,</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref>*<sp/>silentFrame,</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref>*<sp/>index,</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>whichTrack,</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>inputLength<sp/></highlight><highlight class="comment">/*=<sp/>NULL*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>minInputLength<sp/></highlight><highlight class="comment">/*=<sp/>NULL*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="543"><highlight class="normal">{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Smallest<sp/>silent<sp/>region<sp/>to<sp/>detect<sp/>in<sp/>frames</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>minSilenceFrames<sp/>=<sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref>(<ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">std::max</ref>(<sp/>mInitialAllowedSilence,<sp/>DEF_MinTruncMs)<sp/>*<sp/>wt-&gt;<ref refid="class_wave_track_1a18bbe6e1bb4b1016c3a3de835c33b8fa" kindref="member">GetRate</ref>());</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>truncDbSilenceThreshold<sp/>=<sp/><ref refid="class_enums_1a9664e8d989f758f005a661ef386d3985" kindref="member">Enums::Db2Signal</ref>[mTruncDbChoiceIndex];</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>blockLen<sp/>=<sp/>wt-&gt;<ref refid="class_wave_track_1a59ca00cf8abf1c28d043effec2866870" kindref="member">GetMaxBlockSize</ref>();</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref><sp/>=<sp/>wt-&gt;<ref refid="class_wave_track_1afe621ba06a0396725da44e937143972f" kindref="member">TimeToLongSamples</ref>(mT0);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref><sp/>=<sp/>wt-&gt;<ref refid="class_wave_track_1afe621ba06a0396725da44e937143972f" kindref="member">TimeToLongSamples</ref>(mT1);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>outLength<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>previewLength;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(wxT(</highlight><highlight class="stringliteral">&quot;/AudioIO/EffectsPreviewLen&quot;</highlight><highlight class="normal">),<sp/>&amp;previewLength,<sp/>6.0);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Minimum<sp/>required<sp/>length<sp/>in<sp/>samples.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>previewLen<sp/>=<sp/>previewLength<sp/>*<sp/>wt-&gt;<ref refid="class_wave_track_1a18bbe6e1bb4b1016c3a3de835c33b8fa" kindref="member">GetRate</ref>();</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Keep<sp/>position<sp/>in<sp/>overall<sp/>silences<sp/>list<sp/>for<sp/>optimization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/>RegionList::iterator<sp/>rit(silenceList.begin());</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Allocate<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[blockLen];</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Loop<sp/>through<sp/>current<sp/>track</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*index<sp/>&lt;<sp/>end)<sp/>{</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inputLength<sp/>&amp;&amp;<sp/>((outLength<sp/>&gt;=<sp/>previewLen)<sp/>||<sp/>(*index<sp/>-<sp/>start<sp/>&gt;<sp/>wt-&gt;<ref refid="class_wave_track_1afe621ba06a0396725da44e937143972f" kindref="member">TimeToLongSamples</ref>(*minInputLength))))<sp/>{</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*inputLength<sp/>=<sp/>std::min&lt;double&gt;(*inputLength,<sp/>*minInputLength);</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(outLength<sp/>&gt;=<sp/>previewLen)<sp/>{</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*minInputLength<sp/>=<sp/>*inputLength;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!inputLength)<sp/>{</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Show<sp/>progress<sp/>dialog,<sp/>test<sp/>for<sp/>cancellation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>cancelled<sp/>=<sp/>TotalProgress(</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detectFrac<sp/>*<sp/>(whichTrack<sp/>+<sp/>(*index<sp/>-<sp/>start)<sp/>/<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)(end<sp/>-<sp/>start))<sp/>/</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)GetNumWaveTracks());</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cancelled)<sp/>{</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/><ref refid="recplay_8c_1adbbab5cb2248179d231690a1a02ff977" kindref="member">buffer</ref>;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Optimization:<sp/>if<sp/>not<sp/>in<sp/>a<sp/>silent<sp/>region<sp/>skip<sp/>ahead<sp/>to<sp/>the<sp/>next<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>curTime<sp/>=<sp/>wt-&gt;<ref refid="class_wave_track_1a16171cfb9bd446a6d16e0e5ac1695318" kindref="member">LongSamplesToTime</ref>(*index);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>;<sp/>rit<sp/>!=<sp/>silenceList.end();<sp/>++rit)<sp/>{</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>first<sp/>silent<sp/>region<sp/>ending<sp/>after<sp/>current<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rit-&gt;end<sp/>&gt;=<sp/>curTime)<sp/>{</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rit<sp/>==<sp/>silenceList.end())<sp/>{</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>more<sp/>regions<sp/>--<sp/>no<sp/>need<sp/>to<sp/>process<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>track</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inputLength)<sp/>{</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>available<sp/>samples<sp/>up<sp/>to<sp/>previewLength.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>remainingTrackSamples<sp/>=<sp/>wt-&gt;<ref refid="class_wave_track_1afe621ba06a0396725da44e937143972f" kindref="member">TimeToLongSamples</ref>(wt-&gt;<ref refid="class_wave_track_1a73f81dee4dcb79e0df3bb6a85b866ae1" kindref="member">GetEndTime</ref>())<sp/>-<sp/>*index;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>requiredTrackSamples<sp/>=<sp/>previewLen<sp/>-<sp/>outLength;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outLength<sp/>+=<sp/>(remainingTrackSamples<sp/>&gt;<sp/>requiredTrackSamples)?<sp/>requiredTrackSamples<sp/>:<sp/>remainingTrackSamples;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rit-&gt;start<sp/>&gt;<sp/>curTime)<sp/>{</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>End<sp/>current<sp/>silent<sp/>region,<sp/>skip<sp/>ahead</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*silentFrame<sp/>&gt;=<sp/>minSilenceFrames)<sp/><sp/>{</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trackSilences.push_back(<ref refid="_v_s_t_control_g_t_k_8h_1a1fea9f23277a9588e3a7adbc48b50e4c" kindref="member">Region</ref>(</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wt-&gt;<ref refid="class_wave_track_1a16171cfb9bd446a6d16e0e5ac1695318" kindref="member">LongSamplesToTime</ref>(*index<sp/>-<sp/>*silentFrame),</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wt-&gt;<ref refid="class_wave_track_1a16171cfb9bd446a6d16e0e5ac1695318" kindref="member">LongSamplesToTime</ref>(*index)</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>));</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*silentFrame<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>newIndex<sp/>=<sp/>wt-&gt;<ref refid="class_wave_track_1afe621ba06a0396725da44e937143972f" kindref="member">TimeToLongSamples</ref>(rit-&gt;start);</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inputLength)<sp/>{</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>requiredTrackSamples<sp/>=<sp/>previewLen<sp/>-<sp/>outLength;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>non-silent<sp/>sample<sp/>to<sp/>outLength</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outLength<sp/>+=<sp/>((newIndex<sp/>-<sp/>*index)<sp/>&gt;<sp/>requiredTrackSamples)?<sp/>requiredTrackSamples<sp/>:<sp/>newIndex<sp/>-<sp/>*index;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*index<sp/>=<sp/>newIndex;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>End<sp/>of<sp/>optimization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Limit<sp/>size<sp/>of<sp/>current<sp/>block<sp/>if<sp/>we&apos;ve<sp/>reached<sp/>the<sp/>end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref><sp/>=<sp/>blockLen;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*index<sp/>+<sp/>count)<sp/>&gt;<sp/><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>)<sp/>{</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>=<sp/>end<sp/>-<sp/>*index;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fill<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wt-&gt;<ref refid="class_wave_track_1a989e55726466fa1d8ec9aa4322f1c950" kindref="member">Get</ref>((<ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref>)(buffer),<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>,<sp/>*index,<sp/>count);</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Look<sp/>for<sp/>silenceList<sp/>in<sp/>current<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref>;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inputLength<sp/>&amp;&amp;<sp/>((outLength<sp/>&gt;=<sp/>previewLen)<sp/>||<sp/>(outLength<sp/>&gt;<sp/>wt-&gt;<ref refid="class_wave_track_1afe621ba06a0396725da44e937143972f" kindref="member">TimeToLongSamples</ref>(*minInputLength))))<sp/>{</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*inputLength<sp/>=<sp/>wt-&gt;<ref refid="class_wave_track_1a16171cfb9bd446a6d16e0e5ac1695318" kindref="member">LongSamplesToTime</ref>(*index<sp/>+<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>-<sp/>wt-&gt;<ref refid="class_wave_track_1a16171cfb9bd446a6d16e0e5ac1695318" kindref="member">LongSamplesToTime</ref>(start);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(buffer[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>])<sp/>&lt;<sp/>truncDbSilenceThreshold)<sp/>{</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*silentFrame)++;</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>allowed<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*silentFrame<sp/>&gt;=<sp/>minSilenceFrames)<sp/>{</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inputLength)<sp/>{</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(mActionIndex)<sp/>{</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_trunc_silence_8cpp_1aba373eb25dc2f3d2995492627e951b4ea9794e443f5dbbd8a0690aeb4bd82a0ef" kindref="member">kTruncate</ref>:</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outLength<sp/>+=<sp/>wt-&gt;<ref refid="class_wave_track_1afe621ba06a0396725da44e937143972f" kindref="member">TimeToLongSamples</ref>(mTruncLongestAllowedSilence);</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_trunc_silence_8cpp_1aba373eb25dc2f3d2995492627e951b4ea5ad36f76f762805d173cd453928743fb" kindref="member">kCompress</ref>:</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>allowed<sp/>=<sp/>wt-&gt;<ref refid="class_wave_track_1afe621ba06a0396725da44e937143972f" kindref="member">TimeToLongSamples</ref>(mInitialAllowedSilence);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outLength<sp/>+=<sp/>allowed<sp/>+</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*silentFrame<sp/>-<sp/>allowed)<sp/>*<sp/>mSilenceCompressPercent<sp/>/<sp/>100.0;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>default:<sp/>//<sp/>Not<sp/>currently<sp/>used.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Record<sp/>the<sp/>silent<sp/>region</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_region" kindref="compound">Region</ref><sp/>*r<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="_v_s_t_control_g_t_k_8h_1a1fea9f23277a9588e3a7adbc48b50e4c" kindref="member">Region</ref>;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r-&gt;<ref refid="struct_region_1a2241d9f45df2ea4dde3bd752bcb079c0" kindref="member">start</ref><sp/>=<sp/>wt-&gt;<ref refid="class_wave_track_1a16171cfb9bd446a6d16e0e5ac1695318" kindref="member">LongSamplesToTime</ref>(*index<sp/>+<sp/>i<sp/>-<sp/>*silentFrame);</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r-&gt;<ref refid="struct_region_1ae97386d49f9f1ee231793ae71dd990d0" kindref="member">end</ref><sp/>=<sp/>wt-&gt;<ref refid="class_wave_track_1a16171cfb9bd446a6d16e0e5ac1695318" kindref="member">LongSamplesToTime</ref>(*index<sp/>+<sp/>i);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trackSilences.push_back(<ref refid="_v_s_t_control_g_t_k_8h_1a1fea9f23277a9588e3a7adbc48b50e4c" kindref="member">Region</ref>(</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wt-&gt;<ref refid="class_wave_track_1a16171cfb9bd446a6d16e0e5ac1695318" kindref="member">LongSamplesToTime</ref>(*index<sp/>+<sp/>i<sp/>-<sp/>*silentFrame),</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wt-&gt;<ref refid="class_wave_track_1a16171cfb9bd446a6d16e0e5ac1695318" kindref="member">LongSamplesToTime</ref>(*index<sp/>+<sp/>i)</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>));</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inputLength)<sp/>{<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>included<sp/>as<sp/>part<sp/>of<sp/>non-silence</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outLength<sp/>+=<sp/>*silentFrame;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*silentFrame<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inputLength)<sp/>{</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++outLength;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>non-silent<sp/>sample<sp/>to<sp/>outLength</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Next<sp/>block</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*index<sp/>+=<sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref>;</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/><ref refid="recplay_8c_1adbbab5cb2248179d231690a1a02ff977" kindref="member">buffer</ref>;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inputLength)<sp/>{</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*inputLength<sp/>=<sp/>std::min&lt;double&gt;(*inputLength,<sp/>*minInputLength);</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(outLength<sp/>&gt;=<sp/>previewLen)<sp/>{</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*minInputLength<sp/>=<sp/>*inputLength;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="693"><highlight class="normal">}</highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="696" refid="class_effect_trunc_silence_1a9153eda419fbe1b6877fe30dff8b1f2a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_effect_trunc_silence_1a9153eda419fbe1b6877fe30dff8b1f2a" kindref="member">EffectTruncSilence::PopulateOrExchange</ref>(<ref refid="class_shuttle_gui" kindref="compound">ShuttleGui</ref><sp/>&amp;<sp/><ref refid="xlftab_8c_1af933676109efed7ab34cea71d748a517" kindref="member">S</ref>)</highlight></codeline>
<codeline lineno="697"><highlight class="normal">{</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/>wxASSERT(<ref refid="_trunc_silence_8cpp_1aba373eb25dc2f3d2995492627e951b4ea348c9fc2ed7c3e3ed49f5bee497cabb3" kindref="member">kNumActions</ref><sp/>==<sp/>WXSIZEOF(kActionStrings));</highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/>wxArrayString<sp/>actionChoices;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/><ref refid="_trunc_silence_8cpp_1aba373eb25dc2f3d2995492627e951b4ea348c9fc2ed7c3e3ed49f5bee497cabb3" kindref="member">kNumActions</ref>;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>actionChoices.Add(wxGetTranslation(kActionStrings[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]));</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_1a3a5b4056473e3a9f240a8e9b173424fe" kindref="member">AddSpace</ref>(0,<sp/>5);</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1af3077c7ec169ef519b6d7afa80ec9a64" kindref="member">StartStatic</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Detect<sp/>Silence&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1ae71efe4837e02680f854a905b3b27120" kindref="member">StartMultiColumn</ref>(3,<sp/>wxALIGN_CENTER_HORIZONTAL);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Threshold</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mTruncDbChoice<sp/>=<sp/>S.<ref refid="class_shuttle_gui_base_1af7a1f08500177bfe4cb37255043aebc0" kindref="member">AddChoice</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Level:&quot;</highlight><highlight class="normal">),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),<sp/>&amp;mDbChoices);</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mTruncDbChoice-&gt;SetValidator(wxGenericValidator(&amp;mTruncDbChoiceIndex));</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_1a80bb6fc1ac47561ff1716904fb73041c" kindref="member">SetSizeHints</ref>(-1,<sp/>-1);</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_1a3a5b4056473e3a9f240a8e9b173424fe" kindref="member">AddSpace</ref>(0);<sp/></highlight><highlight class="comment">//<sp/>&apos;choices&apos;<sp/>already<sp/>includes<sp/>units.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ignored<sp/>silence</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FloatingPointValidator&lt;double&gt;<sp/>vldDur(3,<sp/>&amp;mInitialAllowedSilence,<sp/>NUM_VAL_NO_TRAILING_ZEROES);</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vldDur.SetRange(MIN_Minimum,<sp/>MAX_Minimum);</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mInitialAllowedSilenceT<sp/>=<sp/>S.<ref refid="class_shuttle_gui_base_1aa9df960a9ed7fdffec419912b995788e" kindref="member">AddTextBox</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Duration:&quot;</highlight><highlight class="normal">),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),<sp/>12);</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mInitialAllowedSilenceT-&gt;SetValidator(vldDur);</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a54816a02cbcc4d09b3d40c2b731ba9e5" kindref="member">AddUnits</ref>(wxT(</highlight><highlight class="stringliteral">&quot;seconds&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a1a676a57ca191fde04599e4199e3f7f4" kindref="member">EndMultiColumn</ref>();</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1ac6ae219c1f976c24fc88a07ffdaee4cd" kindref="member">EndStatic</ref>();</highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1af3077c7ec169ef519b6d7afa80ec9a64" kindref="member">StartStatic</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Action&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1aa456756283f789e26c6841eb3ca55c72" kindref="member">StartHorizontalLay</ref>();</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Action<sp/>choices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mActionChoice<sp/>=<sp/>S.<ref refid="class_shuttle_gui_base_1af7a1f08500177bfe4cb37255043aebc0" kindref="member">AddChoice</ref>(wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),<sp/>&amp;actionChoices);</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mActionChoice-&gt;SetValidator(wxGenericValidator(&amp;mActionIndex));</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_1a80bb6fc1ac47561ff1716904fb73041c" kindref="member">SetSizeHints</ref>(-1,<sp/>-1);</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a80917a37e36156f398a24436c1f3dba9" kindref="member">EndHorizontalLay</ref>();</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1ae71efe4837e02680f854a905b3b27120" kindref="member">StartMultiColumn</ref>(3,<sp/>wxALIGN_CENTER_HORIZONTAL);</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Truncation<sp/>/<sp/>Compression<sp/>factor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FloatingPointValidator&lt;double&gt;<sp/>vldTrunc(3,<sp/>&amp;mTruncLongestAllowedSilence,<sp/>NUM_VAL_NO_TRAILING_ZEROES);</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vldTrunc.SetRange(MIN_Truncate,<sp/>MAX_Truncate);</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mTruncLongestAllowedSilenceT<sp/>=<sp/>S.<ref refid="class_shuttle_gui_base_1aa9df960a9ed7fdffec419912b995788e" kindref="member">AddTextBox</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Truncate<sp/>to:&quot;</highlight><highlight class="normal">),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),<sp/>12);</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mTruncLongestAllowedSilenceT-&gt;SetValidator(vldTrunc);</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a54816a02cbcc4d09b3d40c2b731ba9e5" kindref="member">AddUnits</ref>(wxT(</highlight><highlight class="stringliteral">&quot;seconds&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FloatingPointValidator&lt;double&gt;<sp/>vldComp(3,<sp/>&amp;mSilenceCompressPercent,<sp/>NUM_VAL_NO_TRAILING_ZEROES);</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vldComp.SetRange(MIN_Compress,<sp/>MAX_Compress);</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mSilenceCompressPercentT<sp/>=<sp/>S.<ref refid="class_shuttle_gui_base_1aa9df960a9ed7fdffec419912b995788e" kindref="member">AddTextBox</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Compress<sp/>to:&quot;</highlight><highlight class="normal">),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),<sp/>12);</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mSilenceCompressPercentT-&gt;SetValidator(vldComp);</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a54816a02cbcc4d09b3d40c2b731ba9e5" kindref="member">AddUnits</ref>(wxT(</highlight><highlight class="stringliteral">&quot;percent&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a1a676a57ca191fde04599e4199e3f7f4" kindref="member">EndMultiColumn</ref>();</highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1ae71efe4837e02680f854a905b3b27120" kindref="member">StartMultiColumn</ref>(2,<sp/>wxALIGN_CENTER_HORIZONTAL);</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mIndependent<sp/>=<sp/>S.<ref refid="class_shuttle_gui_base_1a8c68a737f8ab224fefa8b4f452c38073" kindref="member">AddCheckBox</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Truncate<sp/>tracks<sp/>independently&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mbIndependent<sp/>?<sp/>wxT(</highlight><highlight class="stringliteral">&quot;true&quot;</highlight><highlight class="normal">)<sp/>:<sp/>wxT(</highlight><highlight class="stringliteral">&quot;false&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a1a676a57ca191fde04599e4199e3f7f4" kindref="member">EndMultiColumn</ref>();</highlight></codeline>
<codeline lineno="763"><highlight class="normal">}</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1ac6ae219c1f976c24fc88a07ffdaee4cd" kindref="member">EndStatic</ref>();</highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/>UpdateUI();</highlight></codeline>
<codeline lineno="767"><highlight class="normal">}</highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight></codeline>
<codeline lineno="769" refid="class_effect_trunc_silence_1aa6361e8084e260e18c69a29e4c5266df" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_effect_trunc_silence_1aa6361e8084e260e18c69a29e4c5266df" kindref="member">EffectTruncSilence::TransferDataToWindow</ref>()</highlight></codeline>
<codeline lineno="770"><highlight class="normal">{</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mUIParent-&gt;TransferDataToWindow())</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="777"><highlight class="normal">}</highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight></codeline>
<codeline lineno="779" refid="class_effect_trunc_silence_1a4c1f1ae842e17ddf8b1f22bf8702fccf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_effect_trunc_silence_1a4c1f1ae842e17ddf8b1f22bf8702fccf" kindref="member">EffectTruncSilence::TransferDataFromWindow</ref>()</highlight></codeline>
<codeline lineno="780"><highlight class="normal">{</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mUIParent-&gt;Validate()<sp/>||<sp/>!mUIParent-&gt;TransferDataFromWindow())</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/>mbIndependent<sp/>=<sp/>mIndependent-&gt;IsChecked();</highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="789"><highlight class="normal">}</highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EffectTruncSilence<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Finds<sp/>the<sp/>intersection<sp/>of<sp/>the<sp/>ordered<sp/>region<sp/>lists,<sp/>stores<sp/>in<sp/>dest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectTruncSilence::Intersect(<ref refid="class_region_list" kindref="compound">RegionList</ref><sp/>&amp;<ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_region_list" kindref="compound">RegionList</ref><sp/>&amp;src)</highlight></codeline>
<codeline lineno="795"><highlight class="normal">{</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/>RegionList::iterator<sp/>destIter;</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/>destIter<sp/>=<sp/>dest.begin();</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Any<sp/>time<sp/>we<sp/>reach<sp/>the<sp/>end<sp/>of<sp/>the<sp/>dest<sp/>list<sp/>we&apos;re<sp/>finished</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(destIter<sp/>==<sp/>dest.end())</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/>RegionList::iterator<sp/>curDest<sp/>=<sp/>destIter;</highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Operation:<sp/>find<sp/>non-silent<sp/>regions<sp/>in<sp/>src,<sp/>remove<sp/>them<sp/>from<sp/>dest.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>nsStart<sp/>=<sp/>curDest-&gt;start;</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>nsEnd;</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>lastRun<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>must<sp/>run<sp/>the<sp/>loop<sp/>one<sp/>extra<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/>RegionList::const_iterator<sp/>srcIter<sp/>=<sp/>src.begin();</highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>logic,<sp/>causing<sp/>the<sp/>loop<sp/>to<sp/>run<sp/>once<sp/>after<sp/>end<sp/>of<sp/>src,<sp/>must<sp/>occur</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>each<sp/>time<sp/>srcIter<sp/>is<sp/>updated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(srcIter<sp/>==<sp/>src.end())</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lastRun<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(srcIter<sp/>!=<sp/>src.end()<sp/>||<sp/>lastRun)</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>use<sp/>curSrc<sp/>unless<sp/>lastRun<sp/>is<sp/>false!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>RegionList::const_iterator<sp/>curSrc;</highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lastRun)</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>last<sp/>non-silent<sp/>region<sp/>extends<sp/>as<sp/>far<sp/>as<sp/>possible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nsEnd<sp/>=<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">std::numeric_limits&lt;double&gt;::max</ref>();</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curSrc<sp/>=<sp/>srcIter;</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nsEnd<sp/>=<sp/>curSrc-&gt;start;</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nsEnd<sp/>&gt;<sp/>nsStart)</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Increment<sp/>through<sp/>dest<sp/>until<sp/>we<sp/>have<sp/>a<sp/>region<sp/>that<sp/>could<sp/>be<sp/>affected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(curDest-&gt;end<sp/>&lt;=<sp/>nsStart)</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++destIter;</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(destIter<sp/>==<sp/>dest.end())</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curDest<sp/>=<sp/>destIter;</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>splitting<sp/>dest<sp/>region<sp/>in<sp/>two</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nsStart<sp/>&gt;<sp/>curDest-&gt;start<sp/>&amp;&amp;<sp/>nsEnd<sp/>&lt;<sp/>curDest-&gt;<ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>)</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>second<sp/>region</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_region" kindref="compound">Region</ref><sp/>r(nsEnd,<sp/>curDest-&gt;end);</highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>first<sp/>region</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curDest-&gt;end<sp/>=<sp/>nsStart;</highlight></codeline>
<codeline lineno="854"><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>second<sp/>region<sp/>after<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RegionList::iterator<sp/>nextIt(destIter);</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++nextIt;</highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>should<sp/>just<sp/>read:<sp/>destIter<sp/>=<sp/>dest.insert(nextIt,<sp/>r);<sp/>but<sp/>we</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>work<sp/>around<sp/>two<sp/>two<sp/>wxList::insert()<sp/>bugs.<sp/>First,<sp/>in<sp/>some</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>versions<sp/>it<sp/>returns<sp/>the<sp/>wrong<sp/>value.<sp/>Second,<sp/>in<sp/>some<sp/>versions,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>crashes<sp/>when<sp/>you<sp/>insert<sp/>at<sp/>list<sp/>end.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nextIt<sp/>==<sp/>dest.end())</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest.push_back(r);</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest.insert(nextIt,<sp/>r);</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++destIter;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(now<sp/>points<sp/>at<sp/>the<sp/>newly-inserted<sp/>region)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curDest<sp/>=<sp/>destIter;</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>truncating<sp/>the<sp/>end<sp/>of<sp/>dest<sp/>region</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nsStart<sp/>&gt;<sp/>curDest-&gt;start<sp/>&amp;&amp;<sp/>nsStart<sp/>&lt;<sp/>curDest-&gt;end<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nsEnd<sp/>&gt;=<sp/>curDest-&gt;end)</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curDest-&gt;end<sp/>=<sp/>nsStart;</highlight></codeline>
<codeline lineno="877"><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++destIter;</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(destIter<sp/>==<sp/>dest.end())</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curDest<sp/>=<sp/>destIter;</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="885"><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>all<sp/>dest<sp/>regions<sp/>that<sp/>need<sp/>to<sp/>be<sp/>removed<sp/>completely</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(nsStart<sp/>&lt;=<sp/>curDest-&gt;<ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref><sp/>&amp;&amp;<sp/>nsEnd<sp/>&gt;=<sp/>curDest-&gt;end)</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destIter<sp/>=<sp/>dest.erase(destIter);</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(destIter<sp/>==<sp/>dest.end())</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curDest<sp/>=<sp/>destIter;</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>for<sp/>truncating<sp/>the<sp/>beginning<sp/>of<sp/>dest<sp/>region</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nsStart<sp/>&lt;=<sp/>curDest-&gt;<ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nsEnd<sp/>&gt;<sp/>curDest-&gt;start<sp/>&amp;&amp;<sp/>nsEnd<sp/>&lt;<sp/>curDest-&gt;end)</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curDest-&gt;start<sp/>=<sp/>nsEnd;</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lastRun)</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>done</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastRun<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Next<sp/>non-silent<sp/>region<sp/>starts<sp/>at<sp/>the<sp/>end<sp/>of<sp/>this<sp/>silent<sp/>region</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nsStart<sp/>=<sp/>curSrc-&gt;end;</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++srcIter;</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(srcIter<sp/>==<sp/>src.end())</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastRun<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="921"><highlight class="normal">}</highlight></codeline>
<codeline lineno="922"><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="924"><highlight class="comment">void<sp/>EffectTruncSilence::BlendFrames(float*<sp/>buffer,<sp/>int<sp/>blendFrameCount,<sp/>int<sp/>leftIndex,<sp/>int<sp/>rightIndex)</highlight></codeline>
<codeline lineno="925"><highlight class="comment">{</highlight></codeline>
<codeline lineno="926"><highlight class="comment"><sp/><sp/><sp/>float*<sp/>bufOutput<sp/>=<sp/>&amp;buffer[leftIndex];</highlight></codeline>
<codeline lineno="927"><highlight class="comment"><sp/><sp/><sp/>float*<sp/>bufBefore<sp/>=<sp/>&amp;buffer[leftIndex];</highlight></codeline>
<codeline lineno="928"><highlight class="comment"><sp/><sp/><sp/>float*<sp/>bufAfter<sp/><sp/>=<sp/>&amp;buffer[rightIndex];</highlight></codeline>
<codeline lineno="929"><highlight class="comment"><sp/><sp/><sp/>double<sp/>beforeFactor<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="930"><highlight class="comment"><sp/><sp/><sp/>double<sp/>afterFactor<sp/><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="931"><highlight class="comment"><sp/><sp/><sp/>double<sp/>adjFactor<sp/>=<sp/>1.0<sp/>/<sp/>(double)blendFrameCount;</highlight></codeline>
<codeline lineno="932"><highlight class="comment"><sp/><sp/><sp/>for<sp/>(int<sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>blendFrameCount;<sp/>++j)</highlight></codeline>
<codeline lineno="933"><highlight class="comment"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="934"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>bufOutput[j]<sp/>=<sp/>(float)((bufBefore[j]<sp/>*<sp/>beforeFactor)<sp/>+<sp/>(bufAfter[j]<sp/>*<sp/>afterFactor));</highlight></codeline>
<codeline lineno="935"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>beforeFactor<sp/>-=<sp/>adjFactor;</highlight></codeline>
<codeline lineno="936"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>afterFactor<sp/><sp/>+=<sp/>adjFactor;</highlight></codeline>
<codeline lineno="937"><highlight class="comment"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="938"><highlight class="comment">}</highlight></codeline>
<codeline lineno="939"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectTruncSilence::UpdateUI()</highlight></codeline>
<codeline lineno="942"><highlight class="normal">{</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(mActionIndex)</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_trunc_silence_8cpp_1aba373eb25dc2f3d2995492627e951b4ea9794e443f5dbbd8a0690aeb4bd82a0ef" kindref="member">kTruncate</ref>:</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mTruncLongestAllowedSilenceT-&gt;Enable(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mSilenceCompressPercentT-&gt;Enable(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_trunc_silence_8cpp_1aba373eb25dc2f3d2995492627e951b4ea5ad36f76f762805d173cd453928743fb" kindref="member">kCompress</ref>:</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mTruncLongestAllowedSilenceT-&gt;Enable(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mSilenceCompressPercentT-&gt;Enable(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="953"><highlight class="normal">}</highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectTruncSilence::OnControlChange(wxCommandEvent<sp/>&amp;<sp/>WXUNUSED(evt))</highlight></codeline>
<codeline lineno="956"><highlight class="normal">{</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/>mActionChoice-&gt;GetValidator()-&gt;TransferFromWindow();</highlight></codeline>
<codeline lineno="958"><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/>UpdateUI();</highlight></codeline>
<codeline lineno="960"><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!EnableApply(mUIParent-&gt;TransferDataFromWindow()))</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="965"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/TruncSilence.cpp"/>
  </compounddef>
</doxygen>
