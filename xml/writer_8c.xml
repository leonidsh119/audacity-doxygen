<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="writer_8c" kind="file" language="C++">
    <compoundname>writer.c</compoundname>
    <includes refid="serd__internal_8h" local="yes">serd_internal.h</includes>
    <includes refid="assert_8h" local="no">assert.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <incdepgraph>
      <node id="27203">
        <label>stdbool.h</label>
      </node>
      <node id="27200">
        <label>stdarg.h</label>
      </node>
      <node id="27192">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c</label>
        <link refid="writer.c"/>
        <childnode refid="27193" relation="include">
        </childnode>
        <childnode refid="27194" relation="include">
        </childnode>
        <childnode refid="27196" relation="include">
        </childnode>
        <childnode refid="27197" relation="include">
        </childnode>
        <childnode refid="27198" relation="include">
        </childnode>
      </node>
      <node id="27202">
        <label>stdint.h</label>
      </node>
      <node id="27197">
        <label>stdlib.h</label>
      </node>
      <node id="27195">
        <label>errno.h</label>
      </node>
      <node id="27199">
        <label>serd/serd.h</label>
        <link refid="serd_8h"/>
        <childnode refid="27200" relation="include">
        </childnode>
        <childnode refid="27201" relation="include">
        </childnode>
        <childnode refid="27202" relation="include">
        </childnode>
        <childnode refid="27196" relation="include">
        </childnode>
        <childnode refid="27203" relation="include">
        </childnode>
      </node>
      <node id="27201">
        <label>stddef.h</label>
      </node>
      <node id="27193">
        <label>serd_internal.h</label>
        <link refid="serd__internal_8h"/>
        <childnode refid="27194" relation="include">
        </childnode>
        <childnode refid="27195" relation="include">
        </childnode>
        <childnode refid="27196" relation="include">
        </childnode>
        <childnode refid="27197" relation="include">
        </childnode>
        <childnode refid="27198" relation="include">
        </childnode>
        <childnode refid="27199" relation="include">
        </childnode>
        <childnode refid="27204" relation="include">
        </childnode>
      </node>
      <node id="27194">
        <label>assert.h</label>
        <link refid="assert_8h"/>
      </node>
      <node id="27198">
        <label>string.h</label>
      </node>
      <node id="27204">
        <label>serd_config.h</label>
      </node>
      <node id="27196">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="struct_write_context" prot="public">WriteContext</innerclass>
    <innerclass refid="struct_sep_rule" prot="public">SepRule</innerclass>
    <innerclass refid="struct_serd_writer_impl" prot="public">SerdWriterImpl</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="writer_8c_1a298b6f024c8a4d1832092da69d976137" prot="public" static="no">
        <name>NS_RDF</name>
        <initializer>&quot;http://www.w3.org/1999/02/22-rdf-<ref refid="cmdline_8c_1a9aea52a77da0039230114dcf40c98aa6" kindref="member">syntax</ref>-<ref refid="xmltok_8c_1ab6aec1346fb6c7b2733f0f73c9536ad2" kindref="member">ns</ref>#&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" line="24" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="writer_8c_1a69399823e754e5d4184435f0c079270a" prot="public" static="no">
        <name>NS_XSD</name>
        <initializer>&quot;http://www.w3.org/2001/XMLSchema#&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" line="25" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="writer_8c_1a8d4d508ce869a6217c76b3d9d2a2de1c" prot="public" static="no">
        <name>READ_BYTE</name>
        <param></param>
        <initializer><ref refid="latency_8c_1a7d946209d777cb95fe30364b8d321207" kindref="member">in</ref> = utf8[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++] &amp; 0x3F; \
	c  = (c &lt;&lt; 6) | in;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" line="181" column="9"/>
      </memberdef>
      <memberdef kind="define" id="writer_8c_1afa03b19f9dda22dcd7b65798da017476" prot="public" static="no">
        <name>TRY</name>
        <param><defname>write_result</defname></param>
        <initializer><ref refid="sndfile__save_8m_1a55944e1fa1bcc1bfc6185bc610b0a930" kindref="member">if</ref> (!write_result) { \
		<ref refid="hashrout_8h_1a9842e92184417c07866419916b2b3ce3" kindref="member">return</ref> <ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330dada1292115013f04e99b2ecfe32acd9a5" kindref="member">SERD_ERR_UNKNOWN</ref>; \
	}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" line="634" column="9"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="writer_8c_1a050d7b0e8e309ae551d898749910ccf8" prot="public" static="no">
        <name>Sep</name>
        <enumvalue id="writer_8c_1a050d7b0e8e309ae551d898749910ccf8a49d7665ac7d679cfcf7f4527ffd263a4" prot="public">
          <name>SEP_NONE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="writer_8c_1a050d7b0e8e309ae551d898749910ccf8a15a627797251bfeb107e88d56af8940f" prot="public">
          <name>SEP_END_S</name>
          <briefdescription>
<para>End of a subject (&apos;.&apos;) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="writer_8c_1a050d7b0e8e309ae551d898749910ccf8a50efa84199f04131d33f442db5a44427" prot="public">
          <name>SEP_END_P</name>
          <briefdescription>
<para>End of a predicate (&apos;;&apos;) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="writer_8c_1a050d7b0e8e309ae551d898749910ccf8ab233df543bbe5243c2422baba5e488dc" prot="public">
          <name>SEP_END_O</name>
          <briefdescription>
<para>End of an object (&apos;,&apos;) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="writer_8c_1a050d7b0e8e309ae551d898749910ccf8aa725e142bec01c1814b2814bb0d15b7a" prot="public">
          <name>SEP_S_P</name>
          <briefdescription>
<para>Between a subject and predicate (whitespace) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="writer_8c_1a050d7b0e8e309ae551d898749910ccf8a27176ef17c5561840ead42f0ec3cf234" prot="public">
          <name>SEP_P_O</name>
          <briefdescription>
<para>Between a predicate and object (whitespace) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="writer_8c_1a050d7b0e8e309ae551d898749910ccf8a1a22fc11b9bd7fa204e4116ae562d333" prot="public">
          <name>SEP_ANON_BEGIN</name>
          <briefdescription>
<para>Start of anonymous node (&apos;[&apos;) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="writer_8c_1a050d7b0e8e309ae551d898749910ccf8a6f009c393b7274d9b5f6acb99322051f" prot="public">
          <name>SEP_ANON_END</name>
          <briefdescription>
<para>End of anonymous node (&apos;]&apos;) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="writer_8c_1a050d7b0e8e309ae551d898749910ccf8a9bafb6045a967a24af1516902b4296eb" prot="public">
          <name>SEP_LIST_BEGIN</name>
          <briefdescription>
<para>Start of list (&apos;(&apos;) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="writer_8c_1a050d7b0e8e309ae551d898749910ccf8a237849331041972b0eb3590e90a177f6" prot="public">
          <name>SEP_LIST_SEP</name>
          <briefdescription>
<para>List separator (whitespace) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="writer_8c_1a050d7b0e8e309ae551d898749910ccf8a7cbe2be8c39d1895b980d1f94e9cc864" prot="public">
          <name>SEP_LIST_END</name>
          <briefdescription>
<para>End of list (&apos;)&apos;) </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" line="39" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" bodystart="39" bodyend="51"/>
      </memberdef>
      <memberdef kind="enum" id="writer_8c_1a79248e6aa05b23ea2cdc0031fa42f6f1" prot="public" static="no">
        <name>TextContext</name>
        <enumvalue id="writer_8c_1a79248e6aa05b23ea2cdc0031fa42f6f1ad99bdd008ac07aa7a204cfbbb472c1b9" prot="public">
          <name>WRITE_STRING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="writer_8c_1a79248e6aa05b23ea2cdc0031fa42f6f1a3663debe5fe656a6b3727cf15ef04e0c" prot="public">
          <name>WRITE_LONG_STRING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" line="99" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" bodystart="99" bodyend="102"/>
      </memberdef>
      <memberdef kind="enum" id="writer_8c_1a1e35064f4b70226adc63b8fe1af7ddf8" prot="public" static="no">
        <name>Field</name>
        <enumvalue id="writer_8c_1a1e35064f4b70226adc63b8fe1af7ddf8aa926e8e6d97b14f8b2b0c6a2fbbb8272" prot="public">
          <name>FIELD_NONE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="writer_8c_1a1e35064f4b70226adc63b8fe1af7ddf8ab810163bf6e87dad5995e00953367de3" prot="public">
          <name>FIELD_SUBJECT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="writer_8c_1a1e35064f4b70226adc63b8fe1af7ddf8a5514e037b5ccc4a732be15736061b49d" prot="public">
          <name>FIELD_PREDICATE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="writer_8c_1a1e35064f4b70226adc63b8fe1af7ddf8ab894f6d6a6f8dd7dfa3e3624c10445fe" prot="public">
          <name>FIELD_OBJECT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" line="430" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" bodystart="430" bodyend="435"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="writer_8c_1a3d4a67300c6b1c42a529b12cdfd67a9e" prot="public" static="yes" mutable="no">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_write_context" kindref="compound">WriteContext</ref></type>
        <definition>const WriteContext WRITE_CONTEXT_NULL</definition>
        <argsstring></argsstring>
        <name>WRITE_CONTEXT_NULL</name>
        <initializer>= {
	{ 0, 0, 0, 0, <ref refid="group__serd_1gga7ccd8d4fb2c3a6ad690ed6d6fe1b45faa028984ec3afe86cc5acc79df3b279b28" kindref="member">SERD_NOTHING</ref> },
	{ 0, 0, 0, 0, <ref refid="group__serd_1gga7ccd8d4fb2c3a6ad690ed6d6fe1b45faa028984ec3afe86cc5acc79df3b279b28" kindref="member">SERD_NOTHING</ref> },
	{ 0, 0, 0, 0, <ref refid="group__serd_1gga7ccd8d4fb2c3a6ad690ed6d6fe1b45faa028984ec3afe86cc5acc79df3b279b28" kindref="member">SERD_NOTHING</ref> }
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" line="33" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="writer_8c_1acaf7757d53adf72cc635e0eb4ba4b8fd" prot="public" static="yes" mutable="no">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_sep_rule" kindref="compound">SepRule</ref></type>
        <definition>const SepRule rules[]</definition>
        <argsstring>[]</argsstring>
        <name>rules</name>
        <initializer>= {
	{ <ref refid="px__mixer_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,     0, 0, 0, 0 },
	{ &quot; .\n\n&quot;, 4, 0, 0, 0 },
	{ &quot; ;&quot;,     2, 0, 1, 1 },
	{ &quot; ,&quot;,     2, 0, 1, 0 },
	{ NULL,     0, 0, 1, 0 },
	{ &quot; &quot;,      1, 0, 0, 0 },
	{ &quot;[&quot;,      1, 0, 1, 1 },
	{ &quot;]&quot;,      1, 1, 0, 0 },
	{ &quot;(&quot;,      1, 0, 0, 0 },
	{ <ref refid="px__mixer_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,     1, 0, 1, 0 },
	{ &quot;)&quot;,      1, 1, 0, 0 },
	{ &quot;\n&quot;,     1, 0, 1, 0 }
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" line="61" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" bodystart="61" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="writer_8c_1a33f1cdd510bfa227eb5a0142a3ccab8a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void w_err</definition>
        <argsstring>(SerdWriter *writer, SerdStatus st, const char *fmt,...)</argsstring>
        <name>w_err</name>
        <param>
          <type><ref refid="group__serd_1gaaaa09490e19dff0180251f1e2524e6f0" kindref="member">SerdWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <param>
          <type><ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref></type>
          <declname>st</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" line="105" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" bodystart="105" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="writer_8c_1a83dc0c6e3c9a9ea1bc461b7b27625fad" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_write_context" kindref="compound">WriteContext</ref> *</type>
        <definition>static WriteContext* anon_stack_top</definition>
        <argsstring>(SerdWriter *writer)</argsstring>
        <name>anon_stack_top</name>
        <param>
          <type><ref refid="group__serd_1gaaaa09490e19dff0180251f1e2524e6f0" kindref="member">SerdWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" line="121" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" bodystart="121" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="writer_8c_1af49992e822e85022d0e7d20deca6ebea" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void copy_node</definition>
        <argsstring>(SerdNode *dst, const SerdNode *src)</argsstring>
        <name>copy_node</name>
        <param>
          <type><ref refid="struct_serd_node" kindref="compound">SerdNode</ref> *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref> *</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" line="129" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" bodystart="129" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="writer_8c_1ae392afbf07833644c32b722be9631701" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t sink</definition>
        <argsstring>(const void *buf, size_t len, SerdWriter *writer)</argsstring>
        <name>sink</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type><ref refid="group__serd_1gaaaa09490e19dff0180251f1e2524e6f0" kindref="member">SerdWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" line="144" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" bodystart="144" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="writer_8c_1a442008339a291c6a74fdec7f4f6da709" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref></type>
        <definition>static uint32_t parse_utf8_char</definition>
        <argsstring>(SerdWriter *writer, const uint8_t *utf8, size_t *size)</argsstring>
        <name>parse_utf8_char</name>
        <param>
          <type><ref refid="group__serd_1gaaaa09490e19dff0180251f1e2524e6f0" kindref="member">SerdWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> *</type>
          <declname>utf8</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" line="157" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" bodystart="157" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="writer_8c_1a3a609897f7ec7f1057351296e53a32e3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t write_character</definition>
        <argsstring>(SerdWriter *writer, const uint8_t *utf8, size_t *size)</argsstring>
        <name>write_character</name>
        <param>
          <type><ref refid="group__serd_1gaaaa09490e19dff0180251f1e2524e6f0" kindref="member">SerdWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> *</type>
          <declname>utf8</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" line="197" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" bodystart="197" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="writer_8c_1ae5264f4f4b07c8fb15cb48dbc222d975" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool uri_must_escape</definition>
        <argsstring>(const uint8_t c)</argsstring>
        <name>uri_must_escape</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" line="230" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" bodystart="230" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="writer_8c_1ad0ee51a4ebf20c28205615093b108d54" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t write_uri</definition>
        <argsstring>(SerdWriter *writer, const uint8_t *utf8, size_t n_bytes)</argsstring>
        <name>write_uri</name>
        <param>
          <type><ref refid="group__serd_1gaaaa09490e19dff0180251f1e2524e6f0" kindref="member">SerdWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> *</type>
          <declname>utf8</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n_bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" line="242" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" bodystart="242" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="writer_8c_1a847d8490d876cca9bc1fb8e5bd254c3f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool lname_must_escape</definition>
        <argsstring>(const uint8_t c)</argsstring>
        <name>lname_must_escape</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" line="268" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" bodystart="268" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="writer_8c_1af284c075483d52b514aa761d917c3cd8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t write_lname</definition>
        <argsstring>(SerdWriter *writer, const uint8_t *utf8, size_t n_bytes)</argsstring>
        <name>write_lname</name>
        <param>
          <type><ref refid="group__serd_1gaaaa09490e19dff0180251f1e2524e6f0" kindref="member">SerdWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> *</type>
          <declname>utf8</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n_bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" line="289" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" bodystart="289" bodyend="311"/>
      </memberdef>
      <memberdef kind="function" id="writer_8c_1abdfdd37f178ae32e6bb9ad4de39959e6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t write_text</definition>
        <argsstring>(SerdWriter *writer, TextContext ctx, const uint8_t *utf8, size_t n_bytes)</argsstring>
        <name>write_text</name>
        <param>
          <type><ref refid="group__serd_1gaaaa09490e19dff0180251f1e2524e6f0" kindref="member">SerdWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <param>
          <type><ref refid="writer_8c_1a79248e6aa05b23ea2cdc0031fa42f6f1" kindref="member">TextContext</ref></type>
          <declname>ctx</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> *</type>
          <declname>utf8</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n_bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" line="314" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" bodystart="314" bodyend="377"/>
      </memberdef>
      <memberdef kind="function" id="writer_8c_1ace581d28482e8ccf16625c106d2c8a0c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t uri_sink</definition>
        <argsstring>(const void *buf, size_t len, void *stream)</argsstring>
        <name>uri_sink</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" line="380" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" bodystart="380" bodyend="383"/>
      </memberdef>
      <memberdef kind="function" id="writer_8c_1a41c80b4e6d270ccd73060c7b09abd9ff" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void write_newline</definition>
        <argsstring>(SerdWriter *writer)</argsstring>
        <name>write_newline</name>
        <param>
          <type><ref refid="group__serd_1gaaaa09490e19dff0180251f1e2524e6f0" kindref="member">SerdWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" line="386" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" bodystart="386" bodyend="392"/>
      </memberdef>
      <memberdef kind="function" id="writer_8c_1a4f2489c67f8df11c6cbe37dd0053bf0a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void write_sep</definition>
        <argsstring>(SerdWriter *writer, const Sep sep)</argsstring>
        <name>write_sep</name>
        <param>
          <type><ref refid="group__serd_1gaaaa09490e19dff0180251f1e2524e6f0" kindref="member">SerdWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="writer_8c_1a050d7b0e8e309ae551d898749910ccf8" kindref="member">Sep</ref></type>
          <declname>sep</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" line="395" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" bodystart="395" bodyend="411"/>
      </memberdef>
      <memberdef kind="function" id="writer_8c_1a348476cb49a9f12a8788f3ab6aec9e2c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref></type>
        <definition>static SerdStatus reset_context</definition>
        <argsstring>(SerdWriter *writer, bool del)</argsstring>
        <name>reset_context</name>
        <param>
          <type><ref refid="group__serd_1gaaaa09490e19dff0180251f1e2524e6f0" kindref="member">SerdWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>del</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" line="414" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" bodystart="414" bodyend="428"/>
      </memberdef>
      <memberdef kind="function" id="writer_8c_1a2b98591fa37cdce87683349a2818269b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool write_node</definition>
        <argsstring>(SerdWriter *writer, const SerdNode *node, const SerdNode *datatype, const SerdNode *lang, Field field, SerdStatementFlags flags)</argsstring>
        <name>write_node</name>
        <param>
          <type><ref refid="group__serd_1gaaaa09490e19dff0180251f1e2524e6f0" kindref="member">SerdWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref> *</type>
          <declname>node</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref> *</type>
          <declname>datatype</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref> *</type>
          <declname>lang</declname>
        </param>
        <param>
          <type><ref refid="writer_8c_1a1e35064f4b70226adc63b8fe1af7ddf8" kindref="member">Field</ref></type>
          <declname>field</declname>
        </param>
        <param>
          <type><ref refid="group__serd_1ga77f5ab7cef4fbc88591eaa9970fcddad" kindref="member">SerdStatementFlags</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" line="438" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" bodystart="438" bodyend="582"/>
      </memberdef>
      <memberdef kind="function" id="writer_8c_1aa372ecb42381ce01eac1e6c98041a0c1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool is_resource</definition>
        <argsstring>(const SerdNode *node)</argsstring>
        <name>is_resource</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref> *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" line="585" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" bodystart="585" bodyend="588"/>
      </memberdef>
      <memberdef kind="function" id="writer_8c_1a85a07e666ba26e8fa5bd541b119d74ab" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void write_pred</definition>
        <argsstring>(SerdWriter *writer, SerdStatementFlags flags, const SerdNode *pred)</argsstring>
        <name>write_pred</name>
        <param>
          <type><ref refid="group__serd_1gaaaa09490e19dff0180251f1e2524e6f0" kindref="member">SerdWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <param>
          <type><ref refid="group__serd_1ga77f5ab7cef4fbc88591eaa9970fcddad" kindref="member">SerdStatementFlags</ref></type>
          <declname>flags</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref> *</type>
          <declname>pred</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" line="591" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" bodystart="591" bodyend="596"/>
      </memberdef>
      <memberdef kind="function" id="writer_8c_1ac65337cfb26ee46d8d5f85bd7c3470a1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool write_list_obj</definition>
        <argsstring>(SerdWriter *writer, SerdStatementFlags flags, const SerdNode *predicate, const SerdNode *object, const SerdNode *datatype, const SerdNode *lang)</argsstring>
        <name>write_list_obj</name>
        <param>
          <type><ref refid="group__serd_1gaaaa09490e19dff0180251f1e2524e6f0" kindref="member">SerdWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <param>
          <type><ref refid="group__serd_1ga77f5ab7cef4fbc88591eaa9970fcddad" kindref="member">SerdStatementFlags</ref></type>
          <declname>flags</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref> *</type>
          <declname>predicate</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref> *</type>
          <declname>object</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref> *</type>
          <declname>datatype</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref> *</type>
          <declname>lang</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" line="599" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" bodystart="599" bodyend="615"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1ga0c055816f6eb769e55128701402e68b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> <ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref></type>
        <definition>SERD_API SerdStatus serd_writer_write_statement</definition>
        <argsstring>(SerdWriter *writer, SerdStatementFlags flags, const SerdNode *graph, const SerdNode *subject, const SerdNode *predicate, const SerdNode *object, const SerdNode *datatype, const SerdNode *lang)</argsstring>
        <name>serd_writer_write_statement</name>
        <param>
          <type><ref refid="group__serd_1gaaaa09490e19dff0180251f1e2524e6f0" kindref="member">SerdWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <param>
          <type><ref refid="group__serd_1ga77f5ab7cef4fbc88591eaa9970fcddad" kindref="member">SerdStatementFlags</ref></type>
          <declname>flags</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref> *</type>
          <declname>graph</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref> *</type>
          <declname>subject</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref> *</type>
          <declname>predicate</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref> *</type>
          <declname>object</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref> *</type>
          <declname>object_datatype</declname>
          <defname>datatype</defname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref> *</type>
          <declname>object_lang</declname>
          <defname>lang</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write a statement.</para><para>Note this function can be safely casted to SerdStatementSink. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" line="619" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" bodystart="619" bodyend="727"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1ga2452df8462454202657ecad76bb26812" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> <ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref></type>
        <definition>SERD_API SerdStatus serd_writer_end_anon</definition>
        <argsstring>(SerdWriter *writer, const SerdNode *node)</argsstring>
        <name>serd_writer_end_anon</name>
        <param>
          <type><ref refid="group__serd_1gaaaa09490e19dff0180251f1e2524e6f0" kindref="member">SerdWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref> *</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Mark the end of an anonymous node&apos;s description.</para><para>Note this function can be safely casted to SerdEndSink. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" line="731" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" bodystart="731" bodyend="753"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1gad983c2d9400df1819b821583188b1025" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> <ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref></type>
        <definition>SERD_API SerdStatus serd_writer_finish</definition>
        <argsstring>(SerdWriter *writer)</argsstring>
        <name>serd_writer_finish</name>
        <param>
          <type><ref refid="group__serd_1gaaaa09490e19dff0180251f1e2524e6f0" kindref="member">SerdWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Finish a write. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" line="757" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" bodystart="757" bodyend="767"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1gae87f48adca211a7fa2c0432e9ba68d29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> <ref refid="group__serd_1gaaaa09490e19dff0180251f1e2524e6f0" kindref="member">SerdWriter</ref> *</type>
        <definition>SERD_API SerdWriter* serd_writer_new</definition>
        <argsstring>(SerdSyntax syntax, SerdStyle style, SerdEnv *env, const SerdURI *base_uri, SerdSink ssink, void *stream)</argsstring>
        <name>serd_writer_new</name>
        <param>
          <type><ref refid="group__serd_1ga42683406fcfa9046b28dd951cefd3391" kindref="member">SerdSyntax</ref></type>
          <declname>syntax</declname>
        </param>
        <param>
          <type><ref refid="group__serd_1gae51da58ac1f1886c75ee2326495daeb2" kindref="member">SerdStyle</ref></type>
          <declname>style</declname>
        </param>
        <param>
          <type><ref refid="group__serd_1gaea4226dd80abea7afa05986f195d4755" kindref="member">SerdEnv</ref> *</type>
          <declname>env</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_u_r_i" kindref="compound">SerdURI</ref> *</type>
          <declname>base_uri</declname>
        </param>
        <param>
          <type><ref refid="group__serd_1ga84861f1df2f4d3323cb0113dae4ced12" kindref="member">SerdSink</ref></type>
          <declname>sink</declname>
          <defname>ssink</defname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new RDF writer. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" line="771" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" bodystart="771" bodyend="803"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1gae5b20ff80e98f8b945bf268f7dd1b1aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>SERD_API void serd_writer_set_error_sink</definition>
        <argsstring>(SerdWriter *writer, SerdErrorSink error_sink, void *error_handle)</argsstring>
        <name>serd_writer_set_error_sink</name>
        <param>
          <type><ref refid="group__serd_1gaaaa09490e19dff0180251f1e2524e6f0" kindref="member">SerdWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <param>
          <type><ref refid="group__serd_1ga925d2fda236697a3e643b307ffe242e5" kindref="member">SerdErrorSink</ref></type>
          <declname>error_sink</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>handle</declname>
          <defname>error_handle</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set a function to be called when errors occur during writing.</para><para>The <computeroutput>error_sink</computeroutput> will be called with <computeroutput>handle</computeroutput> as its first argument. If no error function is set, errors are printed to stderr. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" line="807" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" bodystart="807" bodyend="813"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1gaa924d2dcd23afb02ade707be75c7771b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>SERD_API void serd_writer_chop_blank_prefix</definition>
        <argsstring>(SerdWriter *writer, const uint8_t *prefix)</argsstring>
        <name>serd_writer_chop_blank_prefix</name>
        <param>
          <type><ref refid="group__serd_1gaaaa09490e19dff0180251f1e2524e6f0" kindref="member">SerdWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> *</type>
          <declname>prefix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set a prefix to be removed from matching blank node identifiers. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" line="817" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" bodystart="817" bodyend="828"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1ga4149ade7ac611ba531af6d47d821ae3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> <ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref></type>
        <definition>SERD_API SerdStatus serd_writer_set_base_uri</definition>
        <argsstring>(SerdWriter *writer, const SerdNode *uri)</argsstring>
        <name>serd_writer_set_base_uri</name>
        <param>
          <type><ref refid="group__serd_1gaaaa09490e19dff0180251f1e2524e6f0" kindref="member">SerdWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref> *</type>
          <declname>uri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the current output base URI (and emit directive if applicable).</para><para>Note this function can be safely casted to SerdBaseSink. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" line="832" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" bodystart="832" bodyend="851"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1gaf15a4cba59efb5ed1a19fabc0c825825" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> <ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref></type>
        <definition>SERD_API SerdStatus serd_writer_set_root_uri</definition>
        <argsstring>(SerdWriter *writer, const SerdNode *uri)</argsstring>
        <name>serd_writer_set_root_uri</name>
        <param>
          <type><ref refid="group__serd_1gaaaa09490e19dff0180251f1e2524e6f0" kindref="member">SerdWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref> *</type>
          <declname>uri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the current root URI.</para><para>The root URI should be a prefix of the base URI. The path of the root URI is the highest path any relative up-reference can refer to. For example, with root <ulink url="file:///foo/root">file:///foo/root</ulink> and base <ulink url="file:///foo/root/base">file:///foo/root/base</ulink>, <ulink url="file:///foo/root">file:///foo/root</ulink> will be written as &lt;../&gt;, but <ulink url="file:///foo">file:///foo</ulink> will be written non-relatively as <ulink url="file:///foo">file:///foo</ulink>. If the root is not explicitly set, it defaults to the base URI, so no up-references will be created at all. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" line="855" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" bodystart="855" bodyend="867"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1gae850607b6b240aea9d3676b1230c3c63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> <ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref></type>
        <definition>SERD_API SerdStatus serd_writer_set_prefix</definition>
        <argsstring>(SerdWriter *writer, const SerdNode *name, const SerdNode *uri)</argsstring>
        <name>serd_writer_set_prefix</name>
        <param>
          <type><ref refid="group__serd_1gaaaa09490e19dff0180251f1e2524e6f0" kindref="member">SerdWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref> *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref> *</type>
          <declname>uri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set a namespace prefix (and emit directive if applicable).</para><para>Note this function can be safely casted to SerdPrefixSink. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" line="871" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" bodystart="871" bodyend="891"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1ga50c06e138081328c46e9dfa593814f73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>SERD_API void serd_writer_free</definition>
        <argsstring>(SerdWriter *writer)</argsstring>
        <name>serd_writer_free</name>
        <param>
          <type><ref refid="group__serd_1gaaaa09490e19dff0180251f1e2524e6f0" kindref="member">SerdWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Free <computeroutput>writer</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" line="895" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" bodystart="895" bodyend="905"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1gaf48894b46c202d07055c0de23431f13a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> <ref refid="group__serd_1gaea4226dd80abea7afa05986f195d4755" kindref="member">SerdEnv</ref> *</type>
        <definition>SERD_API SerdEnv* serd_writer_get_env</definition>
        <argsstring>(SerdWriter *writer)</argsstring>
        <name>serd_writer_get_env</name>
        <param>
          <type><ref refid="group__serd_1gaaaa09490e19dff0180251f1e2524e6f0" kindref="member">SerdWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the env used by <computeroutput>writer</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" line="909" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" bodystart="909" bodyend="912"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1ga08303ceed3102e9fe2ae6bf39eb5b0ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> size_t</type>
        <definition>SERD_API size_t serd_file_sink</definition>
        <argsstring>(const void *buf, size_t len, void *stream)</argsstring>
        <name>serd_file_sink</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A convenience sink function for writing to a FILE*.</para><para>This function can be used as a SerdSink when writing to a FILE*. The <computeroutput>stream</computeroutput> parameter must be a FILE* opened for writing. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" line="916" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" bodystart="916" bodyend="919"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1gaec4335743b7d78339d8c133111ec8319" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> size_t</type>
        <definition>SERD_API size_t serd_chunk_sink</definition>
        <argsstring>(const void *buf, size_t len, void *stream)</argsstring>
        <name>serd_chunk_sink</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>len</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A convenience sink function for writing to a string.</para><para>This function can be used as a SerdSink to write to a <ref refid="struct_serd_chunk" kindref="compound">SerdChunk</ref> which is resized as necessary with realloc(). The <computeroutput>stream</computeroutput> parameter must point to an initialized <ref refid="struct_serd_chunk" kindref="compound">SerdChunk</ref>. When the write is finished, the string should be retrieved with <ref refid="group__serd_1gad91b770366f31f3ae83dcdde8c1d6c5d" kindref="member">serd_chunk_sink_finish()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" line="923" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" bodystart="923" bodyend="930"/>
      </memberdef>
      <memberdef kind="function" id="group__serd_1gad91b770366f31f3ae83dcdde8c1d6c5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> *</type>
        <definition>SERD_API uint8_t* serd_chunk_sink_finish</definition>
        <argsstring>(SerdChunk *stream)</argsstring>
        <name>serd_chunk_sink_finish</name>
        <param>
          <type><ref refid="struct_serd_chunk" kindref="compound">SerdChunk</ref> *</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Finish a serialisation to a chunk with <ref refid="group__serd_1gaec4335743b7d78339d8c133111ec8319" kindref="member">serd_chunk_sink()</ref>.</para><para>The returned string is the result of the serialisation, which is NULL terminated (by this function) and owned by the caller. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" line="934" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c" bodystart="934" bodyend="938"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/>Copyright<sp/>2011-2014<sp/>David<sp/>Robillard<sp/>&lt;http://drobilla.net&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/>Permission<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>and/or<sp/>distribute<sp/>this<sp/>software<sp/>for<sp/>any</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>purpose<sp/>with<sp/>or<sp/>without<sp/>fee<sp/>is<sp/>hereby<sp/>granted,<sp/>provided<sp/>that<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>appear<sp/>in<sp/>all<sp/>copies.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"></highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>THE<sp/>AUTHOR<sp/>DISCLAIMS<sp/>ALL<sp/>WARRANTIES</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/>WITH<sp/>REGARD<sp/>TO<sp/>THIS<sp/>SOFTWARE<sp/>INCLUDING<sp/>ALL<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/>ANY<sp/>SPECIAL,<sp/>DIRECT,<sp/>INDIRECT,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>OR<sp/>ANY<sp/>DAMAGES</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/>WHATSOEVER<sp/>RESULTING<sp/>FROM<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA<sp/>OR<sp/>PROFITS,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>NEGLIGENCE<sp/>OR<sp/>OTHER<sp/>TORTIOUS<sp/>ACTION,<sp/>ARISING<sp/>OUT<sp/>OF</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>USE<sp/>OR<sp/>PERFORMANCE<sp/>OF<sp/>THIS<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="15"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="serd__internal_8h" kindref="compound">serd_internal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="assert_8h" kindref="compound">assert.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="writer_8c_1a298b6f024c8a4d1832092da69d976137" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NS_RDF<sp/>&quot;http://www.w3.org/1999/02/22-rdf-syntax-ns#&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="writer_8c_1a69399823e754e5d4184435f0c079270a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NS_XSD<sp/>&quot;http://www.w3.org/2001/XMLSchema#&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="struct_write_context" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="28" refid="struct_write_context_1a2d109c77586c02ab2fe63deda66d5f97" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref><sp/><ref refid="struct_write_context_1a2d109c77586c02ab2fe63deda66d5f97" kindref="member">graph</ref>;</highlight></codeline>
<codeline lineno="29" refid="struct_write_context_1a2b2d587c9e3a63827cb6d40e18c1981f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref><sp/><ref refid="struct_write_context_1a2b2d587c9e3a63827cb6d40e18c1981f" kindref="member">subject</ref>;</highlight></codeline>
<codeline lineno="30" refid="struct_write_context_1a5888c184de5d37d5a7984b1ba1e0e3a3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref><sp/><ref refid="struct_write_context_1a5888c184de5d37d5a7984b1ba1e0e3a3" kindref="member">predicate</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}<sp/><ref refid="struct_write_context" kindref="compound">WriteContext</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_write_context" kindref="compound">WriteContext</ref><sp/>WRITE_CONTEXT_NULL<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/><ref refid="group__serd_1gga7ccd8d4fb2c3a6ad690ed6d6fe1b45faa028984ec3afe86cc5acc79df3b279b28" kindref="member">SERD_NOTHING</ref><sp/>},</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/><ref refid="group__serd_1gga7ccd8d4fb2c3a6ad690ed6d6fe1b45faa028984ec3afe86cc5acc79df3b279b28" kindref="member">SERD_NOTHING</ref><sp/>},</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/><ref refid="group__serd_1gga7ccd8d4fb2c3a6ad690ed6d6fe1b45faa028984ec3afe86cc5acc79df3b279b28" kindref="member">SERD_NOTHING</ref><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal">};</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="writer_8c_1a050d7b0e8e309ae551d898749910ccf8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="40" refid="writer_8c_1a050d7b0e8e309ae551d898749910ccf8a49d7665ac7d679cfcf7f4527ffd263a4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="writer_8c_1a050d7b0e8e309ae551d898749910ccf8a49d7665ac7d679cfcf7f4527ffd263a4" kindref="member">SEP_NONE</ref>,</highlight></codeline>
<codeline lineno="41" refid="writer_8c_1a050d7b0e8e309ae551d898749910ccf8a15a627797251bfeb107e88d56af8940f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="writer_8c_1a050d7b0e8e309ae551d898749910ccf8a15a627797251bfeb107e88d56af8940f" kindref="member">SEP_END_S</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="42" refid="writer_8c_1a050d7b0e8e309ae551d898749910ccf8a50efa84199f04131d33f442db5a44427" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="writer_8c_1a050d7b0e8e309ae551d898749910ccf8a50efa84199f04131d33f442db5a44427" kindref="member">SEP_END_P</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="43" refid="writer_8c_1a050d7b0e8e309ae551d898749910ccf8ab233df543bbe5243c2422baba5e488dc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="writer_8c_1a050d7b0e8e309ae551d898749910ccf8ab233df543bbe5243c2422baba5e488dc" kindref="member">SEP_END_O</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="44" refid="writer_8c_1a050d7b0e8e309ae551d898749910ccf8aa725e142bec01c1814b2814bb0d15b7a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="writer_8c_1a050d7b0e8e309ae551d898749910ccf8aa725e142bec01c1814b2814bb0d15b7a" kindref="member">SEP_S_P</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="45" refid="writer_8c_1a050d7b0e8e309ae551d898749910ccf8a27176ef17c5561840ead42f0ec3cf234" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="writer_8c_1a050d7b0e8e309ae551d898749910ccf8a27176ef17c5561840ead42f0ec3cf234" kindref="member">SEP_P_O</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="46" refid="writer_8c_1a050d7b0e8e309ae551d898749910ccf8a1a22fc11b9bd7fa204e4116ae562d333" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="writer_8c_1a050d7b0e8e309ae551d898749910ccf8a1a22fc11b9bd7fa204e4116ae562d333" kindref="member">SEP_ANON_BEGIN</ref>,<sp/><sp/></highlight></codeline>
<codeline lineno="47" refid="writer_8c_1a050d7b0e8e309ae551d898749910ccf8a6f009c393b7274d9b5f6acb99322051f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="writer_8c_1a050d7b0e8e309ae551d898749910ccf8a6f009c393b7274d9b5f6acb99322051f" kindref="member">SEP_ANON_END</ref>,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="48" refid="writer_8c_1a050d7b0e8e309ae551d898749910ccf8a9bafb6045a967a24af1516902b4296eb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="writer_8c_1a050d7b0e8e309ae551d898749910ccf8a9bafb6045a967a24af1516902b4296eb" kindref="member">SEP_LIST_BEGIN</ref>,<sp/><sp/></highlight></codeline>
<codeline lineno="49" refid="writer_8c_1a050d7b0e8e309ae551d898749910ccf8a237849331041972b0eb3590e90a177f6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="writer_8c_1a050d7b0e8e309ae551d898749910ccf8a237849331041972b0eb3590e90a177f6" kindref="member">SEP_LIST_SEP</ref>,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="50" refid="writer_8c_1a050d7b0e8e309ae551d898749910ccf8a7cbe2be8c39d1895b980d1f94e9cc864" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="writer_8c_1a050d7b0e8e309ae551d898749910ccf8a7cbe2be8c39d1895b980d1f94e9cc864" kindref="member">SEP_LIST_END</ref><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="51"><highlight class="normal">}<sp/><ref refid="writer_8c_1a050d7b0e8e309ae551d898749910ccf8" kindref="member">Sep</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="struct_sep_rule" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="54" refid="struct_sep_rule_1afb217cbb5878124afd5ef4eebeec8ee1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="struct_sep_rule_1afb217cbb5878124afd5ef4eebeec8ee1" kindref="member">str</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="55" refid="struct_sep_rule_1aa58a34eb7afeaca8a25e94a9f0124e79" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/><sp/><sp/><sp/><sp/><ref refid="struct_sep_rule_1aa58a34eb7afeaca8a25e94a9f0124e79" kindref="member">len</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="56" refid="struct_sep_rule_1a153097be741a3553b7680af1ee9c3f1c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/><sp/><sp/><sp/><sp/><ref refid="struct_sep_rule_1a153097be741a3553b7680af1ee9c3f1c" kindref="member">space_before</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="57" refid="struct_sep_rule_1a370e32e8e0ce10c53bb35213206160d7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/><sp/><sp/><sp/><sp/><ref refid="struct_sep_rule_1a370e32e8e0ce10c53bb35213206160d7" kindref="member">space_after_node</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="58" refid="struct_sep_rule_1a01139ef275673bd6a9ee8eb17dc670cc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/><sp/><sp/><sp/><sp/><ref refid="struct_sep_rule_1a01139ef275673bd6a9ee8eb17dc670cc" kindref="member">space_after_sep</ref>;<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal">}<sp/><ref refid="struct_sep_rule" kindref="compound">SepRule</ref>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sep_rule" kindref="compound">SepRule</ref><sp/>rules[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><sp/><sp/><sp/><sp/>0,<sp/>0,<sp/>0,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;<sp/>.\n\n&quot;</highlight><highlight class="normal">,<sp/>4,<sp/>0,<sp/>0,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;<sp/>;&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/>2,<sp/>0,<sp/>1,<sp/>1<sp/>},</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;<sp/>,&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/>2,<sp/>0,<sp/>1,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><sp/><sp/><sp/><sp/>0,<sp/>0,<sp/>1,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/>0,<sp/>0,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;[&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/>0,<sp/>1,<sp/>1<sp/>},</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/>1,<sp/>0,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;(&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/>0,<sp/>0,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><sp/><sp/><sp/><sp/>1,<sp/>0,<sp/>1,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/>1,<sp/>0,<sp/>0<sp/>},</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/>1,<sp/>0,<sp/>1,<sp/>0<sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal">};</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="struct_serd_writer_impl" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_serd_writer_impl" kindref="compound">SerdWriterImpl</ref><sp/>{</highlight></codeline>
<codeline lineno="77" refid="struct_serd_writer_impl_1a7db3f4393ea64d07533d64024757f165" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__serd_1ga42683406fcfa9046b28dd951cefd3391" kindref="member">SerdSyntax</ref><sp/><sp/><sp/><sp/><ref refid="struct_serd_writer_impl_1a7db3f4393ea64d07533d64024757f165" kindref="member">syntax</ref>;</highlight></codeline>
<codeline lineno="78" refid="struct_serd_writer_impl_1a731bcb7aa9fdd36e19e9e857b9a75b57" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__serd_1gae51da58ac1f1886c75ee2326495daeb2" kindref="member">SerdStyle</ref><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_writer_impl_1a731bcb7aa9fdd36e19e9e857b9a75b57" kindref="member">style</ref>;</highlight></codeline>
<codeline lineno="79" refid="struct_serd_writer_impl_1a817b3f152080fae12294fcab0976e3fc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_serd_env_impl" kindref="compound">SerdEnv</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_writer_impl_1a817b3f152080fae12294fcab0976e3fc" kindref="member">env</ref>;</highlight></codeline>
<codeline lineno="80" refid="struct_serd_writer_impl_1a70e9ffde53e5b1eec566faee8b8db4ab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_writer_impl_1a70e9ffde53e5b1eec566faee8b8db4ab" kindref="member">root_node</ref>;</highlight></codeline>
<codeline lineno="81" refid="struct_serd_writer_impl_1af3ecd74189e4f3f0612802a7c0dd0adb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_serd_u_r_i" kindref="compound">SerdURI</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_writer_impl_1af3ecd74189e4f3f0612802a7c0dd0adb" kindref="member">root_uri</ref>;</highlight></codeline>
<codeline lineno="82" refid="struct_serd_writer_impl_1ae17130ea21f914dedbf71c16dd6059e5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_serd_u_r_i" kindref="compound">SerdURI</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_writer_impl_1ae17130ea21f914dedbf71c16dd6059e5" kindref="member">base_uri</ref>;</highlight></codeline>
<codeline lineno="83" refid="struct_serd_writer_impl_1acf6119b5c84e08398304c8e0101161a9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_serd_stack" kindref="compound">SerdStack</ref><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_writer_impl_1acf6119b5c84e08398304c8e0101161a9" kindref="member">anon_stack</ref>;</highlight></codeline>
<codeline lineno="84" refid="struct_serd_writer_impl_1a54a2ff42dd04d7d9288b9271aec4f130" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_serd_bulk_sink_impl" kindref="compound">SerdBulkSink</ref><sp/><sp/><ref refid="struct_serd_writer_impl_1a54a2ff42dd04d7d9288b9271aec4f130" kindref="member">bulk_sink</ref>;</highlight></codeline>
<codeline lineno="85" refid="struct_serd_writer_impl_1aac5a4d07e1eb97466d582580ff28ab5d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__serd_1ga84861f1df2f4d3323cb0113dae4ced12" kindref="member">SerdSink</ref><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_writer_impl_1aac5a4d07e1eb97466d582580ff28ab5d" kindref="member">sink</ref>;</highlight></codeline>
<codeline lineno="86" refid="struct_serd_writer_impl_1ab62fceebc408a6d4762ef81ef69c958c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_writer_impl_1ab62fceebc408a6d4762ef81ef69c958c" kindref="member">stream</ref>;</highlight></codeline>
<codeline lineno="87" refid="struct_serd_writer_impl_1aaa70bfa3692cc1306a44829465b8e3e6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__serd_1ga925d2fda236697a3e643b307ffe242e5" kindref="member">SerdErrorSink</ref><sp/><ref refid="struct_serd_writer_impl_1aaa70bfa3692cc1306a44829465b8e3e6" kindref="member">error_sink</ref>;</highlight></codeline>
<codeline lineno="88" refid="struct_serd_writer_impl_1a4f4255f8e32c3e1c7dfc0145fefc7788" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_writer_impl_1a4f4255f8e32c3e1c7dfc0145fefc7788" kindref="member">error_handle</ref>;</highlight></codeline>
<codeline lineno="89" refid="struct_serd_writer_impl_1aba094b25116ebac728a7b329f45f1196" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_write_context" kindref="compound">WriteContext</ref><sp/><sp/><ref refid="struct_serd_writer_impl_1aba094b25116ebac728a7b329f45f1196" kindref="member">context</ref>;</highlight></codeline>
<codeline lineno="90" refid="struct_serd_writer_impl_1a8434d419faad7889fd98a10b4255a848" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_writer_impl_1a8434d419faad7889fd98a10b4255a848" kindref="member">list_subj</ref>;</highlight></codeline>
<codeline lineno="91" refid="struct_serd_writer_impl_1a976831995112596f11a736f94dad065a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_writer_impl_1a976831995112596f11a736f94dad065a" kindref="member">list_depth</ref>;</highlight></codeline>
<codeline lineno="92" refid="struct_serd_writer_impl_1aee52b0f37a85353b23532eac5782d553" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_writer_impl_1aee52b0f37a85353b23532eac5782d553" kindref="member">bprefix</ref>;</highlight></codeline>
<codeline lineno="93" refid="struct_serd_writer_impl_1ac164b6ed914e2eaf1db73113a103788a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_writer_impl_1ac164b6ed914e2eaf1db73113a103788a" kindref="member">bprefix_len</ref>;</highlight></codeline>
<codeline lineno="94" refid="struct_serd_writer_impl_1a9603d4b7de01f0d78fd064ebf9311fff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_writer_impl_1a9603d4b7de01f0d78fd064ebf9311fff" kindref="member">indent</ref>;</highlight></codeline>
<codeline lineno="95" refid="struct_serd_writer_impl_1a9dcf031aeff870976bd44e4966c39835" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="writer_8c_1a050d7b0e8e309ae551d898749910ccf8" kindref="member">Sep</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_writer_impl_1a9dcf031aeff870976bd44e4966c39835" kindref="member">last_sep</ref>;</highlight></codeline>
<codeline lineno="96" refid="struct_serd_writer_impl_1af311634690e4a79ccacbac2d24f77b3c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_writer_impl_1af311634690e4a79ccacbac2d24f77b3c" kindref="member">empty</ref>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal">};</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="writer_8c_1a79248e6aa05b23ea2cdc0031fa42f6f1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="100" refid="writer_8c_1a79248e6aa05b23ea2cdc0031fa42f6f1ad99bdd008ac07aa7a204cfbbb472c1b9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="writer_8c_1a79248e6aa05b23ea2cdc0031fa42f6f1ad99bdd008ac07aa7a204cfbbb472c1b9" kindref="member">WRITE_STRING</ref>,</highlight></codeline>
<codeline lineno="101" refid="writer_8c_1a79248e6aa05b23ea2cdc0031fa42f6f1a3663debe5fe656a6b3727cf15ef04e0c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="writer_8c_1a79248e6aa05b23ea2cdc0031fa42f6f1a3663debe5fe656a6b3727cf15ef04e0c" kindref="member">WRITE_LONG_STRING</ref></highlight></codeline>
<codeline lineno="102"><highlight class="normal">}<sp/><ref refid="writer_8c_1a79248e6aa05b23ea2cdc0031fa42f6f1" kindref="member">TextContext</ref>;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal">w_err(<ref refid="struct_serd_writer_impl" kindref="compound">SerdWriter</ref>*<sp/>writer,<sp/><ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref><sp/>st,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fmt,<sp/>...)</highlight></codeline>
<codeline lineno="106"><highlight class="normal">{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>TODO:<sp/>This<sp/>results<sp/>in<sp/>errors<sp/>with<sp/>no<sp/>file<sp/>information,<sp/>which<sp/>is<sp/>not</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>helpful<sp/>when<sp/>re-serializing<sp/>a<sp/>file<sp/>(particularly<sp/>for<sp/>&quot;undefined</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>namespace<sp/>prefix&quot;<sp/>errors.<sp/><sp/>The<sp/>statement<sp/>sink<sp/>API<sp/>needs<sp/>to<sp/>be<sp/>changed<sp/>to</highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>add<sp/>a<sp/>Cursor<sp/>parameter<sp/>so<sp/>the<sp/>source<sp/>can<sp/>notify<sp/>the<sp/>writer<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>statement<sp/>origin<sp/>for<sp/>better<sp/>error<sp/>reporting.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>va_list<sp/><ref refid="namespacelv2specgen_1a022f620722f1029244a92eca556aa50a" kindref="member">args</ref>;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>va_start(args,<sp/>fmt);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_error" kindref="compound">SerdError</ref><sp/><ref refid="namespacelv2docgen_1a4405dc5a2509537b9ff3b4de10bc28d6" kindref="member">e</ref><sp/>=<sp/>{<sp/>st,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>0,<sp/>0,<sp/>fmt,<sp/>&amp;args<sp/>};</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>serd_error(writer-&gt;<ref refid="struct_serd_writer_impl_1aaa70bfa3692cc1306a44829465b8e3e6" kindref="member">error_sink</ref>,<sp/>writer-&gt;<ref refid="struct_serd_writer_impl_1a4f4255f8e32c3e1c7dfc0145fefc7788" kindref="member">error_handle</ref>,<sp/>&amp;e);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>va_end(args);</highlight></codeline>
<codeline lineno="118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="struct_write_context" kindref="compound">WriteContext</ref>*</highlight></codeline>
<codeline lineno="121"><highlight class="normal">anon_stack_top(<ref refid="struct_serd_writer_impl" kindref="compound">SerdWriter</ref>*<sp/>writer)</highlight></codeline>
<codeline lineno="122"><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(!serd_stack_is_empty(&amp;writer-&gt;<ref refid="struct_serd_writer_impl_1acf6119b5c84e08398304c8e0101161a9" kindref="member">anon_stack</ref>));</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="struct_write_context" kindref="compound">WriteContext</ref>*)(writer-&gt;<ref refid="struct_serd_writer_impl_1acf6119b5c84e08398304c8e0101161a9" kindref="member">anon_stack</ref>.<ref refid="struct_serd_stack_1afdbaaf0b33676c624273fea6c6715b71" kindref="member">buf</ref></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>writer-&gt;<ref refid="struct_serd_writer_impl_1acf6119b5c84e08398304c8e0101161a9" kindref="member">anon_stack</ref>.<ref refid="struct_serd_stack_1a2fda2753d2ada98036894458c573bf38" kindref="member">size</ref><sp/>-<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_write_context" kindref="compound">WriteContext</ref>));</highlight></codeline>
<codeline lineno="126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal">copy_node(<ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/>dst,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/>src)</highlight></codeline>
<codeline lineno="130"><highlight class="normal">{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(src)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst-&gt;<ref refid="struct_serd_node_1a50033bcc22d7a31e8515088ebf7d50ed" kindref="member">buf</ref><sp/>=<sp/>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*)realloc((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)dst-&gt;<ref refid="struct_serd_node_1a50033bcc22d7a31e8515088ebf7d50ed" kindref="member">buf</ref>,<sp/>src-&gt;<ref refid="struct_serd_node_1a64b294c408ae9387ffaa78a742196985" kindref="member">n_bytes</ref><sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst-&gt;<ref refid="struct_serd_node_1a64b294c408ae9387ffaa78a742196985" kindref="member">n_bytes</ref><sp/>=<sp/>src-&gt;<ref refid="struct_serd_node_1a64b294c408ae9387ffaa78a742196985" kindref="member">n_bytes</ref>;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst-&gt;<ref refid="struct_serd_node_1ad4816721933bbd19f904ff67d3beb40e" kindref="member">n_chars</ref><sp/>=<sp/>src-&gt;<ref refid="struct_serd_node_1ad4816721933bbd19f904ff67d3beb40e" kindref="member">n_chars</ref>;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst-&gt;<ref refid="struct_serd_node_1a945891f8a5762a5739fc6ad7e023b50c" kindref="member">flags</ref><sp/><sp/><sp/>=<sp/>src-&gt;<ref refid="struct_serd_node_1a945891f8a5762a5739fc6ad7e023b50c" kindref="member">flags</ref>;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst-&gt;<ref refid="struct_serd_node_1ac415ada00df1883e7200cfa5c89b7fb9" kindref="member">type</ref><sp/><sp/><sp/><sp/>=<sp/>src-&gt;<ref refid="struct_serd_node_1ac415ada00df1883e7200cfa5c89b7fb9" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)dst-&gt;<ref refid="struct_serd_node_1a50033bcc22d7a31e8515088ebf7d50ed" kindref="member">buf</ref>,<sp/>src-&gt;<ref refid="struct_serd_node_1a50033bcc22d7a31e8515088ebf7d50ed" kindref="member">buf</ref>,<sp/>src-&gt;<ref refid="struct_serd_node_1a64b294c408ae9387ffaa78a742196985" kindref="member">n_bytes</ref><sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst-&gt;<ref refid="struct_serd_node_1ac415ada00df1883e7200cfa5c89b7fb9" kindref="member">type</ref><sp/>=<sp/><ref refid="group__serd_1gga7ccd8d4fb2c3a6ad690ed6d6fe1b45faa028984ec3afe86cc5acc79df3b279b28" kindref="member">SERD_NOTHING</ref>;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><ref refid="struct_serd_writer_impl_1aac5a4d07e1eb97466d582580ff28ab5d" kindref="member">sink</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="xlglob_8c_1a6d3f7f126151ca554ba001d63c9721f9" kindref="member">buf</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>,<sp/><ref refid="struct_serd_writer_impl" kindref="compound">SerdWriter</ref>*<sp/>writer)</highlight></codeline>
<codeline lineno="145"><highlight class="normal">{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(writer-&gt;<ref refid="struct_serd_writer_impl_1a731bcb7aa9fdd36e19e9e857b9a75b57" kindref="member">style</ref><sp/>&amp;<sp/><ref refid="group__serd_1ggae51da58ac1f1886c75ee2326495daeb2a16f426a166de90e1e52da3787bcc77aa" kindref="member">SERD_STYLE_BULK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>serd_bulk_sink_write(<ref refid="xlglob_8c_1a6d3f7f126151ca554ba001d63c9721f9" kindref="member">buf</ref>,<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>,<sp/>&amp;writer-&gt;<ref refid="struct_serd_writer_impl_1a54a2ff42dd04d7d9288b9271aec4f130" kindref="member">bulk_sink</ref>);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>writer-&gt;<ref refid="struct_serd_writer_impl_1aac5a4d07e1eb97466d582580ff28ab5d" kindref="member">sink</ref>(<ref refid="xlglob_8c_1a6d3f7f126151ca554ba001d63c9721f9" kindref="member">buf</ref>,<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>,<sp/>writer-&gt;<ref refid="struct_serd_writer_impl_1ab62fceebc408a6d4762ef81ef69c958c" kindref="member">stream</ref>);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Parse<sp/>a<sp/>UTF-8<sp/>character,<sp/>set<sp/>*size<sp/>to<sp/>the<sp/>length,<sp/>and<sp/>return<sp/>the<sp/>code<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref></highlight></codeline>
<codeline lineno="157"><highlight class="normal">parse_utf8_char(<ref refid="struct_serd_writer_impl" kindref="compound">SerdWriter</ref>*<sp/>writer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*<sp/>utf8,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">*<sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="158"><highlight class="normal">{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((utf8[0]<sp/>&amp;<sp/>0x80)<sp/>==<sp/>0)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>Starts<sp/>with<sp/>`0&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*size<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/><sp/><sp/><sp/><sp/>=<sp/>utf8[0];</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((utf8[0]<sp/>&amp;<sp/>0xE0)<sp/>==<sp/>0xC0)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>Starts<sp/>with<sp/>`110&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*size<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/><sp/><sp/><sp/><sp/>=<sp/>utf8[0]<sp/>&amp;<sp/>0x1F;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((utf8[0]<sp/>&amp;<sp/>0xF0)<sp/>==<sp/>0xE0)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>Starts<sp/>with<sp/>`1110&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*size<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/><sp/><sp/><sp/><sp/>=<sp/>utf8[0]<sp/>&amp;<sp/>0x0F;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((utf8[0]<sp/>&amp;<sp/>0xF8)<sp/>==<sp/>0xF0)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>Starts<sp/>with<sp/>`11110&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*size<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/><sp/><sp/><sp/><sp/>=<sp/>utf8[0]<sp/>&amp;<sp/>0x07;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w_err(writer,<sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330da138e7b6b98684e9f408bb91e49bbb315" kindref="member">SERD_ERR_BAD_ARG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>UTF-8:<sp/>%X\n&quot;</highlight><highlight class="normal">,<sp/>utf8[0]);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref><sp/>=<sp/>utf8[i++];</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>READ_BYTE()<sp/>\</highlight></codeline>
<codeline lineno="182"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>in<sp/>=<sp/>utf8[i++]<sp/>&amp;<sp/>0x3F;<sp/>\</highlight></codeline>
<codeline lineno="183"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>c<sp/><sp/>=<sp/>(c<sp/>&lt;&lt;<sp/>6)<sp/>|<sp/>in;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(*size)<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:<sp/><ref refid="writer_8c_1a8d4d508ce869a6217c76b3d9d2a2de1c" kindref="member">READ_BYTE</ref>();</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:<sp/><ref refid="writer_8c_1a8d4d508ce869a6217c76b3d9d2a2de1c" kindref="member">READ_BYTE</ref>();</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/><ref refid="writer_8c_1a8d4d508ce869a6217c76b3d9d2a2de1c" kindref="member">READ_BYTE</ref>();</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>;</highlight></codeline>
<codeline lineno="192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Write<sp/>a<sp/>single<sp/>character,<sp/>as<sp/>an<sp/>escape<sp/>for<sp/>single<sp/>byte<sp/>characters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(Caller<sp/>prints<sp/>any<sp/>single<sp/>byte<sp/>characters<sp/>that<sp/>don&apos;t<sp/>need<sp/>escaping)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal">write_character(<ref refid="struct_serd_writer_impl" kindref="compound">SerdWriter</ref>*<sp/>writer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*<sp/>utf8,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">*<sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref>)</highlight></codeline>
<codeline lineno="198"><highlight class="normal">{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/>replacement_char[]<sp/>=<sp/>{<sp/>0xEF,<sp/>0xBF,<sp/>0xBD<sp/>};</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>escape[11]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>{<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>utf8[0];</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref><sp/>=<sp/>parse_utf8_char(writer,<sp/>utf8,<sp/>size);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(*size)<sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w_err(writer,<sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330da138e7b6b98684e9f408bb91e49bbb315" kindref="member">SERD_ERR_BAD_ARG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;invalid<sp/>UTF-8:<sp/>%X\n&quot;</highlight><highlight class="normal">,<sp/>in);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_serd_writer_impl_1aac5a4d07e1eb97466d582580ff28ab5d" kindref="member">sink</ref>(replacement_char,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(replacement_char),<sp/>writer);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="win_2msvc_2switches_8h_1aa367b75c5aed883fef5befbdf04835a4" kindref="member">snprintf</ref>(escape,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(escape),<sp/></highlight><highlight class="stringliteral">&quot;\\u%04X&quot;</highlight><highlight class="normal">,<sp/>in);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_serd_writer_impl_1aac5a4d07e1eb97466d582580ff28ab5d" kindref="member">sink</ref>(escape,<sp/>6,<sp/>writer);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(writer-&gt;<ref refid="struct_serd_writer_impl_1a731bcb7aa9fdd36e19e9e857b9a75b57" kindref="member">style</ref><sp/>&amp;<sp/><ref refid="group__serd_1ggae51da58ac1f1886c75ee2326495daeb2a1e7d60e2c01ba5b990ba96807ef429fe" kindref="member">SERD_STYLE_ASCII</ref>))<sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>UTF-8<sp/>character<sp/>directly<sp/>to<sp/>UTF-8<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_serd_writer_impl_1aac5a4d07e1eb97466d582580ff28ab5d" kindref="member">sink</ref>(utf8,<sp/>*size,<sp/>writer);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>&lt;=<sp/>0xFFFF)<sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="win_2msvc_2switches_8h_1aa367b75c5aed883fef5befbdf04835a4" kindref="member">snprintf</ref>(escape,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(escape),<sp/></highlight><highlight class="stringliteral">&quot;\\u%04X&quot;</highlight><highlight class="normal">,<sp/>c);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_serd_writer_impl_1aac5a4d07e1eb97466d582580ff28ab5d" kindref="member">sink</ref>(escape,<sp/>6,<sp/>writer);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="win_2msvc_2switches_8h_1aa367b75c5aed883fef5befbdf04835a4" kindref="member">snprintf</ref>(escape,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(escape),<sp/></highlight><highlight class="stringliteral">&quot;\\U%08X&quot;</highlight><highlight class="normal">,<sp/>c);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_serd_writer_impl_1aac5a4d07e1eb97466d582580ff28ab5d" kindref="member">sink</ref>(escape,<sp/>10,<sp/>writer);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal">}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal">uri_must_escape(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>)</highlight></codeline>
<codeline lineno="231"><highlight class="normal">{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(c)<sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;&quot;&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;&lt;&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;&gt;&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;^&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;`&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;{&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;|&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;}&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!in_range(c,<sp/>0x20,<sp/>0x7E);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal">}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal">write_uri(<ref refid="struct_serd_writer_impl" kindref="compound">SerdWriter</ref>*<sp/>writer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*<sp/>utf8,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n_bytes)</highlight></codeline>
<codeline lineno="243"><highlight class="normal">{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>n_bytes;)<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>Index<sp/>of<sp/>next<sp/>character<sp/>that<sp/>must<sp/>be<sp/>escaped</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>j<sp/>&lt;<sp/>n_bytes;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uri_must_escape(utf8[j]))<sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Bulk<sp/>write<sp/>all<sp/>characters<sp/>up<sp/>to<sp/>this<sp/>special<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>+=<sp/><ref refid="struct_serd_writer_impl_1aac5a4d07e1eb97466d582580ff28ab5d" kindref="member">sink</ref>(&amp;utf8[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>],<sp/>j<sp/>-<sp/>i,<sp/>writer);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((i<sp/>=<sp/>j)<sp/>==<sp/>n_bytes)<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Reached<sp/>end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>UTF-8<sp/>character</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>+=<sp/>write_character(writer,<sp/>utf8<sp/>+<sp/>i,<sp/>&amp;size);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/><sp/><sp/>+=<sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;</highlight></codeline>
<codeline lineno="265"><highlight class="normal">}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal">lname_must_escape(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>)</highlight></codeline>
<codeline lineno="269"><highlight class="normal">{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>arbitrary<sp/>list<sp/>of<sp/>characters,<sp/>most<sp/>of<sp/>which<sp/>have<sp/>nothing<sp/>to<sp/>do<sp/>with</highlight></codeline>
<codeline lineno="271"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Turtle,<sp/>must<sp/>be<sp/>handled<sp/>as<sp/>special<sp/>cases<sp/>here<sp/>because<sp/>the<sp/>RDF<sp/>and<sp/>SPARQL</highlight></codeline>
<codeline lineno="272"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WGs<sp/>are<sp/>apparently<sp/>intent<sp/>on<sp/>making<sp/>the<sp/>once<sp/>elegant<sp/>Turtle<sp/>a<sp/>baroque</highlight></codeline>
<codeline lineno="273"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>inconsistent<sp/>mess,<sp/>throwing<sp/>elegance<sp/>and<sp/>extensibility<sp/>completely</highlight></codeline>
<codeline lineno="274"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>the<sp/>window<sp/>for<sp/>no<sp/>good<sp/>reason.</highlight></codeline>
<codeline lineno="275"><highlight class="comment"></highlight></codeline>
<codeline lineno="276"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Note<sp/>&apos;-&apos;,<sp/>&apos;.&apos;,<sp/>and<sp/>&apos;_&apos;<sp/>are<sp/>also<sp/>in<sp/>PN_LOCAL_ESC,<sp/>but<sp/>are<sp/>valid<sp/>unescaped</highlight></codeline>
<codeline lineno="277"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>local<sp/>names,<sp/>so<sp/>they<sp/>are<sp/>not<sp/>escaped<sp/>here.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(c)<sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\&apos;&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;!&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;#&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;$&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;%&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;&amp;&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;(&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;)&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;*&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;+&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;,&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;;&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;=&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;?&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;@&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;~&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="286"><highlight class="normal">}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal">write_lname(<ref refid="struct_serd_writer_impl" kindref="compound">SerdWriter</ref>*<sp/>writer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*<sp/>utf8,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n_bytes)</highlight></codeline>
<codeline lineno="290"><highlight class="normal">{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>n_bytes;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>Index<sp/>of<sp/>next<sp/>character<sp/>that<sp/>must<sp/>be<sp/>escaped</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>j<sp/>&lt;<sp/>n_bytes;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lname_must_escape(utf8[j]))<sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Bulk<sp/>write<sp/>all<sp/>characters<sp/>up<sp/>to<sp/>this<sp/>special<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>+=<sp/><ref refid="struct_serd_writer_impl_1aac5a4d07e1eb97466d582580ff28ab5d" kindref="member">sink</ref>(&amp;utf8[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>],<sp/>j<sp/>-<sp/>i,<sp/>writer);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((i<sp/>=<sp/>j)<sp/>==<sp/>n_bytes)<sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Reached<sp/>end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>escape</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>+=<sp/><ref refid="struct_serd_writer_impl_1aac5a4d07e1eb97466d582580ff28ab5d" kindref="member">sink</ref>(</highlight><highlight class="stringliteral">&quot;\\&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>writer);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>+=<sp/><ref refid="struct_serd_writer_impl_1aac5a4d07e1eb97466d582580ff28ab5d" kindref="member">sink</ref>(&amp;utf8[i],<sp/>1,<sp/>writer);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;</highlight></codeline>
<codeline lineno="311"><highlight class="normal">}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal">write_text(<ref refid="struct_serd_writer_impl" kindref="compound">SerdWriter</ref>*<sp/>writer,<sp/><ref refid="writer_8c_1a79248e6aa05b23ea2cdc0031fa42f6f1" kindref="member">TextContext</ref><sp/>ctx,</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*<sp/>utf8,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n_bytes)</highlight></codeline>
<codeline lineno="316"><highlight class="normal">{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>n_bytes;)<sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fast<sp/>bulk<sp/>write<sp/>for<sp/>long<sp/>strings<sp/>of<sp/>printable<sp/>ASCII</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>j<sp/>&lt;<sp/>n_bytes;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(utf8[j]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal"><sp/>||<sp/>utf8[j]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;&quot;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(!in_range(utf8[j],<sp/>0x20,<sp/>0x7E)))<sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>+=<sp/><ref refid="struct_serd_writer_impl_1aac5a4d07e1eb97466d582580ff28ab5d" kindref="member">sink</ref>(&amp;utf8[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>],<sp/>j<sp/>-<sp/>i,<sp/>writer);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((i<sp/>=<sp/>j)<sp/>==<sp/>n_bytes)<sp/>{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>Reached<sp/>end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref><sp/>=<sp/>utf8[i++];</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctx<sp/>==<sp/><ref refid="writer_8c_1a79248e6aa05b23ea2cdc0031fa42f6f1a3663debe5fe656a6b3727cf15ef04e0c" kindref="member">WRITE_LONG_STRING</ref>)<sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(in)<sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">:<sp/>len<sp/>+=<sp/><ref refid="struct_serd_writer_impl_1aac5a4d07e1eb97466d582580ff28ab5d" kindref="member">sink</ref>(</highlight><highlight class="stringliteral">&quot;\\\\&quot;</highlight><highlight class="normal">,<sp/>2,<sp/>writer);<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\b&apos;</highlight><highlight class="normal">:<sp/>len<sp/>+=<sp/><ref refid="struct_serd_writer_impl_1aac5a4d07e1eb97466d582580ff28ab5d" kindref="member">sink</ref>(</highlight><highlight class="stringliteral">&quot;\\b&quot;</highlight><highlight class="normal">,<sp/>2,<sp/>writer);<sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\t&apos;</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\f&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>+=<sp/><ref refid="struct_serd_writer_impl_1aac5a4d07e1eb97466d582580ff28ab5d" kindref="member">sink</ref>(&amp;in,<sp/>1,<sp/>writer);<sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>character<sp/>as-is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\&quot;&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>n_bytes)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>&apos;&quot;&apos;<sp/>at<sp/>string<sp/>end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>+=<sp/><ref refid="struct_serd_writer_impl_1aac5a4d07e1eb97466d582580ff28ab5d" kindref="member">sink</ref>(</highlight><highlight class="stringliteral">&quot;\\\&quot;&quot;</highlight><highlight class="normal">,<sp/>2,<sp/>writer);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>+=<sp/><ref refid="struct_serd_writer_impl_1aac5a4d07e1eb97466d582580ff28ab5d" kindref="member">sink</ref>(&amp;in,<sp/>1,<sp/>writer);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ctx<sp/>==<sp/><ref refid="writer_8c_1a79248e6aa05b23ea2cdc0031fa42f6f1ad99bdd008ac07aa7a204cfbbb472c1b9" kindref="member">WRITE_STRING</ref>)<sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(in)<sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\\&apos;</highlight><highlight class="normal">:<sp/>len<sp/>+=<sp/><ref refid="struct_serd_writer_impl_1aac5a4d07e1eb97466d582580ff28ab5d" kindref="member">sink</ref>(</highlight><highlight class="stringliteral">&quot;\\\\&quot;</highlight><highlight class="normal">,<sp/>2,<sp/>writer);<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">:<sp/>len<sp/>+=<sp/><ref refid="struct_serd_writer_impl_1aac5a4d07e1eb97466d582580ff28ab5d" kindref="member">sink</ref>(</highlight><highlight class="stringliteral">&quot;\\n&quot;</highlight><highlight class="normal">,<sp/>2,<sp/>writer);<sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal">:<sp/>len<sp/>+=<sp/><ref refid="struct_serd_writer_impl_1aac5a4d07e1eb97466d582580ff28ab5d" kindref="member">sink</ref>(</highlight><highlight class="stringliteral">&quot;\\r&quot;</highlight><highlight class="normal">,<sp/>2,<sp/>writer);<sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\t&apos;</highlight><highlight class="normal">:<sp/>len<sp/>+=<sp/><ref refid="struct_serd_writer_impl_1aac5a4d07e1eb97466d582580ff28ab5d" kindref="member">sink</ref>(</highlight><highlight class="stringliteral">&quot;\\t&quot;</highlight><highlight class="normal">,<sp/>2,<sp/>writer);<sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;&quot;&apos;</highlight><highlight class="normal">:<sp/><sp/>len<sp/>+=<sp/><ref refid="struct_serd_writer_impl_1aac5a4d07e1eb97466d582580ff28ab5d" kindref="member">sink</ref>(</highlight><highlight class="stringliteral">&quot;\\\&quot;&quot;</highlight><highlight class="normal">,<sp/>2,<sp/>writer);<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(writer-&gt;<ref refid="struct_serd_writer_impl_1a7db3f4393ea64d07533d64024757f165" kindref="member">syntax</ref><sp/>!=<sp/><ref refid="group__serd_1gga42683406fcfa9046b28dd951cefd3391a3debf79a887908f0502c20029cd050a0" kindref="member">SERD_NTRIPLES</ref>)<sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(in)<sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\b&apos;</highlight><highlight class="normal">:<sp/>len<sp/>+=<sp/><ref refid="struct_serd_writer_impl_1aac5a4d07e1eb97466d582580ff28ab5d" kindref="member">sink</ref>(</highlight><highlight class="stringliteral">&quot;\\b&quot;</highlight><highlight class="normal">,<sp/>2,<sp/>writer);<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\f&apos;</highlight><highlight class="normal">:<sp/>len<sp/>+=<sp/><ref refid="struct_serd_writer_impl_1aac5a4d07e1eb97466d582580ff28ab5d" kindref="member">sink</ref>(</highlight><highlight class="stringliteral">&quot;\\f&quot;</highlight><highlight class="normal">,<sp/>2,<sp/>writer);<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>+=<sp/>write_character(writer,<sp/>utf8<sp/>+<sp/>i<sp/>-<sp/>1,<sp/>&amp;size);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>+=<sp/>size<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;</highlight></codeline>
<codeline lineno="377"><highlight class="normal">}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal">uri_sink(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="xlglob_8c_1a6d3f7f126151ca554ba001d63c9721f9" kindref="member">buf</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="struct_serd_writer_impl_1ab62fceebc408a6d4762ef81ef69c958c" kindref="member">stream</ref>)</highlight></codeline>
<codeline lineno="381"><highlight class="normal">{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>write_uri((<ref refid="struct_serd_writer_impl" kindref="compound">SerdWriter</ref>*)stream,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*)<ref refid="xlglob_8c_1a6d3f7f126151ca554ba001d63c9721f9" kindref="member">buf</ref>,<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>);</highlight></codeline>
<codeline lineno="383"><highlight class="normal">}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal">write_newline(<ref refid="struct_serd_writer_impl" kindref="compound">SerdWriter</ref>*<sp/>writer)</highlight></codeline>
<codeline lineno="387"><highlight class="normal">{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_serd_writer_impl_1aac5a4d07e1eb97466d582580ff28ab5d" kindref="member">sink</ref>(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>writer);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>writer-&gt;<ref refid="struct_serd_writer_impl_1a9603d4b7de01f0d78fd064ebf9311fff" kindref="member">indent</ref>;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_writer_impl_1aac5a4d07e1eb97466d582580ff28ab5d" kindref="member">sink</ref>(</highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>writer);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="392"><highlight class="normal">}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal">write_sep(<ref refid="struct_serd_writer_impl" kindref="compound">SerdWriter</ref>*<sp/>writer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="writer_8c_1a050d7b0e8e309ae551d898749910ccf8" kindref="member">Sep</ref><sp/>sep)</highlight></codeline>
<codeline lineno="396"><highlight class="normal">{</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sep_rule" kindref="compound">SepRule</ref>*<sp/>rule<sp/>=<sp/>&amp;rules[sep];</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rule-&gt;<ref refid="struct_sep_rule_1a153097be741a3553b7680af1ee9c3f1c" kindref="member">space_before</ref>)<sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_newline(writer);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rule-&gt;<ref refid="struct_sep_rule_1afb217cbb5878124afd5ef4eebeec8ee1" kindref="member">str</ref>)<sp/>{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_writer_impl_1aac5a4d07e1eb97466d582580ff28ab5d" kindref="member">sink</ref>(rule-&gt;<ref refid="struct_sep_rule_1afb217cbb5878124afd5ef4eebeec8ee1" kindref="member">str</ref>,<sp/>rule-&gt;<ref refid="struct_sep_rule_1aa58a34eb7afeaca8a25e94a9f0124e79" kindref="member">len</ref>,<sp/>writer);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><sp/><sp/><sp/>(writer-&gt;<ref refid="struct_serd_writer_impl_1a9dcf031aeff870976bd44e4966c39835" kindref="member">last_sep</ref><sp/>&amp;&amp;<sp/>rule-&gt;<ref refid="struct_sep_rule_1a01139ef275673bd6a9ee8eb17dc670cc" kindref="member">space_after_sep</ref>)</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(!writer-&gt;<ref refid="struct_serd_writer_impl_1a9dcf031aeff870976bd44e4966c39835" kindref="member">last_sep</ref><sp/>&amp;&amp;<sp/>rule-&gt;<ref refid="struct_sep_rule_1a370e32e8e0ce10c53bb35213206160d7" kindref="member">space_after_node</ref>))<sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_newline(writer);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(writer-&gt;<ref refid="struct_serd_writer_impl_1a9dcf031aeff870976bd44e4966c39835" kindref="member">last_sep</ref><sp/>&amp;&amp;<sp/>rule-&gt;<ref refid="struct_sep_rule_1a370e32e8e0ce10c53bb35213206160d7" kindref="member">space_after_node</ref>)<sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_writer_impl_1aac5a4d07e1eb97466d582580ff28ab5d" kindref="member">sink</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>writer);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="struct_serd_writer_impl_1a9dcf031aeff870976bd44e4966c39835" kindref="member">last_sep</ref><sp/>=<sp/>sep;</highlight></codeline>
<codeline lineno="411"><highlight class="normal">}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref></highlight></codeline>
<codeline lineno="414"><highlight class="normal">reset_context(<ref refid="struct_serd_writer_impl" kindref="compound">SerdWriter</ref>*<sp/>writer,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>del)</highlight></codeline>
<codeline lineno="415"><highlight class="normal">{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(del)<sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__serd_1ga037ef71317b8afff0a020072099cd14f" kindref="member">serd_node_free</ref>(&amp;writer-&gt;<ref refid="struct_serd_writer_impl_1aba094b25116ebac728a7b329f45f1196" kindref="member">context</ref>.<ref refid="struct_write_context_1a2d109c77586c02ab2fe63deda66d5f97" kindref="member">graph</ref>);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__serd_1ga037ef71317b8afff0a020072099cd14f" kindref="member">serd_node_free</ref>(&amp;writer-&gt;<ref refid="struct_serd_writer_impl_1aba094b25116ebac728a7b329f45f1196" kindref="member">context</ref>.<ref refid="struct_write_context_1a2b2d587c9e3a63827cb6d40e18c1981f" kindref="member">subject</ref>);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__serd_1ga037ef71317b8afff0a020072099cd14f" kindref="member">serd_node_free</ref>(&amp;writer-&gt;<ref refid="struct_serd_writer_impl_1aba094b25116ebac728a7b329f45f1196" kindref="member">context</ref>.<ref refid="struct_write_context_1a5888c184de5d37d5a7984b1ba1e0e3a3" kindref="member">predicate</ref>);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="struct_serd_writer_impl_1aba094b25116ebac728a7b329f45f1196" kindref="member">context</ref><sp/>=<sp/>WRITE_CONTEXT_NULL;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="struct_serd_writer_impl_1aba094b25116ebac728a7b329f45f1196" kindref="member">context</ref>.<ref refid="struct_write_context_1a2d109c77586c02ab2fe63deda66d5f97" kindref="member">graph</ref>.<ref refid="struct_serd_node_1ac415ada00df1883e7200cfa5c89b7fb9" kindref="member">type</ref><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="group__serd_1gga7ccd8d4fb2c3a6ad690ed6d6fe1b45faa028984ec3afe86cc5acc79df3b279b28" kindref="member">SERD_NOTHING</ref>;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="struct_serd_writer_impl_1aba094b25116ebac728a7b329f45f1196" kindref="member">context</ref>.<ref refid="struct_write_context_1a2b2d587c9e3a63827cb6d40e18c1981f" kindref="member">subject</ref>.<ref refid="struct_serd_node_1ac415ada00df1883e7200cfa5c89b7fb9" kindref="member">type</ref><sp/><sp/><sp/>=<sp/><ref refid="group__serd_1gga7ccd8d4fb2c3a6ad690ed6d6fe1b45faa028984ec3afe86cc5acc79df3b279b28" kindref="member">SERD_NOTHING</ref>;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="struct_serd_writer_impl_1aba094b25116ebac728a7b329f45f1196" kindref="member">context</ref>.<ref refid="struct_write_context_1a5888c184de5d37d5a7984b1ba1e0e3a3" kindref="member">predicate</ref>.<ref refid="struct_serd_node_1ac415ada00df1883e7200cfa5c89b7fb9" kindref="member">type</ref><sp/>=<sp/><ref refid="group__serd_1gga7ccd8d4fb2c3a6ad690ed6d6fe1b45faa028984ec3afe86cc5acc79df3b279b28" kindref="member">SERD_NOTHING</ref>;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="struct_serd_writer_impl_1af311634690e4a79ccacbac2d24f77b3c" kindref="member">empty</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330dafd38f5db6ffd5b5c8646c8023c95dd49" kindref="member">SERD_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="428"><highlight class="normal">}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430" refid="writer_8c_1a1e35064f4b70226adc63b8fe1af7ddf8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="431" refid="writer_8c_1a1e35064f4b70226adc63b8fe1af7ddf8aa926e8e6d97b14f8b2b0c6a2fbbb8272" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="writer_8c_1a1e35064f4b70226adc63b8fe1af7ddf8aa926e8e6d97b14f8b2b0c6a2fbbb8272" kindref="member">FIELD_NONE</ref>,</highlight></codeline>
<codeline lineno="432" refid="writer_8c_1a1e35064f4b70226adc63b8fe1af7ddf8ab810163bf6e87dad5995e00953367de3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="writer_8c_1a1e35064f4b70226adc63b8fe1af7ddf8ab810163bf6e87dad5995e00953367de3" kindref="member">FIELD_SUBJECT</ref>,</highlight></codeline>
<codeline lineno="433" refid="writer_8c_1a1e35064f4b70226adc63b8fe1af7ddf8a5514e037b5ccc4a732be15736061b49d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="writer_8c_1a1e35064f4b70226adc63b8fe1af7ddf8a5514e037b5ccc4a732be15736061b49d" kindref="member">FIELD_PREDICATE</ref>,</highlight></codeline>
<codeline lineno="434" refid="writer_8c_1a1e35064f4b70226adc63b8fe1af7ddf8ab894f6d6a6f8dd7dfa3e3624c10445fe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="writer_8c_1a1e35064f4b70226adc63b8fe1af7ddf8ab894f6d6a6f8dd7dfa3e3624c10445fe" kindref="member">FIELD_OBJECT</ref></highlight></codeline>
<codeline lineno="435"><highlight class="normal">}<sp/><ref refid="writer_8c_1a1e35064f4b70226adc63b8fe1af7ddf8" kindref="member">Field</ref>;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal">write_node(<ref refid="struct_serd_writer_impl" kindref="compound">SerdWriter</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer,</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">node</ref>,</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/><sp/><sp/><sp/>datatype,</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/><sp/><sp/><sp/><ref refid="namespacewaflib_1_1_tools_1_1qt4_1a1410657c327d97e1b283cb08a32121f4" kindref="member">lang</ref>,</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="writer_8c_1a1e35064f4b70226adc63b8fe1af7ddf8" kindref="member">Field</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field,</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__serd_1ga77f5ab7cef4fbc88591eaa9970fcddad" kindref="member">SerdStatementFlags</ref><sp/>flags)</highlight></codeline>
<codeline lineno="444"><highlight class="normal">{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_serd_chunk" kindref="compound">SerdChunk</ref><sp/>uri_prefix;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_serd_chunk" kindref="compound">SerdChunk</ref><sp/>uri_suffix;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>has_scheme;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(node-&gt;<ref refid="struct_serd_node_1ac415ada00df1883e7200cfa5c89b7fb9" kindref="member">type</ref>)<sp/>{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__serd_1gga7ccd8d4fb2c3a6ad690ed6d6fe1b45faaed82589a7355a2086b1c9cd91ec261c7" kindref="member">SERD_BLANK</ref>:</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(writer-&gt;<ref refid="struct_serd_writer_impl_1a7db3f4393ea64d07533d64024757f165" kindref="member">syntax</ref><sp/>!=<sp/><ref refid="group__serd_1gga42683406fcfa9046b28dd951cefd3391a3debf79a887908f0502c20029cd050a0" kindref="member">SERD_NTRIPLES</ref></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>((field<sp/>==<sp/><ref refid="writer_8c_1a1e35064f4b70226adc63b8fe1af7ddf8ab810163bf6e87dad5995e00953367de3" kindref="member">FIELD_SUBJECT</ref><sp/>&amp;&amp;<sp/>(flags<sp/>&amp;<sp/><ref refid="group__serd_1gga9f7ab02c389af900f04d29be09c57647a4884dff61b0d7db44be17bb950158f8e" kindref="member">SERD_ANON_S_BEGIN</ref>))</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(field<sp/>==<sp/><ref refid="writer_8c_1a1e35064f4b70226adc63b8fe1af7ddf8ab894f6d6a6f8dd7dfa3e3624c10445fe" kindref="member">FIELD_OBJECT</ref><sp/>&amp;&amp;<sp/>(flags<sp/>&amp;<sp/><ref refid="group__serd_1gga9f7ab02c389af900f04d29be09c57647aae52aa2d821bdd02e828cfcf07692978" kindref="member">SERD_ANON_O_BEGIN</ref>))))<sp/>{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++writer-&gt;<ref refid="struct_serd_writer_impl_1a9603d4b7de01f0d78fd064ebf9311fff" kindref="member">indent</ref>;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_sep(writer,<sp/><ref refid="writer_8c_1a050d7b0e8e309ae551d898749910ccf8a1a22fc11b9bd7fa204e4116ae562d333" kindref="member">SEP_ANON_BEGIN</ref>);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(writer-&gt;<ref refid="struct_serd_writer_impl_1a7db3f4393ea64d07533d64024757f165" kindref="member">syntax</ref><sp/>!=<sp/><ref refid="group__serd_1gga42683406fcfa9046b28dd951cefd3391a3debf79a887908f0502c20029cd050a0" kindref="member">SERD_NTRIPLES</ref></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(field<sp/>==<sp/><ref refid="writer_8c_1a1e35064f4b70226adc63b8fe1af7ddf8ab810163bf6e87dad5995e00953367de3" kindref="member">FIELD_SUBJECT</ref><sp/>&amp;&amp;<sp/>(flags<sp/>&amp;<sp/><ref refid="group__serd_1gga9f7ab02c389af900f04d29be09c57647ada6665ea768d1fa37766c7a9b5e38d2f" kindref="member">SERD_LIST_S_BEGIN</ref>)))<sp/>{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(writer-&gt;<ref refid="struct_serd_writer_impl_1a976831995112596f11a736f94dad065a" kindref="member">list_depth</ref><sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copy_node(&amp;writer-&gt;<ref refid="struct_serd_writer_impl_1a8434d419faad7889fd98a10b4255a848" kindref="member">list_subj</ref>,<sp/>node);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++writer-&gt;<ref refid="struct_serd_writer_impl_1a976831995112596f11a736f94dad065a" kindref="member">list_depth</ref>;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++writer-&gt;<ref refid="struct_serd_writer_impl_1a9603d4b7de01f0d78fd064ebf9311fff" kindref="member">indent</ref>;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_sep(writer,<sp/><ref refid="writer_8c_1a050d7b0e8e309ae551d898749910ccf8a9bafb6045a967a24af1516902b4296eb" kindref="member">SEP_LIST_BEGIN</ref>);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(writer-&gt;<ref refid="struct_serd_writer_impl_1a7db3f4393ea64d07533d64024757f165" kindref="member">syntax</ref><sp/>!=<sp/><ref refid="group__serd_1gga42683406fcfa9046b28dd951cefd3391a3debf79a887908f0502c20029cd050a0" kindref="member">SERD_NTRIPLES</ref></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(field<sp/>==<sp/><ref refid="writer_8c_1a1e35064f4b70226adc63b8fe1af7ddf8ab894f6d6a6f8dd7dfa3e3624c10445fe" kindref="member">FIELD_OBJECT</ref><sp/>&amp;&amp;<sp/>(flags<sp/>&amp;<sp/><ref refid="group__serd_1gga9f7ab02c389af900f04d29be09c57647a546d2b47940fe7e7fcf866dcb278788d" kindref="member">SERD_LIST_O_BEGIN</ref>)))<sp/>{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++writer-&gt;<ref refid="struct_serd_writer_impl_1a9603d4b7de01f0d78fd064ebf9311fff" kindref="member">indent</ref>;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++writer-&gt;<ref refid="struct_serd_writer_impl_1a976831995112596f11a736f94dad065a" kindref="member">list_depth</ref>;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_sep(writer,<sp/><ref refid="writer_8c_1a050d7b0e8e309ae551d898749910ccf8a9bafb6045a967a24af1516902b4296eb" kindref="member">SEP_LIST_BEGIN</ref>);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(writer-&gt;<ref refid="struct_serd_writer_impl_1a7db3f4393ea64d07533d64024757f165" kindref="member">syntax</ref><sp/>!=<sp/><ref refid="group__serd_1gga42683406fcfa9046b28dd951cefd3391a3debf79a887908f0502c20029cd050a0" kindref="member">SERD_NTRIPLES</ref></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>((field<sp/>==<sp/><ref refid="writer_8c_1a1e35064f4b70226adc63b8fe1af7ddf8ab810163bf6e87dad5995e00953367de3" kindref="member">FIELD_SUBJECT</ref><sp/>&amp;&amp;<sp/>(flags<sp/>&amp;<sp/><ref refid="group__serd_1gga9f7ab02c389af900f04d29be09c57647a09c7af768d2df031e453af6cd4b5c443" kindref="member">SERD_EMPTY_S</ref>))</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(field<sp/>==<sp/><ref refid="writer_8c_1a1e35064f4b70226adc63b8fe1af7ddf8ab894f6d6a6f8dd7dfa3e3624c10445fe" kindref="member">FIELD_OBJECT</ref><sp/>&amp;&amp;<sp/>(flags<sp/>&amp;<sp/><ref refid="group__serd_1gga9f7ab02c389af900f04d29be09c57647a392894ad449f66514ac9395708bf7a2e" kindref="member">SERD_EMPTY_O</ref>))))<sp/>{</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_writer_impl_1aac5a4d07e1eb97466d582580ff28ab5d" kindref="member">sink</ref>(</highlight><highlight class="stringliteral">&quot;[]&quot;</highlight><highlight class="normal">,<sp/>2,<sp/>writer);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_writer_impl_1aac5a4d07e1eb97466d582580ff28ab5d" kindref="member">sink</ref>(</highlight><highlight class="stringliteral">&quot;_:&quot;</highlight><highlight class="normal">,<sp/>2,<sp/>writer);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(writer-&gt;<ref refid="struct_serd_writer_impl_1aee52b0f37a85353b23532eac5782d553" kindref="member">bprefix</ref><sp/>&amp;&amp;<sp/>!strncmp((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)node-&gt;<ref refid="struct_serd_node_1a50033bcc22d7a31e8515088ebf7d50ed" kindref="member">buf</ref>,</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)writer-&gt;<ref refid="struct_serd_writer_impl_1aee52b0f37a85353b23532eac5782d553" kindref="member">bprefix</ref>,</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="struct_serd_writer_impl_1ac164b6ed914e2eaf1db73113a103788a" kindref="member">bprefix_len</ref>))<sp/>{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_writer_impl_1aac5a4d07e1eb97466d582580ff28ab5d" kindref="member">sink</ref>(node-&gt;<ref refid="struct_serd_node_1a50033bcc22d7a31e8515088ebf7d50ed" kindref="member">buf</ref><sp/>+<sp/>writer-&gt;<ref refid="struct_serd_writer_impl_1ac164b6ed914e2eaf1db73113a103788a" kindref="member">bprefix_len</ref>,</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="struct_serd_node_1a64b294c408ae9387ffaa78a742196985" kindref="member">n_bytes</ref><sp/>-<sp/>writer-&gt;<ref refid="struct_serd_writer_impl_1ac164b6ed914e2eaf1db73113a103788a" kindref="member">bprefix_len</ref>,</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_writer_impl_1aac5a4d07e1eb97466d582580ff28ab5d" kindref="member">sink</ref>(node-&gt;<ref refid="struct_serd_node_1a50033bcc22d7a31e8515088ebf7d50ed" kindref="member">buf</ref>,<sp/>node-&gt;<ref refid="struct_serd_node_1a64b294c408ae9387ffaa78a742196985" kindref="member">n_bytes</ref>,<sp/>writer);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__serd_1gga7ccd8d4fb2c3a6ad690ed6d6fe1b45faa8a72fff2f6f94adeb11ccadf12c117d8" kindref="member">SERD_CURIE</ref>:</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(writer-&gt;<ref refid="struct_serd_writer_impl_1a7db3f4393ea64d07533d64024757f165" kindref="member">syntax</ref>)<sp/>{</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__serd_1gga42683406fcfa9046b28dd951cefd3391a3debf79a887908f0502c20029cd050a0" kindref="member">SERD_NTRIPLES</ref>:</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__serd_1gac5a39f1201094a76d12b0bb509b8536f" kindref="member">serd_env_expand</ref>(writer-&gt;<ref refid="struct_serd_writer_impl_1a817b3f152080fae12294fcab0976e3fc" kindref="member">env</ref>,<sp/>node,<sp/>&amp;uri_prefix,<sp/>&amp;uri_suffix))<sp/>{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w_err(writer,<sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330dab48fe996907c25db18ab33e6f97255b3" kindref="member">SERD_ERR_BAD_CURIE</ref>,</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;undefined<sp/>namespace<sp/>prefix<sp/>`%s&apos;\n&quot;</highlight><highlight class="normal">,<sp/>node-&gt;<ref refid="struct_serd_node_1a50033bcc22d7a31e8515088ebf7d50ed" kindref="member">buf</ref>);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_writer_impl_1aac5a4d07e1eb97466d582580ff28ab5d" kindref="member">sink</ref>(</highlight><highlight class="stringliteral">&quot;&lt;&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>writer);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_uri(writer,<sp/>uri_prefix.<ref refid="struct_serd_chunk_1a1fb21c23d2c2eecac5cf57b10ac370f6" kindref="member">buf</ref>,<sp/>uri_prefix.<ref refid="struct_serd_chunk_1a0a9e8bfa17dc87785f51262ba4769278" kindref="member">len</ref>);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_uri(writer,<sp/>uri_suffix.<ref refid="struct_serd_chunk_1a1fb21c23d2c2eecac5cf57b10ac370f6" kindref="member">buf</ref>,<sp/>uri_suffix.<ref refid="struct_serd_chunk_1a0a9e8bfa17dc87785f51262ba4769278" kindref="member">len</ref>);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_writer_impl_1aac5a4d07e1eb97466d582580ff28ab5d" kindref="member">sink</ref>(</highlight><highlight class="stringliteral">&quot;&gt;&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>writer);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__serd_1gga42683406fcfa9046b28dd951cefd3391a4acfee57d17213dcb55e94c55a4fd78e" kindref="member">SERD_TURTLE</ref>:</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_lname(writer,<sp/>node-&gt;<ref refid="struct_serd_node_1a50033bcc22d7a31e8515088ebf7d50ed" kindref="member">buf</ref>,<sp/>node-&gt;<ref refid="struct_serd_node_1a64b294c408ae9387ffaa78a742196985" kindref="member">n_bytes</ref>);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__serd_1gga7ccd8d4fb2c3a6ad690ed6d6fe1b45faaa661a7e84228e32f0b979839658bf4c6" kindref="member">SERD_LITERAL</ref>:</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(writer-&gt;<ref refid="struct_serd_writer_impl_1a7db3f4393ea64d07533d64024757f165" kindref="member">syntax</ref><sp/>==<sp/><ref refid="group__serd_1gga42683406fcfa9046b28dd951cefd3391a4acfee57d17213dcb55e94c55a4fd78e" kindref="member">SERD_TURTLE</ref><sp/>&amp;&amp;<sp/>datatype<sp/>&amp;&amp;<sp/>datatype-&gt;<ref refid="struct_serd_node_1a50033bcc22d7a31e8515088ebf7d50ed" kindref="member">buf</ref>)<sp/>{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>type_uri<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)datatype-&gt;<ref refid="struct_serd_node_1a50033bcc22d7a31e8515088ebf7d50ed" kindref="member">buf</ref>;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="winfun_8c_1ab24f32995c1d94525943b4568cce20cb" kindref="member">if</ref><sp/>(!strncmp(type_uri,<sp/><ref refid="writer_8c_1a69399823e754e5d4184435f0c079270a" kindref="member">NS_XSD</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="writer_8c_1a69399823e754e5d4184435f0c079270a" kindref="member">NS_XSD</ref>)<sp/>-<sp/>1)<sp/>&amp;&amp;<sp/>(</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!strcmp(type_uri<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="writer_8c_1a69399823e754e5d4184435f0c079270a" kindref="member">NS_XSD</ref>)<sp/>-<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;boolean&quot;</highlight><highlight class="normal">)<sp/>||</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!strcmp(type_uri<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="writer_8c_1a69399823e754e5d4184435f0c079270a" kindref="member">NS_XSD</ref>)<sp/>-<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;integer&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_writer_impl_1aac5a4d07e1eb97466d582580ff28ab5d" kindref="member">sink</ref>(node-&gt;<ref refid="struct_serd_node_1a50033bcc22d7a31e8515088ebf7d50ed" kindref="member">buf</ref>,<sp/>node-&gt;<ref refid="struct_serd_node_1a64b294c408ae9387ffaa78a742196985" kindref="member">n_bytes</ref>,<sp/>writer);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(type_uri<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="writer_8c_1a69399823e754e5d4184435f0c079270a" kindref="member">NS_XSD</ref>)<sp/>-<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;decimal&quot;</highlight><highlight class="normal">)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strchr((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)node-&gt;<ref refid="struct_serd_node_1a50033bcc22d7a31e8515088ebf7d50ed" kindref="member">buf</ref>,<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="struct_serd_node_1a50033bcc22d7a31e8515088ebf7d50ed" kindref="member">buf</ref>[node-&gt;<ref refid="struct_serd_node_1a64b294c408ae9387ffaa78a742196985" kindref="member">n_bytes</ref><sp/>-<sp/>1]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>xsd:decimal<sp/>literals<sp/>without<sp/>trailing<sp/>digits,<sp/>e.g.<sp/>&quot;5.&quot;,<sp/>can</highlight></codeline>
<codeline lineno="513"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>not<sp/>be<sp/>written<sp/>bare<sp/>in<sp/>Turtle.<sp/><sp/>We<sp/>could<sp/>add<sp/>a<sp/>0<sp/>which<sp/>is</highlight></codeline>
<codeline lineno="514"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prettier,<sp/>but<sp/>changes<sp/>the<sp/>text<sp/>and<sp/>breaks<sp/>round<sp/>tripping.</highlight></codeline>
<codeline lineno="515"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_writer_impl_1aac5a4d07e1eb97466d582580ff28ab5d" kindref="member">sink</ref>(node-&gt;<ref refid="struct_serd_node_1a50033bcc22d7a31e8515088ebf7d50ed" kindref="member">buf</ref>,<sp/>node-&gt;<ref refid="struct_serd_node_1a64b294c408ae9387ffaa78a742196985" kindref="member">n_bytes</ref>,<sp/>writer);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(writer-&gt;<ref refid="struct_serd_writer_impl_1a7db3f4393ea64d07533d64024757f165" kindref="member">syntax</ref><sp/>!=<sp/><ref refid="group__serd_1gga42683406fcfa9046b28dd951cefd3391a3debf79a887908f0502c20029cd050a0" kindref="member">SERD_NTRIPLES</ref></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(node-&gt;<ref refid="struct_serd_node_1a945891f8a5762a5739fc6ad7e023b50c" kindref="member">flags</ref><sp/>&amp;<sp/>(<ref refid="group__serd_1ggaf4ef160dcb28ebf5786dfd138807d8b5adfeaf2c1a43d47c219474095fbba2a5a" kindref="member">SERD_HAS_NEWLINE</ref>|<ref refid="group__serd_1ggaf4ef160dcb28ebf5786dfd138807d8b5ac3f09d734dd3ec4325e7b2f1c4bfdaca" kindref="member">SERD_HAS_QUOTE</ref>)))<sp/>{</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_writer_impl_1aac5a4d07e1eb97466d582580ff28ab5d" kindref="member">sink</ref>(</highlight><highlight class="stringliteral">&quot;\&quot;\&quot;\&quot;&quot;</highlight><highlight class="normal">,<sp/>3,<sp/>writer);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_text(writer,<sp/><ref refid="writer_8c_1a79248e6aa05b23ea2cdc0031fa42f6f1a3663debe5fe656a6b3727cf15ef04e0c" kindref="member">WRITE_LONG_STRING</ref>,<sp/>node-&gt;<ref refid="struct_serd_node_1a50033bcc22d7a31e8515088ebf7d50ed" kindref="member">buf</ref>,<sp/>node-&gt;<ref refid="struct_serd_node_1a64b294c408ae9387ffaa78a742196985" kindref="member">n_bytes</ref>);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_writer_impl_1aac5a4d07e1eb97466d582580ff28ab5d" kindref="member">sink</ref>(</highlight><highlight class="stringliteral">&quot;\&quot;\&quot;\&quot;&quot;</highlight><highlight class="normal">,<sp/>3,<sp/>writer);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_writer_impl_1aac5a4d07e1eb97466d582580ff28ab5d" kindref="member">sink</ref>(</highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>writer);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_text(writer,<sp/><ref refid="writer_8c_1a79248e6aa05b23ea2cdc0031fa42f6f1ad99bdd008ac07aa7a204cfbbb472c1b9" kindref="member">WRITE_STRING</ref>,<sp/>node-&gt;<ref refid="struct_serd_node_1a50033bcc22d7a31e8515088ebf7d50ed" kindref="member">buf</ref>,<sp/>node-&gt;<ref refid="struct_serd_node_1a64b294c408ae9387ffaa78a742196985" kindref="member">n_bytes</ref>);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_writer_impl_1aac5a4d07e1eb97466d582580ff28ab5d" kindref="member">sink</ref>(</highlight><highlight class="stringliteral">&quot;\&quot;&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>writer);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lang<sp/>&amp;&amp;<sp/>lang-&gt;<ref refid="struct_serd_node_1a50033bcc22d7a31e8515088ebf7d50ed" kindref="member">buf</ref>)<sp/>{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_writer_impl_1aac5a4d07e1eb97466d582580ff28ab5d" kindref="member">sink</ref>(</highlight><highlight class="stringliteral">&quot;@&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>writer);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_writer_impl_1aac5a4d07e1eb97466d582580ff28ab5d" kindref="member">sink</ref>(lang-&gt;<ref refid="struct_serd_node_1a50033bcc22d7a31e8515088ebf7d50ed" kindref="member">buf</ref>,<sp/>lang-&gt;<ref refid="struct_serd_node_1a64b294c408ae9387ffaa78a742196985" kindref="member">n_bytes</ref>,<sp/>writer);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(datatype<sp/>&amp;&amp;<sp/>datatype-&gt;<ref refid="struct_serd_node_1a50033bcc22d7a31e8515088ebf7d50ed" kindref="member">buf</ref>)<sp/>{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_writer_impl_1aac5a4d07e1eb97466d582580ff28ab5d" kindref="member">sink</ref>(</highlight><highlight class="stringliteral">&quot;^^&quot;</highlight><highlight class="normal">,<sp/>2,<sp/>writer);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_node(writer,<sp/>datatype,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="writer_8c_1a1e35064f4b70226adc63b8fe1af7ddf8aa926e8e6d97b14f8b2b0c6a2fbbb8272" kindref="member">FIELD_NONE</ref>,<sp/>flags);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__serd_1gga7ccd8d4fb2c3a6ad690ed6d6fe1b45faa7c01ef6de89d3245d4aed20da0736d24" kindref="member">SERD_URI</ref>:</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>has_scheme<sp/>=<sp/><ref refid="group__serd_1gaaddea01f53227c6d984a94e94164f603" kindref="member">serd_uri_string_has_scheme</ref>(node-&gt;<ref refid="struct_serd_node_1a50033bcc22d7a31e8515088ebf7d50ed" kindref="member">buf</ref>);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(field<sp/>==<sp/><ref refid="writer_8c_1a1e35064f4b70226adc63b8fe1af7ddf8a5514e037b5ccc4a732be15736061b49d" kindref="member">FIELD_PREDICATE</ref><sp/>&amp;&amp;<sp/>(writer-&gt;<ref refid="struct_serd_writer_impl_1a7db3f4393ea64d07533d64024757f165" kindref="member">syntax</ref><sp/>==<sp/><ref refid="group__serd_1gga42683406fcfa9046b28dd951cefd3391a4acfee57d17213dcb55e94c55a4fd78e" kindref="member">SERD_TURTLE</ref>)</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>!strcmp((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)node-&gt;<ref refid="struct_serd_node_1a50033bcc22d7a31e8515088ebf7d50ed" kindref="member">buf</ref>,<sp/><ref refid="writer_8c_1a298b6f024c8a4d1832092da69d976137" kindref="member">NS_RDF</ref><sp/></highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_writer_impl_1aac5a4d07e1eb97466d582580ff28ab5d" kindref="member">sink</ref>(</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>writer);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((writer-&gt;<ref refid="struct_serd_writer_impl_1a7db3f4393ea64d07533d64024757f165" kindref="member">syntax</ref><sp/>==<sp/><ref refid="group__serd_1gga42683406fcfa9046b28dd951cefd3391a4acfee57d17213dcb55e94c55a4fd78e" kindref="member">SERD_TURTLE</ref>)</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>!strcmp((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)node-&gt;<ref refid="struct_serd_node_1a50033bcc22d7a31e8515088ebf7d50ed" kindref="member">buf</ref>,<sp/><ref refid="writer_8c_1a298b6f024c8a4d1832092da69d976137" kindref="member">NS_RDF</ref><sp/></highlight><highlight class="stringliteral">&quot;nil&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_writer_impl_1aac5a4d07e1eb97466d582580ff28ab5d" kindref="member">sink</ref>(</highlight><highlight class="stringliteral">&quot;()&quot;</highlight><highlight class="normal">,<sp/>2,<sp/>writer);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(has_scheme<sp/>&amp;&amp;<sp/>(writer-&gt;<ref refid="struct_serd_writer_impl_1a731bcb7aa9fdd36e19e9e857b9a75b57" kindref="member">style</ref><sp/>&amp;<sp/><ref refid="group__serd_1ggae51da58ac1f1886c75ee2326495daeb2a765d540f7a2e3dd87d57fa641c0a8488" kindref="member">SERD_STYLE_CURIED</ref>))<sp/>{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref><sp/><sp/><ref refid="lib_2expat_8h_1ab9c3d990bb61927ef5406b25c41652ee" kindref="member">prefix</ref>;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_chunk" kindref="compound">SerdChunk</ref><sp/>suffix;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__serd_1gabeffe38076753a62dab52e0eeb1ff770" kindref="member">serd_env_qualify</ref>(writer-&gt;<ref refid="struct_serd_writer_impl_1a817b3f152080fae12294fcab0976e3fc" kindref="member">env</ref>,<sp/>node,<sp/>&amp;prefix,<sp/>&amp;suffix))<sp/>{</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_uri(writer,<sp/>prefix.<ref refid="struct_serd_node_1a50033bcc22d7a31e8515088ebf7d50ed" kindref="member">buf</ref>,<sp/>prefix.<ref refid="struct_serd_node_1a64b294c408ae9387ffaa78a742196985" kindref="member">n_bytes</ref>);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_writer_impl_1aac5a4d07e1eb97466d582580ff28ab5d" kindref="member">sink</ref>(</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>writer);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_uri(writer,<sp/>suffix.<ref refid="struct_serd_chunk_1a1fb21c23d2c2eecac5cf57b10ac370f6" kindref="member">buf</ref>,<sp/>suffix.<ref refid="struct_serd_chunk_1a0a9e8bfa17dc87785f51262ba4769278" kindref="member">len</ref>);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_writer_impl_1aac5a4d07e1eb97466d582580ff28ab5d" kindref="member">sink</ref>(</highlight><highlight class="stringliteral">&quot;&lt;&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>writer);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(writer-&gt;<ref refid="struct_serd_writer_impl_1a731bcb7aa9fdd36e19e9e857b9a75b57" kindref="member">style</ref><sp/>&amp;<sp/><ref refid="group__serd_1ggae51da58ac1f1886c75ee2326495daeb2a5e2df70862512f94f6b2535ae63119be" kindref="member">SERD_STYLE_RESOLVED</ref>)<sp/>{</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_u_r_i" kindref="compound">SerdURI</ref><sp/>in_base_uri,<sp/><ref refid="lib_2expat_8h_1a5a9fdd6c2606370ad12f24c078ac6585" kindref="member">uri</ref>,<sp/>abs_uri;</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__serd_1ga94b861ea65187556a473dcb668ab8667" kindref="member">serd_env_get_base_uri</ref>(writer-&gt;<ref refid="struct_serd_writer_impl_1a817b3f152080fae12294fcab0976e3fc" kindref="member">env</ref>,<sp/>&amp;in_base_uri);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__serd_1ga448a194144052f3edea6030d3a950eb0" kindref="member">serd_uri_parse</ref>(node-&gt;<ref refid="struct_serd_node_1a50033bcc22d7a31e8515088ebf7d50ed" kindref="member">buf</ref>,<sp/>&amp;uri);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__serd_1ga5af85594b54a6bcfd252cefeaf367f22" kindref="member">serd_uri_resolve</ref>(&amp;uri,<sp/>&amp;in_base_uri,<sp/>&amp;abs_uri);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rooted<sp/>=<sp/>uri_is_under(&amp;writer-&gt;<ref refid="struct_serd_writer_impl_1ae17130ea21f914dedbf71c16dd6059e5" kindref="member">base_uri</ref>,<sp/>&amp;writer-&gt;<ref refid="struct_serd_writer_impl_1af3ecd74189e4f3f0612802a7c0dd0adb" kindref="member">root_uri</ref>);</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_u_r_i" kindref="compound">SerdURI</ref>*<sp/>root<sp/>=<sp/>rooted<sp/>?<sp/>&amp;writer-&gt;<ref refid="struct_serd_writer_impl_1af3ecd74189e4f3f0612802a7c0dd0adb" kindref="member">root_uri</ref><sp/>:<sp/>&amp;<sp/>writer-&gt;<ref refid="struct_serd_writer_impl_1ae17130ea21f914dedbf71c16dd6059e5" kindref="member">base_uri</ref>;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!uri_is_under(&amp;abs_uri,<sp/>root)<sp/>||</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="struct_serd_writer_impl_1a7db3f4393ea64d07533d64024757f165" kindref="member">syntax</ref><sp/>==<sp/><ref refid="group__serd_1gga42683406fcfa9046b28dd951cefd3391a3debf79a887908f0502c20029cd050a0" kindref="member">SERD_NTRIPLES</ref>)<sp/>{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__serd_1ga210c50472dac0f3772f1067382cd2763" kindref="member">serd_uri_serialise</ref>(&amp;abs_uri,<sp/>uri_sink,<sp/>writer);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__serd_1ga9f7fedb16a93ccddbddbbdf93d6f4165" kindref="member">serd_uri_serialise_relative</ref>(</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;uri,<sp/>&amp;writer-&gt;<ref refid="struct_serd_writer_impl_1ae17130ea21f914dedbf71c16dd6059e5" kindref="member">base_uri</ref>,<sp/>root,<sp/>uri_sink,<sp/>writer);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_uri(writer,<sp/>node-&gt;<ref refid="struct_serd_node_1a50033bcc22d7a31e8515088ebf7d50ed" kindref="member">buf</ref>,<sp/>node-&gt;<ref refid="struct_serd_node_1a64b294c408ae9387ffaa78a742196985" kindref="member">n_bytes</ref>);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_writer_impl_1aac5a4d07e1eb97466d582580ff28ab5d" kindref="member">sink</ref>(</highlight><highlight class="stringliteral">&quot;&gt;&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>writer);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="struct_serd_writer_impl_1a9dcf031aeff870976bd44e4966c39835" kindref="member">last_sep</ref><sp/>=<sp/><ref refid="writer_8c_1a050d7b0e8e309ae551d898749910ccf8a49d7665ac7d679cfcf7f4527ffd263a4" kindref="member">SEP_NONE</ref>;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="582"><highlight class="normal">}</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal">is_resource(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/><ref refid="structnode" kindref="compound">node</ref>)</highlight></codeline>
<codeline lineno="586"><highlight class="normal">{</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>node-&gt;<ref refid="struct_serd_node_1ac415ada00df1883e7200cfa5c89b7fb9" kindref="member">type</ref><sp/>&gt;<sp/><ref refid="group__serd_1gga7ccd8d4fb2c3a6ad690ed6d6fe1b45faaa661a7e84228e32f0b979839658bf4c6" kindref="member">SERD_LITERAL</ref>;</highlight></codeline>
<codeline lineno="588"><highlight class="normal">}</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal">write_pred(<ref refid="struct_serd_writer_impl" kindref="compound">SerdWriter</ref>*<sp/>writer,<sp/><ref refid="group__serd_1ga77f5ab7cef4fbc88591eaa9970fcddad" kindref="member">SerdStatementFlags</ref><sp/>flags,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/>pred)</highlight></codeline>
<codeline lineno="592"><highlight class="normal">{</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/>write_node(writer,<sp/>pred,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="writer_8c_1a1e35064f4b70226adc63b8fe1af7ddf8a5514e037b5ccc4a732be15736061b49d" kindref="member">FIELD_PREDICATE</ref>,<sp/>flags);</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/>write_sep(writer,<sp/><ref refid="writer_8c_1a050d7b0e8e309ae551d898749910ccf8a27176ef17c5561840ead42f0ec3cf234" kindref="member">SEP_P_O</ref>);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/>copy_node(&amp;writer-&gt;<ref refid="struct_serd_writer_impl_1aba094b25116ebac728a7b329f45f1196" kindref="member">context</ref>.<ref refid="struct_write_context_1a5888c184de5d37d5a7984b1ba1e0e3a3" kindref="member">predicate</ref>,<sp/>pred);</highlight></codeline>
<codeline lineno="596"><highlight class="normal">}</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal">write_list_obj(<ref refid="struct_serd_writer_impl" kindref="compound">SerdWriter</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer,</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__serd_1ga77f5ab7cef4fbc88591eaa9970fcddad" kindref="member">SerdStatementFlags</ref><sp/>flags,</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/><sp/><sp/><sp/><ref refid="xlmath_8c_1a767c5fa064d0a1e1f8b447769f1a890b" kindref="member">predicate</ref>,</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/><sp/><sp/><sp/>datatype,</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/><sp/><sp/><sp/><ref refid="namespacewaflib_1_1_tools_1_1qt4_1a1410657c327d97e1b283cb08a32121f4" kindref="member">lang</ref>)</highlight></codeline>
<codeline lineno="605"><highlight class="normal">{</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)object-&gt;<ref refid="struct_serd_node_1a50033bcc22d7a31e8515088ebf7d50ed" kindref="member">buf</ref>,<sp/><ref refid="writer_8c_1a298b6f024c8a4d1832092da69d976137" kindref="member">NS_RDF</ref><sp/></highlight><highlight class="stringliteral">&quot;nil&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--writer-&gt;<ref refid="struct_serd_writer_impl_1a9603d4b7de01f0d78fd064ebf9311fff" kindref="member">indent</ref>;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_sep(writer,<sp/><ref refid="writer_8c_1a050d7b0e8e309ae551d898749910ccf8a7cbe2be8c39d1895b980d1f94e9cc864" kindref="member">SEP_LIST_END</ref>);</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)predicate-&gt;<ref refid="struct_serd_node_1a50033bcc22d7a31e8515088ebf7d50ed" kindref="member">buf</ref>,<sp/><ref refid="writer_8c_1a298b6f024c8a4d1832092da69d976137" kindref="member">NS_RDF</ref><sp/></highlight><highlight class="stringliteral">&quot;first&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_sep(writer,<sp/><ref refid="writer_8c_1a050d7b0e8e309ae551d898749910ccf8a237849331041972b0eb3590e90a177f6" kindref="member">SEP_LIST_SEP</ref>);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_node(writer,<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/>datatype,<sp/>lang,<sp/><ref refid="writer_8c_1a1e35064f4b70226adc63b8fe1af7ddf8ab894f6d6a6f8dd7dfa3e3624c10445fe" kindref="member">FIELD_OBJECT</ref>,<sp/>flags);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="615"><highlight class="normal">}</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref></highlight></codeline>
<codeline lineno="619" refid="group__serd_1ga0c055816f6eb769e55128701402e68b4" refkind="member"><highlight class="normal"><ref refid="group__serd_1ga0c055816f6eb769e55128701402e68b4" kindref="member">serd_writer_write_statement</ref>(<ref refid="struct_serd_writer_impl" kindref="compound">SerdWriter</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer,</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__serd_1ga77f5ab7cef4fbc88591eaa9970fcddad" kindref="member">SerdStatementFlags</ref><sp/>flags,</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/><sp/><sp/><sp/>graph,</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/><sp/><sp/><sp/>subject,</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/><sp/><sp/><sp/>predicate,</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/><sp/><sp/><sp/>datatype,</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/><sp/><sp/><sp/>lang)</highlight></codeline>
<codeline lineno="627"><highlight class="normal">{</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!subject<sp/>||<sp/>!predicate<sp/>||<sp/>!</highlight><highlight class="keywordtype">object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>!subject-&gt;<ref refid="struct_serd_node_1a50033bcc22d7a31e8515088ebf7d50ed" kindref="member">buf</ref><sp/>||<sp/>!predicate-&gt;<ref refid="struct_serd_node_1a50033bcc22d7a31e8515088ebf7d50ed" kindref="member">buf</ref><sp/>||<sp/>!object-&gt;<ref refid="struct_serd_node_1a50033bcc22d7a31e8515088ebf7d50ed" kindref="member">buf</ref></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>!is_resource(subject)<sp/>||<sp/>!is_resource(predicate))<sp/>{</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330da138e7b6b98684e9f408bb91e49bbb315" kindref="member">SERD_ERR_BAD_ARG</ref>;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TRY(write_result)<sp/>\</highlight></codeline>
<codeline lineno="635"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(!write_result)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="636"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>SERD_ERR_UNKNOWN;<sp/>\</highlight></codeline>
<codeline lineno="637"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(writer-&gt;<ref refid="struct_serd_writer_impl_1a7db3f4393ea64d07533d64024757f165" kindref="member">syntax</ref>)<sp/>{</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="group__serd_1gga42683406fcfa9046b28dd951cefd3391a3debf79a887908f0502c20029cd050a0" kindref="member">SERD_NTRIPLES</ref>:</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="writer_8c_1afa03b19f9dda22dcd7b65798da017476" kindref="member">TRY</ref>(write_node(writer,<sp/>subject,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="writer_8c_1a1e35064f4b70226adc63b8fe1af7ddf8ab810163bf6e87dad5995e00953367de3" kindref="member">FIELD_SUBJECT</ref>,<sp/>flags));</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_writer_impl_1aac5a4d07e1eb97466d582580ff28ab5d" kindref="member">sink</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>writer);</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="writer_8c_1afa03b19f9dda22dcd7b65798da017476" kindref="member">TRY</ref>(write_node(writer,<sp/>predicate,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="writer_8c_1a1e35064f4b70226adc63b8fe1af7ddf8a5514e037b5ccc4a732be15736061b49d" kindref="member">FIELD_PREDICATE</ref>,<sp/>flags));</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_writer_impl_1aac5a4d07e1eb97466d582580ff28ab5d" kindref="member">sink</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>writer);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="writer_8c_1afa03b19f9dda22dcd7b65798da017476" kindref="member">TRY</ref>(write_node(writer,<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/>datatype,<sp/>lang,<sp/><ref refid="writer_8c_1a1e35064f4b70226adc63b8fe1af7ddf8ab894f6d6a6f8dd7dfa3e3624c10445fe" kindref="member">FIELD_OBJECT</ref>,<sp/>flags));</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_writer_impl_1aac5a4d07e1eb97466d582580ff28ab5d" kindref="member">sink</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>.\n&quot;</highlight><highlight class="normal">,<sp/>3,<sp/>writer);</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330dafd38f5db6ffd5b5c8646c8023c95dd49" kindref="member">SERD_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((flags<sp/>&amp;<sp/><ref refid="group__serd_1gga9f7ab02c389af900f04d29be09c57647a0d0a1d37007f3e9524ad05fb42fee24a" kindref="member">SERD_LIST_CONT</ref>))<sp/>{</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(write_list_obj(writer,<sp/>flags,<sp/>predicate,<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/>datatype,<sp/>lang))<sp/>{</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reached<sp/>end<sp/>of<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(--writer-&gt;<ref refid="struct_serd_writer_impl_1a976831995112596f11a736f94dad065a" kindref="member">list_depth</ref><sp/>==<sp/>0<sp/>&amp;&amp;<sp/>writer-&gt;<ref refid="struct_serd_writer_impl_1a8434d419faad7889fd98a10b4255a848" kindref="member">list_subj</ref>.<ref refid="struct_serd_node_1ac415ada00df1883e7200cfa5c89b7fb9" kindref="member">type</ref>)<sp/>{</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reset_context(writer,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="struct_serd_writer_impl_1aba094b25116ebac728a7b329f45f1196" kindref="member">context</ref>.<ref refid="struct_write_context_1a2b2d587c9e3a63827cb6d40e18c1981f" kindref="member">subject</ref><sp/>=<sp/>writer-&gt;<ref refid="struct_serd_writer_impl_1a8434d419faad7889fd98a10b4255a848" kindref="member">list_subj</ref>;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="struct_serd_writer_impl_1a8434d419faad7889fd98a10b4255a848" kindref="member">list_subj</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>SERD_NODE_NULL;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330dafd38f5db6ffd5b5c8646c8023c95dd49" kindref="member">SERD_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__serd_1ga19e58c93a79966be1e74d9d92f5ea167" kindref="member">serd_node_equals</ref>(subject,<sp/>&amp;writer-&gt;<ref refid="struct_serd_writer_impl_1aba094b25116ebac728a7b329f45f1196" kindref="member">context</ref>.<ref refid="struct_write_context_1a2b2d587c9e3a63827cb6d40e18c1981f" kindref="member">subject</ref>))<sp/>{</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__serd_1ga19e58c93a79966be1e74d9d92f5ea167" kindref="member">serd_node_equals</ref>(predicate,<sp/>&amp;writer-&gt;<ref refid="struct_serd_writer_impl_1aba094b25116ebac728a7b329f45f1196" kindref="member">context</ref>.<ref refid="struct_write_context_1a5888c184de5d37d5a7984b1ba1e0e3a3" kindref="member">predicate</ref>))<sp/>{</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Abbreviate<sp/>S<sp/>P</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(flags<sp/>&amp;<sp/><ref refid="group__serd_1gga9f7ab02c389af900f04d29be09c57647aae52aa2d821bdd02e828cfcf07692978" kindref="member">SERD_ANON_O_BEGIN</ref>))<sp/>{</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++writer-&gt;<ref refid="struct_serd_writer_impl_1a9603d4b7de01f0d78fd064ebf9311fff" kindref="member">indent</ref>;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_sep(writer,<sp/><ref refid="writer_8c_1a050d7b0e8e309ae551d898749910ccf8ab233df543bbe5243c2422baba5e488dc" kindref="member">SEP_END_O</ref>);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_node(writer,<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/>datatype,<sp/>lang,<sp/><ref refid="writer_8c_1a1e35064f4b70226adc63b8fe1af7ddf8ab894f6d6a6f8dd7dfa3e3624c10445fe" kindref="member">FIELD_OBJECT</ref>,<sp/>flags);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(flags<sp/>&amp;<sp/>SERD_ANON_O_BEGIN))<sp/>{</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--writer-&gt;<ref refid="struct_serd_writer_impl_1a9603d4b7de01f0d78fd064ebf9311fff" kindref="member">indent</ref>;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Abbreviate<sp/>S</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="writer_8c_1a050d7b0e8e309ae551d898749910ccf8" kindref="member">Sep</ref><sp/>sep<sp/>=<sp/>writer-&gt;<ref refid="struct_serd_writer_impl_1aba094b25116ebac728a7b329f45f1196" kindref="member">context</ref>.<ref refid="struct_write_context_1a5888c184de5d37d5a7984b1ba1e0e3a3" kindref="member">predicate</ref>.<ref refid="struct_serd_node_1ac415ada00df1883e7200cfa5c89b7fb9" kindref="member">type</ref><sp/>?<sp/><ref refid="writer_8c_1a050d7b0e8e309ae551d898749910ccf8a50efa84199f04131d33f442db5a44427" kindref="member">SEP_END_P</ref><sp/>:<sp/><ref refid="writer_8c_1a050d7b0e8e309ae551d898749910ccf8aa725e142bec01c1814b2814bb0d15b7a" kindref="member">SEP_S_P</ref>;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_sep(writer,<sp/>sep);</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_pred(writer,<sp/>flags,<sp/>predicate);</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_node(writer,<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/>datatype,<sp/>lang,<sp/><ref refid="writer_8c_1a1e35064f4b70226adc63b8fe1af7ddf8ab894f6d6a6f8dd7dfa3e3624c10445fe" kindref="member">FIELD_OBJECT</ref>,<sp/>flags);</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>abbreviation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(writer-&gt;<ref refid="struct_serd_writer_impl_1aba094b25116ebac728a7b329f45f1196" kindref="member">context</ref>.<ref refid="struct_write_context_1a2b2d587c9e3a63827cb6d40e18c1981f" kindref="member">subject</ref>.<ref refid="struct_serd_node_1ac415ada00df1883e7200cfa5c89b7fb9" kindref="member">type</ref>)<sp/>{</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(writer-&gt;<ref refid="struct_serd_writer_impl_1a9603d4b7de01f0d78fd064ebf9311fff" kindref="member">indent</ref><sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--writer-&gt;<ref refid="struct_serd_writer_impl_1a9603d4b7de01f0d78fd064ebf9311fff" kindref="member">indent</ref>;</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(serd_stack_is_empty(&amp;writer-&gt;<ref refid="struct_serd_writer_impl_1acf6119b5c84e08398304c8e0101161a9" kindref="member">anon_stack</ref>))<sp/>{</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_sep(writer,<sp/><ref refid="writer_8c_1a050d7b0e8e309ae551d898749910ccf8a15a627797251bfeb107e88d56af8940f" kindref="member">SEP_END_S</ref>);</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!writer-&gt;<ref refid="struct_serd_writer_impl_1af311634690e4a79ccacbac2d24f77b3c" kindref="member">empty</ref>)<sp/>{</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_sep(writer,<sp/><ref refid="writer_8c_1a050d7b0e8e309ae551d898749910ccf8aa725e142bec01c1814b2814bb0d15b7a" kindref="member">SEP_S_P</ref>);</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(flags<sp/>&amp;<sp/><ref refid="group__serd_1gga9f7ab02c389af900f04d29be09c57647ac4825dca7b59b50762a87174fc4148b2" kindref="member">SERD_ANON_CONT</ref>))<sp/>{</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_node(writer,<sp/>subject,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="writer_8c_1a1e35064f4b70226adc63b8fe1af7ddf8ab810163bf6e87dad5995e00953367de3" kindref="member">FIELD_SUBJECT</ref>,<sp/>flags);</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++writer-&gt;<ref refid="struct_serd_writer_impl_1a9603d4b7de01f0d78fd064ebf9311fff" kindref="member">indent</ref>;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_sep(writer,<sp/><ref refid="writer_8c_1a050d7b0e8e309ae551d898749910ccf8aa725e142bec01c1814b2814bb0d15b7a" kindref="member">SEP_S_P</ref>);</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++writer-&gt;<ref refid="struct_serd_writer_impl_1a9603d4b7de01f0d78fd064ebf9311fff" kindref="member">indent</ref>;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reset_context(writer,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copy_node(&amp;writer-&gt;<ref refid="struct_serd_writer_impl_1aba094b25116ebac728a7b329f45f1196" kindref="member">context</ref>.<ref refid="struct_write_context_1a2b2d587c9e3a63827cb6d40e18c1981f" kindref="member">subject</ref>,<sp/>subject);</highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(flags<sp/>&amp;<sp/><ref refid="group__serd_1gga9f7ab02c389af900f04d29be09c57647ada6665ea768d1fa37766c7a9b5e38d2f" kindref="member">SERD_LIST_S_BEGIN</ref>))<sp/>{</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_pred(writer,<sp/>flags,<sp/>predicate);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_node(writer,<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/>datatype,<sp/>lang,<sp/><ref refid="writer_8c_1a1e35064f4b70226adc63b8fe1af7ddf8ab894f6d6a6f8dd7dfa3e3624c10445fe" kindref="member">FIELD_OBJECT</ref>,<sp/>flags);</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flags<sp/>&amp;<sp/>(<ref refid="group__serd_1gga9f7ab02c389af900f04d29be09c57647a4884dff61b0d7db44be17bb950158f8e" kindref="member">SERD_ANON_S_BEGIN</ref>|<ref refid="group__serd_1gga9f7ab02c389af900f04d29be09c57647aae52aa2d821bdd02e828cfcf07692978" kindref="member">SERD_ANON_O_BEGIN</ref>))<sp/>{</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_write_context" kindref="compound">WriteContext</ref>*<sp/>ctx<sp/>=<sp/>(<ref refid="struct_write_context" kindref="compound">WriteContext</ref>*)serd_stack_push(</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;writer-&gt;<ref refid="struct_serd_writer_impl_1acf6119b5c84e08398304c8e0101161a9" kindref="member">anon_stack</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_write_context" kindref="compound">WriteContext</ref>));</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ctx<sp/>=<sp/>writer-&gt;<ref refid="struct_serd_writer_impl_1aba094b25116ebac728a7b329f45f1196" kindref="member">context</ref>;</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_write_context" kindref="compound">WriteContext</ref><sp/>new_context<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__serd_1ga5a25ffa37534176468ffc8e4e6ce8d7c" kindref="member">serd_node_copy</ref>(graph),<sp/><ref refid="group__serd_1ga5a25ffa37534176468ffc8e4e6ce8d7c" kindref="member">serd_node_copy</ref>(subject),<sp/>SERD_NODE_NULL<sp/>};</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((flags<sp/>&amp;<sp/><ref refid="group__serd_1gga9f7ab02c389af900f04d29be09c57647a4884dff61b0d7db44be17bb950158f8e" kindref="member">SERD_ANON_S_BEGIN</ref>))<sp/>{</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_context.<ref refid="struct_write_context_1a5888c184de5d37d5a7984b1ba1e0e3a3" kindref="member">predicate</ref><sp/>=<sp/><ref refid="group__serd_1ga5a25ffa37534176468ffc8e4e6ce8d7c" kindref="member">serd_node_copy</ref>(predicate);</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="struct_serd_writer_impl_1aba094b25116ebac728a7b329f45f1196" kindref="member">context</ref><sp/>=<sp/>new_context;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copy_node(&amp;writer-&gt;<ref refid="struct_serd_writer_impl_1aba094b25116ebac728a7b329f45f1196" kindref="member">context</ref>.<ref refid="struct_write_context_1a2d109c77586c02ab2fe63deda66d5f97" kindref="member">graph</ref>,<sp/>graph);</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copy_node(&amp;writer-&gt;<ref refid="struct_serd_writer_impl_1aba094b25116ebac728a7b329f45f1196" kindref="member">context</ref>.<ref refid="struct_write_context_1a2b2d587c9e3a63827cb6d40e18c1981f" kindref="member">subject</ref>,<sp/>subject);</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copy_node(&amp;writer-&gt;<ref refid="struct_serd_writer_impl_1aba094b25116ebac728a7b329f45f1196" kindref="member">context</ref>.<ref refid="struct_write_context_1a5888c184de5d37d5a7984b1ba1e0e3a3" kindref="member">predicate</ref>,<sp/>predicate);</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330dafd38f5db6ffd5b5c8646c8023c95dd49" kindref="member">SERD_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="727"><highlight class="normal">}</highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref></highlight></codeline>
<codeline lineno="731" refid="group__serd_1ga2452df8462454202657ecad76bb26812" refkind="member"><highlight class="normal"><ref refid="group__serd_1ga2452df8462454202657ecad76bb26812" kindref="member">serd_writer_end_anon</ref>(<ref refid="struct_serd_writer_impl" kindref="compound">SerdWriter</ref>*<sp/><sp/><sp/><sp/><sp/>writer,</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/>node)</highlight></codeline>
<codeline lineno="733"><highlight class="normal">{</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(writer-&gt;<ref refid="struct_serd_writer_impl_1a7db3f4393ea64d07533d64024757f165" kindref="member">syntax</ref><sp/>==<sp/><ref refid="group__serd_1gga42683406fcfa9046b28dd951cefd3391a3debf79a887908f0502c20029cd050a0" kindref="member">SERD_NTRIPLES</ref>)<sp/>{</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330dafd38f5db6ffd5b5c8646c8023c95dd49" kindref="member">SERD_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(serd_stack_is_empty(&amp;writer-&gt;<ref refid="struct_serd_writer_impl_1acf6119b5c84e08398304c8e0101161a9" kindref="member">anon_stack</ref>)<sp/>||<sp/>writer-&gt;<ref refid="struct_serd_writer_impl_1a9603d4b7de01f0d78fd064ebf9311fff" kindref="member">indent</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w_err(writer,<sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330dada1292115013f04e99b2ecfe32acd9a5" kindref="member">SERD_ERR_UNKNOWN</ref>,</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;unexpected<sp/>end<sp/>of<sp/>anonymous<sp/>node\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330dada1292115013f04e99b2ecfe32acd9a5" kindref="member">SERD_ERR_UNKNOWN</ref>;</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/>--writer-&gt;<ref refid="struct_serd_writer_impl_1a9603d4b7de01f0d78fd064ebf9311fff" kindref="member">indent</ref>;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/>write_sep(writer,<sp/><ref refid="writer_8c_1a050d7b0e8e309ae551d898749910ccf8a6f009c393b7274d9b5f6acb99322051f" kindref="member">SEP_ANON_END</ref>);</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/>reset_context(writer,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="struct_serd_writer_impl_1aba094b25116ebac728a7b329f45f1196" kindref="member">context</ref><sp/>=<sp/>*anon_stack_top(writer);</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/>serd_stack_pop(&amp;writer-&gt;<ref refid="struct_serd_writer_impl_1acf6119b5c84e08398304c8e0101161a9" kindref="member">anon_stack</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_write_context" kindref="compound">WriteContext</ref>));</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_subject<sp/>=<sp/><ref refid="group__serd_1ga19e58c93a79966be1e74d9d92f5ea167" kindref="member">serd_node_equals</ref>(node,<sp/>&amp;writer-&gt;<ref refid="struct_serd_writer_impl_1aba094b25116ebac728a7b329f45f1196" kindref="member">context</ref>.<ref refid="struct_write_context_1a2b2d587c9e3a63827cb6d40e18c1981f" kindref="member">subject</ref>);</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_subject)<sp/>{</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copy_node(&amp;writer-&gt;<ref refid="struct_serd_writer_impl_1aba094b25116ebac728a7b329f45f1196" kindref="member">context</ref>.<ref refid="struct_write_context_1a2b2d587c9e3a63827cb6d40e18c1981f" kindref="member">subject</ref>,<sp/>node);</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="struct_serd_writer_impl_1aba094b25116ebac728a7b329f45f1196" kindref="member">context</ref>.<ref refid="struct_write_context_1a5888c184de5d37d5a7984b1ba1e0e3a3" kindref="member">predicate</ref>.<ref refid="struct_serd_node_1ac415ada00df1883e7200cfa5c89b7fb9" kindref="member">type</ref><sp/>=<sp/><ref refid="group__serd_1gga7ccd8d4fb2c3a6ad690ed6d6fe1b45faa028984ec3afe86cc5acc79df3b279b28" kindref="member">SERD_NOTHING</ref>;</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330dafd38f5db6ffd5b5c8646c8023c95dd49" kindref="member">SERD_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="753"><highlight class="normal">}</highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref></highlight></codeline>
<codeline lineno="757" refid="group__serd_1gad983c2d9400df1819b821583188b1025" refkind="member"><highlight class="normal"><ref refid="group__serd_1gad983c2d9400df1819b821583188b1025" kindref="member">serd_writer_finish</ref>(<ref refid="struct_serd_writer_impl" kindref="compound">SerdWriter</ref>*<sp/>writer)</highlight></codeline>
<codeline lineno="758"><highlight class="normal">{</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(writer-&gt;<ref refid="struct_serd_writer_impl_1aba094b25116ebac728a7b329f45f1196" kindref="member">context</ref>.<ref refid="struct_write_context_1a2b2d587c9e3a63827cb6d40e18c1981f" kindref="member">subject</ref>.<ref refid="struct_serd_node_1ac415ada00df1883e7200cfa5c89b7fb9" kindref="member">type</ref>)<sp/>{</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_writer_impl_1aac5a4d07e1eb97466d582580ff28ab5d" kindref="member">sink</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>.\n&quot;</highlight><highlight class="normal">,<sp/>3,<sp/>writer);</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(writer-&gt;<ref refid="struct_serd_writer_impl_1a731bcb7aa9fdd36e19e9e857b9a75b57" kindref="member">style</ref><sp/>&amp;<sp/><ref refid="group__serd_1ggae51da58ac1f1886c75ee2326495daeb2a16f426a166de90e1e52da3787bcc77aa" kindref="member">SERD_STYLE_BULK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>serd_bulk_sink_flush(&amp;writer-&gt;<ref refid="struct_serd_writer_impl_1a54a2ff42dd04d7d9288b9271aec4f130" kindref="member">bulk_sink</ref>);</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="struct_serd_writer_impl_1a9603d4b7de01f0d78fd064ebf9311fff" kindref="member">indent</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>reset_context(writer,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="767"><highlight class="normal">}</highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><ref refid="struct_serd_writer_impl" kindref="compound">SerdWriter</ref>*</highlight></codeline>
<codeline lineno="771" refid="group__serd_1gae87f48adca211a7fa2c0432e9ba68d29" refkind="member"><highlight class="normal"><ref refid="group__serd_1gae87f48adca211a7fa2c0432e9ba68d29" kindref="member">serd_writer_new</ref>(<ref refid="group__serd_1ga42683406fcfa9046b28dd951cefd3391" kindref="member">SerdSyntax</ref><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_writer_impl_1a7db3f4393ea64d07533d64024757f165" kindref="member">syntax</ref>,</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__serd_1gae51da58ac1f1886c75ee2326495daeb2" kindref="member">SerdStyle</ref><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_writer_impl_1a731bcb7aa9fdd36e19e9e857b9a75b57" kindref="member">style</ref>,</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_env_impl" kindref="compound">SerdEnv</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_writer_impl_1a817b3f152080fae12294fcab0976e3fc" kindref="member">env</ref>,</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_u_r_i" kindref="compound">SerdURI</ref>*<sp/><ref refid="struct_serd_writer_impl_1ae17130ea21f914dedbf71c16dd6059e5" kindref="member">base_uri</ref>,</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__serd_1ga84861f1df2f4d3323cb0113dae4ced12" kindref="member">SerdSink</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ssink,</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_writer_impl_1ab62fceebc408a6d4762ef81ef69c958c" kindref="member">stream</ref>)</highlight></codeline>
<codeline lineno="777"><highlight class="normal">{</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_write_context" kindref="compound">WriteContext</ref><sp/><ref refid="structcontext" kindref="compound">context</ref><sp/>=<sp/>WRITE_CONTEXT_NULL;</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_serd_writer_impl" kindref="compound">SerdWriter</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer<sp/><sp/>=<sp/>(<ref refid="struct_serd_writer_impl" kindref="compound">SerdWriter</ref>*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_serd_writer_impl" kindref="compound">SerdWriter</ref>));</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="struct_serd_writer_impl_1a7db3f4393ea64d07533d64024757f165" kindref="member">syntax</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_serd_writer_impl_1a7db3f4393ea64d07533d64024757f165" kindref="member">syntax</ref>;</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="struct_serd_writer_impl_1a731bcb7aa9fdd36e19e9e857b9a75b57" kindref="member">style</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_serd_writer_impl_1a731bcb7aa9fdd36e19e9e857b9a75b57" kindref="member">style</ref>;</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="struct_serd_writer_impl_1a817b3f152080fae12294fcab0976e3fc" kindref="member">env</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_serd_writer_impl_1a817b3f152080fae12294fcab0976e3fc" kindref="member">env</ref>;</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="struct_serd_writer_impl_1a70e9ffde53e5b1eec566faee8b8db4ab" kindref="member">root_node</ref><sp/><sp/><sp/><sp/>=<sp/>SERD_NODE_NULL;</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="struct_serd_writer_impl_1af3ecd74189e4f3f0612802a7c0dd0adb" kindref="member">root_uri</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>SERD_URI_NULL;</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="struct_serd_writer_impl_1ae17130ea21f914dedbf71c16dd6059e5" kindref="member">base_uri</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>base_uri<sp/>?<sp/>*base_uri<sp/>:<sp/>SERD_URI_NULL;</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="struct_serd_writer_impl_1acf6119b5c84e08398304c8e0101161a9" kindref="member">anon_stack</ref><sp/><sp/><sp/>=<sp/>serd_stack_new(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_write_context" kindref="compound">WriteContext</ref>));</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="struct_serd_writer_impl_1aac5a4d07e1eb97466d582580ff28ab5d" kindref="member">sink</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>ssink;</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="struct_serd_writer_impl_1ab62fceebc408a6d4762ef81ef69c958c" kindref="member">stream</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_serd_writer_impl_1ab62fceebc408a6d4762ef81ef69c958c" kindref="member">stream</ref>;</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="struct_serd_writer_impl_1aaa70bfa3692cc1306a44829465b8e3e6" kindref="member">error_sink</ref><sp/><sp/><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="struct_serd_writer_impl_1a4f4255f8e32c3e1c7dfc0145fefc7788" kindref="member">error_handle</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="struct_serd_writer_impl_1aba094b25116ebac728a7b329f45f1196" kindref="member">context</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="struct_serd_writer_impl_1aba094b25116ebac728a7b329f45f1196" kindref="member">context</ref>;</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="struct_serd_writer_impl_1a8434d419faad7889fd98a10b4255a848" kindref="member">list_subj</ref><sp/><sp/><sp/><sp/>=<sp/>SERD_NODE_NULL;</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="struct_serd_writer_impl_1a976831995112596f11a736f94dad065a" kindref="member">list_depth</ref><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="struct_serd_writer_impl_1aee52b0f37a85353b23532eac5782d553" kindref="member">bprefix</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="struct_serd_writer_impl_1ac164b6ed914e2eaf1db73113a103788a" kindref="member">bprefix_len</ref><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="struct_serd_writer_impl_1a9603d4b7de01f0d78fd064ebf9311fff" kindref="member">indent</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="struct_serd_writer_impl_1a9dcf031aeff870976bd44e4966c39835" kindref="member">last_sep</ref><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="writer_8c_1a050d7b0e8e309ae551d898749910ccf8a49d7665ac7d679cfcf7f4527ffd263a4" kindref="member">SEP_NONE</ref>;</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="struct_serd_writer_impl_1af311634690e4a79ccacbac2d24f77b3c" kindref="member">empty</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(style<sp/>&amp;<sp/><ref refid="group__serd_1ggae51da58ac1f1886c75ee2326495daeb2a16f426a166de90e1e52da3787bcc77aa" kindref="member">SERD_STYLE_BULK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="struct_serd_writer_impl_1a54a2ff42dd04d7d9288b9271aec4f130" kindref="member">bulk_sink</ref><sp/>=<sp/>serd_bulk_sink_new(ssink,<sp/>stream,<sp/><ref refid="serd__internal_8h_1a6f0323326188077fd7b6f1661a0e037e" kindref="member">SERD_PAGE_SIZE</ref>);</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>writer;</highlight></codeline>
<codeline lineno="803"><highlight class="normal">}</highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="807" refid="group__serd_1gae5b20ff80e98f8b945bf268f7dd1b1aa" refkind="member"><highlight class="normal"><ref refid="group__serd_1gae5b20ff80e98f8b945bf268f7dd1b1aa" kindref="member">serd_writer_set_error_sink</ref>(<ref refid="struct_serd_writer_impl" kindref="compound">SerdWriter</ref>*<sp/><sp/><sp/>writer,</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__serd_1ga925d2fda236697a3e643b307ffe242e5" kindref="member">SerdErrorSink</ref><sp/><ref refid="struct_serd_writer_impl_1aaa70bfa3692cc1306a44829465b8e3e6" kindref="member">error_sink</ref>,</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_writer_impl_1a4f4255f8e32c3e1c7dfc0145fefc7788" kindref="member">error_handle</ref>)</highlight></codeline>
<codeline lineno="810"><highlight class="normal">{</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="struct_serd_writer_impl_1aaa70bfa3692cc1306a44829465b8e3e6" kindref="member">error_sink</ref><sp/><sp/><sp/>=<sp/><ref refid="struct_serd_writer_impl_1aaa70bfa3692cc1306a44829465b8e3e6" kindref="member">error_sink</ref>;</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="struct_serd_writer_impl_1a4f4255f8e32c3e1c7dfc0145fefc7788" kindref="member">error_handle</ref><sp/>=<sp/><ref refid="struct_serd_writer_impl_1a4f4255f8e32c3e1c7dfc0145fefc7788" kindref="member">error_handle</ref>;</highlight></codeline>
<codeline lineno="813"><highlight class="normal">}</highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="817" refid="group__serd_1gaa924d2dcd23afb02ade707be75c7771b" refkind="member"><highlight class="normal"><ref refid="group__serd_1gaa924d2dcd23afb02ade707be75c7771b" kindref="member">serd_writer_chop_blank_prefix</ref>(<ref refid="struct_serd_writer_impl" kindref="compound">SerdWriter</ref>*<sp/><sp/><sp/><sp/>writer,</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*<sp/><ref refid="structprefix" kindref="compound">prefix</ref>)</highlight></codeline>
<codeline lineno="819"><highlight class="normal">{</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/>free(writer-&gt;<ref refid="struct_serd_writer_impl_1aee52b0f37a85353b23532eac5782d553" kindref="member">bprefix</ref>);</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="struct_serd_writer_impl_1ac164b6ed914e2eaf1db73113a103788a" kindref="member">bprefix_len</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="struct_serd_writer_impl_1aee52b0f37a85353b23532eac5782d553" kindref="member">bprefix</ref><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prefix)<sp/>{</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="struct_serd_writer_impl_1ac164b6ed914e2eaf1db73113a103788a" kindref="member">bprefix_len</ref><sp/>=<sp/>strlen((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)prefix);</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="struct_serd_writer_impl_1aee52b0f37a85353b23532eac5782d553" kindref="member">bprefix</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*)malloc(writer-&gt;<ref refid="struct_serd_writer_impl_1ac164b6ed914e2eaf1db73113a103788a" kindref="member">bprefix_len</ref><sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(writer-&gt;<ref refid="struct_serd_writer_impl_1aee52b0f37a85353b23532eac5782d553" kindref="member">bprefix</ref>,<sp/>prefix,<sp/>writer-&gt;<ref refid="struct_serd_writer_impl_1ac164b6ed914e2eaf1db73113a103788a" kindref="member">bprefix_len</ref><sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="828"><highlight class="normal">}</highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="831"><highlight class="normal"><ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref></highlight></codeline>
<codeline lineno="832" refid="group__serd_1ga4149ade7ac611ba531af6d47d821ae3e" refkind="member"><highlight class="normal"><ref refid="group__serd_1ga4149ade7ac611ba531af6d47d821ae3e" kindref="member">serd_writer_set_base_uri</ref>(<ref refid="struct_serd_writer_impl" kindref="compound">SerdWriter</ref>*<sp/><sp/><sp/><sp/><sp/>writer,</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/><ref refid="lib_2expat_8h_1a5a9fdd6c2606370ad12f24c078ac6585" kindref="member">uri</ref>)</highlight></codeline>
<codeline lineno="834"><highlight class="normal">{</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__serd_1gaddd2dd19cd0a36ce4ea39ade113eab62" kindref="member">serd_env_set_base_uri</ref>(writer-&gt;<ref refid="struct_serd_writer_impl_1a817b3f152080fae12294fcab0976e3fc" kindref="member">env</ref>,<sp/>uri))<sp/>{</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__serd_1ga94b861ea65187556a473dcb668ab8667" kindref="member">serd_env_get_base_uri</ref>(writer-&gt;<ref refid="struct_serd_writer_impl_1a817b3f152080fae12294fcab0976e3fc" kindref="member">env</ref>,<sp/>&amp;writer-&gt;<ref refid="struct_serd_writer_impl_1ae17130ea21f914dedbf71c16dd6059e5" kindref="member">base_uri</ref>);</highlight></codeline>
<codeline lineno="837"><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(writer-&gt;<ref refid="struct_serd_writer_impl_1a7db3f4393ea64d07533d64024757f165" kindref="member">syntax</ref><sp/>!=<sp/><ref refid="group__serd_1gga42683406fcfa9046b28dd951cefd3391a3debf79a887908f0502c20029cd050a0" kindref="member">SERD_NTRIPLES</ref>)<sp/>{</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(writer-&gt;<ref refid="struct_serd_writer_impl_1aba094b25116ebac728a7b329f45f1196" kindref="member">context</ref>.<ref refid="struct_write_context_1a2d109c77586c02ab2fe63deda66d5f97" kindref="member">graph</ref>.<ref refid="struct_serd_node_1ac415ada00df1883e7200cfa5c89b7fb9" kindref="member">type</ref><sp/>||<sp/>writer-&gt;<ref refid="struct_serd_writer_impl_1aba094b25116ebac728a7b329f45f1196" kindref="member">context</ref>.<ref refid="struct_write_context_1a2b2d587c9e3a63827cb6d40e18c1981f" kindref="member">subject</ref>.<ref refid="struct_serd_node_1ac415ada00df1883e7200cfa5c89b7fb9" kindref="member">type</ref>)<sp/>{</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_writer_impl_1aac5a4d07e1eb97466d582580ff28ab5d" kindref="member">sink</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>.\n\n&quot;</highlight><highlight class="normal">,<sp/>4,<sp/>writer);</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reset_context(writer,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_writer_impl_1aac5a4d07e1eb97466d582580ff28ab5d" kindref="member">sink</ref>(</highlight><highlight class="stringliteral">&quot;@base<sp/>&lt;&quot;</highlight><highlight class="normal">,<sp/>7,<sp/>writer);</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_writer_impl_1aac5a4d07e1eb97466d582580ff28ab5d" kindref="member">sink</ref>(uri-&gt;<ref refid="struct_serd_node_1a50033bcc22d7a31e8515088ebf7d50ed" kindref="member">buf</ref>,<sp/>uri-&gt;<ref refid="struct_serd_node_1a64b294c408ae9387ffaa78a742196985" kindref="member">n_bytes</ref>,<sp/>writer);</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_writer_impl_1aac5a4d07e1eb97466d582580ff28ab5d" kindref="member">sink</ref>(</highlight><highlight class="stringliteral">&quot;&gt;<sp/>.\n&quot;</highlight><highlight class="normal">,<sp/>4,<sp/>writer);</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="struct_serd_writer_impl_1a9603d4b7de01f0d78fd064ebf9311fff" kindref="member">indent</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>reset_context(writer,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330dada1292115013f04e99b2ecfe32acd9a5" kindref="member">SERD_ERR_UNKNOWN</ref>;</highlight></codeline>
<codeline lineno="851"><highlight class="normal">}</highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref></highlight></codeline>
<codeline lineno="855" refid="group__serd_1gaf15a4cba59efb5ed1a19fabc0c825825" refkind="member"><highlight class="normal"><ref refid="group__serd_1gaf15a4cba59efb5ed1a19fabc0c825825" kindref="member">serd_writer_set_root_uri</ref>(<ref refid="struct_serd_writer_impl" kindref="compound">SerdWriter</ref>*<sp/><sp/><sp/><sp/><sp/>writer,</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/><ref refid="lib_2expat_8h_1a5a9fdd6c2606370ad12f24c078ac6585" kindref="member">uri</ref>)</highlight></codeline>
<codeline lineno="857"><highlight class="normal">{</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__serd_1ga037ef71317b8afff0a020072099cd14f" kindref="member">serd_node_free</ref>(&amp;writer-&gt;<ref refid="struct_serd_writer_impl_1a70e9ffde53e5b1eec566faee8b8db4ab" kindref="member">root_node</ref>);</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uri<sp/>&amp;&amp;<sp/>uri-&gt;<ref refid="struct_serd_node_1a50033bcc22d7a31e8515088ebf7d50ed" kindref="member">buf</ref>)<sp/>{</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="struct_serd_writer_impl_1a70e9ffde53e5b1eec566faee8b8db4ab" kindref="member">root_node</ref><sp/>=<sp/><ref refid="group__serd_1ga5a25ffa37534176468ffc8e4e6ce8d7c" kindref="member">serd_node_copy</ref>(uri);</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__serd_1ga448a194144052f3edea6030d3a950eb0" kindref="member">serd_uri_parse</ref>(uri-&gt;<ref refid="struct_serd_node_1a50033bcc22d7a31e8515088ebf7d50ed" kindref="member">buf</ref>,<sp/>&amp;writer-&gt;<ref refid="struct_serd_writer_impl_1af3ecd74189e4f3f0612802a7c0dd0adb" kindref="member">root_uri</ref>);</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="struct_serd_writer_impl_1a70e9ffde53e5b1eec566faee8b8db4ab" kindref="member">root_node</ref><sp/>=<sp/>SERD_NODE_NULL;</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="struct_serd_writer_impl_1af3ecd74189e4f3f0612802a7c0dd0adb" kindref="member">root_uri</ref><sp/><sp/>=<sp/>SERD_URI_NULL;</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330dafd38f5db6ffd5b5c8646c8023c95dd49" kindref="member">SERD_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="867"><highlight class="normal">}</highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="870"><highlight class="normal"><ref refid="group__serd_1ga104d544e48b6282ef2447bb3ac7c330d" kindref="member">SerdStatus</ref></highlight></codeline>
<codeline lineno="871" refid="group__serd_1gae850607b6b240aea9d3676b1230c3c63" refkind="member"><highlight class="normal"><ref refid="group__serd_1gae850607b6b240aea9d3676b1230c3c63" kindref="member">serd_writer_set_prefix</ref>(<ref refid="struct_serd_writer_impl" kindref="compound">SerdWriter</ref>*<sp/><sp/><sp/><sp/><sp/>writer,</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/><ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>,</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/><ref refid="lib_2expat_8h_1a5a9fdd6c2606370ad12f24c078ac6585" kindref="member">uri</ref>)</highlight></codeline>
<codeline lineno="874"><highlight class="normal">{</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__serd_1gafd42745aa586531608eb4a23c560cef2" kindref="member">serd_env_set_prefix</ref>(writer-&gt;<ref refid="struct_serd_writer_impl_1a817b3f152080fae12294fcab0976e3fc" kindref="member">env</ref>,<sp/>name,<sp/>uri))<sp/>{</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(writer-&gt;<ref refid="struct_serd_writer_impl_1a7db3f4393ea64d07533d64024757f165" kindref="member">syntax</ref><sp/>!=<sp/><ref refid="group__serd_1gga42683406fcfa9046b28dd951cefd3391a3debf79a887908f0502c20029cd050a0" kindref="member">SERD_NTRIPLES</ref>)<sp/>{</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(writer-&gt;<ref refid="struct_serd_writer_impl_1aba094b25116ebac728a7b329f45f1196" kindref="member">context</ref>.<ref refid="struct_write_context_1a2d109c77586c02ab2fe63deda66d5f97" kindref="member">graph</ref>.<ref refid="struct_serd_node_1ac415ada00df1883e7200cfa5c89b7fb9" kindref="member">type</ref><sp/>||<sp/>writer-&gt;<ref refid="struct_serd_writer_impl_1aba094b25116ebac728a7b329f45f1196" kindref="member">context</ref>.<ref refid="struct_write_context_1a2b2d587c9e3a63827cb6d40e18c1981f" kindref="member">subject</ref>.<ref refid="struct_serd_node_1ac415ada00df1883e7200cfa5c89b7fb9" kindref="member">type</ref>)<sp/>{</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_writer_impl_1aac5a4d07e1eb97466d582580ff28ab5d" kindref="member">sink</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>.\n\n&quot;</highlight><highlight class="normal">,<sp/>4,<sp/>writer);</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reset_context(writer,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_writer_impl_1aac5a4d07e1eb97466d582580ff28ab5d" kindref="member">sink</ref>(</highlight><highlight class="stringliteral">&quot;@prefix<sp/>&quot;</highlight><highlight class="normal">,<sp/>8,<sp/>writer);</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_writer_impl_1aac5a4d07e1eb97466d582580ff28ab5d" kindref="member">sink</ref>(name-&gt;<ref refid="struct_serd_node_1a50033bcc22d7a31e8515088ebf7d50ed" kindref="member">buf</ref>,<sp/>name-&gt;<ref refid="struct_serd_node_1a64b294c408ae9387ffaa78a742196985" kindref="member">n_bytes</ref>,<sp/>writer);</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_writer_impl_1aac5a4d07e1eb97466d582580ff28ab5d" kindref="member">sink</ref>(</highlight><highlight class="stringliteral">&quot;:<sp/>&lt;&quot;</highlight><highlight class="normal">,<sp/>3,<sp/>writer);</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_uri(writer,<sp/>uri-&gt;<ref refid="struct_serd_node_1a50033bcc22d7a31e8515088ebf7d50ed" kindref="member">buf</ref>,<sp/>uri-&gt;<ref refid="struct_serd_node_1a64b294c408ae9387ffaa78a742196985" kindref="member">n_bytes</ref>);</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_writer_impl_1aac5a4d07e1eb97466d582580ff28ab5d" kindref="member">sink</ref>(</highlight><highlight class="stringliteral">&quot;&gt;<sp/>.\n&quot;</highlight><highlight class="normal">,<sp/>4,<sp/>writer);</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer-&gt;<ref refid="struct_serd_writer_impl_1a9603d4b7de01f0d78fd064ebf9311fff" kindref="member">indent</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>reset_context(writer,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__serd_1gga104d544e48b6282ef2447bb3ac7c330dada1292115013f04e99b2ecfe32acd9a5" kindref="member">SERD_ERR_UNKNOWN</ref>;</highlight></codeline>
<codeline lineno="891"><highlight class="normal">}</highlight></codeline>
<codeline lineno="892"><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="895" refid="group__serd_1ga50c06e138081328c46e9dfa593814f73" refkind="member"><highlight class="normal"><ref refid="group__serd_1ga50c06e138081328c46e9dfa593814f73" kindref="member">serd_writer_free</ref>(<ref refid="struct_serd_writer_impl" kindref="compound">SerdWriter</ref>*<sp/>writer)</highlight></codeline>
<codeline lineno="896"><highlight class="normal">{</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__serd_1gad983c2d9400df1819b821583188b1025" kindref="member">serd_writer_finish</ref>(writer);</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/>serd_stack_free(&amp;writer-&gt;<ref refid="struct_serd_writer_impl_1acf6119b5c84e08398304c8e0101161a9" kindref="member">anon_stack</ref>);</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/>free(writer-&gt;<ref refid="struct_serd_writer_impl_1aee52b0f37a85353b23532eac5782d553" kindref="member">bprefix</ref>);</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(writer-&gt;<ref refid="struct_serd_writer_impl_1a731bcb7aa9fdd36e19e9e857b9a75b57" kindref="member">style</ref><sp/>&amp;<sp/><ref refid="group__serd_1ggae51da58ac1f1886c75ee2326495daeb2a16f426a166de90e1e52da3787bcc77aa" kindref="member">SERD_STYLE_BULK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>serd_bulk_sink_free(&amp;writer-&gt;<ref refid="struct_serd_writer_impl_1a54a2ff42dd04d7d9288b9271aec4f130" kindref="member">bulk_sink</ref>);</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__serd_1ga037ef71317b8afff0a020072099cd14f" kindref="member">serd_node_free</ref>(&amp;writer-&gt;<ref refid="struct_serd_writer_impl_1a70e9ffde53e5b1eec566faee8b8db4ab" kindref="member">root_node</ref>);</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/>free(writer);</highlight></codeline>
<codeline lineno="905"><highlight class="normal">}</highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="908"><highlight class="normal"><ref refid="struct_serd_env_impl" kindref="compound">SerdEnv</ref>*</highlight></codeline>
<codeline lineno="909" refid="group__serd_1gaf48894b46c202d07055c0de23431f13a" refkind="member"><highlight class="normal"><ref refid="group__serd_1gaf48894b46c202d07055c0de23431f13a" kindref="member">serd_writer_get_env</ref>(<ref refid="struct_serd_writer_impl" kindref="compound">SerdWriter</ref>*<sp/>writer)</highlight></codeline>
<codeline lineno="910"><highlight class="normal">{</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>writer-&gt;<ref refid="struct_serd_writer_impl_1a817b3f152080fae12294fcab0976e3fc" kindref="member">env</ref>;</highlight></codeline>
<codeline lineno="912"><highlight class="normal">}</highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="916" refid="group__serd_1ga08303ceed3102e9fe2ae6bf39eb5b0ff" refkind="member"><highlight class="normal"><ref refid="group__serd_1ga08303ceed3102e9fe2ae6bf39eb5b0ff" kindref="member">serd_file_sink</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="xlglob_8c_1a6d3f7f126151ca554ba001d63c9721f9" kindref="member">buf</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="struct_serd_writer_impl_1ab62fceebc408a6d4762ef81ef69c958c" kindref="member">stream</ref>)</highlight></codeline>
<codeline lineno="917"><highlight class="normal">{</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fwrite(buf,<sp/>1,<sp/>len,<sp/>(FILE*)stream);</highlight></codeline>
<codeline lineno="919"><highlight class="normal">}</highlight></codeline>
<codeline lineno="920"><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="922"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="923" refid="group__serd_1gaec4335743b7d78339d8c133111ec8319" refkind="member"><highlight class="normal"><ref refid="group__serd_1gaec4335743b7d78339d8c133111ec8319" kindref="member">serd_chunk_sink</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="xlglob_8c_1a6d3f7f126151ca554ba001d63c9721f9" kindref="member">buf</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="struct_serd_writer_impl_1ab62fceebc408a6d4762ef81ef69c958c" kindref="member">stream</ref>)</highlight></codeline>
<codeline lineno="924"><highlight class="normal">{</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_serd_chunk" kindref="compound">SerdChunk</ref>*<sp/>chunk<sp/>=<sp/>(<ref refid="struct_serd_chunk" kindref="compound">SerdChunk</ref>*)stream;</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/>chunk-&gt;<ref refid="struct_serd_chunk_1a1fb21c23d2c2eecac5cf57b10ac370f6" kindref="member">buf</ref><sp/>=<sp/>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*)realloc((<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*)chunk-&gt;<ref refid="struct_serd_chunk_1a1fb21c23d2c2eecac5cf57b10ac370f6" kindref="member">buf</ref>,<sp/>chunk-&gt;<ref refid="struct_serd_chunk_1a0a9e8bfa17dc87785f51262ba4769278" kindref="member">len</ref><sp/>+<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>);</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy((<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*)chunk-&gt;<ref refid="struct_serd_chunk_1a1fb21c23d2c2eecac5cf57b10ac370f6" kindref="member">buf</ref><sp/>+<sp/>chunk-&gt;<ref refid="struct_serd_chunk_1a0a9e8bfa17dc87785f51262ba4769278" kindref="member">len</ref>,<sp/>buf,<sp/>len);</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/>chunk-&gt;<ref refid="struct_serd_chunk_1a0a9e8bfa17dc87785f51262ba4769278" kindref="member">len</ref><sp/>+=<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;</highlight></codeline>
<codeline lineno="930"><highlight class="normal">}</highlight></codeline>
<codeline lineno="931"><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"><ref refid="serd_8h_1a17b2ce3a34831e5e95018430d798bd66" kindref="member">SERD_API</ref></highlight></codeline>
<codeline lineno="933"><highlight class="normal"><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*</highlight></codeline>
<codeline lineno="934" refid="group__serd_1gad91b770366f31f3ae83dcdde8c1d6c5d" refkind="member"><highlight class="normal"><ref refid="group__serd_1gad91b770366f31f3ae83dcdde8c1d6c5d" kindref="member">serd_chunk_sink_finish</ref>(<ref refid="struct_serd_chunk" kindref="compound">SerdChunk</ref>*<sp/><ref refid="struct_serd_writer_impl_1ab62fceebc408a6d4762ef81ef69c958c" kindref="member">stream</ref>)</highlight></codeline>
<codeline lineno="935"><highlight class="normal">{</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__serd_1gaec4335743b7d78339d8c133111ec8319" kindref="member">serd_chunk_sink</ref>(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>stream);</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*)stream-&gt;<ref refid="struct_serd_chunk_1a1fb21c23d2c2eecac5cf57b10ac370f6" kindref="member">buf</ref>;</highlight></codeline>
<codeline lineno="938"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/serd/src/writer.c"/>
  </compounddef>
</doxygen>
