<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="pluginclass_8c" kind="file" language="C++">
    <compoundname>pluginclass.c</compoundname>
    <includes refid="assert_8h" local="no">assert.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes refid="lilv__internal_8h" local="yes">lilv_internal.h</includes>
    <incdepgraph>
      <node id="24570">
        <label>lilv_internal.h</label>
        <link refid="lilv__internal_8h"/>
        <childnode refid="24571" relation="include">
        </childnode>
        <childnode refid="24572" relation="include">
        </childnode>
        <childnode refid="24568" relation="include">
        </childnode>
        <childnode refid="24573" relation="include">
        </childnode>
        <childnode refid="24575" relation="include">
        </childnode>
        <childnode refid="24576" relation="include">
        </childnode>
        <childnode refid="24580" relation="include">
        </childnode>
        <childnode refid="24581" relation="include">
        </childnode>
        <childnode refid="24583" relation="include">
        </childnode>
        <childnode refid="24584" relation="include">
        </childnode>
      </node>
      <node id="24579">
        <label>stdbool.h</label>
      </node>
      <node id="24577">
        <label>stdarg.h</label>
      </node>
      <node id="24582">
        <label>zix/common.h</label>
      </node>
      <node id="24574">
        <label>FLAC/ordinals.h</label>
        <link refid="ordinals_8h"/>
        <childnode refid="24572" relation="include">
        </childnode>
      </node>
      <node id="24572">
        <label>stdint.h</label>
      </node>
      <node id="24568">
        <label>stdlib.h</label>
      </node>
      <node id="24576">
        <label>serd/serd.h</label>
        <link refid="serd_8h"/>
        <childnode refid="24577" relation="include">
        </childnode>
        <childnode refid="24571" relation="include">
        </childnode>
        <childnode refid="24572" relation="include">
        </childnode>
        <childnode refid="24578" relation="include">
        </childnode>
        <childnode refid="24579" relation="include">
        </childnode>
      </node>
      <node id="24571">
        <label>stddef.h</label>
      </node>
      <node id="24567">
        <label>assert.h</label>
        <link refid="assert_8h"/>
      </node>
      <node id="24580">
        <label>sord/sord.h</label>
        <link refid="sord_8h"/>
        <childnode refid="24571" relation="include">
        </childnode>
        <childnode refid="24572" relation="include">
        </childnode>
        <childnode refid="24578" relation="include">
        </childnode>
        <childnode refid="24576" relation="include">
        </childnode>
        <childnode refid="24579" relation="include">
        </childnode>
      </node>
      <node id="24586">
        <label>lv2/lv2plug.in/ns/ext/urid/urid.h</label>
        <link refid="urid_8h"/>
        <childnode refid="24572" relation="include">
        </childnode>
      </node>
      <node id="24569">
        <label>string.h</label>
      </node>
      <node id="24573">
        <label>float.h</label>
        <link refid="float_8h"/>
        <childnode refid="24574" relation="include">
        </childnode>
      </node>
      <node id="24584">
        <label>lilv/lilv.h</label>
        <link refid="lilv_8h"/>
        <childnode refid="24577" relation="include">
        </childnode>
        <childnode refid="24571" relation="include">
        </childnode>
        <childnode refid="24572" relation="include">
        </childnode>
        <childnode refid="24578" relation="include">
        </childnode>
        <childnode refid="24585" relation="include">
        </childnode>
        <childnode refid="24586" relation="include">
        </childnode>
        <childnode refid="24579" relation="include">
        </childnode>
      </node>
      <node id="24583">
        <label>lilv_config.h</label>
      </node>
      <node id="24566">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/pluginclass.c</label>
        <link refid="pluginclass.c"/>
        <childnode refid="24567" relation="include">
        </childnode>
        <childnode refid="24568" relation="include">
        </childnode>
        <childnode refid="24569" relation="include">
        </childnode>
        <childnode refid="24570" relation="include">
        </childnode>
      </node>
      <node id="24585">
        <label>lv2/lv2plug.in/ns/lv2core/lv2.h</label>
        <link refid="lv2_8h"/>
        <childnode refid="24572" relation="include">
        </childnode>
      </node>
      <node id="24578">
        <label>stdio.h</label>
      </node>
      <node id="24581">
        <label>zix/tree.h</label>
        <link refid="lilv_2src_2zix_2tree_8h"/>
        <childnode refid="24571" relation="include">
        </childnode>
        <childnode refid="24582" relation="include">
        </childnode>
      </node>
      <node id="24575">
        <label>dlfcn.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="pluginclass_8c_1adf8fc196e6099f54f8b89f8d9f32bc98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lilv_8h_1a94da06d43a4f980af280b9d8bf4ae1f0" kindref="member">LilvPluginClass</ref> *</type>
        <definition>LilvPluginClass* lilv_plugin_class_new</definition>
        <argsstring>(LilvWorld *world, const SordNode *parent_node, const SordNode *uri, const char *label)</argsstring>
        <name>lilv_plugin_class_new</name>
        <param>
          <type><ref refid="lilv_8h_1a91c1745aa6ffca2b6b87c56df6c5ab86" kindref="member">LilvWorld</ref> *</type>
          <declname>world</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="group__sord_1ga804ac7d56d9fdea50f2d1e7278b1f82b" kindref="member">SordNode</ref> *</type>
          <declname>parent_node</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="group__sord_1ga804ac7d56d9fdea50f2d1e7278b1f82b" kindref="member">SordNode</ref> *</type>
          <declname>uri</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>label</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/pluginclass.c" line="24" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/pluginclass.c" bodystart="24" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="pluginclass_8c_1a02d24fcf64a350a0fb832fe8cb585b17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void lilv_plugin_class_free</definition>
        <argsstring>(LilvPluginClass *plugin_class)</argsstring>
        <name>lilv_plugin_class_free</name>
        <param>
          <type><ref refid="lilv_8h_1a94da06d43a4f980af280b9d8bf4ae1f0" kindref="member">LilvPluginClass</ref> *</type>
          <declname>plugin_class</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/pluginclass.c" line="43" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/pluginclass.c" bodystart="43" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="group__lilv_1ga01f07e0a32914844dae78c0bd3e8d036" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref> <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1ae183dca3dca5368d34dbd863a405437b" kindref="member">LilvNode</ref> *</type>
        <definition>LILV_API const LilvNode* lilv_plugin_class_get_parent_uri</definition>
        <argsstring>(const LilvPluginClass *plugin_class)</argsstring>
        <name>lilv_plugin_class_get_parent_uri</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1a94da06d43a4f980af280b9d8bf4ae1f0" kindref="member">LilvPluginClass</ref> *</type>
          <declname>plugin_class</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the URI of this class&apos; superclass. Returned value is owned by <computeroutput>plugin_class</computeroutput> and must not be freed by caller. Returned value may be NULL, if class has no parent. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/pluginclass.c" line="53" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/pluginclass.c" bodystart="53" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="group__lilv_1ga06cd3c02c5276d78797d3782fc952cca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref> <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1ae183dca3dca5368d34dbd863a405437b" kindref="member">LilvNode</ref> *</type>
        <definition>LILV_API const LilvNode* lilv_plugin_class_get_uri</definition>
        <argsstring>(const LilvPluginClass *plugin_class)</argsstring>
        <name>lilv_plugin_class_get_uri</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1a94da06d43a4f980af280b9d8bf4ae1f0" kindref="member">LilvPluginClass</ref> *</type>
          <declname>plugin_class</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the URI of this plugin class. Returned value is owned by <computeroutput>plugin_class</computeroutput> and must not be freed by caller. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/pluginclass.c" line="59" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/pluginclass.c" bodystart="59" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="group__lilv_1gab9655154e2edcd72ad1d244767e444b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref> <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1ae183dca3dca5368d34dbd863a405437b" kindref="member">LilvNode</ref> *</type>
        <definition>LILV_API const LilvNode* lilv_plugin_class_get_label</definition>
        <argsstring>(const LilvPluginClass *plugin_class)</argsstring>
        <name>lilv_plugin_class_get_label</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1a94da06d43a4f980af280b9d8bf4ae1f0" kindref="member">LilvPluginClass</ref> *</type>
          <declname>plugin_class</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the label of this plugin class, ie &quot;Oscillators&quot;. Returned value is owned by <computeroutput>plugin_class</computeroutput> and must not be freed by caller. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/pluginclass.c" line="65" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/pluginclass.c" bodystart="65" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="group__lilv_1gac9165a547996dc5637086190c78283a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref> <ref refid="lilv_8h_1a1ef5389c0a24cb8e0adcf971d2d12f0e" kindref="member">LilvPluginClasses</ref> *</type>
        <definition>LILV_API LilvPluginClasses* lilv_plugin_class_get_children</definition>
        <argsstring>(const LilvPluginClass *plugin_class)</argsstring>
        <name>lilv_plugin_class_get_children</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1a94da06d43a4f980af280b9d8bf4ae1f0" kindref="member">LilvPluginClass</ref> *</type>
          <declname>plugin_class</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the subclasses of this plugin class. Returned value must be freed by caller with <ref refid="group__lilv_1ga2bb721cba50f759a9c7d549c3a9fb52a" kindref="member">lilv_plugin_classes_free()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/pluginclass.c" line="71" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/pluginclass.c" bodystart="71" bodyend="88"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/>Copyright<sp/>2007-2014<sp/>David<sp/>Robillard<sp/>&lt;http://drobilla.net&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/>Permission<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>and/or<sp/>distribute<sp/>this<sp/>software<sp/>for<sp/>any</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>purpose<sp/>with<sp/>or<sp/>without<sp/>fee<sp/>is<sp/>hereby<sp/>granted,<sp/>provided<sp/>that<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>appear<sp/>in<sp/>all<sp/>copies.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"></highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>THE<sp/>AUTHOR<sp/>DISCLAIMS<sp/>ALL<sp/>WARRANTIES</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/>WITH<sp/>REGARD<sp/>TO<sp/>THIS<sp/>SOFTWARE<sp/>INCLUDING<sp/>ALL<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/>ANY<sp/>SPECIAL,<sp/>DIRECT,<sp/>INDIRECT,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>OR<sp/>ANY<sp/>DAMAGES</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/>WHATSOEVER<sp/>RESULTING<sp/>FROM<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA<sp/>OR<sp/>PROFITS,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>NEGLIGENCE<sp/>OR<sp/>OTHER<sp/>TORTIOUS<sp/>ACTION,<sp/>ARISING<sp/>OUT<sp/>OF</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>USE<sp/>OR<sp/>PERFORMANCE<sp/>OF<sp/>THIS<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="15"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="assert_8h" kindref="compound">assert.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lilv__internal_8h" kindref="compound">lilv_internal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><ref refid="struct_lilv_plugin_class_impl" kindref="compound">LilvPluginClass</ref>*</highlight></codeline>
<codeline lineno="24" refid="pluginclass_8c_1adf8fc196e6099f54f8b89f8d9f32bc98" refkind="member"><highlight class="normal"><ref refid="pluginclass_8c_1adf8fc196e6099f54f8b89f8d9f32bc98" kindref="member">lilv_plugin_class_new</ref>(<ref refid="struct_lilv_world_impl" kindref="compound">LilvWorld</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacelv2__list_1a39bc711f56fd3393bf9013f08a1e5719" kindref="member">world</ref>,</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/>parent_node,</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/><ref refid="lib_2expat_8h_1a5a9fdd6c2606370ad12f24c078ac6585" kindref="member">uri</ref>,</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><ref refid="_tags_8cpp_1a0a3345b0d4574d7adffe113dacd8ccec" kindref="member">label</ref>)</highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parent_node<sp/>&amp;&amp;<sp/><ref refid="group__sord_1ga34de2b7b44fbd614e7831c9c1b6d114e" kindref="member">sord_node_get_type</ref>(parent_node)<sp/>!=<sp/><ref refid="group__sord_1gga69e82f5abb700cfbde0c9ee8d3574154a7335bbadcb5084cedd7957d7d772aaa5" kindref="member">SORD_URI</ref>)<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>Not<sp/>an<sp/>LV2<sp/>plugin<sp/>superclass<sp/>(FIXME:<sp/>discover<sp/>properly)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lilv_plugin_class_impl" kindref="compound">LilvPluginClass</ref>*<sp/>pc<sp/>=<sp/>(<ref refid="struct_lilv_plugin_class_impl" kindref="compound">LilvPluginClass</ref>*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_lilv_plugin_class_impl" kindref="compound">LilvPluginClass</ref>));</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>pc-&gt;<ref refid="struct_lilv_plugin_class_impl_1aa08577f35010adbaaa893053cfe72dc9" kindref="member">world</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="namespacelv2__list_1a39bc711f56fd3393bf9013f08a1e5719" kindref="member">world</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>pc-&gt;<ref refid="struct_lilv_plugin_class_impl_1ac1c96a07b2e84e51725d4d9c91d64139" kindref="member">uri</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="lilv__internal_8h_1ab85cc3ce5e142d7141219b15353ee671" kindref="member">lilv_node_new_from_node</ref>(world,<sp/>uri);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>pc-&gt;<ref refid="struct_lilv_plugin_class_impl_1a4c2287d5a65071022a7f538b42e3dd05" kindref="member">label</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="lilv__internal_8h_1a5d382a2bc4ce0a4886ea332c32c357f0" kindref="member">lilv_node_new</ref>(world,<sp/><ref refid="lilv__internal_8h_1a21e43999c8cf40e85363d0e848eb6536a1a9bf6957d1bf50dbf67afd234917319" kindref="member">LILV_VALUE_STRING</ref>,<sp/>label);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>pc-&gt;<ref refid="struct_lilv_plugin_class_impl_1a612ae6206ff8bd62119351d0544795d8" kindref="member">parent_uri</ref><sp/>=<sp/>(parent_node</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/><ref refid="lilv__internal_8h_1ab85cc3ce5e142d7141219b15353ee671" kindref="member">lilv_node_new_from_node</ref>(world,<sp/>parent_node)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pc;</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="pluginclass_8c_1a02d24fcf64a350a0fb832fe8cb585b17" refkind="member"><highlight class="normal"><ref refid="pluginclass_8c_1a02d24fcf64a350a0fb832fe8cb585b17" kindref="member">lilv_plugin_class_free</ref>(<ref refid="struct_lilv_plugin_class_impl" kindref="compound">LilvPluginClass</ref>*<sp/>plugin_class)</highlight></codeline>
<codeline lineno="44"><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(plugin_class-&gt;<ref refid="struct_lilv_plugin_class_impl_1ac1c96a07b2e84e51725d4d9c91d64139" kindref="member">uri</ref>);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__lilv_1gaf4677b15cf1df3ef833f7ef4b6a7511e" kindref="member">lilv_node_free</ref>(plugin_class-&gt;<ref refid="struct_lilv_plugin_class_impl_1ac1c96a07b2e84e51725d4d9c91d64139" kindref="member">uri</ref>);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__lilv_1gaf4677b15cf1df3ef833f7ef4b6a7511e" kindref="member">lilv_node_free</ref>(plugin_class-&gt;<ref refid="struct_lilv_plugin_class_impl_1a612ae6206ff8bd62119351d0544795d8" kindref="member">parent_uri</ref>);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__lilv_1gaf4677b15cf1df3ef833f7ef4b6a7511e" kindref="member">lilv_node_free</ref>(plugin_class-&gt;<ref refid="struct_lilv_plugin_class_impl_1a4c2287d5a65071022a7f538b42e3dd05" kindref="member">label</ref>);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>free(plugin_class);</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*</highlight></codeline>
<codeline lineno="53" refid="group__lilv_1ga01f07e0a32914844dae78c0bd3e8d036" refkind="member"><highlight class="normal"><ref refid="group__lilv_1ga01f07e0a32914844dae78c0bd3e8d036" kindref="member">lilv_plugin_class_get_parent_uri</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_plugin_class_impl" kindref="compound">LilvPluginClass</ref>*<sp/>plugin_class)</highlight></codeline>
<codeline lineno="54"><highlight class="normal">{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>plugin_class-&gt;<ref refid="struct_lilv_plugin_class_impl_1a612ae6206ff8bd62119351d0544795d8" kindref="member">parent_uri</ref><sp/>?<sp/>plugin_class-&gt;<ref refid="struct_lilv_plugin_class_impl_1a612ae6206ff8bd62119351d0544795d8" kindref="member">parent_uri</ref><sp/>:<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*</highlight></codeline>
<codeline lineno="59" refid="group__lilv_1ga06cd3c02c5276d78797d3782fc952cca" refkind="member"><highlight class="normal"><ref refid="group__lilv_1ga06cd3c02c5276d78797d3782fc952cca" kindref="member">lilv_plugin_class_get_uri</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_plugin_class_impl" kindref="compound">LilvPluginClass</ref>*<sp/>plugin_class)</highlight></codeline>
<codeline lineno="60"><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>plugin_class-&gt;<ref refid="struct_lilv_plugin_class_impl_1ac1c96a07b2e84e51725d4d9c91d64139" kindref="member">uri</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*</highlight></codeline>
<codeline lineno="65" refid="group__lilv_1gab9655154e2edcd72ad1d244767e444b9" refkind="member"><highlight class="normal"><ref refid="group__lilv_1gab9655154e2edcd72ad1d244767e444b9" kindref="member">lilv_plugin_class_get_label</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_plugin_class_impl" kindref="compound">LilvPluginClass</ref>*<sp/>plugin_class)</highlight></codeline>
<codeline lineno="66"><highlight class="normal">{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>plugin_class-&gt;<ref refid="struct_lilv_plugin_class_impl_1a4c2287d5a65071022a7f538b42e3dd05" kindref="member">label</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref><sp/><ref refid="lilv_8h_1a1ef5389c0a24cb8e0adcf971d2d12f0e" kindref="member">LilvPluginClasses</ref>*</highlight></codeline>
<codeline lineno="71" refid="group__lilv_1gac9165a547996dc5637086190c78283a6" refkind="member"><highlight class="normal"><ref refid="group__lilv_1gac9165a547996dc5637086190c78283a6" kindref="member">lilv_plugin_class_get_children</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_plugin_class_impl" kindref="compound">LilvPluginClass</ref>*<sp/>plugin_class)</highlight></codeline>
<codeline lineno="72"><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Returned<sp/>list<sp/>doesn&apos;t<sp/>own<sp/>categories</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilv_8h_1a1ef5389c0a24cb8e0adcf971d2d12f0e" kindref="member">LilvPluginClasses</ref>*<sp/>all<sp/><sp/><sp/><sp/>=<sp/>plugin_class-&gt;<ref refid="struct_lilv_plugin_class_impl_1aa08577f35010adbaaa893053cfe72dc9" kindref="member">world</ref>-&gt;<ref refid="struct_lilv_world_impl_1a56486065a8949f93f060216ab347938f" kindref="member">plugin_classes</ref>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilv_8h_1a1ef5389c0a24cb8e0adcf971d2d12f0e" kindref="member">LilvPluginClasses</ref>*<sp/>result<sp/>=<sp/><ref refid="group__zix_1ga72db646eab3fe826b87f97e02cf3bbd5" kindref="member">zix_tree_new</ref>(</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/><ref refid="collections_8c_1a2a02eed2df42be61defe0f1cda5a82d0" kindref="member">lilv_ptr_cmp</ref>,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="struct_zix_tree_node_impl" kindref="compound">ZixTreeIter</ref>*<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/><ref refid="group__zix_1gae5cd6820a3fbfd92fd44755738430ed8" kindref="member">zix_tree_begin</ref>((<ref refid="struct_zix_tree_impl" kindref="compound">ZixTree</ref>*)all);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>!=<sp/><ref refid="group__zix_1gac295deaf3d65214802458ef2b9041cf2" kindref="member">zix_tree_end</ref>((<ref refid="struct_zix_tree_impl" kindref="compound">ZixTree</ref>*)all);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/><ref refid="group__zix_1ga5e96ee30587208cb8076bbec52465846" kindref="member">zix_tree_iter_next</ref>(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>))<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_plugin_class_impl" kindref="compound">LilvPluginClass</ref>*<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(<ref refid="struct_lilv_plugin_class_impl" kindref="compound">LilvPluginClass</ref>*)<ref refid="group__zix_1ga687b0675b68ea58eecc1739686853fee" kindref="member">zix_tree_get</ref>(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parent<sp/>=<sp/><ref refid="group__lilv_1ga01f07e0a32914844dae78c0bd3e8d036" kindref="member">lilv_plugin_class_get_parent_uri</ref>(c);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parent<sp/>&amp;&amp;<sp/><ref refid="group__lilv_1ga3fd9df99cb05f2f061233d2839e820f1" kindref="member">lilv_node_equals</ref>(<ref refid="group__lilv_1ga06cd3c02c5276d78797d3782fc952cca" kindref="member">lilv_plugin_class_get_uri</ref>(plugin_class),</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parent))</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__zix_1gabbf32f6bf3dd802fd36af7ac17cee87c" kindref="member">zix_tree_insert</ref>((<ref refid="struct_zix_tree_impl" kindref="compound">ZixTree</ref>*)result,<sp/>(<ref refid="struct_lilv_plugin_class_impl" kindref="compound">LilvPluginClass</ref>*)c,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/pluginclass.c"/>
  </compounddef>
</doxygen>
