<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="examples-common_8h" kind="file" language="C++">
    <compoundname>examples-common.h</compoundname>
    <includes refid="assert_8h" local="no">assert.h</includes>
    <includes local="no">errno.h</includes>
    <includes local="no">limits.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">stddef.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includedby refid="1-single-block_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/examples/1-single-block.c</includedby>
    <includedby refid="1a-lsr_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/examples/1a-lsr.c</includedby>
    <includedby refid="2-stream_8_c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/examples/2-stream.C</includedby>
    <includedby refid="3-options-input-fn_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/examples/3-options-input-fn.c</includedby>
    <includedby refid="4-split-channels_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/examples/4-split-channels.c</includedby>
    <includedby refid="5-variable-rate_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/examples/5-variable-rate.c</includedby>
    <includedby refid="vector-gen_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/tests/vector-gen.c</includedby>
    <incdepgraph>
      <node id="21053">
        <label>stdlib.h</label>
      </node>
      <node id="21048">
        <label>errno.h</label>
      </node>
      <node id="21051">
        <label>stddef.h</label>
      </node>
      <node id="21047">
        <label>assert.h</label>
        <link refid="assert_8h"/>
      </node>
      <node id="21049">
        <label>limits.h</label>
      </node>
      <node id="21054">
        <label>string.h</label>
      </node>
      <node id="21050">
        <label>math.h</label>
      </node>
      <node id="21046">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/examples/examples-common.h</label>
        <link refid="examples-common.h"/>
        <childnode refid="21047" relation="include">
        </childnode>
        <childnode refid="21048" relation="include">
        </childnode>
        <childnode refid="21049" relation="include">
        </childnode>
        <childnode refid="21050" relation="include">
        </childnode>
        <childnode refid="21051" relation="include">
        </childnode>
        <childnode refid="21052" relation="include">
        </childnode>
        <childnode refid="21053" relation="include">
        </childnode>
        <childnode refid="21054" relation="include">
        </childnode>
      </node>
      <node id="21052">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="21056">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/examples/1-single-block.c</label>
        <link refid="1-single-block_8c"/>
      </node>
      <node id="21059">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/examples/3-options-input-fn.c</label>
        <link refid="3-options-input-fn_8c"/>
      </node>
      <node id="21062">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/tests/vector-gen.c</label>
        <link refid="vector-gen_8c"/>
      </node>
      <node id="21061">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/examples/5-variable-rate.c</label>
        <link refid="5-variable-rate_8c"/>
      </node>
      <node id="21058">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/examples/2-stream.C</label>
        <link refid="2-stream_8_c"/>
      </node>
      <node id="21057">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/examples/1a-lsr.c</label>
        <link refid="1a-lsr_8c"/>
      </node>
      <node id="21055">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/examples/examples-common.h</label>
        <link refid="examples-common.h"/>
        <childnode refid="21056" relation="include">
        </childnode>
        <childnode refid="21057" relation="include">
        </childnode>
        <childnode refid="21058" relation="include">
        </childnode>
        <childnode refid="21059" relation="include">
        </childnode>
        <childnode refid="21060" relation="include">
        </childnode>
        <childnode refid="21061" relation="include">
        </childnode>
        <childnode refid="21062" relation="include">
        </childnode>
      </node>
      <node id="21060">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/examples/4-split-channels.c</label>
        <link refid="4-split-channels_8c"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="examples-common_8h_1ae8f98482924f7cbfd7a7b7f926b9bb17" prot="public" static="no">
        <name>USE_STD_STDIO</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/examples/examples-common.h" line="25" column="12" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/examples/examples-common.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="examples-common_8h_1aba47ebc2ca6caf60d3de4971843aa4cf" prot="public" static="no">
        <name>int16_t</name>
        <initializer>short</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/examples/examples-common.h" line="29" column="10" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/examples/examples-common.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="examples-common_8h_1abb702d8b501669a23aa0ab3b281b9384" prot="public" static="no">
        <name>min</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>((x)&lt;(y)?(x):(y))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/examples/examples-common.h" line="42" column="11" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/examples/examples-common.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="examples-common_8h_1ac39d9cef6a5e030ba8d9e11121054268" prot="public" static="no">
        <name>max</name>
        <param><defname>x</defname></param>
        <param><defname>y</defname></param>
        <initializer>((x)&gt;(y)?(x):(y))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/examples/examples-common.h" line="43" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/examples/examples-common.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="examples-common_8h_1acbb4b45d300db3bd8b1f364083e80c1d" prot="public" static="no">
        <name>AL</name>
        <param><defname>a</defname></param>
        <initializer>(sizeof(<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>)/sizeof((<ref refid="rfft2d_test_m_l_8m_1a4124bc0a9335c27f086f24ba207a4912" kindref="member">a</ref>)[0]))  /* Array Length */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/examples/examples-common.h" line="45" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/examples/examples-common.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>SoX<sp/>Resampler<sp/>Library<sp/><sp/><sp/><sp/><sp/><sp/>Copyright<sp/>(c)<sp/>2007-13<sp/>robs@users.sourceforge.net</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Licence<sp/>for<sp/>this<sp/>file:<sp/>LGPL<sp/>v2.1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>See<sp/>LICENCE<sp/>for<sp/>details.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Common<sp/>includes<sp/>etc.<sp/>for<sp/>the<sp/>examples.<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="assert_8h" kindref="compound">assert.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Work-around<sp/>for<sp/>broken<sp/>file-I/O<sp/>on<sp/>MS-Windows:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;<ref refid="io_8h" kindref="compound">io.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#include<sp/>&lt;fcntl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>USE_STD_STDIO<sp/>_setmode(_fileno(stdout),<sp/>_O_BINARY),<sp/>\</highlight></codeline>
<codeline lineno="20"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_setmode(_fileno(stdin<sp/>),<sp/>_O_BINARY);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>Sometimes<sp/>missing,<sp/>so<sp/>ensure<sp/>that<sp/>it<sp/>is<sp/>defined:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#undef<sp/>M_PI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>M_PI<sp/>3.14159265358979323846</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="examples-common_8h_1ae8f98482924f7cbfd7a7b7f926b9bb17" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>USE_STD_STDIO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>int16_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="examples-common_8h_1aba47ebc2ca6caf60d3de4971843aa4cf" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>int16_t<sp/>short</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>int32_t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>LONG_MAX<sp/>&gt;<sp/>2147483647L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>int32_t<sp/>int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>LONG_MAX<sp/>&lt;<sp/>2147483647L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#error<sp/>this<sp/>programme<sp/>requires<sp/>that<sp/>&apos;long<sp/>int&apos;<sp/>has<sp/>at<sp/>least<sp/>32-bits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#define<sp/>int32_t<sp/>long</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>min</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>max</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="examples-common_8h_1abb702d8b501669a23aa0ab3b281b9384" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>min(x,y)<sp/>((x)&lt;(y)?(x):(y))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="examples-common_8h_1ac39d9cef6a5e030ba8d9e11121054268" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>max(x,y)<sp/>((x)&gt;(y)?(x):(y))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="examples-common_8h_1acbb4b45d300db3bd8b1f364083e80c1d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AL(a)<sp/>(sizeof(a)/sizeof((a)[0]))<sp/><sp/></highlight><highlight class="comment">/*<sp/>Array<sp/>Length<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsoxr/examples/examples-common.h"/>
  </compounddef>
</doxygen>
