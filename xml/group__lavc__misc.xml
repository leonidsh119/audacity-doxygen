<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="group__lavc__misc" kind="group">
    <compoundname>lavc_misc</compoundname>
    <title>Utility functions</title>
    <innerclass refid="struct_a_v_bit_stream_filter_context" prot="public">AVBitStreamFilterContext</innerclass>
    <innerclass refid="struct_a_v_bit_stream_filter" prot="public">AVBitStreamFilter</innerclass>
    <innergroup refid="group__lavc__misc__pixfmt">Pixel formats</innergroup>
    <innergroup refid="group__lavc__fft">FFT functions</innergroup>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__lavc__misc_1ga7a013315e444069ec9630ddf3edce3f8" prot="public" static="no">
        <name>AVLockOp</name>
        <enumvalue id="group__lavc__misc_1gga7a013315e444069ec9630ddf3edce3f8a486a4a2d7a97554c2e073536c038465d" prot="public">
          <name>AV_LOCK_CREATE</name>
          <briefdescription>
<para>Create a mutex. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__lavc__misc_1gga7a013315e444069ec9630ddf3edce3f8af684bbd8575f2686f42346f5e43be673" prot="public">
          <name>AV_LOCK_OBTAIN</name>
          <briefdescription>
<para>Lock the mutex. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__lavc__misc_1gga7a013315e444069ec9630ddf3edce3f8a7c470cd815cdef3b16a977e9a8c89c69" prot="public">
          <name>AV_LOCK_RELEASE</name>
          <briefdescription>
<para>Unlock the mutex. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__lavc__misc_1gga7a013315e444069ec9630ddf3edce3f8aee9ae55e2efe16565998e473c2a18935" prot="public">
          <name>AV_LOCK_DESTROY</name>
          <briefdescription>
<para>Free mutex resources. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Lock operation used by lockmgr </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="5023" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" bodystart="5023" bodyend="5028"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__lavc__misc_1ga2ab47771ac6385c834d0fb0bac71b609" prot="public" static="no">
        <type>struct <ref refid="struct_a_v_bit_stream_filter_context" kindref="compound">AVBitStreamFilterContext</ref></type>
        <definition>typedef struct AVBitStreamFilterContext  AVBitStreamFilterContext</definition>
        <argsstring></argsstring>
        <name>AVBitStreamFilterContext</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="4863" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__lavc__misc_1gaea3871dd20e820423b0abad16a7d0ac4" prot="public" static="no">
        <type>struct <ref refid="struct_a_v_bit_stream_filter" kindref="compound">AVBitStreamFilter</ref></type>
        <definition>typedef struct AVBitStreamFilter  AVBitStreamFilter</definition>
        <argsstring></argsstring>
        <name>AVBitStreamFilter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="4875" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__lavc__misc_1ga4e17541c4f237465b50668d279192da8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="attributes_8h_1aa6d076561d3a9eea4729ee632652de02" kindref="member">attribute_deprecated</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>attribute_deprecated void avcodec_set_dimensions</definition>
        <argsstring>(AVCodecContext *s, int width, int height)</argsstring>
        <name>avcodec_set_dimensions</name>
        <param>
          <type><ref refid="struct_a_v_codec_context" kindref="compound">AVCodecContext</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>width</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="deprecated_1_deprecated000012"><xreftitle>Deprecated</xreftitle><xrefdescription><para>this function is not supposed to be used from outside of lavc </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="4754" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavc__misc_1ga1f9e278e427564ee2e8b0ad875dbe5df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t av_get_codec_tag_string</definition>
        <argsstring>(char *buf, size_t buf_size, unsigned int codec_tag)</argsstring>
        <name>av_get_codec_tag_string</name>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>buf_size</declname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>codec_tag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Put a string representing the codec tag codec_tag in buf.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer to place codec tag in </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf_size</parametername>
</parameternamelist>
<parameterdescription>
<para>size in bytes of buf </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>codec_tag</parametername>
</parameternamelist>
<parameterdescription>
<para>codec tag to assign </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the length of the string that would have been generated if enough space had been available, excluding the trailing null </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="4766" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavc__misc_1ga6d4056568b5ab73d2e55800d9a5caa66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void avcodec_string</definition>
        <argsstring>(char *buf, int buf_size, AVCodecContext *enc, int encode)</argsstring>
        <name>avcodec_string</name>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>buf_size</declname>
        </param>
        <param>
          <type><ref refid="struct_a_v_codec_context" kindref="compound">AVCodecContext</ref> *</type>
          <declname>enc</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>encode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="4768" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavc__misc_1ga0dc4a8003d0818a235bde2d8fbe81e11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
        <definition>const char* av_get_profile_name</definition>
        <argsstring>(const AVCodec *codec, int profile)</argsstring>
        <name>av_get_profile_name</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_a_v_codec" kindref="compound">AVCodec</ref> *</type>
          <declname>codec</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>profile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return a name for the specified profile, if available.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>codec</parametername>
</parameternamelist>
<parameterdescription>
<para>the codec that is searched for the given profile </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>profile</parametername>
</parameternamelist>
<parameterdescription>
<para>the profile value for which a name is requested </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A name for the profile if found, NULL otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="4777" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavc__misc_1ga9ccd730ba6e891b6c61da68ab138c63f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int avcodec_default_execute</definition>
        <argsstring>(AVCodecContext *c, int(*func)(AVCodecContext *c2, void *arg2), void *arg, int *ret, int count, int size)</argsstring>
        <name>avcodec_default_execute</name>
        <param>
          <type><ref refid="struct_a_v_codec_context" kindref="compound">AVCodecContext</ref> *</type>
          <declname>c</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref>(*)(<ref refid="struct_a_v_codec_context" kindref="compound">AVCodecContext</ref> *<ref refid="convtest_8m_1a09ab2f3b6c61c793c7b6d24912b2cea0" kindref="member">c2</ref>, <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *arg2)</type>
          <declname>func</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>arg</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>ret</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>count</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="4779" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavc__misc_1ga365b89d7f5b6dc9f930f07ec4078a611" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int avcodec_default_execute2</definition>
        <argsstring>(AVCodecContext *c, int(*func)(AVCodecContext *c2, void *arg2, int, int), void *arg, int *ret, int count)</argsstring>
        <name>avcodec_default_execute2</name>
        <param>
          <type><ref refid="struct_a_v_codec_context" kindref="compound">AVCodecContext</ref> *</type>
          <declname>c</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref>(*)(<ref refid="struct_a_v_codec_context" kindref="compound">AVCodecContext</ref> *<ref refid="convtest_8m_1a09ab2f3b6c61c793c7b6d24912b2cea0" kindref="member">c2</ref>, <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *arg2, <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref>, <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref>)</type>
          <declname>func</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>arg</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>ret</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="4780" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavc__misc_1ga66b44aad56fa22a78fb8916eb8cc0516" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int avcodec_fill_audio_frame</definition>
        <argsstring>(AVFrame *frame, int nb_channels, enum AVSampleFormat sample_fmt, const uint8_t *buf, int buf_size, int align)</argsstring>
        <name>avcodec_fill_audio_frame</name>
        <param>
          <type><ref refid="struct_a_v_frame" kindref="compound">AVFrame</ref> *</type>
          <declname>frame</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>nb_channels</declname>
        </param>
        <param>
          <type>enum <ref refid="samplefmt_8h_1af9a51ca15301871723577c730b5865c5" kindref="member">AVSampleFormat</ref></type>
          <declname>sample_fmt</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>buf_size</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>align</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Fill <ref refid="struct_a_v_frame" kindref="compound">AVFrame</ref> audio data and linesize pointers.</para><para>The buffer buf must be a preallocated buffer with a size big enough to contain the specified samples amount. The filled <ref refid="struct_a_v_frame" kindref="compound">AVFrame</ref> data pointers will point to this buffer.</para><para><ref refid="struct_a_v_frame" kindref="compound">AVFrame</ref> extended_data channel pointers are allocated if necessary for planar audio.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>frame</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="struct_a_v_frame" kindref="compound">AVFrame</ref> frame-&gt;nb_samples must be set prior to calling the function. This function fills in frame-&gt;data, frame-&gt;extended_data, frame-&gt;linesize[0]. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nb_channels</parametername>
</parameternamelist>
<parameterdescription>
<para>channel count </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sample_fmt</parametername>
</parameternamelist>
<parameterdescription>
<para>sample format </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer to use for frame data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf_size</parametername>
</parameternamelist>
<parameterdescription>
<para>size of buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>align</parametername>
</parameternamelist>
<parameterdescription>
<para>plane size sample alignment (0 = default) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>&gt;=0 on success, negative error code on failure </para></simplesect>
<xrefsect id="todo_1_todo000001"><xreftitle>Todo</xreftitle><xrefdescription><para>return the size in bytes required to store the samples in case of success, at the next libavutil bump </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="4806" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavc__misc_1gaf60b0e076f822abcb2700eb601d352a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void avcodec_flush_buffers</definition>
        <argsstring>(AVCodecContext *avctx)</argsstring>
        <name>avcodec_flush_buffers</name>
        <param>
          <type><ref refid="struct_a_v_codec_context" kindref="compound">AVCodecContext</ref> *</type>
          <declname>avctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reset the internal decoder state / flush internal buffers. Should be called e.g. when seeking or when switching to a different stream.</para><para><simplesect kind="note"><para>when refcounted frames are not used (i.e. avctx-&gt;refcounted_frames is 0), this invalidates the frames previously returned from the decoder. When refcounted frames are used, the decoder just releases any references it might keep internally, but the caller&apos;s reference remains valid. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="4819" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavc__misc_1ga0717e7440fdb123f708082f66cd9b41d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_get_bits_per_sample</definition>
        <argsstring>(enum AVCodecID codec_id)</argsstring>
        <name>av_get_bits_per_sample</name>
        <param>
          <type>enum <ref refid="group__lavc__core_1gaadca229ad2c20e060a14fec08a5cc7ce" kindref="member">AVCodecID</ref></type>
          <declname>codec_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return codec bits per sample.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">codec_id</parametername>
</parameternamelist>
<parameterdescription>
<para>the codec </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of bits per sample or zero if unknown for the given codec. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="4827" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavc__misc_1gafa5775a0bd6a6ab58011e8492156eb6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>enum <ref refid="group__lavc__core_1gaadca229ad2c20e060a14fec08a5cc7ce" kindref="member">AVCodecID</ref></type>
        <definition>enum AVCodecID av_get_pcm_codec</definition>
        <argsstring>(enum AVSampleFormat fmt, int be)</argsstring>
        <name>av_get_pcm_codec</name>
        <param>
          <type>enum <ref refid="samplefmt_8h_1af9a51ca15301871723577c730b5865c5" kindref="member">AVSampleFormat</ref></type>
          <declname>fmt</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>be</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the PCM codec associated with a sample format. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>be</parametername>
</parameternamelist>
<parameterdescription>
<para>endianness, 0 for little, 1 for big, -1 (or anything else) for native </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>AV_CODEC_ID_PCM_* or AV_CODEC_ID_NONE </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="4827" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavc__misc_1gadddbcd146ffaf53016bac730c631f7b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_get_exact_bits_per_sample</definition>
        <argsstring>(enum AVCodecID codec_id)</argsstring>
        <name>av_get_exact_bits_per_sample</name>
        <param>
          <type>enum <ref refid="group__lavc__core_1gaadca229ad2c20e060a14fec08a5cc7ce" kindref="member">AVCodecID</ref></type>
          <declname>codec_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return codec bits per sample. Only return non-zero if the bits per sample is exactly correct, not an approximation.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">codec_id</parametername>
</parameternamelist>
<parameterdescription>
<para>the codec </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of bits per sample or zero if unknown for the given codec. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="4845" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavc__misc_1ga3266a8c3df0790c62259f91afcde45a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_get_audio_frame_duration</definition>
        <argsstring>(AVCodecContext *avctx, int frame_bytes)</argsstring>
        <name>av_get_audio_frame_duration</name>
        <param>
          <type><ref refid="struct_a_v_codec_context" kindref="compound">AVCodecContext</ref> *</type>
          <declname>avctx</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>frame_bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return audio frame duration.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>avctx</parametername>
</parameternamelist>
<parameterdescription>
<para>codec context </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>frame_bytes</parametername>
</parameternamelist>
<parameterdescription>
<para>size of the frame, or 0 if unknown </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>frame duration, in samples, if known. 0 if not able to determine. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="4855" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavc__misc_1ga520e0d7584b92d70e51ff0fcc3551764" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void av_register_bitstream_filter</definition>
        <argsstring>(AVBitStreamFilter *bsf)</argsstring>
        <name>av_register_bitstream_filter</name>
        <param>
          <type><ref refid="struct_a_v_bit_stream_filter" kindref="compound">AVBitStreamFilter</ref> *</type>
          <declname>bsf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Register a bitstream filter.</para><para>The filter will be accessible to the application code through <ref refid="group__lavc__misc_1gaa84824e00f3d1266b8391807511836d4" kindref="member">av_bitstream_filter_next()</ref> or can be directly initialized with <ref refid="group__lavc__misc_1ga4f87a57cd7c08c1d9b9bfe1a4bd611f3" kindref="member">av_bitstream_filter_init()</ref>.</para><para><simplesect kind="see"><para><ref refid="group__lavc__core_1gaf1a2bb4e7c7611c131bb6212bf0fa639" kindref="member">avcodec_register_all()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="4886" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavc__misc_1ga4f87a57cd7c08c1d9b9bfe1a4bd611f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_a_v_bit_stream_filter_context" kindref="compound">AVBitStreamFilterContext</ref> *</type>
        <definition>AVBitStreamFilterContext* av_bitstream_filter_init</definition>
        <argsstring>(const char *name)</argsstring>
        <name>av_bitstream_filter_init</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create and initialize a bitstream filter context given a bitstream filter name.</para><para>The returned context must be freed with <ref refid="group__lavc__misc_1gabee15852c201976249e89964161a44b4" kindref="member">av_bitstream_filter_close()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the bitstream filter </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a bitstream filter context if a matching filter was found and successfully initialized, NULL otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="4898" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavc__misc_1ga1ab3bf4e396f0bbc5151df6af765543d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_bitstream_filter_filter</definition>
        <argsstring>(AVBitStreamFilterContext *bsfc, AVCodecContext *avctx, const char *args, uint8_t **poutbuf, int *poutbuf_size, const uint8_t *buf, int buf_size, int keyframe)</argsstring>
        <name>av_bitstream_filter_filter</name>
        <param>
          <type><ref refid="struct_a_v_bit_stream_filter_context" kindref="compound">AVBitStreamFilterContext</ref> *</type>
          <declname>bsfc</declname>
        </param>
        <param>
          <type><ref refid="struct_a_v_codec_context" kindref="compound">AVCodecContext</ref> *</type>
          <declname>avctx</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>args</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> **</type>
          <declname>poutbuf</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>poutbuf_size</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>buf_size</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>keyframe</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_filter" kindref="compound">Filter</ref> bitstream.</para><para>This function filters the buffer buf with size buf_size, and places the filtered buffer in the buffer pointed to by poutbuf.</para><para>The output buffer must be freed by the caller.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bsfc</parametername>
</parameternamelist>
<parameterdescription>
<para>bitstream filter context created by <ref refid="group__lavc__misc_1ga4f87a57cd7c08c1d9b9bfe1a4bd611f3" kindref="member">av_bitstream_filter_init()</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>avctx</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="struct_a_v_codec_context" kindref="compound">AVCodecContext</ref> accessed by the filter, may be NULL. If specified, this must point to the encoder context of the output stream the packet is sent to. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>args</parametername>
</parameternamelist>
<parameterdescription>
<para>arguments which specify the filter configuration, may be NULL </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>poutbuf</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer which is updated to point to the filtered buffer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>poutbuf_size</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer which is updated to the filtered buffer size in bytes </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer containing the data to filter </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf_size</parametername>
</parameternamelist>
<parameterdescription>
<para>size in bytes of buf </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keyframe</parametername>
</parameternamelist>
<parameterdescription>
<para>set to non-zero if the buffer to filter corresponds to a key-frame packet data </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>&gt;= 0 in case of success, or a negative error code in case of failure</para></simplesect>
If the return value is positive, an output buffer is allocated and is availble in *poutbuf, and is distinct from the input buffer.</para><para>If the return value is 0, the output buffer is not allocated and should be considered identical to the input buffer, or in case *poutbuf was set it points to the input buffer (not necessarily to its starting address). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="4928" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavc__misc_1gabee15852c201976249e89964161a44b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void av_bitstream_filter_close</definition>
        <argsstring>(AVBitStreamFilterContext *bsf)</argsstring>
        <name>av_bitstream_filter_close</name>
        <param>
          <type><ref refid="struct_a_v_bit_stream_filter_context" kindref="compound">AVBitStreamFilterContext</ref> *</type>
          <declname>bsf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Release bitstream filter context.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bsf</parametername>
</parameternamelist>
<parameterdescription>
<para>the bitstream filter context created with <ref refid="group__lavc__misc_1ga4f87a57cd7c08c1d9b9bfe1a4bd611f3" kindref="member">av_bitstream_filter_init()</ref>, can be NULL </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="4939" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavc__misc_1gaa84824e00f3d1266b8391807511836d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_a_v_bit_stream_filter" kindref="compound">AVBitStreamFilter</ref> *</type>
        <definition>AVBitStreamFilter* av_bitstream_filter_next</definition>
        <argsstring>(AVBitStreamFilter *f)</argsstring>
        <name>av_bitstream_filter_next</name>
        <param>
          <type><ref refid="struct_a_v_bit_stream_filter" kindref="compound">AVBitStreamFilter</ref> *</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>If f is NULL, return the first registered bitstream filter, if f is non-NULL, return the next registered bitstream filter after f, or NULL if f is the last one.</para><para>This function can be used to iterate over all registered bitstream filters. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="4949" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavc__misc_1ga04a23a2336412504052d5c4e0c7716ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void av_fast_padded_malloc</definition>
        <argsstring>(void *ptr, unsigned int *size, size_t min_size)</argsstring>
        <name>av_fast_padded_malloc</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>size</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>min_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Same behaviour av_fast_malloc but the buffer has additional FF_INPUT_BUFFER_PADDING_SIZE at the end which will always be 0.</para><para>In addition the whole buffer will initially and after resizes be 0-initialized so that no uninitialized data will ever appear. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="4960" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavc__misc_1gaea5550dc9271f356631f7002772158d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void av_fast_padded_mallocz</definition>
        <argsstring>(void *ptr, unsigned int *size, size_t min_size)</argsstring>
        <name>av_fast_padded_mallocz</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>size</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>min_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Same behaviour av_fast_padded_malloc except that buffer will always be 0-initialized after call. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="4966" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavc__misc_1ga144411ccbce77847ee9ce10d7fe5361c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>unsigned int av_xiphlacing</definition>
        <argsstring>(unsigned char *s, unsigned int v)</argsstring>
        <name>av_xiphlacing</name>
        <param>
          <type>unsigned char *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Encode extradata length to a buffer. Used by xiph codecs.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer to write to; must be at least (v/255+1) bytes long </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>size of extradata in bytes </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>number of bytes written to the buffer. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="4975" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavc__misc_1ga8df73458e977b4a0f9d8e4f1eeae47f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="attributes_8h_1aa6d076561d3a9eea4729ee632652de02" kindref="member">attribute_deprecated</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>attribute_deprecated void av_log_missing_feature</definition>
        <argsstring>(void *avc, const char *feature, int want_sample)</argsstring>
        <name>av_log_missing_feature</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>avc</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>feature</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>want_sample</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Log a generic warning message about a missing feature. This function is intended to be used internally by FFmpeg (libavcodec, libavformat, etc.) only, and would normally not be used by applications. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">avc</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer to an arbitrary struct of which the first field is a pointer to an <ref refid="struct_a_v_class" kindref="compound">AVClass</ref> struct </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">feature</parametername>
</parameternamelist>
<parameterdescription>
<para>string containing the name of the missing feature </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">want_sample</parametername>
</parameternamelist>
<parameterdescription>
<para>indicates if samples are wanted which exhibit this feature. If want_sample is non-zero, additional verbage will be added to the log message which tells the user how to report samples to the development mailing list. </para></parameterdescription>
</parameteritem>
</parameterlist>
<xrefsect id="deprecated_1_deprecated000013"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use avpriv_report_missing_feature() instead. </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="4992" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavc__misc_1ga90d24e73ca8633fc9e42c4bf2faf7923" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="attributes_8h_1aa6d076561d3a9eea4729ee632652de02" kindref="member">attribute_deprecated</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>attribute_deprecated void av_log_ask_for_sample</definition>
        <argsstring>(void *avc, const char *msg,...) av_printf_format(2</argsstring>
        <name>av_log_ask_for_sample</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>avc</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Log a generic warning message asking for a sample. This function is intended to be used internally by FFmpeg (libavcodec, libavformat, etc.) only, and would normally not be used by applications. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">avc</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer to an arbitrary struct of which the first field is a pointer to an <ref refid="struct_a_v_class" kindref="compound">AVClass</ref> struct </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">msg</parametername>
</parameternamelist>
<parameterdescription>
<para>string containing an optional message, or NULL if no message </para></parameterdescription>
</parameteritem>
</parameterlist>
<xrefsect id="deprecated_1_deprecated000014"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Use avpriv_request_sample() instead. </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="5004" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavc__misc_1ga1e7e3fd30164d0af5139885404fd2407" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="attributes_8h_1aa6d076561d3a9eea4729ee632652de02" kindref="member">attribute_deprecated</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>attribute_deprecated void void av_register_hwaccel</definition>
        <argsstring>(AVHWAccel *hwaccel)</argsstring>
        <name>av_register_hwaccel</name>
        <param>
          <type><ref refid="struct_a_v_h_w_accel" kindref="compound">AVHWAccel</ref> *</type>
          <declname>hwaccel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Register the hardware accelerator hwaccel. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="5010" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavc__misc_1ga943e869effb55cc86c923ef0db23de1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_a_v_h_w_accel" kindref="compound">AVHWAccel</ref> *</type>
        <definition>AVHWAccel* av_hwaccel_next</definition>
        <argsstring>(AVHWAccel *hwaccel)</argsstring>
        <name>av_hwaccel_next</name>
        <param>
          <type><ref refid="struct_a_v_h_w_accel" kindref="compound">AVHWAccel</ref> *</type>
          <declname>hwaccel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>If hwaccel is NULL, returns the first registered hardware accelerator, if hwaccel is non-NULL, returns the next registered hardware accelerator after hwaccel, or NULL if hwaccel is the last one. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="5017" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavc__misc_1gae120ec60cdf49cf0f793eff3ec731bcc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_lockmgr_register</definition>
        <argsstring>(int(*cb)(void **mutex, enum AVLockOp op))</argsstring>
        <name>av_lockmgr_register</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref>(*)(<ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> **mutex, enum <ref refid="group__lavc__misc_1ga7a013315e444069ec9630ddf3edce3f8" kindref="member">AVLockOp</ref> op)</type>
          <declname>cb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Register a user provided lock manager supporting the operations specified by AVLockOp. mutex points to a (void *) where the lockmgr should store/get a pointer to a user allocated mutex. It&apos;s NULL upon AV_LOCK_CREATE and != NULL for all other ops.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para>User defined callback. Note: FFmpeg may invoke calls to this callback during the call to <ref refid="group__lavc__misc_1gae120ec60cdf49cf0f793eff3ec731bcc" kindref="member">av_lockmgr_register()</ref>. Thus, the application must be prepared to handle that. If cb is set to NULL the lockmgr will be unregistered. Also note that during unregistration the previously registered lockmgr callback may also be invoked. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="5043" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavc__misc_1ga9680ab906f1206deafc521ed54927375" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>enum <ref refid="group__lavu__misc_1ga9a84bba4713dfced21a1a56163be1f48" kindref="member">AVMediaType</ref></type>
        <definition>enum AVMediaType avcodec_get_type</definition>
        <argsstring>(enum AVCodecID codec_id)</argsstring>
        <name>avcodec_get_type</name>
        <param>
          <type>enum <ref refid="group__lavc__core_1gaadca229ad2c20e060a14fec08a5cc7ce" kindref="member">AVCodecID</ref></type>
          <declname>codec_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the type of the given codec. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="5043" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavc__misc_1ga2016a52e94f867ebe5113bdf448e182d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
        <definition>const char* avcodec_get_name</definition>
        <argsstring>(enum AVCodecID id)</argsstring>
        <name>avcodec_get_name</name>
        <param>
          <type>enum <ref refid="group__lavc__core_1gaadca229ad2c20e060a14fec08a5cc7ce" kindref="member">AVCodecID</ref></type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the name of a codec. <simplesect kind="return"><para>a static string identifying the codec; never NULL </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="5054" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavc__misc_1ga906dda732e79eac12067c6d7ea19b630" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int avcodec_is_open</definition>
        <argsstring>(AVCodecContext *s)</argsstring>
        <name>avcodec_is_open</name>
        <param>
          <type><ref refid="struct_a_v_codec_context" kindref="compound">AVCodecContext</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a positive value if s is open (i.e. <ref refid="group__lavc__core_1ga11f785a188d7d9df71621001465b0f1d" kindref="member">avcodec_open2()</ref> was called on it with no corresponding <ref refid="group__lavc__core_1gaf4daa92361efb3523ef5afeb0b54077f" kindref="member">avcodec_close()</ref>), 0 otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="5060" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavc__misc_1ga2b665824e4d9144f8d4f6c01e3e85aa3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_codec_is_encoder</definition>
        <argsstring>(const AVCodec *codec)</argsstring>
        <name>av_codec_is_encoder</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_a_v_codec" kindref="compound">AVCodec</ref> *</type>
          <declname>codec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a non-zero number if codec is an encoder, zero otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="5065" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavc__misc_1ga6dc18eef1afca3610644a52565cf8a31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_codec_is_decoder</definition>
        <argsstring>(const AVCodec *codec)</argsstring>
        <name>av_codec_is_decoder</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_a_v_codec" kindref="compound">AVCodec</ref> *</type>
          <declname>codec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>a non-zero number if codec is a decoder, zero otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="5070" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavc__misc_1gac09f8ddc2d4b36c5a85c6befba0d0888" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_a_v_codec_descriptor" kindref="compound">AVCodecDescriptor</ref> *</type>
        <definition>const AVCodecDescriptor* avcodec_descriptor_get</definition>
        <argsstring>(enum AVCodecID id)</argsstring>
        <name>avcodec_descriptor_get</name>
        <param>
          <type>enum <ref refid="group__lavc__core_1gaadca229ad2c20e060a14fec08a5cc7ce" kindref="member">AVCodecID</ref></type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>descriptor for given codec ID or NULL if no descriptor exists. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="5075" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavc__misc_1ga909ef5261eafb1be1871f718353632bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_a_v_codec_descriptor" kindref="compound">AVCodecDescriptor</ref> *</type>
        <definition>const AVCodecDescriptor* avcodec_descriptor_next</definition>
        <argsstring>(const AVCodecDescriptor *prev)</argsstring>
        <name>avcodec_descriptor_next</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_a_v_codec_descriptor" kindref="compound">AVCodecDescriptor</ref> *</type>
          <declname>prev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Iterate over all codec descriptors known to libavcodec.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>prev</parametername>
</parameternamelist>
<parameterdescription>
<para>previous descriptor. NULL to get the first descriptor.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>next descriptor or NULL after the last descriptor </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="5084" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavc__misc_1ga199f854b030f24bd31d251f9d36f1392" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_a_v_codec_descriptor" kindref="compound">AVCodecDescriptor</ref> *</type>
        <definition>const AVCodecDescriptor* avcodec_descriptor_get_by_name</definition>
        <argsstring>(const char *name)</argsstring>
        <name>avcodec_descriptor_get_by_name</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>codec descriptor with the given name or NULL if no such descriptor exists. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavcodec/avcodec.h" line="5090" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Miscellaneous utility functions related to both encoding and decoding (or neither). </para>    </detaileddescription>
  </compounddef>
</doxygen>
