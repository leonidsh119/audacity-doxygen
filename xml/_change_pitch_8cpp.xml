<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_change_pitch_8cpp" kind="file" language="C++">
    <compoundname>ChangePitch.cpp</compoundname>
    <includes refid="_audacity_8h" local="yes">../Audacity.h</includes>
    <incdepgraph>
      <node id="40827">
        <label>C:/_dev/OpenU/Audacity/audacity/src/effects/ChangePitch.cpp</label>
        <link refid="ChangePitch.cpp"/>
        <childnode refid="40828" relation="include">
        </childnode>
      </node>
      <node id="40828">
        <label>../Audacity.h</label>
        <link refid="_audacity_8h"/>
      </node>
    </incdepgraph>
    <briefdescription>
<para>Change Pitch effect provides raising or lowering the pitch without changing the tempo. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/>Audacity:<sp/>A<sp/>Digital<sp/>Audio<sp/>Editor</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/>Audacity(R)<sp/>is<sp/>copyright<sp/>(c)<sp/>1999-2013<sp/>Audacity<sp/>Team.</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/>License:<sp/>GPL<sp/>v2.<sp/><sp/>See<sp/>License.txt.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>ChangePitch.cpp</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/>Vaughan<sp/>Johnson,<sp/>Dominic<sp/>Mazzoni,<sp/>Steve<sp/>Daulton</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment">******************************************************************/</highlight><highlight class="comment">/*******************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Audacity.h&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>for<sp/>USE_SOUNDTOUCH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>USE_SOUNDTOUCH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_change_pitch_8h" kindref="compound">ChangePitch.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="float_8h" kindref="compound">float.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/intl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/valtext.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../PitchName.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../ShuttleGui.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Spectrum.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../WaveTrack.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../widgets/valnum.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_time_warper_8h" kindref="compound">TimeWarper.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><ref refid="_change_speed_8cpp_1a2ae95ea8e60178fe99580d5142f0ec7eaead42502f1f6ff9e0108c06db4bc9e4a" kindref="member">ID_PercentChange</ref><sp/>=<sp/>10000,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/>ID_FromPitch,</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/>ID_FromOctave,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/>ID_ToPitch,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/>ID_ToOctave,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/>ID_SemitonesChange,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/>ID_FromFrequency,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/>ID_ToFrequency</highlight></codeline>
<codeline lineno="46"><highlight class="normal">};</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Soundtouch<sp/>is<sp/>not<sp/>reasonable<sp/>below<sp/>-99%<sp/>or<sp/>above<sp/>3000%.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Define<sp/>keys,<sp/>defaults,<sp/>minimums,<sp/>and<sp/>maximums<sp/>for<sp/>the<sp/>effect<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>Name<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Type<sp/><sp/><sp/><sp/><sp/>Key<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Def<sp/><sp/><sp/>Min<sp/><sp/><sp/><sp/><sp/><sp/>Max<sp/><sp/><sp/><sp/><sp/><sp/>Scale</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><ref refid="src_2effects_2_effect_8h_1af374fec4f6710a363a624d5e9f72b49b" kindref="member">Param</ref>(<sp/>Percentage,<sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/><sp/><ref refid="_audacity_8h_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(</highlight><highlight class="stringliteral">&quot;Percentage&quot;</highlight><highlight class="normal">),<sp/>0.0,<sp/><sp/>-99.0,<sp/><sp/><sp/>3000.0,<sp/><sp/>1<sp/><sp/>);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//<sp/>We<sp/>warp<sp/>the<sp/>slider<sp/>to<sp/>go<sp/>up<sp/>to<sp/>400%,<sp/>but<sp/>user<sp/>can<sp/>enter<sp/>up<sp/>to<sp/>3000%</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>kSliderMax<sp/>=<sp/>100.0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>warped<sp/>above<sp/>zero<sp/>to<sp/>actually<sp/>go<sp/>up<sp/>to<sp/>400%</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>kSliderWarp<sp/>=<sp/>1.30105;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>warp<sp/>power<sp/>takes<sp/>max<sp/>from<sp/>100<sp/>to<sp/>400.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EffectChangePitch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal">BEGIN_EVENT_TABLE(EffectChangePitch,<sp/>wxEvtHandler)</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/>EVT_CHOICE(ID_FromPitch,<sp/>EffectChangePitch::OnChoice_FromPitch)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/>EVT_TEXT(ID_FromOctave,<sp/>EffectChangePitch::OnSpin_FromOctave)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/>EVT_CHOICE(ID_ToPitch,<sp/>EffectChangePitch::OnChoice_ToPitch)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/>EVT_TEXT(ID_ToOctave,<sp/>EffectChangePitch::OnSpin_ToOctave)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/>EVT_TEXT(ID_SemitonesChange,<sp/>EffectChangePitch::OnText_SemitonesChange)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/>EVT_TEXT(ID_FromFrequency,<sp/>EffectChangePitch::OnText_FromFrequency)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/>EVT_TEXT(ID_ToFrequency,<sp/>EffectChangePitch::OnText_ToFrequency)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/>EVT_TEXT(<ref refid="_change_speed_8cpp_1a2ae95ea8e60178fe99580d5142f0ec7eaead42502f1f6ff9e0108c06db4bc9e4a" kindref="member">ID_PercentChange</ref>,<sp/>EffectChangePitch::OnText_PercentChange)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/>EVT_SLIDER(ID_PercentChange,<sp/>EffectChangePitch::OnSlider_PercentChange)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><ref refid="_batch_command_dialog_8cpp_1a8c3469324b3e5d3e6c44c23a418ab937" kindref="member">END_EVENT_TABLE</ref>()</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal">EffectChangePitch::EffectChangePitch()</highlight></codeline>
<codeline lineno="77"><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/>m_dPercentChange<sp/>=<sp/>DEF_Percentage;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/>m_dSemitonesChange<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/>m_dStartFrequency<sp/>=<sp/>0.0;<sp/></highlight><highlight class="comment">//<sp/>0.0<sp/>=&gt;<sp/>uninitialized</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/>m_bLoopDetect<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NULL<sp/>out<sp/>these<sp/>control<sp/>members<sp/>because<sp/>there<sp/>are<sp/>some<sp/>cases<sp/>where<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>event<sp/>table<sp/>handlers<sp/>get<sp/>called<sp/>during<sp/>this<sp/>method,<sp/>and<sp/>those<sp/>handlers<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>can<sp/>cause<sp/>trouble<sp/>check<sp/>for<sp/>NULL.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/>m_pChoice_FromPitch<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/>m_pSpin_FromOctave<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/>m_pChoice_ToPitch<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/>m_pSpin_ToOctave<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/>m_pTextCtrl_SemitonesChange<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/>m_pTextCtrl_FromFrequency<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/>m_pTextCtrl_ToFrequency<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/>m_pTextCtrl_PercentChange<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/>m_pSlider_PercentChange<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/>SetLinearEffectFlag(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="100"><highlight class="normal">}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal">EffectChangePitch::~EffectChangePitch()</highlight></codeline>
<codeline lineno="103"><highlight class="normal">{</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment">//<sp/>IdentInterface<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal">wxString<sp/>EffectChangePitch::GetSymbol()</highlight></codeline>
<codeline lineno="109"><highlight class="normal">{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CHANGEPITCH_PLUGIN_SYMBOL;</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal">wxString<sp/>EffectChangePitch::GetDescription()</highlight></codeline>
<codeline lineno="114"><highlight class="normal">{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_audacity_8h_1ad4baed404c66b57e257af684bdc5ecf2" kindref="member">XO</ref>(</highlight><highlight class="stringliteral">&quot;Change<sp/>the<sp/>pitch<sp/>of<sp/>a<sp/>track<sp/>without<sp/>changing<sp/>its<sp/>tempo&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EffectIdentInterface<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><ref refid="_effect_interface_8h_1a4809a7bb3fd1a421902a667cc1405d43" kindref="member">EffectType</ref><sp/>EffectChangePitch::GetType()</highlight></codeline>
<codeline lineno="121"><highlight class="normal">{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_effect_interface_8h_1a4809a7bb3fd1a421902a667cc1405d43afd0f1aa24555662b091206287d30521b" kindref="member">EffectTypeProcess</ref>;</highlight></codeline>
<codeline lineno="123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EffectClientInterface<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>EffectChangePitch::GetAutomationParameters(<ref refid="class_effect_automation_parameters" kindref="compound">EffectAutomationParameters</ref><sp/>&amp;<sp/>parms)</highlight></codeline>
<codeline lineno="128"><highlight class="normal">{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/>parms.Write(KEY_Percentage,<sp/>m_dPercentChange);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>EffectChangePitch::SetAutomationParameters(<ref refid="class_effect_automation_parameters" kindref="compound">EffectAutomationParameters</ref><sp/>&amp;<sp/>parms)</highlight></codeline>
<codeline lineno="135"><highlight class="normal">{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Vaughan,<sp/>2013-06:<sp/>Long<sp/>lost<sp/>to<sp/>history,<sp/>I<sp/>don&apos;t<sp/>see<sp/>why<sp/>m_dPercentChange<sp/>was<sp/>chosen<sp/>to<sp/>be<sp/>shuttled.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>m_dSemitonesChange<sp/>is<sp/>used<sp/>in<sp/>Process().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><ref refid="src_2effects_2_effect_8h_1a0384500117ae1d5b98296bfb7b08d943" kindref="member">ReadAndVerifyDouble</ref>(Percentage);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/>m_dPercentChange<sp/>=<sp/>Percentage;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>EffectChangePitch::LoadFactoryDefaults()</highlight></codeline>
<codeline lineno="146"><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/>DeduceFrequencies();</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_effect_1a29827d153ead224ad480b33bd82b624b" kindref="member">Effect::LoadFactoryDefaults</ref>();</highlight></codeline>
<codeline lineno="150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Effect<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>EffectChangePitch::Init()</highlight></codeline>
<codeline lineno="155"><highlight class="normal">{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/>mSoundTouch<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>EffectChangePitch::Process()</highlight></codeline>
<codeline lineno="161"><highlight class="normal">{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/>mSoundTouch<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>SoundTouch();</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/>SetTimeWarper(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_identity_time_warper" kindref="compound">IdentityTimeWarper</ref>());</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/>mSoundTouch-&gt;setPitchSemiTones((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)(m_dSemitonesChange));</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_MIDI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note:<sp/>m_dSemitonesChange<sp/>is<sp/>private<sp/>to<sp/>ChangePitch<sp/>because<sp/>it<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>needs<sp/>to<sp/>pass<sp/>it<sp/>along<sp/>to<sp/>mSoundTouch<sp/>(above).<sp/>I<sp/>added<sp/>mSemitones</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>SoundTouchEffect<sp/>(the<sp/>super<sp/>class)<sp/>to<sp/>convey<sp/>this<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>process<sp/>Note<sp/>tracks.<sp/>This<sp/>approach<sp/>minimizes<sp/>changes<sp/>to<sp/>existing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>code,<sp/>but<sp/>it<sp/>would<sp/>be<sp/>cleaner<sp/>to<sp/>change<sp/>all<sp/>m_dSemitonesChange<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mSemitones,<sp/>make<sp/>mSemitones<sp/>exist<sp/>with<sp/>or<sp/>without<sp/>USE_MIDI,<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>eliminate<sp/>the<sp/>next<sp/>line:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/>mSemitones<sp/>=<sp/>m_dSemitonesChange;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EffectSoundTouch::Process();</highlight></codeline>
<codeline lineno="176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>EffectChangePitch::CheckWhetherSkipEffect()</highlight></codeline>
<codeline lineno="179"><highlight class="normal">{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(m_dPercentChange<sp/>==<sp/>0.0);</highlight></codeline>
<codeline lineno="181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectChangePitch::PopulateOrExchange(<ref refid="class_shuttle_gui" kindref="compound">ShuttleGui</ref><sp/>&amp;<sp/><ref refid="xlftab_8c_1af933676109efed7ab34cea71d748a517" kindref="member">S</ref>)</highlight></codeline>
<codeline lineno="184"><highlight class="normal">{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/>DeduceFrequencies();<sp/></highlight><highlight class="comment">//<sp/>Set<sp/>frequency-related<sp/>control<sp/>values<sp/>based<sp/>on<sp/>sample.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/>wxArrayString<sp/><ref refid="seqread_8c_1a7f083f7b76ea4d09b2820211a2b0d04e" kindref="member">pitch</ref>;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/>pitch.Add(wxT(</highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/>pitch.Add(wxT(</highlight><highlight class="stringliteral">&quot;C#/Db&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/>pitch.Add(wxT(</highlight><highlight class="stringliteral">&quot;D&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/>pitch.Add(wxT(</highlight><highlight class="stringliteral">&quot;D#/Eb&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/>pitch.Add(wxT(</highlight><highlight class="stringliteral">&quot;E&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/>pitch.Add(wxT(</highlight><highlight class="stringliteral">&quot;F&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/>pitch.Add(wxT(</highlight><highlight class="stringliteral">&quot;F#/Gb&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/>pitch.Add(wxT(</highlight><highlight class="stringliteral">&quot;G&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/>pitch.Add(wxT(</highlight><highlight class="stringliteral">&quot;G#/Ab&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/>pitch.Add(wxT(</highlight><highlight class="stringliteral">&quot;A&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/>pitch.Add(wxT(</highlight><highlight class="stringliteral">&quot;A#/Bb&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/>pitch.Add(wxT(</highlight><highlight class="stringliteral">&quot;B&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a026838575f360f2d1d8414827d18457d" kindref="member">SetBorder</ref>(5);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a6f8c4113388aa33dbb64204cd5ab1571" kindref="member">StartVerticalLay</ref>(0);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a6f8c4113388aa33dbb64204cd5ab1571" kindref="member">StartVerticalLay</ref>();</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1aee0fd3f1d39ff229d17301f10ca5b837" kindref="member">AddTitle</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Change<sp/>Pitch<sp/>without<sp/>Changing<sp/>Tempo&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1aee0fd3f1d39ff229d17301f10ca5b837" kindref="member">AddTitle</ref>(</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxString::Format(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Estimated<sp/>Start<sp/>Pitch:<sp/>%s%d<sp/>(%.3f<sp/>Hz)&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pitch[m_nFromPitch].c_str(),<sp/>m_nFromOctave,<sp/>m_FromFrequency));</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a0286cb0ae146afcf8c589ceb16b37144" kindref="member">EndVerticalLay</ref>();</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>i18n-hint:<sp/>(noun)<sp/>Musical<sp/>pitch.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1af3077c7ec169ef519b6d7afa80ec9a64" kindref="member">StartStatic</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Pitch&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1ae71efe4837e02680f854a905b3b27120" kindref="member">StartMultiColumn</ref>(6,<sp/>wxALIGN_CENTER);<sp/></highlight><highlight class="comment">//<sp/>6<sp/>controls,<sp/>because<sp/>each<sp/>AddChoice<sp/>adds<sp/>a<sp/>wxStaticText<sp/>and<sp/>a<sp/>wxChoice.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pChoice_FromPitch<sp/>=<sp/>S.<ref refid="class_shuttle_gui_1a0db2f531b7bd17f72c211883151f5640" kindref="member">Id</ref>(ID_FromPitch).<ref refid="class_shuttle_gui_base_1af7a1f08500177bfe4cb37255043aebc0" kindref="member">AddChoice</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;from&quot;</highlight><highlight class="normal">),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),<sp/>&amp;pitch);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pChoice_FromPitch-&gt;SetName(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;from&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pChoice_FromPitch-&gt;SetSizeHints(80,<sp/>-1);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pSpin_FromOctave<sp/>=<sp/>S.<ref refid="class_shuttle_gui_1a0db2f531b7bd17f72c211883151f5640" kindref="member">Id</ref>(ID_FromOctave).<ref refid="class_shuttle_gui_base_1a5f9ca61cc51128580b6d3d19e23f6b0f" kindref="member">AddSpinCtrl</ref>(wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),<sp/>m_nFromOctave,<sp/><ref refid="macint_8h_1a9ec306f36d50c7375e74f0d1c55a3a67" kindref="member">INT_MAX</ref>,<sp/><ref refid="macint_8h_1a21658776274b3d146c674318b635a334" kindref="member">INT_MIN</ref>);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pSpin_FromOctave-&gt;SetName(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;from<sp/>Octave&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pSpin_FromOctave-&gt;SetSizeHints(50,<sp/>-1);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pChoice_ToPitch<sp/>=<sp/>S.<ref refid="class_shuttle_gui_1a0db2f531b7bd17f72c211883151f5640" kindref="member">Id</ref>(ID_ToPitch).<ref refid="class_shuttle_gui_base_1af7a1f08500177bfe4cb37255043aebc0" kindref="member">AddChoice</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;to&quot;</highlight><highlight class="normal">),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),<sp/>&amp;pitch);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pChoice_ToPitch-&gt;SetName(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;to&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pChoice_ToPitch-&gt;SetSizeHints(80,<sp/>-1);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pSpin_ToOctave<sp/>=</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_1a0db2f531b7bd17f72c211883151f5640" kindref="member">Id</ref>(ID_ToOctave).<ref refid="class_shuttle_gui_base_1a5f9ca61cc51128580b6d3d19e23f6b0f" kindref="member">AddSpinCtrl</ref>(wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),<sp/>m_nToOctave,<sp/><ref refid="macint_8h_1a9ec306f36d50c7375e74f0d1c55a3a67" kindref="member">INT_MAX</ref>,<sp/><ref refid="macint_8h_1a21658776274b3d146c674318b635a334" kindref="member">INT_MIN</ref>);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pSpin_ToOctave-&gt;SetName(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;to<sp/>Octave&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pSpin_ToOctave-&gt;SetSizeHints(50,<sp/>-1);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a1a676a57ca191fde04599e4199e3f7f4" kindref="member">EndMultiColumn</ref>();</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1aa456756283f789e26c6841eb3ca55c72" kindref="member">StartHorizontalLay</ref>(wxALIGN_CENTER);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FloatingPointValidator&lt;double&gt;<sp/>vldSemitones(2,<sp/>&amp;m_dSemitonesChange,<sp/>NUM_VAL_TWO_TRAILING_ZEROES);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pTextCtrl_SemitonesChange<sp/>=</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_1a0db2f531b7bd17f72c211883151f5640" kindref="member">Id</ref>(ID_SemitonesChange).<ref refid="class_shuttle_gui_base_1aa9df960a9ed7fdffec419912b995788e" kindref="member">AddTextBox</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Semitones<sp/>(half-steps):&quot;</highlight><highlight class="normal">),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),<sp/>12);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pTextCtrl_SemitonesChange-&gt;SetName(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Semitones<sp/>(half-steps)&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pTextCtrl_SemitonesChange-&gt;SetValidator(vldSemitones);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a80917a37e36156f398a24436c1f3dba9" kindref="member">EndHorizontalLay</ref>();</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1ac6ae219c1f976c24fc88a07ffdaee4cd" kindref="member">EndStatic</ref>();</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1af3077c7ec169ef519b6d7afa80ec9a64" kindref="member">StartStatic</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Frequency&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1ae71efe4837e02680f854a905b3b27120" kindref="member">StartMultiColumn</ref>(5,<sp/>wxALIGN_CENTER);<sp/></highlight><highlight class="comment">//<sp/>5,<sp/>because<sp/>AddTextBox<sp/>adds<sp/>a<sp/>wxStaticText<sp/>and<sp/>a<sp/>wxTextCtrl.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FloatingPointValidator&lt;double&gt;<sp/>vldFromFrequency(3,<sp/>&amp;m_FromFrequency,<sp/>NUM_VAL_THREE_TRAILING_ZEROES);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vldFromFrequency.SetMin(0.0);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pTextCtrl_FromFrequency<sp/>=<sp/>S.<ref refid="class_shuttle_gui_1a0db2f531b7bd17f72c211883151f5640" kindref="member">Id</ref>(ID_FromFrequency).<ref refid="class_shuttle_gui_base_1aa9df960a9ed7fdffec419912b995788e" kindref="member">AddTextBox</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;from&quot;</highlight><highlight class="normal">),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),<sp/>12);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pTextCtrl_FromFrequency-&gt;SetName(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;from<sp/>(Hz)&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pTextCtrl_FromFrequency-&gt;SetValidator(vldFromFrequency);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FloatingPointValidator&lt;double&gt;<sp/>vldToFrequency(3,<sp/>&amp;m_ToFrequency,<sp/>NUM_VAL_THREE_TRAILING_ZEROES);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vldToFrequency.SetMin(0.0);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pTextCtrl_ToFrequency<sp/>=<sp/>S.<ref refid="class_shuttle_gui_1a0db2f531b7bd17f72c211883151f5640" kindref="member">Id</ref>(ID_ToFrequency).<ref refid="class_shuttle_gui_base_1aa9df960a9ed7fdffec419912b995788e" kindref="member">AddTextBox</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;to&quot;</highlight><highlight class="normal">),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),<sp/>12);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pTextCtrl_ToFrequency-&gt;SetName(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;to<sp/>(Hz)&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pTextCtrl_ToFrequency-&gt;SetValidator(vldToFrequency);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a54816a02cbcc4d09b3d40c2b731ba9e5" kindref="member">AddUnits</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Hz&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a1a676a57ca191fde04599e4199e3f7f4" kindref="member">EndMultiColumn</ref>();</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1aa456756283f789e26c6841eb3ca55c72" kindref="member">StartHorizontalLay</ref>(wxALIGN_CENTER);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FloatingPointValidator&lt;double&gt;<sp/>vldPercentage(3,<sp/>&amp;m_dPercentChange,<sp/>NUM_VAL_THREE_TRAILING_ZEROES);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vldPercentage.SetRange(MIN_Percentage,<sp/>MAX_Percentage);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pTextCtrl_PercentChange<sp/>=<sp/>S.<ref refid="class_shuttle_gui_1a0db2f531b7bd17f72c211883151f5640" kindref="member">Id</ref>(<ref refid="_change_speed_8cpp_1a2ae95ea8e60178fe99580d5142f0ec7eaead42502f1f6ff9e0108c06db4bc9e4a" kindref="member">ID_PercentChange</ref>).<ref refid="class_shuttle_gui_base_1aa9df960a9ed7fdffec419912b995788e" kindref="member">AddTextBox</ref>(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Percent<sp/>Change:&quot;</highlight><highlight class="normal">),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),<sp/>12);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pTextCtrl_PercentChange-&gt;SetValidator(vldPercentage);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a80917a37e36156f398a24436c1f3dba9" kindref="member">EndHorizontalLay</ref>();</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1aa456756283f789e26c6841eb3ca55c72" kindref="member">StartHorizontalLay</ref>(wxEXPAND);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a3afc5aecba69ad749aac2f740e34a471" kindref="member">SetStyle</ref>(wxSL_HORIZONTAL);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pSlider_PercentChange<sp/>=<sp/>S.<ref refid="class_shuttle_gui_1a0db2f531b7bd17f72c211883151f5640" kindref="member">Id</ref>(<ref refid="_change_speed_8cpp_1a2ae95ea8e60178fe99580d5142f0ec7eaead42502f1f6ff9e0108c06db4bc9e4a" kindref="member">ID_PercentChange</ref>)</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="class_shuttle_gui_base_1ab5483f256392246255a5b5f6c4638c5e" kindref="member">AddSlider</ref>(wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),<sp/>0,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)kSliderMax,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)MIN_Percentage);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_pSlider_PercentChange-&gt;SetName(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Percent<sp/>Change&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a80917a37e36156f398a24436c1f3dba9" kindref="member">EndHorizontalLay</ref>();</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1ac6ae219c1f976c24fc88a07ffdaee4cd" kindref="member">EndStatic</ref>();</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/>S.<ref refid="class_shuttle_gui_base_1a0286cb0ae146afcf8c589ceb16b37144" kindref="member">EndVerticalLay</ref>();</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="293"><highlight class="normal">}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>EffectChangePitch::TransferDataToWindow()</highlight></codeline>
<codeline lineno="296"><highlight class="normal">{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/>m_bLoopDetect<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mUIParent-&gt;TransferDataToWindow())</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/>Calc_SemitonesChange_fromPercentChange();</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/>Calc_ToPitch();<sp/></highlight><highlight class="comment">//<sp/>Call<sp/>*after*<sp/>m_dSemitonesChange<sp/>is<sp/>updated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/>Calc_ToFrequency();</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/>Calc_ToOctave();<sp/></highlight><highlight class="comment">//<sp/>Call<sp/>after<sp/>Calc_ToFrequency().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/>Update_Choice_FromPitch();</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/>Update_Choice_ToPitch();</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/>Update_Spin_FromOctave();</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/>Update_Spin_ToOctave();</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/>Update_Text_SemitonesChange();</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/>Update_Text_FromFrequency();</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/>Update_Text_ToFrequency();</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/>Update_Text_PercentChange();</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/>Update_Slider_PercentChange();</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/>m_bLoopDetect<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="322"><highlight class="normal">}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>EffectChangePitch::TransferDataFromWindow()</highlight></codeline>
<codeline lineno="325"><highlight class="normal">{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mUIParent-&gt;Validate()<sp/>||<sp/>!mUIParent-&gt;TransferDataFromWindow())</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>from/to<sp/>pitch<sp/>controls</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/>m_nFromPitch<sp/>=<sp/>m_pChoice_FromPitch-&gt;GetSelection();</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/>m_nFromOctave<sp/>=<sp/>m_pSpin_FromOctave-&gt;GetValue();</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/>m_nToPitch<sp/>=<sp/>m_pChoice_ToPitch-&gt;GetSelection();</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>need<sp/>to<sp/>update<sp/>Slider_PercentChange<sp/>here<sp/>because<sp/>TextCtrl_PercentChange</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>always<sp/>tracks<sp/>it<sp/>&amp;<sp/>is<sp/>more<sp/>precise<sp/>(decimal<sp/>points).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="341"><highlight class="normal">}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EffectChangePitch<sp/>implementation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Deduce<sp/>m_FromFrequency<sp/>from<sp/>the<sp/>samples<sp/>at<sp/>the<sp/>beginning<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>selection.<sp/>Then<sp/>set<sp/>some<sp/>other<sp/>params<sp/>accordingly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectChangePitch::DeduceFrequencies()</highlight></codeline>
<codeline lineno="348"><highlight class="normal">{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>As<sp/>a<sp/>neat<sp/>trick,<sp/>attempt<sp/>to<sp/>get<sp/>the<sp/>frequency<sp/>of<sp/>the<sp/>note<sp/>at<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>beginning<sp/>of<sp/>the<sp/>selection.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_selected_track_list_of_kind_iterator" kindref="compound">SelectedTrackListOfKindIterator</ref><sp/>iter(<ref refid="class_track_1a4a6604845139575dfc25be299aeb60efab39033be088537a007532668cb6d16a8" kindref="member">Track::Wave</ref>,<sp/>mTracks);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*track<sp/>=<sp/>(<ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*)<sp/>iter.First();</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(track)<sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="test__lib_f_l_a_c_2format_8c_1a960ad82c3ba394a46f17f5f6146c93ea" kindref="member">rate</ref><sp/>=<sp/>track-&gt;<ref refid="class_wave_track_1a18bbe6e1bb4b1016c3a3de835c33b8fa" kindref="member">GetRate</ref>();</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Auto-size<sp/>window<sp/>--<sp/>high<sp/>sample<sp/>rates<sp/>require<sp/>larger<sp/>windowSize.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Aim<sp/>for<sp/>around<sp/>2048<sp/>samples<sp/>at<sp/>44.1<sp/>kHz<sp/>(good<sp/>down<sp/>to<sp/>about<sp/>100<sp/>Hz).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>To<sp/>detect<sp/>single<sp/>notes,<sp/>analysis<sp/>period<sp/>should<sp/>be<sp/>about<sp/>0.2<sp/>seconds.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>windowSize<sp/>must<sp/>be<sp/>a<sp/>power<sp/>of<sp/>2.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>windowSize<sp/>=<sp/>wxRound(pow(2.0,<sp/>floor((log(rate<sp/>/<sp/>20.0)/log(2.0))<sp/>+<sp/>0.5)));</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>windowSize<sp/>&lt;<sp/>256<sp/>too<sp/>inaccurate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>windowSize<sp/>=<sp/>(windowSize<sp/>&gt;<sp/>256)?<sp/>windowSize<sp/>:<sp/>256;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>want<sp/>about<sp/>0.2<sp/>seconds<sp/>to<sp/>catch<sp/>the<sp/>first<sp/>note.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>number<sp/>of<sp/>windows<sp/>rounded<sp/>to<sp/>nearest<sp/>integer<sp/>&gt;=<sp/>1.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numWindows<sp/>=<sp/>wxRound((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)(rate<sp/>/<sp/>(5.0<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref><sp/>*<sp/>windowSize)));</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>numWindows<sp/>=<sp/>(numWindows<sp/>&gt;<sp/>0)?<sp/>numWindows<sp/>:<sp/>1;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>trackStart<sp/>=<sp/>track-&gt;<ref refid="class_wave_track_1acd39f4f01272e112a2d132e48b60678e" kindref="member">GetStartTime</ref>();</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0<sp/>=<sp/>mT0<sp/>&lt;<sp/>trackStart?<sp/>trackStart:<sp/>mT0;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref><sp/>=<sp/>track-&gt;<ref refid="class_wave_track_1afe621ba06a0396725da44e937143972f" kindref="member">TimeToLongSamples</ref>(t0);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>analyzeSize<sp/>=<sp/>windowSize<sp/>*<sp/>numWindows;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<sp/><ref refid="recplay_8c_1adbbab5cb2248179d231690a1a02ff977" kindref="member">buffer</ref>;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buffer<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[analyzeSize];</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<sp/>freq;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>freq<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[windowSize/2];</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<sp/>freqa;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>freqa<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[windowSize/2];</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/>j,<sp/>argmax;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lag;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;<sp/>j&lt;windowSize/2;<sp/>j++)</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>freqa[j]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>track-&gt;<ref refid="class_wave_track_1a989e55726466fa1d8ec9aa4322f1c950" kindref="member">Get</ref>((<ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref>)<sp/>buffer,<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>,<sp/>start,<sp/>analyzeSize);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;<sp/>i&lt;numWindows;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_spectrum_8cpp_1a166e75c5ad8a2ae6a3a54bc62af323b4" kindref="member">ComputeSpectrum</ref>(buffer+i*windowSize,<sp/>windowSize,</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>windowSize,<sp/>rate,<sp/>freq,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;<sp/>j&lt;windowSize/2;<sp/>j++)</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>freqa[j]<sp/>+=<sp/>freq[j];</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>argmax=0;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=1;<sp/>j&lt;windowSize/2;<sp/>j++)</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(freqa[j]<sp/>&gt;<sp/>freqa[argmax])</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argmax<sp/>=<sp/>j;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>freq;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>freqa;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/><ref refid="recplay_8c_1adbbab5cb2248179d231690a1a02ff977" kindref="member">buffer</ref>;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lag<sp/>=<sp/>(windowSize/2<sp/>-<sp/>1)<sp/>-<sp/>argmax;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_dStartFrequency<sp/>=<sp/>rate<sp/>/<sp/>lag;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dFromMIDInote<sp/>=<sp/><ref refid="_pitch_name_8cpp_1aa4b14091f3b1664f93c2ce0fa5972741" kindref="member">FreqToMIDInote</ref>(m_dStartFrequency);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dToMIDInote<sp/>=<sp/>dFromMIDInote<sp/>+<sp/>m_dSemitonesChange;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/>m_nFromPitch<sp/>=<sp/><ref refid="_pitch_name_8cpp_1a1f22ddf853e23b6cd770b6a01e81e94c" kindref="member">PitchIndex</ref>(dFromMIDInote);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/>m_nFromOctave<sp/>=<sp/><ref refid="_pitch_name_8cpp_1a8dcbf998ef07f03d2a6d2cb7d6694239" kindref="member">PitchOctave</ref>(dFromMIDInote);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/>m_nToPitch<sp/>=<sp/><ref refid="_pitch_name_8cpp_1a1f22ddf853e23b6cd770b6a01e81e94c" kindref="member">PitchIndex</ref>(dToMIDInote);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/>m_nToOctave<sp/>=<sp/><ref refid="_pitch_name_8cpp_1a8dcbf998ef07f03d2a6d2cb7d6694239" kindref="member">PitchOctave</ref>(dToMIDInote);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/>m_FromFrequency<sp/>=<sp/>m_dStartFrequency;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/>Calc_PercentChange();</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/>Calc_ToFrequency();</highlight></codeline>
<codeline lineno="419"><highlight class="normal">}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight><highlight class="comment">//<sp/>calculations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectChangePitch::Calc_ToPitch()</highlight></codeline>
<codeline lineno="424"><highlight class="normal">{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nSemitonesChange<sp/>=</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)(m_dSemitonesChange<sp/>+<sp/>((m_dSemitonesChange<sp/>&lt;<sp/>0.0)<sp/>?<sp/>-0.5<sp/>:<sp/>0.5));</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/>m_nToPitch<sp/>=<sp/>(m_nFromPitch<sp/>+<sp/>nSemitonesChange)<sp/>%<sp/>12;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_nToPitch<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_nToPitch<sp/>+=<sp/>12;</highlight></codeline>
<codeline lineno="430"><highlight class="normal">}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectChangePitch::Calc_ToOctave()</highlight></codeline>
<codeline lineno="433"><highlight class="normal">{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/>m_nToOctave<sp/>=<sp/><ref refid="_pitch_name_8cpp_1a8dcbf998ef07f03d2a6d2cb7d6694239" kindref="member">PitchOctave</ref>(<ref refid="_pitch_name_8cpp_1aa4b14091f3b1664f93c2ce0fa5972741" kindref="member">FreqToMIDInote</ref>(m_ToFrequency));</highlight></codeline>
<codeline lineno="435"><highlight class="normal">}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectChangePitch::Calc_SemitonesChange_fromPitches()</highlight></codeline>
<codeline lineno="438"><highlight class="normal">{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/>m_dSemitonesChange<sp/>=</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_pitch_name_8cpp_1a8c713c1aa56051de9a37af460191dee1" kindref="member">PitchToMIDInote</ref>(m_nToPitch,<sp/>m_nToOctave)<sp/>-<sp/><ref refid="_pitch_name_8cpp_1a8c713c1aa56051de9a37af460191dee1" kindref="member">PitchToMIDInote</ref>(m_nFromPitch,<sp/>m_nFromOctave);</highlight></codeline>
<codeline lineno="441"><highlight class="normal">}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectChangePitch::Calc_SemitonesChange_fromPercentChange()</highlight></codeline>
<codeline lineno="444"><highlight class="normal">{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>m_dPercentChange<sp/>rather<sp/>than<sp/>m_FromFrequency<sp/>&amp;<sp/>m_ToFrequency,<sp/>because</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>they<sp/>start<sp/>out<sp/>uninitialized,<sp/>but<sp/>m_dPercentChange<sp/>is<sp/>always<sp/>valid.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/>m_dSemitonesChange<sp/>=<sp/>(12.0<sp/>*<sp/>log((100.0<sp/>+<sp/>m_dPercentChange)<sp/>/<sp/>100.0))<sp/>/<sp/>log(2.0);</highlight></codeline>
<codeline lineno="448"><highlight class="normal">}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectChangePitch::Calc_ToFrequency()</highlight></codeline>
<codeline lineno="451"><highlight class="normal">{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/>m_ToFrequency<sp/>=<sp/>(m_FromFrequency<sp/>*<sp/>(100.0<sp/>+<sp/>m_dPercentChange))<sp/>/<sp/>100.0;</highlight></codeline>
<codeline lineno="453"><highlight class="normal">}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectChangePitch::Calc_PercentChange()</highlight></codeline>
<codeline lineno="456"><highlight class="normal">{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/>m_dPercentChange<sp/>=<sp/>100.0<sp/>*<sp/>(pow(2.0,<sp/>(m_dSemitonesChange<sp/>/<sp/>12.0))<sp/>-<sp/>1.0);</highlight></codeline>
<codeline lineno="458"><highlight class="normal">}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight><highlight class="comment">//<sp/>handlers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectChangePitch::OnChoice_FromPitch(wxCommandEvent<sp/>&amp;<sp/>WXUNUSED(evt))</highlight></codeline>
<codeline lineno="464"><highlight class="normal">{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_bLoopDetect)</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/>m_nFromPitch<sp/>=<sp/>m_pChoice_FromPitch-&gt;GetSelection();</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/>m_FromFrequency<sp/>=<sp/><ref refid="_pitch_name_8cpp_1a5d818dfb19f740dfeeeced73893a8833" kindref="member">PitchToFreq</ref>(m_nFromPitch,<sp/>m_nFromOctave);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/>Calc_ToPitch();</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/>Calc_ToFrequency();</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/>Calc_ToOctave();<sp/></highlight><highlight class="comment">//<sp/>Call<sp/>after<sp/>Calc_ToFrequency().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/>m_bLoopDetect<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Update_Choice_ToPitch();</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Update_Spin_ToOctave();</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Update_Text_FromFrequency();</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Update_Text_ToFrequency();</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/>m_bLoopDetect<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="483"><highlight class="normal">}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectChangePitch::OnSpin_FromOctave(wxCommandEvent<sp/>&amp;<sp/>WXUNUSED(evt))</highlight></codeline>
<codeline lineno="486"><highlight class="normal">{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_bLoopDetect)</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/>m_nFromOctave<sp/>=<sp/>m_pSpin_FromOctave-&gt;GetValue();</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//vvv<sp/>If<sp/>I<sp/>change<sp/>this<sp/>code<sp/>to<sp/>not<sp/>keep<sp/>semitones<sp/>and<sp/>percent<sp/>constant,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>will<sp/>need<sp/>validation<sp/>code<sp/>as<sp/>in<sp/>OnSpin_ToOctave.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/>m_FromFrequency<sp/>=<sp/><ref refid="_pitch_name_8cpp_1a5d818dfb19f740dfeeeced73893a8833" kindref="member">PitchToFreq</ref>(m_nFromPitch,<sp/>m_nFromOctave);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/>Calc_ToFrequency();</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/>Calc_ToOctave();<sp/></highlight><highlight class="comment">//<sp/>Call<sp/>after<sp/>Calc_ToFrequency().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/>m_bLoopDetect<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Update_Spin_ToOctave();</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Update_Text_FromFrequency();</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Update_Text_ToFrequency();</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/>m_bLoopDetect<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="505"><highlight class="normal">}</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectChangePitch::OnChoice_ToPitch(wxCommandEvent<sp/>&amp;<sp/>WXUNUSED(evt))</highlight></codeline>
<codeline lineno="508"><highlight class="normal">{</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_bLoopDetect)</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/>m_nToPitch<sp/>=<sp/>m_pChoice_ToPitch-&gt;GetSelection();</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/>Calc_SemitonesChange_fromPitches();</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/>Calc_PercentChange();<sp/></highlight><highlight class="comment">//<sp/>Call<sp/>*after*<sp/>m_dSemitonesChange<sp/>is<sp/>updated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/>Calc_ToFrequency();<sp/></highlight><highlight class="comment">//<sp/>Call<sp/>*after*<sp/>m_dPercentChange<sp/>is<sp/>updated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/>m_bLoopDetect<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Update_Text_SemitonesChange();</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Update_Text_ToFrequency();</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Update_Text_PercentChange();</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Update_Slider_PercentChange();</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/>m_bLoopDetect<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="526"><highlight class="normal">}</highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectChangePitch::OnSpin_ToOctave(wxCommandEvent<sp/>&amp;<sp/>WXUNUSED(evt))</highlight></codeline>
<codeline lineno="529"><highlight class="normal">{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_bLoopDetect)</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nNewValue<sp/>=<sp/>m_pSpin_ToOctave-&gt;GetValue();</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Validation:<sp/>Rather<sp/>than<sp/>set<sp/>a<sp/>range<sp/>for<sp/>octave<sp/>numbers,<sp/>enforce<sp/>a<sp/>range<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>keeps<sp/>m_dPercentChange<sp/>above<sp/>-99%,<sp/>per<sp/>Soundtouch<sp/>constraints.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((nNewValue<sp/>+<sp/>3)<sp/>&lt;<sp/>m_nFromOctave)</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::wxBell();</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_pSpin_ToOctave-&gt;SetValue(m_nFromOctave<sp/>-<sp/>3);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/>m_nToOctave<sp/>=<sp/>nNewValue;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/>m_ToFrequency<sp/>=<sp/><ref refid="_pitch_name_8cpp_1a5d818dfb19f740dfeeeced73893a8833" kindref="member">PitchToFreq</ref>(m_nToPitch,<sp/>m_nToOctave);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/>Calc_SemitonesChange_fromPitches();</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/>Calc_PercentChange();<sp/></highlight><highlight class="comment">//<sp/>Call<sp/>*after*<sp/>m_dSemitonesChange<sp/>is<sp/>updated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/>m_bLoopDetect<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Update_Text_SemitonesChange();</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Update_Text_ToFrequency();</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Update_Text_PercentChange();</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Update_Slider_PercentChange();</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/>m_bLoopDetect<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="557"><highlight class="normal">}</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectChangePitch::OnText_SemitonesChange(wxCommandEvent<sp/>&amp;<sp/>WXUNUSED(evt))</highlight></codeline>
<codeline lineno="560"><highlight class="normal">{</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_bLoopDetect)</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_pTextCtrl_SemitonesChange-&gt;GetValidator()-&gt;TransferFromWindow())</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EnableApply(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/>Calc_PercentChange();</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/>Calc_ToFrequency();<sp/></highlight><highlight class="comment">//<sp/>Call<sp/>*after*<sp/>m_dPercentChange<sp/>is<sp/>updated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/>Calc_ToPitch();</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/>Calc_ToOctave();<sp/></highlight><highlight class="comment">//<sp/>Call<sp/>after<sp/>Calc_ToFrequency().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/>m_bLoopDetect<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Update_Choice_ToPitch();</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Update_Spin_ToOctave();</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Update_Text_ToFrequency();</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Update_Text_PercentChange();</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Update_Slider_PercentChange();</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/>m_bLoopDetect<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>m_dSemitonesChange<sp/>is<sp/>a<sp/>big<sp/>enough<sp/>negative,<sp/>we<sp/>can<sp/>go<sp/>to<sp/>or<sp/>below<sp/>0<sp/>freq.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>m_dSemitonesChange<sp/>is<sp/>a<sp/>big<sp/>enough<sp/>positive,<sp/>we<sp/>can<sp/>go<sp/>to<sp/>1.#INF<sp/>(Windows)<sp/>or<sp/>inf<sp/>(Linux).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>But<sp/>practically,<sp/>these<sp/>are<sp/>best<sp/>limits<sp/>for<sp/>Soundtouch.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bIsGoodValue<sp/>=<sp/>(m_dSemitonesChange<sp/>&gt;<sp/>-80.0)<sp/>&amp;&amp;<sp/>(m_dSemitonesChange<sp/>&lt;=<sp/>60.0);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/>EnableApply(bIsGoodValue);</highlight></codeline>
<codeline lineno="590"><highlight class="normal">}</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectChangePitch::OnText_FromFrequency(wxCommandEvent<sp/>&amp;<sp/>WXUNUSED(evt))</highlight></codeline>
<codeline lineno="593"><highlight class="normal">{</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_bLoopDetect)</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Empty<sp/>string<sp/>causes<sp/>unpredictable<sp/>results<sp/>with<sp/>ToDouble()<sp/>and<sp/>later<sp/>calculations.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Non-positive<sp/>frequency<sp/>makes<sp/>no<sp/>sense,<sp/>but<sp/>user<sp/>might<sp/>still<sp/>be<sp/>editing,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>it&apos;s<sp/>not<sp/>an<sp/>error,<sp/>but<sp/>we<sp/>do<sp/>not<sp/>want<sp/>to<sp/>update<sp/>the<sp/>values/controls.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_pTextCtrl_FromFrequency-&gt;GetValidator()-&gt;TransferFromWindow())</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EnableApply(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>newFromMIDInote<sp/>=<sp/><ref refid="_pitch_name_8cpp_1aa4b14091f3b1664f93c2ce0fa5972741" kindref="member">FreqToMIDInote</ref>(m_FromFrequency);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/>m_nFromPitch<sp/>=<sp/><ref refid="_pitch_name_8cpp_1a1f22ddf853e23b6cd770b6a01e81e94c" kindref="member">PitchIndex</ref>(newFromMIDInote);</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/>m_nFromOctave<sp/>=<sp/><ref refid="_pitch_name_8cpp_1a8dcbf998ef07f03d2a6d2cb7d6694239" kindref="member">PitchOctave</ref>(newFromMIDInote);</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/>Calc_ToPitch();</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/>Calc_ToFrequency();</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/>Calc_ToOctave();<sp/></highlight><highlight class="comment">//<sp/>Call<sp/>after<sp/>Calc_ToFrequency().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/>m_bLoopDetect<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Update_Choice_FromPitch();</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Update_Spin_FromOctave();</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Update_Choice_ToPitch();</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Update_Spin_ToOctave();</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Update_Text_ToFrequency();</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/>m_bLoopDetect<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Success.<sp/>Make<sp/>sure<sp/>OK<sp/>and<sp/>Preview<sp/>are<sp/>enabled,<sp/>in<sp/>case<sp/>we<sp/>disabled<sp/>above<sp/>during<sp/>editing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/>EnableApply(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="625"><highlight class="normal">}</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectChangePitch::OnText_ToFrequency(wxCommandEvent<sp/>&amp;<sp/>WXUNUSED(evt))</highlight></codeline>
<codeline lineno="628"><highlight class="normal">{</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_bLoopDetect)</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Empty<sp/>string<sp/>causes<sp/>unpredictable<sp/>results<sp/>with<sp/>ToDouble()<sp/>and<sp/>later<sp/>calculations.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Non-positive<sp/>frequency<sp/>makes<sp/>no<sp/>sense,<sp/>but<sp/>user<sp/>might<sp/>still<sp/>be<sp/>editing,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>it&apos;s<sp/>not<sp/>an<sp/>error,<sp/>but<sp/>we<sp/>do<sp/>not<sp/>want<sp/>to<sp/>update<sp/>the<sp/>values/controls.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_pTextCtrl_ToFrequency-&gt;GetValidator()-&gt;TransferFromWindow())</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EnableApply(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/>m_dPercentChange<sp/>=<sp/>((m_ToFrequency<sp/>*<sp/>100.0)<sp/>/<sp/>m_FromFrequency)<sp/>-<sp/>100.0;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/>Calc_ToOctave();<sp/></highlight><highlight class="comment">//<sp/>Call<sp/>after<sp/>Calc_ToFrequency().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/>Calc_SemitonesChange_fromPercentChange();</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/>Calc_ToPitch();<sp/></highlight><highlight class="comment">//<sp/>Call<sp/>*after*<sp/>m_dSemitonesChange<sp/>is<sp/>updated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/>m_bLoopDetect<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Update_Choice_ToPitch();</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Update_Spin_ToOctave();</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Update_Text_SemitonesChange();</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Update_Text_PercentChange();</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Update_Slider_PercentChange();</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/>m_bLoopDetect<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Success.<sp/>Make<sp/>sure<sp/>OK<sp/>and<sp/>Preview<sp/>are<sp/>disabled<sp/>if<sp/>percent<sp/>change<sp/>is<sp/>out<sp/>of<sp/>bounds.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Can<sp/>happen<sp/>while<sp/>editing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>value<sp/>is<sp/>good,<sp/>might<sp/>also<sp/>need<sp/>to<sp/>re-enable<sp/>because<sp/>of<sp/>above<sp/>clause.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bIsGoodValue<sp/>=<sp/>(m_dPercentChange<sp/>&gt;<sp/>MIN_Percentage)<sp/>&amp;&amp;<sp/>(m_dPercentChange<sp/>&lt;=<sp/>MAX_Percentage);</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/>EnableApply(bIsGoodValue);</highlight></codeline>
<codeline lineno="662"><highlight class="normal">}</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectChangePitch::OnText_PercentChange(wxCommandEvent<sp/>&amp;<sp/>WXUNUSED(evt))</highlight></codeline>
<codeline lineno="665"><highlight class="normal">{</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_bLoopDetect)</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!m_pTextCtrl_PercentChange-&gt;GetValidator()-&gt;TransferFromWindow())</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>EnableApply(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/>Calc_SemitonesChange_fromPercentChange();</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/>Calc_ToPitch();<sp/></highlight><highlight class="comment">//<sp/>Call<sp/>*after*<sp/>m_dSemitonesChange<sp/>is<sp/>updated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/>Calc_ToFrequency();</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/>Calc_ToOctave();<sp/></highlight><highlight class="comment">//<sp/>Call<sp/>after<sp/>Calc_ToFrequency().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/>m_bLoopDetect<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Update_Choice_ToPitch();</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Update_Spin_ToOctave();</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Update_Text_SemitonesChange();</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Update_Text_ToFrequency();</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Update_Slider_PercentChange();</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/>m_bLoopDetect<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Success.<sp/>Make<sp/>sure<sp/>OK<sp/>and<sp/>Preview<sp/>are<sp/>enabled,<sp/>in<sp/>case<sp/>we<sp/>disabled<sp/>above<sp/>during<sp/>editing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/>EnableApply(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="692"><highlight class="normal">}</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectChangePitch::OnSlider_PercentChange(wxCommandEvent<sp/>&amp;<sp/>WXUNUSED(evt))</highlight></codeline>
<codeline lineno="695"><highlight class="normal">{</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_bLoopDetect)</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/>m_dPercentChange<sp/>=<sp/>(double)(m_pSlider_PercentChange-&gt;GetValue());</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Warp<sp/>positive<sp/>values<sp/>to<sp/>actually<sp/>go<sp/>up<sp/>faster<sp/>&amp;<sp/>further<sp/>than<sp/>negatives.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_dPercentChange<sp/>&gt;<sp/>0.0)</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m_dPercentChange<sp/>=<sp/>pow(m_dPercentChange,<sp/>kSliderWarp);</highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/>Calc_SemitonesChange_fromPercentChange();</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/>Calc_ToPitch();<sp/></highlight><highlight class="comment">//<sp/>Call<sp/>*after*<sp/>m_dSemitonesChange<sp/>is<sp/>updated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/>Calc_ToFrequency();</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/>Calc_ToOctave();<sp/></highlight><highlight class="comment">//<sp/>Call<sp/>after<sp/>Calc_ToFrequency().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/>m_bLoopDetect<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Update_Choice_ToPitch();</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Update_Spin_ToOctave();</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Update_Text_SemitonesChange();</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Update_Text_ToFrequency();</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Update_Text_PercentChange();</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/>m_bLoopDetect<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="718"><highlight class="normal">}</highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight><highlight class="comment">//<sp/>helper<sp/>fns<sp/>for<sp/>controls</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectChangePitch::Update_Choice_FromPitch()</highlight></codeline>
<codeline lineno="723"><highlight class="normal">{</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/>m_pChoice_FromPitch-&gt;SetSelection(m_nFromPitch);</highlight></codeline>
<codeline lineno="725"><highlight class="normal">}</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectChangePitch::Update_Spin_FromOctave()</highlight></codeline>
<codeline lineno="728"><highlight class="normal">{</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/>m_pSpin_FromOctave-&gt;SetValue(m_nFromOctave);</highlight></codeline>
<codeline lineno="730"><highlight class="normal">}</highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectChangePitch::Update_Choice_ToPitch()</highlight></codeline>
<codeline lineno="733"><highlight class="normal">{</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/>m_pChoice_ToPitch-&gt;SetSelection(m_nToPitch);</highlight></codeline>
<codeline lineno="735"><highlight class="normal">}</highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectChangePitch::Update_Spin_ToOctave()</highlight></codeline>
<codeline lineno="738"><highlight class="normal">{</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/>m_pSpin_ToOctave-&gt;SetValue(m_nToOctave);</highlight></codeline>
<codeline lineno="740"><highlight class="normal">}</highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectChangePitch::Update_Text_SemitonesChange()</highlight></codeline>
<codeline lineno="743"><highlight class="normal">{</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/>m_pTextCtrl_SemitonesChange-&gt;GetValidator()-&gt;TransferToWindow();</highlight></codeline>
<codeline lineno="745"><highlight class="normal">}</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectChangePitch::Update_Text_FromFrequency()</highlight></codeline>
<codeline lineno="748"><highlight class="normal">{</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/>m_pTextCtrl_FromFrequency-&gt;GetValidator()-&gt;TransferToWindow();</highlight></codeline>
<codeline lineno="750"><highlight class="normal">}</highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectChangePitch::Update_Text_ToFrequency()</highlight></codeline>
<codeline lineno="753"><highlight class="normal">{</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/>m_pTextCtrl_ToFrequency-&gt;GetValidator()-&gt;TransferToWindow();</highlight></codeline>
<codeline lineno="755"><highlight class="normal">}</highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectChangePitch::Update_Text_PercentChange()</highlight></codeline>
<codeline lineno="758"><highlight class="normal">{</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/>m_pTextCtrl_PercentChange-&gt;GetValidator()-&gt;TransferToWindow();</highlight></codeline>
<codeline lineno="760"><highlight class="normal">}</highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EffectChangePitch::Update_Slider_PercentChange()</highlight></codeline>
<codeline lineno="763"><highlight class="normal">{</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>unwarped<sp/>=<sp/>m_dPercentChange;</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unwarped<sp/>&gt;<sp/>0.0)</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Un-warp<sp/>values<sp/>above<sp/>zero<sp/>to<sp/>actually<sp/>go<sp/>up<sp/>to<sp/>kSliderMax.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>unwarped<sp/>=<sp/>pow(m_dPercentChange,<sp/>(1.0<sp/>/<sp/>kSliderWarp));</highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>0.5<sp/>to<sp/>unwarped<sp/>so<sp/>trunc<sp/>-&gt;<sp/>round.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/>m_pSlider_PercentChange-&gt;SetValue((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(unwarped<sp/>+<sp/>0.5));</highlight></codeline>
<codeline lineno="771"><highlight class="normal">}</highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>USE_SOUNDTOUCH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/ChangePitch.cpp"/>
  </compounddef>
</doxygen>
