<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classpyportmidi_1_1midi_1_1_input" kind="class" language="Python" prot="public">
    <compoundname>pyportmidi::midi::Input</compoundname>
    <basecompoundref prot="public" virt="non-virtual">object</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classpyportmidi_1_1midi_1_1_input_1a29de5eae33672eb08a6786d76a6c27d5" prot="private" static="no" mutable="no">
        <type></type>
        <definition>pyportmidi.midi.Input::_input</definition>
        <argsstring></argsstring>
        <name>_input</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_python/pyportmidi/midi.py" line="236" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_python/pyportmidi/midi.py" bodystart="236" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classpyportmidi_1_1midi_1_1_input_1a4222850ca83a04bc75ac5549caa5644c" prot="public" static="no" mutable="no">
        <type></type>
        <definition>pyportmidi.midi.Input::device_id</definition>
        <argsstring></argsstring>
        <name>device_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_python/pyportmidi/midi.py" line="239" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_python/pyportmidi/midi.py" bodystart="239" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classpyportmidi_1_1midi_1_1_input_1a1e5682d3a18d1bbe578dad6b3e045296" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def pyportmidi.midi.Input.__init__</definition>
        <argsstring>(self, device_id, buffer_size=4096)</argsstring>
        <name>__init__</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type><ref refid="classpyportmidi_1_1midi_1_1_input_1a4222850ca83a04bc75ac5549caa5644c" kindref="member">device_id</ref></type>
          <defname>device_id</defname>
        </param>
        <param>
          <type>buffer_size</type>
          <defname>buffer_size</defname>
          <defval>4096</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>The buffer_size specifies the number of input events to be buffered 
waiting to be read using Input.read().
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_python/pyportmidi/midi.py" line="213" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_python/pyportmidi/midi.py" bodystart="213" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="classpyportmidi_1_1midi_1_1_input_1aff3fbfe86e2e82ba102734bec02c2fa3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def pyportmidi.midi.Input.close</definition>
        <argsstring>(self)</argsstring>
        <name>close</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>closes a midi stream, flushing any pending buffers.
Input.close(): return None

PortMidi attempts to close open streams when the application
exits -- this is particularly difficult under Windows.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_python/pyportmidi/midi.py" line="257" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_python/pyportmidi/midi.py" bodystart="257" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="classpyportmidi_1_1midi_1_1_input_1aa7a889e8dbc30eb8e0494d6fc58ab2f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def pyportmidi.midi.Input.read</definition>
        <argsstring>(self, num_events)</argsstring>
        <name>read</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>num_events</type>
          <defname>num_events</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>reads num_events midi events from the buffer.
Input.read(num_events): return midi_event_list

Reads from the Input buffer and gives back midi events.
[[[status,data1,data2,data3],timestamp],
 [[status,data1,data2,data3],timestamp],...]
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_python/pyportmidi/midi.py" line="271" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_python/pyportmidi/midi.py" bodystart="271" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="classpyportmidi_1_1midi_1_1_input_1ae2c00007ab7f18aae52f4250049e2aec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def pyportmidi.midi.Input.poll</definition>
        <argsstring>(self)</argsstring>
        <name>poll</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>returns true if there&apos;s data, or false if not.
Input.poll(): return Bool

raises a MidiException on error.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_python/pyportmidi/midi.py" line="284" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_python/pyportmidi/midi.py" bodystart="284" bodyend="304"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classpyportmidi_1_1midi_1_1_input_1a64fde8348df3a97efa5cc1c8999308c8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def pyportmidi.midi.Input._check_open</definition>
        <argsstring>(self)</argsstring>
        <name>_check_open</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_python/pyportmidi/midi.py" line="251" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_python/pyportmidi/midi.py" bodystart="251" bodyend="256"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><verbatim>Input is used to get midi input from midi devices.
Input(device_id)
Input(device_id, buffer_size)

buffer_size -the number of input events to be buffered waiting to 
  be read using Input.read() 
</verbatim> </para>    </detaileddescription>
    <inheritancegraph>
      <node id="5659">
        <label>object</label>
      </node>
      <node id="5658">
        <label>pyportmidi.midi.Input</label>
        <link refid="classpyportmidi_1_1midi_1_1_input"/>
        <childnode refid="5659" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="5661">
        <label>object</label>
      </node>
      <node id="5660">
        <label>pyportmidi.midi.Input</label>
        <link refid="classpyportmidi_1_1midi_1_1_input"/>
        <childnode refid="5661" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_python/pyportmidi/midi.py" line="204" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_python/pyportmidi/midi.py" bodystart="204" bodyend="305"/>
    <listofallmembers>
      <member refid="classpyportmidi_1_1midi_1_1_input_1a1e5682d3a18d1bbe578dad6b3e045296" prot="public" virt="non-virtual"><scope>pyportmidi::midi::Input</scope><name>__init__</name></member>
      <member refid="classpyportmidi_1_1midi_1_1_input_1a64fde8348df3a97efa5cc1c8999308c8" prot="private" virt="non-virtual"><scope>pyportmidi::midi::Input</scope><name>_check_open</name></member>
      <member refid="classpyportmidi_1_1midi_1_1_input_1a29de5eae33672eb08a6786d76a6c27d5" prot="private" virt="non-virtual"><scope>pyportmidi::midi::Input</scope><name>_input</name></member>
      <member refid="classpyportmidi_1_1midi_1_1_input_1aff3fbfe86e2e82ba102734bec02c2fa3" prot="public" virt="non-virtual"><scope>pyportmidi::midi::Input</scope><name>close</name></member>
      <member refid="classpyportmidi_1_1midi_1_1_input_1a4222850ca83a04bc75ac5549caa5644c" prot="public" virt="non-virtual"><scope>pyportmidi::midi::Input</scope><name>device_id</name></member>
      <member refid="classpyportmidi_1_1midi_1_1_input_1ae2c00007ab7f18aae52f4250049e2aec" prot="public" virt="non-virtual"><scope>pyportmidi::midi::Input</scope><name>poll</name></member>
      <member refid="classpyportmidi_1_1midi_1_1_input_1aa7a889e8dbc30eb8e0494d6fc58ab2f0" prot="public" virt="non-virtual"><scope>pyportmidi::midi::Input</scope><name>read</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
