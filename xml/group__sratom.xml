<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="group__sratom" kind="group">
    <compoundname>sratom</compoundname>
    <title>Sratom</title>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__sratom_1gaf476c91b166a55d78e4aa7fc2213182f" prot="public" static="no">
        <name>SratomObjectMode</name>
        <enumvalue id="group__sratom_1ggaf476c91b166a55d78e4aa7fc2213182fa7f47b603d2cd7da31469a0dce3828739" prot="public">
          <name>SRATOM_OBJECT_MODE_BLANK</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Read blank nodes as Objects, and named resources as <ref refid="struct_u_r_is" kindref="compound">URIs</ref>. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__sratom_1ggaf476c91b166a55d78e4aa7fc2213182fa50e9f133f13abf4063480d1f546b854c" prot="public">
          <name>SRATOM_OBJECT_MODE_BLANK_SUBJECT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Read blank nodes and the main subject as Objects, and any other named resources as <ref refid="struct_u_r_is" kindref="compound">URIs</ref>. The &quot;main subject&quot; is the subject parameter passed to <ref refid="group__sratom_1gafe78e0e2f6ce3c69b90ae4af7d153f68" kindref="member">sratom_read()</ref>; if this is a resource it will be read as an Object, but all other named resources encountered will be read as <ref refid="struct_u_r_is" kindref="compound">URIs</ref>. </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Mode for reading resources to LV2 Objects.</para><para>This affects how resources (which are either blank nodes or have <ref refid="struct_u_r_is" kindref="compound">URIs</ref>) are read by <ref refid="group__sratom_1gafe78e0e2f6ce3c69b90ae4af7d153f68" kindref="member">sratom_read()</ref>, since they may be read as simple references (a URI or blank node ID) or a complete description (an atom &quot;Object&quot;).</para><para>Currently, blank nodes are always read as Objects, but support for reading blank node IDs may be added in the future. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/sratom/sratom.h" line="74" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/sratom/sratom.h" bodystart="74" bodyend="87"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__sratom_1gaff6a49d547dbfe9f8d910f9b1ae98494" prot="public" static="no">
        <type>struct <ref refid="struct_sratom_impl" kindref="compound">SratomImpl</ref></type>
        <definition>typedef struct SratomImpl Sratom</definition>
        <argsstring></argsstring>
        <name>Sratom</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Atom serialiser. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/sratom/sratom.h" line="137" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/sratom/sratom.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__sratom_1ga6ca41eacfb303961a39e4b8c18f728df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sratom_8h_1a985b35a1a85570afea3bd031d6c8e72d" kindref="member">SRATOM_API</ref> <ref refid="group__sratom_1gaff6a49d547dbfe9f8d910f9b1ae98494" kindref="member">Sratom</ref> *</type>
        <definition>SRATOM_API Sratom* sratom_new</definition>
        <argsstring>(LV2_URID_Map *map)</argsstring>
        <name>sratom_new</name>
        <param>
          <type><ref refid="urid_8h_1afefb42cd271f750506a8739f73c098c5" kindref="member">LV2_URID_Map</ref> *</type>
          <declname>map</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create a new Atom serialiser. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/sratom/sratom.h" line="94" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/src/sratom.c" bodystart="75" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="group__sratom_1ga4d805918e1d89ce8cc30005c3d6a08e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sratom_8h_1a985b35a1a85570afea3bd031d6c8e72d" kindref="member">SRATOM_API</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>SRATOM_API void sratom_free</definition>
        <argsstring>(Sratom *sratom)</argsstring>
        <name>sratom_free</name>
        <param>
          <type><ref refid="group__sratom_1gaff6a49d547dbfe9f8d910f9b1ae98494" kindref="member">Sratom</ref> *</type>
          <declname>sratom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Free an Atom serialisation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/sratom/sratom.h" line="101" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/src/sratom.c" bodystart="92" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="group__sratom_1ga657cee72c5d1916da976c108bef687c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sratom_8h_1a985b35a1a85570afea3bd031d6c8e72d" kindref="member">SRATOM_API</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>SRATOM_API void sratom_set_sink</definition>
        <argsstring>(Sratom *sratom, const char *base_uri, SerdStatementSink sink, SerdEndSink end_sink, void *handle)</argsstring>
        <name>sratom_set_sink</name>
        <param>
          <type><ref refid="group__sratom_1gaff6a49d547dbfe9f8d910f9b1ae98494" kindref="member">Sratom</ref> *</type>
          <declname>sratom</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>base_uri</declname>
        </param>
        <param>
          <type><ref refid="group__serd_1ga9cd6dc709f738ed9770d0d2cd1195bd4" kindref="member">SerdStatementSink</ref></type>
          <declname>sink</declname>
        </param>
        <param>
          <type><ref refid="group__serd_1gae67888543462e4127e6a4f6af047026b" kindref="member">SerdEndSink</ref></type>
          <declname>end_sink</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the sink(s) where sratom will write its output.</para><para>This must be called before calling <ref refid="group__sratom_1ga2c8efd0cc16686de0cabc19ca3f0effc" kindref="member">sratom_write()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/sratom/sratom.h" line="110" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/src/sratom.c" bodystart="100" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="group__sratom_1ga0d93ebb102d9d1e033ed826c5119d2ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sratom_8h_1a985b35a1a85570afea3bd031d6c8e72d" kindref="member">SRATOM_API</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>SRATOM_API void sratom_set_pretty_numbers</definition>
        <argsstring>(Sratom *sratom, bool pretty_numbers)</argsstring>
        <name>sratom_set_pretty_numbers</name>
        <param>
          <type><ref refid="group__sratom_1gaff6a49d547dbfe9f8d910f9b1ae98494" kindref="member">Sratom</ref> *</type>
          <declname>sratom</declname>
        </param>
        <param>
          <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
          <declname>pretty_numbers</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write pretty numeric literals.</para><para>If <computeroutput>pretty_numbers</computeroutput> is true, numbers will be written as pretty Turtle literals, rather than string literals with precise types. The cost of this is that the types might get fudged on a round-trip to RDF and back. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/sratom/sratom.h" line="125" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/src/sratom.c" bodystart="118" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="group__sratom_1gad4f459e8c541f9bf303e105aea323198" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sratom_8h_1a985b35a1a85570afea3bd031d6c8e72d" kindref="member">SRATOM_API</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>SRATOM_API void sratom_set_object_mode</definition>
        <argsstring>(Sratom *sratom, SratomObjectMode object_mode)</argsstring>
        <name>sratom_set_object_mode</name>
        <param>
          <type><ref refid="group__sratom_1gaff6a49d547dbfe9f8d910f9b1ae98494" kindref="member">Sratom</ref> *</type>
          <declname>sratom</declname>
        </param>
        <param>
          <type><ref refid="group__sratom_1gaf476c91b166a55d78e4aa7fc2213182f" kindref="member">SratomObjectMode</ref></type>
          <declname>object_mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Configure how resources will be read to form LV2 Objects. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/sratom/sratom.h" line="133" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/src/sratom.c" bodystart="126" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="group__sratom_1ga2c8efd0cc16686de0cabc19ca3f0effc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sratom_8h_1a985b35a1a85570afea3bd031d6c8e72d" kindref="member">SRATOM_API</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>SRATOM_API int sratom_write</definition>
        <argsstring>(Sratom *sratom, LV2_URID_Unmap *unmap, uint32_t flags, const SerdNode *subject, const SerdNode *predicate, uint32_t type, uint32_t size, const void *body)</argsstring>
        <name>sratom_write</name>
        <param>
          <type><ref refid="group__sratom_1gaff6a49d547dbfe9f8d910f9b1ae98494" kindref="member">Sratom</ref> *</type>
          <declname>sratom</declname>
        </param>
        <param>
          <type><ref refid="urid_8h_1a23cd7da781ba055d6a1362a320c1d451" kindref="member">LV2_URID_Unmap</ref> *</type>
          <declname>unmap</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref></type>
          <declname>flags</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref> *</type>
          <declname>subject</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref> *</type>
          <declname>predicate</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>body</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write an Atom to RDF. The serialised atom is written to the sink set by <ref refid="group__sratom_1ga657cee72c5d1916da976c108bef687c7" kindref="member">sratom_set_sink()</ref>. <simplesect kind="return"><para>0 on success, or a non-zero error code otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/sratom/sratom.h" line="143" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/src/sratom.c" bodystart="213" bodyend="444"/>
      </memberdef>
      <memberdef kind="function" id="group__sratom_1gafe78e0e2f6ce3c69b90ae4af7d153f68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sratom_8h_1a985b35a1a85570afea3bd031d6c8e72d" kindref="member">SRATOM_API</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>SRATOM_API void sratom_read</definition>
        <argsstring>(Sratom *sratom, LV2_Atom_Forge *forge, SordWorld *world, SordModel *model, const SordNode *subject)</argsstring>
        <name>sratom_read</name>
        <param>
          <type><ref refid="group__sratom_1gaff6a49d547dbfe9f8d910f9b1ae98494" kindref="member">Sratom</ref> *</type>
          <declname>sratom</declname>
        </param>
        <param>
          <type><ref refid="struct_l_v2___atom___forge" kindref="compound">LV2_Atom_Forge</ref> *</type>
          <declname>forge</declname>
        </param>
        <param>
          <type><ref refid="group__sord_1ga133d918ec58f829198b2cf65f250ed69" kindref="member">SordWorld</ref> *</type>
          <declname>world</declname>
        </param>
        <param>
          <type><ref refid="group__sord_1gaea018cfebfedd10280b1d8dd6d650a28" kindref="member">SordModel</ref> *</type>
          <declname>model</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="group__sord_1ga804ac7d56d9fdea50f2d1e7278b1f82b" kindref="member">SordNode</ref> *</type>
          <declname>subject</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Read an Atom from RDF. The resulting atom will be written to <computeroutput>forge</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/sratom/sratom.h" line="158" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/src/sratom.c" bodystart="705" bodyend="730"/>
      </memberdef>
      <memberdef kind="function" id="group__sratom_1ga65fa0a468f17b55de2169012fef8d7f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sratom_8h_1a985b35a1a85570afea3bd031d6c8e72d" kindref="member">SRATOM_API</ref> char *</type>
        <definition>SRATOM_API char* sratom_to_turtle</definition>
        <argsstring>(Sratom *sratom, LV2_URID_Unmap *unmap, const char *base_uri, const SerdNode *subject, const SerdNode *predicate, uint32_t type, uint32_t size, const void *body)</argsstring>
        <name>sratom_to_turtle</name>
        <param>
          <type><ref refid="group__sratom_1gaff6a49d547dbfe9f8d910f9b1ae98494" kindref="member">Sratom</ref> *</type>
          <declname>sratom</declname>
        </param>
        <param>
          <type><ref refid="urid_8h_1a23cd7da781ba055d6a1362a320c1d451" kindref="member">LV2_URID_Unmap</ref> *</type>
          <declname>unmap</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>base_uri</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref> *</type>
          <declname>subject</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref> *</type>
          <declname>predicate</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>body</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Serialise an Atom to a Turtle string. The returned string must be free()&apos;d by the caller. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/sratom/sratom.h" line="170" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/src/sratom.c" bodystart="448" bodyend="493"/>
      </memberdef>
      <memberdef kind="function" id="group__sratom_1gabb8be4254715e569531159e21cf27c17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sratom_8h_1a985b35a1a85570afea3bd031d6c8e72d" kindref="member">SRATOM_API</ref> <ref refid="struct_l_v2___atom" kindref="compound">LV2_Atom</ref> *</type>
        <definition>SRATOM_API LV2_Atom* sratom_from_turtle</definition>
        <argsstring>(Sratom *sratom, const char *base_uri, const SerdNode *subject, const SerdNode *predicate, const char *str)</argsstring>
        <name>sratom_from_turtle</name>
        <param>
          <type><ref refid="group__sratom_1gaff6a49d547dbfe9f8d910f9b1ae98494" kindref="member">Sratom</ref> *</type>
          <declname>sratom</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>base_uri</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref> *</type>
          <declname>subject</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref> *</type>
          <declname>predicate</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Read an Atom from a Turtle string. The returned atom must be free()&apos;d by the caller. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/sratom/sratom.h" line="185" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/src/sratom.c" bodystart="754" bodyend="794"/>
      </memberdef>
      <memberdef kind="function" id="group__sratom_1ga81b7aa6812793fd2f905432ac90eb27b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sratom_8h_1a985b35a1a85570afea3bd031d6c8e72d" kindref="member">SRATOM_API</ref> <ref refid="forge_8h_1a272218ba2d84c66ec458cf7069933ea9" kindref="member">LV2_Atom_Forge_Ref</ref></type>
        <definition>SRATOM_API LV2_Atom_Forge_Ref sratom_forge_sink</definition>
        <argsstring>(LV2_Atom_Forge_Sink_Handle handle, const void *buf, uint32_t size)</argsstring>
        <name>sratom_forge_sink</name>
        <param>
          <type><ref refid="forge_8h_1a19874fcf063508aa5069ee22fd494676" kindref="member">LV2_Atom_Forge_Sink_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A convenient resizing sink for <ref refid="struct_l_v2___atom___forge" kindref="compound">LV2_Atom_Forge</ref>. The handle must point to an initialized <ref refid="struct_serd_chunk" kindref="compound">SerdChunk</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/sratom/sratom.h" line="197" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/src/sratom.c" bodystart="734" bodyend="742"/>
      </memberdef>
      <memberdef kind="function" id="group__sratom_1gaf2e397c53d1ca4eed848986d733d300b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sratom_8h_1a985b35a1a85570afea3bd031d6c8e72d" kindref="member">SRATOM_API</ref> <ref refid="struct_l_v2___atom" kindref="compound">LV2_Atom</ref> *</type>
        <definition>SRATOM_API LV2_Atom* sratom_forge_deref</definition>
        <argsstring>(LV2_Atom_Forge_Sink_Handle handle, LV2_Atom_Forge_Ref ref)</argsstring>
        <name>sratom_forge_deref</name>
        <param>
          <type><ref refid="forge_8h_1a19874fcf063508aa5069ee22fd494676" kindref="member">LV2_Atom_Forge_Sink_Handle</ref></type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="forge_8h_1a272218ba2d84c66ec458cf7069933ea9" kindref="member">LV2_Atom_Forge_Ref</ref></type>
          <declname>ref</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The corresponding deref function for sratom_forge_sink. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/sratom/sratom.h" line="206" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/sratom/src/sratom.c" bodystart="746" bodyend="750"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>An LV2 Atom RDF serialisation library. </para>    </detaileddescription>
  </compounddef>
</doxygen>
