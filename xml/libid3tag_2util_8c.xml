<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="libid3tag_2util_8c" kind="file" language="C++">
    <compoundname>util.c</compoundname>
    <includes refid="libid3tag_2global_8h" local="yes">global.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">zlib.h</includes>
    <includes refid="id3tag_8h" local="yes">id3tag.h</includes>
    <includes refid="libid3tag_2util_8h" local="yes">util.h</includes>
    <incdepgraph>
      <node id="10512">
        <label>global.h</label>
        <link refid="libid3tag_2global_8h"/>
      </node>
      <node id="10513">
        <label>stdlib.h</label>
      </node>
      <node id="10511">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libid3tag/util.c</label>
        <link refid="libid3tag/util.c"/>
        <childnode refid="10512" relation="include">
        </childnode>
        <childnode refid="10513" relation="include">
        </childnode>
        <childnode refid="10514" relation="include">
        </childnode>
        <childnode refid="10515" relation="include">
        </childnode>
        <childnode refid="10516" relation="include">
        </childnode>
      </node>
      <node id="10516">
        <label>util.h</label>
        <link refid="libid3tag_2util_8h"/>
        <childnode refid="10515" relation="include">
        </childnode>
      </node>
      <node id="10514">
        <label>zlib.h</label>
      </node>
      <node id="10515">
        <label>id3tag.h</label>
        <link refid="id3tag_8h"/>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="libid3tag_2util_8c_1abcb26596f202998a4abd891fc658bfe1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="id3tag_8h_1a26fddaa5bcd55c38142a1fbed8d2835d" kindref="member">id3_length_t</ref></type>
        <definition>id3_length_t id3_util_unsynchronise</definition>
        <argsstring>(id3_byte_t *data, id3_length_t length)</argsstring>
        <name>id3_util_unsynchronise</name>
        <param>
          <type><ref refid="id3tag_8h_1ad73e16dd89b6d075d906ae0649cc7e43" kindref="member">id3_byte_t</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="id3tag_8h_1a26fddaa5bcd55c38142a1fbed8d2835d" kindref="member">id3_length_t</ref></type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libid3tag/util.c" line="38" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libid3tag/util.c" bodystart="38" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="libid3tag_2util_8c_1a436ccbf5e5bdcb376680f39a40da892e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="id3tag_8h_1a26fddaa5bcd55c38142a1fbed8d2835d" kindref="member">id3_length_t</ref></type>
        <definition>id3_length_t id3_util_deunsynchronise</definition>
        <argsstring>(id3_byte_t *data, id3_length_t length)</argsstring>
        <name>id3_util_deunsynchronise</name>
        <param>
          <type><ref refid="id3tag_8h_1ad73e16dd89b6d075d906ae0649cc7e43" kindref="member">id3_byte_t</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="id3tag_8h_1a26fddaa5bcd55c38142a1fbed8d2835d" kindref="member">id3_length_t</ref></type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libid3tag/util.c" line="73" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libid3tag/util.c" bodystart="73" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="libid3tag_2util_8c_1a853f73b995c276cdf77bf5137485ecb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="id3tag_8h_1ad73e16dd89b6d075d906ae0649cc7e43" kindref="member">id3_byte_t</ref> *</type>
        <definition>id3_byte_t* id3_util_compress</definition>
        <argsstring>(id3_byte_t const *data, id3_length_t length, id3_length_t *newlength)</argsstring>
        <name>id3_util_compress</name>
        <param>
          <type><ref refid="id3tag_8h_1ad73e16dd89b6d075d906ae0649cc7e43" kindref="member">id3_byte_t</ref> <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="id3tag_8h_1a26fddaa5bcd55c38142a1fbed8d2835d" kindref="member">id3_length_t</ref></type>
          <declname>length</declname>
        </param>
        <param>
          <type><ref refid="id3tag_8h_1a26fddaa5bcd55c38142a1fbed8d2835d" kindref="member">id3_length_t</ref> *</type>
          <declname>newlength</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libid3tag/util.c" line="96" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libid3tag/util.c" bodystart="96" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="libid3tag_2util_8c_1aa1f13bedfbc0db56f4c8f1f079fbd406" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="id3tag_8h_1ad73e16dd89b6d075d906ae0649cc7e43" kindref="member">id3_byte_t</ref> *</type>
        <definition>id3_byte_t* id3_util_decompress</definition>
        <argsstring>(id3_byte_t const *data, id3_length_t length, id3_length_t newlength)</argsstring>
        <name>id3_util_decompress</name>
        <param>
          <type><ref refid="id3tag_8h_1ad73e16dd89b6d075d906ae0649cc7e43" kindref="member">id3_byte_t</ref> <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="id3tag_8h_1a26fddaa5bcd55c38142a1fbed8d2835d" kindref="member">id3_length_t</ref></type>
          <declname>length</declname>
        </param>
        <param>
          <type><ref refid="id3tag_8h_1a26fddaa5bcd55c38142a1fbed8d2835d" kindref="member">id3_length_t</ref></type>
          <declname>newlength</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libid3tag/util.c" line="128" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libid3tag/util.c" bodystart="128" bodyend="147"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>libid3tag<sp/>-<sp/>ID3<sp/>tag<sp/>manipulation<sp/>library</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2000-2004<sp/>Underbit<sp/>Technologies,<sp/>Inc.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>along<sp/>with<sp/>this<sp/>program;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>Foundation,<sp/>Inc.,<sp/>59<sp/>Temple<sp/>Place,<sp/>Suite<sp/>330,<sp/>Boston,<sp/>MA<sp/><sp/>02111-1307<sp/><sp/>USA</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>$Id:<sp/>util.c,v<sp/>1.3<sp/>2004-06-08<sp/>06:38:15<sp/>dmazzoni<sp/>Exp<sp/>$</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifdef<sp/>HAVE_CONFIG_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&quot;config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&quot;<ref refid="libid3tag_2global_8h" kindref="compound">global.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;zlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&quot;<ref refid="id3tag_8h" kindref="compound">id3tag.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&quot;<ref refid="libid3tag_2util_8h" kindref="compound">util.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/>NAME:<sp/><sp/><sp/><sp/>util-&gt;unsynchronise()</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/>DESCRIPTION:<sp/>perform<sp/>(in-place)<sp/>unsynchronisation</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="libid3tag_2util_8h_1ab8b1683ed0f63ef95044f78462672c44" refkind="member"><highlight class="normal"><ref refid="id3tag_8h_1a26fddaa5bcd55c38142a1fbed8d2835d" kindref="member">id3_length_t</ref><sp/><ref refid="libid3tag_2util_8c_1abcb26596f202998a4abd891fc658bfe1" kindref="member">id3_util_unsynchronise</ref>(<ref refid="id3tag_8h_1ad73e16dd89b6d075d906ae0649cc7e43" kindref="member">id3_byte_t</ref><sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>,<sp/><ref refid="id3tag_8h_1a26fddaa5bcd55c38142a1fbed8d2835d" kindref="member">id3_length_t</ref><sp/><ref refid="test__lib_f_l_a_c_2format_8c_1ac94dc16b22556ba5fa815655f27442da" kindref="member">length</ref>)</highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><ref refid="id3tag_8h_1a26fddaa5bcd55c38142a1fbed8d2835d" kindref="member">id3_length_t</ref><sp/>bytes<sp/>=<sp/>0,<sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><ref refid="id3tag_8h_1ad73e16dd89b6d075d906ae0649cc7e43" kindref="member">id3_byte_t</ref><sp/>*<ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref><sp/>=<sp/>data<sp/>+<sp/><ref refid="test__lib_f_l_a_c_2format_8c_1ac94dc16b22556ba5fa815655f27442da" kindref="member">length</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><ref refid="id3tag_8h_1ad73e16dd89b6d075d906ae0649cc7e43" kindref="member">id3_byte_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<ref refid="unionid3__field_1a623cefbabc200ba84aa1d662b74e23a5" kindref="member">ptr</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(length<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ptr<sp/>=<sp/>data;<sp/>ptr<sp/>&lt;<sp/>end<sp/>-<sp/>1;<sp/>++<ref refid="unionid3__field_1a623cefbabc200ba84aa1d662b74e23a5" kindref="member">ptr</ref>)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ptr[0]<sp/>==<sp/>0xff<sp/>&amp;&amp;<sp/>(ptr[1]<sp/>==<sp/>0x00<sp/>||<sp/>(ptr[1]<sp/>&amp;<sp/>0xe0)<sp/>==<sp/>0xe0))</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++bytes;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bytes)<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr<sp/><sp/>=<sp/><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>end<sp/>+=<sp/>bytes;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>*--end<sp/>=<sp/>*--<ref refid="unionid3__field_1a623cefbabc200ba84aa1d662b74e23a5" kindref="member">ptr</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref><sp/>=<sp/>bytes;<sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref>;<sp/>*--end<sp/>=<sp/>*--<ref refid="unionid3__field_1a623cefbabc200ba84aa1d662b74e23a5" kindref="member">ptr</ref>)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ptr[-1]<sp/>==<sp/>0xff<sp/>&amp;&amp;<sp/>(ptr[0]<sp/>==<sp/>0x00<sp/>||<sp/>(ptr[0]<sp/>&amp;<sp/>0xe0)<sp/>==<sp/>0xe0))<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>*--end<sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>--<ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>length<sp/>+<sp/>bytes;</highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/>*<sp/>NAME:<sp/><sp/><sp/><sp/>util-&gt;deunsynchronise()</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/>*<sp/>DESCRIPTION:<sp/>undo<sp/>unsynchronisation<sp/>(in-place)</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="libid3tag_2util_8h_1abe82dcc6ca97835a814c909e10761358" refkind="member"><highlight class="normal"><ref refid="id3tag_8h_1a26fddaa5bcd55c38142a1fbed8d2835d" kindref="member">id3_length_t</ref><sp/><ref refid="libid3tag_2util_8c_1a436ccbf5e5bdcb376680f39a40da892e" kindref="member">id3_util_deunsynchronise</ref>(<ref refid="id3tag_8h_1ad73e16dd89b6d075d906ae0649cc7e43" kindref="member">id3_byte_t</ref><sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>,<sp/><ref refid="id3tag_8h_1a26fddaa5bcd55c38142a1fbed8d2835d" kindref="member">id3_length_t</ref><sp/><ref refid="test__lib_f_l_a_c_2format_8c_1ac94dc16b22556ba5fa815655f27442da" kindref="member">length</ref>)</highlight></codeline>
<codeline lineno="74"><highlight class="normal">{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><ref refid="id3tag_8h_1ad73e16dd89b6d075d906ae0649cc7e43" kindref="member">id3_byte_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<ref refid="namespacewaflib_1_1_utils_1ac5e167303eb0d1a7a20df3daf91a264c" kindref="member">old</ref>,<sp/>*<ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref><sp/>=<sp/>data<sp/>+<sp/><ref refid="test__lib_f_l_a_c_2format_8c_1ac94dc16b22556ba5fa815655f27442da" kindref="member">length</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><ref refid="id3tag_8h_1ad73e16dd89b6d075d906ae0649cc7e43" kindref="member">id3_byte_t</ref><sp/>*</highlight><highlight class="keyword">new</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(length<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(old<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>=<sp/>data;<sp/>old<sp/>&lt;<sp/>end<sp/>-<sp/>1;<sp/>++<ref refid="namespacewaflib_1_1_utils_1ac5e167303eb0d1a7a20df3daf91a264c" kindref="member">old</ref>)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">new</highlight><highlight class="normal">++<sp/>=<sp/>*<ref refid="namespacewaflib_1_1_utils_1ac5e167303eb0d1a7a20df3daf91a264c" kindref="member">old</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(old[0]<sp/>==<sp/>0xff<sp/>&amp;&amp;<sp/>old[1]<sp/>==<sp/>0x00)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++<ref refid="namespacewaflib_1_1_utils_1ac5e167303eb0d1a7a20df3daf91a264c" kindref="member">old</ref>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>*</highlight><highlight class="keyword">new</highlight><highlight class="normal">++<sp/>=<sp/>*<ref refid="namespacewaflib_1_1_utils_1ac5e167303eb0d1a7a20df3daf91a264c" kindref="member">old</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>-<sp/><ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/>*<sp/>NAME:<sp/><sp/><sp/><sp/>util-&gt;compress()</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/>*<sp/>DESCRIPTION:<sp/>perform<sp/>zlib<sp/>deflate<sp/>method<sp/>compression</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="libid3tag_2util_8h_1afb5f80c5054a0873cc8813c9c82f9cf5" refkind="member"><highlight class="normal"><ref refid="id3tag_8h_1ad73e16dd89b6d075d906ae0649cc7e43" kindref="member">id3_byte_t</ref><sp/>*<ref refid="libid3tag_2util_8c_1a853f73b995c276cdf77bf5137485ecb9" kindref="member">id3_util_compress</ref>(<ref refid="id3tag_8h_1ad73e16dd89b6d075d906ae0649cc7e43" kindref="member">id3_byte_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>,<sp/><ref refid="id3tag_8h_1a26fddaa5bcd55c38142a1fbed8d2835d" kindref="member">id3_length_t</ref><sp/><ref refid="test__lib_f_l_a_c_2format_8c_1ac94dc16b22556ba5fa815655f27442da" kindref="member">length</ref>,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="id3tag_8h_1a26fddaa5bcd55c38142a1fbed8d2835d" kindref="member">id3_length_t</ref><sp/>*newlength)</highlight></codeline>
<codeline lineno="98"><highlight class="normal">{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><ref refid="id3tag_8h_1ad73e16dd89b6d075d906ae0649cc7e43" kindref="member">id3_byte_t</ref><sp/>*compressed;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>*newlength<sp/><sp/>=<sp/>length<sp/>+<sp/>12;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>*newlength<sp/>+=<sp/>*newlength<sp/>/<sp/>1000;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>compressed<sp/>=<sp/>malloc(*newlength);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compressed)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(compress2(compressed,<sp/>newlength,<sp/>data,<sp/>length,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Z_BEST_COMPRESSION)<sp/>!=<sp/>Z_OK<sp/>||</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>*newlength<sp/>&gt;=<sp/>length)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free(compressed);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>compressed<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="id3tag_8h_1ad73e16dd89b6d075d906ae0649cc7e43" kindref="member">id3_byte_t</ref><sp/>*resized;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>resized<sp/>=<sp/>realloc(compressed,<sp/>*newlength<sp/>?<sp/>*newlength<sp/>:<sp/>1);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(resized)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>compressed<sp/>=<sp/>resized;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>compressed;</highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/>*<sp/>NAME:<sp/><sp/><sp/><sp/>util-&gt;decompress()</highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/>*<sp/>DESCRIPTION:<sp/>undo<sp/>zlib<sp/>deflate<sp/>method<sp/>compression</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="libid3tag_2util_8h_1a92a3049e36ea12c9cd1224ed0342ae85" refkind="member"><highlight class="normal"><ref refid="id3tag_8h_1ad73e16dd89b6d075d906ae0649cc7e43" kindref="member">id3_byte_t</ref><sp/>*<ref refid="libid3tag_2util_8c_1aa1f13bedfbc0db56f4c8f1f079fbd406" kindref="member">id3_util_decompress</ref>(<ref refid="id3tag_8h_1ad73e16dd89b6d075d906ae0649cc7e43" kindref="member">id3_byte_t</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>,<sp/><ref refid="id3tag_8h_1a26fddaa5bcd55c38142a1fbed8d2835d" kindref="member">id3_length_t</ref><sp/><ref refid="test__lib_f_l_a_c_2format_8c_1ac94dc16b22556ba5fa815655f27442da" kindref="member">length</ref>,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="id3tag_8h_1a26fddaa5bcd55c38142a1fbed8d2835d" kindref="member">id3_length_t</ref><sp/>newlength)</highlight></codeline>
<codeline lineno="130"><highlight class="normal">{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><ref refid="id3tag_8h_1ad73e16dd89b6d075d906ae0649cc7e43" kindref="member">id3_byte_t</ref><sp/>*decompressed;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/>decompressed<sp/>=<sp/>malloc(newlength<sp/>?<sp/>newlength<sp/>:<sp/>1);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(decompressed)<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="id3tag_8h_1a26fddaa5bcd55c38142a1fbed8d2835d" kindref="member">id3_length_t</ref><sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>size<sp/>=<sp/>newlength;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(uncompress(decompressed,<sp/>&amp;size,<sp/>data,<sp/>length)<sp/>!=<sp/>Z_OK<sp/>||</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>size<sp/>!=<sp/>newlength)<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>free(decompressed);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>decompressed<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>decompressed;</highlight></codeline>
<codeline lineno="147"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libid3tag/util.c"/>
  </compounddef>
</doxygen>
