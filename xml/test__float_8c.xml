<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="test__float_8c" kind="file" language="C++">
    <compoundname>test_float.c</compoundname>
    <includes refid="sfconfig_8h" local="yes">sfconfig.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">stdarg.h</includes>
    <includes local="no">errno.h</includes>
    <includes local="no">math.h</includes>
    <includes refid="libsndfile_2src_2common_8h" local="yes">common.h</includes>
    <includes refid="test__main_8h" local="yes">test_main.h</includes>
    <incdepgraph>
      <node id="20327">
        <label>stdarg.h</label>
      </node>
      <node id="20325">
        <label>stdlib.h</label>
      </node>
      <node id="20328">
        <label>errno.h</label>
      </node>
      <node id="20331">
        <label>sndfile.h</label>
      </node>
      <node id="20321">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/test_float.c</label>
        <link refid="test_float.c"/>
        <childnode refid="20322" relation="include">
        </childnode>
        <childnode refid="20324" relation="include">
        </childnode>
        <childnode refid="20325" relation="include">
        </childnode>
        <childnode refid="20326" relation="include">
        </childnode>
        <childnode refid="20327" relation="include">
        </childnode>
        <childnode refid="20328" relation="include">
        </childnode>
        <childnode refid="20329" relation="include">
        </childnode>
        <childnode refid="20330" relation="include">
        </childnode>
        <childnode refid="20332" relation="include">
        </childnode>
      </node>
      <node id="20326">
        <label>string.h</label>
      </node>
      <node id="20322">
        <label>sfconfig.h</label>
        <link refid="sfconfig_8h"/>
        <childnode refid="20323" relation="include">
        </childnode>
      </node>
      <node id="20330">
        <label>common.h</label>
        <link refid="libsndfile_2src_2common_8h"/>
        <childnode refid="20322" relation="include">
        </childnode>
        <childnode refid="20325" relation="include">
        </childnode>
        <childnode refid="20326" relation="include">
        </childnode>
        <childnode refid="20331" relation="include">
        </childnode>
      </node>
      <node id="20329">
        <label>math.h</label>
      </node>
      <node id="20332">
        <label>test_main.h</label>
        <link refid="test__main_8h"/>
      </node>
      <node id="20323">
        <label>config.h</label>
      </node>
      <node id="20324">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="test__float_8c_1ac50e2ef7d3758b93163881b2777308ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void test_float_convert</definition>
        <argsstring>(void)</argsstring>
        <name>test_float_convert</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/test_float.c" line="32" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/test_float.c" bodystart="32" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="test__float_8c_1a671361214d74bcb84f51fcbf4fbc29ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void test_double_convert</definition>
        <argsstring>(void)</argsstring>
        <name>test_double_convert</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/test_float.c" line="69" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/test_float.c" bodystart="69" bodyend="103"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">**<sp/>Copyright<sp/>(C)<sp/>2006-2011<sp/>Erik<sp/>de<sp/>Castro<sp/>Lopo<sp/>&lt;erikd@mega-nerd.com&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment">**</highlight></codeline>
<codeline lineno="4"><highlight class="comment">**<sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="5"><highlight class="comment">**<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="6"><highlight class="comment">**<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2.1<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="7"><highlight class="comment">**<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="8"><highlight class="comment">**</highlight></codeline>
<codeline lineno="9"><highlight class="comment">**<sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="10"><highlight class="comment">**<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="11"><highlight class="comment">**<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="12"><highlight class="comment">**<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="13"><highlight class="comment">**</highlight></codeline>
<codeline lineno="14"><highlight class="comment">**<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="15"><highlight class="comment">**<sp/>along<sp/>with<sp/>this<sp/>program;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="16"><highlight class="comment">**<sp/>Foundation,<sp/>Inc.,<sp/>59<sp/>Temple<sp/>Place<sp/>-<sp/>Suite<sp/>330,<sp/>Boston,<sp/>MA<sp/>02111-1307,<sp/>USA.</highlight></codeline>
<codeline lineno="17"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sfconfig_8h" kindref="compound">sfconfig.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdarg.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="libsndfile_2src_2common_8h" kindref="compound">common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="test__main_8h" kindref="compound">test_main.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="test__main_8h_1ac50e2ef7d3758b93163881b2777308ec" refkind="member"><highlight class="normal"><ref refid="test__float_8c_1ac50e2ef7d3758b93163881b2777308ec" kindref="member">test_float_convert</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="33"><highlight class="normal">{<sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref><sp/>[]<sp/>=</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>0.0,<sp/>1.0,<sp/>-1.0,<sp/>1.0<sp/>*<sp/><ref refid="mathematics_8h_1ae71449b1cc6e6250b91f539153a7a0d3" kindref="member">M_PI</ref>,<sp/>-1.0<sp/>*<sp/><ref refid="mathematics_8h_1ae71449b1cc6e6250b91f539153a7a0d3" kindref="member">M_PI</ref>,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1e9,<sp/>-1e9,<sp/>1<ref refid="namespacelv2docgen_1a4405dc5a2509537b9ff3b4de10bc28d6" kindref="member">e</ref>-9,<sp/>-1e-9,<sp/>1e-10,<sp/>-1e-10,</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1e-19,<sp/>-1e-19,<sp/>1e19,<sp/>-1e19,<sp/>1e-20,<sp/>-1e-20,</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref><sp/>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetest-sndfile-metadata-set_1a7eadfb659f8e3c097dcb1bbc6525dd4d" kindref="member">print_test_name</ref><sp/>(__func__)<sp/>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0<sp/>;<sp/>k<sp/>&lt;<sp/><ref refid="libsndfile_2programs_2common_8h_1a841615a63f4a3aa18337897953874909" kindref="member">ARRAY_LEN</ref><sp/>(data)<sp/>;<sp/>k++)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>bytes<sp/>[4]<sp/>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="patest__multi__sine_8c_1a4e1a7dd05b97e23b3dd1aed354405b63" kindref="member">test</ref><sp/>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libsndfile_2src_2common_8h_1a599080fc29c65f0496002a0cd12a6577" kindref="member">float32_le_write</ref><sp/>(data<sp/>[k],<sp/>bytes)<sp/>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test<sp/>=<sp/><ref refid="libsndfile_2src_2common_8h_1a6ffbd6a8962d2f389467348ec50b2899" kindref="member">float32_le_read</ref><sp/>(bytes)<sp/>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs<sp/>(data<sp/>[k]<sp/>-<sp/>test)<sp/>&gt;<sp/>1<ref refid="namespacelv2docgen_1a4405dc5a2509537b9ff3b4de10bc28d6" kindref="member">e</ref>-20)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\n\nLine<sp/>%d<sp/>:<sp/>Test<sp/>%d,<sp/>little<sp/>endian<sp/>error<sp/>%.15g<sp/>-&gt;<sp/>%.15g.\n\n&quot;</highlight><highlight class="normal">,<sp/>__LINE__,<sp/>k,<sp/>data<sp/>[k],<sp/>test<sp/>)<sp/>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit<sp/>(1)<sp/>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libsndfile_2src_2common_8h_1a27c497fe7bd508d0e4735d62a9d42449" kindref="member">float32_be_write</ref><sp/>(data<sp/>[k],<sp/>bytes)<sp/>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test<sp/>=<sp/><ref refid="libsndfile_2src_2common_8h_1aea3d4d156bf67213d450c76e5bf96ddd" kindref="member">float32_be_read</ref><sp/>(bytes)<sp/>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs<sp/>(data<sp/>[k]<sp/>-<sp/>test)<sp/>&gt;<sp/>1<ref refid="namespacelv2docgen_1a4405dc5a2509537b9ff3b4de10bc28d6" kindref="member">e</ref>-20)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\n\nLine<sp/>%d<sp/>:<sp/>Test<sp/>%d,<sp/>big<sp/>endian<sp/>error<sp/>%.15g<sp/>-&gt;<sp/>%.15g.\n\n&quot;</highlight><highlight class="normal">,<sp/>__LINE__,<sp/>k,<sp/>data<sp/>[k],<sp/>test)<sp/>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit<sp/>(1)<sp/>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>puts<sp/>(</highlight><highlight class="stringliteral">&quot;ok&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>test_float_convert<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="test__main_8h_1a671361214d74bcb84f51fcbf4fbc29ed" refkind="member"><highlight class="normal"><ref refid="test__float_8c_1a671361214d74bcb84f51fcbf4fbc29ed" kindref="member">test_double_convert</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="70"><highlight class="normal">{<sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref><sp/>[]<sp/>=</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>0.0,<sp/>1.0,<sp/>-1.0,<sp/>1.0<sp/>*<sp/><ref refid="mathematics_8h_1ae71449b1cc6e6250b91f539153a7a0d3" kindref="member">M_PI</ref>,<sp/>-1.0<sp/>*<sp/><ref refid="mathematics_8h_1ae71449b1cc6e6250b91f539153a7a0d3" kindref="member">M_PI</ref>,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1e9,<sp/>-1e9,<sp/>1<ref refid="namespacelv2docgen_1a4405dc5a2509537b9ff3b4de10bc28d6" kindref="member">e</ref>-9,<sp/>-1e-9,<sp/>1e-10,<sp/>-1e-10,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1e-19,<sp/>-1e-19,<sp/>1e19,<sp/>-1e19,<sp/>1e-20,<sp/>-1e-20,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref><sp/>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespacetest-sndfile-metadata-set_1a7eadfb659f8e3c097dcb1bbc6525dd4d" kindref="member">print_test_name</ref><sp/>(__func__)<sp/>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0<sp/>;<sp/>k<sp/>&lt;<sp/><ref refid="libsndfile_2programs_2common_8h_1a841615a63f4a3aa18337897953874909" kindref="member">ARRAY_LEN</ref><sp/>(data)<sp/>;<sp/>k++)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>bytes<sp/>[8]<sp/>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="patest__multi__sine_8c_1a4e1a7dd05b97e23b3dd1aed354405b63" kindref="member">test</ref><sp/>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libsndfile_2src_2common_8h_1aab711e8a8e2fdfebe01eeed45d6db3dd" kindref="member">double64_le_write</ref><sp/>(data<sp/>[k],<sp/>bytes)<sp/>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test<sp/>=<sp/><ref refid="libsndfile_2src_2common_8h_1a6c407dfe68c26e3f073109812255a7f4" kindref="member">double64_le_read</ref><sp/>(bytes)<sp/>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs<sp/>(data<sp/>[k]<sp/>-<sp/>test)<sp/>&gt;<sp/>1<ref refid="namespacelv2docgen_1a4405dc5a2509537b9ff3b4de10bc28d6" kindref="member">e</ref>-20)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\n\nLine<sp/>%d<sp/>:<sp/>Test<sp/>%d,<sp/>little<sp/>endian<sp/>error<sp/>%.15g<sp/>-&gt;<sp/>%.15g.\n\n&quot;</highlight><highlight class="normal">,<sp/>__LINE__,<sp/>k,<sp/>data<sp/>[k],<sp/>test<sp/>)<sp/>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit<sp/>(1)<sp/>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libsndfile_2src_2common_8h_1a7e711c91424e4737b658dd8c989a3027" kindref="member">double64_be_write</ref><sp/>(data<sp/>[k],<sp/>bytes)<sp/>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test<sp/>=<sp/><ref refid="libsndfile_2src_2common_8h_1ad631dc28e4d14525ab931f390aca75da" kindref="member">double64_be_read</ref><sp/>(bytes)<sp/>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs<sp/>(data<sp/>[k]<sp/>-<sp/>test)<sp/>&gt;<sp/>1<ref refid="namespacelv2docgen_1a4405dc5a2509537b9ff3b4de10bc28d6" kindref="member">e</ref>-20)</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\n\nLine<sp/>%d<sp/>:<sp/>Test<sp/>%d,<sp/>big<sp/>endian<sp/>error<sp/>%.15g<sp/>-&gt;<sp/>%.15g.\n\n&quot;</highlight><highlight class="normal">,<sp/>__LINE__,<sp/>k,<sp/>data<sp/>[k],<sp/>test)<sp/>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit<sp/>(1)<sp/>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>puts<sp/>(</highlight><highlight class="stringliteral">&quot;ok&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="103"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>test_double_convert<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/test_float.c"/>
  </compounddef>
</doxygen>
