<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="bookutil_8c" kind="file" language="C++">
    <compoundname>bookutil.c</compoundname>
    <includes local="no">stdlib.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">errno.h</includes>
    <includes refid="bookutil_8h" local="yes">bookutil.h</includes>
    <incdepgraph>
      <node id="23953">
        <label>sys/types.h</label>
        <link refid="lib-src_2libvorbis_2macos_2compat_2sys_2_types_8h"/>
        <childnode refid="23954" relation="include">
        </childnode>
        <childnode refid="23955" relation="include">
        </childnode>
        <childnode refid="23942" relation="include">
        </childnode>
      </node>
      <node id="23952">
        <label>stdint.h</label>
      </node>
      <node id="23939">
        <label>stdlib.h</label>
      </node>
      <node id="23943">
        <label>errno.h</label>
      </node>
      <node id="23948">
        <label>stddef.h</label>
      </node>
      <node id="23955">
        <label>alloca.h</label>
      </node>
      <node id="23949">
        <label>ogg/os_types.h</label>
        <link refid="os__types_8h"/>
        <childnode refid="23950" relation="include">
        </childnode>
      </node>
      <node id="23954">
        <label>MacTypes.h</label>
      </node>
      <node id="23942">
        <label>string.h</label>
      </node>
      <node id="23947">
        <label>ogg/ogg.h</label>
        <link refid="ogg_8h"/>
        <childnode refid="23948" relation="include">
        </childnode>
        <childnode refid="23949" relation="include">
        </childnode>
      </node>
      <node id="23941">
        <label>math.h</label>
      </node>
      <node id="23946">
        <label>localcodebook.h</label>
        <link refid="localcodebook_8h"/>
        <childnode refid="23947" relation="include">
        </childnode>
      </node>
      <node id="23938">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/bookutil.c</label>
        <link refid="bookutil.c"/>
        <childnode refid="23939" relation="include">
        </childnode>
        <childnode refid="23940" relation="include">
        </childnode>
        <childnode refid="23941" relation="include">
        </childnode>
        <childnode refid="23942" relation="include">
        </childnode>
        <childnode refid="23943" relation="include">
        </childnode>
        <childnode refid="23944" relation="include">
        </childnode>
      </node>
      <node id="23944">
        <label>bookutil.h</label>
        <link refid="bookutil_8h"/>
        <childnode refid="23940" relation="include">
        </childnode>
        <childnode refid="23945" relation="include">
        </childnode>
        <childnode refid="23946" relation="include">
        </childnode>
      </node>
      <node id="23950">
        <label>ogg/config_types.h</label>
        <link refid="config__types_8h"/>
        <childnode refid="23951" relation="include">
        </childnode>
        <childnode refid="23952" relation="include">
        </childnode>
        <childnode refid="23953" relation="include">
        </childnode>
      </node>
      <node id="23945">
        <label>sys/time.h</label>
        <link refid="win_2_projects_2libsndfile_2sys_2time_8h"/>
      </node>
      <node id="23940">
        <label>stdio.h</label>
      </node>
      <node id="23951">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="bookutil_8c_1a1503d2917eeff2eef696162cb6a5d1d1" prot="public" static="yes" mutable="no">
        <type>char *</type>
        <definition>char* linebuffer</definition>
        <argsstring></argsstring>
        <name>linebuffer</name>
        <initializer>=<ref refid="px__mixer_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/bookutil.c" line="83" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/bookutil.c" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bookutil_8c_1a8a9bfcc048ca0637fba0479fe55eabdb" prot="public" static="yes" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int lbufsize</definition>
        <argsstring></argsstring>
        <name>lbufsize</name>
        <initializer>=0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/bookutil.c" line="84" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/bookutil.c" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bookutil_8c_1a3a78253e15976141ff5ae247dd58eb1c" prot="public" static="yes" mutable="no">
        <type>char *</type>
        <definition>char* value_line_buff</definition>
        <argsstring></argsstring>
        <name>value_line_buff</name>
        <initializer>=<ref refid="px__mixer_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/bookutil.c" line="129" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/bookutil.c" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bookutil_8c_1ae73c561629ae8b9bee5c197546b3e11d" prot="public" static="yes" mutable="no">
        <type>float</type>
        <definition>float sequence_base</definition>
        <argsstring></argsstring>
        <name>sequence_base</name>
        <initializer>=0.<ref refid="checksum_8c_1ae747d72a1a803f5ff4a4b2602857d93b" kindref="member">f</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/bookutil.c" line="166" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/bookutil.c" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="bookutil_8c_1a7d23ff7fed517f5452e960e0ea0df7a1" prot="public" static="yes" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int v_sofar</definition>
        <argsstring></argsstring>
        <name>v_sofar</name>
        <initializer>=0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/bookutil.c" line="167" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/bookutil.c" bodystart="167" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="bookutil_8c_1a929187e9ff269e642758ad1f737d7e3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int _best</definition>
        <argsstring>(codebook *book, float *a, int step)</argsstring>
        <name>_best</name>
        <param>
          <type><ref refid="structcodebook" kindref="compound">codebook</ref> *</type>
          <declname>book</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>step</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/bookutil.c" line="25" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/bookutil.c" bodystart="25" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="bookutil_8c_1a75839547489bdf091b1b93d9a1a907ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* get_line</definition>
        <argsstring>(FILE *in)</argsstring>
        <name>get_line</name>
        <param>
          <type>FILE *</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/bookutil.c" line="85" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/bookutil.c" bodystart="85" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="bookutil_8c_1a29edc4f28032fccfb86f4bdfd32feb9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int get_line_value</definition>
        <argsstring>(FILE *in, float *value)</argsstring>
        <name>get_line_value</name>
        <param>
          <type>FILE *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/bookutil.c" line="131" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/bookutil.c" bodystart="131" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="bookutil_8c_1a3294feba84f7b80c5421e4fe6289803b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int get_next_value</definition>
        <argsstring>(FILE *in, float *value)</argsstring>
        <name>get_next_value</name>
        <param>
          <type>FILE *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/bookutil.c" line="148" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/bookutil.c" bodystart="148" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="bookutil_8c_1a50640af9d0fce982c9782ca52e828834" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int get_next_ivalue</definition>
        <argsstring>(FILE *in, long *ivalue)</argsstring>
        <name>get_next_ivalue</name>
        <param>
          <type>FILE *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>long *</type>
          <declname>ivalue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/bookutil.c" line="159" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/bookutil.c" bodystart="159" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="bookutil_8c_1aac36c31bb4019d162a15e8ecdac1dfae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void reset_next_value</definition>
        <argsstring>(void)</argsstring>
        <name>reset_next_value</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/bookutil.c" line="168" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/bookutil.c" bodystart="168" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="bookutil_8c_1a445614dc135ee08615ea8e0aaa8f43d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* setup_line</definition>
        <argsstring>(FILE *in)</argsstring>
        <name>setup_line</name>
        <param>
          <type>FILE *</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/bookutil.c" line="174" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/bookutil.c" bodystart="174" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="bookutil_8c_1ad488663fe05a09889d7069eb8fb2f2a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int get_vector</definition>
        <argsstring>(codebook *b, FILE *in, int start, int n, float *a)</argsstring>
        <name>get_vector</name>
        <param>
          <type><ref refid="structcodebook" kindref="compound">codebook</ref> *</type>
          <declname>b</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/bookutil.c" line="181" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/bookutil.c" bodystart="181" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="bookutil_8c_1a0c58545a6f802b86c8bbec59d18b8d34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* find_seek_to</definition>
        <argsstring>(FILE *in, char *s)</argsstring>
        <name>find_seek_to</name>
        <param>
          <type>FILE *</type>
          <declname>in</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/bookutil.c" line="216" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/bookutil.c" bodystart="216" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="bookutil_8c_1a46685e1f108a0a705dfe0a6c22016f2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structcodebook" kindref="compound">codebook</ref> *</type>
        <definition>codebook* codebook_load</definition>
        <argsstring>(char *filename)</argsstring>
        <name>codebook_load</name>
        <param>
          <type>char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/bookutil.c" line="233" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/bookutil.c" bodystart="233" bodyend="304"/>
      </memberdef>
      <memberdef kind="function" id="bookutil_8c_1a25ec924593bf4fc64d82c3559454fedb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void spinnit</definition>
        <argsstring>(char *s, int n)</argsstring>
        <name>spinnit</name>
        <param>
          <type>char *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/bookutil.c" line="306" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/bookutil.c" bodystart="306" bodyend="336"/>
      </memberdef>
      <memberdef kind="function" id="bookutil_8c_1ab3eface47e7aaf85199733babcd8a540" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void build_tree_from_lengths</definition>
        <argsstring>(int vals, long *hist, long *lengths)</argsstring>
        <name>build_tree_from_lengths</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>vals</declname>
        </param>
        <param>
          <type>long *</type>
          <declname>hist</declname>
        </param>
        <param>
          <type>long *</type>
          <declname>lengths</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/bookutil.c" line="338" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/bookutil.c" bodystart="338" bodyend="404"/>
      </memberdef>
      <memberdef kind="function" id="bookutil_8c_1aa4905ee535b22a0fa19d0e5b70e1dfe8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void build_tree_from_lengths0</definition>
        <argsstring>(int vals, long *hist, long *lengths)</argsstring>
        <name>build_tree_from_lengths0</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>vals</declname>
        </param>
        <param>
          <type>long *</type>
          <declname>hist</declname>
        </param>
        <param>
          <type>long *</type>
          <declname>lengths</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/bookutil.c" line="407" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/bookutil.c" bodystart="407" bodyend="435"/>
      </memberdef>
      <memberdef kind="function" id="bookutil_8c_1ad87e59f6127d6aa5868af58aa64d966b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void write_codebook</definition>
        <argsstring>(FILE *out, char *name, const static_codebook *c)</argsstring>
        <name>write_codebook</name>
        <param>
          <type>FILE *</type>
          <declname>out</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="structstatic__codebook" kindref="compound">static_codebook</ref> *</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/bookutil.c" line="437" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/bookutil.c" bodystart="437" bodyend="477"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>THIS<sp/>FILE<sp/>IS<sp/>PART<sp/>OF<sp/>THE<sp/>OggVorbis<sp/>SOFTWARE<sp/>CODEC<sp/>SOURCE<sp/>CODE.<sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>USE,<sp/>DISTRIBUTION<sp/>AND<sp/>REPRODUCTION<sp/>OF<sp/>THIS<sp/>LIBRARY<sp/>SOURCE<sp/>IS<sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>GOVERNED<sp/>BY<sp/>A<sp/>BSD-STYLE<sp/>SOURCE<sp/>LICENSE<sp/>INCLUDED<sp/>WITH<sp/>THIS<sp/>SOURCE<sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>IN<sp/>&apos;COPYING&apos;.<sp/>PLEASE<sp/>READ<sp/>THESE<sp/>TERMS<sp/>BEFORE<sp/>DISTRIBUTING.<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>THE<sp/>OggVorbis<sp/>SOURCE<sp/>CODE<sp/>IS<sp/>(C)<sp/>COPYRIGHT<sp/>1994-2010<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>by<sp/>the<sp/>Xiph.Org<sp/>Foundation<sp/>http://www.xiph.org/<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>********************************************************************</highlight></codeline>
<codeline lineno="12"><highlight class="comment"></highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>function:<sp/>utility<sp/>functions<sp/>for<sp/>loading<sp/>.vqh<sp/>and<sp/>.vqd<sp/>files</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>last<sp/>mod:<sp/>$Id:<sp/>bookutil.c<sp/>16959<sp/>2010-03-10<sp/>16:03:11Z<sp/>xiphmont<sp/>$</highlight></codeline>
<codeline lineno="15"><highlight class="comment"></highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="bookutil_8h" kindref="compound">bookutil.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="localcodebook_8h_1a929187e9ff269e642758ad1f737d7e3d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="bookutil_8c_1a929187e9ff269e642758ad1f737d7e3d" kindref="member">_best</ref>(<ref refid="structcodebook" kindref="compound">codebook</ref><sp/>*book,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>step){</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dim=book-&gt;<ref refid="structcodebook_1a686979784ac16e673f22201ed3c4a155" kindref="member">dim</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,j,<ref refid="namespacesmartmsgmerge_1aba35baca6a2a8d4f665ba30724f4739a" kindref="member">o</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minval=book-&gt;<ref refid="structcodebook_1af5e852ab410920fe29bcaae8552cd491" kindref="member">minval</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>del=book-&gt;<ref refid="structcodebook_1aad494f73f5a9601fa1487bc6273a9c51" kindref="member">delta</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>qv=book-&gt;<ref refid="structcodebook_1a02612403c90ae6b2044d926db9764c8a" kindref="member">quantvals</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ze=(qv&gt;&gt;1);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index=0;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>assumes<sp/>integer/centered<sp/>encoder<sp/>codebook<sp/>maptype<sp/>1<sp/>no<sp/>more<sp/>than<sp/>dim<sp/>8<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(del!=1){</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0,o=step*(dim-1);i&lt;dim;i++,o-=step){</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>((<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)rint(a[o])-minval+(del&gt;&gt;1))/del;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="layer3_8c_1a4b8bfe70f28d6faddcb10d6ecf8c1989" kindref="member">m</ref><sp/>=<sp/>(v&lt;ze<sp/>?<sp/>((ze-v)&lt;&lt;1)-1<sp/>:<sp/>((v-ze)&lt;&lt;1));</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/>index*qv+<sp/>(m&lt;0?0:(m&gt;=qv?qv-1:<ref refid="layer3_8c_1a4b8bfe70f28d6faddcb10d6ecf8c1989" kindref="member">m</ref>));</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0,o=step*(dim-1);i&lt;dim;i++,o-=step){</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)rint(a[o])-minval;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="layer3_8c_1a4b8bfe70f28d6faddcb10d6ecf8c1989" kindref="member">m</ref><sp/>=<sp/>(v&lt;ze<sp/>?<sp/>((ze-v)&lt;&lt;1)-1<sp/>:<sp/>((v-ze)&lt;&lt;1));</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>index<sp/>=<sp/>index*qv+<sp/>(m&lt;0?0:(m&gt;=qv?qv-1:<ref refid="layer3_8c_1a4b8bfe70f28d6faddcb10d6ecf8c1989" kindref="member">m</ref>));</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(book-&gt;<ref refid="structcodebook_1ad3f2dd8f3ad3efffbb5f60d467133ab0" kindref="member">c</ref>-&gt;<ref refid="structstatic__codebook_1a21d2a561788023117e66d178fd41801b" kindref="member">lengthlist</ref>[index]&lt;=0){</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstatic__codebook" kindref="compound">static_codebook</ref><sp/>*<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>=book-&gt;<ref refid="structcodebook_1ad3f2dd8f3ad3efffbb5f60d467133ab0" kindref="member">c</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>best=-1;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>assumes<sp/>integer/centered<sp/>encoder<sp/>codebook<sp/>maptype<sp/>1<sp/>no<sp/>more<sp/>than<sp/>dim<sp/>8<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacelv2docgen_1a4405dc5a2509537b9ff3b4de10bc28d6" kindref="member">e</ref>[8]={0,0,0,0,0,0,0,0};</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxval<sp/>=<sp/>book-&gt;<ref refid="structcodebook_1af5e852ab410920fe29bcaae8552cd491" kindref="member">minval</ref><sp/>+<sp/>book-&gt;<ref refid="structcodebook_1aad494f73f5a9601fa1487bc6273a9c51" kindref="member">delta</ref>*(book-&gt;<ref refid="structcodebook_1a02612403c90ae6b2044d926db9764c8a" kindref="member">quantvals</ref>-1);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;book-&gt;<ref refid="structcodebook_1ad025d4a6ebb7417a99870380bfbd1a66" kindref="member">entries</ref>;i++){</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(c-&gt;<ref refid="structstatic__codebook_1a21d2a561788023117e66d178fd41801b" kindref="member">lengthlist</ref>[i]&gt;0){</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">=0;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;dim;j++){</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>val=(e[j]-a[j*step]);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">+=val*val;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(best==-1<sp/>||<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">&lt;best){</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best=</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index=<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>assumes<sp/>the<sp/>value<sp/>patterning<sp/>created<sp/>by<sp/>the<sp/>tools<sp/>in<sp/>vq/<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>j=0;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(e[j]&gt;=maxval)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e[j++]=0;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(e[j]&gt;=0)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>e[j]+=book-&gt;<ref refid="structcodebook_1aad494f73f5a9601fa1487bc6273a9c51" kindref="member">delta</ref>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>e[j]=<sp/>-e[j];</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>index;</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>A<sp/>few<sp/>little<sp/>utils<sp/>for<sp/>reading<sp/>files<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>read<sp/>a<sp/>line.<sp/><sp/>Use<sp/>global,<sp/>persistent<sp/>buffering<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*linebuffer=<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>lbufsize=0;</highlight></codeline>
<codeline lineno="85" refid="bookutil_8h_1a75839547489bdf091b1b93d9a1a907ff" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="bookutil_8c_1a75839547489bdf091b1b93d9a1a907ff" kindref="member">get_line</ref>(FILE<sp/>*<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>){</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>sofar=0;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(feof(in))</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(1){</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gotline=0;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(!gotline){</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sofar+1&gt;=lbufsize){</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!lbufsize){<sp/><sp/></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lbufsize=1024;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linebuffer=<ref refid="os__types_8h_1a7eab9f24b6449f036ff799c89035036d" kindref="member">_ogg_malloc</ref>(lbufsize);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lbufsize*=2;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linebuffer=<ref refid="os__types_8h_1a82fc4b2bb569c745792791cf2c6923a0" kindref="member">_ogg_realloc</ref>(linebuffer,lbufsize);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>=fgetc(in);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(c){</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>EOF:</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sofar==0)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>fallthrough<sp/>correct<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linebuffer[sofar]=</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gotline=1;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linebuffer[sofar++]=<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linebuffer[sofar]=</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(linebuffer[0]==</highlight><highlight class="charliteral">&apos;#&apos;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sofar=0;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(linebuffer);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>read<sp/>the<sp/>next<sp/>numerical<sp/>value<sp/>from<sp/>the<sp/>given<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*value_line_buff=<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="bookutil_8h_1a29edc4f28032fccfb86f4bdfd32feb9b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="bookutil_8c_1a29edc4f28032fccfb86f4bdfd32feb9b" kindref="member">get_line_value</ref>(FILE<sp/>*<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>){</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="record_8c_1a9b790a854eb0e06cd42c8d28a30db97d" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!value_line_buff)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(-1);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/>*value=strtod(value_line_buff,<sp/>&amp;next);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(next==value_line_buff){</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>value_line_buff=<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(-1);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>value_line_buff=<ref refid="record_8c_1a9b790a854eb0e06cd42c8d28a30db97d" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(*value_line_buff&gt;44)value_line_buff++;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(*value_line_buff==44)value_line_buff++;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="bookutil_8h_1a3294feba84f7b80c5421e4fe6289803b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="bookutil_8c_1a3294feba84f7b80c5421e4fe6289803b" kindref="member">get_next_value</ref>(FILE<sp/>*<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>){</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(1){</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="bookutil_8c_1a29edc4f28032fccfb86f4bdfd32feb9b" kindref="member">get_line_value</ref>(in,value)){</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>value_line_buff=<ref refid="bookutil_8c_1a75839547489bdf091b1b93d9a1a907ff" kindref="member">get_line</ref>(in);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!value_line_buff)</highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(-1);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159" refid="bookutil_8h_1a50640af9d0fce982c9782ca52e828834" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="bookutil_8c_1a50640af9d0fce982c9782ca52e828834" kindref="member">get_next_ivalue</ref>(FILE<sp/>*<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>,</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*ivalue){</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret=<ref refid="bookutil_8c_1a3294feba84f7b80c5421e4fe6289803b" kindref="member">get_next_value</ref>(in,&amp;value);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>*ivalue=<ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(ret);</highlight></codeline>
<codeline lineno="164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>sequence_base=0.f;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v_sofar=0;</highlight></codeline>
<codeline lineno="168" refid="bookutil_8h_1aac36c31bb4019d162a15e8ecdac1dfae" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bookutil_8c_1aac36c31bb4019d162a15e8ecdac1dfae" kindref="member">reset_next_value</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>value_line_buff=<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>sequence_base=0.f;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>v_sofar=0;</highlight></codeline>
<codeline lineno="172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="bookutil_8h_1a445614dc135ee08615ea8e0aaa8f43d1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="bookutil_8c_1a445614dc135ee08615ea8e0aaa8f43d1" kindref="member">setup_line</ref>(FILE<sp/>*<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>){</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><ref refid="bookutil_8c_1aac36c31bb4019d162a15e8ecdac1dfae" kindref="member">reset_next_value</ref>();</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>value_line_buff=<ref refid="bookutil_8c_1a75839547489bdf091b1b93d9a1a907ff" kindref="member">get_line</ref>(in);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(value_line_buff);</highlight></codeline>
<codeline lineno="178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181" refid="bookutil_8h_1a86ca72a0ef5cd93df3847338fc2dafe5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="bookutil_8c_1ad488663fe05a09889d7069eb8fb2f2a9" kindref="member">get_vector</ref>(<ref refid="structcodebook" kindref="compound">codebook</ref><sp/>*<ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>,FILE<sp/>*<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>){</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstatic__codebook" kindref="compound">static_codebook</ref><sp/>*<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>=b-&gt;<ref refid="structcodebook_1ad3f2dd8f3ad3efffbb5f60d467133ab0" kindref="member">c</ref>;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(1){</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(v_sofar==n<sp/>||<sp/><ref refid="bookutil_8c_1a29edc4f28032fccfb86f4bdfd32feb9b" kindref="member">get_line_value</ref>(in,a)){</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bookutil_8c_1aac36c31bb4019d162a15e8ecdac1dfae" kindref="member">reset_next_value</ref>();</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="bookutil_8c_1a3294feba84f7b80c5421e4fe6289803b" kindref="member">get_next_value</ref>(in,a))</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;<ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>;i++){</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sequence_base=*<ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="bookutil_8c_1a29edc4f28032fccfb86f4bdfd32feb9b" kindref="member">get_line_value</ref>(in,a);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=1;i&lt;c-&gt;<ref refid="structstatic__codebook_1ad054a29cfda0a663e6c20c880a247300" kindref="member">dim</ref>;i++)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="bookutil_8c_1a29edc4f28032fccfb86f4bdfd32feb9b" kindref="member">get_line_value</ref>(in,a+i))</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i==c-&gt;<ref refid="structstatic__codebook_1ad054a29cfda0a663e6c20c880a247300" kindref="member">dim</ref>){</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>temp=a[c-&gt;<ref refid="structstatic__codebook_1ad054a29cfda0a663e6c20c880a247300" kindref="member">dim</ref>-1];</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;c-&gt;<ref refid="structstatic__codebook_1ad054a29cfda0a663e6c20c880a247300" kindref="member">dim</ref>;i++)a[i]-=sequence_base;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(c-&gt;<ref refid="structstatic__codebook_1aae1321f5435c0b33f22beb66636aa3b2" kindref="member">q_sequencep</ref>)sequence_base=temp;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>v_sofar++;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(0);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>sequence_base=0.f;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(-1);</highlight></codeline>
<codeline lineno="212"><highlight class="normal">}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>read<sp/>lines<sp/>fromt<sp/>he<sp/>beginning<sp/>until<sp/>we<sp/>find<sp/>one<sp/>containing<sp/>the</highlight></codeline>
<codeline lineno="215"><highlight class="comment"><sp/><sp/><sp/>specified<sp/>string<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216" refid="bookutil_8h_1a0c58545a6f802b86c8bbec59d18b8d34" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="bookutil_8c_1a0c58545a6f802b86c8bbec59d18b8d34" kindref="member">find_seek_to</ref>(FILE<sp/>*<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>){</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>rewind(in);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(1){</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="seqread_8c_1aad9ebcdde542d8b2075615388ff15a9c" kindref="member">line</ref>=<ref refid="bookutil_8c_1a75839547489bdf091b1b93d9a1a907ff" kindref="member">get_line</ref>(in);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(line){</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strstr(line,s))</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(line);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal">}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>this<sp/>reads<sp/>the<sp/>format<sp/>as<sp/>written<sp/>by<sp/>vqbuild/latticebuild;<sp/>innocent</highlight></codeline>
<codeline lineno="230"><highlight class="comment"><sp/><sp/><sp/>(legal)<sp/>tweaking<sp/>of<sp/>the<sp/>file<sp/>that<sp/>would<sp/>not<sp/>affect<sp/>its<sp/>valid</highlight></codeline>
<codeline lineno="231"><highlight class="comment"><sp/><sp/><sp/>header-ness<sp/>will<sp/>break<sp/>this<sp/>routine<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233" refid="bookutil_8h_1a46685e1f108a0a705dfe0a6c22016f2c" refkind="member"><highlight class="normal"><ref refid="structcodebook" kindref="compound">codebook</ref><sp/>*<ref refid="bookutil_8c_1a46685e1f108a0a705dfe0a6c22016f2c" kindref="member">codebook_load</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="octave__test_8m_1a2ff994e16bf9521154de4cf659a3b689" kindref="member">filename</ref>){</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><ref refid="structcodebook" kindref="compound">codebook</ref><sp/>*<ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>=<ref refid="os__types_8h_1a309e0b91bf7968a1e7ae1072d216a0cb" kindref="member">_ogg_calloc</ref>(1,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structcodebook" kindref="compound">codebook</ref>));</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><ref refid="structstatic__codebook" kindref="compound">static_codebook</ref><sp/>*<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>=(<ref refid="structstatic__codebook" kindref="compound">static_codebook</ref><sp/>*)(b-&gt;<ref refid="structcodebook_1ad3f2dd8f3ad3efffbb5f60d467133ab0" kindref="member">c</ref>=<ref refid="os__types_8h_1a309e0b91bf7968a1e7ae1072d216a0cb" kindref="member">_ogg_calloc</ref>(1,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structstatic__codebook" kindref="compound">static_codebook</ref>)));</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>quant_to_read=0;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>FILE<sp/>*<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>=fopen(filename,</highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="seqread_8c_1aad9ebcdde542d8b2075615388ff15a9c" kindref="member">line</ref>;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(in==<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>){</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;Couldn&apos;t<sp/>open<sp/>codebook<sp/>%s\n&quot;</highlight><highlight class="normal">,filename);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>find<sp/>the<sp/>codebook<sp/>struct<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><ref refid="bookutil_8c_1a0c58545a6f802b86c8bbec59d18b8d34" kindref="member">find_seek_to</ref>(in,</highlight><highlight class="stringliteral">&quot;static<sp/>const<sp/>static_codebook<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>major<sp/>important<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>line=<ref refid="bookutil_8c_1a75839547489bdf091b1b93d9a1a907ff" kindref="member">get_line</ref>(in);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sscanf(line,</highlight><highlight class="stringliteral">&quot;%ld,<sp/>%ld,&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(c-&gt;<ref refid="structstatic__codebook_1ad054a29cfda0a663e6c20c880a247300" kindref="member">dim</ref>),&amp;(c-&gt;<ref refid="structstatic__codebook_1af672cb700b32f865aa6b3a8807e6bcaf" kindref="member">entries</ref>))!=2){</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;1:<sp/>syntax<sp/>in<sp/>%s<sp/>in<sp/>line:\t<sp/>%s&quot;</highlight><highlight class="normal">,filename,line);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/>line=<ref refid="bookutil_8c_1a75839547489bdf091b1b93d9a1a907ff" kindref="member">get_line</ref>(in);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>line=<ref refid="bookutil_8c_1a75839547489bdf091b1b93d9a1a907ff" kindref="member">get_line</ref>(in);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sscanf(line,</highlight><highlight class="stringliteral">&quot;%d,<sp/>%ld,<sp/>%ld,<sp/>%d,<sp/>%d,&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(c-&gt;<ref refid="structstatic__codebook_1a818d20b21c9c6c1d9472a09c4b063794" kindref="member">maptype</ref>),&amp;(c-&gt;<ref refid="structstatic__codebook_1a8f11e73cd9db46a04fb86743f078a27c" kindref="member">q_min</ref>),&amp;(c-&gt;<ref refid="structstatic__codebook_1a94d93723dc380cd4fe483094e133ecb4" kindref="member">q_delta</ref>),&amp;(c-&gt;<ref refid="structstatic__codebook_1aaf7234dd01a51b7a70e3ab06122ee7ca" kindref="member">q_quant</ref>),</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(c-&gt;<ref refid="structstatic__codebook_1aae1321f5435c0b33f22beb66636aa3b2" kindref="member">q_sequencep</ref>))!=5){</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;1:<sp/>syntax<sp/>in<sp/>%s<sp/>in<sp/>line:\t<sp/>%s&quot;</highlight><highlight class="normal">,filename,line);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(c-&gt;<ref refid="structstatic__codebook_1a818d20b21c9c6c1d9472a09c4b063794" kindref="member">maptype</ref>){</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>quant_to_read=0;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>quant_to_read=<ref refid="codebook_8h_1aec05a8c0eabef16f1074fa1d596ce6e4" kindref="member">_book_maptype1_quantvals</ref>(c);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>quant_to_read=c-&gt;<ref refid="structstatic__codebook_1af672cb700b32f865aa6b3a8807e6bcaf" kindref="member">entries</ref>*c-&gt;<ref refid="structstatic__codebook_1ad054a29cfda0a663e6c20c880a247300" kindref="member">dim</ref>;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>load<sp/>the<sp/>quantized<sp/>entries<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><ref refid="bookutil_8c_1a0c58545a6f802b86c8bbec59d18b8d34" kindref="member">find_seek_to</ref>(in,</highlight><highlight class="stringliteral">&quot;static<sp/>const<sp/>long<sp/>_vq_quantlist_&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><ref refid="bookutil_8c_1aac36c31bb4019d162a15e8ecdac1dfae" kindref="member">reset_next_value</ref>();</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/>c-&gt;<ref refid="structstatic__codebook_1ae21b02047f7e9fb30a72ad1c41c92426" kindref="member">quantlist</ref>=<ref refid="os__types_8h_1a7eab9f24b6449f036ff799c89035036d" kindref="member">_ogg_malloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)*quant_to_read);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;quant_to_read;i++)</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="bookutil_8c_1a50640af9d0fce982c9782ca52e828834" kindref="member">get_next_ivalue</ref>(in,c-&gt;<ref refid="structstatic__codebook_1ae21b02047f7e9fb30a72ad1c41c92426" kindref="member">quantlist</ref>+i)){</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;out<sp/>of<sp/>data<sp/>while<sp/>reading<sp/>codebook<sp/>%s\n&quot;</highlight><highlight class="normal">,filename);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>load<sp/>the<sp/>lengthlist<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><ref refid="bookutil_8c_1a0c58545a6f802b86c8bbec59d18b8d34" kindref="member">find_seek_to</ref>(in,</highlight><highlight class="stringliteral">&quot;_lengthlist&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><ref refid="bookutil_8c_1aac36c31bb4019d162a15e8ecdac1dfae" kindref="member">reset_next_value</ref>();</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/>c-&gt;<ref refid="structstatic__codebook_1a21d2a561788023117e66d178fd41801b" kindref="member">lengthlist</ref>=<ref refid="os__types_8h_1a7eab9f24b6449f036ff799c89035036d" kindref="member">_ogg_malloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)*c-&gt;<ref refid="structstatic__codebook_1af672cb700b32f865aa6b3a8807e6bcaf" kindref="member">entries</ref>);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;c-&gt;<ref refid="structstatic__codebook_1af672cb700b32f865aa6b3a8807e6bcaf" kindref="member">entries</ref>;i++)</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="bookutil_8c_1a50640af9d0fce982c9782ca52e828834" kindref="member">get_next_ivalue</ref>(in,c-&gt;<ref refid="structstatic__codebook_1a21d2a561788023117e66d178fd41801b" kindref="member">lengthlist</ref>+i)){</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;out<sp/>of<sp/>data<sp/>while<sp/>reading<sp/>codebook<sp/>%s\n&quot;</highlight><highlight class="normal">,filename);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>got<sp/>it<sp/>all<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><ref refid="conv2dtest_8m_1ae93e9d524fd1ef618af3d5070a8126eb" kindref="member">fclose</ref>(in);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><ref refid="codebook_8h_1a042a0dce77fd02c52e095c266bb0afb7" kindref="member">vorbis_book_init_encode</ref>(b,c);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/>b-&gt;<ref refid="structcodebook_1ac3365da931532e158435f2e62021c90b" kindref="member">valuelist</ref>=<ref refid="codebook_8h_1aa0b435e53b16ef46145637c02f34c394" kindref="member">_book_unquantize</ref>(c,c-&gt;<ref refid="structstatic__codebook_1af672cb700b32f865aa6b3a8807e6bcaf" kindref="member">entries</ref>,<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(b);</highlight></codeline>
<codeline lineno="304"><highlight class="normal">}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306" refid="bookutil_8h_1a25ec924593bf4fc64d82c3559454fedb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bookutil_8c_1a25ec924593bf4fc64d82c3559454fedb" kindref="member">spinnit</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n){</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>=0;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>lasttime=0;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="patest__multi__sine_8c_1a4e1a7dd05b97e23b3dd1aed354405b63" kindref="member">test</ref>;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timeval<sp/>thistime;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/>gettimeofday(&amp;thistime,<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/>test=thistime.tv_sec*10+thistime.tv_usec/100000;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(lasttime!=test){</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>lasttime=<ref refid="patest__multi__sine_8c_1a4e1a7dd05b97e23b3dd1aed354405b63" kindref="member">test</ref>;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;%s%d<sp/>&quot;</highlight><highlight class="normal">,s,n);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>p++;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(p&gt;3)p=0;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(p){</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;|<sp/><sp/><sp/><sp/>\r&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;/<sp/><sp/><sp/><sp/>\r&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;-<sp/><sp/><sp/><sp/>\r&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;\\<sp/><sp/><sp/><sp/>\r&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1a0491ca59ff11d37e0e71589ce262a30c" kindref="member">fflush</ref>(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal">}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338" refid="bookutil_8h_1ab3eface47e7aaf85199733babcd8a540" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bookutil_8c_1ab3eface47e7aaf85199733babcd8a540" kindref="member">build_tree_from_lengths</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vals,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*hist,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*lengths){</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,j;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*membership=<ref refid="os__types_8h_1a7eab9f24b6449f036ff799c89035036d" kindref="member">_ogg_malloc</ref>(vals*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*histsave=alloca(vals*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/>memcpy(histsave,hist,vals*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;vals;i++)membership[i]=i;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>find<sp/>codeword<sp/>lengths<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>much<sp/>more<sp/>elegant<sp/>means<sp/>exist.<sp/><sp/>Brute<sp/>force<sp/>n^2,<sp/>minimum<sp/>thought<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=vals;i&gt;1;i--){</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>first=-1,second=-1;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>least=-1;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="bookutil_8c_1a25ec924593bf4fc64d82c3559454fedb" kindref="member">spinnit</ref>(</highlight><highlight class="stringliteral">&quot;building...<sp/>&quot;</highlight><highlight class="normal">,i);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>find<sp/>the<sp/>two<sp/>nodes<sp/>to<sp/>join<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;vals;j++)</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(least==-1<sp/>||<sp/>hist[j]&lt;=least){</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>least=hist[j];</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>first=membership[j];</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>least=-1;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;vals;j++)</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((least==-1<sp/>||<sp/>hist[j]&lt;=least)<sp/>&amp;&amp;<sp/>membership[j]!=first){</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>least=hist[j];</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>second=membership[j];</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(first==-1<sp/>||<sp/>second==-1){</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;huffman<sp/>fault;<sp/>no<sp/>free<sp/>branch\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>join<sp/>them<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/>least=hist[first]+hist[second];</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;vals;j++)</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(membership[j]==first<sp/>||<sp/>membership[j]==second){</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>membership[j]=first;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hist[j]=least;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lengths[j]++;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;vals-1;i++)</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(membership[i]!=membership[i+1]){</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;huffman<sp/>fault;<sp/>failed<sp/>to<sp/>build<sp/>single<sp/>tree\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>sanity<sp/>check<sp/>purposes:<sp/>how<sp/>many<sp/>bits<sp/>would<sp/>it<sp/>have<sp/>taken<sp/>to</highlight></codeline>
<codeline lineno="387"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>encode<sp/>the<sp/>training<sp/>set?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>bitsum=0;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="test__rw__echo_8c_1a39c8d1039645bc924aecc49d76f472a0" kindref="member">samples</ref>=0;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;vals;i++){</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bitsum+=(histsave[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-1)*lengths[i];</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>samples+=histsave[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-1;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(samples){</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;\rTotal<sp/>samples<sp/>in<sp/>training<sp/>set:<sp/>%ld<sp/><sp/><sp/><sp/><sp/><sp/>\n&quot;</highlight><highlight class="normal">,samples);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;\rTotal<sp/>bits<sp/>used<sp/>to<sp/>represent<sp/>training<sp/>set:<sp/>%ld\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitsum);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/>free(membership);</highlight></codeline>
<codeline lineno="404"><highlight class="normal">}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>wrap<sp/>build_tree_from_lengths<sp/>to<sp/>allow<sp/>zero<sp/>entries<sp/>in<sp/>the<sp/>histogram<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407" refid="bookutil_8h_1aa4905ee535b22a0fa19d0e5b70e1dfe8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bookutil_8c_1aa4905ee535b22a0fa19d0e5b70e1dfe8" kindref="member">build_tree_from_lengths0</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vals,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*hist,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*lengths){</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>pack<sp/>the<sp/>&apos;sparse&apos;<sp/>hit<sp/>list<sp/>into<sp/>a<sp/>dense<sp/>list,<sp/>then<sp/>unpack</highlight></codeline>
<codeline lineno="410"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>the<sp/>lengths<sp/>after<sp/>the<sp/>build<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>upper=0,<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*lengthlist=<ref refid="os__types_8h_1a309e0b91bf7968a1e7ae1072d216a0cb" kindref="member">_ogg_calloc</ref>(vals,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*newhist=alloca(vals*</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>&lt;vals;<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hist[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]&gt;0)</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>newhist[upper++]=hist[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(upper<sp/>!=<sp/>vals){</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;\rEliminating<sp/>%d<sp/>unused<sp/>entries;<sp/>%d<sp/>entries<sp/>remain\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vals-upper,upper);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><ref refid="bookutil_8c_1ab3eface47e7aaf85199733babcd8a540" kindref="member">build_tree_from_lengths</ref>(upper,newhist,lengthlist);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/>upper=0;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>&lt;vals;<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hist[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]&gt;0)</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lengths[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]=lengthlist[upper++];</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lengths[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]=0;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/>free(lengthlist);</highlight></codeline>
<codeline lineno="435"><highlight class="normal">}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437" refid="bookutil_8h_1ad87e59f6127d6aa5868af58aa64d966b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="bookutil_8c_1ad87e59f6127d6aa5868af58aa64d966b" kindref="member">write_codebook</ref>(FILE<sp/>*<ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structstatic__codebook" kindref="compound">static_codebook</ref><sp/>*<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>){</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,j,<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>save<sp/>the<sp/>book<sp/>in<sp/>C<sp/>header<sp/>form<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>first,<sp/>the<sp/>static<sp/>vectors,<sp/>then<sp/>the<sp/>book<sp/>structure<sp/>to<sp/>tie<sp/>it<sp/>together.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>quantlist<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(c-&gt;<ref refid="structstatic__codebook_1ae21b02047f7e9fb30a72ad1c41c92426" kindref="member">quantlist</ref>){</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>vals=(c-&gt;<ref refid="structstatic__codebook_1a818d20b21c9c6c1d9472a09c4b063794" kindref="member">maptype</ref>==1?<ref refid="codebook_8h_1aec05a8c0eabef16f1074fa1d596ce6e4" kindref="member">_book_maptype1_quantvals</ref>(c):c-&gt;<ref refid="structstatic__codebook_1af672cb700b32f865aa6b3a8807e6bcaf" kindref="member">entries</ref>*c-&gt;<ref refid="structstatic__codebook_1ad054a29cfda0a663e6c20c880a247300" kindref="member">dim</ref>);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(out,</highlight><highlight class="stringliteral">&quot;static<sp/>const<sp/>long<sp/>_vq_quantlist_%s[]<sp/>=<sp/>{\n&quot;</highlight><highlight class="normal">,name);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;vals;j++){</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(out,</highlight><highlight class="stringliteral">&quot;\t%ld,\n&quot;</highlight><highlight class="normal">,c-&gt;<ref refid="structstatic__codebook_1ae21b02047f7e9fb30a72ad1c41c92426" kindref="member">quantlist</ref>[j]);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(out,</highlight><highlight class="stringliteral">&quot;};\n\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>lengthlist<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/>fprintf(out,</highlight><highlight class="stringliteral">&quot;static<sp/>const<sp/>long<sp/>_vq_lengthlist_%s[]<sp/>=<sp/>{\n&quot;</highlight><highlight class="normal">,name);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;c-&gt;<ref refid="structstatic__codebook_1af672cb700b32f865aa6b3a8807e6bcaf" kindref="member">entries</ref>;){</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(out,</highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(k=0;k&lt;16<sp/>&amp;&amp;<sp/>j&lt;c-&gt;<ref refid="structstatic__codebook_1af672cb700b32f865aa6b3a8807e6bcaf" kindref="member">entries</ref>;k++,j++)</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(out,</highlight><highlight class="stringliteral">&quot;%2ld,&quot;</highlight><highlight class="normal">,c-&gt;<ref refid="structstatic__codebook_1a21d2a561788023117e66d178fd41801b" kindref="member">lengthlist</ref>[j]);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(out,</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/>fprintf(out,</highlight><highlight class="stringliteral">&quot;};\n\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>tie<sp/>it<sp/>all<sp/>together<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/>fprintf(out,</highlight><highlight class="stringliteral">&quot;static<sp/>const<sp/>static_codebook<sp/>%s<sp/>=<sp/>{\n&quot;</highlight><highlight class="normal">,name);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/>fprintf(out,</highlight><highlight class="stringliteral">&quot;\t%ld,<sp/>%ld,\n&quot;</highlight><highlight class="normal">,c-&gt;<ref refid="structstatic__codebook_1ad054a29cfda0a663e6c20c880a247300" kindref="member">dim</ref>,c-&gt;<ref refid="structstatic__codebook_1af672cb700b32f865aa6b3a8807e6bcaf" kindref="member">entries</ref>);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/>fprintf(out,</highlight><highlight class="stringliteral">&quot;\t(long<sp/>*)_vq_lengthlist_%s,\n&quot;</highlight><highlight class="normal">,name);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/>fprintf(out,</highlight><highlight class="stringliteral">&quot;\t%d,<sp/>%ld,<sp/>%ld,<sp/>%d,<sp/>%d,\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c-&gt;<ref refid="structstatic__codebook_1a818d20b21c9c6c1d9472a09c4b063794" kindref="member">maptype</ref>,c-&gt;<ref refid="structstatic__codebook_1a8f11e73cd9db46a04fb86743f078a27c" kindref="member">q_min</ref>,c-&gt;<ref refid="structstatic__codebook_1a94d93723dc380cd4fe483094e133ecb4" kindref="member">q_delta</ref>,c-&gt;<ref refid="structstatic__codebook_1aaf7234dd01a51b7a70e3ab06122ee7ca" kindref="member">q_quant</ref>,c-&gt;<ref refid="structstatic__codebook_1aae1321f5435c0b33f22beb66636aa3b2" kindref="member">q_sequencep</ref>);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(c-&gt;<ref refid="structstatic__codebook_1ae21b02047f7e9fb30a72ad1c41c92426" kindref="member">quantlist</ref>)</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(out,</highlight><highlight class="stringliteral">&quot;\t(long<sp/>*)_vq_quantlist_%s,\n&quot;</highlight><highlight class="normal">,name);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(out,</highlight><highlight class="stringliteral">&quot;\tNULL,\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/>fprintf(out,</highlight><highlight class="stringliteral">&quot;\t0\n};\n\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="477"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/bookutil.c"/>
  </compounddef>
</doxygen>
