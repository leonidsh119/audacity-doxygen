<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_plugin_adapter_8cpp" kind="file" language="C++">
    <compoundname>PluginAdapter.cpp</compoundname>
    <includes refid="_plugin_adapter_8h" local="no">vamp-sdk/PluginAdapter.h</includes>
    <includes local="no">cstring</includes>
    <includes local="no">cstdlib</includes>
    <incdepgraph>
      <node id="21868">
        <label>Plugin.h</label>
        <link refid="libvamp_2vamp-sdk_2plugin_8h"/>
        <childnode refid="21869" relation="include">
        </childnode>
        <childnode refid="21870" relation="include">
        </childnode>
        <childnode refid="21866" relation="include">
        </childnode>
        <childnode refid="21871" relation="include">
        </childnode>
        <childnode refid="21873" relation="include">
        </childnode>
        <childnode refid="21872" relation="include">
        </childnode>
      </node>
      <node id="21867">
        <label>vamp/vamp.h</label>
        <link refid="vamp_8h"/>
      </node>
      <node id="21865">
        <label>vamp-sdk/PluginAdapter.h</label>
        <link refid="_plugin_adapter_8h"/>
        <childnode refid="21866" relation="include">
        </childnode>
        <childnode refid="21867" relation="include">
        </childnode>
        <childnode refid="21868" relation="include">
        </childnode>
        <childnode refid="21872" relation="include">
        </childnode>
      </node>
      <node id="21869">
        <label>string</label>
      </node>
      <node id="21866">
        <label>map</label>
      </node>
      <node id="21872">
        <label>plugguard.h</label>
        <link refid="plugguard_8h"/>
      </node>
      <node id="21871">
        <label>PluginBase.h</label>
        <link refid="vamp-sdk_2_plugin_base_8h"/>
        <childnode refid="21869" relation="include">
        </childnode>
        <childnode refid="21870" relation="include">
        </childnode>
        <childnode refid="21872" relation="include">
        </childnode>
      </node>
      <node id="21870">
        <label>vector</label>
      </node>
      <node id="21873">
        <label>RealTime.h</label>
        <link refid="vamp-sdk_2_real_time_8h"/>
        <childnode refid="21874" relation="include">
        </childnode>
        <childnode refid="21869" relation="include">
        </childnode>
        <childnode refid="21872" relation="include">
        </childnode>
      </node>
      <node id="21876">
        <label>cstdlib</label>
      </node>
      <node id="21874">
        <label>iostream</label>
      </node>
      <node id="21864">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/src/vamp-sdk/PluginAdapter.cpp</label>
        <link refid="PluginAdapter.cpp"/>
        <childnode refid="21865" relation="include">
        </childnode>
        <childnode refid="21875" relation="include">
        </childnode>
        <childnode refid="21876" relation="include">
        </childnode>
      </node>
      <node id="21875">
        <label>cstring</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_vamp_1_1_plugin_adapter_base_1_1_impl" prot="public">Vamp::PluginAdapterBase::Impl</innerclass>
    <innernamespace refid="namespace_vamp">Vamp</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>c-basic-offset:<sp/>4<sp/>indent-tabs-mode:<sp/>nil<sp/>-*-<sp/><sp/>vi:set<sp/>ts=8<sp/>sts=4<sp/>sw=4:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/><sp/>Vamp</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/><sp/>An<sp/>API<sp/>for<sp/>audio<sp/>analysis<sp/>and<sp/>feature<sp/>extraction<sp/>plugins.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"></highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/><sp/><sp/>Centre<sp/>for<sp/>Digital<sp/>Music,<sp/>Queen<sp/>Mary,<sp/>University<sp/>of<sp/>London.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/><sp/><sp/>Copyright<sp/>2006<sp/>Chris<sp/>Cannam.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/></highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/><sp/><sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/><sp/><sp/>obtaining<sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/><sp/><sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/><sp/><sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/>copy,</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/><sp/><sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/><sp/><sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/><sp/><sp/><sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="18"><highlight class="comment"></highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/><sp/><sp/><sp/>included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"></highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/><sp/><sp/><sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/><sp/><sp/><sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/><sp/><sp/><sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/><sp/><sp/><sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/><sp/><sp/><sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/><sp/><sp/><sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/><sp/><sp/><sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="29"><highlight class="comment"></highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/><sp/><sp/><sp/>Except<sp/>as<sp/>contained<sp/>in<sp/>this<sp/>notice,<sp/>the<sp/>names<sp/>of<sp/>the<sp/>Centre<sp/>for</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/><sp/><sp/><sp/>Digital<sp/>Music;<sp/>Queen<sp/>Mary,<sp/>University<sp/>of<sp/>London;<sp/>and<sp/>Chris<sp/>Cannam</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/><sp/><sp/><sp/>shall<sp/>not<sp/>be<sp/>used<sp/>in<sp/>advertising<sp/>or<sp/>otherwise<sp/>to<sp/>promote<sp/>the<sp/>sale,</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/><sp/><sp/><sp/>use<sp/>or<sp/>other<sp/>dealings<sp/>in<sp/>this<sp/>Software<sp/>without<sp/>prior<sp/>written</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/><sp/><sp/><sp/>authorization.</highlight></codeline>
<codeline lineno="35"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_plugin_adapter_8h" kindref="compound">vamp-sdk/PluginAdapter.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdlib&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(<sp/>VAMP_SDK_MAJOR_VERSION<sp/>!=<sp/>2<sp/>||<sp/>VAMP_SDK_MINOR_VERSION<sp/>!=<sp/>5<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>Unexpected<sp/>version<sp/>of<sp/>Vamp<sp/>SDK<sp/>header<sp/>included</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//#define<sp/>DEBUG_PLUGIN_ADAPTER<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><ref refid="hostguard_8h_1a1a2724ea453971288d3218e4eab3072c" kindref="member">_VAMP_SDK_PLUGSPACE_BEGIN</ref>(PluginAdapter.cpp)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal">namespace<sp/><ref refid="namespace_vamp" kindref="compound">Vamp</ref><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="class_vamp_1_1_plugin_adapter_base_1_1_impl" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl" kindref="compound">PluginAdapterBase::Impl</ref></highlight></codeline>
<codeline lineno="54"><highlight class="normal">{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl" kindref="compound">Impl</ref>(<ref refid="class_vamp_1_1_plugin_adapter_base" kindref="compound">PluginAdapterBase</ref><sp/>*);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>~<ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl" kindref="compound">Impl</ref>();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct___vamp_plugin_descriptor" kindref="compound">VampPluginDescriptor</ref><sp/>*getDescriptor();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="62" refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1ac0372df58956b4bf99a9ec070b11dea4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base" kindref="compound">PluginAdapterBase</ref><sp/>*<ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1ac0372df58956b4bf99a9ec070b11dea4" kindref="member">m_base</ref>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="vamp_8h_1ad3be2952b1f4ad7d775940a6db75c79b" kindref="member">VampPluginHandle</ref><sp/>vampInstantiate(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct___vamp_plugin_descriptor" kindref="compound">VampPluginDescriptor</ref><sp/>*<ref refid="_export_p_c_m_8cpp_1a717c8108dd6ce1ecc369d9bac2f471f2" kindref="member">desc</ref>,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>inputSampleRate);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>vampCleanup(<ref refid="vamp_8h_1ad3be2952b1f4ad7d775940a6db75c79b" kindref="member">VampPluginHandle</ref><sp/>handle);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vampInitialise(<ref refid="vamp_8h_1ad3be2952b1f4ad7d775940a6db75c79b" kindref="member">VampPluginHandle</ref><sp/>handle,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channels,</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stepSize,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blockSize);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>vampReset(<ref refid="vamp_8h_1ad3be2952b1f4ad7d775940a6db75c79b" kindref="member">VampPluginHandle</ref><sp/>handle);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>vampGetParameter(<ref refid="vamp_8h_1ad3be2952b1f4ad7d775940a6db75c79b" kindref="member">VampPluginHandle</ref><sp/>handle,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>param);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>vampSetParameter(<ref refid="vamp_8h_1ad3be2952b1f4ad7d775940a6db75c79b" kindref="member">VampPluginHandle</ref><sp/>handle,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>param,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vampGetCurrentProgram(<ref refid="vamp_8h_1ad3be2952b1f4ad7d775940a6db75c79b" kindref="member">VampPluginHandle</ref><sp/>handle);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>vampSelectProgram(<ref refid="vamp_8h_1ad3be2952b1f4ad7d775940a6db75c79b" kindref="member">VampPluginHandle</ref><sp/>handle,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_tools_1_1c__aliases_1a37f66fad92eb3e5608e4ea6cc919987c" kindref="member">program</ref>);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vampGetPreferredStepSize(<ref refid="vamp_8h_1ad3be2952b1f4ad7d775940a6db75c79b" kindref="member">VampPluginHandle</ref><sp/>handle);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vampGetPreferredBlockSize(<ref refid="vamp_8h_1ad3be2952b1f4ad7d775940a6db75c79b" kindref="member">VampPluginHandle</ref><sp/>handle);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vampGetMinChannelCount(<ref refid="vamp_8h_1ad3be2952b1f4ad7d775940a6db75c79b" kindref="member">VampPluginHandle</ref><sp/>handle);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vampGetMaxChannelCount(<ref refid="vamp_8h_1ad3be2952b1f4ad7d775940a6db75c79b" kindref="member">VampPluginHandle</ref><sp/>handle);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vampGetOutputCount(<ref refid="vamp_8h_1ad3be2952b1f4ad7d775940a6db75c79b" kindref="member">VampPluginHandle</ref><sp/>handle);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct___vamp_output_descriptor" kindref="compound">VampOutputDescriptor</ref><sp/>*vampGetOutputDescriptor(<ref refid="vamp_8h_1ad3be2952b1f4ad7d775940a6db75c79b" kindref="member">VampPluginHandle</ref><sp/>handle,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>vampReleaseOutputDescriptor(<ref refid="struct___vamp_output_descriptor" kindref="compound">VampOutputDescriptor</ref><sp/>*<ref refid="_export_p_c_m_8cpp_1a717c8108dd6ce1ecc369d9bac2f471f2" kindref="member">desc</ref>);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct___vamp_feature_list" kindref="compound">VampFeatureList</ref><sp/>*vampProcess(<ref refid="vamp_8h_1ad3be2952b1f4ad7d775940a6db75c79b" kindref="member">VampPluginHandle</ref><sp/>handle,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*inputBuffers,</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sec,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nsec);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct___vamp_feature_list" kindref="compound">VampFeatureList</ref><sp/>*vampGetRemainingFeatures(<ref refid="vamp_8h_1ad3be2952b1f4ad7d775940a6db75c79b" kindref="member">VampPluginHandle</ref><sp/>handle);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>vampReleaseFeatureSet(<ref refid="struct___vamp_feature_list" kindref="compound">VampFeatureList</ref><sp/>*<ref refid="sndfile__load_8m_1a6f04aa8324068801354b01b63f16f331" kindref="member">fs</ref>);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>checkOutputMap(<ref refid="class_vamp_1_1_plugin" kindref="compound">Plugin</ref><sp/>*<ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>markOutputsChanged(<ref refid="class_vamp_1_1_plugin" kindref="compound">Plugin</ref><sp/>*<ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="launch_8c_1a4b66d5e31b5dc18b314c8a68163263bd" kindref="member">cleanup</ref>(<ref refid="class_vamp_1_1_plugin" kindref="compound">Plugin</ref><sp/>*<ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getOutputCount(<ref refid="class_vamp_1_1_plugin" kindref="compound">Plugin</ref><sp/>*<ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct___vamp_output_descriptor" kindref="compound">VampOutputDescriptor</ref><sp/>*getOutputDescriptor(<ref refid="class_vamp_1_1_plugin" kindref="compound">Plugin</ref><sp/>*<ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct___vamp_feature_list" kindref="compound">VampFeatureList</ref><sp/>*<ref refid="allegroconvert_8cpp_1abb375a84711578752877900a37a229f0" kindref="member">process</ref>(<ref refid="class_vamp_1_1_plugin" kindref="compound">Plugin</ref><sp/>*<ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*inputBuffers,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sec,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nsec);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct___vamp_feature_list" kindref="compound">VampFeatureList</ref><sp/>*getRemainingFeatures(<ref refid="class_vamp_1_1_plugin" kindref="compound">Plugin</ref><sp/>*<ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct___vamp_feature_list" kindref="compound">VampFeatureList</ref><sp/>*convertFeatures(<ref refid="class_vamp_1_1_plugin" kindref="compound">Plugin</ref><sp/>*<ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_vamp_1_1_plugin_1a448fb57dc245d47923ec9eeaf9856c5f" kindref="member">Plugin::FeatureSet</ref><sp/>&amp;features);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>maps<sp/>both<sp/>plugins<sp/>and<sp/>descriptors<sp/>to<sp/>adapters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a6c8f2c8fce370d586785353c939601d5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::map&lt;const<sp/>void<sp/>*,<sp/>Impl<sp/>*&gt;<sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a6c8f2c8fce370d586785353c939601d5" kindref="member">AdapterMap</ref>;</highlight></codeline>
<codeline lineno="117" refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a3526d127572dd900de260ac90433d062" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>AdapterMap<sp/>*<ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a3526d127572dd900de260ac90433d062" kindref="member">m_adapterMap</ref>;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl" kindref="compound">Impl</ref><sp/>*lookupAdapter(<ref refid="vamp_8h_1ad3be2952b1f4ad7d775940a6db75c79b" kindref="member">VampPluginHandle</ref>);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a93384198b121720dfa627dafe77839a6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a93384198b121720dfa627dafe77839a6" kindref="member">m_populated</ref>;</highlight></codeline>
<codeline lineno="121" refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1aeeea6028dbc6b4b96f4351a5cb79abac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct___vamp_plugin_descriptor" kindref="compound">VampPluginDescriptor</ref><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1aeeea6028dbc6b4b96f4351a5cb79abac" kindref="member">m_descriptor</ref>;</highlight></codeline>
<codeline lineno="122" refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a0edebff94969c59cc651b4517bcc6bb9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_base_1a3b6bb4bbd86affe1ca9deceea1aad4f8" kindref="member">Plugin::ParameterList</ref><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a0edebff94969c59cc651b4517bcc6bb9" kindref="member">m_parameters</ref>;</highlight></codeline>
<codeline lineno="123" refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a79666690394693c9e293a4e74960b444" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_base_1a7f66f00437b21e5f694fe02356b12f20" kindref="member">Plugin::ProgramList</ref><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a79666690394693c9e293a4e74960b444" kindref="member">m_programs</ref>;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="125" refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1afd448b66d5973d8e14ec592dabcbbd2d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::map&lt;Plugin<sp/>*,<sp/>Plugin::OutputList<sp/>*&gt;<sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1afd448b66d5973d8e14ec592dabcbbd2d" kindref="member">OutputMap</ref>;</highlight></codeline>
<codeline lineno="126" refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a193241eba6e9bcd3d4482c5f646d3822" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>OutputMap<sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a193241eba6e9bcd3d4482c5f646d3822" kindref="member">m_pluginOutputs</ref>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a4d3b0d23ae969d2895f13448d294455a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;Plugin<sp/>*,<sp/>VampFeatureList<sp/>*&gt;<sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a4d3b0d23ae969d2895f13448d294455a" kindref="member">m_fs</ref>;</highlight></codeline>
<codeline lineno="129" refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1aa9fa862a49d49fae2dc4b45bc23f5281" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;Plugin<sp/>*,<sp/>std::vector&lt;size_t&gt;<sp/>&gt;<sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1aa9fa862a49d49fae2dc4b45bc23f5281" kindref="member">m_fsizes</ref>;</highlight></codeline>
<codeline lineno="130" refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a166ff8e5df4fcd27f74bc7179e14c33e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;Plugin<sp/>*,<sp/>std::vector&lt;std::vector&lt;size_t&gt;<sp/>&gt;<sp/>&gt;<sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a166ff8e5df4fcd27f74bc7179e14c33e" kindref="member">m_fvsizes</ref>;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>resizeFS(<ref refid="class_vamp_1_1_plugin" kindref="compound">Plugin</ref><sp/>*<ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>resizeFL(<ref refid="class_vamp_1_1_plugin" kindref="compound">Plugin</ref><sp/>*<ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sz);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>resizeFV(<ref refid="class_vamp_1_1_plugin" kindref="compound">Plugin</ref><sp/>*<ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sz);</highlight></codeline>
<codeline lineno="134"><highlight class="normal">};</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="class_vamp_1_1_plugin_adapter_base_1a5dad6a9b4b170c0f284962e125ac988e" refkind="member"><highlight class="normal">PluginAdapterBase::PluginAdapterBase()</highlight></codeline>
<codeline lineno="137"><highlight class="normal">{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>m_impl<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl" kindref="compound">Impl</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="class_vamp_1_1_plugin_adapter_base_1ae39492abdca4b588a582962fdeab819d" refkind="member"><highlight class="normal">PluginAdapterBase::~PluginAdapterBase()</highlight></codeline>
<codeline lineno="142"><highlight class="normal">{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>m_impl;</highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct___vamp_plugin_descriptor" kindref="compound">VampPluginDescriptor</ref><sp/>*</highlight></codeline>
<codeline lineno="147" refid="class_vamp_1_1_plugin_adapter_base_1a7ff5c9374a8dc43f977c3707d1da45b5" refkind="member"><highlight class="normal">PluginAdapterBase::getDescriptor()</highlight></codeline>
<codeline lineno="148"><highlight class="normal">{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_impl-&gt;getDescriptor();</highlight></codeline>
<codeline lineno="150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a9b5cff59377109e63b3894920205be9a" refkind="member"><highlight class="normal">PluginAdapterBase::Impl::Impl(<ref refid="class_vamp_1_1_plugin_adapter_base" kindref="compound">PluginAdapterBase</ref><sp/>*<ref refid="lib_2expat_8h_1a938e186c531ea86ae9adf3c0a649d8fc" kindref="member">base</ref>)<sp/>:</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>m_base(base),</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>m_populated(<ref refid="ordinals_8h_1a65e9886d74aaee76545e83dd09011727" kindref="member">false</ref>)</highlight></codeline>
<codeline lineno="155"><highlight class="normal">{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG_PLUGIN_ADAPTER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PluginAdapterBase::Impl[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]::Impl&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct___vamp_plugin_descriptor" kindref="compound">VampPluginDescriptor</ref><sp/>*</highlight></codeline>
<codeline lineno="162" refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a31d6c53c6ef9851782674f3e14bf891d" refkind="member"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a31d6c53c6ef9851782674f3e14bf891d" kindref="member">PluginAdapterBase::Impl::getDescriptor</ref>()</highlight></codeline>
<codeline lineno="163"><highlight class="normal">{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG_PLUGIN_ADAPTER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PluginAdapterBase::Impl[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]::getDescriptor&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a93384198b121720dfa627dafe77839a6" kindref="member">m_populated</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;<ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1aeeea6028dbc6b4b96f4351a5cb79abac" kindref="member">m_descriptor</ref>;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin" kindref="compound">Plugin</ref><sp/>*<ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref><sp/>=<sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1ac0372df58956b4bf99a9ec070b11dea4" kindref="member">m_base</ref>-&gt;<ref refid="class_vamp_1_1_plugin_adapter_base_1a9116adb9b7a426f4f0ded15e45a5531b" kindref="member">createPlugin</ref>(48000);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!plugin)<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PluginAdapterBase::Impl::getDescriptor:<sp/>Failed<sp/>to<sp/>create<sp/>plugin&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(plugin-&gt;<ref refid="class_vamp_1_1_plugin_base_1a8fd2c48291c64b790f0efb8948508dcf" kindref="member">getVampApiVersion</ref>()<sp/>!=<sp/><ref refid="vamp_8h_1a6d6c8c755dbabf161f72712e0e2143c7" kindref="member">VAMP_API_VERSION</ref>)<sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Vamp::PluginAdapterBase::Impl::getDescriptor:<sp/>ERROR:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;API<sp/>version<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>plugin-&gt;<ref refid="class_vamp_1_1_plugin_base_1a8fd2c48291c64b790f0efb8948508dcf" kindref="member">getVampApiVersion</ref>()</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>for\nplugin<sp/>\&quot;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>plugin-&gt;<ref refid="class_vamp_1_1_plugin_base_1a0d1947bb05097718af83eefe7a1910cd" kindref="member">getIdentifier</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;differs<sp/>from<sp/>version<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/><ref refid="vamp_8h_1a6d6c8c755dbabf161f72712e0e2143c7" kindref="member">VAMP_API_VERSION</ref><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>for<sp/>adapter.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;This<sp/>plugin<sp/>is<sp/>probably<sp/>linked<sp/>against<sp/>a<sp/>different<sp/>version<sp/>of<sp/>the<sp/>Vamp<sp/>SDK\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;from<sp/>the<sp/>version<sp/>it<sp/>was<sp/>compiled<sp/>with.<sp/><sp/>It<sp/>will<sp/>need<sp/>to<sp/>be<sp/>re-linked<sp/>correctly\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;before<sp/>it<sp/>can<sp/>be<sp/>used.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a0edebff94969c59cc651b4517bcc6bb9" kindref="member">m_parameters</ref><sp/>=<sp/>plugin-&gt;<ref refid="class_vamp_1_1_plugin_base_1aac3e49b3b66cacfbb768dfdf07444f21" kindref="member">getParameterDescriptors</ref>();</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a79666690394693c9e293a4e74960b444" kindref="member">m_programs</ref><sp/>=<sp/>plugin-&gt;<ref refid="class_vamp_1_1_plugin_base_1abb307c60bdb981d5f5af50c3c4ae84af" kindref="member">getPrograms</ref>();</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1aeeea6028dbc6b4b96f4351a5cb79abac" kindref="member">m_descriptor</ref>.<ref refid="struct___vamp_plugin_descriptor_1ab6c87760e87ddaa9ac3491bccaaa28c2" kindref="member">vampApiVersion</ref><sp/>=<sp/>plugin-&gt;<ref refid="class_vamp_1_1_plugin_base_1a8fd2c48291c64b790f0efb8948508dcf" kindref="member">getVampApiVersion</ref>();</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1aeeea6028dbc6b4b96f4351a5cb79abac" kindref="member">m_descriptor</ref>.<ref refid="struct___vamp_plugin_descriptor_1a4915ec8276749cb505c01d25a6d02219" kindref="member">identifier</ref><sp/>=<sp/><ref refid="strdup_8c_1a8c67487a889774f479e3dc226b4f27df" kindref="member">strdup</ref>(plugin-&gt;<ref refid="class_vamp_1_1_plugin_base_1a0d1947bb05097718af83eefe7a1910cd" kindref="member">getIdentifier</ref>().c_str());</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1aeeea6028dbc6b4b96f4351a5cb79abac" kindref="member">m_descriptor</ref>.<ref refid="struct___vamp_plugin_descriptor_1a9dd5a0190e4d453ff36b5acb7000b150" kindref="member">name</ref><sp/>=<sp/><ref refid="strdup_8c_1a8c67487a889774f479e3dc226b4f27df" kindref="member">strdup</ref>(plugin-&gt;<ref refid="class_vamp_1_1_plugin_base_1ada907f5fa10e503005bdf445f03f7adf" kindref="member">getName</ref>().c_str());</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1aeeea6028dbc6b4b96f4351a5cb79abac" kindref="member">m_descriptor</ref>.<ref refid="struct___vamp_plugin_descriptor_1a9ff8050f92f1a04a68bb34a9d368295e" kindref="member">description</ref><sp/>=<sp/><ref refid="strdup_8c_1a8c67487a889774f479e3dc226b4f27df" kindref="member">strdup</ref>(plugin-&gt;<ref refid="class_vamp_1_1_plugin_base_1ab210db7ce8f2eaa6cfddf2c7e64555ad" kindref="member">getDescription</ref>().c_str());</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1aeeea6028dbc6b4b96f4351a5cb79abac" kindref="member">m_descriptor</ref>.<ref refid="struct___vamp_plugin_descriptor_1a4dca3d57331802964716edfa80580c9b" kindref="member">maker</ref><sp/>=<sp/><ref refid="strdup_8c_1a8c67487a889774f479e3dc226b4f27df" kindref="member">strdup</ref>(plugin-&gt;<ref refid="class_vamp_1_1_plugin_base_1a6d54bf690c421c7865dccdfd0dda23a8" kindref="member">getMaker</ref>().c_str());</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1aeeea6028dbc6b4b96f4351a5cb79abac" kindref="member">m_descriptor</ref>.<ref refid="struct___vamp_plugin_descriptor_1a04427c420d9252c7796c0bf5101345ae" kindref="member">pluginVersion</ref><sp/>=<sp/>plugin-&gt;<ref refid="class_vamp_1_1_plugin_base_1a315c884db72db5cef0891eaccb6d12cc" kindref="member">getPluginVersion</ref>();</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1aeeea6028dbc6b4b96f4351a5cb79abac" kindref="member">m_descriptor</ref>.<ref refid="struct___vamp_plugin_descriptor_1ae704bba384af0de056a26da1b13ee521" kindref="member">copyright</ref><sp/>=<sp/><ref refid="strdup_8c_1a8c67487a889774f479e3dc226b4f27df" kindref="member">strdup</ref>(plugin-&gt;<ref refid="class_vamp_1_1_plugin_base_1ae20b78e081f13a5d71b17e89e05d48e2" kindref="member">getCopyright</ref>().c_str());</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1aeeea6028dbc6b4b96f4351a5cb79abac" kindref="member">m_descriptor</ref>.<ref refid="struct___vamp_plugin_descriptor_1ae6271dc3ea0cea959c84a64185492cab" kindref="member">parameterCount</ref><sp/>=<sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a0edebff94969c59cc651b4517bcc6bb9" kindref="member">m_parameters</ref>.size();</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1aeeea6028dbc6b4b96f4351a5cb79abac" kindref="member">m_descriptor</ref>.<ref refid="struct___vamp_plugin_descriptor_1a64d614862604c31d6b84c49005f51913" kindref="member">parameters</ref><sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct___vamp_parameter_descriptor" kindref="compound">VampParameterDescriptor</ref><sp/>**)</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>malloc(<ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a0edebff94969c59cc651b4517bcc6bb9" kindref="member">m_parameters</ref>.size()<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="vamp_8h_1ae26a9d54a92f1c083a1b209a25a8e44e" kindref="member">VampParameterDescriptor</ref>));</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a0edebff94969c59cc651b4517bcc6bb9" kindref="member">m_parameters</ref>.size();<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct___vamp_parameter_descriptor" kindref="compound">VampParameterDescriptor</ref><sp/>*<ref refid="_export_p_c_m_8cpp_1a717c8108dd6ce1ecc369d9bac2f471f2" kindref="member">desc</ref><sp/>=<sp/>(<ref refid="struct___vamp_parameter_descriptor" kindref="compound">VampParameterDescriptor</ref><sp/>*)</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct___vamp_parameter_descriptor" kindref="compound">VampParameterDescriptor</ref>));</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc-&gt;<ref refid="struct___vamp_parameter_descriptor_1a26d74afd6a3341a673f15955031845ab" kindref="member">identifier</ref><sp/>=<sp/><ref refid="strdup_8c_1a8c67487a889774f479e3dc226b4f27df" kindref="member">strdup</ref>(<ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a0edebff94969c59cc651b4517bcc6bb9" kindref="member">m_parameters</ref>[i].identifier.c_str());</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc-&gt;<ref refid="struct___vamp_parameter_descriptor_1abba810bce9656f6002777f6c3f655957" kindref="member">name</ref><sp/>=<sp/><ref refid="strdup_8c_1a8c67487a889774f479e3dc226b4f27df" kindref="member">strdup</ref>(<ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a0edebff94969c59cc651b4517bcc6bb9" kindref="member">m_parameters</ref>[i].<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>.c_str());</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc-&gt;<ref refid="struct___vamp_parameter_descriptor_1a95489272d6cf5a5b487e949da8e4fac6" kindref="member">description</ref><sp/>=<sp/><ref refid="strdup_8c_1a8c67487a889774f479e3dc226b4f27df" kindref="member">strdup</ref>(<ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a0edebff94969c59cc651b4517bcc6bb9" kindref="member">m_parameters</ref>[i].description.c_str());</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc-&gt;<ref refid="struct___vamp_parameter_descriptor_1a8ca235f816b56dc99125e010eee08fc7" kindref="member">unit</ref><sp/>=<sp/><ref refid="strdup_8c_1a8c67487a889774f479e3dc226b4f27df" kindref="member">strdup</ref>(<ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a0edebff94969c59cc651b4517bcc6bb9" kindref="member">m_parameters</ref>[i].unit.c_str());</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc-&gt;<ref refid="struct___vamp_parameter_descriptor_1ab59c84f0bbe0d4d0c578d893c087b0db" kindref="member">minValue</ref><sp/>=<sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a0edebff94969c59cc651b4517bcc6bb9" kindref="member">m_parameters</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].minValue;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc-&gt;<ref refid="struct___vamp_parameter_descriptor_1a6e7646babdb265c4abfc107ba4350d80" kindref="member">maxValue</ref><sp/>=<sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a0edebff94969c59cc651b4517bcc6bb9" kindref="member">m_parameters</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].maxValue;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc-&gt;<ref refid="struct___vamp_parameter_descriptor_1a3d37f986ee152ab55feb9902b35f7aca" kindref="member">defaultValue</ref><sp/>=<sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a0edebff94969c59cc651b4517bcc6bb9" kindref="member">m_parameters</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].defaultValue;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc-&gt;<ref refid="struct___vamp_parameter_descriptor_1a3f41e3b6b69c7a95ff0ce8625794f83a" kindref="member">isQuantized</ref><sp/>=<sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a0edebff94969c59cc651b4517bcc6bb9" kindref="member">m_parameters</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].isQuantized;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc-&gt;<ref refid="struct___vamp_parameter_descriptor_1a68c91fd3fc0b0b3617c2d343fe32d0e5" kindref="member">quantizeStep</ref><sp/>=<sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a0edebff94969c59cc651b4517bcc6bb9" kindref="member">m_parameters</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].quantizeStep;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc-&gt;<ref refid="struct___vamp_parameter_descriptor_1a188883325ab1e4a898e3dc53a8f88f9d" kindref="member">valueNames</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(desc-&gt;<ref refid="struct___vamp_parameter_descriptor_1a3f41e3b6b69c7a95ff0ce8625794f83a" kindref="member">isQuantized</ref><sp/>&amp;&amp;<sp/>!<ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a0edebff94969c59cc651b4517bcc6bb9" kindref="member">m_parameters</ref>[i].valueNames.empty())<sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc-&gt;<ref refid="struct___vamp_parameter_descriptor_1a188883325ab1e4a898e3dc53a8f88f9d" kindref="member">valueNames</ref><sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**)</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>malloc((<ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a0edebff94969c59cc651b4517bcc6bb9" kindref="member">m_parameters</ref>[i].valueNames.size()+1)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*));</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a0edebff94969c59cc651b4517bcc6bb9" kindref="member">m_parameters</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].valueNames.size();<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc-&gt;<ref refid="struct___vamp_parameter_descriptor_1a188883325ab1e4a898e3dc53a8f88f9d" kindref="member">valueNames</ref>[j]<sp/>=<sp/><ref refid="strdup_8c_1a8c67487a889774f479e3dc226b4f27df" kindref="member">strdup</ref>(<ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a0edebff94969c59cc651b4517bcc6bb9" kindref="member">m_parameters</ref>[i].valueNames[j].c_str());</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc-&gt;<ref refid="struct___vamp_parameter_descriptor_1a188883325ab1e4a898e3dc53a8f88f9d" kindref="member">valueNames</ref>[<ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a0edebff94969c59cc651b4517bcc6bb9" kindref="member">m_parameters</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].valueNames.size()]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1aeeea6028dbc6b4b96f4351a5cb79abac" kindref="member">m_descriptor</ref>.<ref refid="struct___vamp_plugin_descriptor_1a64d614862604c31d6b84c49005f51913" kindref="member">parameters</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/><ref refid="_export_p_c_m_8cpp_1a717c8108dd6ce1ecc369d9bac2f471f2" kindref="member">desc</ref>;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1aeeea6028dbc6b4b96f4351a5cb79abac" kindref="member">m_descriptor</ref>.<ref refid="struct___vamp_plugin_descriptor_1a1962666aa173e7a9a2c30dc82e4b2e00" kindref="member">programCount</ref><sp/>=<sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a79666690394693c9e293a4e74960b444" kindref="member">m_programs</ref>.size();</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1aeeea6028dbc6b4b96f4351a5cb79abac" kindref="member">m_descriptor</ref>.<ref refid="struct___vamp_plugin_descriptor_1ad488470c582d8472d86455889d71c5ec" kindref="member">programs</ref><sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**)</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>malloc(<ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a79666690394693c9e293a4e74960b444" kindref="member">m_programs</ref>.size()<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*));</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a79666690394693c9e293a4e74960b444" kindref="member">m_programs</ref>.size();<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1aeeea6028dbc6b4b96f4351a5cb79abac" kindref="member">m_descriptor</ref>.<ref refid="struct___vamp_plugin_descriptor_1ad488470c582d8472d86455889d71c5ec" kindref="member">programs</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/><ref refid="strdup_8c_1a8c67487a889774f479e3dc226b4f27df" kindref="member">strdup</ref>(<ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a79666690394693c9e293a4e74960b444" kindref="member">m_programs</ref>[i].c_str());</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(plugin-&gt;<ref refid="class_vamp_1_1_plugin_1adfbdde456a19b4751dfa65dfa72e5458" kindref="member">getInputDomain</ref>()<sp/>==<sp/><ref refid="class_vamp_1_1_plugin_1a39cb7649d6dcc20e4cb1640cd55907bcaa30e7877ab33f76acbdca28607e6ab53" kindref="member">Plugin::FrequencyDomain</ref>)<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1aeeea6028dbc6b4b96f4351a5cb79abac" kindref="member">m_descriptor</ref>.<ref refid="struct___vamp_plugin_descriptor_1affc4d1796da7ced2c0cbb2cc2c4a22f4" kindref="member">inputDomain</ref><sp/>=<sp/><ref refid="vamp_8h_1ab107386a5f042feddf6446bea23bb765aee0c1c0d429276f071b8c0730b7bd87d" kindref="member">vampFrequencyDomain</ref>;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1aeeea6028dbc6b4b96f4351a5cb79abac" kindref="member">m_descriptor</ref>.<ref refid="struct___vamp_plugin_descriptor_1affc4d1796da7ced2c0cbb2cc2c4a22f4" kindref="member">inputDomain</ref><sp/>=<sp/><ref refid="vamp_8h_1ab107386a5f042feddf6446bea23bb765ae3dbb77ff3e8f292966fd3748888e1a1" kindref="member">vampTimeDomain</ref>;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1aeeea6028dbc6b4b96f4351a5cb79abac" kindref="member">m_descriptor</ref>.<ref refid="struct___vamp_plugin_descriptor_1aa5fa3dfd0b85668a658096de5271c305" kindref="member">instantiate</ref><sp/>=<sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a8cf9e01074559a6b23064d920629dd55" kindref="member">vampInstantiate</ref>;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1aeeea6028dbc6b4b96f4351a5cb79abac" kindref="member">m_descriptor</ref>.<ref refid="struct___vamp_plugin_descriptor_1a70974d8d28534c006af87c4470d12b69" kindref="member">cleanup</ref><sp/>=<sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a198dddb40f4fedc71f8ec45088d22d93" kindref="member">vampCleanup</ref>;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1aeeea6028dbc6b4b96f4351a5cb79abac" kindref="member">m_descriptor</ref>.<ref refid="struct___vamp_plugin_descriptor_1a7c26381e66fc2b1fccbe9a0e5a0ff2be" kindref="member">initialise</ref><sp/>=<sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a210cd61fc3fd8f66eda087a6d726cd2b" kindref="member">vampInitialise</ref>;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1aeeea6028dbc6b4b96f4351a5cb79abac" kindref="member">m_descriptor</ref>.<ref refid="struct___vamp_plugin_descriptor_1a0bb0a037c2cb6baf3abac6b03d4a0009" kindref="member">reset</ref><sp/>=<sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a9dc6a2cc51118525c50583e2f7ac339a" kindref="member">vampReset</ref>;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1aeeea6028dbc6b4b96f4351a5cb79abac" kindref="member">m_descriptor</ref>.<ref refid="struct___vamp_plugin_descriptor_1a153dc1fa458602a408d8ae909e4b9780" kindref="member">getParameter</ref><sp/>=<sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1ae3791f409c626f856133d1ed473dbcdd" kindref="member">vampGetParameter</ref>;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1aeeea6028dbc6b4b96f4351a5cb79abac" kindref="member">m_descriptor</ref>.<ref refid="struct___vamp_plugin_descriptor_1abe2500934c8aae78d0ecd6b4541d8946" kindref="member">setParameter</ref><sp/>=<sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a96a4f1c8359479d41e9b9c3438b561a6" kindref="member">vampSetParameter</ref>;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1aeeea6028dbc6b4b96f4351a5cb79abac" kindref="member">m_descriptor</ref>.<ref refid="struct___vamp_plugin_descriptor_1a2d13712798238db503005808b736cb18" kindref="member">getCurrentProgram</ref><sp/>=<sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a62824538d09f38a060bcc593f79ca8a1" kindref="member">vampGetCurrentProgram</ref>;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1aeeea6028dbc6b4b96f4351a5cb79abac" kindref="member">m_descriptor</ref>.<ref refid="struct___vamp_plugin_descriptor_1a688596d8abcdd638250799314ef9cb19" kindref="member">selectProgram</ref><sp/>=<sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a124b1ee65cbb733004ae96f4fa001246" kindref="member">vampSelectProgram</ref>;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1aeeea6028dbc6b4b96f4351a5cb79abac" kindref="member">m_descriptor</ref>.<ref refid="struct___vamp_plugin_descriptor_1ae8efb5dec4a16b74fbb32ef36fc90e09" kindref="member">getPreferredStepSize</ref><sp/>=<sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1aa6e7c06690fed8d7af284be34a590b4b" kindref="member">vampGetPreferredStepSize</ref>;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1aeeea6028dbc6b4b96f4351a5cb79abac" kindref="member">m_descriptor</ref>.<ref refid="struct___vamp_plugin_descriptor_1a3052e7f14ad1dfc3000b3b91dddf8c61" kindref="member">getPreferredBlockSize</ref><sp/>=<sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a46d39ad29bb4c689e21379e1eb387ace" kindref="member">vampGetPreferredBlockSize</ref>;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1aeeea6028dbc6b4b96f4351a5cb79abac" kindref="member">m_descriptor</ref>.<ref refid="struct___vamp_plugin_descriptor_1a8a9be1cf9e70d46d20cac1b0049149cd" kindref="member">getMinChannelCount</ref><sp/>=<sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a9825e946f36f8838ec3d4cb838c00220" kindref="member">vampGetMinChannelCount</ref>;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1aeeea6028dbc6b4b96f4351a5cb79abac" kindref="member">m_descriptor</ref>.<ref refid="struct___vamp_plugin_descriptor_1af34bce679c821c38dbd212a0ef1bf867" kindref="member">getMaxChannelCount</ref><sp/>=<sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a16bfdb3fc7b683a170b01bf92a49dee2" kindref="member">vampGetMaxChannelCount</ref>;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1aeeea6028dbc6b4b96f4351a5cb79abac" kindref="member">m_descriptor</ref>.<ref refid="struct___vamp_plugin_descriptor_1a71825defc0052a8ac307e2c333c4b935" kindref="member">getOutputCount</ref><sp/>=<sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1adebb9f604929cde924e783997e9efda3" kindref="member">vampGetOutputCount</ref>;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1aeeea6028dbc6b4b96f4351a5cb79abac" kindref="member">m_descriptor</ref>.<ref refid="struct___vamp_plugin_descriptor_1a033116c818aafe70e7fd15d240234754" kindref="member">getOutputDescriptor</ref><sp/>=<sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a5118f9af094598b9f8c8a295a5e2290c" kindref="member">vampGetOutputDescriptor</ref>;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1aeeea6028dbc6b4b96f4351a5cb79abac" kindref="member">m_descriptor</ref>.<ref refid="struct___vamp_plugin_descriptor_1a69f9fef2ed20a88985c960de4428cecb" kindref="member">releaseOutputDescriptor</ref><sp/>=<sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1aff063ab7b4dfb0d13883e7ce19cf93a3" kindref="member">vampReleaseOutputDescriptor</ref>;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1aeeea6028dbc6b4b96f4351a5cb79abac" kindref="member">m_descriptor</ref>.<ref refid="struct___vamp_plugin_descriptor_1aff1c25291c967cb2f198b900e551a7eb" kindref="member">process</ref><sp/>=<sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1abc8f37b80648a0a7108a6e0ebaf45525" kindref="member">vampProcess</ref>;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1aeeea6028dbc6b4b96f4351a5cb79abac" kindref="member">m_descriptor</ref>.<ref refid="struct___vamp_plugin_descriptor_1ad897b43458161a43cf6085198217d197" kindref="member">getRemainingFeatures</ref><sp/>=<sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1af6af04fcb927463cfe1f85e936935767" kindref="member">vampGetRemainingFeatures</ref>;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1aeeea6028dbc6b4b96f4351a5cb79abac" kindref="member">m_descriptor</ref>.<ref refid="struct___vamp_plugin_descriptor_1ab4ed73ea986582ab1b7e6c44149a982a" kindref="member">releaseFeatureSet</ref><sp/>=<sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1ab0bc48dbdb1396410690d1b190522a95" kindref="member">vampReleaseFeatureSet</ref>;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a3526d127572dd900de260ac90433d062" kindref="member">m_adapterMap</ref>)<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a3526d127572dd900de260ac90433d062" kindref="member">m_adapterMap</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a6c8f2c8fce370d586785353c939601d5" kindref="member">AdapterMap</ref>;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>(*m_adapterMap)[&amp;<ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1aeeea6028dbc6b4b96f4351a5cb79abac" kindref="member">m_descriptor</ref>]<sp/>=<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a93384198b121720dfa627dafe77839a6" kindref="member">m_populated</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;<ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1aeeea6028dbc6b4b96f4351a5cb79abac" kindref="member">m_descriptor</ref>;</highlight></codeline>
<codeline lineno="273"><highlight class="normal">}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275" refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a75b00d5c8012db240fc410d18fd1235a" refkind="member"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a75b00d5c8012db240fc410d18fd1235a" kindref="member">PluginAdapterBase::Impl::~Impl</ref>()</highlight></codeline>
<codeline lineno="276"><highlight class="normal">{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG_PLUGIN_ADAPTER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PluginAdapterBase::Impl[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]::~Impl&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a93384198b121720dfa627dafe77839a6" kindref="member">m_populated</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>free((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1aeeea6028dbc6b4b96f4351a5cb79abac" kindref="member">m_descriptor</ref>.<ref refid="struct___vamp_plugin_descriptor_1a4915ec8276749cb505c01d25a6d02219" kindref="member">identifier</ref>);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>free((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1aeeea6028dbc6b4b96f4351a5cb79abac" kindref="member">m_descriptor</ref>.<ref refid="struct___vamp_plugin_descriptor_1a9dd5a0190e4d453ff36b5acb7000b150" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>free((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1aeeea6028dbc6b4b96f4351a5cb79abac" kindref="member">m_descriptor</ref>.<ref refid="struct___vamp_plugin_descriptor_1a9ff8050f92f1a04a68bb34a9d368295e" kindref="member">description</ref>);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>free((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1aeeea6028dbc6b4b96f4351a5cb79abac" kindref="member">m_descriptor</ref>.<ref refid="struct___vamp_plugin_descriptor_1a4dca3d57331802964716edfa80580c9b" kindref="member">maker</ref>);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>free((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1aeeea6028dbc6b4b96f4351a5cb79abac" kindref="member">m_descriptor</ref>.<ref refid="struct___vamp_plugin_descriptor_1ae704bba384af0de056a26da1b13ee521" kindref="member">copyright</ref>);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1aeeea6028dbc6b4b96f4351a5cb79abac" kindref="member">m_descriptor</ref>.<ref refid="struct___vamp_plugin_descriptor_1ae6271dc3ea0cea959c84a64185492cab" kindref="member">parameterCount</ref>;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct___vamp_parameter_descriptor" kindref="compound">VampParameterDescriptor</ref><sp/>*<ref refid="_export_p_c_m_8cpp_1a717c8108dd6ce1ecc369d9bac2f471f2" kindref="member">desc</ref><sp/>=<sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1aeeea6028dbc6b4b96f4351a5cb79abac" kindref="member">m_descriptor</ref>.<ref refid="struct___vamp_plugin_descriptor_1a64d614862604c31d6b84c49005f51913" kindref="member">parameters</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)desc-&gt;<ref refid="struct___vamp_parameter_descriptor_1a26d74afd6a3341a673f15955031845ab" kindref="member">identifier</ref>);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)desc-&gt;<ref refid="struct___vamp_parameter_descriptor_1abba810bce9656f6002777f6c3f655957" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)desc-&gt;<ref refid="struct___vamp_parameter_descriptor_1a95489272d6cf5a5b487e949da8e4fac6" kindref="member">description</ref>);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)desc-&gt;<ref refid="struct___vamp_parameter_descriptor_1a8ca235f816b56dc99125e010eee08fc7" kindref="member">unit</ref>);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(desc-&gt;<ref refid="struct___vamp_parameter_descriptor_1a188883325ab1e4a898e3dc53a8f88f9d" kindref="member">valueNames</ref>)<sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>desc-&gt;<ref refid="struct___vamp_parameter_descriptor_1a188883325ab1e4a898e3dc53a8f88f9d" kindref="member">valueNames</ref>[j];<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)desc-&gt;<ref refid="struct___vamp_parameter_descriptor_1a188883325ab1e4a898e3dc53a8f88f9d" kindref="member">valueNames</ref>[j]);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)desc-&gt;<ref refid="struct___vamp_parameter_descriptor_1a188883325ab1e4a898e3dc53a8f88f9d" kindref="member">valueNames</ref>);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>free((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1aeeea6028dbc6b4b96f4351a5cb79abac" kindref="member">m_descriptor</ref>.<ref refid="struct___vamp_plugin_descriptor_1a64d614862604c31d6b84c49005f51913" kindref="member">parameters</ref>);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1aeeea6028dbc6b4b96f4351a5cb79abac" kindref="member">m_descriptor</ref>.<ref refid="struct___vamp_plugin_descriptor_1a1962666aa173e7a9a2c30dc82e4b2e00" kindref="member">programCount</ref>;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1aeeea6028dbc6b4b96f4351a5cb79abac" kindref="member">m_descriptor</ref>.<ref refid="struct___vamp_plugin_descriptor_1ad488470c582d8472d86455889d71c5ec" kindref="member">programs</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>free((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1aeeea6028dbc6b4b96f4351a5cb79abac" kindref="member">m_descriptor</ref>.<ref refid="struct___vamp_plugin_descriptor_1ad488470c582d8472d86455889d71c5ec" kindref="member">programs</ref>);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a3526d127572dd900de260ac90433d062" kindref="member">m_adapterMap</ref>)<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a3526d127572dd900de260ac90433d062" kindref="member">m_adapterMap</ref>-&gt;erase(&amp;<ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1aeeea6028dbc6b4b96f4351a5cb79abac" kindref="member">m_descriptor</ref>);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a3526d127572dd900de260ac90433d062" kindref="member">m_adapterMap</ref>-&gt;empty())<sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a3526d127572dd900de260ac90433d062" kindref="member">m_adapterMap</ref>;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a3526d127572dd900de260ac90433d062" kindref="member">m_adapterMap</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal">}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl" kindref="compound">PluginAdapterBase::Impl</ref><sp/>*</highlight></codeline>
<codeline lineno="321" refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a186446e143fb2bb237c952a14db6ceff" refkind="member"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a186446e143fb2bb237c952a14db6ceff" kindref="member">PluginAdapterBase::Impl::lookupAdapter</ref>(<ref refid="vamp_8h_1ad3be2952b1f4ad7d775940a6db75c79b" kindref="member">VampPluginHandle</ref><sp/>handle)</highlight></codeline>
<codeline lineno="322"><highlight class="normal">{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG_PLUGIN_ADAPTER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PluginAdapterBase::Impl::lookupAdapter(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>handle<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a3526d127572dd900de260ac90433d062" kindref="member">m_adapterMap</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>AdapterMap::const_iterator<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a3526d127572dd900de260ac90433d062" kindref="member">m_adapterMap</ref>-&gt;find(handle);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a3526d127572dd900de260ac90433d062" kindref="member">m_adapterMap</ref>-&gt;end())<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i-&gt;second;</highlight></codeline>
<codeline lineno="331"><highlight class="normal">}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><ref refid="vamp_8h_1ad3be2952b1f4ad7d775940a6db75c79b" kindref="member">VampPluginHandle</ref></highlight></codeline>
<codeline lineno="334" refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a8cf9e01074559a6b23064d920629dd55" refkind="member"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a8cf9e01074559a6b23064d920629dd55" kindref="member">PluginAdapterBase::Impl::vampInstantiate</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct___vamp_plugin_descriptor" kindref="compound">VampPluginDescriptor</ref><sp/>*<ref refid="_export_p_c_m_8cpp_1a717c8108dd6ce1ecc369d9bac2f471f2" kindref="member">desc</ref>,</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>inputSampleRate)</highlight></codeline>
<codeline lineno="336"><highlight class="normal">{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG_PLUGIN_ADAPTER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PluginAdapterBase::Impl::vampInstantiate(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>desc<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a3526d127572dd900de260ac90433d062" kindref="member">m_adapterMap</ref>)<sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a3526d127572dd900de260ac90433d062" kindref="member">m_adapterMap</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a6c8f2c8fce370d586785353c939601d5" kindref="member">AdapterMap</ref>();</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a3526d127572dd900de260ac90433d062" kindref="member">m_adapterMap</ref>-&gt;find(desc)<sp/>==<sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a3526d127572dd900de260ac90433d062" kindref="member">m_adapterMap</ref>-&gt;end())<sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;WARNING:<sp/>PluginAdapterBase::Impl::vampInstantiate:<sp/>Descriptor<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>desc<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>not<sp/>in<sp/>adapter<sp/>map&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl" kindref="compound">Impl</ref><sp/>*adapter<sp/>=<sp/>(*m_adapterMap)[<ref refid="_export_p_c_m_8cpp_1a717c8108dd6ce1ecc369d9bac2f471f2" kindref="member">desc</ref>];</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(desc<sp/>!=<sp/>&amp;adapter-&gt;<ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1aeeea6028dbc6b4b96f4351a5cb79abac" kindref="member">m_descriptor</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin" kindref="compound">Plugin</ref><sp/>*<ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref><sp/>=<sp/>adapter-&gt;<ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1ac0372df58956b4bf99a9ec070b11dea4" kindref="member">m_base</ref>-&gt;<ref refid="class_vamp_1_1_plugin_adapter_base_1a9116adb9b7a426f4f0ded15e45a5531b" kindref="member">createPlugin</ref>(inputSampleRate);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(plugin)<sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*m_adapterMap)[<ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>]<sp/>=<sp/>adapter;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG_PLUGIN_ADAPTER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PluginAdapterBase::Impl::vampInstantiate(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>desc<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;):<sp/>returning<sp/>handle<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>plugin<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>;</highlight></codeline>
<codeline lineno="363"><highlight class="normal">}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366" refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a198dddb40f4fedc71f8ec45088d22d93" refkind="member"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a198dddb40f4fedc71f8ec45088d22d93" kindref="member">PluginAdapterBase::Impl::vampCleanup</ref>(<ref refid="vamp_8h_1ad3be2952b1f4ad7d775940a6db75c79b" kindref="member">VampPluginHandle</ref><sp/>handle)</highlight></codeline>
<codeline lineno="367"><highlight class="normal">{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG_PLUGIN_ADAPTER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PluginAdapterBase::Impl::vampCleanup(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>handle<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl" kindref="compound">Impl</ref><sp/>*adapter<sp/>=<sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a186446e143fb2bb237c952a14db6ceff" kindref="member">lookupAdapter</ref>(handle);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!adapter)<sp/>{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>((<ref refid="class_vamp_1_1_plugin" kindref="compound">Plugin</ref><sp/>*)handle);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>adapter-&gt;<ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1ab4199ab4a8ba40098aac387032c52aa4" kindref="member">cleanup</ref>(((<ref refid="class_vamp_1_1_plugin" kindref="compound">Plugin</ref><sp/>*)handle));</highlight></codeline>
<codeline lineno="378"><highlight class="normal">}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381" refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a210cd61fc3fd8f66eda087a6d726cd2b" refkind="member"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a210cd61fc3fd8f66eda087a6d726cd2b" kindref="member">PluginAdapterBase::Impl::vampInitialise</ref>(<ref refid="vamp_8h_1ad3be2952b1f4ad7d775940a6db75c79b" kindref="member">VampPluginHandle</ref><sp/>handle,</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channels,</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stepSize,</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blockSize)</highlight></codeline>
<codeline lineno="385"><highlight class="normal">{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG_PLUGIN_ADAPTER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PluginAdapterBase::Impl::vampInitialise(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>handle<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>channels<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>stepSize<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>blockSize<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl" kindref="compound">Impl</ref><sp/>*adapter<sp/>=<sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a186446e143fb2bb237c952a14db6ceff" kindref="member">lookupAdapter</ref>(handle);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!adapter)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>((<ref refid="class_vamp_1_1_plugin" kindref="compound">Plugin</ref><sp/>*)handle)-&gt;initialise(channels,<sp/>stepSize,<sp/>blockSize);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>adapter-&gt;<ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a8d38dad9a1161e3b16c6f14c0fdab166" kindref="member">markOutputsChanged</ref>((<ref refid="class_vamp_1_1_plugin" kindref="compound">Plugin</ref><sp/>*)handle);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result<sp/>?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="395"><highlight class="normal">}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398" refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a9dc6a2cc51118525c50583e2f7ac339a" refkind="member"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a9dc6a2cc51118525c50583e2f7ac339a" kindref="member">PluginAdapterBase::Impl::vampReset</ref>(<ref refid="vamp_8h_1ad3be2952b1f4ad7d775940a6db75c79b" kindref="member">VampPluginHandle</ref><sp/>handle)<sp/></highlight></codeline>
<codeline lineno="399"><highlight class="normal">{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG_PLUGIN_ADAPTER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PluginAdapterBase::Impl::vampReset(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>handle<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>((<ref refid="class_vamp_1_1_plugin" kindref="compound">Plugin</ref><sp/>*)handle)-&gt;reset();</highlight></codeline>
<codeline lineno="405"><highlight class="normal">}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408" refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1ae3791f409c626f856133d1ed473dbcdd" refkind="member"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1ae3791f409c626f856133d1ed473dbcdd" kindref="member">PluginAdapterBase::Impl::vampGetParameter</ref>(<ref refid="vamp_8h_1ad3be2952b1f4ad7d775940a6db75c79b" kindref="member">VampPluginHandle</ref><sp/>handle,</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>param)<sp/></highlight></codeline>
<codeline lineno="410"><highlight class="normal">{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG_PLUGIN_ADAPTER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PluginAdapterBase::Impl::vampGetParameter(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>handle<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>param<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl" kindref="compound">Impl</ref><sp/>*adapter<sp/>=<sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a186446e143fb2bb237c952a14db6ceff" kindref="member">lookupAdapter</ref>(handle);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!adapter)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_base_1a3b6bb4bbd86affe1ca9deceea1aad4f8" kindref="member">Plugin::ParameterList</ref><sp/>&amp;list<sp/>=<sp/>adapter-&gt;<ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a0edebff94969c59cc651b4517bcc6bb9" kindref="member">m_parameters</ref>;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((<ref refid="class_vamp_1_1_plugin" kindref="compound">Plugin</ref><sp/>*)handle)-&gt;getParameter(list[param].identifier);</highlight></codeline>
<codeline lineno="419"><highlight class="normal">}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422" refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a96a4f1c8359479d41e9b9c3438b561a6" refkind="member"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a96a4f1c8359479d41e9b9c3438b561a6" kindref="member">PluginAdapterBase::Impl::vampSetParameter</ref>(<ref refid="vamp_8h_1ad3be2952b1f4ad7d775940a6db75c79b" kindref="member">VampPluginHandle</ref><sp/>handle,</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>param,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>)</highlight></codeline>
<codeline lineno="424"><highlight class="normal">{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG_PLUGIN_ADAPTER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PluginAdapterBase::Impl::vampSetParameter(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>handle<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>param<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>value<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl" kindref="compound">Impl</ref><sp/>*adapter<sp/>=<sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a186446e143fb2bb237c952a14db6ceff" kindref="member">lookupAdapter</ref>(handle);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!adapter)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_base_1a3b6bb4bbd86affe1ca9deceea1aad4f8" kindref="member">Plugin::ParameterList</ref><sp/>&amp;list<sp/>=<sp/>adapter-&gt;<ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a0edebff94969c59cc651b4517bcc6bb9" kindref="member">m_parameters</ref>;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>((<ref refid="class_vamp_1_1_plugin" kindref="compound">Plugin</ref><sp/>*)handle)-&gt;setParameter(list[param].identifier,<sp/>value);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>adapter-&gt;<ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a8d38dad9a1161e3b16c6f14c0fdab166" kindref="member">markOutputsChanged</ref>((<ref refid="class_vamp_1_1_plugin" kindref="compound">Plugin</ref><sp/>*)handle);</highlight></codeline>
<codeline lineno="434"><highlight class="normal">}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437" refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a62824538d09f38a060bcc593f79ca8a1" refkind="member"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a62824538d09f38a060bcc593f79ca8a1" kindref="member">PluginAdapterBase::Impl::vampGetCurrentProgram</ref>(<ref refid="vamp_8h_1ad3be2952b1f4ad7d775940a6db75c79b" kindref="member">VampPluginHandle</ref><sp/>handle)</highlight></codeline>
<codeline lineno="438"><highlight class="normal">{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG_PLUGIN_ADAPTER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PluginAdapterBase::Impl::vampGetCurrentProgram(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>handle<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl" kindref="compound">Impl</ref><sp/>*adapter<sp/>=<sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a186446e143fb2bb237c952a14db6ceff" kindref="member">lookupAdapter</ref>(handle);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!adapter)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_base_1a7f66f00437b21e5f694fe02356b12f20" kindref="member">Plugin::ProgramList</ref><sp/>&amp;list<sp/>=<sp/>adapter-&gt;<ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a79666690394693c9e293a4e74960b444" kindref="member">m_programs</ref>;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">std::string</ref><sp/><ref refid="namespacewaflib_1_1_tools_1_1c__aliases_1a37f66fad92eb3e5608e4ea6cc919987c" kindref="member">program</ref><sp/>=<sp/>((<ref refid="class_vamp_1_1_plugin" kindref="compound">Plugin</ref><sp/>*)handle)-&gt;getCurrentProgram();</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>list.size();<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(list[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>==<sp/>program)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="451"><highlight class="normal">}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454" refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a124b1ee65cbb733004ae96f4fa001246" refkind="member"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a124b1ee65cbb733004ae96f4fa001246" kindref="member">PluginAdapterBase::Impl::vampSelectProgram</ref>(<ref refid="vamp_8h_1ad3be2952b1f4ad7d775940a6db75c79b" kindref="member">VampPluginHandle</ref><sp/>handle,</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_tools_1_1c__aliases_1a37f66fad92eb3e5608e4ea6cc919987c" kindref="member">program</ref>)</highlight></codeline>
<codeline lineno="456"><highlight class="normal">{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG_PLUGIN_ADAPTER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PluginAdapterBase::Impl::vampSelectProgram(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>handle<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>program<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl" kindref="compound">Impl</ref><sp/>*adapter<sp/>=<sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a186446e143fb2bb237c952a14db6ceff" kindref="member">lookupAdapter</ref>(handle);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!adapter)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_base_1a7f66f00437b21e5f694fe02356b12f20" kindref="member">Plugin::ProgramList</ref><sp/>&amp;list<sp/>=<sp/>adapter-&gt;<ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a79666690394693c9e293a4e74960b444" kindref="member">m_programs</ref>;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>((<ref refid="class_vamp_1_1_plugin" kindref="compound">Plugin</ref><sp/>*)handle)-&gt;selectProgram(list[program]);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>adapter-&gt;<ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a8d38dad9a1161e3b16c6f14c0fdab166" kindref="member">markOutputsChanged</ref>((<ref refid="class_vamp_1_1_plugin" kindref="compound">Plugin</ref><sp/>*)handle);</highlight></codeline>
<codeline lineno="468"><highlight class="normal">}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471" refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1aa6e7c06690fed8d7af284be34a590b4b" refkind="member"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1aa6e7c06690fed8d7af284be34a590b4b" kindref="member">PluginAdapterBase::Impl::vampGetPreferredStepSize</ref>(<ref refid="vamp_8h_1ad3be2952b1f4ad7d775940a6db75c79b" kindref="member">VampPluginHandle</ref><sp/>handle)</highlight></codeline>
<codeline lineno="472"><highlight class="normal">{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG_PLUGIN_ADAPTER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PluginAdapterBase::Impl::vampGetPreferredStepSize(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>handle<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((<ref refid="class_vamp_1_1_plugin" kindref="compound">Plugin</ref><sp/>*)handle)-&gt;getPreferredStepSize();</highlight></codeline>
<codeline lineno="478"><highlight class="normal">}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481" refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a46d39ad29bb4c689e21379e1eb387ace" refkind="member"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a46d39ad29bb4c689e21379e1eb387ace" kindref="member">PluginAdapterBase::Impl::vampGetPreferredBlockSize</ref>(<ref refid="vamp_8h_1ad3be2952b1f4ad7d775940a6db75c79b" kindref="member">VampPluginHandle</ref><sp/>handle)<sp/></highlight></codeline>
<codeline lineno="482"><highlight class="normal">{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG_PLUGIN_ADAPTER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PluginAdapterBase::Impl::vampGetPreferredBlockSize(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>handle<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((<ref refid="class_vamp_1_1_plugin" kindref="compound">Plugin</ref><sp/>*)handle)-&gt;getPreferredBlockSize();</highlight></codeline>
<codeline lineno="488"><highlight class="normal">}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491" refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a9825e946f36f8838ec3d4cb838c00220" refkind="member"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a9825e946f36f8838ec3d4cb838c00220" kindref="member">PluginAdapterBase::Impl::vampGetMinChannelCount</ref>(<ref refid="vamp_8h_1ad3be2952b1f4ad7d775940a6db75c79b" kindref="member">VampPluginHandle</ref><sp/>handle)</highlight></codeline>
<codeline lineno="492"><highlight class="normal">{</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG_PLUGIN_ADAPTER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PluginAdapterBase::Impl::vampGetMinChannelCount(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>handle<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((<ref refid="class_vamp_1_1_plugin" kindref="compound">Plugin</ref><sp/>*)handle)-&gt;getMinChannelCount();</highlight></codeline>
<codeline lineno="498"><highlight class="normal">}</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501" refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a16bfdb3fc7b683a170b01bf92a49dee2" refkind="member"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a16bfdb3fc7b683a170b01bf92a49dee2" kindref="member">PluginAdapterBase::Impl::vampGetMaxChannelCount</ref>(<ref refid="vamp_8h_1ad3be2952b1f4ad7d775940a6db75c79b" kindref="member">VampPluginHandle</ref><sp/>handle)</highlight></codeline>
<codeline lineno="502"><highlight class="normal">{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG_PLUGIN_ADAPTER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PluginAdapterBase::Impl::vampGetMaxChannelCount(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>handle<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((<ref refid="class_vamp_1_1_plugin" kindref="compound">Plugin</ref><sp/>*)handle)-&gt;getMaxChannelCount();</highlight></codeline>
<codeline lineno="508"><highlight class="normal">}</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511" refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1adebb9f604929cde924e783997e9efda3" refkind="member"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1adebb9f604929cde924e783997e9efda3" kindref="member">PluginAdapterBase::Impl::vampGetOutputCount</ref>(<ref refid="vamp_8h_1ad3be2952b1f4ad7d775940a6db75c79b" kindref="member">VampPluginHandle</ref><sp/>handle)</highlight></codeline>
<codeline lineno="512"><highlight class="normal">{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG_PLUGIN_ADAPTER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PluginAdapterBase::Impl::vampGetOutputCount(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>handle<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl" kindref="compound">Impl</ref><sp/>*adapter<sp/>=<sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a186446e143fb2bb237c952a14db6ceff" kindref="member">lookupAdapter</ref>(handle);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/>&quot;vampGetOutputCount:<sp/>handle<sp/>&quot;<sp/>&lt;&lt;<sp/>handle<sp/>&lt;&lt;<sp/>&quot;<sp/>-&gt;<sp/>adapter<sp/>&quot;&lt;&lt;<sp/>adapter<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!adapter)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>adapter-&gt;<ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a17af6e67c075bfb9b5069c51c7861e64" kindref="member">getOutputCount</ref>((<ref refid="class_vamp_1_1_plugin" kindref="compound">Plugin</ref><sp/>*)handle);</highlight></codeline>
<codeline lineno="523"><highlight class="normal">}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><ref refid="struct___vamp_output_descriptor" kindref="compound">VampOutputDescriptor</ref><sp/>*</highlight></codeline>
<codeline lineno="526" refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a5118f9af094598b9f8c8a295a5e2290c" refkind="member"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a5118f9af094598b9f8c8a295a5e2290c" kindref="member">PluginAdapterBase::Impl::vampGetOutputDescriptor</ref>(<ref refid="vamp_8h_1ad3be2952b1f4ad7d775940a6db75c79b" kindref="member">VampPluginHandle</ref><sp/>handle,</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)</highlight></codeline>
<codeline lineno="528"><highlight class="normal">{</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG_PLUGIN_ADAPTER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PluginAdapterBase::Impl::vampGetOutputDescriptor(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>handle<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>i<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl" kindref="compound">Impl</ref><sp/>*adapter<sp/>=<sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a186446e143fb2bb237c952a14db6ceff" kindref="member">lookupAdapter</ref>(handle);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/>&quot;vampGetOutputDescriptor:<sp/>handle<sp/>&quot;<sp/>&lt;&lt;<sp/>handle<sp/>&lt;&lt;<sp/>&quot;<sp/>-&gt;<sp/>adapter<sp/>&quot;&lt;&lt;<sp/>adapter<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!adapter)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>adapter-&gt;<ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a088345ac72041e44e18b7bf5edd32f44" kindref="member">getOutputDescriptor</ref>((<ref refid="class_vamp_1_1_plugin" kindref="compound">Plugin</ref><sp/>*)handle,<sp/>i);</highlight></codeline>
<codeline lineno="539"><highlight class="normal">}</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542" refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1aff063ab7b4dfb0d13883e7ce19cf93a3" refkind="member"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1aff063ab7b4dfb0d13883e7ce19cf93a3" kindref="member">PluginAdapterBase::Impl::vampReleaseOutputDescriptor</ref>(<ref refid="struct___vamp_output_descriptor" kindref="compound">VampOutputDescriptor</ref><sp/>*<ref refid="_export_p_c_m_8cpp_1a717c8108dd6ce1ecc369d9bac2f471f2" kindref="member">desc</ref>)</highlight></codeline>
<codeline lineno="543"><highlight class="normal">{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG_PLUGIN_ADAPTER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PluginAdapterBase::Impl::vampReleaseOutputDescriptor(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>desc<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(desc-&gt;<ref refid="struct___vamp_output_descriptor_1a461161b2010370176115967e4f58a5f5" kindref="member">identifier</ref>)<sp/>free((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)desc-&gt;<ref refid="struct___vamp_output_descriptor_1a461161b2010370176115967e4f58a5f5" kindref="member">identifier</ref>);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(desc-&gt;<ref refid="struct___vamp_output_descriptor_1af4fca576bd47167fd2bf9b43d588815f" kindref="member">name</ref>)<sp/>free((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)desc-&gt;<ref refid="struct___vamp_output_descriptor_1af4fca576bd47167fd2bf9b43d588815f" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(desc-&gt;<ref refid="struct___vamp_output_descriptor_1abfa911b138cfb80cf63e8f2e0fa0fb89" kindref="member">description</ref>)<sp/>free((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)desc-&gt;<ref refid="struct___vamp_output_descriptor_1abfa911b138cfb80cf63e8f2e0fa0fb89" kindref="member">description</ref>);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(desc-&gt;<ref refid="struct___vamp_output_descriptor_1ad038caa8e596dfd037035637202f1d63" kindref="member">unit</ref>)<sp/>free((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)desc-&gt;<ref refid="struct___vamp_output_descriptor_1ad038caa8e596dfd037035637202f1d63" kindref="member">unit</ref>);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(desc-&gt;<ref refid="struct___vamp_output_descriptor_1ae8571f5a2bc740738af0cb7dda0c4749" kindref="member">hasFixedBinCount</ref><sp/>&amp;&amp;<sp/>desc-&gt;<ref refid="struct___vamp_output_descriptor_1a10fffaa32bd894843ff7592240dfe447" kindref="member">binNames</ref>)<sp/>{</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>desc-&gt;<ref refid="struct___vamp_output_descriptor_1a652ee422092720e44d23d98bdb68f978" kindref="member">binCount</ref>;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(desc-&gt;<ref refid="struct___vamp_output_descriptor_1a10fffaa32bd894843ff7592240dfe447" kindref="member">binNames</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>])<sp/>{</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)desc-&gt;<ref refid="struct___vamp_output_descriptor_1a10fffaa32bd894843ff7592240dfe447" kindref="member">binNames</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(desc-&gt;<ref refid="struct___vamp_output_descriptor_1a10fffaa32bd894843ff7592240dfe447" kindref="member">binNames</ref>)<sp/>free((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)desc-&gt;<ref refid="struct___vamp_output_descriptor_1a10fffaa32bd894843ff7592240dfe447" kindref="member">binNames</ref>);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/>free((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)desc);</highlight></codeline>
<codeline lineno="561"><highlight class="normal">}</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><ref refid="struct___vamp_feature_list" kindref="compound">VampFeatureList</ref><sp/>*</highlight></codeline>
<codeline lineno="564" refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1abc8f37b80648a0a7108a6e0ebaf45525" refkind="member"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1abc8f37b80648a0a7108a6e0ebaf45525" kindref="member">PluginAdapterBase::Impl::vampProcess</ref>(<ref refid="vamp_8h_1ad3be2952b1f4ad7d775940a6db75c79b" kindref="member">VampPluginHandle</ref><sp/>handle,</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*inputBuffers,</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sec,</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nsec)</highlight></codeline>
<codeline lineno="568"><highlight class="normal">{</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG_PLUGIN_ADAPTER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PluginAdapterBase::Impl::vampProcess(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>handle<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>sec<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>nsec<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl" kindref="compound">Impl</ref><sp/>*adapter<sp/>=<sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a186446e143fb2bb237c952a14db6ceff" kindref="member">lookupAdapter</ref>(handle);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!adapter)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>adapter-&gt;<ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a0eca18a4ae046e4ac1ebd25bb3ac5a08" kindref="member">process</ref>((<ref refid="class_vamp_1_1_plugin" kindref="compound">Plugin</ref><sp/>*)handle,<sp/>inputBuffers,<sp/>sec,<sp/>nsec);</highlight></codeline>
<codeline lineno="576"><highlight class="normal">}</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><ref refid="struct___vamp_feature_list" kindref="compound">VampFeatureList</ref><sp/>*</highlight></codeline>
<codeline lineno="579" refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1af6af04fcb927463cfe1f85e936935767" refkind="member"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1af6af04fcb927463cfe1f85e936935767" kindref="member">PluginAdapterBase::Impl::vampGetRemainingFeatures</ref>(<ref refid="vamp_8h_1ad3be2952b1f4ad7d775940a6db75c79b" kindref="member">VampPluginHandle</ref><sp/>handle)</highlight></codeline>
<codeline lineno="580"><highlight class="normal">{</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG_PLUGIN_ADAPTER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PluginAdapterBase::Impl::vampGetRemainingFeatures(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>handle<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl" kindref="compound">Impl</ref><sp/>*adapter<sp/>=<sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a186446e143fb2bb237c952a14db6ceff" kindref="member">lookupAdapter</ref>(handle);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!adapter)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>adapter-&gt;<ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a9fe7df06eb951c259763d56c49544676" kindref="member">getRemainingFeatures</ref>((<ref refid="class_vamp_1_1_plugin" kindref="compound">Plugin</ref><sp/>*)handle);</highlight></codeline>
<codeline lineno="588"><highlight class="normal">}</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591" refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1ab0bc48dbdb1396410690d1b190522a95" refkind="member"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1ab0bc48dbdb1396410690d1b190522a95" kindref="member">PluginAdapterBase::Impl::vampReleaseFeatureSet</ref>(<ref refid="struct___vamp_feature_list" kindref="compound">VampFeatureList</ref><sp/>*<ref refid="sndfile__load_8m_1a6f04aa8324068801354b01b63f16f331" kindref="member">fs</ref>)</highlight></codeline>
<codeline lineno="592"><highlight class="normal">{</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEBUG_PLUGIN_ADAPTER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;PluginAdapterBase::Impl::vampReleaseFeatureSet&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal">}</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="599" refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1ab4199ab4a8ba40098aac387032c52aa4" refkind="member"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1ab4199ab4a8ba40098aac387032c52aa4" kindref="member">PluginAdapterBase::Impl::cleanup</ref>(<ref refid="class_vamp_1_1_plugin" kindref="compound">Plugin</ref><sp/>*<ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>)</highlight></codeline>
<codeline lineno="600"><highlight class="normal">{</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a4d3b0d23ae969d2895f13448d294455a" kindref="member">m_fs</ref>.find(plugin)<sp/>!=<sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a4d3b0d23ae969d2895f13448d294455a" kindref="member">m_fs</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>outputCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a193241eba6e9bcd3d4482c5f646d3822" kindref="member">m_pluginOutputs</ref>[plugin])<sp/>{</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outputCount<sp/>=<sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a193241eba6e9bcd3d4482c5f646d3822" kindref="member">m_pluginOutputs</ref>[<ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>]-&gt;size();</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct___vamp_feature_list" kindref="compound">VampFeatureList</ref><sp/>*list<sp/>=<sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a4d3b0d23ae969d2895f13448d294455a" kindref="member">m_fs</ref>[<ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>];</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>outputCount;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1aa9fa862a49d49fae2dc4b45bc23f5281" kindref="member">m_fsizes</ref>[<ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>][<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(list[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].features[j].v1.label)<sp/>{</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(list[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].features[j].v1.label);</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(list[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].features[j].v1.values)<sp/>{</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(list[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].features[j].v1.values);</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(list[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].features)<sp/>free(list[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].features);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a4d3b0d23ae969d2895f13448d294455a" kindref="member">m_fs</ref>.erase(plugin);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1aa9fa862a49d49fae2dc4b45bc23f5281" kindref="member">m_fsizes</ref>.erase(plugin);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a166ff8e5df4fcd27f74bc7179e14c33e" kindref="member">m_fvsizes</ref>.erase(plugin);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a193241eba6e9bcd3d4482c5f646d3822" kindref="member">m_pluginOutputs</ref>.find(plugin)<sp/>!=<sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a193241eba6e9bcd3d4482c5f646d3822" kindref="member">m_pluginOutputs</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a193241eba6e9bcd3d4482c5f646d3822" kindref="member">m_pluginOutputs</ref>[<ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>];</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a193241eba6e9bcd3d4482c5f646d3822" kindref="member">m_pluginOutputs</ref>.erase(plugin);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a3526d127572dd900de260ac90433d062" kindref="member">m_adapterMap</ref>)<sp/>{</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a3526d127572dd900de260ac90433d062" kindref="member">m_adapterMap</ref>-&gt;erase(plugin);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a3526d127572dd900de260ac90433d062" kindref="member">m_adapterMap</ref>-&gt;empty())<sp/>{</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a3526d127572dd900de260ac90433d062" kindref="member">m_adapterMap</ref>;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a3526d127572dd900de260ac90433d062" kindref="member">m_adapterMap</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>((<ref refid="class_vamp_1_1_plugin" kindref="compound">Plugin</ref><sp/>*)plugin);</highlight></codeline>
<codeline lineno="638"><highlight class="normal">}</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="641" refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a8274f19566392f843cbf5f745308fd2c" refkind="member"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a8274f19566392f843cbf5f745308fd2c" kindref="member">PluginAdapterBase::Impl::checkOutputMap</ref>(<ref refid="class_vamp_1_1_plugin" kindref="compound">Plugin</ref><sp/>*<ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>)</highlight></codeline>
<codeline lineno="642"><highlight class="normal">{</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/>OutputMap::iterator<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a193241eba6e9bcd3d4482c5f646d3822" kindref="member">m_pluginOutputs</ref>.find(plugin);</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a193241eba6e9bcd3d4482c5f646d3822" kindref="member">m_pluginOutputs</ref>.end()<sp/>||<sp/>!i-&gt;second)<sp/>{</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a193241eba6e9bcd3d4482c5f646d3822" kindref="member">m_pluginOutputs</ref>[<ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_vamp_1_1_plugin_1a30f531b8fb69fac41a24e3d2a6a08ed9" kindref="member">Plugin::OutputList</ref></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(plugin-&gt;<ref refid="class_vamp_1_1_plugin_1a37b9f286c79c0d682c7fdfddaebf732a" kindref="member">getOutputDescriptors</ref>());</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/>&quot;PluginAdapterBase::Impl::checkOutputMap:<sp/>Have<sp/>&quot;<sp/>&lt;&lt;<sp/>m_pluginOutputs[plugin]-&gt;size()<sp/>&lt;&lt;<sp/>&quot;<sp/>outputs<sp/>for<sp/>plugin<sp/>&quot;<sp/>&lt;&lt;<sp/>plugin-&gt;getIdentifier()<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="652"><highlight class="normal">}</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="655" refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a8d38dad9a1161e3b16c6f14c0fdab166" refkind="member"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a8d38dad9a1161e3b16c6f14c0fdab166" kindref="member">PluginAdapterBase::Impl::markOutputsChanged</ref>(<ref refid="class_vamp_1_1_plugin" kindref="compound">Plugin</ref><sp/>*<ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>)</highlight></codeline>
<codeline lineno="656"><highlight class="normal">{</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/>OutputMap::iterator<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a193241eba6e9bcd3d4482c5f646d3822" kindref="member">m_pluginOutputs</ref>.find(plugin);</highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/>&quot;PluginAdapterBase::Impl::markOutputsChanged&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>!=<sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a193241eba6e9bcd3d4482c5f646d3822" kindref="member">m_pluginOutputs</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_1a30f531b8fb69fac41a24e3d2a6a08ed9" kindref="member">Plugin::OutputList</ref><sp/>*list<sp/>=<sp/>i-&gt;second;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a193241eba6e9bcd3d4482c5f646d3822" kindref="member">m_pluginOutputs</ref>.erase(i);</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>list;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="667"><highlight class="normal">}</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="670" refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a17af6e67c075bfb9b5069c51c7861e64" refkind="member"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a17af6e67c075bfb9b5069c51c7861e64" kindref="member">PluginAdapterBase::Impl::getOutputCount</ref>(<ref refid="class_vamp_1_1_plugin" kindref="compound">Plugin</ref><sp/>*<ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>)</highlight></codeline>
<codeline lineno="671"><highlight class="normal">{</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a8274f19566392f843cbf5f745308fd2c" kindref="member">checkOutputMap</ref>(plugin);</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a193241eba6e9bcd3d4482c5f646d3822" kindref="member">m_pluginOutputs</ref>[<ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>]-&gt;size();</highlight></codeline>
<codeline lineno="675"><highlight class="normal">}</highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><ref refid="struct___vamp_output_descriptor" kindref="compound">VampOutputDescriptor</ref><sp/>*</highlight></codeline>
<codeline lineno="678" refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a088345ac72041e44e18b7bf5edd32f44" refkind="member"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a088345ac72041e44e18b7bf5edd32f44" kindref="member">PluginAdapterBase::Impl::getOutputDescriptor</ref>(<ref refid="class_vamp_1_1_plugin" kindref="compound">Plugin</ref><sp/>*<ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>,</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)</highlight></codeline>
<codeline lineno="680"><highlight class="normal">{</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a8274f19566392f843cbf5f745308fd2c" kindref="member">checkOutputMap</ref>(plugin);</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor" kindref="compound">Plugin::OutputDescriptor</ref><sp/>&amp;od<sp/>=</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*<ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a193241eba6e9bcd3d4482c5f646d3822" kindref="member">m_pluginOutputs</ref>[<ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>])[i];</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct___vamp_output_descriptor" kindref="compound">VampOutputDescriptor</ref><sp/>*<ref refid="_export_p_c_m_8cpp_1a717c8108dd6ce1ecc369d9bac2f471f2" kindref="member">desc</ref><sp/>=<sp/>(<ref refid="struct___vamp_output_descriptor" kindref="compound">VampOutputDescriptor</ref><sp/>*)</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct___vamp_output_descriptor" kindref="compound">VampOutputDescriptor</ref>));</highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/>desc-&gt;<ref refid="struct___vamp_output_descriptor_1a461161b2010370176115967e4f58a5f5" kindref="member">identifier</ref><sp/>=<sp/><ref refid="strdup_8c_1a8c67487a889774f479e3dc226b4f27df" kindref="member">strdup</ref>(od.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1ae2c893ddb1860589517ab7eaa989a18b" kindref="member">identifier</ref>.c_str());</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/>desc-&gt;<ref refid="struct___vamp_output_descriptor_1af4fca576bd47167fd2bf9b43d588815f" kindref="member">name</ref><sp/>=<sp/><ref refid="strdup_8c_1a8c67487a889774f479e3dc226b4f27df" kindref="member">strdup</ref>(od.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1ab824b2b34ee50f897a30901c620e8d87" kindref="member">name</ref>.c_str());</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/>desc-&gt;<ref refid="struct___vamp_output_descriptor_1abfa911b138cfb80cf63e8f2e0fa0fb89" kindref="member">description</ref><sp/>=<sp/><ref refid="strdup_8c_1a8c67487a889774f479e3dc226b4f27df" kindref="member">strdup</ref>(od.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1af9b4fe8f78e7126ead820ba5dc55efd1" kindref="member">description</ref>.c_str());</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>desc-&gt;<ref refid="struct___vamp_output_descriptor_1ad038caa8e596dfd037035637202f1d63" kindref="member">unit</ref><sp/>=<sp/><ref refid="strdup_8c_1a8c67487a889774f479e3dc226b4f27df" kindref="member">strdup</ref>(od.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1aa057a8833fa037f06ac9f7b85b85d5e4" kindref="member">unit</ref>.c_str());</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/>desc-&gt;<ref refid="struct___vamp_output_descriptor_1ae8571f5a2bc740738af0cb7dda0c4749" kindref="member">hasFixedBinCount</ref><sp/>=<sp/>od.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1af0e577e1a256ff6eed6ea42133fec77d" kindref="member">hasFixedBinCount</ref>;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/>desc-&gt;<ref refid="struct___vamp_output_descriptor_1a652ee422092720e44d23d98bdb68f978" kindref="member">binCount</ref><sp/>=<sp/>od.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1afdd006959a995e40ef7d565a3a4df6dc" kindref="member">binCount</ref>;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(od.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1af0e577e1a256ff6eed6ea42133fec77d" kindref="member">hasFixedBinCount</ref><sp/>&amp;&amp;<sp/>od.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1afdd006959a995e40ef7d565a3a4df6dc" kindref="member">binCount</ref><sp/>&gt;<sp/>0</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>would<sp/>like<sp/>to<sp/>do<sp/>&quot;&amp;&amp;<sp/>!od.binNames.empty()&quot;<sp/>here<sp/>--<sp/>but<sp/>we</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>can&apos;t,<sp/>because<sp/>it<sp/>will<sp/>crash<sp/>older<sp/>versions<sp/>of<sp/>the<sp/>host<sp/>adapter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>which<sp/>try<sp/>to<sp/>copy<sp/>the<sp/>names<sp/>across<sp/>whenever<sp/>the<sp/>bin<sp/>count<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>non-zero,<sp/>regardless<sp/>of<sp/>whether<sp/>they<sp/>exist<sp/>or<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc-&gt;<ref refid="struct___vamp_output_descriptor_1a10fffaa32bd894843ff7592240dfe447" kindref="member">binNames</ref><sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**)</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>malloc(od.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1afdd006959a995e40ef7d565a3a4df6dc" kindref="member">binCount</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*));</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>od.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1afdd006959a995e40ef7d565a3a4df6dc" kindref="member">binCount</ref>;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>od.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1a31d9b79e2d8241344f551a22fcb5c8c7" kindref="member">binNames</ref>.size())<sp/>{</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc-&gt;<ref refid="struct___vamp_output_descriptor_1a10fffaa32bd894843ff7592240dfe447" kindref="member">binNames</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/><ref refid="strdup_8c_1a8c67487a889774f479e3dc226b4f27df" kindref="member">strdup</ref>(od.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1a31d9b79e2d8241344f551a22fcb5c8c7" kindref="member">binNames</ref>[i].c_str());</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc-&gt;<ref refid="struct___vamp_output_descriptor_1a10fffaa32bd894843ff7592240dfe447" kindref="member">binNames</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc-&gt;<ref refid="struct___vamp_output_descriptor_1a10fffaa32bd894843ff7592240dfe447" kindref="member">binNames</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/>desc-&gt;<ref refid="struct___vamp_output_descriptor_1af6b512d772023b4e852216689c1c4465" kindref="member">hasKnownExtents</ref><sp/>=<sp/>od.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1ae9ccb65f99f477096b65dd031f4c5e31" kindref="member">hasKnownExtents</ref>;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/>desc-&gt;<ref refid="struct___vamp_output_descriptor_1a9a28180989e3d028c12a98517479dc46" kindref="member">minValue</ref><sp/>=<sp/>od.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1ac9f5924c0be7571bba8e7ae7e7a921f4" kindref="member">minValue</ref>;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/>desc-&gt;<ref refid="struct___vamp_output_descriptor_1a4cbe540a247df60f85b00b2aa16461ee" kindref="member">maxValue</ref><sp/>=<sp/>od.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1a907b4e8fbb48a46ac5a05f880d72719f" kindref="member">maxValue</ref>;</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/>desc-&gt;<ref refid="struct___vamp_output_descriptor_1ab56cf0bbb17136819024574d5cc65e30" kindref="member">isQuantized</ref><sp/>=<sp/>od.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1a1b4858928d23bfd7d5bc557c82a83fb4" kindref="member">isQuantized</ref>;</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/>desc-&gt;<ref refid="struct___vamp_output_descriptor_1a71aa40222dda4321030cccd0bb655fe3" kindref="member">quantizeStep</ref><sp/>=<sp/>od.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1a3bed37153067b625b95acb40b60dbf0b" kindref="member">quantizeStep</ref>;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(od.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1a0d1194980d44e31b25ef3b4b070d6b5d" kindref="member">sampleType</ref>)<sp/>{</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1abffa9ed50cd756df70fd51f0355f448ca0459d5d0d2198d21e8bc90abe4fdccca" kindref="member">Plugin::OutputDescriptor::OneSamplePerStep</ref>:</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc-&gt;<ref refid="struct___vamp_output_descriptor_1a5da1d27cc99badc214640e859b882072" kindref="member">sampleType</ref><sp/>=<sp/><ref refid="vamp_8h_1aa24a8cee023d8b7659d25cbe0584b821ab546deafd57f175fb1e7f9cbea1c5113" kindref="member">vampOneSamplePerStep</ref>;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1abffa9ed50cd756df70fd51f0355f448ca4c74bd2fc96dfe2815623f94b40e5629" kindref="member">Plugin::OutputDescriptor::FixedSampleRate</ref>:</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc-&gt;<ref refid="struct___vamp_output_descriptor_1a5da1d27cc99badc214640e859b882072" kindref="member">sampleType</ref><sp/>=<sp/><ref refid="vamp_8h_1aa24a8cee023d8b7659d25cbe0584b821aafc8a05f722bc83ecce227e12e838cf8" kindref="member">vampFixedSampleRate</ref>;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1abffa9ed50cd756df70fd51f0355f448cadea995a737867f7b22b52f1c43c5432e" kindref="member">Plugin::OutputDescriptor::VariableSampleRate</ref>:</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc-&gt;<ref refid="struct___vamp_output_descriptor_1a5da1d27cc99badc214640e859b882072" kindref="member">sampleType</ref><sp/>=<sp/><ref refid="vamp_8h_1aa24a8cee023d8b7659d25cbe0584b821abae8a21a9e30eb73e16d6abc6c7415e8" kindref="member">vampVariableSampleRate</ref>;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/>desc-&gt;<ref refid="struct___vamp_output_descriptor_1a1ccf193317b2b9c2eb0dbd8dcf61d26e" kindref="member">sampleRate</ref><sp/>=<sp/>od.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1add0cbbdfa9c91764037c39365b1d42af" kindref="member">sampleRate</ref>;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/>desc-&gt;<ref refid="struct___vamp_output_descriptor_1af792a96dbf292ec966b9b68250febd99" kindref="member">hasDuration</ref><sp/>=<sp/>od.<ref refid="struct_vamp_1_1_plugin_1_1_output_descriptor_1ab0d7cc6ab19e53b5bd12ee234f549ea3" kindref="member">hasDuration</ref>;</highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_export_p_c_m_8cpp_1a717c8108dd6ce1ecc369d9bac2f471f2" kindref="member">desc</ref>;</highlight></codeline>
<codeline lineno="735"><highlight class="normal">}</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><ref refid="struct___vamp_feature_list" kindref="compound">VampFeatureList</ref><sp/>*</highlight></codeline>
<codeline lineno="738" refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a0eca18a4ae046e4ac1ebd25bb3ac5a08" refkind="member"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a0eca18a4ae046e4ac1ebd25bb3ac5a08" kindref="member">PluginAdapterBase::Impl::process</ref>(<ref refid="class_vamp_1_1_plugin" kindref="compound">Plugin</ref><sp/>*<ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>,</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*inputBuffers,</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sec,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nsec)</highlight></codeline>
<codeline lineno="741"><highlight class="normal">{</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/>&quot;PluginAdapterBase::Impl::process&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_vamp_1_1_real_time" kindref="compound">RealTime</ref><sp/>rt(sec,<sp/>nsec);</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a8274f19566392f843cbf5f745308fd2c" kindref="member">checkOutputMap</ref>(plugin);</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a550b4522bfbf1ad23297be28c51a4d72" kindref="member">convertFeatures</ref>(plugin,<sp/>plugin-&gt;<ref refid="class_vamp_1_1_plugin_1ae4aed3bebfe80a2e2fccd3d37af26996" kindref="member">process</ref>(inputBuffers,<sp/>rt));</highlight></codeline>
<codeline lineno="746"><highlight class="normal">}</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><ref refid="struct___vamp_feature_list" kindref="compound">VampFeatureList</ref><sp/>*</highlight></codeline>
<codeline lineno="749" refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a9fe7df06eb951c259763d56c49544676" refkind="member"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a9fe7df06eb951c259763d56c49544676" kindref="member">PluginAdapterBase::Impl::getRemainingFeatures</ref>(<ref refid="class_vamp_1_1_plugin" kindref="compound">Plugin</ref><sp/>*<ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>)</highlight></codeline>
<codeline lineno="750"><highlight class="normal">{</highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/>&quot;PluginAdapterBase::Impl::getRemainingFeatures&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a8274f19566392f843cbf5f745308fd2c" kindref="member">checkOutputMap</ref>(plugin);</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a550b4522bfbf1ad23297be28c51a4d72" kindref="member">convertFeatures</ref>(plugin,<sp/>plugin-&gt;<ref refid="class_vamp_1_1_plugin_1aeca2a26e658ba0314ba90d25dd2195d6" kindref="member">getRemainingFeatures</ref>());</highlight></codeline>
<codeline lineno="754"><highlight class="normal">}</highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><ref refid="struct___vamp_feature_list" kindref="compound">VampFeatureList</ref><sp/>*</highlight></codeline>
<codeline lineno="757" refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a550b4522bfbf1ad23297be28c51a4d72" refkind="member"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a550b4522bfbf1ad23297be28c51a4d72" kindref="member">PluginAdapterBase::Impl::convertFeatures</ref>(<ref refid="class_vamp_1_1_plugin" kindref="compound">Plugin</ref><sp/>*<ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>,</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_vamp_1_1_plugin_1a448fb57dc245d47923ec9eeaf9856c5f" kindref="member">Plugin::FeatureSet</ref><sp/>&amp;features)</highlight></codeline>
<codeline lineno="759"><highlight class="normal">{</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lastN<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>outputCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a193241eba6e9bcd3d4482c5f646d3822" kindref="member">m_pluginOutputs</ref>[plugin])<sp/>outputCount<sp/>=<sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a193241eba6e9bcd3d4482c5f646d3822" kindref="member">m_pluginOutputs</ref>[<ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>]-&gt;size();</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a429c029c0068230d1afa97426b04ce0d" kindref="member">resizeFS</ref>(plugin,<sp/>outputCount);</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct___vamp_feature_list" kindref="compound">VampFeatureList</ref><sp/>*<ref refid="sndfile__load_8m_1a6f04aa8324068801354b01b63f16f331" kindref="member">fs</ref><sp/>=<sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a4d3b0d23ae969d2895f13448d294455a" kindref="member">m_fs</ref>[<ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>];</highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/>&quot;PluginAdapter(v2)::convertFeatures:<sp/>NOTE:<sp/>sizeof(Feature)<sp/>==<sp/>&quot;<sp/>&lt;&lt;<sp/>sizeof(Plugin::Feature)<sp/>&lt;&lt;<sp/>&quot;,<sp/>sizeof(VampFeature)<sp/>==<sp/>&quot;<sp/>&lt;&lt;<sp/>sizeof(VampFeature)<sp/>&lt;&lt;<sp/>&quot;,<sp/>sizeof(VampFeatureList)<sp/>==<sp/>&quot;<sp/>&lt;&lt;<sp/>sizeof(VampFeatureList)<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(Plugin::FeatureSet::const_iterator<sp/>fi<sp/>=<sp/>features.begin();</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fi<sp/>!=<sp/>features.end();<sp/>++fi)<sp/>{</highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>fi-&gt;first;</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/>&quot;PluginAdapterBase::Impl::convertFeatures:<sp/>n<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>n<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&gt;=<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(outputCount))<sp/>{</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;WARNING:<sp/>PluginAdapterBase::Impl::convertFeatures:<sp/>Too<sp/>many<sp/>outputs<sp/>from<sp/>plugin<sp/>(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>n+1<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>only<sp/>should<sp/>be<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>outputCount<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&gt;<sp/>lastN<sp/>+<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>lastN<sp/>+<sp/>1;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>n;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fs[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].<ref refid="struct___vamp_feature_list_1a01db33a31ae5e04a4bd097f4b6aa75f1" kindref="member">featureCount</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_vamp_1_1_plugin_1a0730bc72c87fa02eb8d2854b233f7be1" kindref="member">Plugin::FeatureList</ref><sp/>&amp;fl<sp/>=<sp/>fi-&gt;second;</highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sz<sp/>=<sp/>fl.size();</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sz<sp/>&gt;<sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1aa9fa862a49d49fae2dc4b45bc23f5281" kindref="member">m_fsizes</ref>[plugin][n])<sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1af5fcc5331f2dfa4c650eee636af72403" kindref="member">resizeFL</ref>(plugin,<sp/>n,<sp/>sz);</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fs[n].<ref refid="struct___vamp_feature_list_1a01db33a31ae5e04a4bd097f4b6aa75f1" kindref="member">featureCount</ref><sp/>=<sp/>sz;</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>sz;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/>&quot;PluginAdapterBase::Impl::convertFeatures:<sp/>j<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>j<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct___vamp_feature" kindref="compound">VampFeature</ref><sp/>*<ref refid="namespacewaflib_1_1_task_gen_1a839f18f16539f3131cbe573262099bf1" kindref="member">feature</ref><sp/>=<sp/>&amp;fs[n].<ref refid="struct___vamp_feature_list_1a103c817094643ac5ff4410768f4f92a7" kindref="member">features</ref>[j].<ref refid="union___vamp_feature_union_1a4a32a2ce141ec3cd36b8be54cd9c3369" kindref="member">v1</ref>;</highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature-&gt;<ref refid="struct___vamp_feature_1abe6aa7a08185beeb9deca2d08d99859f" kindref="member">hasTimestamp</ref><sp/>=<sp/>fl[j].hasTimestamp;</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature-&gt;<ref refid="struct___vamp_feature_1a31f0b57050e33d082692536097953d9c" kindref="member">sec</ref><sp/>=<sp/>fl[j].timestamp.sec;</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature-&gt;<ref refid="struct___vamp_feature_1a8874cb23600c6b10ca6e8a40920d999e" kindref="member">nsec</ref><sp/>=<sp/>fl[j].timestamp.nsec;</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature-&gt;<ref refid="struct___vamp_feature_1ab1ce7c8a2b489e9b0694a967497a29fd" kindref="member">valueCount</ref><sp/>=<sp/>fl[j].values.size();</highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct___vamp_feature_v2" kindref="compound">VampFeatureV2</ref><sp/>*v2<sp/>=<sp/>&amp;fs[n].<ref refid="struct___vamp_feature_list_1a103c817094643ac5ff4410768f4f92a7" kindref="member">features</ref>[j<sp/>+<sp/>sz].<ref refid="union___vamp_feature_union_1a87e508e37e02cce11c3c4ddf087a627a" kindref="member">v2</ref>;</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v2-&gt;<ref refid="struct___vamp_feature_v2_1a44d9c57f1ae197d3fec1a48c650cce81" kindref="member">hasDuration</ref><sp/>=<sp/>fl[j].hasDuration;</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v2-&gt;<ref refid="struct___vamp_feature_v2_1abc95aac3a2efdef6ef0b17e7b6bd3daf" kindref="member">durationSec</ref><sp/>=<sp/>fl[j].duration.sec;</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v2-&gt;<ref refid="struct___vamp_feature_v2_1af71693d907f69048d602d28edbce679e" kindref="member">durationNsec</ref><sp/>=<sp/>fl[j].duration.nsec;</highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(feature-&gt;<ref refid="struct___vamp_feature_1a6662b7489a7890cae713bf4e8f6d52cd" kindref="member">label</ref>)<sp/>free(feature-&gt;<ref refid="struct___vamp_feature_1a6662b7489a7890cae713bf4e8f6d52cd" kindref="member">label</ref>);</highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fl[j].<ref refid="_tags_8cpp_1a0a3345b0d4574d7adffe113dacd8ccec" kindref="member">label</ref>.empty())<sp/>{</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature-&gt;<ref refid="struct___vamp_feature_1a6662b7489a7890cae713bf4e8f6d52cd" kindref="member">label</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature-&gt;<ref refid="struct___vamp_feature_1a6662b7489a7890cae713bf4e8f6d52cd" kindref="member">label</ref><sp/>=<sp/><ref refid="strdup_8c_1a8c67487a889774f479e3dc226b4f27df" kindref="member">strdup</ref>(fl[j].<ref refid="_tags_8cpp_1a0a3345b0d4574d7adffe113dacd8ccec" kindref="member">label</ref>.c_str());</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(feature-&gt;<ref refid="struct___vamp_feature_1ab1ce7c8a2b489e9b0694a967497a29fd" kindref="member">valueCount</ref><sp/>&gt;<sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a166ff8e5df4fcd27f74bc7179e14c33e" kindref="member">m_fvsizes</ref>[plugin][n][j])<sp/>{</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a9b0791b97e91f8b8c3d18f3ed3bed861" kindref="member">resizeFV</ref>(plugin,<sp/>n,<sp/>j,<sp/>feature-&gt;<ref refid="struct___vamp_feature_1ab1ce7c8a2b489e9b0694a967497a29fd" kindref="member">valueCount</ref>);</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref><sp/>=<sp/>0;<sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref><sp/>&lt;<sp/>feature-&gt;<ref refid="struct___vamp_feature_1ab1ce7c8a2b489e9b0694a967497a29fd" kindref="member">valueCount</ref>;<sp/>++<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>)<sp/>{</highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/>&quot;PluginAdapterBase::Impl::convertFeatures:<sp/>k<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>k<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>feature-&gt;<ref refid="struct___vamp_feature_1ae4030f941ddb2bab8bc147b88e1f1c15" kindref="member">values</ref>[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>]<sp/>=<sp/>fl[j].values[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>];</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastN<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="831"><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lastN<sp/>==<sp/>-1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(outputCount)<sp/>&gt;<sp/>lastN<sp/>+<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>lastN<sp/>+<sp/>1;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/><ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>(outputCount);<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fs[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].<ref refid="struct___vamp_feature_list_1a01db33a31ae5e04a4bd097f4b6aa75f1" kindref="member">featureCount</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="839"><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/>&quot;PluginAdapter(v2)::convertFeatures:<sp/>NOTE:<sp/>have<sp/>&quot;<sp/>&lt;&lt;<sp/>outputCount<sp/>&lt;&lt;<sp/>&quot;<sp/>outputs&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>outputCount;<sp/>++i)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/>&quot;PluginAdapter(v2)::convertFeatures:<sp/>NOTE:<sp/>output<sp/>&quot;<sp/>&lt;&lt;<sp/>i<sp/>&lt;&lt;<sp/>&quot;<sp/>has<sp/>&quot;<sp/>&lt;&lt;<sp/>fs[i].featureCount<sp/>&lt;&lt;<sp/>&quot;<sp/>features&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a6f04aa8324068801354b01b63f16f331" kindref="member">fs</ref>;</highlight></codeline>
<codeline lineno="847"><highlight class="normal">}</highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="850" refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a429c029c0068230d1afa97426b04ce0d" refkind="member"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a429c029c0068230d1afa97426b04ce0d" kindref="member">PluginAdapterBase::Impl::resizeFS</ref>(<ref refid="class_vamp_1_1_plugin" kindref="compound">Plugin</ref><sp/>*<ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="851"><highlight class="normal">{</highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/>&quot;PluginAdapterBase::Impl::resizeFS(&quot;<sp/>&lt;&lt;<sp/>plugin<sp/>&lt;&lt;<sp/>&quot;,<sp/>&quot;<sp/>&lt;&lt;<sp/>n<sp/>&lt;&lt;<sp/>&quot;)&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1aa9fa862a49d49fae2dc4b45bc23f5281" kindref="member">m_fsizes</ref>[<ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>].size();</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;=<sp/>n)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/>&quot;resizing<sp/>from<sp/>&quot;<sp/>&lt;&lt;<sp/>i<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a4d3b0d23ae969d2895f13448d294455a" kindref="member">m_fs</ref>[<ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>]<sp/>=<sp/>(<ref refid="struct___vamp_feature_list" kindref="compound">VampFeatureList</ref><sp/>*)realloc</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a4d3b0d23ae969d2895f13448d294455a" kindref="member">m_fs</ref>[plugin],<sp/>n<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct___vamp_feature_list" kindref="compound">VampFeatureList</ref>));</highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a4d3b0d23ae969d2895f13448d294455a" kindref="member">m_fs</ref>[<ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>][<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].featureCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a4d3b0d23ae969d2895f13448d294455a" kindref="member">m_fs</ref>[<ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>][<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].features<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1aa9fa862a49d49fae2dc4b45bc23f5281" kindref="member">m_fsizes</ref>[<ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>].push_back(0);</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a166ff8e5df4fcd27f74bc7179e14c33e" kindref="member">m_fvsizes</ref>[<ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>].push_back(std::vector&lt;size_t&gt;());</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="869"><highlight class="normal">}</highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="872" refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1af5fcc5331f2dfa4c650eee636af72403" refkind="member"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1af5fcc5331f2dfa4c650eee636af72403" kindref="member">PluginAdapterBase::Impl::resizeFL</ref>(<ref refid="class_vamp_1_1_plugin" kindref="compound">Plugin</ref><sp/>*<ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sz)</highlight></codeline>
<codeline lineno="873"><highlight class="normal">{</highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/>&quot;PluginAdapterBase::Impl::resizeFL(&quot;<sp/>&lt;&lt;<sp/>plugin<sp/>&lt;&lt;<sp/>&quot;,<sp/>&quot;<sp/>&lt;&lt;<sp/>n<sp/>&lt;&lt;<sp/>&quot;,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>sz<sp/>&lt;&lt;<sp/>&quot;)&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1aa9fa862a49d49fae2dc4b45bc23f5281" kindref="member">m_fsizes</ref>[<ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>][n];</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;=<sp/>sz)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/>&quot;resizing<sp/>from<sp/>&quot;<sp/>&lt;&lt;<sp/>i<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a4d3b0d23ae969d2895f13448d294455a" kindref="member">m_fs</ref>[<ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>][n].features<sp/>=<sp/>(<ref refid="union___vamp_feature_union" kindref="compound">VampFeatureUnion</ref><sp/>*)realloc</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a4d3b0d23ae969d2895f13448d294455a" kindref="member">m_fs</ref>[plugin][n].features,<sp/>2<sp/>*<sp/>sz<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="union___vamp_feature_union" kindref="compound">VampFeatureUnion</ref>));</highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1aa9fa862a49d49fae2dc4b45bc23f5281" kindref="member">m_fsizes</ref>[plugin][n]<sp/>&lt;<sp/>sz)<sp/>{</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a4d3b0d23ae969d2895f13448d294455a" kindref="member">m_fs</ref>[<ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>][n].features[<ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1aa9fa862a49d49fae2dc4b45bc23f5281" kindref="member">m_fsizes</ref>[<ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>][n]].v1.hasTimestamp<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a4d3b0d23ae969d2895f13448d294455a" kindref="member">m_fs</ref>[<ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>][n].features[<ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1aa9fa862a49d49fae2dc4b45bc23f5281" kindref="member">m_fsizes</ref>[<ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>][n]].v1.valueCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a4d3b0d23ae969d2895f13448d294455a" kindref="member">m_fs</ref>[<ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>][n].features[<ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1aa9fa862a49d49fae2dc4b45bc23f5281" kindref="member">m_fsizes</ref>[<ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>][n]].v1.values<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a4d3b0d23ae969d2895f13448d294455a" kindref="member">m_fs</ref>[<ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>][n].features[<ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1aa9fa862a49d49fae2dc4b45bc23f5281" kindref="member">m_fsizes</ref>[<ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>][n]].v1.label<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a4d3b0d23ae969d2895f13448d294455a" kindref="member">m_fs</ref>[<ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>][n].features[<ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1aa9fa862a49d49fae2dc4b45bc23f5281" kindref="member">m_fsizes</ref>[<ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>][n]<sp/>+<sp/>sz].v2.hasDuration<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a166ff8e5df4fcd27f74bc7179e14c33e" kindref="member">m_fvsizes</ref>[<ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>][n].push_back(0);</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1aa9fa862a49d49fae2dc4b45bc23f5281" kindref="member">m_fsizes</ref>[<ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>][n]++;</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="894"><highlight class="normal">}</highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="897" refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a9b0791b97e91f8b8c3d18f3ed3bed861" refkind="member"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a9b0791b97e91f8b8c3d18f3ed3bed861" kindref="member">PluginAdapterBase::Impl::resizeFV</ref>(<ref refid="class_vamp_1_1_plugin" kindref="compound">Plugin</ref><sp/>*<ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sz)</highlight></codeline>
<codeline lineno="898"><highlight class="normal">{</highlight></codeline>
<codeline lineno="899"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/>&quot;PluginAdapterBase::Impl::resizeFV(&quot;<sp/>&lt;&lt;<sp/>plugin<sp/>&lt;&lt;<sp/>&quot;,<sp/>&quot;<sp/>&lt;&lt;<sp/>n<sp/>&lt;&lt;<sp/>&quot;,<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>j<sp/>&lt;&lt;<sp/>&quot;,<sp/>&quot;<sp/>&lt;&lt;<sp/>sz<sp/>&lt;&lt;<sp/>&quot;)&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a166ff8e5df4fcd27f74bc7179e14c33e" kindref="member">m_fvsizes</ref>[<ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>][n][j];</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;=<sp/>sz)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/>&quot;resizing<sp/>from<sp/>&quot;<sp/>&lt;&lt;<sp/>i<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a4d3b0d23ae969d2895f13448d294455a" kindref="member">m_fs</ref>[<ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>][n].features[j].v1.values<sp/>=<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*)realloc</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a4d3b0d23ae969d2895f13448d294455a" kindref="member">m_fs</ref>[plugin][n].features[j].v1.values,<sp/>sz<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="909"><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a166ff8e5df4fcd27f74bc7179e14c33e" kindref="member">m_fvsizes</ref>[<ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>][n][j]<sp/>=<sp/>sz;</highlight></codeline>
<codeline lineno="911"><highlight class="normal">}</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="913"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a6c8f2c8fce370d586785353c939601d5" kindref="member">PluginAdapterBase::Impl::AdapterMap</ref><sp/>*</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><ref refid="class_vamp_1_1_plugin_adapter_base_1_1_impl_1a3526d127572dd900de260ac90433d062" kindref="member">PluginAdapterBase::Impl::m_adapterMap</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal">}</highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"><ref refid="hostguard_8h_1ac879bb1077ecc6132ea3581ef9033753" kindref="member">_VAMP_SDK_PLUGSPACE_END</ref>(<ref refid="class_vamp_1_1_plugin_adapter" kindref="compound">PluginAdapter</ref>.cpp)</highlight></codeline>
<codeline lineno="919"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/src/vamp-sdk/PluginAdapter.cpp"/>
  </compounddef>
</doxygen>
