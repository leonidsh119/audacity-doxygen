<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_nyq_1_1_sine_wave" kind="class" language="C++" prot="public">
    <compoundname>Nyq::SineWave</compoundname>
    <basecompoundref refid="class_nyq_1_1_generator" prot="public" virt="non-virtual">Nyq::Generator</basecompoundref>
    <includes refid="_sine_wave_8h" local="no">SineWave.h</includes>
      <sectiondef kind="protected-static-attrib">
      <memberdef kind="variable" id="class_nyq_1_1_sine_wave_1a52246f50ef288f1bcef5ae4c4c9e993a" prot="protected" static="yes" mutable="no">
        <type><ref refid="class_nyq_1_1_stk_frames" kindref="compound">StkFrames</ref></type>
        <definition>StkFrames SineWave::table_</definition>
        <argsstring></argsstring>
        <name>table_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/SineWave.h" line="81" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/SineWave.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_nyq_1_1_sine_wave_1a43486be00e4b7cb653b37c2611a8dd46" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref></type>
        <definition>StkFloat Nyq::SineWave::time_</definition>
        <argsstring></argsstring>
        <name>time_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/SineWave.h" line="82" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/SineWave.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_nyq_1_1_sine_wave_1a1960362ba9adb9e9116bada43344476e" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref></type>
        <definition>StkFloat Nyq::SineWave::rate_</definition>
        <argsstring></argsstring>
        <name>rate_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/SineWave.h" line="83" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/SineWave.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_nyq_1_1_sine_wave_1a66feda88f9324f731c19fb3ebb2c152c" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref></type>
        <definition>StkFloat Nyq::SineWave::phaseOffset_</definition>
        <argsstring></argsstring>
        <name>phaseOffset_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/SineWave.h" line="84" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/SineWave.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_nyq_1_1_sine_wave_1aba4f47534a731e7bdf48e5d80ad59002" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SineWave::SineWave</definition>
        <argsstring>(void)</argsstring>
        <name>SineWave</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/SineWave.h" line="35" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/src/SineWave.cpp" bodystart="23" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="class_nyq_1_1_sine_wave_1ac9b10c92d7e1733d3535a4b58c95d2bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>SineWave::~SineWave</definition>
        <argsstring>(void)</argsstring>
        <name>~SineWave</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
<para>Class destructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/SineWave.h" line="38" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/src/SineWave.cpp" bodystart="34" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="class_nyq_1_1_sine_wave_1a97fb5a5e393cf3ab2bd9e645533851f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void SineWave::reset</definition>
        <argsstring>(void)</argsstring>
        <name>reset</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
<para>Clear output and reset time pointer to zero. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/SineWave.h" line="41" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/src/SineWave.cpp" bodystart="38" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="class_nyq_1_1_sine_wave_1a62020c113a8235584ce4ff414cac0a07" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void Nyq::SineWave::setRate</definition>
        <argsstring>(StkFloat rate)</argsstring>
        <name>setRate</name>
        <param>
          <type><ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref></type>
          <declname>rate</declname>
        </param>
        <briefdescription>
<para>Set the data read rate in samples. The rate can be negative. </para>        </briefdescription>
        <detaileddescription>
<para>If the rate value is negative, the data is read in reverse order. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/SineWave.h" line="47" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/SineWave.h" bodystart="47" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="class_nyq_1_1_sine_wave_1a038e53f5ce400b9d559c1899dc21ccee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void SineWave::setFrequency</definition>
        <argsstring>(StkFloat frequency)</argsstring>
        <name>setFrequency</name>
        <param>
          <type><ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref></type>
          <declname>frequency</declname>
        </param>
        <briefdescription>
<para>Set the data interpolation rate based on a looping frequency. </para>        </briefdescription>
        <detaileddescription>
<para>This function determines the interpolation rate based on the file size and the current <ref refid="class_nyq_1_1_stk_1a5f60154b24fa1317cf79ac0ef11c30c0" kindref="member">Stk::sampleRate</ref>. The <emphasis>frequency</emphasis> value corresponds to file cycles per second. The frequency can be negative, in which case the loop is read in reverse order. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/SineWave.h" line="56" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/src/SineWave.cpp" bodystart="44" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="class_nyq_1_1_sine_wave_1a8951518618c2b63e693c640cb326b03d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void SineWave::addTime</definition>
        <argsstring>(StkFloat time)</argsstring>
        <name>addTime</name>
        <param>
          <type><ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref></type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>Increment the read pointer by <emphasis>time</emphasis> samples, modulo file size. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/SineWave.h" line="59" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/src/SineWave.cpp" bodystart="50" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="class_nyq_1_1_sine_wave_1a0be958041f09be5f77ebc56170e49589" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void SineWave::addPhase</definition>
        <argsstring>(StkFloat angle)</argsstring>
        <name>addPhase</name>
        <param>
          <type><ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref></type>
          <declname>angle</declname>
        </param>
        <briefdescription>
<para>Increment current read pointer by <emphasis>angle</emphasis>, relative to a looping frequency. </para>        </briefdescription>
        <detaileddescription>
<para>This function increments the read pointer based on the file size and the current <ref refid="class_nyq_1_1_stk_1a5f60154b24fa1317cf79ac0ef11c30c0" kindref="member">Stk::sampleRate</ref>. The <emphasis>anAngle</emphasis> value is a multiple of file size. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/SineWave.h" line="67" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/src/SineWave.cpp" bodystart="61" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="class_nyq_1_1_sine_wave_1aa84bbd94d772e19f3f6712656ffbbf5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void SineWave::addPhaseOffset</definition>
        <argsstring>(StkFloat angle)</argsstring>
        <name>addPhaseOffset</name>
        <param>
          <type><ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref></type>
          <declname>angle</declname>
        </param>
        <briefdescription>
<para>Add a phase offset to the current read pointer. </para>        </briefdescription>
        <detaileddescription>
<para>This function determines a time offset based on the file size and the current <ref refid="class_nyq_1_1_stk_1a5f60154b24fa1317cf79ac0ef11c30c0" kindref="member">Stk::sampleRate</ref>. The <emphasis>angle</emphasis> value is a multiple of file size. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/SineWave.h" line="75" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/src/SineWave.cpp" bodystart="72" bodyend="76"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_nyq_1_1_sine_wave_1a1bd95a3945731de65133178a654adbaf" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_nyq_1a044fa20a706520a617bbbf458a7db7e4" kindref="member">StkFloat</ref></type>
        <definition>StkFloat SineWave::computeSample</definition>
        <argsstring>(void)</argsstring>
        <name>computeSample</name>
        <reimplements refid="class_nyq_1_1_generator_1a8b87a3612fd8ae18e455957f4e227bba">computeSample</reimplements>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/SineWave.h" line="79" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/src/SineWave.cpp" bodystart="78" bodyend="105"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="10223">
        <label>Nyq::Generator</label>
        <link refid="class_nyq_1_1_generator"/>
        <childnode refid="10224" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10224">
        <label>Nyq::Stk</label>
        <link refid="class_nyq_1_1_stk"/>
      </node>
      <node id="10222">
        <label>Nyq::SineWave</label>
        <link refid="class_nyq_1_1_sine_wave"/>
        <childnode refid="10223" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="10226">
        <label>Nyq::Generator</label>
        <link refid="class_nyq_1_1_generator"/>
        <childnode refid="10227" relation="public-inheritance">
        </childnode>
      </node>
      <node id="10227">
        <label>Nyq::Stk</label>
        <link refid="class_nyq_1_1_stk"/>
      </node>
      <node id="10225">
        <label>Nyq::SineWave</label>
        <link refid="class_nyq_1_1_sine_wave"/>
        <childnode refid="10226" relation="public-inheritance">
        </childnode>
        <childnode refid="10228" relation="usage">
          <edgelabel>table_</edgelabel>
        </childnode>
      </node>
      <node id="10228">
        <label>Nyq::StkFrames</label>
        <link refid="class_nyq_1_1_stk_frames"/>
      </node>
    </collaborationgraph>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/SineWave.h" line="32" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqstk/include/SineWave.h" bodystart="31" bodyend="86"/>
    <listofallmembers>
      <member refid="class_nyq_1_1_sine_wave_1a0be958041f09be5f77ebc56170e49589" prot="public" virt="non-virtual"><scope>Nyq::SineWave</scope><name>addPhase</name></member>
      <member refid="class_nyq_1_1_sine_wave_1aa84bbd94d772e19f3f6712656ffbbf5e" prot="public" virt="non-virtual"><scope>Nyq::SineWave</scope><name>addPhaseOffset</name></member>
      <member refid="class_nyq_1_1_sine_wave_1a8951518618c2b63e693c640cb326b03d" prot="public" virt="non-virtual"><scope>Nyq::SineWave</scope><name>addTime</name></member>
      <member refid="class_nyq_1_1_sine_wave_1a1bd95a3945731de65133178a654adbaf" prot="protected" virt="virtual"><scope>Nyq::SineWave</scope><name>computeSample</name></member>
      <member refid="class_nyq_1_1_stk_1a5ef3185686e3fdb17fe7ec095e6f666f" prot="protected" virt="non-virtual"><scope>Nyq::SineWave</scope><name>errorString_</name></member>
      <member refid="class_nyq_1_1_generator_1a35e61989f22dfc623b2237ece2436dd4" prot="public" virt="non-virtual"><scope>Nyq::SineWave</scope><name>Generator</name></member>
      <member refid="class_nyq_1_1_stk_1a03c8329487e627f54df7aa2ce8ef44e0" prot="public" virt="non-virtual"><scope>Nyq::SineWave</scope><name>handleError</name></member>
      <member refid="class_nyq_1_1_stk_1a2f5c48d8e177d91b44ec4d3f882cb3f8" prot="public" virt="non-virtual"><scope>Nyq::SineWave</scope><name>handleError</name></member>
      <member refid="class_nyq_1_1_stk_1abb5420cd69433c6b98a17c9b0dc88a79" prot="protected" virt="non-virtual"><scope>Nyq::SineWave</scope><name>handleError</name></member>
      <member refid="class_nyq_1_1_generator_1a9b5762c781de19194b47827374fdf297" prot="public" virt="virtual"><scope>Nyq::SineWave</scope><name>lastOut</name></member>
      <member refid="class_nyq_1_1_generator_1a185d87cd79f851ad291db3630598e2a7" prot="protected" virt="non-virtual"><scope>Nyq::SineWave</scope><name>lastOutput_</name></member>
      <member refid="class_nyq_1_1_sine_wave_1a66feda88f9324f731c19fb3ebb2c152c" prot="protected" virt="non-virtual"><scope>Nyq::SineWave</scope><name>phaseOffset_</name></member>
      <member refid="class_nyq_1_1_stk_1ae2c5d0906c856ce8e0a3c1e3b898bf7e" prot="public" virt="non-virtual"><scope>Nyq::SineWave</scope><name>printErrors</name></member>
      <member refid="class_nyq_1_1_sine_wave_1a1960362ba9adb9e9116bada43344476e" prot="protected" virt="non-virtual"><scope>Nyq::SineWave</scope><name>rate_</name></member>
      <member refid="class_nyq_1_1_stk_1a97ee0bb2086a47109c27ea524bd5dbd4" prot="public" virt="non-virtual"><scope>Nyq::SineWave</scope><name>rawwavePath</name></member>
      <member refid="class_nyq_1_1_sine_wave_1a97fb5a5e393cf3ab2bd9e645533851f0" prot="public" virt="non-virtual"><scope>Nyq::SineWave</scope><name>reset</name></member>
      <member refid="class_nyq_1_1_stk_1a5f60154b24fa1317cf79ac0ef11c30c0" prot="public" virt="non-virtual"><scope>Nyq::SineWave</scope><name>sampleRate</name></member>
      <member refid="class_nyq_1_1_sine_wave_1a038e53f5ce400b9d559c1899dc21ccee" prot="public" virt="non-virtual"><scope>Nyq::SineWave</scope><name>setFrequency</name></member>
      <member refid="class_nyq_1_1_sine_wave_1a62020c113a8235584ce4ff414cac0a07" prot="public" virt="non-virtual"><scope>Nyq::SineWave</scope><name>setRate</name></member>
      <member refid="class_nyq_1_1_stk_1aedb8a47be994bff926bd6caea4ff23ca" prot="public" virt="non-virtual"><scope>Nyq::SineWave</scope><name>setRawwavePath</name></member>
      <member refid="class_nyq_1_1_stk_1a4a22b5faa4bf01ed8a667bf3d120dcc1" prot="public" virt="non-virtual"><scope>Nyq::SineWave</scope><name>setSampleRate</name></member>
      <member refid="class_nyq_1_1_stk_1ae9d0da2ed11e2ec410993499250585e2" prot="public" virt="non-virtual"><scope>Nyq::SineWave</scope><name>showWarnings</name></member>
      <member refid="class_nyq_1_1_sine_wave_1aba4f47534a731e7bdf48e5d80ad59002" prot="public" virt="non-virtual"><scope>Nyq::SineWave</scope><name>SineWave</name></member>
      <member refid="class_nyq_1_1_stk_1a6a9d618318d99d01d23bf904e6b03e5b" prot="public" virt="non-virtual"><scope>Nyq::SineWave</scope><name>sleep</name></member>
      <member refid="class_nyq_1_1_stk_1a432702f3d61bdbd5691ec1fe83e95e63" prot="protected" virt="non-virtual"><scope>Nyq::SineWave</scope><name>Stk</name></member>
      <member refid="class_nyq_1_1_stk_1a63c3942bca00afc51c38e6c2c99f72db" prot="public" virt="non-virtual"><scope>Nyq::SineWave</scope><name>STK_FLOAT32</name></member>
      <member refid="class_nyq_1_1_stk_1a7c6c1932fcab4d5adacd9ae4c3d36054" prot="public" virt="non-virtual"><scope>Nyq::SineWave</scope><name>STK_FLOAT64</name></member>
      <member refid="class_nyq_1_1_stk_1a74923e12da75c2b13fac753ae381fbe3" prot="public" virt="non-virtual"><scope>Nyq::SineWave</scope><name>STK_SINT16</name></member>
      <member refid="class_nyq_1_1_stk_1a02d5a1c8e8d98868a158053727ef4315" prot="public" virt="non-virtual"><scope>Nyq::SineWave</scope><name>STK_SINT24</name></member>
      <member refid="class_nyq_1_1_stk_1acf8717472230415ff11bf499fc079bc5" prot="public" virt="non-virtual"><scope>Nyq::SineWave</scope><name>STK_SINT32</name></member>
      <member refid="class_nyq_1_1_stk_1a5534403dfce86091451c6f23f48e39b3" prot="public" virt="non-virtual"><scope>Nyq::SineWave</scope><name>STK_SINT8</name></member>
      <member refid="class_nyq_1_1_stk_1aa6d484c1fa51ab651997a158cdc42526" prot="public" virt="non-virtual"><scope>Nyq::SineWave</scope><name>StkFormat</name></member>
      <member refid="class_nyq_1_1_stk_1ae4167fa5875df140c384043c856254bd" prot="public" virt="non-virtual"><scope>Nyq::SineWave</scope><name>swap16</name></member>
      <member refid="class_nyq_1_1_stk_1a03313811aab6c24b39f1041fe961a54f" prot="public" virt="non-virtual"><scope>Nyq::SineWave</scope><name>swap32</name></member>
      <member refid="class_nyq_1_1_stk_1ab6f7bdf875fe733f732619be3aa89603" prot="public" virt="non-virtual"><scope>Nyq::SineWave</scope><name>swap64</name></member>
      <member refid="class_nyq_1_1_sine_wave_1a52246f50ef288f1bcef5ae4c4c9e993a" prot="protected" virt="non-virtual"><scope>Nyq::SineWave</scope><name>table_</name></member>
      <member refid="class_nyq_1_1_generator_1a45a10d993eb07f35506250f2cd182786" prot="public" virt="non-virtual"><scope>Nyq::SineWave</scope><name>tick</name></member>
      <member refid="class_nyq_1_1_generator_1af263963ee6578397426ba28100bca965" prot="public" virt="non-virtual"><scope>Nyq::SineWave</scope><name>tick</name></member>
      <member refid="class_nyq_1_1_sine_wave_1a43486be00e4b7cb653b37c2611a8dd46" prot="protected" virt="non-virtual"><scope>Nyq::SineWave</scope><name>time_</name></member>
      <member refid="class_nyq_1_1_generator_1ac4e898bd493cbaef32469eddd29f5f59" prot="public" virt="virtual"><scope>Nyq::SineWave</scope><name>~Generator</name></member>
      <member refid="class_nyq_1_1_sine_wave_1ac9b10c92d7e1733d3535a4b58c95d2bf" prot="public" virt="virtual"><scope>Nyq::SineWave</scope><name>~SineWave</name></member>
      <member refid="class_nyq_1_1_stk_1a2d2e37fc5ff97bf8538ff92b12e54069" prot="protected" virt="virtual"><scope>Nyq::SineWave</scope><name>~Stk</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
