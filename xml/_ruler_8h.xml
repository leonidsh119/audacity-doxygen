<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_ruler_8h" kind="file" language="C++">
    <compoundname>Ruler.h</compoundname>
    <includes local="no">wx/bitmap.h</includes>
    <includes local="no">wx/dc.h</includes>
    <includes local="no">wx/dcmemory.h</includes>
    <includes local="no">wx/event.h</includes>
    <includes local="no">wx/font.h</includes>
    <includes local="no">wx/panel.h</includes>
    <includes local="no">wx/window.h</includes>
    <includes refid="_experimental_8h" local="yes">../Experimental.h</includes>
    <includedby refid="_freq_window_8h" local="yes">C:/_dev/OpenU/Audacity/audacity/src/FreqWindow.h</includedby>
    <includedby refid="_audacity_headers_8h" local="yes">C:/_dev/OpenU/Audacity/audacity/src/AudacityHeaders.h</includedby>
    <includedby refid="_meter_8h" local="yes">C:/_dev/OpenU/Audacity/audacity/src/widgets/Meter.h</includedby>
    <includedby refid="_screenshot_command_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/commands/ScreenshotCommand.cpp</includedby>
    <includedby refid="_compressor_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/effects/Compressor.cpp</includedby>
    <includedby refid="_equalization_8h" local="yes">C:/_dev/OpenU/Audacity/audacity/src/effects/Equalization.h</includedby>
    <includedby refid="_equalization_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/effects/Equalization.cpp</includedby>
    <includedby refid="_scien_filter_8h" local="yes">C:/_dev/OpenU/Audacity/audacity/src/effects/ScienFilter.h</includedby>
    <includedby refid="_printing_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/Printing.cpp</includedby>
    <includedby refid="_project_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/Project.cpp</includedby>
    <includedby refid="_shuttle_gui_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/ShuttleGui.cpp</includedby>
    <includedby refid="_time_track_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/TimeTrack.cpp</includedby>
    <includedby refid="_track_artist_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/TrackArtist.cpp</includedby>
    <includedby refid="_a_slider_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/widgets/ASlider.cpp</includedby>
    <includedby refid="_ruler_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/widgets/Ruler.cpp</includedby>
    <incdepgraph>
      <node id="60045">
        <label>wx/event.h</label>
      </node>
      <node id="60046">
        <label>wx/font.h</label>
      </node>
      <node id="60049">
        <label>../Experimental.h</label>
        <link refid="_experimental_8h"/>
        <childnode refid="60050" relation="include">
        </childnode>
      </node>
      <node id="60043">
        <label>wx/dc.h</label>
      </node>
      <node id="60050">
        <label>wx/defs.h</label>
      </node>
      <node id="60048">
        <label>wx/window.h</label>
      </node>
      <node id="60047">
        <label>wx/panel.h</label>
      </node>
      <node id="60042">
        <label>wx/bitmap.h</label>
      </node>
      <node id="60044">
        <label>wx/dcmemory.h</label>
      </node>
      <node id="60041">
        <label>C:/_dev/OpenU/Audacity/audacity/src/widgets/Ruler.h</label>
        <link refid="Ruler.h"/>
        <childnode refid="60042" relation="include">
        </childnode>
        <childnode refid="60043" relation="include">
        </childnode>
        <childnode refid="60044" relation="include">
        </childnode>
        <childnode refid="60045" relation="include">
        </childnode>
        <childnode refid="60046" relation="include">
        </childnode>
        <childnode refid="60047" relation="include">
        </childnode>
        <childnode refid="60048" relation="include">
        </childnode>
        <childnode refid="60049" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="60068">
        <label>C:/_dev/OpenU/Audacity/audacity/src/effects/Equalization.cpp</label>
        <link refid="_equalization_8cpp"/>
      </node>
      <node id="60065">
        <label>C:/_dev/OpenU/Audacity/audacity/src/commands/ScreenshotCommand.cpp</label>
        <link refid="_screenshot_command_8cpp"/>
      </node>
      <node id="60066">
        <label>C:/_dev/OpenU/Audacity/audacity/src/effects/Compressor.cpp</label>
        <link refid="_compressor_8cpp"/>
      </node>
      <node id="60061">
        <label>C:/_dev/OpenU/Audacity/audacity/src/MixerBoard.cpp</label>
        <link refid="_mixer_board_8cpp"/>
      </node>
      <node id="60067">
        <label>C:/_dev/OpenU/Audacity/audacity/src/effects/Equalization.h</label>
        <link refid="_equalization_8h"/>
        <childnode refid="60068" relation="include">
        </childnode>
        <childnode refid="60069" relation="include">
        </childnode>
        <childnode refid="60070" relation="include">
        </childnode>
      </node>
      <node id="60059">
        <label>C:/_dev/OpenU/Audacity/audacity/src/widgets/Meter.h</label>
        <link refid="_meter_8h"/>
        <childnode refid="60060" relation="include">
        </childnode>
        <childnode refid="60061" relation="include">
        </childnode>
        <childnode refid="60062" relation="include">
        </childnode>
        <childnode refid="60063" relation="include">
        </childnode>
        <childnode refid="60064" relation="include">
        </childnode>
      </node>
      <node id="60076">
        <label>C:/_dev/OpenU/Audacity/audacity/src/widgets/ASlider.cpp</label>
        <link refid="_a_slider_8cpp"/>
      </node>
      <node id="60071">
        <label>C:/_dev/OpenU/Audacity/audacity/src/effects/ScienFilter.h</label>
        <link refid="_scien_filter_8h"/>
        <childnode refid="60069" relation="include">
        </childnode>
        <childnode refid="60070" relation="include">
        </childnode>
      </node>
      <node id="60073">
        <label>C:/_dev/OpenU/Audacity/audacity/src/ShuttleGui.cpp</label>
        <link refid="_shuttle_gui_8cpp"/>
      </node>
      <node id="60077">
        <label>C:/_dev/OpenU/Audacity/audacity/src/widgets/Ruler.cpp</label>
        <link refid="_ruler_8cpp"/>
      </node>
      <node id="60074">
        <label>C:/_dev/OpenU/Audacity/audacity/src/TimeTrack.cpp</label>
        <link refid="_time_track_8cpp"/>
      </node>
      <node id="60069">
        <label>C:/_dev/OpenU/Audacity/audacity/src/effects/LoadEffects.cpp</label>
        <link refid="_load_effects_8cpp"/>
      </node>
      <node id="60062">
        <label>C:/_dev/OpenU/Audacity/audacity/src/toolbars/ControlToolBar.cpp</label>
        <link refid="_control_tool_bar_8cpp"/>
      </node>
      <node id="60055">
        <label>C:/_dev/OpenU/Audacity/audacity/src/FreqWindow.cpp</label>
        <link refid="_freq_window_8cpp"/>
      </node>
      <node id="60053">
        <label>C:/_dev/OpenU/Audacity/audacity/src/AudacityHeaders.h</label>
        <link refid="_audacity_headers_8h"/>
        <childnode refid="60054" relation="include">
        </childnode>
      </node>
      <node id="60052">
        <label>C:/_dev/OpenU/Audacity/audacity/src/FreqWindow.h</label>
        <link refid="_freq_window_8h"/>
        <childnode refid="60053" relation="include">
        </childnode>
        <childnode refid="60055" relation="include">
        </childnode>
        <childnode refid="60056" relation="include">
        </childnode>
        <childnode refid="60057" relation="include">
        </childnode>
        <childnode refid="60058" relation="include">
        </childnode>
      </node>
      <node id="60056">
        <label>C:/_dev/OpenU/Audacity/audacity/src/Menus.cpp</label>
        <link refid="_menus_8cpp"/>
      </node>
      <node id="60057">
        <label>C:/_dev/OpenU/Audacity/audacity/src/Project.cpp</label>
        <link refid="_project_8cpp"/>
      </node>
      <node id="60072">
        <label>C:/_dev/OpenU/Audacity/audacity/src/Printing.cpp</label>
        <link refid="_printing_8cpp"/>
      </node>
      <node id="60063">
        <label>C:/_dev/OpenU/Audacity/audacity/src/toolbars/MeterToolBar.cpp</label>
        <link refid="_meter_tool_bar_8cpp"/>
      </node>
      <node id="60075">
        <label>C:/_dev/OpenU/Audacity/audacity/src/TrackArtist.cpp</label>
        <link refid="_track_artist_8cpp"/>
      </node>
      <node id="60058">
        <label>C:/_dev/OpenU/Audacity/audacity/src/TrackPanel.cpp</label>
        <link refid="_track_panel_8cpp"/>
      </node>
      <node id="60070">
        <label>C:/_dev/OpenU/Audacity/audacity/src/effects/ScienFilter.cpp</label>
        <link refid="_scien_filter_8cpp"/>
      </node>
      <node id="60060">
        <label>C:/_dev/OpenU/Audacity/audacity/src/AudioIO.cpp</label>
        <link refid="_audio_i_o_8cpp"/>
      </node>
      <node id="60064">
        <label>C:/_dev/OpenU/Audacity/audacity/src/widgets/Meter.cpp</label>
        <link refid="_meter_8cpp"/>
      </node>
      <node id="60051">
        <label>C:/_dev/OpenU/Audacity/audacity/src/widgets/Ruler.h</label>
        <link refid="Ruler.h"/>
        <childnode refid="60052" relation="include">
        </childnode>
        <childnode refid="60053" relation="include">
        </childnode>
        <childnode refid="60059" relation="include">
        </childnode>
        <childnode refid="60065" relation="include">
        </childnode>
        <childnode refid="60066" relation="include">
        </childnode>
        <childnode refid="60067" relation="include">
        </childnode>
        <childnode refid="60068" relation="include">
        </childnode>
        <childnode refid="60071" relation="include">
        </childnode>
        <childnode refid="60072" relation="include">
        </childnode>
        <childnode refid="60057" relation="include">
        </childnode>
        <childnode refid="60073" relation="include">
        </childnode>
        <childnode refid="60074" relation="include">
        </childnode>
        <childnode refid="60075" relation="include">
        </childnode>
        <childnode refid="60076" relation="include">
        </childnode>
        <childnode refid="60077" relation="include">
        </childnode>
      </node>
      <node id="60054">
        <label>C:/_dev/OpenU/Audacity/audacity/src/AudacityHeaders.cpp</label>
        <link refid="_audacity_headers_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_ruler" prot="public">Ruler</innerclass>
    <innerclass refid="class_ruler_1_1_label" prot="private">Ruler::Label</innerclass>
    <innerclass refid="class_ruler_panel" prot="public">RulerPanel</innerclass>
    <innerclass refid="class_adorned_ruler_panel" prot="public">AdornedRulerPanel</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>Audacity:<sp/>A<sp/>Digital<sp/>Audio<sp/>Editor</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>Ruler.h</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>Dominic<sp/>Mazzoni</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment">**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__AUDACITY_RULER__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__AUDACITY_RULER__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/bitmap.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/dc.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/dcmemory.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/event.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/font.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/panel.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/window.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Experimental.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_view_info" kindref="compound">ViewInfo</ref>;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_audacity_project" kindref="compound">AudacityProject</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_time_track" kindref="compound">TimeTrack</ref>;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_snap_manager" kindref="compound">SnapManager</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_number_scale" kindref="compound">NumberScale</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_track_list" kindref="compound">TrackList</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_zoom_info" kindref="compound">ZoomInfo</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="class_ruler" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">AUDACITY_DLL_API<sp/><ref refid="class_ruler" kindref="compound">Ruler</ref><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="class_ruler_1af58442bc79afc26e7b9f7735e1f6e198" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="class_ruler_1af58442bc79afc26e7b9f7735e1f6e198" kindref="member">RulerFormat</ref><sp/>{</highlight></codeline>
<codeline lineno="35" refid="class_ruler_1af58442bc79afc26e7b9f7735e1f6e198aba68a1adce860f0e30519cfc2b280272" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ruler_1af58442bc79afc26e7b9f7735e1f6e198aba68a1adce860f0e30519cfc2b280272" kindref="member">IntFormat</ref>,</highlight></codeline>
<codeline lineno="36" refid="class_ruler_1af58442bc79afc26e7b9f7735e1f6e198aad1375df5e28b7c8146f9f6cfb1c25c6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ruler_1af58442bc79afc26e7b9f7735e1f6e198aad1375df5e28b7c8146f9f6cfb1c25c6" kindref="member">RealFormat</ref>,</highlight></codeline>
<codeline lineno="37" refid="class_ruler_1af58442bc79afc26e7b9f7735e1f6e198ae827b2a3942fcd4e249908e9661e40c7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ruler_1af58442bc79afc26e7b9f7735e1f6e198ae827b2a3942fcd4e249908e9661e40c7" kindref="member">RealLogFormat</ref>,</highlight></codeline>
<codeline lineno="38" refid="class_ruler_1af58442bc79afc26e7b9f7735e1f6e198a0d5f7027738e4fcb20f14cb4dcdb12bf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ruler_1af58442bc79afc26e7b9f7735e1f6e198a0d5f7027738e4fcb20f14cb4dcdb12bf" kindref="member">TimeFormat</ref>,</highlight></codeline>
<codeline lineno="39" refid="class_ruler_1af58442bc79afc26e7b9f7735e1f6e198a95750ee90dccdfc672979587e4182859" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ruler_1af58442bc79afc26e7b9f7735e1f6e198a95750ee90dccdfc672979587e4182859" kindref="member">LinearDBFormat</ref>,</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Constructor<sp/>/<sp/>Destructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_ruler" kindref="compound">Ruler</ref>();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/>~<ref refid="class_ruler" kindref="compound">Ruler</ref>();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Required<sp/>Ruler<sp/>Parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetBounds(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>left,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>top,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>right,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bottom);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wxHORIZONTAL<sp/>||<sp/>wxVERTICAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetOrientation(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>orient);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>min<sp/>is<sp/>the<sp/>value<sp/>at<sp/>(x,<sp/>y)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>max<sp/>is<sp/>the<sp/>value<sp/>at<sp/>(x+width,<sp/>y+height)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(at<sp/>the<sp/>center<sp/>of<sp/>the<sp/>pixel,<sp/>in<sp/>both<sp/>cases)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetRange(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>An<sp/>overload<sp/>needed<sp/>for<sp/>the<sp/>special<sp/>case<sp/>of<sp/>fisheye</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>min<sp/>is<sp/>the<sp/>value<sp/>at<sp/>(x,<sp/>y)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>max<sp/>is<sp/>the<sp/>value<sp/>at<sp/>(x+width,<sp/>y+height)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>hiddenMin,<sp/>hiddenMax<sp/>are<sp/>the<sp/>values<sp/>that<sp/>would<sp/>be<sp/>shown<sp/>without<sp/>the<sp/>fisheye.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(at<sp/>the<sp/>center<sp/>of<sp/>the<sp/>pixel,<sp/>in<sp/>both<sp/>cases)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetRange(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>hiddenMin,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>hiddenMax);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Optional<sp/>Ruler<sp/>Parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>twoTone<sp/>is<sp/>true,<sp/>cause<sp/>zero<sp/>and<sp/>positive<sp/>numbers<sp/>to<sp/>appear<sp/>black,<sp/>negative<sp/>in<sp/>another<sp/>color.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetTwoTone(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>twoTone);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>IntFormat,<sp/>RealFormat,<sp/>or<sp/>TimeFormat</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetFormat(<ref refid="class_ruler_1af58442bc79afc26e7b9f7735e1f6e198" kindref="member">RulerFormat</ref><sp/><ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref>);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Specify<sp/>the<sp/>name<sp/>of<sp/>the<sp/>units<sp/>(like<sp/>&quot;dB&quot;)<sp/>if<sp/>you</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>want<sp/>numbers<sp/>like<sp/>&quot;1.6&quot;<sp/>formatted<sp/>as<sp/>&quot;1.6<sp/>dB&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetUnits(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;units);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Logarithmic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetLog(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>log);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Minimum<sp/>number<sp/>of<sp/>pixels<sp/>between<sp/>labels</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetSpacing(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>spacing);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>this<sp/>is<sp/>true,<sp/>the<sp/>edges<sp/>of<sp/>the<sp/>ruler<sp/>will<sp/>always</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>receive<sp/>a<sp/>label.<sp/><sp/>If<sp/>not,<sp/>the<sp/>nearest<sp/>round<sp/>number<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>labeled<sp/>(which<sp/>may<sp/>or<sp/>may<sp/>not<sp/>be<sp/>the<sp/>edge).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetLabelEdges(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>labelEdges);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Makes<sp/>a<sp/>vertical<sp/>ruler<sp/>hug<sp/>the<sp/>left<sp/>side<sp/>(instead<sp/>of<sp/>right)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>a<sp/>horizontal<sp/>ruler<sp/>hug<sp/>the<sp/>top<sp/>(instead<sp/>of<sp/>bottom)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetFlip(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>flip);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>it<sp/>to<sp/>false<sp/>if<sp/>you<sp/>don&apos;t<sp/>want<sp/>minor<sp/>labels.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetMinor(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Good<sp/>defaults<sp/>are<sp/>provided,<sp/>but<sp/>you<sp/>can<sp/>override<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetFonts(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxFont<sp/>&amp;minorFont,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxFont<sp/>&amp;majorFont,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxFont<sp/>&amp;minorMinorFont);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copies<sp/>*pScale<sp/>if<sp/>it<sp/>is<sp/>not<sp/>NULL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetNumberScale(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_number_scale" kindref="compound">NumberScale</ref><sp/>*pScale);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>ruler<sp/>will<sp/>not<sp/>draw<sp/>text<sp/>within<sp/>this<sp/>(pixel)<sp/>range.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>this<sp/>if<sp/>you<sp/>have<sp/>another<sp/>graphic<sp/>object<sp/>obscuring<sp/>part</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>the<sp/>ruler&apos;s<sp/>area.<sp/><sp/>The<sp/>values<sp/>start<sp/>and<sp/>end<sp/>are<sp/>interpreted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>relative<sp/>to<sp/>the<sp/>Ruler&apos;s<sp/>local<sp/>coordinates.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OfflimitsPixels(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculates<sp/>and<sp/>returns<sp/>the<sp/>maximum<sp/>size<sp/>required<sp/>by<sp/>the<sp/>ruler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GetMaxSize(wxCoord<sp/>*width,<sp/>wxCoord<sp/>*height);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>following<sp/>functions<sp/>should<sp/>allow<sp/>a<sp/>custom<sp/>ruler<sp/>setup:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>autosize<sp/>is<sp/>a<sp/>GREAT<sp/>thing,<sp/>but<sp/>for<sp/>some<sp/>applications<sp/>it&apos;s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>useful<sp/>the<sp/>definition<sp/>of<sp/>a<sp/>label<sp/>array<sp/>and<sp/>label<sp/>step<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>user.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetCustomMode(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>this<sp/>is<sp/>the<sp/>case,<sp/>you<sp/>should<sp/>provide<sp/>a<sp/>wxString<sp/>array<sp/>of<sp/>labels,<sp/>start</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>label<sp/>position,<sp/>and<sp/>labels<sp/>step.<sp/>The<sp/>range<sp/>eventually<sp/>specified<sp/>will<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ignored.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetCustomMajorLabels(wxArrayString<sp/>*<ref refid="_tags_8cpp_1a0a3345b0d4574d7adffe113dacd8ccec" kindref="member">label</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numLabel,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>step);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetCustomMinorLabels(wxArrayString<sp/>*<ref refid="_tags_8cpp_1a0a3345b0d4574d7adffe113dacd8ccec" kindref="member">label</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numLabel,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>step);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetUseZoomInfo(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>leftOffset,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_zoom_info" kindref="compound">ZoomInfo</ref><sp/>*zoomInfo);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Drawing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>it<sp/>will<sp/>not<sp/>erase<sp/>for<sp/>you...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Draw(wxDC&amp;<sp/>dc);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Draw(wxDC&amp;<sp/>dc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_time_track" kindref="compound">TimeTrack</ref>*<sp/>timetrack);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>length<sp/>&lt;&gt;<sp/>0,<sp/>draws<sp/>lines<sp/>perpendiculars<sp/>to<sp/>ruler<sp/>corresponding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>selected<sp/>ticks<sp/>(major,<sp/>minor,<sp/>or<sp/>both),<sp/>in<sp/>an<sp/>adjacent<sp/>window.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>You<sp/>may<sp/>need<sp/>to<sp/>use<sp/>the<sp/>offsets<sp/>if<sp/>you<sp/>are<sp/>using<sp/>part<sp/>of<sp/>the<sp/>dc<sp/>for<sp/>rulers,<sp/>borders<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DrawGrid(wxDC&amp;<sp/>dc,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="test__lib_f_l_a_c_2format_8c_1ac94dc16b22556ba5fa815655f27442da" kindref="member">length</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>minor<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>major<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xOffset<sp/>=<sp/>0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yOffset<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>So<sp/>we<sp/>can<sp/>have<sp/>white<sp/>ticks<sp/>on<sp/>black...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146" refid="class_ruler_1a0984f87c4866a21e9eac5f1d81bf081e" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_ruler_1a0984f87c4866a21e9eac5f1d81bf081e" kindref="member">SetTickColour</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxColour<sp/>&amp;<sp/>colour)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/>{<sp/>mTickColour<sp/>=<sp/>colour;<sp/>mPen.SetColour(<sp/>colour<sp/>);}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Force<sp/>regeneration<sp/>of<sp/>labels<sp/>at<sp/>next<sp/>draw<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Invalidate();</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Update();</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Update(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_time_track" kindref="compound">TimeTrack</ref>*<sp/>timetrack);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FindTickSizes();</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FindLinearTickSizes(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>UPP);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>LabelString(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1a2530554172d8629149ec56816eeaa947" kindref="member">d</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>major);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Tick(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>d,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>major,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>minor);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Another<sp/>tick<sp/>generator<sp/>for<sp/>custom<sp/>ruler<sp/>case<sp/>(noauto)<sp/>.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TickCustom(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>labelIdx,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>major,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>minor);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="165" refid="class_ruler_1a5198b436d8a21213a07947ac22e0dac9" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_ruler_1a5198b436d8a21213a07947ac22e0dac9" kindref="member">mbTicksOnly</ref>;<sp/></highlight><highlight class="comment">//<sp/>true<sp/>=&gt;<sp/>no<sp/>line<sp/>the<sp/>length<sp/>of<sp/>the<sp/>ruler</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166" refid="class_ruler_1ab26f0f7159425ba42f51d9a4349a5523" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_ruler_1ab26f0f7159425ba42f51d9a4349a5523" kindref="member">mbTicksAtExtremes</ref>;</highlight></codeline>
<codeline lineno="167" refid="class_ruler_1ab4db84a1b529ca41c65127d2e692785f" refkind="member"><highlight class="normal"><sp/><sp/><sp/>wxRect<sp/><ref refid="class_ruler_1ab4db84a1b529ca41c65127d2e692785f" kindref="member">mRect</ref>;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/>wxColour<sp/>mTickColour;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/>wxPen<sp/>mPen;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mMaxWidth,<sp/>mMaxHeight;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLeft,<sp/>mTop,<sp/>mRight,<sp/>mBottom,<sp/>mLead;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLength;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLengthOld;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/>wxDC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*mDC;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/>wxFont<sp/><sp/><sp/><sp/><sp/><sp/>*mMinorFont,<sp/>*mMajorFont;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/>wxFont<sp/><sp/><sp/><sp/><sp/><sp/>*mMinorMinorFont;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mUserFonts;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mMin,<sp/>mMax;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mHiddenMin,<sp/>mHiddenMax;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mMajor;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mMinor;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mDigits;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*mUserBits;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*mBits;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mUserBitLen;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mValid;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Label<sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lx,<sp/>ly;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/>text;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Draw(wxDC<sp/>&amp;dc,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>twoTone)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mNumMajor;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/>Label<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*mMajorLabels;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mNumMinor;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/>Label<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*mMinorLabels;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mNumMinorMinor;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/>Label<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*mMinorMinorLabels;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Returns<sp/>&apos;zero&apos;<sp/>label<sp/>coordinate<sp/>(for<sp/>grid<sp/>drawing)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>FindZero(Label<sp/>*<sp/><ref refid="_tags_8cpp_1a0a3345b0d4574d7adffe113dacd8ccec" kindref="member">label</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetZeroPosition();</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mOrientation;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mSpacing;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mHasSetSpacing;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLabelEdges;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_ruler_1af58442bc79afc26e7b9f7735e1f6e198" kindref="member">RulerFormat</ref><sp/><sp/>mFormat;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLog;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mFlip;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mCustom;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mbMinor;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mMajorGrid;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>for<sp/>grid<sp/>drawing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mMinorGrid;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mGridLineLength;<sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/><sp/><sp/><sp/><sp/>mUnits;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mTwoTone;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_zoom_info" kindref="compound">ZoomInfo</ref><sp/>*mUseZoomInfo;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLeftOffset;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_number_scale" kindref="compound">NumberScale</ref><sp/>*mpNumberScale;</highlight></codeline>
<codeline lineno="239"><highlight class="normal">};</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241" refid="class_ruler_panel" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">AUDACITY_DLL_API<sp/><ref refid="class_ruler_panel" kindref="compound">RulerPanel</ref><sp/>final<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>wxPanel<sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/>DECLARE_DYNAMIC_CLASS(<ref refid="class_ruler_panel" kindref="compound">RulerPanel</ref>)</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_ruler_panel" kindref="compound">RulerPanel</ref>(wxWindow*<sp/>parent,<sp/>wxWindowID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxPoint&amp;<sp/>pos<sp/>=<sp/>wxDefaultPosition,</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxSize&amp;<sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref><sp/>=<sp/>wxDefaultSize);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/>~<ref refid="class_ruler_panel" kindref="compound">RulerPanel</ref>();</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DoSetSize(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height,</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sizeFlags<sp/>=<sp/>wxSIZE_AUTO);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnErase(wxEraseEvent<sp/>&amp;evt);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnPaint(wxPaintEvent<sp/>&amp;evt);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnSize(wxSizeEvent<sp/>&amp;evt);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>don&apos;t<sp/>need<sp/>or<sp/>want<sp/>to<sp/>accept<sp/>focus.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260" refid="class_ruler_panel_1a200be08e623e99250ae15dffa2e2b7e2" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_ruler_panel_1a200be08e623e99250ae15dffa2e2b7e2" kindref="member">AcceptsFocus</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>So<sp/>that<sp/>wxPanel<sp/>is<sp/>not<sp/>included<sp/>in<sp/>Tab<sp/>traversal<sp/>-<sp/>see<sp/>wxWidgets<sp/>bug<sp/>15581</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262" refid="class_ruler_panel_1a5bd255cc16c78ead0d4a5552d69d9031" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_ruler_panel_1a5bd255cc16c78ead0d4a5552d69d9031" kindref="member">AcceptsFocusFromKeyboard</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266" refid="class_ruler_panel_1a07edcc2559cee8311d68fd33ec93e140" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_ruler" kindref="compound">Ruler</ref><sp/><sp/><ref refid="class_ruler_panel_1a07edcc2559cee8311d68fd33ec93e140" kindref="member">ruler</ref>;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>DECLARE_EVENT_TABLE()</highlight></codeline>
<codeline lineno="270"><highlight class="normal">};</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>an<sp/>Audacity<sp/>Specific<sp/>ruler<sp/>panel<sp/>which<sp/>additionally</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="comment">//<sp/>has<sp/>border,<sp/>selection<sp/>markers,<sp/>play<sp/>marker.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Once<sp/>TrackPanel<sp/>uses<sp/>wxSizers,<sp/>we<sp/>will<sp/>derive<sp/>it<sp/>from<sp/>some</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="comment">//<sp/>wxWindow<sp/>and<sp/>the<sp/>GetSize<sp/>and<sp/>SetSize<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="comment">//<sp/>will<sp/>then<sp/>be<sp/>wxWidgets<sp/>functions<sp/>instead.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277" refid="class_adorned_ruler_panel" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">AUDACITY_DLL_API<sp/><ref refid="class_adorned_ruler_panel" kindref="compound">AdornedRulerPanel</ref><sp/>final<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>wxPanel</highlight></codeline>
<codeline lineno="278"><highlight class="normal">{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_adorned_ruler_panel" kindref="compound">AdornedRulerPanel</ref>(<ref refid="class_audacity_project" kindref="compound">AudacityProject</ref>*<sp/>parent,</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxWindowID<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxPoint&amp;<sp/>pos<sp/>=<sp/>wxDefaultPosition,</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxSize&amp;<sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref><sp/>=<sp/>wxDefaultSize,</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_view_info" kindref="compound">ViewInfo</ref><sp/>*viewinfo<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/>~<ref refid="class_adorned_ruler_panel" kindref="compound">AdornedRulerPanel</ref>();</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288" refid="class_adorned_ruler_panel_1a9c167ec19d89e5021ed37dff2b8bdfb8" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_adorned_ruler_panel_1a9c167ec19d89e5021ed37dff2b8bdfb8" kindref="member">AcceptsFocus</ref>()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/>};</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="291" refid="class_adorned_ruler_panel_1a125b8ff3a6584fbcf4c352a1e1e5a351" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_adorned_ruler_panel_1a125b8ff3a6584fbcf4c352a1e1e5a351" kindref="member">GetRulerHeight</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>28;<sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetLeftOffset(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="layer12_8c_1a33d71f23ba2052d17f0b754dc35265b0" kindref="member">offset</ref>);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DrawCursor(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacepyportmidi_1_1midi_1ad2426758f88d23d7208984d5c99ec050" kindref="member">time</ref>);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DrawIndicator(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>time,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rec);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DrawSelection();</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ClearIndicator();</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetPlayRegion(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>playRegionStart,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>playRegionEnd);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ClearPlayRegion();</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GetPlayRegion(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>playRegionStart,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>playRegionEnd);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303" refid="class_adorned_ruler_panel_1ab9541e6ac87daa0db55adbc2e14c1ce9" refkind="member"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_adorned_ruler_panel_1ab9541e6ac87daa0db55adbc2e14c1ce9" kindref="member">SetProject</ref>(<ref refid="class_audacity_project" kindref="compound">AudacityProject</ref>*<sp/>project)<sp/>{mProject<sp/>=<sp/>project;}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GetMaxSize(wxCoord<sp/>*width,<sp/>wxCoord<sp/>*height);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>InvalidateRuler();</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UpdatePrefs();</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RegenerateTooltips();</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnCapture(wxCommandEvent<sp/>&amp;<sp/>evt);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnPaint(wxPaintEvent<sp/>&amp;evt);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnSize(wxSizeEvent<sp/>&amp;evt);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnMouseEvents(wxMouseEvent<sp/>&amp;evt);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnCaptureLost(wxMouseCaptureLostEvent<sp/>&amp;evt);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DoDrawBorder(wxDC<sp/>*<sp/>dc);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DoDrawMarks(wxDC<sp/>*<sp/>dc,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*text<sp/>*/</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DoDrawCursor(wxDC<sp/>*<sp/>dc);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DoDrawSelection(wxDC<sp/>*<sp/>dc);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DoDrawIndicator(wxDC<sp/>*<sp/>dc);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DrawQuickPlayIndicator(wxDC<sp/>*<sp/>dc<sp/></highlight><highlight class="comment">/*NULL<sp/>to<sp/>DELETE<sp/>old<sp/>only*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DoDrawPlayRegion(wxDC<sp/>*<sp/>dc);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Pos2Time(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ignoreFisheye<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Time2Pos(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ignoreFisheye<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsWithinMarker(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mousePosX,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>markerTime);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/>wxCursor<sp/>mCursorDefault;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/>wxCursor<sp/>mCursorHand;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/>wxCursor<sp/>mCursorSizeWE;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mIsWE;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_ruler" kindref="compound">Ruler</ref><sp/>mRuler;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_view_info" kindref="compound">ViewInfo</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>mViewInfo;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_audacity_project" kindref="compound">AudacityProject</ref><sp/>*mProject;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_list" kindref="compound">TrackList</ref><sp/>*mTracks;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/>wxBitmap<sp/>*mBack;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/>wxMemoryDC<sp/>mBackDC;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/>wxRect<sp/>mOuter;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/>wxRect<sp/>mInner;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mLeftOffset;<sp/><sp/></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>pixels<sp/>before<sp/>we<sp/>hit<sp/>the<sp/>&apos;zero<sp/>position&apos;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mCurTime;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mIndType;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-1<sp/>=<sp/>No<sp/>indicator,<sp/>0<sp/>=<sp/>Play,<sp/>1<sp/>=<sp/>Record</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mIndTime;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/>mQuickPlayInd;</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mQuickPlayPos;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mLastQuickPlayX;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_snap_manager" kindref="compound">SnapManager</ref><sp/>*mSnapManager;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mIsSnapped;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><sp/><sp/>mPlayRegionLock;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mPlayRegionStart;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mPlayRegionEnd;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mOldPlayRegionStart;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mOldPlayRegionEnd;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mIsRecording;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pop-up<sp/>menu</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ShowMenu(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxPoint<sp/>&amp;<sp/>pos);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DragSelection();</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>HandleSnapping();</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnToggleQuickPlay(wxCommandEvent<sp/>&amp;evt);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnSyncSelToQuickPlay(wxCommandEvent<sp/>&amp;evt);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnTimelineToolTips(wxCommandEvent<sp/>&amp;evt);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnAutoScroll(wxCommandEvent<sp/>&amp;evt);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_menus_8h_1a8b31ec1b52e0af8b591de26999ab4536" kindref="member">OnLockPlayRegion</ref>(wxCommandEvent<sp/>&amp;evt);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mPlayRegionDragsSelection;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mTimelineToolTip;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mQuickPlayEnabled;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>MouseEventState<sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesNone,</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesDraggingPlayRegionStart,</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesDraggingPlayRegionEnd,</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesSelectingPlayRegionClick,</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mesSelectingPlayRegionRange</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/>MouseEventState<sp/>mMouseEventState;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mLeftDownClick;<sp/><sp/></highlight><highlight class="comment">//<sp/>click<sp/>position<sp/>in<sp/>seconds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mLastMouseX;<sp/><sp/></highlight><highlight class="comment">//<sp/>Pixel<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mIsDragging;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/>DECLARE_EVENT_TABLE()</highlight></codeline>
<codeline lineno="402"><highlight class="normal">};</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//define<sp/>__AUDACITY_RULER__</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/src/widgets/Ruler.h"/>
  </compounddef>
</doxygen>
