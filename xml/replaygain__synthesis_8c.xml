<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="replaygain__synthesis_8c" kind="file" language="C++">
    <compoundname>replaygain_synthesis.c</compoundname>
    <includes local="no">string.h</includes>
    <includes local="no">math.h</includes>
    <includes refid="replaygain__synthesis_8h" local="yes">share/replaygain_synthesis.h</includes>
    <includes refid="assert_8h" local="yes">FLAC/assert.h</includes>
    <incdepgraph>
      <node id="9601">
        <label>FLAC/format.h</label>
      </node>
      <node id="9600">
        <label>stdlib.h</label>
      </node>
      <node id="9602">
        <label>FLAC/assert.h</label>
        <link refid="assert_8h"/>
      </node>
      <node id="9596">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/share/replaygain_synthesis/replaygain_synthesis.c</label>
        <link refid="replaygain_synthesis.c"/>
        <childnode refid="9597" relation="include">
        </childnode>
        <childnode refid="9598" relation="include">
        </childnode>
        <childnode refid="9599" relation="include">
        </childnode>
        <childnode refid="9602" relation="include">
        </childnode>
      </node>
      <node id="9599">
        <label>share/replaygain_synthesis.h</label>
        <link refid="replaygain__synthesis_8h"/>
        <childnode refid="9600" relation="include">
        </childnode>
        <childnode refid="9601" relation="include">
        </childnode>
      </node>
      <node id="9597">
        <label>string.h</label>
      </node>
      <node id="9598">
        <label>math.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="replaygain__synthesis_8c_1aeac106673fcab5bf4cd3616c30c628cc" prot="public" static="no">
        <name>FLAC__I64L</name>
        <param><defname>x</defname></param>
        <initializer>x##LL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/share/replaygain_synthesis/replaygain_synthesis.c" line="47" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/share/replaygain_synthesis/replaygain_synthesis.c" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="replaygain__synthesis_8c_1ad2c961dbb18d64e2dd8586cd89885267" prot="public" static="no">
        <name>ROUND64</name>
        <param><defname>x</defname></param>
        <initializer>( <ref refid="poly-fir_8h_1a2530554172d8629149ec56816eeaa947" kindref="member">doubletmp.d</ref> = (x) + <ref refid="poly-fir_8h_1a2530554172d8629149ec56816eeaa947" kindref="member">d</ref>-&gt;Add + (<ref refid="ordinals_8h_1a12b57f75f760b9062a13bcda1bdb3f3e" kindref="member">FLAC__int64</ref>)<ref refid="replaygain__synthesis_8c_1aeac106673fcab5bf4cd3616c30c628cc" kindref="member">FLAC__I64L</ref>(0x001FFFFD80000000), doubletmp.i - (FLAC__int64)FLAC__I64L(0x433FFFFD80000000) )</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/share/replaygain_synthesis/replaygain_synthesis.c" line="239" column="9"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="replaygain__synthesis_8c_1adf97c75ef3d29137ba748747b340def9" prot="public" static="yes" mutable="no">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> float</type>
        <definition>const float F44_0[16+32]</definition>
        <argsstring>[16+32]</argsstring>
        <name>F44_0</name>
        <initializer>= {
	(float)0, (float)0, (float)0, (float)0, (float)0, (float)0, (float)0, (float)0,
	(float)0, (float)0, (float)0, (float)0, (float)0, (float)0, (float)0, (float)0,

	(float)0, (float)0, (float)0, (float)0, (float)0, (float)0, (float)0, (float)0,
	(float)0, (float)0, (float)0, (float)0, (float)0, (float)0, (float)0, (float)0,

	(float)0, (float)0, (float)0, (float)0, (float)0, (float)0, (float)0, (float)0,
	(float)0, (float)0, (float)0, (float)0, (float)0, (float)0, (float)0, (float)0
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/share/replaygain_synthesis/replaygain_synthesis.c" line="126" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/share/replaygain_synthesis/replaygain_synthesis.c" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="replaygain__synthesis_8c_1aef97742e8086c34748db486daae8f717" prot="public" static="yes" mutable="no">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> float</type>
        <definition>const float F44_1[16+32]</definition>
        <argsstring>[16+32]</argsstring>
        <name>F44_1</name>
        <initializer>= {  
	(float) 0.85018292704024355931, (float) 0.29089597350995344721, (float)-0.05021866022121039450, (float)-0.23545456294599161833,
	(float)-0.58362726442227032096, (float)-0.67038978965193036429, (float)-0.38566861572833459221, (float)-0.15218663390367969967,
	(float)-0.02577543084864530676, (float) 0.14119295297688728127, (float) 0.22398848581628781612, (float) 0.15401727203382084116,
	(float) 0.05216161232906000929, (float)-0.00282237820999675451, (float)-0.03042794608323867363, (float)-0.03109780942998826024,

	(float) 0.85018292704024355931, (float) 0.29089597350995344721, (float)-0.05021866022121039450, (float)-0.23545456294599161833,
	(float)-0.58362726442227032096, (float)-0.67038978965193036429, (float)-0.38566861572833459221, (float)-0.15218663390367969967,
	(float)-0.02577543084864530676, (float) 0.14119295297688728127, (float) 0.22398848581628781612, (float) 0.15401727203382084116,
	(float) 0.05216161232906000929, (float)-0.00282237820999675451, (float)-0.03042794608323867363, (float)-0.03109780942998826024,

	(float) 0.85018292704024355931, (float) 0.29089597350995344721, (float)-0.05021866022121039450, (float)-0.23545456294599161833,
	(float)-0.58362726442227032096, (float)-0.67038978965193036429, (float)-0.38566861572833459221, (float)-0.15218663390367969967,
	(float)-0.02577543084864530676, (float) 0.14119295297688728127, (float) 0.22398848581628781612, (float) 0.15401727203382084116,
	(float) 0.05216161232906000929, (float)-0.00282237820999675451, (float)-0.03042794608323867363, (float)-0.03109780942998826024,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/share/replaygain_synthesis/replaygain_synthesis.c" line="138" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/share/replaygain_synthesis/replaygain_synthesis.c" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="replaygain__synthesis_8c_1a5be109a67013d1c1cac243d8b953666d" prot="public" static="yes" mutable="no">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> float</type>
        <definition>const float F44_2[16+32]</definition>
        <argsstring>[16+32]</argsstring>
        <name>F44_2</name>
        <initializer>= {  
	(float) 1.78827593892108555290, (float) 0.95508210637394326553, (float)-0.18447626783899924429, (float)-0.44198126506275016437,
	(float)-0.88404052492547413497, (float)-1.42218907262407452967, (float)-1.02037566838362314995, (float)-0.34861755756425577264,
	(float)-0.11490230170431934434, (float) 0.12498899339968611803, (float) 0.38065885268563131927, (float) 0.31883491321310506562,
	(float) 0.10486838686563442765, (float)-0.03105361685110374845, (float)-0.06450524884075370758, (float)-0.02939198261121969816,

	(float) 1.78827593892108555290, (float) 0.95508210637394326553, (float)-0.18447626783899924429, (float)-0.44198126506275016437,
	(float)-0.88404052492547413497, (float)-1.42218907262407452967, (float)-1.02037566838362314995, (float)-0.34861755756425577264,
	(float)-0.11490230170431934434, (float) 0.12498899339968611803, (float) 0.38065885268563131927, (float) 0.31883491321310506562,
	(float) 0.10486838686563442765, (float)-0.03105361685110374845, (float)-0.06450524884075370758, (float)-0.02939198261121969816,

	(float) 1.78827593892108555290, (float) 0.95508210637394326553, (float)-0.18447626783899924429, (float)-0.44198126506275016437,
	(float)-0.88404052492547413497, (float)-1.42218907262407452967, (float)-1.02037566838362314995, (float)-0.34861755756425577264,
	(float)-0.11490230170431934434, (float) 0.12498899339968611803, (float) 0.38065885268563131927, (float) 0.31883491321310506562,
	(float) 0.10486838686563442765, (float)-0.03105361685110374845, (float)-0.06450524884075370758, (float)-0.02939198261121969816,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/share/replaygain_synthesis/replaygain_synthesis.c" line="156" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/share/replaygain_synthesis/replaygain_synthesis.c" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="replaygain__synthesis_8c_1a88435d4d01d1a2f25b9de505c4490ae3" prot="public" static="yes" mutable="no">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> float</type>
        <definition>const float F44_3[16+32]</definition>
        <argsstring>[16+32]</argsstring>
        <name>F44_3</name>
        <initializer>= {  
	(float) 2.89072132015058161445, (float) 2.68932810943698754106, (float) 0.21083359339410251227, (float)-0.98385073324997617515,
	(float)-1.11047823227097316719, (float)-2.18954076314139673147, (float)-2.36498032881953056225, (float)-0.95484132880101140785,
	(float)-0.23924057925542965158, (float)-0.13865235703915925642, (float) 0.43587843191057992846, (float) 0.65903257226026665927,
	(float) 0.24361815372443152787, (float)-0.00235974960154720097, (float) 0.01844166574603346289, (float) 0.01722945988740875099,

	(float) 2.89072132015058161445, (float) 2.68932810943698754106, (float) 0.21083359339410251227, (float)-0.98385073324997617515,
	(float)-1.11047823227097316719, (float)-2.18954076314139673147, (float)-2.36498032881953056225, (float)-0.95484132880101140785,
	(float)-0.23924057925542965158, (float)-0.13865235703915925642, (float) 0.43587843191057992846, (float) 0.65903257226026665927,
	(float) 0.24361815372443152787, (float)-0.00235974960154720097, (float) 0.01844166574603346289, (float) 0.01722945988740875099,

	(float) 2.89072132015058161445, (float) 2.68932810943698754106, (float) 0.21083359339410251227, (float)-0.98385073324997617515,
	(float)-1.11047823227097316719, (float)-2.18954076314139673147, (float)-2.36498032881953056225, (float)-0.95484132880101140785,
	(float)-0.23924057925542965158, (float)-0.13865235703915925642, (float) 0.43587843191057992846, (float) 0.65903257226026665927,
	(float) 0.24361815372443152787, (float)-0.00235974960154720097, (float) 0.01844166574603346289, (float) 0.01722945988740875099
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/share/replaygain_synthesis/replaygain_synthesis.c" line="174" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/share/replaygain_synthesis/replaygain_synthesis.c" bodystart="174" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="replaygain__synthesis_8c_1af930a2f2ebc0770abd9ce540f14bdb19" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static unsigned int random_int_</definition>
        <argsstring>(void)</argsstring>
        <name>random_int_</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/share/replaygain_synthesis/replaygain_synthesis.c" line="82" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/share/replaygain_synthesis/replaygain_synthesis.c" bodystart="82" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="replaygain__synthesis_8c_1a2526b4294e6144315027a2aef21da864" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>static double random_equi_</definition>
        <argsstring>(double mult)</argsstring>
        <name>random_equi_</name>
        <param>
          <type>double</type>
          <declname>mult</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/share/replaygain_synthesis/replaygain_synthesis.c" line="113" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/share/replaygain_synthesis/replaygain_synthesis.c" bodystart="113" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="replaygain__synthesis_8c_1a6211120af15528f4e5336cf4f7eb583b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>static double random_triangular_</definition>
        <argsstring>(double mult)</argsstring>
        <name>random_triangular_</name>
        <param>
          <type>double</type>
          <declname>mult</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/share/replaygain_synthesis/replaygain_synthesis.c" line="120" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/share/replaygain_synthesis/replaygain_synthesis.c" bodystart="120" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="replaygain__synthesis_8c_1a87e1c8e19878ead415394d9a44e1d97d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>static double scalar16_</definition>
        <argsstring>(const float *x, const float *y)</argsstring>
        <name>scalar16_</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> float *</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> float *</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/share/replaygain_synthesis/replaygain_synthesis.c" line="192" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/share/replaygain_synthesis/replaygain_synthesis.c" bodystart="192" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="replaygain__synthesis_8c_1a66e7ef80559c1f62f6ffbc5df0e63435" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void FLAC__replaygain_synthesis__init_dither_context</definition>
        <argsstring>(DitherContext *d, int bits, int shapingtype)</argsstring>
        <name>FLAC__replaygain_synthesis__init_dither_context</name>
        <param>
          <type><ref refid="struct_dither_context" kindref="compound">DitherContext</ref> *</type>
          <declname>d</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>bits</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>shapingtype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/share/replaygain_synthesis/replaygain_synthesis.c" line="202" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/share/replaygain_synthesis/replaygain_synthesis.c" bodystart="202" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="replaygain__synthesis_8c_1a6ca6ab857cd1391be67fa66e48a6ece8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="ordinals_8h_1a12b57f75f760b9062a13bcda1bdb3f3e" kindref="member">FLAC__int64</ref></type>
        <definition>static FLAC__int64 dither_output_</definition>
        <argsstring>(DitherContext *d, FLAC__bool do_dithering, int shapingtype, int i, double Sum, int k)</argsstring>
        <name>dither_output_</name>
        <param>
          <type><ref refid="struct_dither_context" kindref="compound">DitherContext</ref> *</type>
          <declname>d</declname>
        </param>
        <param>
          <type><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
          <declname>do_dithering</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>shapingtype</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type>double</type>
          <declname>Sum</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/share/replaygain_synthesis/replaygain_synthesis.c" line="230" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/share/replaygain_synthesis/replaygain_synthesis.c" bodystart="230" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="replaygain__synthesis_8c_1a5723c5f098ef97d9cd9f4c0701891366" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t FLAC__replaygain_synthesis__apply_gain</definition>
        <argsstring>(FLAC__byte *data_out, FLAC__bool little_endian_data_out, FLAC__bool unsigned_data_out, const FLAC__int32 *const input[], unsigned wide_samples, unsigned channels, const unsigned source_bps, const unsigned target_bps, const double scale, const FLAC__bool hard_limit, FLAC__bool do_dithering, DitherContext *dither_context)</argsstring>
        <name>FLAC__replaygain_synthesis__apply_gain</name>
        <param>
          <type><ref refid="ordinals_8h_1a5eb569b12d5b047cdacada4d57924ee3" kindref="member">FLAC__byte</ref> *</type>
          <declname>data_out</declname>
        </param>
        <param>
          <type><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
          <declname>little_endian_data_out</declname>
        </param>
        <param>
          <type><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
          <declname>unsigned_data_out</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="ordinals_8h_1a33fd77bfe6d685541a0c034a75deccdc" kindref="member">FLAC__int32</ref> *<ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref></type>
          <declname>input</declname>
          <array>[]</array>
        </param>
        <param>
          <type>unsigned</type>
          <declname>wide_samples</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>channels</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> unsigned</type>
          <declname>source_bps</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> unsigned</type>
          <declname>target_bps</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> double</type>
          <declname>scale</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
          <declname>hard_limit</declname>
        </param>
        <param>
          <type><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref></type>
          <declname>do_dithering</declname>
        </param>
        <param>
          <type><ref refid="struct_dither_context" kindref="compound">DitherContext</ref> *</type>
          <declname>dither_context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/share/replaygain_synthesis/replaygain_synthesis.c" line="295" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/share/replaygain_synthesis/replaygain_synthesis.c" bodystart="295" bodyend="423"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>replaygain_synthesis<sp/>-<sp/>Routines<sp/>for<sp/>applying<sp/>ReplayGain<sp/>to<sp/>a<sp/>signal</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2002-2009<sp/><sp/>Josh<sp/>Coalson</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2011-2014<sp/><sp/>Xiph.Org<sp/>Foundation</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>library<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>License<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>version<sp/>2.1<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>This<sp/>library<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>License<sp/>along<sp/>with<sp/>this<sp/>library;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>Street,<sp/>Fifth<sp/>Floor,<sp/>Boston,<sp/>MA<sp/><sp/>02110-1301<sp/><sp/>USA</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>This<sp/>is<sp/>an<sp/>aggregation<sp/>of<sp/>pieces<sp/>of<sp/>code<sp/>from<sp/>John<sp/>Edwards&apos;<sp/>WaveGain</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>program.<sp/><sp/>Mostly<sp/>cosmetic<sp/>changes<sp/>were<sp/>made;<sp/>otherwise,<sp/>the<sp/>dithering</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>code<sp/>is<sp/>almost<sp/>untouched<sp/>and<sp/>the<sp/>gain<sp/>processing<sp/>was<sp/>converted<sp/>from</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>processing<sp/>a<sp/>whole<sp/>file<sp/>to<sp/>processing<sp/>chunks<sp/>of<sp/>samples.</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>The<sp/>original<sp/>copyright<sp/>notices<sp/>for<sp/>WaveGain&apos;s<sp/>dither.c<sp/>and<sp/>wavegain.c</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>appear<sp/>below:</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>(c)<sp/>2002<sp/>John<sp/>Edwards</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>mostly<sp/>lifted<sp/>from<sp/>work<sp/>by<sp/>Frank<sp/>Klemm</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>random<sp/>functions<sp/>for<sp/>dithering.</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2002<sp/>John<sp/>Edwards</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/>Additional<sp/>code<sp/>by<sp/>Magnus<sp/>Holmgren<sp/>and<sp/>Gian-Carlo<sp/>Pascutto</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_CONFIG_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;config.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>memset()<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="replaygain__synthesis_8h" kindref="compound">share/replaygain_synthesis.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="assert_8h" kindref="compound">FLAC/assert.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="replaygain__synthesis_8c_1aeac106673fcab5bf4cd3616c30c628cc" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FLAC__I64L(x)<sp/>x##LL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/>the<sp/>following<sp/>is<sp/>based<sp/>on<sp/>parts<sp/>of<sp/>dither.c</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>is<sp/>a<sp/>simple<sp/>random<sp/>number<sp/>generator<sp/>with<sp/>good<sp/>quality<sp/>for<sp/>audio<sp/>purposes.</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*<sp/><sp/>It<sp/>consists<sp/>of<sp/>two<sp/>polycounters<sp/>with<sp/>opposite<sp/>rotation<sp/>direction<sp/>and<sp/>different</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*<sp/><sp/>periods.<sp/>The<sp/>periods<sp/>are<sp/>coprime,<sp/>so<sp/>the<sp/>total<sp/>period<sp/>is<sp/>the<sp/>product<sp/>of<sp/>both.</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>-------------------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*<sp/>+-&gt;<sp/>|31:30:29:28:27:26:25:24:23:22:21:20:19:18:17:16:15:14:13:12:11:10:<sp/>9:<sp/>8:<sp/>7:<sp/>6:<sp/>5:<sp/>4:<sp/>3:<sp/>2:<sp/>1:<sp/>0|</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*<sp/>|<sp/><sp/><sp/>-------------------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>*<sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>|<sp/><sp/>|<sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>*<sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+--+--+--+-XOR-+--------+</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*<sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*<sp/>+--------------------------------------------------------------------------------------+</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>-------------------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>|31:30:29:28:27:26:25:24:23:22:21:20:19:18:17:16:15:14:13:12:11:10:<sp/>9:<sp/>8:<sp/>7:<sp/>6:<sp/>5:<sp/>4:<sp/>3:<sp/>2:<sp/>1:<sp/>0|<sp/>&lt;-+</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>-------------------------------------------------------------------------------------------------<sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>+--+----XOR----+--+<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+----------------------------------------------------------------------------------------+</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>first<sp/>has<sp/>an<sp/>period<sp/>of<sp/>3*5*17*257*65537,<sp/>the<sp/>second<sp/>of<sp/>7*47*73*178481,</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/>*<sp/><sp/>which<sp/>gives<sp/>a<sp/>period<sp/>of<sp/>18.410.713.077.675.721.215.<sp/>The<sp/>result<sp/>is<sp/>the</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/>*<sp/><sp/>XORed<sp/>values<sp/>of<sp/>both<sp/>generators.</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>random_int_(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="83"><highlight class="normal">{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>parity_[256]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,1,1,0,1,0,0,1,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,0,1,1,0,1,0,0,1,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,0,0,1,0,1,1,0,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,1,0,0,1,0,1,1,0,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,0,0,1,0,1,1,0,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,1,0,0,1,0,1,1,0,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,1,1,0,1,0,0,1,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,0,1,1,0,1,0,0,1,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,0,0,1,0,1,1,0,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,1,0,0,1,0,1,1,0,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,1,1,0,1,0,0,1,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,0,1,1,0,1,0,0,1,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,1,1,0,1,0,0,1,1,0,0,1,0,1,1,0,1,0,0,1,0,1,1,0,0,1,1,0,1,0,0,1,</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,0,0,1,0,1,1,0,0,1,1,0,1,0,0,1,0,1,1,0,1,0,0,1,1,0,0,1,0,1,1,0</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r1_<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r2_<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t1,<sp/>t2,<sp/>t3,<sp/>t4;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Parity<sp/>calculation<sp/>is<sp/>done<sp/>via<sp/>table<sp/>lookup,<sp/>this<sp/>is<sp/>also<sp/>available</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>on<sp/>CPUs<sp/>without<sp/>parity,<sp/>can<sp/>be<sp/>implemented<sp/>in<sp/>C<sp/>and<sp/>avoid<sp/>unpredictable</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>jumps<sp/>and<sp/>slow<sp/>rotate<sp/>through<sp/>the<sp/>carry<sp/>flag<sp/>operations.</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>t3<sp/><sp/><sp/>=<sp/>t1<sp/>=<sp/>r1_;<sp/><sp/><sp/><sp/>t4<sp/><sp/><sp/>=<sp/>t2<sp/>=<sp/>r2_;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>t1<sp/><sp/>&amp;=<sp/>0xF5;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t2<sp/>&gt;&gt;=<sp/>25;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>t1<sp/><sp/><sp/>=<sp/>parity_[t1];<sp/>t2<sp/><sp/>&amp;=<sp/>0x63;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>t1<sp/>&lt;&lt;=<sp/>31;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t2<sp/><sp/><sp/>=<sp/>parity_[t2];</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(r1_<sp/>=<sp/>(t3<sp/>&gt;&gt;<sp/>1)<sp/>|<sp/>t1<sp/>)<sp/>^<sp/>(r2_<sp/>=<sp/>(t4<sp/>+<sp/>t4)<sp/>|<sp/>t2<sp/>);</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>gives<sp/>a<sp/>equal<sp/>distributed<sp/>random<sp/>number<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>between<sp/>-2^31*mult<sp/>and<sp/>+2^31*mult<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>random_equi_(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mult)</highlight></codeline>
<codeline lineno="114"><highlight class="normal">{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mult<sp/>*<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)<sp/>random_int_();</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>gives<sp/>a<sp/>triangular<sp/>distributed<sp/>random<sp/>number<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>between<sp/>-2^32*mult<sp/>and<sp/>+2^32*mult<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>random_triangular_(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mult)</highlight></codeline>
<codeline lineno="121"><highlight class="normal">{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mult<sp/>*<sp/>(<sp/>(double)<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>random_int_()<sp/>+<sp/>(double)<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>random_int_()<sp/>);</highlight></codeline>
<codeline lineno="123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/>F44_0<sp/>[16<sp/>+<sp/>32]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>(float)0,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)0,<sp/>(float)0,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)0,<sp/>(float)0,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)0,<sp/>(float)0,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)0,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>(float)0,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)0,<sp/>(float)0,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)0,<sp/>(float)0,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)0,<sp/>(float)0,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)0,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>(float)0,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)0,<sp/>(float)0,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)0,<sp/>(float)0,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)0,<sp/>(float)0,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)0,</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>(float)0,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)0,<sp/>(float)0,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)0,<sp/>(float)0,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)0,<sp/>(float)0,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)0,</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>(float)0,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)0,<sp/>(float)0,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)0,<sp/>(float)0,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)0,<sp/>(float)0,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)0,</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>(float)0,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)0,<sp/>(float)0,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)0,<sp/>(float)0,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)0,<sp/>(float)0,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)0</highlight></codeline>
<codeline lineno="135"><highlight class="normal">};</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/>F44_1<sp/>[16<sp/>+<sp/>32]<sp/>=<sp/>{<sp/><sp/></highlight><highlight class="comment">/*<sp/>SNR(w)<sp/>=<sp/>4.843163<sp/>dB,<sp/>SNR<sp/>=<sp/>-3.192134<sp/>dB<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>(float)<sp/>0.85018292704024355931,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>0.29089597350995344721,<sp/>(float)-0.05021866022121039450,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)-0.23545456294599161833,</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>(float)-0.58362726442227032096,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)-0.67038978965193036429,<sp/>(float)-0.38566861572833459221,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)-0.15218663390367969967,</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>(float)-0.02577543084864530676,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>0.14119295297688728127,<sp/>(float)<sp/>0.22398848581628781612,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>0.15401727203382084116,</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>(float)<sp/>0.05216161232906000929,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)-0.00282237820999675451,<sp/>(float)-0.03042794608323867363,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)-0.03109780942998826024,</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>(float)<sp/>0.85018292704024355931,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>0.29089597350995344721,<sp/>(float)-0.05021866022121039450,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)-0.23545456294599161833,</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>(float)-0.58362726442227032096,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)-0.67038978965193036429,<sp/>(float)-0.38566861572833459221,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)-0.15218663390367969967,</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>(float)-0.02577543084864530676,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>0.14119295297688728127,<sp/>(float)<sp/>0.22398848581628781612,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>0.15401727203382084116,</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>(float)<sp/>0.05216161232906000929,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)-0.00282237820999675451,<sp/>(float)-0.03042794608323867363,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)-0.03109780942998826024,</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>(float)<sp/>0.85018292704024355931,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>0.29089597350995344721,<sp/>(float)-0.05021866022121039450,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)-0.23545456294599161833,</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>(float)-0.58362726442227032096,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)-0.67038978965193036429,<sp/>(float)-0.38566861572833459221,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)-0.15218663390367969967,</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>(float)-0.02577543084864530676,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>0.14119295297688728127,<sp/>(float)<sp/>0.22398848581628781612,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>0.15401727203382084116,</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>(float)<sp/>0.05216161232906000929,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)-0.00282237820999675451,<sp/>(float)-0.03042794608323867363,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)-0.03109780942998826024,</highlight></codeline>
<codeline lineno="153"><highlight class="normal">};</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/>F44_2<sp/>[16<sp/>+<sp/>32]<sp/>=<sp/>{<sp/><sp/></highlight><highlight class="comment">/*<sp/>SNR(w)<sp/>=<sp/>10.060213<sp/>dB,<sp/>SNR<sp/>=<sp/>-12.766730<sp/>dB<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>(float)<sp/>1.78827593892108555290,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>0.95508210637394326553,<sp/>(float)-0.18447626783899924429,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)-0.44198126506275016437,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>(float)-0.88404052492547413497,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)-1.42218907262407452967,<sp/>(float)-1.02037566838362314995,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)-0.34861755756425577264,</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>(float)-0.11490230170431934434,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>0.12498899339968611803,<sp/>(float)<sp/>0.38065885268563131927,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>0.31883491321310506562,</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>(float)<sp/>0.10486838686563442765,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)-0.03105361685110374845,<sp/>(float)-0.06450524884075370758,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)-0.02939198261121969816,</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>(float)<sp/>1.78827593892108555290,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>0.95508210637394326553,<sp/>(float)-0.18447626783899924429,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)-0.44198126506275016437,</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>(float)-0.88404052492547413497,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)-1.42218907262407452967,<sp/>(float)-1.02037566838362314995,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)-0.34861755756425577264,</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>(float)-0.11490230170431934434,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>0.12498899339968611803,<sp/>(float)<sp/>0.38065885268563131927,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>0.31883491321310506562,</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>(float)<sp/>0.10486838686563442765,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)-0.03105361685110374845,<sp/>(float)-0.06450524884075370758,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)-0.02939198261121969816,</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>(float)<sp/>1.78827593892108555290,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>0.95508210637394326553,<sp/>(float)-0.18447626783899924429,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)-0.44198126506275016437,</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>(float)-0.88404052492547413497,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)-1.42218907262407452967,<sp/>(float)-1.02037566838362314995,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)-0.34861755756425577264,</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>(float)-0.11490230170431934434,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>0.12498899339968611803,<sp/>(float)<sp/>0.38065885268563131927,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>0.31883491321310506562,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>(float)<sp/>0.10486838686563442765,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)-0.03105361685110374845,<sp/>(float)-0.06450524884075370758,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)-0.02939198261121969816,</highlight></codeline>
<codeline lineno="171"><highlight class="normal">};</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/>F44_3<sp/>[16<sp/>+<sp/>32]<sp/>=<sp/>{<sp/><sp/></highlight><highlight class="comment">/*<sp/>SNR(w)<sp/>=<sp/>15.382598<sp/>dB,<sp/>SNR<sp/>=<sp/>-29.402334<sp/>dB<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>(float)<sp/>2.89072132015058161445,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>2.68932810943698754106,<sp/>(float)<sp/>0.21083359339410251227,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)-0.98385073324997617515,</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>(float)-1.11047823227097316719,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)-2.18954076314139673147,<sp/>(float)-2.36498032881953056225,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)-0.95484132880101140785,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>(float)-0.23924057925542965158,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)-0.13865235703915925642,<sp/>(float)<sp/>0.43587843191057992846,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>0.65903257226026665927,</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>(float)<sp/>0.24361815372443152787,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)-0.00235974960154720097,<sp/>(float)<sp/>0.01844166574603346289,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>0.01722945988740875099,</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>(float)<sp/>2.89072132015058161445,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>2.68932810943698754106,<sp/>(float)<sp/>0.21083359339410251227,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)-0.98385073324997617515,</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>(float)-1.11047823227097316719,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)-2.18954076314139673147,<sp/>(float)-2.36498032881953056225,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)-0.95484132880101140785,</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>(float)-0.23924057925542965158,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)-0.13865235703915925642,<sp/>(float)<sp/>0.43587843191057992846,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>0.65903257226026665927,</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>(float)<sp/>0.24361815372443152787,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)-0.00235974960154720097,<sp/>(float)<sp/>0.01844166574603346289,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>0.01722945988740875099,</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>(float)<sp/>2.89072132015058161445,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>2.68932810943698754106,<sp/>(float)<sp/>0.21083359339410251227,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)-0.98385073324997617515,</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>(float)-1.11047823227097316719,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)-2.18954076314139673147,<sp/>(float)-2.36498032881953056225,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)-0.95484132880101140785,</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>(float)-0.23924057925542965158,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)-0.13865235703915925642,<sp/>(float)<sp/>0.43587843191057992846,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>0.65903257226026665927,</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>(float)<sp/>0.24361815372443152787,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)-0.00235974960154720097,<sp/>(float)<sp/>0.01844166574603346289,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>0.01722945988740875099</highlight></codeline>
<codeline lineno="189"><highlight class="normal">};</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scalar16_(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>y)</highlight></codeline>
<codeline lineno="193"><highlight class="normal">{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>[<sp/>0]*y[<sp/>0]<sp/>+<sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>[<sp/>1]*y[<sp/>1]<sp/>+<sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>[<sp/>2]*y[<sp/>2]<sp/>+<sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>[<sp/>3]*y[<sp/>3]<sp/>+</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>[<sp/>4]*y[<sp/>4]<sp/>+<sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>[<sp/>5]*y[<sp/>5]<sp/>+<sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>[<sp/>6]*y[<sp/>6]<sp/>+<sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>[<sp/>7]*y[<sp/>7]<sp/>+</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>[<sp/>8]*y[<sp/>8]<sp/>+<sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>[<sp/>9]*y[<sp/>9]<sp/>+<sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>[10]*y[10]<sp/>+<sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>[11]*y[11]<sp/>+</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>[12]*y[12]<sp/>+<sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>[13]*y[13]<sp/>+<sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>[14]*y[14]<sp/>+<sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>[15]*y[15];</highlight></codeline>
<codeline lineno="199"><highlight class="normal">}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202" refid="replaygain__synthesis_8c_1a66e7ef80559c1f62f6ffbc5df0e63435" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="replaygain__synthesis_8c_1a66e7ef80559c1f62f6ffbc5df0e63435" kindref="member">FLAC__replaygain_synthesis__init_dither_context</ref>(<ref refid="struct_dither_context" kindref="compound">DitherContext</ref><sp/>*<ref refid="poly-fir_8h_1a2530554172d8629149ec56816eeaa947" kindref="member">d</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="metrics_8c_1a1eb8fc809d37cc6176f7f27374b063d0" kindref="member">bits</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shapingtype)</highlight></codeline>
<codeline lineno="203"><highlight class="normal">{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>default_dither<sp/>[]<sp/>=<sp/>{<sp/>92,<sp/>92,<sp/>88,<sp/>84,<sp/>81,<sp/>78,<sp/>74,<sp/>67,<sp/><sp/>0,<sp/><sp/>0<sp/>};</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xlftab_8c_1a42257a545daf5b7933d6e8f96adc74f2" kindref="member">F</ref><sp/>[]<sp/>=<sp/>{<sp/>F44_0,<sp/>F44_1,<sp/>F44_2,<sp/>F44_3<sp/>};</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indx;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shapingtype<sp/>&lt;<sp/>0)<sp/>shapingtype<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shapingtype<sp/>&gt;<sp/>3)<sp/>shapingtype<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;<ref refid="struct_dither_context_1a45c49e20d4990b7a1942eab165c90f61" kindref="member">ShapingType</ref><sp/>=<sp/>(<ref refid="replaygain__synthesis_8h_1ac9742b8037806648f7cf5e6ab62a42df" kindref="member">NoiseShaping</ref>)shapingtype;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>indx<sp/>=<sp/>bits<sp/>-<sp/>11<sp/>-<sp/>shapingtype;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(indx<sp/>&lt;<sp/>0)<sp/>indx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(indx<sp/>&gt;<sp/>9)<sp/>indx<sp/>=<sp/>9;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>memset<sp/>(<sp/>d-&gt;<ref refid="struct_dither_context_1a49ff3c226e326db2b683654f71a611b2" kindref="member">ErrorHistory</ref><sp/>,<sp/>0,<sp/>sizeof<sp/>(d-&gt;<ref refid="struct_dither_context_1a49ff3c226e326db2b683654f71a611b2" kindref="member">ErrorHistory</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>memset<sp/>(<sp/>d-&gt;<ref refid="struct_dither_context_1acbb902c41c907f29d55f3f3a595aa2c6" kindref="member">DitherHistory</ref>,<sp/>0,<sp/>sizeof<sp/>(d-&gt;<ref refid="struct_dither_context_1acbb902c41c907f29d55f3f3a595aa2c6" kindref="member">DitherHistory</ref>)<sp/>);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;<ref refid="struct_dither_context_1ab3784bc63bc8949efb2731de73a5b347" kindref="member">FilterCoeff</ref><sp/>=<sp/>F<sp/>[shapingtype];</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;<ref refid="struct_dither_context_1abb09fde51b8472ec21274b4fa595c132" kindref="member">Mask</ref><sp/><sp/><sp/>=<sp/>((<ref refid="ordinals_8h_1aa78c8c70a3eb8a58af7436f278acde8e" kindref="member">FLAC__uint64</ref>)-1)<sp/>&lt;&lt;<sp/>(32<sp/>-<sp/><ref refid="metrics_8c_1a1eb8fc809d37cc6176f7f27374b063d0" kindref="member">bits</ref>);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;<ref refid="struct_dither_context_1a81d1334271585e5249e3295565453519" kindref="member">Add</ref><sp/><sp/><sp/><sp/>=<sp/>0.5<sp/><sp/><sp/><sp/><sp/>*<sp/>((1L<sp/>&lt;&lt;<sp/>(32<sp/>-<sp/><ref refid="metrics_8c_1a1eb8fc809d37cc6176f7f27374b063d0" kindref="member">bits</ref>))<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;<ref refid="struct_dither_context_1a2bdd64b539541ea62a481830ec80b1ef" kindref="member">Dither</ref><sp/>=<sp/>0.01f*default_dither[indx]<sp/>/<sp/>(((<ref refid="ordinals_8h_1a12b57f75f760b9062a13bcda1bdb3f3e" kindref="member">FLAC__int64</ref>)1)<sp/>&lt;&lt;<sp/><ref refid="metrics_8c_1a1eb8fc809d37cc6176f7f27374b063d0" kindref="member">bits</ref>);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>d-&gt;<ref refid="struct_dither_context_1ab1e929de991885e8740b28fa16bf5dca" kindref="member">LastHistoryIndex</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="224"><highlight class="normal">}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="227"><highlight class="comment"><sp/>*<sp/>the<sp/>following<sp/>is<sp/>based<sp/>on<sp/>parts<sp/>of<sp/>wavegain.c</highlight></codeline>
<codeline lineno="228"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="ordinals_8h_1a12b57f75f760b9062a13bcda1bdb3f3e" kindref="member">FLAC__int64</ref><sp/>dither_output_(<ref refid="struct_dither_context" kindref="compound">DitherContext</ref><sp/>*<ref refid="poly-fir_8h_1a2530554172d8629149ec56816eeaa947" kindref="member">d</ref>,<sp/><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref><sp/>do_dithering,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shapingtype,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Sum,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>)</highlight></codeline>
<codeline lineno="231"><highlight class="normal">{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1a2530554172d8629149ec56816eeaa947" kindref="member">d</ref>;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="ordinals_8h_1a12b57f75f760b9062a13bcda1bdb3f3e" kindref="member">FLAC__int64</ref><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>doubletmp;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Sum2;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ordinals_8h_1a12b57f75f760b9062a13bcda1bdb3f3e" kindref="member">FLAC__int64</ref><sp/>val;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ROUND64(x)<sp/><sp/><sp/>(<sp/>doubletmp.d<sp/>=<sp/>(x)<sp/>+<sp/>d-&gt;Add<sp/>+<sp/>(FLAC__int64)FLAC__I64L(0x001FFFFD80000000),<sp/>doubletmp.i<sp/>-<sp/>(FLAC__int64)FLAC__I64L(0x433FFFFD80000000)<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(do_dithering)<sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(shapingtype<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/>tmp<sp/>=<sp/>random_equi_(d-&gt;<ref refid="struct_dither_context_1a2bdd64b539541ea62a481830ec80b1ef" kindref="member">Dither</ref>);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sum2<sp/>=<sp/>tmp<sp/>-<sp/>d-&gt;<ref refid="struct_dither_context_1a52d31acfd4fb1eb880bca836b70aafcd" kindref="member">LastRandomNumber</ref><sp/>[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>];</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="struct_dither_context_1a52d31acfd4fb1eb880bca836b70aafcd" kindref="member">LastRandomNumber</ref><sp/>[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>]<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)tmp;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sum2<sp/>=<sp/>Sum<sp/>+=<sp/>Sum2;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/><ref refid="replaygain__synthesis_8c_1ad2c961dbb18d64e2dd8586cd89885267" kindref="member">ROUND64</ref>(Sum2)<sp/>&amp;<sp/>d-&gt;<ref refid="struct_dither_context_1abb09fde51b8472ec21274b4fa595c132" kindref="member">Mask</ref>;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sum2<sp/>=<sp/>random_triangular_(d-&gt;<ref refid="struct_dither_context_1a2bdd64b539541ea62a481830ec80b1ef" kindref="member">Dither</ref>)<sp/>-<sp/>scalar16_(d-&gt;<ref refid="struct_dither_context_1acbb902c41c907f29d55f3f3a595aa2c6" kindref="member">DitherHistory</ref>[k],<sp/>d-&gt;<ref refid="struct_dither_context_1ab3784bc63bc8949efb2731de73a5b347" kindref="member">FilterCoeff</ref><sp/>+<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sum<sp/>+=<sp/>d-&gt;<ref refid="struct_dither_context_1acbb902c41c907f29d55f3f3a595aa2c6" kindref="member">DitherHistory</ref><sp/>[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>]<sp/>[(-1-<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)&amp;15]<sp/>=<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)Sum2;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Sum2<sp/>=<sp/>Sum<sp/>+<sp/>scalar16_(d-&gt;<ref refid="struct_dither_context_1a49ff3c226e326db2b683654f71a611b2" kindref="member">ErrorHistory</ref><sp/>[k],<sp/>d-&gt;<ref refid="struct_dither_context_1ab3784bc63bc8949efb2731de73a5b347" kindref="member">FilterCoeff</ref><sp/>+<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/><ref refid="replaygain__synthesis_8c_1ad2c961dbb18d64e2dd8586cd89885267" kindref="member">ROUND64</ref>(Sum2)<sp/>&amp;<sp/>d-&gt;<ref refid="struct_dither_context_1abb09fde51b8472ec21274b4fa595c132" kindref="member">Mask</ref>;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d-&gt;<ref refid="struct_dither_context_1a49ff3c226e326db2b683654f71a611b2" kindref="member">ErrorHistory</ref><sp/>[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>]<sp/>[(-1-<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)&amp;15]<sp/>=<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)(Sum<sp/>-<sp/>val);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="replaygain__synthesis_8c_1ad2c961dbb18d64e2dd8586cd89885267" kindref="member">ROUND64</ref>(Sum);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>ROUND64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>peak<sp/>=<sp/>0.f,</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_peak,</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>factor_clip</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="seqread_8c_1aa2a8c6fbe5ed24f9523eb4e01368e4bc" kindref="member">scale</ref>,</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dB;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>...</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>peak<sp/>is<sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref><sp/><ref refid="nasm_8h_1aaf57ffcfef0bee04f46c6ada2a905a8c" kindref="member">the</ref><sp/>range<sp/>-32768.0<sp/>..<sp/>32767.0</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>calculate<sp/>factors<sp/>for<sp/>ReplayGain<sp/>and<sp/>ClippingPrevention<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>*track_gain<sp/>=<sp/><ref refid="replaygain__analysis_8h_1a1f99ccdd8d6f787da3fcfb14da92d54d" kindref="member">GetTitleGain</ref>()<sp/>+<sp/>settings-&gt;man_gain;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="seqread_8c_1aa2a8c6fbe5ed24f9523eb4e01368e4bc" kindref="member">scale</ref><sp/>=<sp/>(float)<sp/>pow(10.,<sp/>*track_gain<sp/>*<sp/>0.05);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(settings-&gt;clip_prev)<sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>factor_clip<sp/><sp/>=<sp/>(float)<sp/>(32767./(<sp/>peak<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="seqread_8c_1aa2a8c6fbe5ed24f9523eb4e01368e4bc" kindref="member">scale</ref><sp/>&lt;<sp/>factor_clip)</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>factor_clip<sp/>=<sp/>1.f;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>factor_clip<sp/>/=<sp/><ref refid="seqread_8c_1aa2a8c6fbe5ed24f9523eb4e01368e4bc" kindref="member">scale</ref>;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="seqread_8c_1aa2a8c6fbe5ed24f9523eb4e01368e4bc" kindref="member">scale</ref><sp/>*=<sp/>factor_clip;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>new_peak<sp/>=<sp/>(float)<sp/>peak<sp/>*<sp/><ref refid="seqread_8c_1aa2a8c6fbe5ed24f9523eb4e01368e4bc" kindref="member">scale</ref>;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>dB<sp/>=<sp/>20.<sp/>*<sp/>log10(<ref refid="seqread_8c_1aa2a8c6fbe5ed24f9523eb4e01368e4bc" kindref="member">scale</ref>);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>*track_gain<sp/>=<sp/>(float)<sp/>dB;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="seqread_8c_1aa2a8c6fbe5ed24f9523eb4e01368e4bc" kindref="member">scale</ref><sp/>=<sp/>pow(10.,<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)gain<sp/>*<sp/>0.05);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295" refid="replaygain__synthesis_8c_1a5723c5f098ef97d9cd9f4c0701891366" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="replaygain__synthesis_8c_1a5723c5f098ef97d9cd9f4c0701891366" kindref="member">FLAC__replaygain_synthesis__apply_gain</ref>(<ref refid="ordinals_8h_1a5eb569b12d5b047cdacada4d57924ee3" kindref="member">FLAC__byte</ref><sp/>*<ref refid="octave__test_8m_1a5053380bd07906fdf0366abb304db2af" kindref="member">data_out</ref>,<sp/><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref><sp/>little_endian_data_out,<sp/><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref><sp/>unsigned_data_out,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="ordinals_8h_1a33fd77bfe6d685541a0c034a75deccdc" kindref="member">FLAC__int32</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>input[],<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>wide_samples,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>channels,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>source_bps,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>target_bps,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scale,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref><sp/>hard_limit,<sp/><ref refid="ordinals_8h_1a95103469f1cbd78b8cf250194985b34e" kindref="member">FLAC__bool</ref><sp/>do_dithering,<sp/><ref refid="struct_dither_context" kindref="compound">DitherContext</ref><sp/>*dither_context)</highlight></codeline>
<codeline lineno="296"><highlight class="normal">{</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="ordinals_8h_1a12b57f75f760b9062a13bcda1bdb3f3e" kindref="member">FLAC__int64</ref><sp/>hard_clip_factors_[33]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*<sp/>0<sp/>bits-per-sample<sp/>(not<sp/>supported)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*<sp/>1<sp/>bits-per-sample<sp/>(not<sp/>supported)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*<sp/>2<sp/>bits-per-sample<sp/>(not<sp/>supported)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*<sp/>3<sp/>bits-per-sample<sp/>(not<sp/>supported)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-8,<sp/></highlight><highlight class="comment">/*<sp/>4<sp/>bits-per-sample<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-16,<sp/></highlight><highlight class="comment">/*<sp/>5<sp/>bits-per-sample<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-32,<sp/></highlight><highlight class="comment">/*<sp/>6<sp/>bits-per-sample<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-64,<sp/></highlight><highlight class="comment">/*<sp/>7<sp/>bits-per-sample<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-128,<sp/></highlight><highlight class="comment">/*<sp/>8<sp/>bits-per-sample<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-256,<sp/></highlight><highlight class="comment">/*<sp/>9<sp/>bits-per-sample<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-512,<sp/></highlight><highlight class="comment">/*<sp/>10<sp/>bits-per-sample<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-1024,<sp/></highlight><highlight class="comment">/*<sp/>11<sp/>bits-per-sample<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-2048,<sp/></highlight><highlight class="comment">/*<sp/>12<sp/>bits-per-sample<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-4096,<sp/></highlight><highlight class="comment">/*<sp/>13<sp/>bits-per-sample<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-8192,<sp/></highlight><highlight class="comment">/*<sp/>14<sp/>bits-per-sample<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-16384,<sp/></highlight><highlight class="comment">/*<sp/>15<sp/>bits-per-sample<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-32768,<sp/></highlight><highlight class="comment">/*<sp/>16<sp/>bits-per-sample<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-65536,<sp/></highlight><highlight class="comment">/*<sp/>17<sp/>bits-per-sample<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-131072,<sp/></highlight><highlight class="comment">/*<sp/>18<sp/>bits-per-sample<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-262144,<sp/></highlight><highlight class="comment">/*<sp/>19<sp/>bits-per-sample<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-524288,<sp/></highlight><highlight class="comment">/*<sp/>20<sp/>bits-per-sample<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-1048576,<sp/></highlight><highlight class="comment">/*<sp/>21<sp/>bits-per-sample<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-2097152,<sp/></highlight><highlight class="comment">/*<sp/>22<sp/>bits-per-sample<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-4194304,<sp/></highlight><highlight class="comment">/*<sp/>23<sp/>bits-per-sample<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-8388608,<sp/></highlight><highlight class="comment">/*<sp/>24<sp/>bits-per-sample<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-16777216,<sp/></highlight><highlight class="comment">/*<sp/>25<sp/>bits-per-sample<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-33554432,<sp/></highlight><highlight class="comment">/*<sp/>26<sp/>bits-per-sample<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-67108864,<sp/></highlight><highlight class="comment">/*<sp/>27<sp/>bits-per-sample<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-134217728,<sp/></highlight><highlight class="comment">/*<sp/>28<sp/>bits-per-sample<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-268435456,<sp/></highlight><highlight class="comment">/*<sp/>29<sp/>bits-per-sample<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-536870912,<sp/></highlight><highlight class="comment">/*<sp/>30<sp/>bits-per-sample<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-1073741824,<sp/></highlight><highlight class="comment">/*<sp/>31<sp/>bits-per-sample<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="ordinals_8h_1a12b57f75f760b9062a13bcda1bdb3f3e" kindref="member">FLAC__int64</ref>)(-1073741824)<sp/>*<sp/>2<sp/></highlight><highlight class="comment">/*<sp/>32<sp/>bits-per-sample<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="ordinals_8h_1a33fd77bfe6d685541a0c034a75deccdc" kindref="member">FLAC__int32</ref><sp/>conv_shift<sp/>=<sp/>32<sp/>-<sp/>target_bps;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="ordinals_8h_1a12b57f75f760b9062a13bcda1bdb3f3e" kindref="member">FLAC__int64</ref><sp/>hard_clip_factor<sp/>=<sp/>hard_clip_factors_[target_bps];</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="335"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>The<sp/>integer<sp/>input<sp/>coming<sp/>in<sp/>has<sp/>a<sp/>varying<sp/>range<sp/>based<sp/>on<sp/>the</highlight></codeline>
<codeline lineno="336"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>source_bps.<sp/><sp/>We<sp/>want<sp/>to<sp/>normalize<sp/>it<sp/>to<sp/>[-1.0,<sp/>1.0)<sp/>so<sp/>instead</highlight></codeline>
<codeline lineno="337"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>of<sp/>doing<sp/>two<sp/>multiplies<sp/>on<sp/>each<sp/>sample,<sp/>we<sp/>just<sp/>multiple</highlight></codeline>
<codeline lineno="338"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>&apos;scale&apos;<sp/>by<sp/>1/(2^(source_bps-1))</highlight></codeline>
<codeline lineno="339"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>multi_scale<sp/>=<sp/>scale<sp/>/<sp/>(double)(1u<sp/>&lt;&lt;<sp/>(source_bps-1));</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ordinals_8h_1a5eb569b12d5b047cdacada4d57924ee3" kindref="member">FLAC__byte</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref><sp/>=<sp/><ref refid="octave__test_8m_1a5053380bd07906fdf0366abb304db2af" kindref="member">data_out</ref>;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/>channel;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="ordinals_8h_1a33fd77bfe6d685541a0c034a75deccdc" kindref="member">FLAC__int32</ref><sp/>*input_;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sample;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>bytes_per_sample<sp/>=<sp/>target_bps<sp/>/<sp/>8;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>last_history_index<sp/>=<sp/>dither_context-&gt;<ref refid="struct_dither_context_1ab1e929de991885e8740b28fa16bf5dca" kindref="member">LastHistoryIndex</ref>;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="replaygain__synthesis_8h_1ac9742b8037806648f7cf5e6ab62a42df" kindref="member">NoiseShaping</ref><sp/>noise_shaping<sp/>=<sp/>dither_context-&gt;<ref refid="struct_dither_context_1a45c49e20d4990b7a1942eab165c90f61" kindref="member">ShapingType</ref>;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ordinals_8h_1a12b57f75f760b9062a13bcda1bdb3f3e" kindref="member">FLAC__int64</ref><sp/>val64;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ordinals_8h_1a33fd77bfe6d685541a0c034a75deccdc" kindref="member">FLAC__int32</ref><sp/>val32;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="ordinals_8h_1a33fd77bfe6d685541a0c034a75deccdc" kindref="member">FLAC__int32</ref><sp/>uval32;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="ordinals_8h_1a9c4005ea7ef8d564b0cc993cdd0e4e5e" kindref="member">FLAC__uint32</ref><sp/>twiggle<sp/>=<sp/>1u<sp/>&lt;&lt;<sp/>(target_bps<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(channels<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>channels<sp/>&lt;=<sp/><ref refid="replaygain__synthesis_8h_1aaa75e1911cdd65a4462bee073bb19822" kindref="member">FLAC_SHARE__MAX_SUPPORTED_CHANNELS</ref>);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(source_bps<sp/>&gt;=<sp/>4);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(target_bps<sp/>&gt;=<sp/>4);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(source_bps<sp/>&lt;=<sp/>32);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>(target_bps<sp/>&lt;<sp/>32);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="assert_8h_1abbb0225e0bf865be91804deedce4511e" kindref="member">FLAC__ASSERT</ref>((target_bps<sp/>&amp;<sp/>7)<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(channel<sp/>=<sp/>0;<sp/>channel<sp/>&lt;<sp/>channels;<sp/>channel++)<sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>incr<sp/>=<sp/>bytes_per_sample<sp/>*<sp/>channels;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_out<sp/>=<sp/>start<sp/>+<sp/>bytes_per_sample<sp/>*<sp/>channel;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input_<sp/>=<sp/>input[channel];</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>wide_samples;<sp/>i++,<sp/>data_out<sp/>+=<sp/>incr)<sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sample<sp/>=<sp/>(double)input_[i]<sp/>*<sp/>multi_scale;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(hard_limit)<sp/>{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>hard<sp/>6dB<sp/>limiting<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sample<sp/>&lt;<sp/>-0.5)</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sample<sp/>=<sp/>tanh((sample<sp/>+<sp/>0.5)<sp/>/<sp/>(1-0.5))<sp/>*<sp/>(1-0.5)<sp/>-<sp/>0.5;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(sample<sp/>&gt;<sp/>0.5)</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sample<sp/>=<sp/>tanh((sample<sp/>-<sp/>0.5)<sp/>/<sp/>(1-0.5))<sp/>*<sp/>(1-0.5)<sp/>+<sp/>0.5;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sample<sp/>*=<sp/>2147483647.;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val64<sp/>=<sp/>dither_output_(dither_context,<sp/>do_dithering,<sp/>noise_shaping,<sp/>(i<sp/>+<sp/>last_history_index)<sp/>%<sp/>32,<sp/>sample,<sp/>channel)<sp/>&gt;&gt;<sp/>conv_shift;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val32<sp/>=<sp/>(<ref refid="ordinals_8h_1a33fd77bfe6d685541a0c034a75deccdc" kindref="member">FLAC__int32</ref>)val64;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(val64<sp/>&gt;=<sp/>-hard_clip_factor)</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val32<sp/>=<sp/>(<ref refid="ordinals_8h_1a33fd77bfe6d685541a0c034a75deccdc" kindref="member">FLAC__int32</ref>)(-(hard_clip_factor+1));</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(val64<sp/>&lt;<sp/>hard_clip_factor)</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val32<sp/>=<sp/>(<ref refid="ordinals_8h_1a33fd77bfe6d685541a0c034a75deccdc" kindref="member">FLAC__int32</ref>)hard_clip_factor;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uval32<sp/>=<sp/>(<ref refid="ordinals_8h_1a9c4005ea7ef8d564b0cc993cdd0e4e5e" kindref="member">FLAC__uint32</ref>)val32;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unsigned_data_out)</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uval32<sp/>^=<sp/>twiggle;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(little_endian_data_out)<sp/>{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(target_bps)<sp/>{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>24:</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_out[2]<sp/>=<sp/>(<ref refid="ordinals_8h_1a5eb569b12d5b047cdacada4d57924ee3" kindref="member">FLAC__byte</ref>)(uval32<sp/>&gt;&gt;<sp/>16);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>fall<sp/>through<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>16:</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_out[1]<sp/>=<sp/>(<ref refid="ordinals_8h_1a5eb569b12d5b047cdacada4d57924ee3" kindref="member">FLAC__byte</ref>)(uval32<sp/>&gt;&gt;<sp/>8);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>fall<sp/>through<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>8:</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_out[0]<sp/>=<sp/>(<ref refid="ordinals_8h_1a5eb569b12d5b047cdacada4d57924ee3" kindref="member">FLAC__byte</ref>)uval32;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(target_bps)<sp/>{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>24:</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_out[0]<sp/>=<sp/>(<ref refid="ordinals_8h_1a5eb569b12d5b047cdacada4d57924ee3" kindref="member">FLAC__byte</ref>)(uval32<sp/>&gt;&gt;<sp/>16);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_out[1]<sp/>=<sp/>(<ref refid="ordinals_8h_1a5eb569b12d5b047cdacada4d57924ee3" kindref="member">FLAC__byte</ref>)(uval32<sp/>&gt;&gt;<sp/>8);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_out[2]<sp/>=<sp/>(<ref refid="ordinals_8h_1a5eb569b12d5b047cdacada4d57924ee3" kindref="member">FLAC__byte</ref>)uval32;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>16:</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_out[0]<sp/>=<sp/>(<ref refid="ordinals_8h_1a5eb569b12d5b047cdacada4d57924ee3" kindref="member">FLAC__byte</ref>)(uval32<sp/>&gt;&gt;<sp/>8);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_out[1]<sp/>=<sp/>(<ref refid="ordinals_8h_1a5eb569b12d5b047cdacada4d57924ee3" kindref="member">FLAC__byte</ref>)uval32;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>8:</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_out[0]<sp/>=<sp/>(<ref refid="ordinals_8h_1a5eb569b12d5b047cdacada4d57924ee3" kindref="member">FLAC__byte</ref>)uval32;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>dither_context-&gt;<ref refid="struct_dither_context_1ab1e929de991885e8740b28fa16bf5dca" kindref="member">LastHistoryIndex</ref><sp/>=<sp/>(last_history_index<sp/>+<sp/>wide_samples)<sp/>%<sp/>32;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wide_samples<sp/>*<sp/>channels<sp/>*<sp/>(target_bps/8);</highlight></codeline>
<codeline lineno="423"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/src/share/replaygain_synthesis/replaygain_synthesis.c"/>
  </compounddef>
</doxygen>
