<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_file_formats_8cpp" kind="file" language="C++">
    <compoundname>FileFormats.cpp</compoundname>
    <includes local="no">wx/arrstr.h</includes>
    <includes local="no">wx/intl.h</includes>
    <includes local="yes">sndfile.h</includes>
    <includes refid="_file_formats_8h" local="yes">FileFormats.h</includes>
    <includes refid="_internat_8h" local="yes">Internat.h</includes>
    <incdepgraph>
      <node id="46086">
        <label>C:/_dev/OpenU/Audacity/audacity/src/FileFormats.cpp</label>
        <link refid="FileFormats.cpp"/>
        <childnode refid="46087" relation="include">
        </childnode>
        <childnode refid="46088" relation="include">
        </childnode>
        <childnode refid="46089" relation="include">
        </childnode>
        <childnode refid="46090" relation="include">
        </childnode>
        <childnode refid="46094" relation="include">
        </childnode>
      </node>
      <node id="46094">
        <label>Internat.h</label>
        <link refid="_internat_8h"/>
        <childnode refid="46087" relation="include">
        </childnode>
        <childnode refid="46092" relation="include">
        </childnode>
        <childnode refid="46095" relation="include">
        </childnode>
      </node>
      <node id="46090">
        <label>FileFormats.h</label>
        <link refid="_file_formats_8h"/>
        <childnode refid="46091" relation="include">
        </childnode>
        <childnode refid="46087" relation="include">
        </childnode>
        <childnode refid="46092" relation="include">
        </childnode>
        <childnode refid="46093" relation="include">
        </childnode>
        <childnode refid="46089" relation="include">
        </childnode>
      </node>
      <node id="46091">
        <label>wx/list.h</label>
      </node>
      <node id="46089">
        <label>sndfile.h</label>
      </node>
      <node id="46088">
        <label>wx/intl.h</label>
      </node>
      <node id="46093">
        <label>Audacity.h</label>
        <link refid="_audacity_8h"/>
      </node>
      <node id="46092">
        <label>wx/string.h</label>
      </node>
      <node id="46087">
        <label>wx/arrstr.h</label>
      </node>
      <node id="46095">
        <label>wx/longlong.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_file_formats_8cpp_1abe50f23d46e36ca6d3f8ec8f5d99ec35" prot="public" static="yes" mutable="no">
        <type><ref refid="struct_s_f___f_o_r_m_a_t___i_n_f_o" kindref="compound">SF_FORMAT_INFO</ref></type>
        <definition>SF_FORMAT_INFO g_format_info</definition>
        <argsstring></argsstring>
        <name>g_format_info</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/FileFormats.cpp" line="178" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/FileFormats.cpp" bodystart="178" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_file_formats_8cpp_1ad25a29b5fd877826d8e76685f1b88cbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int sf_num_headers</definition>
        <argsstring>()</argsstring>
        <name>sf_num_headers</name>
        <briefdescription>
<para>Get the number of container formats supported by libsndfile. </para>        </briefdescription>
        <detaileddescription>
<para>Uses SFC_GET_FORMAT_MAJOR_COUNT in sf_command interface </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/FileFormats.cpp" line="34" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/FileFormats.cpp" bodystart="34" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="_file_formats_8cpp_1a3367321be07183832ef45a2316748157" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>wxString</type>
        <definition>wxString sf_header_index_name</definition>
        <argsstring>(int format)</argsstring>
        <name>sf_header_index_name</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>format_num</declname>
          <defname>format</defname>
        </param>
        <briefdescription>
<para>Get the name of a container format from libsndfile. </para>        </briefdescription>
        <detaileddescription>
<para>Uses SFC_GET_FORMAT_MAJOR in the <ref refid="sndfile_8c_1a0999a38427a413a1b0a6caa36c4c5b75" kindref="member">sf_command()</ref> interface. Resulting C string from libsndfile is converted to a wxString <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>format_num</parametername>
</parameternamelist>
<parameterdescription>
<para>The libsndfile format number for the container format required </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/FileFormats.cpp" line="44" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/FileFormats.cpp" bodystart="44" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="_file_formats_8cpp_1a429d5f677bf518a2dcb859b11bb24191" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>unsigned int sf_header_index_to_type</definition>
        <argsstring>(int i)</argsstring>
        <name>sf_header_index_to_type</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/FileFormats.cpp" line="56" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/FileFormats.cpp" bodystart="56" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="_file_formats_8cpp_1aeae40e1b5225495f63194686e600c4c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int sf_num_encodings</definition>
        <argsstring>()</argsstring>
        <name>sf_num_encodings</name>
        <briefdescription>
<para>Get the number of data encodings libsndfile supports (in any container or none. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/FileFormats.cpp" line="72" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/FileFormats.cpp" bodystart="72" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="_file_formats_8cpp_1aad2300a9f86e7010a82e0d4663aea8b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>wxString</type>
        <definition>wxString sf_encoding_index_name</definition>
        <argsstring>(int i)</argsstring>
        <name>sf_encoding_index_name</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>encoding_num</declname>
          <defname>i</defname>
        </param>
        <briefdescription>
<para>Get the string name of the data encoding of the requested format. </para>        </briefdescription>
        <detaileddescription>
<para>uses SFC_GET_FORMAT_SUBTYPE </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/FileFormats.cpp" line="81" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/FileFormats.cpp" bodystart="81" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="_file_formats_8cpp_1a790d879add0f839ca9ea57d69b6dadb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>unsigned int sf_encoding_index_to_subtype</definition>
        <argsstring>(int i)</argsstring>
        <name>sf_encoding_index_to_subtype</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/FileFormats.cpp" line="92" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/FileFormats.cpp" bodystart="92" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="_file_formats_8cpp_1a8e01d2349304b3816faccd34e218379b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>wxString</type>
        <definition>wxString sf_header_name</definition>
        <argsstring>(int format)</argsstring>
        <name>sf_header_name</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>format</declname>
        </param>
        <briefdescription>
<para>Get the string name of the specified container format. </para>        </briefdescription>
        <detaileddescription>
<para>AND format with SF_FORMAT_TYPEMASK to get only the container format and then use SFC_GET_FORMAT_INFO to get the description <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>the libsndfile format to get the name for (only the container part is used) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/FileFormats.cpp" line="108" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/FileFormats.cpp" bodystart="108" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="_file_formats_8cpp_1a63dec5511ff3bad3e2b7e03cd30868b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>wxString</type>
        <definition>wxString sf_header_shortname</definition>
        <argsstring>(int format)</argsstring>
        <name>sf_header_shortname</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>format</declname>
        </param>
        <briefdescription>
<para>Get an abbreviated form of the string name of the specified format. </para>        </briefdescription>
        <detaileddescription>
<para>Do <ref refid="_file_formats_8h_1a8e01d2349304b3816faccd34e218379b" kindref="member">sf_header_name()</ref> then truncate the string at the first space in the name to get just the first word of the format name. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>the libsndfile format to get the name for (only the container part is used) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/FileFormats.cpp" line="119" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/FileFormats.cpp" bodystart="119" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="_file_formats_8cpp_1a2f25ea91afdb2f7f0a58dbf96af06d93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>wxString</type>
        <definition>wxString sf_header_extension</definition>
        <argsstring>(int format)</argsstring>
        <name>sf_header_extension</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>format</declname>
        </param>
        <briefdescription>
<para>Get the most common file extension for the given format. </para>        </briefdescription>
        <detaileddescription>
<para>AND the given format with SF_FORMAT_TYPEMASK to get just the container format, then retreive the most common extension using SFC_GET_FORMAT_INFO. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>the libsndfile format to get the name for (only the container part is used) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/FileFormats.cpp" line="147" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/FileFormats.cpp" bodystart="147" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="_file_formats_8cpp_1a95d72947a7eaf99f00c926de8e3a68c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>wxString</type>
        <definition>wxString sf_encoding_name</definition>
        <argsstring>(int encoding)</argsstring>
        <name>sf_encoding_name</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>encoding_num</declname>
          <defname>encoding</defname>
        </param>
        <briefdescription>
<para>Get the string name of the specified data encoding. </para>        </briefdescription>
        <detaileddescription>
<para>AND encoding_num with SF_FORMAT_SUBMASK to get only the data encoding and then use SFC_GET_FORMAT_INFO to get the description <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>encoding_num</parametername>
</parameternamelist>
<parameterdescription>
<para>the libsndfile encoding to get the name for (only the data encoding is used) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/FileFormats.cpp" line="158" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/FileFormats.cpp" bodystart="158" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="_file_formats_8cpp_1abba66d576038758a12e55fdb7be0171f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int sf_num_simple_formats</definition>
        <argsstring>()</argsstring>
        <name>sf_num_simple_formats</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/FileFormats.cpp" line="169" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/FileFormats.cpp" bodystart="169" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="_file_formats_8cpp_1a6608819476650df4e863ff413e1faaa1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_s_f___f_o_r_m_a_t___i_n_f_o" kindref="compound">SF_FORMAT_INFO</ref> *</type>
        <definition>SF_FORMAT_INFO* sf_simple_format</definition>
        <argsstring>(int i)</argsstring>
        <name>sf_simple_format</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/FileFormats.cpp" line="180" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/FileFormats.cpp" bodystart="180" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="_file_formats_8cpp_1a4894b4d75ca7490835d92bc0c852ba27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool sf_subtype_more_than_16_bits</definition>
        <argsstring>(unsigned int format)</argsstring>
        <name>sf_subtype_more_than_16_bits</name>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/FileFormats.cpp" line="191" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/FileFormats.cpp" bodystart="191" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="_file_formats_8cpp_1a43966662f6cd55d91888b424b8c2372a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool sf_subtype_is_integer</definition>
        <argsstring>(unsigned int format)</argsstring>
        <name>sf_subtype_is_integer</name>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/FileFormats.cpp" line="200" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/FileFormats.cpp" bodystart="200" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="_file_formats_8cpp_1afc6e3d1bf25d95a9ed719705bbd10efa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>wxArrayString</type>
        <definition>wxArrayString sf_get_all_extensions</definition>
        <argsstring>()</argsstring>
        <name>sf_get_all_extensions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/FileFormats.cpp" line="208" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/FileFormats.cpp" bodystart="208" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="_file_formats_8cpp_1a9b51367ecf6522d291caefabb77c6c4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>wxString</type>
        <definition>wxString sf_normalize_name</definition>
        <argsstring>(const char *name)</argsstring>
        <name>sf_normalize_name</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/FileFormats.cpp" line="240" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/FileFormats.cpp" bodystart="240" bodyend="251"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Works with libsndfile to provide encoding and other file information. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>Audacity:<sp/>A<sp/>Digital<sp/>Audio<sp/>Editor</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>FileFormats.cpp</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>Dominic<sp/>Mazzoni</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment">*******************************************************************/</highlight><highlight class="comment">/*******************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/arrstr.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/intl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;sndfile.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SNDFILE_1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>Requires<sp/>libsndfile<sp/>1.0<sp/>or<sp/>higher</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_file_formats_8h" kindref="compound">FileFormats.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_internat_8h" kindref="compound">Internat.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>enumerating<sp/>headers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="_file_formats_8h_1ad25a29b5fd877826d8e76685f1b88cbd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_file_formats_8cpp_1ad25a29b5fd877826d8e76685f1b88cbd" kindref="member">sf_num_headers</ref>()</highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><ref refid="sndfile_8c_1a0999a38427a413a1b0a6caa36c4c5b75" kindref="member">sf_command</ref>(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1aff44cf33e83896b8e5102305d23db5aca77bfdb40654cc3675ce02e4888dbeddd" kindref="member">SFC_GET_FORMAT_MAJOR_COUNT</ref>,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;count,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(count));</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="_file_formats_8h_1ae0827ff9b8db34937ecec6dd93d098d0" refkind="member"><highlight class="normal">wxString<sp/><ref refid="_file_formats_8cpp_1a3367321be07183832ef45a2316748157" kindref="member">sf_header_index_name</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref>)</highlight></codeline>
<codeline lineno="45"><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_s_f___f_o_r_m_a_t___i_n_f_o" kindref="compound">SF_FORMAT_INFO</ref><sp/><sp/><sp/>format_info;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/>memset(&amp;format_info,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(format_info));</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/>format_info.<ref refid="struct_s_f___f_o_r_m_a_t___i_n_f_o_1a8d07503c07b5330c298341ca03859f66" kindref="member">format</ref><sp/>=<sp/><ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><ref refid="sndfile_8c_1a0999a38427a413a1b0a6caa36c4c5b75" kindref="member">sf_command</ref>(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1aff44cf33e83896b8e5102305d23db5aca419b09dc5dff072b3a7b4f801d51df42" kindref="member">SFC_GET_FORMAT_MAJOR</ref>,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;format_info,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(format_info))<sp/>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_internat_8h_1a5ed4c8747b1c367321f0494f01dd61fa" kindref="member">LAT1CTOWX</ref>(format_info.<ref refid="struct_s_f___f_o_r_m_a_t___i_n_f_o_1af9e33bd709af81d99f3d145d86c41273" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="_file_formats_8h_1a6627b39dbb21c37d0dbe58b901c9d323" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_file_formats_8cpp_1a429d5f677bf518a2dcb859b11bb24191" kindref="member">sf_header_index_to_type</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)</highlight></codeline>
<codeline lineno="57"><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_s_f___f_o_r_m_a_t___i_n_f_o" kindref="compound">SF_FORMAT_INFO</ref><sp/><sp/><sp/>format_info<sp/>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/>memset(&amp;format_info,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(format_info));</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/>format_info.<ref refid="struct_s_f___f_o_r_m_a_t___i_n_f_o_1a8d07503c07b5330c298341ca03859f66" kindref="member">format</ref><sp/>=<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><ref refid="sndfile_8c_1a0999a38427a413a1b0a6caa36c4c5b75" kindref="member">sf_command</ref><sp/>(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1aff44cf33e83896b8e5102305d23db5aca419b09dc5dff072b3a7b4f801d51df42" kindref="member">SFC_GET_FORMAT_MAJOR</ref>,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;format_info,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(format_info));</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>format_info.<ref refid="struct_s_f___f_o_r_m_a_t___i_n_f_o_1a8d07503c07b5330c298341ca03859f66" kindref="member">format</ref><sp/>&amp;<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea4d9e4f32f119d026fdc74a88e9d41e87" kindref="member">SF_FORMAT_TYPEMASK</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal">}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">//<sp/>enumerating<sp/>encodings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="_file_formats_8h_1aeae40e1b5225495f63194686e600c4c7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_file_formats_8cpp_1aeae40e1b5225495f63194686e600c4c7" kindref="member">sf_num_encodings</ref>()</highlight></codeline>
<codeline lineno="73"><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref><sp/>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><ref refid="sndfile_8c_1a0999a38427a413a1b0a6caa36c4c5b75" kindref="member">sf_command</ref><sp/>(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1aff44cf33e83896b8e5102305d23db5aca7e609f53251fc32791abc93d286181ca" kindref="member">SFC_GET_FORMAT_SUBTYPE_COUNT</ref>,<sp/>&amp;count,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">))<sp/>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="_file_formats_8h_1a8f069cf91a2d563093d92a0cfb24efc0" refkind="member"><highlight class="normal">wxString<sp/><ref refid="_file_formats_8cpp_1aad2300a9f86e7010a82e0d4663aea8b4" kindref="member">sf_encoding_index_name</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)</highlight></codeline>
<codeline lineno="82"><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_s_f___f_o_r_m_a_t___i_n_f_o" kindref="compound">SF_FORMAT_INFO</ref><sp/><sp/><sp/>format_info<sp/>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/>memset(&amp;format_info,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(format_info));</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/>format_info.<ref refid="struct_s_f___f_o_r_m_a_t___i_n_f_o_1a8d07503c07b5330c298341ca03859f66" kindref="member">format</ref><sp/>=<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><ref refid="sndfile_8c_1a0999a38427a413a1b0a6caa36c4c5b75" kindref="member">sf_command</ref><sp/>(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1aff44cf33e83896b8e5102305d23db5aca0a633c553b52269e99ed2fc4a9baf74a" kindref="member">SFC_GET_FORMAT_SUBTYPE</ref>,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;format_info,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(format_info));</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_file_formats_8cpp_1a9b51367ecf6522d291caefabb77c6c4d" kindref="member">sf_normalize_name</ref>(format_info.<ref refid="struct_s_f___f_o_r_m_a_t___i_n_f_o_1af9e33bd709af81d99f3d145d86c41273" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="_file_formats_8h_1a6e5a9be995970243408e389a4294c5b4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_file_formats_8cpp_1a790d879add0f839ca9ea57d69b6dadb6" kindref="member">sf_encoding_index_to_subtype</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)</highlight></codeline>
<codeline lineno="93"><highlight class="normal">{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_s_f___f_o_r_m_a_t___i_n_f_o" kindref="compound">SF_FORMAT_INFO</ref><sp/><sp/><sp/>format_info<sp/>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/>memset(&amp;format_info,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(format_info));</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/>format_info.<ref refid="struct_s_f___f_o_r_m_a_t___i_n_f_o_1a8d07503c07b5330c298341ca03859f66" kindref="member">format</ref><sp/>=<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><ref refid="sndfile_8c_1a0999a38427a413a1b0a6caa36c4c5b75" kindref="member">sf_command</ref><sp/>(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1aff44cf33e83896b8e5102305d23db5aca0a633c553b52269e99ed2fc4a9baf74a" kindref="member">SFC_GET_FORMAT_SUBTYPE</ref>,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;format_info,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(format_info));</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>format_info.<ref refid="struct_s_f___f_o_r_m_a_t___i_n_f_o_1a8d07503c07b5330c298341ca03859f66" kindref="member">format</ref><sp/>&amp;<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2feae792e42fc6619187743f7741e7044240" kindref="member">SF_FORMAT_SUBMASK</ref>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">//<sp/>getting<sp/>info<sp/>about<sp/>an<sp/>actual<sp/>SF<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="_file_formats_8h_1a8e01d2349304b3816faccd34e218379b" refkind="member"><highlight class="normal">wxString<sp/><ref refid="_file_formats_8cpp_1a8e01d2349304b3816faccd34e218379b" kindref="member">sf_header_name</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref>)</highlight></codeline>
<codeline lineno="109"><highlight class="normal">{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_s_f___f_o_r_m_a_t___i_n_f_o" kindref="compound">SF_FORMAT_INFO</ref><sp/><sp/><sp/>format_info;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/>memset(&amp;format_info,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(format_info));</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/>format_info.<ref refid="struct_s_f___f_o_r_m_a_t___i_n_f_o_1a8d07503c07b5330c298341ca03859f66" kindref="member">format</ref><sp/>=<sp/>(format<sp/>&amp;<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea4d9e4f32f119d026fdc74a88e9d41e87" kindref="member">SF_FORMAT_TYPEMASK</ref>);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><ref refid="sndfile_8c_1a0999a38427a413a1b0a6caa36c4c5b75" kindref="member">sf_command</ref>(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1aff44cf33e83896b8e5102305d23db5acaf9e55f87caeb9836223e2b3d406c16e3" kindref="member">SFC_GET_FORMAT_INFO</ref>,<sp/>&amp;format_info,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(format_info));</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_internat_8h_1a5ed4c8747b1c367321f0494f01dd61fa" kindref="member">LAT1CTOWX</ref>(format_info.<ref refid="struct_s_f___f_o_r_m_a_t___i_n_f_o_1af9e33bd709af81d99f3d145d86c41273" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119" refid="_file_formats_8h_1a63dec5511ff3bad3e2b7e03cd30868b2" refkind="member"><highlight class="normal">wxString<sp/><ref refid="_file_formats_8cpp_1a63dec5511ff3bad3e2b7e03cd30868b2" kindref="member">sf_header_shortname</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref>)</highlight></codeline>
<codeline lineno="120"><highlight class="normal">{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_s_f___f_o_r_m_a_t___i_n_f_o" kindref="compound">SF_FORMAT_INFO</ref><sp/><sp/><sp/>format_info;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tmp;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/>memset(&amp;format_info,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(format_info));</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/>format_info.<ref refid="struct_s_f___f_o_r_m_a_t___i_n_f_o_1a8d07503c07b5330c298341ca03859f66" kindref="member">format</ref><sp/>=<sp/>(format<sp/>&amp;<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea4d9e4f32f119d026fdc74a88e9d41e87" kindref="member">SF_FORMAT_TYPEMASK</ref>);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><ref refid="sndfile_8c_1a0999a38427a413a1b0a6caa36c4c5b75" kindref="member">sf_command</ref>(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1aff44cf33e83896b8e5102305d23db5acaf9e55f87caeb9836223e2b3d406c16e3" kindref="member">SFC_GET_FORMAT_INFO</ref>,<sp/>&amp;format_info,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(format_info));</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/>tmp<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)malloc(strlen(format_info.<ref refid="struct_s_f___f_o_r_m_a_t___i_n_f_o_1af9e33bd709af81d99f3d145d86c41273" kindref="member">name</ref>)+1);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><ref refid="hashrout_8h_1a11280e8971e1a91d58ccd7a36db51a8a" kindref="member">strcpy</ref>(tmp,<sp/>format_info.<ref refid="struct_s_f___f_o_r_m_a_t___i_n_f_o_1af9e33bd709af81d99f3d145d86c41273" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(tmp[i])<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmp[i]==</highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/>s<sp/>=<sp/><ref refid="_internat_8h_1a5ed4c8747b1c367321f0494f01dd61fa" kindref="member">LAT1CTOWX</ref>(tmp);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/>free(tmp);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>;</highlight></codeline>
<codeline lineno="145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147" refid="_file_formats_8h_1a2f25ea91afdb2f7f0a58dbf96af06d93" refkind="member"><highlight class="normal">wxString<sp/><ref refid="_file_formats_8cpp_1a2f25ea91afdb2f7f0a58dbf96af06d93" kindref="member">sf_header_extension</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref>)</highlight></codeline>
<codeline lineno="148"><highlight class="normal">{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_s_f___f_o_r_m_a_t___i_n_f_o" kindref="compound">SF_FORMAT_INFO</ref><sp/><sp/><sp/>format_info;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/>memset(&amp;format_info,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(format_info));</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/>format_info.<ref refid="struct_s_f___f_o_r_m_a_t___i_n_f_o_1a8d07503c07b5330c298341ca03859f66" kindref="member">format</ref><sp/>=<sp/>(format<sp/>&amp;<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea4d9e4f32f119d026fdc74a88e9d41e87" kindref="member">SF_FORMAT_TYPEMASK</ref>);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><ref refid="sndfile_8c_1a0999a38427a413a1b0a6caa36c4c5b75" kindref="member">sf_command</ref>(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1aff44cf33e83896b8e5102305d23db5acaf9e55f87caeb9836223e2b3d406c16e3" kindref="member">SFC_GET_FORMAT_INFO</ref>,<sp/>&amp;format_info,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(format_info));</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_internat_8h_1a5ed4c8747b1c367321f0494f01dd61fa" kindref="member">LAT1CTOWX</ref>(format_info.<ref refid="struct_s_f___f_o_r_m_a_t___i_n_f_o_1a0033082d040149bbfa5fdd9f9cf36f3d" kindref="member">extension</ref>);</highlight></codeline>
<codeline lineno="156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="_file_formats_8h_1ac77f57d6003752e4e0dae382d943534b" refkind="member"><highlight class="normal">wxString<sp/><ref refid="_file_formats_8cpp_1a95d72947a7eaf99f00c926de8e3a68c0" kindref="member">sf_encoding_name</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structencoding" kindref="compound">encoding</ref>)</highlight></codeline>
<codeline lineno="159"><highlight class="normal">{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_s_f___f_o_r_m_a_t___i_n_f_o" kindref="compound">SF_FORMAT_INFO</ref><sp/><sp/><sp/>format_info;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/>memset(&amp;format_info,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(format_info));</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/>format_info.<ref refid="struct_s_f___f_o_r_m_a_t___i_n_f_o_1a8d07503c07b5330c298341ca03859f66" kindref="member">format</ref><sp/>=<sp/>(encoding<sp/>&amp;<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2feae792e42fc6619187743f7741e7044240" kindref="member">SF_FORMAT_SUBMASK</ref>);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><ref refid="sndfile_8c_1a0999a38427a413a1b0a6caa36c4c5b75" kindref="member">sf_command</ref>(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1aff44cf33e83896b8e5102305d23db5acaf9e55f87caeb9836223e2b3d406c16e3" kindref="member">SFC_GET_FORMAT_INFO</ref>,<sp/>&amp;format_info,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(format_info));</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_file_formats_8cpp_1a9b51367ecf6522d291caefabb77c6c4d" kindref="member">sf_normalize_name</ref>(format_info.<ref refid="struct_s_f___f_o_r_m_a_t___i_n_f_o_1af9e33bd709af81d99f3d145d86c41273" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169" refid="_file_formats_8h_1abba66d576038758a12e55fdb7be0171f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_file_formats_8cpp_1abba66d576038758a12e55fdb7be0171f" kindref="member">sf_num_simple_formats</ref>()</highlight></codeline>
<codeline lineno="170"><highlight class="normal">{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref><sp/>;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><ref refid="sndfile_8c_1a0999a38427a413a1b0a6caa36c4c5b75" kindref="member">sf_command</ref><sp/>(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1aff44cf33e83896b8e5102305d23db5acac74cfd88e45e84a1b5a9ac2f7ed5130d" kindref="member">SFC_GET_SIMPLE_FORMAT_COUNT</ref>,<sp/>&amp;count,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">))<sp/>;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref>;</highlight></codeline>
<codeline lineno="176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_s_f___f_o_r_m_a_t___i_n_f_o" kindref="compound">SF_FORMAT_INFO</ref><sp/>g_format_info;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180" refid="_file_formats_8h_1a6608819476650df4e863ff413e1faaa1" refkind="member"><highlight class="normal"><ref refid="struct_s_f___f_o_r_m_a_t___i_n_f_o" kindref="compound">SF_FORMAT_INFO</ref><sp/>*<ref refid="_file_formats_8cpp_1a6608819476650df4e863ff413e1faaa1" kindref="member">sf_simple_format</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)</highlight></codeline>
<codeline lineno="181"><highlight class="normal">{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/>memset(&amp;g_format_info,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(g_format_info));</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/>g_format_info.<ref refid="struct_s_f___f_o_r_m_a_t___i_n_f_o_1a8d07503c07b5330c298341ca03859f66" kindref="member">format</ref><sp/>=<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><ref refid="sndfile_8c_1a0999a38427a413a1b0a6caa36c4c5b75" kindref="member">sf_command</ref><sp/>(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1aff44cf33e83896b8e5102305d23db5aca719feb079d692b972e32ffe1879e0c1e" kindref="member">SFC_GET_SIMPLE_FORMAT</ref>,</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;g_format_info,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(g_format_info));</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;g_format_info;</highlight></codeline>
<codeline lineno="189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191" refid="_file_formats_8h_1a4894b4d75ca7490835d92bc0c852ba27" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_file_formats_8cpp_1a4894b4d75ca7490835d92bc0c852ba27" kindref="member">sf_subtype_more_than_16_bits</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref>)</highlight></codeline>
<codeline lineno="192"><highlight class="normal">{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>subtype<sp/>=<sp/>format<sp/>&amp;<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2feae792e42fc6619187743f7741e7044240" kindref="member">SF_FORMAT_SUBMASK</ref>;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(subtype<sp/>==<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea8b19f7e84eb0556faff33623830b489b" kindref="member">SF_FORMAT_FLOAT</ref><sp/>||</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subtype<sp/>==<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea7f5de05a45409d1ce72c9a2ecbff1bd3" kindref="member">SF_FORMAT_DOUBLE</ref><sp/>||</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subtype<sp/>==<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea160bd57540f1d3d6acbf2e29ea4769f4" kindref="member">SF_FORMAT_PCM_24</ref><sp/>||</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subtype<sp/>==<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea741fa21e06429d59eb548d6f388d16b4" kindref="member">SF_FORMAT_PCM_32</ref>);</highlight></codeline>
<codeline lineno="198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200" refid="_file_formats_8h_1a43966662f6cd55d91888b424b8c2372a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_file_formats_8cpp_1a43966662f6cd55d91888b424b8c2372a" kindref="member">sf_subtype_is_integer</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref>)</highlight></codeline>
<codeline lineno="201"><highlight class="normal">{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>subtype<sp/>=<sp/>format<sp/>&amp;<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2feae792e42fc6619187743f7741e7044240" kindref="member">SF_FORMAT_SUBMASK</ref>;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(subtype<sp/>==<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea63515ce839545c11d35dc8c8c4c5c261" kindref="member">SF_FORMAT_PCM_16</ref><sp/>||</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subtype<sp/>==<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea160bd57540f1d3d6acbf2e29ea4769f4" kindref="member">SF_FORMAT_PCM_24</ref><sp/>||</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subtype<sp/>==<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea741fa21e06429d59eb548d6f388d16b4" kindref="member">SF_FORMAT_PCM_32</ref>);</highlight></codeline>
<codeline lineno="206"><highlight class="normal">}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208" refid="_file_formats_8h_1afc6e3d1bf25d95a9ed719705bbd10efa" refkind="member"><highlight class="normal">wxArrayString<sp/><ref refid="_file_formats_8cpp_1afc6e3d1bf25d95a9ed719705bbd10efa" kindref="member">sf_get_all_extensions</ref>()</highlight></codeline>
<codeline lineno="209"><highlight class="normal">{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/>wxArrayString<sp/>exts;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_s_f___f_o_r_m_a_t___i_n_f_o" kindref="compound">SF_FORMAT_INFO</ref><sp/><sp/><sp/>format_info;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref>,<sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/>memset(&amp;format_info,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(format_info));</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><ref refid="sndfile_8c_1a0999a38427a413a1b0a6caa36c4c5b75" kindref="member">sf_command</ref>(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1aff44cf33e83896b8e5102305d23db5aca77bfdb40654cc3675ce02e4888dbeddd" kindref="member">SFC_GET_FORMAT_MAJOR_COUNT</ref>,</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;count,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(count));</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(k=0;<sp/>k&lt;<ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref>;<sp/>k++)<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>format_info.<ref refid="struct_s_f___f_o_r_m_a_t___i_n_f_o_1a8d07503c07b5330c298341ca03859f66" kindref="member">format</ref><sp/>=<sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sndfile_8c_1a0999a38427a413a1b0a6caa36c4c5b75" kindref="member">sf_command</ref>(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1aff44cf33e83896b8e5102305d23db5aca419b09dc5dff072b3a7b4f801d51df42" kindref="member">SFC_GET_FORMAT_MAJOR</ref>,</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;format_info,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(format_info))<sp/>;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exts.Add(<ref refid="_internat_8h_1a5ed4c8747b1c367321f0494f01dd61fa" kindref="member">LAT1CTOWX</ref>(format_info.<ref refid="struct_s_f___f_o_r_m_a_t___i_n_f_o_1a0033082d040149bbfa5fdd9f9cf36f3d" kindref="member">extension</ref>));</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Some<sp/>other<sp/>extensions<sp/>that<sp/>are<sp/>often<sp/>sound<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>aren&apos;t<sp/>included<sp/>by<sp/>libsndfile</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/>exts.Add(wxT(</highlight><highlight class="stringliteral">&quot;aif&quot;</highlight><highlight class="normal">));<sp/></highlight><highlight class="comment">//<sp/>AIFF<sp/>file<sp/>with<sp/>a<sp/>DOS-style<sp/>extension</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/>exts.Add(wxT(</highlight><highlight class="stringliteral">&quot;ircam&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/>exts.Add(wxT(</highlight><highlight class="stringliteral">&quot;snd&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/>exts.Add(wxT(</highlight><highlight class="stringliteral">&quot;svx&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/>exts.Add(wxT(</highlight><highlight class="stringliteral">&quot;svx8&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/>exts.Add(wxT(</highlight><highlight class="stringliteral">&quot;sv16&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>exts;</highlight></codeline>
<codeline lineno="238"><highlight class="normal">}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240" refid="_file_formats_8h_1a9b51367ecf6522d291caefabb77c6c4d" refkind="member"><highlight class="normal">wxString<sp/><ref refid="_file_formats_8cpp_1a9b51367ecf6522d291caefabb77c6c4d" kindref="member">sf_normalize_name</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>)</highlight></codeline>
<codeline lineno="241"><highlight class="normal">{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>n<sp/>=<sp/><ref refid="_internat_8h_1a5ed4c8747b1c367321f0494f01dd61fa" kindref="member">LAT1CTOWX</ref>(name);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/>n.Replace(wxT(</highlight><highlight class="stringliteral">&quot;8<sp/>bit&quot;</highlight><highlight class="normal">),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;8-bit&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/>n.Replace(wxT(</highlight><highlight class="stringliteral">&quot;16<sp/>bit&quot;</highlight><highlight class="normal">),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;16-bit&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/>n.Replace(wxT(</highlight><highlight class="stringliteral">&quot;24<sp/>bit&quot;</highlight><highlight class="normal">),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;24-bit&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/>n.Replace(wxT(</highlight><highlight class="stringliteral">&quot;32<sp/>bit&quot;</highlight><highlight class="normal">),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;32-bit&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/>n.Replace(wxT(</highlight><highlight class="stringliteral">&quot;64<sp/>bit&quot;</highlight><highlight class="normal">),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;64-bit&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="251"><highlight class="normal">}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__WXMAC__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TODO:<sp/>find<sp/>out<sp/>the<sp/>appropriate<sp/>OSType</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="comment">//<sp/>for<sp/>the<sp/>ones<sp/>with<sp/>an<sp/>&apos;????&apos;.<sp/><sp/>The<sp/>others</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="comment">//<sp/>are<sp/>at<sp/>least<sp/>the<sp/>same<sp/>type<sp/>used<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SoundApp.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NUM_HEADERS<sp/>13</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal">OSType<sp/>MacNames[NUM_HEADERS]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;WAVE&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="comment">//<sp/>WAVE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;AIFF&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="comment">//<sp/>AIFF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;NeXT&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="comment">//<sp/>Sun/NeXT<sp/>AU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;BINA&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="comment">//<sp/>RAW<sp/>i.e.<sp/>binary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;PAR<sp/>&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="comment">//<sp/>???<sp/>Ensoniq<sp/>PARIS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;8SVX&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="comment">//<sp/>Amiga<sp/>IFF<sp/>/<sp/>SVX8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;NIST&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="comment">//<sp/>???<sp/>NIST/Sphere</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;VOC<sp/>&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="comment">//<sp/>VOC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;\?\?\?\?&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="comment">//<sp/>??<sp/>Propellorheads<sp/>Rex</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;SF<sp/><sp/>&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="comment">//<sp/>??<sp/>IRCAM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;W64<sp/>&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="comment">//<sp/>??<sp/>Wave64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;MAT4&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="comment">//<sp/>??<sp/>Matlab<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;MAT5&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="comment">//<sp/>??<sp/>Matlab<sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal">};</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal">OSType<sp/>sf_header_mactype(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref>)</highlight></codeline>
<codeline lineno="279"><highlight class="normal">{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(format<sp/>&gt;=<sp/>0x10000)</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MacNames[(format/0x10000)-1];</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(format&gt;=0<sp/>&amp;&amp;<sp/>format&lt;NUM_HEADERS)</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MacNames[<ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref>];</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;\?\?\?\?&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="286"><highlight class="normal">}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>__WXMAC__</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/src/FileFormats.cpp"/>
  </compounddef>
</doxygen>
