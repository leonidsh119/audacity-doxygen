<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="strparse_8h" kind="file" language="C++">
    <compoundname>strparse.h</compoundname>
    <includedby refid="allegrord_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/portsmf/allegrord.cpp</includedby>
    <includedby refid="allegrowr_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/portsmf/allegrowr.cpp</includedby>
    <includedby refid="strparse_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/portsmf/strparse.cpp</includedby>
    <invincdepgraph>
      <node id="31518">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/portsmf/allegrord.cpp</label>
        <link refid="allegrord_8cpp"/>
      </node>
      <node id="31517">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/portsmf/strparse.h</label>
        <link refid="strparse.h"/>
        <childnode refid="31518" relation="include">
        </childnode>
        <childnode refid="31519" relation="include">
        </childnode>
        <childnode refid="31520" relation="include">
        </childnode>
      </node>
      <node id="31520">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/portsmf/strparse.cpp</label>
        <link refid="strparse_8cpp"/>
      </node>
      <node id="31519">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/portsmf/allegrowr.cpp</label>
        <link refid="allegrowr_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_string__parse" prot="public">String_parse</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="strparse_8h_1aff32e6c3c5b209bce94195c63f252b7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void string_escape</definition>
        <argsstring>(std::string &amp;result, const char *s, const char *quote)</argsstring>
        <name>string_escape</name>
        <param>
          <type><ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">std::string</ref> &amp;</type>
          <declname>result</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>quote</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portsmf/strparse.h" line="18" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>strparse.h<sp/>--<sp/>header<sp/>for<sp/>String_parse<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3" refid="class_string__parse" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_string__parse" kindref="compound">String_parse</ref><sp/>{</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="5" refid="class_string__parse_1a47afb639351d5f028bf4f50caabf6c20" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_string__parse_1a47afb639351d5f028bf4f50caabf6c20" kindref="member">pos</ref>;</highlight></codeline>
<codeline lineno="6" refid="class_string__parse_1ac1cbfaa0a933dd95eb77032682e22c41" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">std::string</ref><sp/>*<ref refid="class_string__parse_1ac1cbfaa0a933dd95eb77032682e22c41" kindref="member">str</ref>;</highlight></codeline>
<codeline lineno="7" refid="class_string__parse_1aa425cd2a6e7624c163bf47759021df84" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_string__parse_1aa425cd2a6e7624c163bf47759021df84" kindref="member">init</ref>(<ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">std::string</ref><sp/>*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>)<sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>=<sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_string__parse_1a58017f7adb718b285f809b231d567eb0" kindref="member">skip_space</ref>();</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="class_string__parse_1afc0f021c5f016622cf028419975e93e1" kindref="member">peek</ref>();</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_string__parse_1a8ef81f317a2cf643e8a6579592bfa163" kindref="member">get_nonspace_quoted</ref>(<ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">std::string</ref><sp/>&amp;field);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>remaining<sp/>characters,<sp/>skipping<sp/>initial<sp/>spaces<sp/>and<sp/>final<sp/>return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_string__parse_1aaf02e1b47c9ba9cd712d7719917bfe09" kindref="member">get_remainder</ref>(<ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">std::string</ref><sp/>&amp;field);</highlight></codeline>
<codeline lineno="16"><highlight class="normal">};</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="strparse_8h_1aff32e6c3c5b209bce94195c63f252b7d" kindref="member">string_escape</ref>(<ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">std::string</ref><sp/>&amp;result,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="namespacesmartmsgmerge_1a8ae4a9cc653616390fa5fee6e04eca33" kindref="member">quote</ref>);</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portsmf/strparse.h"/>
  </compounddef>
</doxygen>
