<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_v_s_t_control_o_s_x_8mm" kind="file" language="C++">
    <compoundname>VSTControlOSX.mm</compoundname>
    <includes refid="_v_s_t_control_8h" local="yes">VSTControl.h</includes>
    <incdepgraph>
      <node id="44700">
        <label>stdint.h</label>
      </node>
      <node id="44697">
        <label>wx/control.h</label>
      </node>
      <node id="44695">
        <label>C:/_dev/OpenU/Audacity/audacity/src/effects/VST/VSTControlOSX.mm</label>
        <link refid="VSTControlOSX.mm"/>
        <childnode refid="44696" relation="include">
        </childnode>
      </node>
      <node id="44696">
        <label>VSTControl.h</label>
        <link refid="_v_s_t_control_8h"/>
        <childnode refid="44697" relation="include">
        </childnode>
        <childnode refid="44698" relation="include">
        </childnode>
        <childnode refid="44699" relation="include">
        </childnode>
      </node>
      <node id="44698">
        <label>wx/panel.h</label>
      </node>
      <node id="44699">
        <label>aeffectx.h</label>
        <link refid="aeffectx_8h"/>
        <childnode refid="44700" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="interface_v_s_t_view" prot="public">VSTView</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>Audacity:<sp/>A<sp/>Digital<sp/>Audio<sp/>Editor</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>VSTControlOSX.mm</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>Leland<sp/>Lucius</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/>Several<sp/>ideas<sp/>and<sp/>code<sp/>snippets<sp/>taken<sp/>from<sp/>HairerSoft&apos;s<sp/>HSVSTView<sp/>class:</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>http://www.hairersoft.com/Downloads/HSVSTView.zip</highlight></codeline>
<codeline lineno="12"><highlight class="comment"></highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>Created<sp/>by<sp/>Martin<sp/>on<sp/>02/06/2007.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>Copyright<sp/>2010<sp/>by<sp/>HairerSoft.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>You<sp/>are<sp/>most<sp/>welcome<sp/>to<sp/>use<sp/>this<sp/>code<sp/>in<sp/>your<sp/>own<sp/>(open<sp/>source<sp/>or<sp/>not)</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>project.<sp/>Use<sp/>at<sp/>your<sp/>own<sp/>risk<sp/>of<sp/>course,<sp/>etc.<sp/>Please<sp/>acknowledge<sp/>at<sp/>an</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>appropriate<sp/>location<sp/>(manual<sp/>or<sp/>about<sp/>box<sp/>for<sp/>example).</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>Bug<sp/>reports<sp/>most<sp/>welcome:<sp/>Martin@HairerSoft.com</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="22"><highlight class="comment">**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_v_s_t_control_8h" kindref="compound">VSTControl.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="interface_v_s_t_view" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">@interface<sp/></highlight><highlight class="normal"><ref refid="interface_v_s_t_view" kindref="compound">VSTView</ref><sp/>:<sp/>NSView</highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal">}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">@end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">@implementation<sp/></highlight><highlight class="normal"><ref refid="interface_v_s_t_view" kindref="compound">VSTView</ref></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="33"><highlight class="normal">+<sp/>(<ref refid="lib_2expat_8h_1a3980d15795c6349fecd06c1b035c1ae9" kindref="member">void</ref>)<ref refid="midithru_8c_1a25a40b6614565f755233080a384c35f1" kindref="member">initialize</ref></highlight></codeline>
<codeline lineno="34"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="nfilterkit_8h_1a3be13892ae7076009afcf121347dd319" kindref="member">BOOL</ref><sp/><ref refid="midifns_8c_1ace6689f2ab7cc6732ce2caa9600644aa" kindref="member">initialized</ref><sp/>=<sp/><ref refid="patest__dsound__find__best__latency__params_8c_1a996bde01ecac342918f0a2c4e7ce7bd5" kindref="member">NO</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!initialized)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>initialized<sp/>=<sp/><ref refid="patest__dsound__find__best__latency__params_8c_1a7ebc9a785e5ab85457c98595aac81589" kindref="member">YES</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxOSXCocoaClassAddWXMethods(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">@end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="class_v_s_t_control_impl_1a77f6c7d31ea22427b1e2adede83caf12" refkind="member"><highlight class="normal"><ref refid="class_v_s_t_control_impl_1a77f6c7d31ea22427b1e2adede83caf12" kindref="member">VSTControlImpl::VSTControlImpl</ref>(wxWindowMac<sp/>*peer,<sp/>NSView<sp/>*view)</highlight></codeline>
<codeline lineno="45"><highlight class="normal">:<sp/><sp/>wxWidgetCocoaImpl(peer,<sp/>view,<sp/><ref refid="ordinals_8h_1a65e9886d74aaee76545e83dd09011727" kindref="member">false</ref>,<sp/><ref refid="ordinals_8h_1a65e9886d74aaee76545e83dd09011727" kindref="member">false</ref>)</highlight></codeline>
<codeline lineno="46"><highlight class="normal">{</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="class_v_s_t_control_impl_1a258b126d6974e76e12b75c4b6f5f20f2" refkind="member"><highlight class="normal"><ref refid="class_v_s_t_control_impl_1a258b126d6974e76e12b75c4b6f5f20f2" kindref="member">VSTControlImpl::~VSTControlImpl</ref>()</highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><ref refid="class_v_s_t_control_1a7fd3334df16326fb00e366bd10563f13" kindref="member">VSTControl::VSTControl</ref>()</highlight></codeline>
<codeline lineno="54"><highlight class="normal">:<sp/><sp/><ref refid="class_v_s_t_control_base" kindref="compound">VSTControlBase</ref>()</highlight></codeline>
<codeline lineno="55"><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/>mVSTView<sp/>=<sp/>nil;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/>mView<sp/>=<sp/>nil;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(_LP64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/>mHIView<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/>mWindowRef<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><ref refid="class_v_s_t_control_1a52a581055482537efd74afb5704dacca" kindref="member">VSTControl::~VSTControl</ref>()</highlight></codeline>
<codeline lineno="66"><highlight class="normal">{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(_LP64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mWindowRef)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mLink-&gt;callDispatcher(<ref refid="aeffectx_8h_1a2d89182ad91a6c0ceb68ac72c7158e11" kindref="member">effEditClose</ref>,<sp/>0,<sp/>0,<sp/>mWindowRef,<sp/>0.0);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mWindowRef<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_v_s_t_control_1aca48f9ed4f5aa65e6e42e66630d04f1a" kindref="member">VSTControl::Create</ref>(wxWindow<sp/>*parent,<sp/><ref refid="class_v_s_t_effect_link" kindref="compound">VSTEffectLink</ref><sp/>*link)</highlight></codeline>
<codeline lineno="77"><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/>DontCreatePeer();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_v_s_t_control_base_1a2d4981bff3657c7ccd2bb288cbd6c125" kindref="member">VSTControlBase::Create</ref>(parent,<sp/>link))</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/>mVSTView<sp/>=<sp/>[<ref refid="interface_v_s_t_view" kindref="compound">VSTView</ref><sp/>alloc];</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mVSTView)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/>[mVSTView<sp/>init];</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/>[mVSTView<sp/>retain];</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/>SetPeer(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_v_s_t_control_impl_1a77f6c7d31ea22427b1e2adede83caf12" kindref="member">VSTControlImpl</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>mVSTView));</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/>CreateCocoa();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(_LP64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mView)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CreateCarbon();</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mView<sp/>&amp;&amp;<sp/>!mHIView)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Must<sp/>get<sp/>the<sp/>size<sp/>again<sp/>since<sp/>SetPeer()<sp/>could<sp/>cause<sp/>it<sp/>to<sp/>change</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/>SetInitialSize(GetMinSize());</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/>MacPostControlCreate(wxDefaultPosition,<sp/>wxDefaultSize);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>VSTControl::CreateCocoa()</highlight></codeline>
<codeline lineno="118"><highlight class="normal">{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((mLink-&gt;callDispatcher(<ref refid="aeffectx_8h_1a3a3c328f4cfe165bb0e3f1d8a7e14673" kindref="member">effCanDo</ref>,<sp/>0,<sp/>0,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/></highlight><highlight class="stringliteral">&quot;hasCockosViewAsConfig&quot;</highlight><highlight class="normal">,<sp/>0.0)<sp/>&amp;<sp/>0xffff0000)<sp/>!=<sp/>0xbeef0000)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_vst_rect" kindref="compound">VstRect</ref><sp/>*rect;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Some<sp/>effects<sp/>like<sp/>to<sp/>have<sp/>us<sp/>get<sp/>their<sp/>rect<sp/>before<sp/>opening<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/>mLink-&gt;callDispatcher(<ref refid="aeffectx_8h_1a600c33d851d1413b831f04fedc6a1844" kindref="member">effEditGetRect</ref>,<sp/>0,<sp/>0,<sp/>&amp;rect,<sp/>0.0);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ask<sp/>the<sp/>effect<sp/>to<sp/>add<sp/>its<sp/>GUI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/>mLink-&gt;callDispatcher(<ref refid="aeffectx_8h_1a8383b99609aaa736178c05d714dd64a7" kindref="member">effEditOpen</ref>,<sp/>0,<sp/>0,<sp/>mVSTView,<sp/>0.0);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>subview<sp/>it<sp/>created</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/>mView<sp/>=<sp/>[[mVSTView<sp/>subviews]<sp/>objectAtIndex:0];</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mView<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Doesn&apos;t<sp/>seem<sp/>the<sp/>effect<sp/>created<sp/>the<sp/>subview.<sp/><sp/>This<sp/>can</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>happen<sp/>when<sp/>an<sp/>effect<sp/>uses<sp/>the<sp/>content<sp/>view<sp/>directly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>As<sp/>of<sp/>this<sp/>time,<sp/>we<sp/>will<sp/>not<sp/>try<sp/>to<sp/>support<sp/>those<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>just<sp/>fall<sp/>back<sp/>to<sp/>the<sp/>textual<sp/>interface.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>final<sp/>bounds<sp/>of<sp/>the<sp/>effect<sp/>GUI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/>mLink-&gt;callDispatcher(<ref refid="aeffectx_8h_1a600c33d851d1413b831f04fedc6a1844" kindref="member">effEditGetRect</ref>,<sp/>0,<sp/>0,<sp/>&amp;rect,<sp/>0.0);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/>NSRect<sp/>frame<sp/>=<sp/>{<sp/>0,<sp/>0,<sp/>(CGFloat)<sp/>rect-&gt;<ref refid="class_vst_rect_1a134a7aa919791f2ffaad850853e0751d" kindref="member">right</ref><sp/>-<sp/>rect-&gt;<ref refid="class_vst_rect_1a3659d8ec09583bb2e3f16c3f3e22b923" kindref="member">left</ref>,<sp/>(CGFloat)<sp/>rect-&gt;<ref refid="class_vst_rect_1ae42659a383b39892184adf98f207da76" kindref="member">bottom</ref><sp/>-<sp/>rect-&gt;<ref refid="class_vst_rect_1a7f8eed550cd4a163997947b9840e6c69" kindref="member">top</ref><sp/>};</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/>[mView<sp/>setFrame:frame];</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/>[mVSTView<sp/>addSubview:mView];</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/>SetMinSize(wxSize(frame.size.width,<sp/>frame.size.height));</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(_LP64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>VSTControl::CreateCarbon()</highlight></codeline>
<codeline lineno="160"><highlight class="normal">{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/>OSStatus<sp/>result;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/>Connect(wxEVT_SIZE,<sp/>wxSizeEventHandler(VSTControl::OnSize));</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_vst_rect" kindref="compound">VstRect</ref><sp/>*rect;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Some<sp/>effects<sp/>like<sp/>to<sp/>have<sp/>us<sp/>get<sp/>their<sp/>rect<sp/>before<sp/>opening<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/>mLink-&gt;callDispatcher(<ref refid="aeffectx_8h_1a600c33d851d1413b831f04fedc6a1844" kindref="member">effEditGetRect</ref>,<sp/>0,<sp/>0,<sp/>&amp;rect,<sp/>0.0);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Suggest<sp/>a<sp/>dummy<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/>Rect<sp/>bounds<sp/>=<sp/>{<sp/>0,<sp/>0,<sp/>0,<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>And<sp/>create<sp/>the<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/>result<sp/>=<sp/>CreateNewWindow(kOverlayWindowClass,</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kWindowStandardHandlerAttribute<sp/>|</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kWindowCompositingAttribute<sp/>|</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>kWindowOpaqueForEventsAttribute,</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;bounds,</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;mWindowRef);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/>noErr)</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>root<sp/>control</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/>ControlRef<sp/>root<sp/>=<sp/>HIViewGetRoot(mWindowRef);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>content<sp/>view<sp/>within<sp/>our<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/>HIViewRef<sp/>content;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/>result<sp/>=<sp/>HIViewFindByID(root,<sp/>kHIViewWindowContentID,<sp/>&amp;content);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/>noErr)</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DisposeWindow(mWindowRef);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mWindowRef<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Some<sp/>effects<sp/>(iZotope<sp/>Vinyl)<sp/>seem<sp/>to<sp/>need<sp/>an<sp/>existing<sp/>subview</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>of<sp/>the<sp/>content<sp/>view.<sp/><sp/>So<sp/>just<sp/>use<sp/>a<sp/>&quot;dummy&quot;<sp/>scrollview.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/>result<sp/>=<sp/>HIScrollViewCreate(kHIScrollViewOptionsVertScroll,<sp/>&amp;mHIView);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>want<sp/>to<sp/>see<sp/>the<sp/>scroll<sp/>bars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/>HIScrollViewSetScrollBarAutoHide(mHIView,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>it<sp/>as<sp/>a<sp/>subview<sp/>of<sp/>the<sp/>content<sp/>view</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/>HIViewAddSubview(content,<sp/>mHIView);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ask<sp/>the<sp/>effect<sp/>to<sp/>add<sp/>its<sp/>GUI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/>mLink-&gt;callDispatcher(<ref refid="aeffectx_8h_1a8383b99609aaa736178c05d714dd64a7" kindref="member">effEditOpen</ref>,<sp/>0,<sp/>0,<sp/>mWindowRef,<sp/>0.0);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>subview<sp/>it<sp/>created</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/>HIViewRef<sp/>subview<sp/>=<sp/>HIViewGetFirstSubview(content);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(subview)</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>scrollview<sp/>was<sp/>used,<sp/>so<sp/>leave<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(subview<sp/>==<sp/>mHIView)</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subview<sp/>=<sp/>HIViewGetFirstSubview(mHIView);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>effect<sp/>didn&apos;t<sp/>use<sp/>our<sp/>scrollview,<sp/>so<sp/>dispose<sp/>of<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HIViewRemoveFromSuperview(mHIView);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CFRelease(mHIView);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mHIView<sp/>=<sp/>subview;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Doesn&apos;t<sp/>seem<sp/>the<sp/>effect<sp/>created<sp/>a<sp/>subview.<sp/><sp/>This<sp/>can</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>happen<sp/>when<sp/>an<sp/>effect<sp/>uses<sp/>the<sp/>content<sp/>view<sp/>directly.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>As<sp/>of<sp/>this<sp/>time,<sp/>we<sp/>will<sp/>not<sp/>try<sp/>to<sp/>support<sp/>those<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>just<sp/>fall<sp/>back<sp/>to<sp/>the<sp/>textual<sp/>interface.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(subview<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mLink-&gt;callDispatcher(<ref refid="aeffectx_8h_1a2d89182ad91a6c0ceb68ac72c7158e11" kindref="member">effEditClose</ref>,<sp/>0,<sp/>0,<sp/>mWindowRef,<sp/>0.0);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DisposeWindow(mWindowRef);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mWindowRef<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mHIView<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>final<sp/>bounds<sp/>of<sp/>the<sp/>effect<sp/>GUI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/>mLink-&gt;callDispatcher(<ref refid="aeffectx_8h_1a600c33d851d1413b831f04fedc6a1844" kindref="member">effEditGetRect</ref>,<sp/>0,<sp/>0,<sp/>&amp;rect,<sp/>0.0);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>size<sp/>of<sp/>the<sp/>scrollview<sp/>to<sp/>match</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/>HIRect<sp/>r<sp/>=<sp/>{<sp/>0,<sp/>0,<sp/>(CGFloat)<sp/>rect-&gt;<ref refid="class_vst_rect_1a134a7aa919791f2ffaad850853e0751d" kindref="member">right</ref><sp/>-<sp/>rect-&gt;<ref refid="class_vst_rect_1a3659d8ec09583bb2e3f16c3f3e22b923" kindref="member">left</ref>,<sp/>(CGFloat)<sp/>rect-&gt;<ref refid="class_vst_rect_1ae42659a383b39892184adf98f207da76" kindref="member">bottom</ref><sp/>-<sp/>rect-&gt;<ref refid="class_vst_rect_1a7f8eed550cd4a163997947b9840e6c69" kindref="member">top</ref><sp/>};</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>One<sp/>effect,<sp/>mutagene<sp/>lipredemuco,<sp/>doesn&apos;t<sp/>return<sp/>a<sp/>valid<sp/>rect<sp/>so</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>try<sp/>to<sp/>detect<sp/>it<sp/>and<sp/>use<sp/>the<sp/>created<sp/>view<sp/>dimensions<sp/>instead.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rect-&gt;<ref refid="class_vst_rect_1a3659d8ec09583bb2e3f16c3f3e22b923" kindref="member">left</ref><sp/>&lt;<sp/>0<sp/>||<sp/>rect-&gt;<ref refid="class_vst_rect_1a7f8eed550cd4a163997947b9840e6c69" kindref="member">top</ref><sp/>&lt;<sp/>0<sp/>||<sp/>rect-&gt;<ref refid="class_vst_rect_1a134a7aa919791f2ffaad850853e0751d" kindref="member">right</ref><sp/>&lt;=<sp/>0<sp/>||<sp/>rect-&gt;<ref refid="class_vst_rect_1ae42659a383b39892184adf98f207da76" kindref="member">bottom</ref><sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>HIViewGetFrame(subview,<sp/>&amp;r);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>container<sp/>is<sp/>the<sp/>same<sp/>size<sp/>as<sp/>the<sp/>effect<sp/>GUI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/>HIViewSetFrame(mHIView,<sp/>&amp;r);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/>HIViewPlaceInSuperviewAt(mHIView,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Establish<sp/>the<sp/>minimum<sp/>size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/>SetMinSize(wxSize(r.size.width,<sp/>r.size.height));</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/>NSWindow<sp/>*parent<sp/>=<sp/>[mVSTView<sp/>window];</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/>NSWindow<sp/>*host<sp/>=<sp/>[[[NSWindow<sp/>alloc]<sp/>initWithWindowRef:mWindowRef]<sp/>autorelease];</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/>[parent<sp/>addChildWindow:host<sp/>ordered:NSWindowAbove];</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/>ShowWindow(mWindowRef);</highlight></codeline>
<codeline lineno="269"><highlight class="normal">}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>VSTControl::OnSize(wxSizeEvent<sp/>&amp;<sp/>evt)</highlight></codeline>
<codeline lineno="272"><highlight class="normal">{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/>evt.Skip();</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/>wxRect<sp/>rect<sp/>=<sp/>GetScreenRect();</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/>MoveWindow(mWindowRef,<sp/>rect.x,<sp/>rect.y,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/>SizeWindow(mWindowRef,<sp/>rect.width,<sp/>rect.height,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="279"><highlight class="normal">}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/VST/VSTControlOSX.mm"/>
  </compounddef>
</doxygen>
