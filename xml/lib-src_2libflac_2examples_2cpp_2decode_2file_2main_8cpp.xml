<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="lib-src_2libflac_2examples_2cpp_2decode_2file_2main_8cpp" kind="file" language="C++">
    <compoundname>main.cpp</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes refid="libflac_2include_2_f_l_a_c_09_09_2decoder_8h" local="yes">FLAC++/decoder.h</includes>
    <includes refid="libflac_2include_2share_2compat_8h" local="yes">share/compat.h</includes>
    <incdepgraph>
      <node id="5845">
        <label>format.h</label>
        <link refid="include_2_f_l_a_c_2format_8h"/>
        <childnode refid="5844" relation="include">
        </childnode>
        <childnode refid="5846" relation="include">
        </childnode>
      </node>
      <node id="5841">
        <label>export.h</label>
        <link refid="lib-src_2libflac_2include_2_f_l_a_c_09_09_2export_8h"/>
      </node>
      <node id="5850">
        <label>sys/types.h</label>
        <link refid="lib-src_2libvorbis_2macos_2compat_2sys_2_types_8h"/>
        <childnode refid="5851" relation="include">
        </childnode>
        <childnode refid="5852" relation="include">
        </childnode>
        <childnode refid="5853" relation="include">
        </childnode>
      </node>
      <node id="5855">
        <label>stdarg.h</label>
      </node>
      <node id="5846">
        <label>ordinals.h</label>
        <link refid="ordinals_8h"/>
        <childnode refid="5847" relation="include">
        </childnode>
      </node>
      <node id="5843">
        <label>FLAC/stream_decoder.h</label>
        <link refid="include_2_f_l_a_c_2stream__decoder_8h"/>
        <childnode refid="5838" relation="include">
        </childnode>
        <childnode refid="5844" relation="include">
        </childnode>
        <childnode refid="5845" relation="include">
        </childnode>
      </node>
      <node id="5847">
        <label>stdint.h</label>
      </node>
      <node id="5839">
        <label>stdlib.h</label>
      </node>
      <node id="5842">
        <label>string</label>
      </node>
      <node id="5837">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/examples/cpp/decode/file/main.cpp</label>
        <link refid="lib-src/libflac/examples/cpp/decode/file/main.cpp"/>
        <childnode refid="5838" relation="include">
        </childnode>
        <childnode refid="5839" relation="include">
        </childnode>
        <childnode refid="5840" relation="include">
        </childnode>
        <childnode refid="5848" relation="include">
        </childnode>
      </node>
      <node id="5852">
        <label>alloca.h</label>
      </node>
      <node id="5840">
        <label>FLAC++/decoder.h</label>
        <link refid="libflac_2include_2_f_l_a_c_09_09_2decoder_8h"/>
        <childnode refid="5841" relation="include">
        </childnode>
        <childnode refid="5842" relation="include">
        </childnode>
        <childnode refid="5843" relation="include">
        </childnode>
      </node>
      <node id="5851">
        <label>MacTypes.h</label>
      </node>
      <node id="5853">
        <label>string.h</label>
      </node>
      <node id="5854">
        <label>utime.h</label>
      </node>
      <node id="5844">
        <label>export.h</label>
        <link refid="lib-src_2libflac_2include_2_f_l_a_c_2export_8h"/>
      </node>
      <node id="5849">
        <label>unistd.h</label>
      </node>
      <node id="5848">
        <label>share/compat.h</label>
        <link refid="libflac_2include_2share_2compat_8h"/>
        <childnode refid="5849" relation="include">
        </childnode>
        <childnode refid="5850" relation="include">
        </childnode>
        <childnode refid="5854" relation="include">
        </childnode>
        <childnode refid="5855" relation="include">
        </childnode>
      </node>
      <node id="5838">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_our_decoder" prot="public">OurDecoder</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="lib-src_2libflac_2examples_2cpp_2decode_2file_2main_8cpp_1a17772dad8e0a73eadfbef7fe6cca3d84" prot="public" static="yes" mutable="no">
        <type><ref refid="ordinals_8h_1aa78c8c70a3eb8a58af7436f278acde8e" kindref="member">FLAC__uint64</ref></type>
        <definition>FLAC__uint64 total_samples</definition>
        <argsstring></argsstring>
        <name>total_samples</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/examples/cpp/decode/file/main.cpp" line="38" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/examples/cpp/decode/file/main.cpp" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="lib-src_2libflac_2examples_2cpp_2decode_2file_2main_8cpp_1a6b9656627f62ed0dca5ba6a995dc9e93" prot="public" static="yes" mutable="no">
        <type>unsigned</type>
        <definition>unsigned sample_rate</definition>
        <argsstring></argsstring>
        <name>sample_rate</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/examples/cpp/decode/file/main.cpp" line="39" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/examples/cpp/decode/file/main.cpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="lib-src_2libflac_2examples_2cpp_2decode_2file_2main_8cpp_1a0fd19fc55f530e6c2fbe32e6fb48b277" prot="public" static="yes" mutable="no">
        <type>unsigned</type>
        <definition>unsigned channels</definition>
        <argsstring></argsstring>
        <name>channels</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/examples/cpp/decode/file/main.cpp" line="40" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/examples/cpp/decode/file/main.cpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="lib-src_2libflac_2examples_2cpp_2decode_2file_2main_8cpp_1a274f7fddf13f456309bc20d3fa2b9a80" prot="public" static="yes" mutable="no">
        <type>unsigned</type>
        <definition>unsigned bps</definition>
        <argsstring></argsstring>
        <name>bps</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/examples/cpp/decode/file/main.cpp" line="41" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/examples/cpp/decode/file/main.cpp" bodystart="41" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="lib-src_2libflac_2examples_2cpp_2decode_2file_2main_8cpp_1a8d11d7d8d23aa36fb5b6446b6665619d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool write_little_endian_uint16</definition>
        <argsstring>(FILE *f, FLAC__uint16 x)</argsstring>
        <name>write_little_endian_uint16</name>
        <param>
          <type>FILE *</type>
          <declname>f</declname>
        </param>
        <param>
          <type><ref refid="ordinals_8h_1a0fbaee65d056a075245dcd0c903fb94c" kindref="member">FLAC__uint16</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/examples/cpp/decode/file/main.cpp" line="43" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/examples/cpp/decode/file/main.cpp" bodystart="43" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="lib-src_2libflac_2examples_2cpp_2decode_2file_2main_8cpp_1aabc5c41fa5e12ec2ed738ac39ff9773d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool write_little_endian_int16</definition>
        <argsstring>(FILE *f, FLAC__int16 x)</argsstring>
        <name>write_little_endian_int16</name>
        <param>
          <type>FILE *</type>
          <declname>f</declname>
        </param>
        <param>
          <type><ref refid="ordinals_8h_1ae4907c2639411fa7da0fe7a008a5f911" kindref="member">FLAC__int16</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/examples/cpp/decode/file/main.cpp" line="51" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/examples/cpp/decode/file/main.cpp" bodystart="51" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="lib-src_2libflac_2examples_2cpp_2decode_2file_2main_8cpp_1ae0d434b80c60275e468ecae355119cad" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool write_little_endian_uint32</definition>
        <argsstring>(FILE *f, FLAC__uint32 x)</argsstring>
        <name>write_little_endian_uint32</name>
        <param>
          <type>FILE *</type>
          <declname>f</declname>
        </param>
        <param>
          <type><ref refid="ordinals_8h_1a9c4005ea7ef8d564b0cc993cdd0e4e5e" kindref="member">FLAC__uint32</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/examples/cpp/decode/file/main.cpp" line="56" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/examples/cpp/decode/file/main.cpp" bodystart="56" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="lib-src_2libflac_2examples_2cpp_2decode_2file_2main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int main</definition>
        <argsstring>(int argc, char *argv[])</argsstring>
        <name>main</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/examples/cpp/decode/file/main.cpp" line="80" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/examples/cpp/decode/file/main.cpp" bodystart="80" bodyend="120"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>example_cpp_decode_file<sp/>-<sp/>Simple<sp/>FLAC<sp/>file<sp/>decoder<sp/>using<sp/>libFLAC</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2007-2009<sp/><sp/>Josh<sp/>Coalson</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2011-2014<sp/><sp/>Xiph.Org<sp/>Foundation</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>along</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>with<sp/>this<sp/>program;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.,</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>51<sp/>Franklin<sp/>Street,<sp/>Fifth<sp/>Floor,<sp/>Boston,<sp/>MA<sp/>02110-1301<sp/>USA.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>This<sp/>example<sp/>shows<sp/>how<sp/>to<sp/>use<sp/>libFLAC++<sp/>to<sp/>decode<sp/>a<sp/>FLAC<sp/>file<sp/>to<sp/>a<sp/>WAVE</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>file.<sp/><sp/>It<sp/>only<sp/>supports<sp/>16-bit<sp/>stereo<sp/>files.</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>Complete<sp/>API<sp/>documentation<sp/>can<sp/>be<sp/>found<sp/>at:</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/><sp/><sp/>http://xiph.org/flac/api/</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_CONFIG_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;config.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="libflac_2include_2_f_l_a_c_09_09_2decoder_8h" kindref="compound">FLAC++/decoder.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="libflac_2include_2share_2compat_8h" kindref="compound">share/compat.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="ordinals_8h_1aa78c8c70a3eb8a58af7436f278acde8e" kindref="member">FLAC__uint64</ref><sp/>total_samples<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>sample_rate<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>channels<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>bps<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>write_little_endian_uint16(FILE<sp/>*<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/><ref refid="ordinals_8h_1a0fbaee65d056a075245dcd0c903fb94c" kindref="member">FLAC__uint16</ref><sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>)</highlight></codeline>
<codeline lineno="44"><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fputc(x,<sp/>f)<sp/>!=<sp/>EOF<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fputc(x<sp/>&gt;&gt;<sp/>8,<sp/>f)<sp/>!=<sp/>EOF</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>write_little_endian_int16(FILE<sp/>*<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/><ref refid="ordinals_8h_1ae4907c2639411fa7da0fe7a008a5f911" kindref="member">FLAC__int16</ref><sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>)</highlight></codeline>
<codeline lineno="52"><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>write_little_endian_uint16(f,<sp/>(<ref refid="ordinals_8h_1a0fbaee65d056a075245dcd0c903fb94c" kindref="member">FLAC__uint16</ref>)x);</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>write_little_endian_uint32(FILE<sp/>*f,<sp/><ref refid="ordinals_8h_1a9c4005ea7ef8d564b0cc993cdd0e4e5e" kindref="member">FLAC__uint32</ref><sp/>x)</highlight></codeline>
<codeline lineno="57"><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fputc(x,<sp/>f)<sp/>!=<sp/>EOF<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fputc(x<sp/>&gt;&gt;<sp/>8,<sp/>f)<sp/>!=<sp/>EOF<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fputc(x<sp/>&gt;&gt;<sp/>16,<sp/>f)<sp/>!=<sp/>EOF<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fputc(x<sp/>&gt;&gt;<sp/>24,<sp/>f)<sp/>!=<sp/>EOF</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="class_our_decoder" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_our_decoder" kindref="compound">OurDecoder</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_f_l_a_c_1_1_decoder_1_1_file" kindref="compound">FLAC::Decoder::File</ref><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="68" refid="class_our_decoder_1a511d0a64ab40974d9b402e650e68f149" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_our_decoder_1a511d0a64ab40974d9b402e650e68f149" kindref="member">OurDecoder</ref>(FILE<sp/>*f_):<sp/><ref refid="namespace_f_l_a_c" kindref="compound">FLAC</ref>::<ref refid="class_decoder" kindref="compound">Decoder</ref>::<ref refid="class_f_l_a_c_1_1_decoder_1_1_file_1ac11d185ad7efe2438d5450a588c66716" kindref="member">File</ref>(),<sp/>f(f_)<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="70" refid="class_our_decoder_1a13222ae563d6584722c9cb42a0fa999e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*<ref refid="class_our_decoder_1a13222ae563d6584722c9cb42a0fa999e" kindref="member">f</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__flac__stream__decoder_1ga73f67eb9e0ab57945afe038751bc62c8" kindref="member">virtual ::FLAC__StreamDecoderWriteStatus</ref><sp/><ref refid="class_our_decoder_1aa30239cce1680b448af774b12bc1db47" kindref="member">write_callback</ref>(const<sp/>::FLAC__Frame<sp/>*frame,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="ordinals_8h_1a33fd77bfe6d685541a0c034a75deccdc" kindref="member">FLAC__int32</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structbuffer" kindref="compound">buffer</ref>[]);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_our_decoder_1ae0654f6c808ba378890bbcdf0fd54958" kindref="member">metadata_callback</ref>(const<sp/>::FLAC__StreamMetadata<sp/>*metadata);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_our_decoder_1ad6dcef392b7f1aa8ee1af0d0114f14f2" kindref="member">error_callback</ref>(::<ref refid="group__flac__stream__decoder_1ga130e70bd9a73d3c2416247a3e5132ecf" kindref="member">FLAC__StreamDecoderErrorStatus</ref><sp/><ref refid="conv2dtest_8m_1a1b5437a866e6f95107b07ba845bc1800" kindref="member">status</ref>);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_our_decoder_1a511d0a64ab40974d9b402e650e68f149" kindref="member">OurDecoder</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_our_decoder" kindref="compound">OurDecoder</ref>&amp;);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_our_decoder" kindref="compound">OurDecoder</ref>&amp;operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_our_decoder" kindref="compound">OurDecoder</ref>&amp;);</highlight></codeline>
<codeline lineno="78"><highlight class="normal">};</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="lib-src_2libflac_2examples_2cpp_2decode_2file_2main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib-src_2libflac_2examples_2cpp_2decode_2file_2main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cmdline_8c_1aaffeb1bf2056ea44af5b5d0ee4d6ff07" kindref="member">argc</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="cmdline_8c_1ad407d5ba91709bd9b092003858600723" kindref="member">argv</ref>[])</highlight></codeline>
<codeline lineno="81"><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ok<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*fout;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(argc<sp/>!=<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;usage:<sp/>%s<sp/>infile.flac<sp/>outfile.wav\n&quot;</highlight><highlight class="normal">,<sp/>argv[0]);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((fout<sp/>=<sp/>fopen(argv[2],<sp/></highlight><highlight class="stringliteral">&quot;wb&quot;</highlight><highlight class="normal">))<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>opening<sp/>%s<sp/>for<sp/>output\n&quot;</highlight><highlight class="normal">,<sp/>argv[2]);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_our_decoder" kindref="compound">OurDecoder</ref><sp/>decoder(fout);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!decoder)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>allocating<sp/>decoder\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conv2dtest_8m_1ae93e9d524fd1ef618af3d5070a8126eb" kindref="member">fclose</ref>(fout);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>(<ref refid="lib_2expat_8h_1a3980d15795c6349fecd06c1b035c1ae9" kindref="member">void</ref>)decoder.<ref refid="class_f_l_a_c_1_1_decoder_1_1_stream_1ace8abae9cf554d8f7fd55942ee7ecd2c" kindref="member">set_md5_checking</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__flac__stream__decoder_1gaaed54a24ac6310d29c5cafba79759c44" kindref="member">FLAC__StreamDecoderInitStatus</ref><sp/>init_status<sp/>=<sp/>decoder.<ref refid="class_f_l_a_c_1_1_decoder_1_1_file_1ab0e9926c18718bc951dfdc5923157d79" kindref="member">init</ref>(argv[1]);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(init_status<sp/>!=<sp/><ref refid="group__flac__stream__decoder_1ggaaed54a24ac6310d29c5cafba79759c44ac94c7e9396f30642f34805e5d626e011" kindref="member">FLAC__STREAM_DECODER_INIT_STATUS_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>initializing<sp/>decoder:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__flac__stream__decoder_1ga34953a802ba44d861dcc8e9f2bb9d659" kindref="member">FLAC__StreamDecoderInitStatusString</ref>[init_status]);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ok<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ok)<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ok<sp/>=<sp/>decoder.<ref refid="class_f_l_a_c_1_1_decoder_1_1_stream_1a019c76ebdf480ab06d8838a0005f3017" kindref="member">process_until_end_of_stream</ref>();</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;decoding:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>ok?<sp/></highlight><highlight class="stringliteral">&quot;succeeded&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;FAILED&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>state:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>decoder.<ref refid="class_f_l_a_c_1_1_decoder_1_1_stream_1a3b1b297dbdfcdf95003419f5f4da68fc" kindref="member">get_state</ref>().<ref refid="class_f_l_a_c_1_1_decoder_1_1_stream_1_1_state_1ab56d202157b96b144fd35bb7e7ff9e0a" kindref="member">resolved_as_cstring</ref>(decoder));</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="conv2dtest_8m_1ae93e9d524fd1ef618af3d5070a8126eb" kindref="member">fclose</ref>(fout);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="class_our_decoder_1aa30239cce1680b448af774b12bc1db47" refkind="member"><highlight class="normal"><ref refid="group__flac__stream__decoder_1ga73f67eb9e0ab57945afe038751bc62c8" kindref="member">::FLAC__StreamDecoderWriteStatus</ref><sp/><ref refid="class_our_decoder_1aa30239cce1680b448af774b12bc1db47" kindref="member">OurDecoder::write_callback</ref>(const<sp/>::FLAC__Frame<sp/>*frame,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="ordinals_8h_1a33fd77bfe6d685541a0c034a75deccdc" kindref="member">FLAC__int32</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structbuffer" kindref="compound">buffer</ref>[])</highlight></codeline>
<codeline lineno="123"><highlight class="normal">{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="ordinals_8h_1a9c4005ea7ef8d564b0cc993cdd0e4e5e" kindref="member">FLAC__uint32</ref><sp/>total_size<sp/>=<sp/>(<ref refid="ordinals_8h_1a9c4005ea7ef8d564b0cc993cdd0e4e5e" kindref="member">FLAC__uint32</ref>)(total_samples<sp/>*<sp/>channels<sp/>*<sp/>(bps/8));</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(total_samples<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>this<sp/>example<sp/>only<sp/>works<sp/>for<sp/>FLAC<sp/>files<sp/>that<sp/>have<sp/>a<sp/>total_samples<sp/>count<sp/>in<sp/>STREAMINFO\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__flac__stream__decoder_1gga73f67eb9e0ab57945afe038751bc62c8a23bd6bfec34af704e0d5ea273f14d95d" kindref="member">FLAC__STREAM_DECODER_WRITE_STATUS_ABORT</ref>;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(channels<sp/>!=<sp/>2<sp/>||<sp/>bps<sp/>!=<sp/>16)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>this<sp/>example<sp/>only<sp/>supports<sp/>16bit<sp/>stereo<sp/>streams\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__flac__stream__decoder_1gga73f67eb9e0ab57945afe038751bc62c8a23bd6bfec34af704e0d5ea273f14d95d" kindref="member">FLAC__STREAM_DECODER_WRITE_STATUS_ABORT</ref>;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>WAVE<sp/>header<sp/>before<sp/>we<sp/>write<sp/>the<sp/>first<sp/>frame<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(frame-&gt;header.number.sample_number<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fwrite(</highlight><highlight class="stringliteral">&quot;RIFF&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>4,<sp/>f)<sp/>&lt;<sp/>4<sp/>||</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!write_little_endian_uint32(f,<sp/>total_size<sp/>+<sp/>36)<sp/>||</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fwrite(</highlight><highlight class="stringliteral">&quot;WAVEfmt<sp/>&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>8,<sp/>f)<sp/>&lt;<sp/>8<sp/>||</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!write_little_endian_uint32(f,<sp/>16)<sp/>||</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!write_little_endian_uint16(f,<sp/>1)<sp/>||</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!write_little_endian_uint16(f,<sp/>(<ref refid="ordinals_8h_1a0fbaee65d056a075245dcd0c903fb94c" kindref="member">FLAC__uint16</ref>)channels)<sp/>||</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!write_little_endian_uint32(f,<sp/>sample_rate)<sp/>||</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!write_little_endian_uint32(f,<sp/>sample_rate<sp/>*<sp/>channels<sp/>*<sp/>(bps/8))<sp/>||</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!write_little_endian_uint16(f,<sp/>(<ref refid="ordinals_8h_1a0fbaee65d056a075245dcd0c903fb94c" kindref="member">FLAC__uint16</ref>)(channels<sp/>*<sp/>(bps/8)))<sp/>||<sp/></highlight><highlight class="comment">/*<sp/>block<sp/>align<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!write_little_endian_uint16(f,<sp/>(<ref refid="ordinals_8h_1a0fbaee65d056a075245dcd0c903fb94c" kindref="member">FLAC__uint16</ref>)bps)<sp/>||</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fwrite(</highlight><highlight class="stringliteral">&quot;data&quot;</highlight><highlight class="normal">,<sp/>1,<sp/>4,<sp/>f)<sp/>&lt;<sp/>4<sp/>||</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!write_little_endian_uint32(f,<sp/>total_size)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>write<sp/>error\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__flac__stream__decoder_1gga73f67eb9e0ab57945afe038751bc62c8a23bd6bfec34af704e0d5ea273f14d95d" kindref="member">FLAC__STREAM_DECODER_WRITE_STATUS_ABORT</ref>;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>write<sp/>decoded<sp/>PCM<sp/>samples<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>frame-&gt;header.blocksize;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!write_little_endian_int16(f,<sp/>(<ref refid="ordinals_8h_1ae4907c2639411fa7da0fe7a008a5f911" kindref="member">FLAC__int16</ref>)buffer[0][i])<sp/>||<sp/><sp/></highlight><highlight class="comment">/*<sp/>left<sp/>channel<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!write_little_endian_int16(f,<sp/>(<ref refid="ordinals_8h_1ae4907c2639411fa7da0fe7a008a5f911" kindref="member">FLAC__int16</ref>)buffer[1][i])<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>right<sp/>channel<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>write<sp/>error\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__flac__stream__decoder_1gga73f67eb9e0ab57945afe038751bc62c8a23bd6bfec34af704e0d5ea273f14d95d" kindref="member">FLAC__STREAM_DECODER_WRITE_STATUS_ABORT</ref>;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__flac__stream__decoder_1gga73f67eb9e0ab57945afe038751bc62c8acea48326e0ab8370d2814f4126fcb84e" kindref="member">FLAC__STREAM_DECODER_WRITE_STATUS_CONTINUE</ref>;</highlight></codeline>
<codeline lineno="169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171" refid="class_our_decoder_1ae0654f6c808ba378890bbcdf0fd54958" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_our_decoder_1ae0654f6c808ba378890bbcdf0fd54958" kindref="member">OurDecoder::metadata_callback</ref>(const<sp/>::FLAC__StreamMetadata<sp/>*metadata)</highlight></codeline>
<codeline lineno="172"><highlight class="normal">{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>print<sp/>some<sp/>stats<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(metadata-&gt;type<sp/>==<sp/><ref refid="group__flac__format_1ggac71714ba8ddbbd66d26bb78a427fac01acffa517e969ba6a868dcf10e5da75c28" kindref="member">FLAC__METADATA_TYPE_STREAMINFO</ref>)<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>save<sp/>for<sp/>later<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total_samples<sp/>=<sp/>metadata-&gt;data.stream_info.total_samples;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sample_rate<sp/>=<sp/>metadata-&gt;data.stream_info.sample_rate;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>channels<sp/>=<sp/>metadata-&gt;data.stream_info.channels;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bps<sp/>=<sp/>metadata-&gt;data.stream_info.bits_per_sample;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;sample<sp/>rate<sp/><sp/><sp/><sp/>:<sp/>%u<sp/>Hz\n&quot;</highlight><highlight class="normal">,<sp/>sample_rate);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;channels<sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>%u\n&quot;</highlight><highlight class="normal">,<sp/>channels);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;bits<sp/>per<sp/>sample:<sp/>%u\n&quot;</highlight><highlight class="normal">,<sp/>bps);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;total<sp/>samples<sp/><sp/>:<sp/>%&quot;</highlight><highlight class="normal"><sp/><ref refid="ffmpeg_2win32_2inttypes_8h_1ac582131d7a7c8ee57e73180d1714f9d5" kindref="member">PRIu64</ref><sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,<sp/>total_samples);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal">}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="class_our_decoder_1ad6dcef392b7f1aa8ee1af0d0114f14f2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_our_decoder_1ad6dcef392b7f1aa8ee1af0d0114f14f2" kindref="member">OurDecoder::error_callback</ref>(::<ref refid="group__flac__stream__decoder_1ga130e70bd9a73d3c2416247a3e5132ecf" kindref="member">FLAC__StreamDecoderErrorStatus</ref><sp/><ref refid="conv2dtest_8m_1a1b5437a866e6f95107b07ba845bc1800" kindref="member">status</ref>)</highlight></codeline>
<codeline lineno="189"><highlight class="normal">{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Got<sp/>error<sp/>callback:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__flac__stream__decoder_1gadc56befa033b67dd3befcd2f5f909ec1" kindref="member">FLAC__StreamDecoderErrorStatusString</ref>[status]);</highlight></codeline>
<codeline lineno="191"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/examples/cpp/decode/file/main.cpp"/>
  </compounddef>
</doxygen>
