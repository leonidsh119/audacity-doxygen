<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="audio__analyzer_8h" kind="file" language="C++">
    <compoundname>audio_analyzer.h</compoundname>
    <includes refid="biquad__filter_8h" local="yes">biquad_filter.h</includes>
    <includedby refid="audio__analyzer_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c</includedby>
    <includedby refid="paqa_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/paqa.c</includedby>
    <includedby refid="test__audio__analyzer_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/test_audio_analyzer.c</includedby>
    <incdepgraph>
      <node id="29241">
        <label>biquad_filter.h</label>
        <link refid="biquad__filter_8h"/>
      </node>
      <node id="29240">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.h</label>
        <link refid="audio_analyzer.h"/>
        <childnode refid="29241" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="29245">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/test_audio_analyzer.c</label>
        <link refid="test__audio__analyzer_8c"/>
      </node>
      <node id="29244">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/paqa.c</label>
        <link refid="paqa_8c"/>
      </node>
      <node id="29243">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c</label>
        <link refid="audio__analyzer_8c"/>
      </node>
      <node id="29242">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.h</label>
        <link refid="audio_analyzer.h"/>
        <childnode refid="29243" relation="include">
        </childnode>
        <childnode refid="29244" relation="include">
        </childnode>
        <childnode refid="29245" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_pa_qa_sine_generator__s" prot="public">PaQaSineGenerator_s</innerclass>
    <innerclass refid="struct_pa_qa_recording__s" prot="public">PaQaRecording_s</innerclass>
    <innerclass refid="struct_pa_qa_test_tone__s" prot="public">PaQaTestTone_s</innerclass>
    <innerclass refid="struct_pa_qa_analysis_result__s" prot="public">PaQaAnalysisResult_s</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="audio__analyzer_8h_1ac58cbaeae310f551049f77b7c098599e" prot="public" static="no">
        <name>MATH_PI</name>
        <initializer>(3.141592653589793238462643)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.h" line="44" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.h" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="audio__analyzer_8h_1a40f334a745c1fd19326902c1e0e17d67" prot="public" static="no">
        <name>MATH_TWO_PI</name>
        <initializer>(2.0 * <ref refid="audio__analyzer_8h_1ac58cbaeae310f551049f77b7c098599e" kindref="member">MATH_PI</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.h" line="45" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="audio__analyzer_8h_1a54a1c7f8306dd7ec9c736d2e81681f03" prot="public" static="no">
        <type>struct <ref refid="struct_pa_qa_sine_generator__s" kindref="compound">PaQaSineGenerator_s</ref></type>
        <definition>typedef struct PaQaSineGenerator_s  PaQaSineGenerator</definition>
        <argsstring></argsstring>
        <name>PaQaSineGenerator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.h" line="53" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="audio__analyzer_8h_1ad8dbda49a320a7e18ce4215416afd9a7" prot="public" static="no">
        <type>struct <ref refid="struct_pa_qa_recording__s" kindref="compound">PaQaRecording_s</ref></type>
        <definition>typedef struct PaQaRecording_s  PaQaRecording</definition>
        <argsstring></argsstring>
        <name>PaQaRecording</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Container for a monophonic audio sample in memory. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.h" line="64" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="audio__analyzer_8h_1aeb941f66bc7a144aba7db0ed6088d9b1" prot="public" static="no">
        <type>struct <ref refid="struct_pa_qa_test_tone__s" kindref="compound">PaQaTestTone_s</ref></type>
        <definition>typedef struct PaQaTestTone_s  PaQaTestTone</definition>
        <argsstring></argsstring>
        <name>PaQaTestTone</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.h" line="73" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="audio__analyzer_8h_1a55c76a25f8d624d32cd78856c0654f6f" prot="public" static="no">
        <type>struct <ref refid="struct_pa_qa_analysis_result__s" kindref="compound">PaQaAnalysisResult_s</ref></type>
        <definition>typedef struct PaQaAnalysisResult_s  PaQaAnalysisResult</definition>
        <argsstring></argsstring>
        <name>PaQaAnalysisResult</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.h" line="87" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="audio__analyzer_8h_1a9c930334efac22cea25f83543823d995" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double PaQa_GetNthFrequency</definition>
        <argsstring>(double baseFrequency, int index)</argsstring>
        <name>PaQa_GetNthFrequency</name>
        <param>
          <type>double</type>
          <declname>baseFrequency</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculate Nth frequency of a series for use in testing multiple channels. Series should avoid harmonic overlap between channels. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.h" line="97" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c" bodystart="51" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="audio__analyzer_8h_1a0d053fe46ae855fa1401098ea08efa88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void PaQa_EraseBuffer</definition>
        <argsstring>(float *buffer, int numFrames, int samplesPerFrame)</argsstring>
        <name>PaQa_EraseBuffer</name>
        <param>
          <type>float *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>numFrames</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>samplesPerFrame</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.h" line="99" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c" bodystart="58" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="audio__analyzer_8h_1a3511746af23da7b237a81abcd5103e0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void PaQa_MixSine</definition>
        <argsstring>(PaQaSineGenerator *generator, float *buffer, int numSamples, int stride)</argsstring>
        <name>PaQa_MixSine</name>
        <param>
          <type><ref refid="audio__analyzer_8h_1a54a1c7f8306dd7ec9c736d2e81681f03" kindref="member">PaQaSineGenerator</ref> *</type>
          <declname>generator</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>numSamples</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>stride</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.h" line="101" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c" bodystart="78" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="audio__analyzer_8h_1ad86d65280abda9882edea429362b7c64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void PaQa_WriteSine</definition>
        <argsstring>(float *buffer, int numSamples, int stride, double frequency, double amplitude)</argsstring>
        <name>PaQa_WriteSine</name>
        <param>
          <type>float *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>numSamples</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>stride</declname>
        </param>
        <param>
          <type>double</type>
          <declname>frequency</declname>
        </param>
        <param>
          <type>double</type>
          <declname>amplitude</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.h" line="103" column="1"/>
      </memberdef>
      <memberdef kind="function" id="audio__analyzer_8h_1aa0ca89d66590535656409fd3466e1997" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void PaQa_GenerateCrack</definition>
        <argsstring>(float *buffer, int numSamples, int stride)</argsstring>
        <name>PaQa_GenerateCrack</name>
        <param>
          <type>float *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>numSamples</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>stride</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Generate a signal with a sharp edge in the middle that can be recognized despite some phase shift. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.h" line="109" column="1"/>
      </memberdef>
      <memberdef kind="function" id="audio__analyzer_8h_1aa3695cc2693120119d3e2f7ee3cad473" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double PaQa_ComputePhaseDifference</definition>
        <argsstring>(double phase1, double phase2)</argsstring>
        <name>PaQa_ComputePhaseDifference</name>
        <param>
          <type>double</type>
          <declname>phase1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>phase2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.h" line="111" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c" bodystart="463" bodyend="475"/>
      </memberdef>
      <memberdef kind="function" id="audio__analyzer_8h_1a8be3a62d7063764c0f1fbbe0f2fdfec8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double PaQa_MeasureArea</definition>
        <argsstring>(float *buffer, int numFrames, int stride)</argsstring>
        <name>PaQa_MeasureArea</name>
        <param>
          <type>float *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>numFrames</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>stride</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Measure the area under the curve by summing absolute value of each value. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.h" line="116" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c" bodystart="414" bodyend="424"/>
      </memberdef>
      <memberdef kind="function" id="audio__analyzer_8h_1a2c9261859914b9de91ab823e7ba39e8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double PaQa_MeasureCrossingSlope</definition>
        <argsstring>(float *buffer, int numFrames)</argsstring>
        <name>PaQa_MeasureCrossingSlope</name>
        <param>
          <type>float *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>numFrames</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Measure slope of the positive zero crossings. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.h" line="121" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c" bodystart="251" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="audio__analyzer_8h_1a5b15fa5f9ffe7d147b31f747c40ff49b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void PaQa_SetupSineGenerator</definition>
        <argsstring>(PaQaSineGenerator *generator, double frequency, double amplitude, double frameRate)</argsstring>
        <name>PaQa_SetupSineGenerator</name>
        <param>
          <type><ref refid="audio__analyzer_8h_1a54a1c7f8306dd7ec9c736d2e81681f03" kindref="member">PaQaSineGenerator</ref> *</type>
          <declname>generator</declname>
        </param>
        <param>
          <type>double</type>
          <declname>frequency</declname>
        </param>
        <param>
          <type>double</type>
          <declname>amplitude</declname>
        </param>
        <param>
          <type>double</type>
          <declname>frameRate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Prepare an oscillator that can generate a sine tone for testing. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.h" line="127" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c" bodystart="69" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="audio__analyzer_8h_1a93b734e5ffce0b4aebcb41a210bcf2ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int PaQa_InitializeRecording</definition>
        <argsstring>(PaQaRecording *recording, int maxSamples, int sampleRate)</argsstring>
        <name>PaQa_InitializeRecording</name>
        <param>
          <type><ref refid="audio__analyzer_8h_1ad8dbda49a320a7e18ce4215416afd9a7" kindref="member">PaQaRecording</ref> *</type>
          <declname>recording</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>maxSamples</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>sampleRate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allocate memory for containg a mono audio signal. Set up recording for writing. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.h" line="135" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c" bodystart="114" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="audio__analyzer_8h_1a75b79fa3e7ebd8814532f4e6771f1d0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void PaQa_TerminateRecording</definition>
        <argsstring>(PaQaRecording *recording)</argsstring>
        <name>PaQa_TerminateRecording</name>
        <param>
          <type><ref refid="audio__analyzer_8h_1ad8dbda49a320a7e18ce4215416afd9a7" kindref="member">PaQaRecording</ref> *</type>
          <declname>recording</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Free memory allocated by PaQa_InitializeRecording. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.h" line="140" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c" bodystart="127" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="audio__analyzer_8h_1a89f3a57c92da52f6ebdb4ee3633db3b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void PaQa_FilterRecording</definition>
        <argsstring>(PaQaRecording *input, PaQaRecording *output, BiquadFilter *filter)</argsstring>
        <name>PaQa_FilterRecording</name>
        <param>
          <type><ref refid="audio__analyzer_8h_1ad8dbda49a320a7e18ce4215416afd9a7" kindref="member">PaQaRecording</ref> *</type>
          <declname>input</declname>
        </param>
        <param>
          <type><ref refid="audio__analyzer_8h_1ad8dbda49a320a7e18ce4215416afd9a7" kindref="member">PaQaRecording</ref> *</type>
          <declname>output</declname>
        </param>
        <param>
          <type><ref refid="biquad__filter_8h_1a056212dddb48d45495c50f7ccdf2b43a" kindref="member">BiquadFilter</ref> *</type>
          <declname>filter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Apply a biquad filter to the audio from the input recording and write it to the output recording. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.h" line="145" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c" bodystart="340" bodyend="345"/>
      </memberdef>
      <memberdef kind="function" id="audio__analyzer_8h_1ad176a266e1bb48a3107f50755127fac8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int PaQa_SaveRecordingToWaveFile</definition>
        <argsstring>(PaQaRecording *recording, const char *filename)</argsstring>
        <name>PaQa_SaveRecordingToWaveFile</name>
        <param>
          <type><ref refid="audio__analyzer_8h_1ad8dbda49a320a7e18ce4215416afd9a7" kindref="member">PaQaRecording</ref> *</type>
          <declname>recording</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write recording to WAV file. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.h" line="148" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c" bodystart="206" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="audio__analyzer_8h_1a7cf446a82066abc234f0170f10adc8b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int PaQa_WriteRecording</definition>
        <argsstring>(PaQaRecording *recording, float *buffer, int numSamples, int stride)</argsstring>
        <name>PaQa_WriteRecording</name>
        <param>
          <type><ref refid="audio__analyzer_8h_1ad8dbda49a320a7e18ce4215416afd9a7" kindref="member">PaQaRecording</ref> *</type>
          <declname>recording</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>numSamples</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>stride</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stride</parametername>
</parameternamelist>
<parameterdescription>
<para>is the spacing of samples to skip in the input buffer. To use every samples pass 1. To use every other sample pass 2. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.h" line="153" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c" bodystart="138" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="audio__analyzer_8h_1a74079de339ec5f428d495cddb5e3b573" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int PaQa_WriteSilence</definition>
        <argsstring>(PaQaRecording *recording, int numSamples)</argsstring>
        <name>PaQa_WriteSilence</name>
        <param>
          <type><ref refid="audio__analyzer_8h_1ad8dbda49a320a7e18ce4215416afd9a7" kindref="member">PaQaRecording</ref> *</type>
          <declname>recording</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>numSamples</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write zeros into a recording. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.h" line="156" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c" bodystart="160" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="audio__analyzer_8h_1a45471b2da58d5831059bda8c87628085" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int PaQa_RecordFreeze</definition>
        <argsstring>(PaQaRecording *recording, int numSamples)</argsstring>
        <name>PaQa_RecordFreeze</name>
        <param>
          <type><ref refid="audio__analyzer_8h_1ad8dbda49a320a7e18ce4215416afd9a7" kindref="member">PaQaRecording</ref> *</type>
          <declname>recording</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>numSamples</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.h" line="158" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c" bodystart="181" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="audio__analyzer_8h_1addffeae72a884cce43ade4621c9b23c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double PaQa_CorrelateSine</definition>
        <argsstring>(PaQaRecording *recording, double frequency, double frameRate, int startFrame, int numSamples, double *phasePtr)</argsstring>
        <name>PaQa_CorrelateSine</name>
        <param>
          <type><ref refid="audio__analyzer_8h_1ad8dbda49a320a7e18ce4215416afd9a7" kindref="member">PaQaRecording</ref> *</type>
          <declname>recording</declname>
        </param>
        <param>
          <type>double</type>
          <declname>frequency</declname>
        </param>
        <param>
          <type>double</type>
          <declname>frameRate</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>startFrame</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>numSamples</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>phasePtr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.h" line="160" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c" bodystart="299" bodyend="337"/>
      </memberdef>
      <memberdef kind="function" id="audio__analyzer_8h_1a8f61990e727c1eb1e278cce3b18b4375" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double PaQa_FindFirstMatch</definition>
        <argsstring>(PaQaRecording *recording, float *buffer, int numSamples, double tolerance)</argsstring>
        <name>PaQa_FindFirstMatch</name>
        <param>
          <type><ref refid="audio__analyzer_8h_1ad8dbda49a320a7e18ce4215416afd9a7" kindref="member">PaQaRecording</ref> *</type>
          <declname>recording</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>numSamples</declname>
          <defname>numFrames</defname>
        </param>
        <param>
          <type>double</type>
          <declname>tolerance</declname>
          <defname>threshold</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Scan until we get a correlation of a single that goes over the tolerance level, peaks then drops to half the peak. Look for inverse correlation as well. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.h" line="163" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c" bodystart="352" bodyend="410"/>
      </memberdef>
      <memberdef kind="function" id="audio__analyzer_8h_1a134d28401b6cd71d28ed3a4291032a54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double PaQa_MeasureSineAmplitudeBySlope</definition>
        <argsstring>(PaQaRecording *recording, double frequency, double frameRate, int startFrame, int numFrames)</argsstring>
        <name>PaQa_MeasureSineAmplitudeBySlope</name>
        <param>
          <type><ref refid="audio__analyzer_8h_1ad8dbda49a320a7e18ce4215416afd9a7" kindref="member">PaQaRecording</ref> *</type>
          <declname>recording</declname>
        </param>
        <param>
          <type>double</type>
          <declname>frequency</declname>
        </param>
        <param>
          <type>double</type>
          <declname>frameRate</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>startFrame</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>numFrames</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Estimate the original amplitude of a clipped sine wave by measuring its average slope at the zero crossings. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.h" line="169" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c" bodystart="287" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="audio__analyzer_8h_1aca03218918e6dd68c79c6cc60bc21384" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double PaQa_MeasureRootMeanSquare</definition>
        <argsstring>(float *buffer, int numFrames)</argsstring>
        <name>PaQa_MeasureRootMeanSquare</name>
        <param>
          <type>float *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>numFrames</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.h" line="173" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c" bodystart="428" bodyend="440"/>
      </memberdef>
      <memberdef kind="function" id="audio__analyzer_8h_1a36b44ac4b3ba2e3de200de15ee7a25ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double PaQa_CompareAmplitudes</definition>
        <argsstring>(PaQaRecording *recording, int startAt, float *buffer, int numSamples)</argsstring>
        <name>PaQa_CompareAmplitudes</name>
        <param>
          <type><ref refid="audio__analyzer_8h_1ad8dbda49a320a7e18ce4215416afd9a7" kindref="member">PaQaRecording</ref> *</type>
          <declname>recording</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>startAt</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>numSamples</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compare the amplitudes of these two signals. Return ratio of recorded signal over buffer signal. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.h" line="179" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c" bodystart="447" bodyend="459"/>
      </memberdef>
      <memberdef kind="function" id="audio__analyzer_8h_1a6232297ca356c8753050d169966525b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int PaQa_AnalyseRecording</definition>
        <argsstring>(PaQaRecording *recording, PaQaTestTone *testTone, PaQaAnalysisResult *analysisResult)</argsstring>
        <name>PaQa_AnalyseRecording</name>
        <param>
          <type><ref refid="audio__analyzer_8h_1ad8dbda49a320a7e18ce4215416afd9a7" kindref="member">PaQaRecording</ref> *</type>
          <declname>recording</declname>
        </param>
        <param>
          <type><ref refid="audio__analyzer_8h_1aeb941f66bc7a144aba7db0ed6088d9b1" kindref="member">PaQaTestTone</ref> *</type>
          <declname>testTone</declname>
        </param>
        <param>
          <type><ref refid="audio__analyzer_8h_1a55c76a25f8d624d32cd78856c0654f6f" kindref="member">PaQaAnalysisResult</ref> *</type>
          <declname>analysisResult</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Analyse a recording of a sine wave. Measure latency and look for dropped frames, etc. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.h" line="185" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.c" bodystart="685" bodyend="706"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>PortAudio<sp/>Portable<sp/>Real-Time<sp/>Audio<sp/>Library</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Latest<sp/>Version<sp/>at:<sp/>http://www.portaudio.com</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>1999-2010<sp/>Phil<sp/>Burk<sp/>and<sp/>Ross<sp/>Bencina</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>The<sp/>text<sp/>above<sp/>constitutes<sp/>the<sp/>entire<sp/>PortAudio<sp/>license;<sp/>however,<sp/></highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>the<sp/>PortAudio<sp/>community<sp/>also<sp/>makes<sp/>the<sp/>following<sp/>non-binding<sp/>requests:</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>Any<sp/>person<sp/>wishing<sp/>to<sp/>distribute<sp/>modifications<sp/>to<sp/>the<sp/>Software<sp/>is</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/>requested<sp/>to<sp/>send<sp/>the<sp/>modifications<sp/>to<sp/>the<sp/>original<sp/>developer<sp/>so<sp/>that</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>they<sp/>can<sp/>be<sp/>incorporated<sp/>into<sp/>the<sp/>canonical<sp/>version.<sp/>It<sp/>is<sp/>also<sp/></highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/>requested<sp/>that<sp/>these<sp/>non-binding<sp/>requests<sp/>be<sp/>included<sp/>along<sp/>with<sp/>the<sp/></highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/>license<sp/>above.</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_AUDIO_ANALYZER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_AUDIO_ANALYZER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="biquad__filter_8h" kindref="compound">biquad_filter.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="audio__analyzer_8h_1ac58cbaeae310f551049f77b7c098599e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MATH_PI<sp/><sp/>(3.141592653589793238462643)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="audio__analyzer_8h_1a40f334a745c1fd19326902c1e0e17d67" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MATH_TWO_PI<sp/><sp/>(2.0<sp/>*<sp/>MATH_PI)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="struct_pa_qa_sine_generator__s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_pa_qa_sine_generator__s" kindref="compound">PaQaSineGenerator_s</ref></highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49" refid="struct_pa_qa_sine_generator__s_1a6a53658f28e435c3c7bdd47e36859826" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_qa_sine_generator__s_1a6a53658f28e435c3c7bdd47e36859826" kindref="member">phase</ref>;</highlight></codeline>
<codeline lineno="50" refid="struct_pa_qa_sine_generator__s_1a7939455f258b2ba52aade79672f3d5ea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_qa_sine_generator__s_1a7939455f258b2ba52aade79672f3d5ea" kindref="member">phaseIncrement</ref>;</highlight></codeline>
<codeline lineno="51" refid="struct_pa_qa_sine_generator__s_1ae73569f3aa4212befb0fc87df74d6a7d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_qa_sine_generator__s_1ae73569f3aa4212befb0fc87df74d6a7d" kindref="member">frequency</ref>;</highlight></codeline>
<codeline lineno="52" refid="struct_pa_qa_sine_generator__s_1a8f0027443ba30c1c5e57c88364cec465" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_qa_sine_generator__s_1a8f0027443ba30c1c5e57c88364cec465" kindref="member">amplitude</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}<sp/><ref refid="audio__analyzer_8h_1a54a1c7f8306dd7ec9c736d2e81681f03" kindref="member">PaQaSineGenerator</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="struct_pa_qa_recording__s" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_pa_qa_recording__s" kindref="compound">PaQaRecording_s</ref></highlight></codeline>
<codeline lineno="57"><highlight class="normal">{</highlight></codeline>
<codeline lineno="59" refid="struct_pa_qa_recording__s_1abbed46e34e27ff432484f20eb6604185" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_pa_qa_recording__s_1abbed46e34e27ff432484f20eb6604185" kindref="member">maxFrames</ref>;</highlight></codeline>
<codeline lineno="60" refid="struct_pa_qa_recording__s_1a0881fb1e483b51cd2a828ac786728f93" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="struct_pa_qa_recording__s_1a0881fb1e483b51cd2a828ac786728f93" kindref="member">buffer</ref>;</highlight></codeline>
<codeline lineno="62" refid="struct_pa_qa_recording__s_1a0da5f9ac0c45a0051ce5c50cc1e05731" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_pa_qa_recording__s_1a0da5f9ac0c45a0051ce5c50cc1e05731" kindref="member">numFrames</ref>;</highlight></codeline>
<codeline lineno="63" refid="struct_pa_qa_recording__s_1a0a16e04122d6509e3efd524744b1e1df" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_pa_qa_recording__s_1a0a16e04122d6509e3efd524744b1e1df" kindref="member">sampleRate</ref>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}<sp/><ref refid="audio__analyzer_8h_1ad8dbda49a320a7e18ce4215416afd9a7" kindref="member">PaQaRecording</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="struct_pa_qa_test_tone__s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_pa_qa_test_tone__s" kindref="compound">PaQaTestTone_s</ref></highlight></codeline>
<codeline lineno="67"><highlight class="normal">{</highlight></codeline>
<codeline lineno="68" refid="struct_pa_qa_test_tone__s_1a90c802d23c98b9b340772c2bf2c14a84" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_pa_qa_test_tone__s_1a90c802d23c98b9b340772c2bf2c14a84" kindref="member">samplesPerFrame</ref>;</highlight></codeline>
<codeline lineno="69" refid="struct_pa_qa_test_tone__s_1a094a7dd30970e8def532ac7ea38f6b31" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_pa_qa_test_tone__s_1a094a7dd30970e8def532ac7ea38f6b31" kindref="member">startDelay</ref>;</highlight></codeline>
<codeline lineno="70" refid="struct_pa_qa_test_tone__s_1a204af537989a744626b4aabeb9e2d3a9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_qa_test_tone__s_1a204af537989a744626b4aabeb9e2d3a9" kindref="member">sampleRate</ref>;</highlight></codeline>
<codeline lineno="71" refid="struct_pa_qa_test_tone__s_1ab6e6a027870ba348bbce705bf5c196e5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_qa_test_tone__s_1ab6e6a027870ba348bbce705bf5c196e5" kindref="member">frequency</ref>;</highlight></codeline>
<codeline lineno="72" refid="struct_pa_qa_test_tone__s_1a94af989158aefe3bd584700022836a55" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_qa_test_tone__s_1a94af989158aefe3bd584700022836a55" kindref="member">amplitude</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}<sp/><ref refid="audio__analyzer_8h_1aeb941f66bc7a144aba7db0ed6088d9b1" kindref="member">PaQaTestTone</ref>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="struct_pa_qa_analysis_result__s" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_pa_qa_analysis_result__s" kindref="compound">PaQaAnalysisResult_s</ref></highlight></codeline>
<codeline lineno="76"><highlight class="normal">{</highlight></codeline>
<codeline lineno="77" refid="struct_pa_qa_analysis_result__s_1affa94b0959c600449a9473337ddd8abd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_pa_qa_analysis_result__s_1affa94b0959c600449a9473337ddd8abd" kindref="member">valid</ref>;</highlight></codeline>
<codeline lineno="79" refid="struct_pa_qa_analysis_result__s_1aa01cd3b08f4331d42e541a5525b5a5ef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_qa_analysis_result__s_1aa01cd3b08f4331d42e541a5525b5a5ef" kindref="member">latency</ref>;</highlight></codeline>
<codeline lineno="80" refid="struct_pa_qa_analysis_result__s_1a3db306b382cb9b01f4954e078f1f0d4c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_qa_analysis_result__s_1a3db306b382cb9b01f4954e078f1f0d4c" kindref="member">amplitudeRatio</ref>;</highlight></codeline>
<codeline lineno="81" refid="struct_pa_qa_analysis_result__s_1ab23ac837dc1cc396ab58326efea278ba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_qa_analysis_result__s_1ab23ac837dc1cc396ab58326efea278ba" kindref="member">popAmplitude</ref>;</highlight></codeline>
<codeline lineno="82" refid="struct_pa_qa_analysis_result__s_1aa803a3ce07fc930d172f019881cb5b44" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_qa_analysis_result__s_1aa803a3ce07fc930d172f019881cb5b44" kindref="member">popPosition</ref>;</highlight></codeline>
<codeline lineno="83" refid="struct_pa_qa_analysis_result__s_1adf01d50ef45ca2a38f961659b0b5e39e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_qa_analysis_result__s_1adf01d50ef45ca2a38f961659b0b5e39e" kindref="member">numDroppedFrames</ref>;</highlight></codeline>
<codeline lineno="84" refid="struct_pa_qa_analysis_result__s_1a5465c8dc21981f08bce260e864882808" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_qa_analysis_result__s_1a5465c8dc21981f08bce260e864882808" kindref="member">droppedFramesPosition</ref>;</highlight></codeline>
<codeline lineno="85" refid="struct_pa_qa_analysis_result__s_1aeb484763fda64f2ad66d30f1e7538290" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_qa_analysis_result__s_1aeb484763fda64f2ad66d30f1e7538290" kindref="member">numAddedFrames</ref>;</highlight></codeline>
<codeline lineno="86" refid="struct_pa_qa_analysis_result__s_1a54d571e9c681cdaf3901744c0dd84d10" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_qa_analysis_result__s_1a54d571e9c681cdaf3901744c0dd84d10" kindref="member">addedFramesPosition</ref>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal">}<sp/><ref refid="audio__analyzer_8h_1a55c76a25f8d624d32cd78856c0654f6f" kindref="member">PaQaAnalysisResult</ref>;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">/*================================================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment">/*=================<sp/>General<sp/>DSP<sp/>Tools<sp/>============================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">/*================================================================*/</highlight></codeline>
<codeline lineno="97"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="audio__analyzer_8h_1a9c930334efac22cea25f83543823d995" kindref="member">PaQa_GetNthFrequency</ref>(<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>baseFrequency,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="audio__analyzer_8h_1a0d053fe46ae855fa1401098ea08efa88" kindref="member">PaQa_EraseBuffer</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numFrames,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>samplesPerFrame<sp/>);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="audio__analyzer_8h_1a3511746af23da7b237a81abcd5103e0e" kindref="member">PaQa_MixSine</ref>(<sp/><ref refid="struct_pa_qa_sine_generator__s" kindref="compound">PaQaSineGenerator</ref><sp/>*generator,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numSamples,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride<sp/>);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="audio__analyzer_8h_1ad86d65280abda9882edea429362b7c64" kindref="member">PaQa_WriteSine</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numSamples,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="struct_pa_qa_sine_generator__s_1ae73569f3aa4212befb0fc87df74d6a7d" kindref="member">frequency</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="struct_pa_qa_sine_generator__s_1a8f0027443ba30c1c5e57c88364cec465" kindref="member">amplitude</ref><sp/>);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="audio__analyzer_8h_1aa0ca89d66590535656409fd3466e1997" kindref="member">PaQa_GenerateCrack</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numSamples,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride<sp/>);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="audio__analyzer_8h_1aa3695cc2693120119d3e2f7ee3cad473" kindref="member">PaQa_ComputePhaseDifference</ref>(<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>phase1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>phase2<sp/>);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="audio__analyzer_8h_1a8be3a62d7063764c0f1fbbe0f2fdfec8" kindref="member">PaQa_MeasureArea</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numFrames,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride<sp/><sp/>);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="audio__analyzer_8h_1a2c9261859914b9de91ab823e7ba39e8b" kindref="member">PaQa_MeasureCrossingSlope</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numFrames<sp/>);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="audio__analyzer_8h_1a5b15fa5f9ffe7d147b31f747c40ff49b" kindref="member">PaQa_SetupSineGenerator</ref>(<sp/><ref refid="struct_pa_qa_sine_generator__s" kindref="compound">PaQaSineGenerator</ref><sp/>*generator,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="struct_pa_qa_sine_generator__s_1ae73569f3aa4212befb0fc87df74d6a7d" kindref="member">frequency</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="struct_pa_qa_sine_generator__s_1a8f0027443ba30c1c5e57c88364cec465" kindref="member">amplitude</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>frameRate<sp/>);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">/*================================================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="comment">/*=================<sp/>Recordings<sp/>===================================*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="comment">/*================================================================*/</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="audio__analyzer_8h_1a93b734e5ffce0b4aebcb41a210bcf2ba" kindref="member">PaQa_InitializeRecording</ref>(<sp/><ref refid="struct_pa_qa_recording__s" kindref="compound">PaQaRecording</ref><sp/>*recording,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxSamples,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacepatest__suggested__vs__streaminfo__latency_1a14f2ecd6f756d329f6df4096833062d0" kindref="member">sampleRate</ref><sp/>);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="audio__analyzer_8h_1a75b79fa3e7ebd8814532f4e6771f1d0b" kindref="member">PaQa_TerminateRecording</ref>(<sp/><ref refid="struct_pa_qa_recording__s" kindref="compound">PaQaRecording</ref><sp/>*recording<sp/>);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="145"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="audio__analyzer_8h_1a89f3a57c92da52f6ebdb4ee3633db3b2" kindref="member">PaQa_FilterRecording</ref>(<sp/><ref refid="struct_pa_qa_recording__s" kindref="compound">PaQaRecording</ref><sp/>*input,<sp/><ref refid="struct_pa_qa_recording__s" kindref="compound">PaQaRecording</ref><sp/>*<ref refid="namespacelv2specgen_1a653e2b7722801dea4d25040ac958b631" kindref="member">output</ref>,<sp/><ref refid="struct_biquad_filter__s" kindref="compound">BiquadFilter</ref><sp/>*<ref refid="mm_8c_1a2719b8cbe8dc1a5064a418269c72e528" kindref="member">filter</ref><sp/>);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="audio__analyzer_8h_1ad176a266e1bb48a3107f50755127fac8" kindref="member">PaQa_SaveRecordingToWaveFile</ref>(<sp/><ref refid="struct_pa_qa_recording__s" kindref="compound">PaQaRecording</ref><sp/>*recording,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="octave__test_8m_1a2ff994e16bf9521154de4cf659a3b689" kindref="member">filename</ref><sp/>);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="153"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="audio__analyzer_8h_1a7cf446a82066abc234f0170f10adc8b8" kindref="member">PaQa_WriteRecording</ref>(<sp/><ref refid="struct_pa_qa_recording__s" kindref="compound">PaQaRecording</ref><sp/>*recording,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numSamples,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride<sp/>);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="156"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="audio__analyzer_8h_1a74079de339ec5f428d495cddb5e3b573" kindref="member">PaQa_WriteSilence</ref>(<sp/><ref refid="struct_pa_qa_recording__s" kindref="compound">PaQaRecording</ref><sp/>*recording,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numSamples<sp/>);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="audio__analyzer_8h_1a45471b2da58d5831059bda8c87628085" kindref="member">PaQa_RecordFreeze</ref>(<sp/><ref refid="struct_pa_qa_recording__s" kindref="compound">PaQaRecording</ref><sp/>*recording,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numSamples<sp/>);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="audio__analyzer_8h_1addffeae72a884cce43ade4621c9b23c3" kindref="member">PaQa_CorrelateSine</ref>(<sp/><ref refid="struct_pa_qa_recording__s" kindref="compound">PaQaRecording</ref><sp/>*recording,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="struct_pa_qa_sine_generator__s_1ae73569f3aa4212befb0fc87df74d6a7d" kindref="member">frequency</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>frameRate,</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>startFrame,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numSamples,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*phasePtr<sp/>);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="audio__analyzer_8h_1a8f61990e727c1eb1e278cce3b18b4375" kindref="member">PaQa_FindFirstMatch</ref>(<sp/><ref refid="struct_pa_qa_recording__s" kindref="compound">PaQaRecording</ref><sp/>*recording,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numSamples,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tolerance<sp/><sp/>);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="audio__analyzer_8h_1a134d28401b6cd71d28ed3a4291032a54" kindref="member">PaQa_MeasureSineAmplitudeBySlope</ref>(<sp/><ref refid="struct_pa_qa_recording__s" kindref="compound">PaQaRecording</ref><sp/>*recording,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="struct_pa_qa_sine_generator__s_1ae73569f3aa4212befb0fc87df74d6a7d" kindref="member">frequency</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>frameRate,</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>startFrame,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numFrames<sp/>);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="audio__analyzer_8h_1aca03218918e6dd68c79c6cc60bc21384" kindref="member">PaQa_MeasureRootMeanSquare</ref>(<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numFrames<sp/>);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="audio__analyzer_8h_1a36b44ac4b3ba2e3de200de15ee7a25ea" kindref="member">PaQa_CompareAmplitudes</ref>(<sp/><ref refid="struct_pa_qa_recording__s" kindref="compound">PaQaRecording</ref><sp/>*recording,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>startAt,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numSamples<sp/>);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="audio__analyzer_8h_1a6232297ca356c8753050d169966525b6" kindref="member">PaQa_AnalyseRecording</ref>(<sp/><ref refid="struct_pa_qa_recording__s" kindref="compound">PaQaRecording</ref><sp/>*recording,<sp/><ref refid="struct_pa_qa_test_tone__s" kindref="compound">PaQaTestTone</ref><sp/>*testTone,<sp/><ref refid="struct_pa_qa_analysis_result__s" kindref="compound">PaQaAnalysisResult</ref><sp/>*analysisResult<sp/>);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>_AUDIO_ANALYZER_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/audio_analyzer.h"/>
  </compounddef>
</doxygen>
