<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_module_manager_8cpp" kind="file" language="C++">
    <compoundname>ModuleManager.cpp</compoundname>
    <includes local="no">wx/dynarray.h</includes>
    <includes local="no">wx/dynlib.h</includes>
    <includes local="no">wx/list.h</includes>
    <includes local="no">wx/log.h</includes>
    <includes local="no">wx/msgdlg.h</includes>
    <includes local="no">wx/string.h</includes>
    <includes local="no">wx/filename.h</includes>
    <includes refid="_audacity_8h" local="yes">Audacity.h</includes>
    <includes refid="_audacity_app_8h" local="yes">AudacityApp.h</includes>
    <includes refid="_file_names_8h" local="yes">FileNames.h</includes>
    <includes refid="_internat_8h" local="yes">Internat.h</includes>
    <includes refid="_plugin_manager_8h" local="yes">PluginManager.h</includes>
    <includes refid="_script_command_relay_8h" local="yes">commands/ScriptCommandRelay.h</includes>
    <includes refid="_non_gui_thread_8h" local="no">NonGuiThread.h</includes>
    <includes refid="_plugin_interface_8h" local="yes">audacity/PluginInterface.h</includes>
    <includes refid="_prefs_8h" local="yes">Prefs.h</includes>
    <includes refid="_module_prefs_8h" local="yes">./prefs/ModulePrefs.h</includes>
    <includes refid="_module_manager_8h" local="yes">ModuleManager.h</includes>
    <includes refid="_multi_dialog_8h" local="yes">widgets/MultiDialog.h</includes>
    <includes local="no">wx/arrimpl.cpp</includes>
    <includes refid="_experimental_8h" local="yes">Experimental.h</includes>
    <incdepgraph>
      <node id="49158">
        <label>wx/dir.h</label>
      </node>
      <node id="49167">
        <label>wx/choice.h</label>
      </node>
      <node id="49199">
        <label>widgets/MultiDialog.h</label>
        <link refid="_multi_dialog_8h"/>
        <childnode refid="49166" relation="include">
        </childnode>
        <childnode refid="49169" relation="include">
        </childnode>
      </node>
      <node id="49197">
        <label>ModuleManager.h</label>
        <link refid="_module_manager_8h"/>
        <childnode refid="49148" relation="include">
        </childnode>
        <childnode refid="49179" relation="include">
        </childnode>
        <childnode refid="49198" relation="include">
        </childnode>
        <childnode refid="49188" relation="include">
        </childnode>
        <childnode refid="49177" relation="include">
        </childnode>
      </node>
      <node id="49195">
        <label>PrefsPanel.h</label>
        <link refid="_prefs_panel_8h"/>
        <childnode refid="49196" relation="include">
        </childnode>
        <childnode refid="49169" relation="include">
        </childnode>
      </node>
      <node id="49159">
        <label>wx/event.h</label>
      </node>
      <node id="49188">
        <label>audacity/ModuleInterface.h</label>
        <link refid="_module_interface_8h"/>
        <childnode refid="49181" relation="include">
        </childnode>
        <childnode refid="49182" relation="include">
        </childnode>
        <childnode refid="49189" relation="include">
        </childnode>
      </node>
      <node id="49157">
        <label>wx/cmdline.h</label>
      </node>
      <node id="49180">
        <label>audacity/EffectInterface.h</label>
        <link refid="_effect_interface_8h"/>
        <childnode refid="49181" relation="include">
        </childnode>
        <childnode refid="49182" relation="include">
        </childnode>
        <childnode refid="49183" relation="include">
        </childnode>
        <childnode refid="49184" relation="include">
        </childnode>
        <childnode refid="49186" relation="include">
        </childnode>
      </node>
      <node id="49174">
        <label>Internat.h</label>
        <link refid="_internat_8h"/>
        <childnode refid="49175" relation="include">
        </childnode>
        <childnode refid="49152" relation="include">
        </childnode>
        <childnode refid="49176" relation="include">
        </childnode>
      </node>
      <node id="49148">
        <label>wx/dynlib.h</label>
      </node>
      <node id="49170">
        <label>ondemand/ODTaskThread.h</label>
        <link refid="_o_d_task_thread_8h"/>
        <childnode refid="49171" relation="include">
        </childnode>
        <childnode refid="49154" relation="include">
        </childnode>
      </node>
      <node id="49183">
        <label>audacity/ConfigInterface.h</label>
        <link refid="_config_interface_8h"/>
        <childnode refid="49181" relation="include">
        </childnode>
      </node>
      <node id="49172">
        <label>Experimental.h</label>
        <link refid="_experimental_8h"/>
        <childnode refid="49166" relation="include">
        </childnode>
      </node>
      <node id="49164">
        <label>wx/timer.h</label>
      </node>
      <node id="49178">
        <label>wx/fileconf.h</label>
      </node>
      <node id="49179">
        <label>map</label>
      </node>
      <node id="49189">
        <label>audacity/PluginInterface.h</label>
        <link refid="_plugin_interface_8h"/>
        <childnode refid="49181" relation="include">
        </childnode>
        <childnode refid="49183" relation="include">
        </childnode>
        <childnode refid="49180" relation="include">
        </childnode>
        <childnode refid="49182" relation="include">
        </childnode>
        <childnode refid="49187" relation="include">
        </childnode>
        <childnode refid="49188" relation="include">
        </childnode>
      </node>
      <node id="49163">
        <label>wx/socket.h</label>
      </node>
      <node id="49182">
        <label>audacity/IdentInterface.h</label>
        <link refid="_ident_interface_8h"/>
        <childnode refid="49181" relation="include">
        </childnode>
      </node>
      <node id="49149">
        <label>wx/list.h</label>
      </node>
      <node id="49191">
        <label>NonGuiThread.h</label>
        <link refid="_non_gui_thread_8h"/>
      </node>
      <node id="49194">
        <label>./prefs/ModulePrefs.h</label>
        <link refid="_module_prefs_8h"/>
        <childnode refid="49166" relation="include">
        </childnode>
        <childnode refid="49169" relation="include">
        </childnode>
        <childnode refid="49195" relation="include">
        </childnode>
      </node>
      <node id="49190">
        <label>commands/ScriptCommandRelay.h</label>
        <link refid="_script_command_relay_8h"/>
        <childnode refid="49154" relation="include">
        </childnode>
      </node>
      <node id="49166">
        <label>wx/defs.h</label>
      </node>
      <node id="49169">
        <label>wx/window.h</label>
      </node>
      <node id="49161">
        <label>wx/intl.h</label>
      </node>
      <node id="49181">
        <label>audacity/Types.h</label>
        <link refid="include_2audacity_2_types_8h"/>
        <childnode refid="49152" relation="include">
        </childnode>
        <childnode refid="49175" relation="include">
        </childnode>
      </node>
      <node id="49177">
        <label>PluginManager.h</label>
        <link refid="_plugin_manager_8h"/>
        <childnode refid="49166" relation="include">
        </childnode>
        <childnode refid="49147" relation="include">
        </childnode>
        <childnode refid="49178" relation="include">
        </childnode>
        <childnode refid="49152" relation="include">
        </childnode>
        <childnode refid="49179" relation="include">
        </childnode>
        <childnode refid="49180" relation="include">
        </childnode>
        <childnode refid="49187" relation="include">
        </childnode>
        <childnode refid="49188" relation="include">
        </childnode>
        <childnode refid="49189" relation="include">
        </childnode>
      </node>
      <node id="49186">
        <label>wx/dialog.h</label>
      </node>
      <node id="49153">
        <label>wx/filename.h</label>
      </node>
      <node id="49184">
        <label>audacity/EffectAutomationParameters.h</label>
        <link refid="_effect_automation_parameters_8h"/>
        <childnode refid="49185" relation="include">
        </childnode>
        <childnode refid="49157" relation="include">
        </childnode>
        <childnode refid="49178" relation="include">
        </childnode>
        <childnode refid="49161" relation="include">
        </childnode>
      </node>
      <node id="49192">
        <label>Prefs.h</label>
        <link refid="_prefs_8h"/>
        <childnode refid="49154" relation="include">
        </childnode>
        <childnode refid="49193" relation="include">
        </childnode>
        <childnode refid="49178" relation="include">
        </childnode>
      </node>
      <node id="49154">
        <label>Audacity.h</label>
        <link refid="_audacity_8h"/>
      </node>
      <node id="49168">
        <label>wx/grid.h</label>
      </node>
      <node id="49198">
        <label>vector</label>
      </node>
      <node id="49147">
        <label>wx/dynarray.h</label>
      </node>
      <node id="49187">
        <label>audacity/ImporterInterface.h</label>
        <link refid="_importer_interface_8h"/>
        <childnode refid="49181" relation="include">
        </childnode>
        <childnode refid="49183" relation="include">
        </childnode>
        <childnode refid="49182" relation="include">
        </childnode>
      </node>
      <node id="49152">
        <label>wx/string.h</label>
      </node>
      <node id="49155">
        <label>AudacityApp.h</label>
        <link refid="_audacity_app_8h"/>
        <childnode refid="49154" relation="include">
        </childnode>
        <childnode refid="49156" relation="include">
        </childnode>
        <childnode refid="49157" relation="include">
        </childnode>
        <childnode refid="49158" relation="include">
        </childnode>
        <childnode refid="49159" relation="include">
        </childnode>
        <childnode refid="49160" relation="include">
        </childnode>
        <childnode refid="49161" relation="include">
        </childnode>
        <childnode refid="49162" relation="include">
        </childnode>
        <childnode refid="49150" relation="include">
        </childnode>
        <childnode refid="49163" relation="include">
        </childnode>
        <childnode refid="49164" relation="include">
        </childnode>
        <childnode refid="49165" relation="include">
        </childnode>
        <childnode refid="49170" relation="include">
        </childnode>
        <childnode refid="49172" relation="include">
        </childnode>
      </node>
      <node id="49151">
        <label>wx/msgdlg.h</label>
      </node>
      <node id="49150">
        <label>wx/log.h</label>
      </node>
      <node id="49175">
        <label>wx/arrstr.h</label>
      </node>
      <node id="49193">
        <label>wx/config.h</label>
      </node>
      <node id="49162">
        <label>wx/snglinst.h</label>
      </node>
      <node id="49146">
        <label>C:/_dev/OpenU/Audacity/audacity/src/ModuleManager.cpp</label>
        <link refid="ModuleManager.cpp"/>
        <childnode refid="49147" relation="include">
        </childnode>
        <childnode refid="49148" relation="include">
        </childnode>
        <childnode refid="49149" relation="include">
        </childnode>
        <childnode refid="49150" relation="include">
        </childnode>
        <childnode refid="49151" relation="include">
        </childnode>
        <childnode refid="49152" relation="include">
        </childnode>
        <childnode refid="49153" relation="include">
        </childnode>
        <childnode refid="49154" relation="include">
        </childnode>
        <childnode refid="49155" relation="include">
        </childnode>
        <childnode refid="49173" relation="include">
        </childnode>
        <childnode refid="49174" relation="include">
        </childnode>
        <childnode refid="49177" relation="include">
        </childnode>
        <childnode refid="49190" relation="include">
        </childnode>
        <childnode refid="49191" relation="include">
        </childnode>
        <childnode refid="49189" relation="include">
        </childnode>
        <childnode refid="49192" relation="include">
        </childnode>
        <childnode refid="49194" relation="include">
        </childnode>
        <childnode refid="49197" relation="include">
        </childnode>
        <childnode refid="49199" relation="include">
        </childnode>
        <childnode refid="49200" relation="include">
        </childnode>
        <childnode refid="49172" relation="include">
        </childnode>
      </node>
      <node id="49171">
        <label>wx/thread.h</label>
      </node>
      <node id="49173">
        <label>FileNames.h</label>
        <link refid="_file_names_8h"/>
        <childnode refid="49152" relation="include">
        </childnode>
        <childnode refid="49154" relation="include">
        </childnode>
      </node>
      <node id="49165">
        <label>widgets/FileHistory.h</label>
        <link refid="_file_history_8h"/>
        <childnode refid="49166" relation="include">
        </childnode>
        <childnode refid="49167" relation="include">
        </childnode>
        <childnode refid="49147" relation="include">
        </childnode>
        <childnode refid="49159" relation="include">
        </childnode>
        <childnode refid="49168" relation="include">
        </childnode>
        <childnode refid="49152" relation="include">
        </childnode>
        <childnode refid="49169" relation="include">
        </childnode>
      </node>
      <node id="49156">
        <label>wx/app.h</label>
        <link refid="app_8h"/>
      </node>
      <node id="49176">
        <label>wx/longlong.h</label>
      </node>
      <node id="49196">
        <label>wx/panel.h</label>
      </node>
      <node id="49185">
        <label>locale.h</label>
      </node>
      <node id="49160">
        <label>wx/docview.h</label>
      </node>
      <node id="49200">
        <label>wx/arrimpl.cpp</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="_module_manager_8cpp_1a3cbb170a97bf73db60c140a201ce602a" prot="public" static="no">
        <name>initFnName</name>
        <initializer>&quot;ExtensionModuleInit&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/ModuleManager.cpp" line="52" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/ModuleManager.cpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_module_manager_8cpp_1a9eafc46e275373441dd7b1efedefd35f" prot="public" static="no">
        <name>versionFnName</name>
        <initializer>&quot;GetVersionString&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/ModuleManager.cpp" line="53" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/ModuleManager.cpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_module_manager_8cpp_1aa368890b4ec12db4b6e69b11b0a244d7" prot="public" static="no">
        <name>scriptFnName</name>
        <initializer>&quot;RegScriptServerFunc&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/ModuleManager.cpp" line="54" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/ModuleManager.cpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_module_manager_8cpp_1a99541d973a1f886d437b12e4d62c7889" prot="public" static="no">
        <name>mainPanelFnName</name>
        <initializer>&quot;MainPanelFunc&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/ModuleManager.cpp" line="55" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/ModuleManager.cpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_module_manager_8cpp_1a9014c08a57dd154c84a454bcfe331068" prot="public" static="no">
        <type>wxWindow *</type>
        <definition>typedef wxWindow* pwxWindow</definition>
        <argsstring></argsstring>
        <name>pwxWindow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/ModuleManager.cpp" line="57" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/ModuleManager.cpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_module_manager_8cpp_1a8be4cbcb5d9cc33c453b8a44fbff0c39" prot="public" static="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref>(*</type>
        <definition>typedef int(* tModuleInit) (int)</definition>
        <argsstring>)(int)</argsstring>
        <name>tModuleInit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/ModuleManager.cpp" line="58" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/ModuleManager.cpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_module_manager_8cpp_1af2660e1db80720fceb206cb7ee43af43" prot="public" static="no">
        <type>wxChar *(*</type>
        <definition>typedef wxChar*(* tVersionFn) ()</definition>
        <argsstring>)()</argsstring>
        <name>tVersionFn</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/ModuleManager.cpp" line="60" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/ModuleManager.cpp" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="_module_manager_8cpp_1aaaf7cf5c813b0f5e689ae5aada537006" prot="public" static="no">
        <type><ref refid="_module_manager_8cpp_1a9014c08a57dd154c84a454bcfe331068" kindref="member">pwxWindow</ref>(*</type>
        <definition>typedef pwxWindow(* tPanelFn) (int)</definition>
        <argsstring>)(int)</argsstring>
        <name>tPanelFn</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/ModuleManager.cpp" line="61" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/ModuleManager.cpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_module_manager_8cpp_1aada17f7a6cc9697d3350e238c6ebe46e" prot="public" static="yes" mutable="no">
        <type><ref refid="_module_manager_8cpp_1aaaf7cf5c813b0f5e689ae5aada537006" kindref="member">tPanelFn</ref></type>
        <definition>tPanelFn pPanelHijack</definition>
        <argsstring></argsstring>
        <name>pPanelHijack</name>
        <initializer>=<ref refid="px__mixer_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/ModuleManager.cpp" line="65" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/ModuleManager.cpp" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_module_manager_8cpp_1acd1bd1a3ffbe239e10cdcd0eef90af18" prot="public" static="yes" mutable="no">
        <type><ref refid="_script_command_relay_8h_1a7811294d61067ab0506c97b6d70b4019" kindref="member">tpRegScriptServerFunc</ref></type>
        <definition>tpRegScriptServerFunc scriptFn</definition>
        <argsstring></argsstring>
        <name>scriptFn</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/ModuleManager.cpp" line="89" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/ModuleManager.cpp" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_module_manager_8cpp_1a97b5f079deed8e5121b8cc7c37a0108b" prot="public" static="yes" mutable="no">
        <type>wxArrayPtrVoid *</type>
        <definition>wxArrayPtrVoid* pBuiltinModuleList</definition>
        <argsstring></argsstring>
        <name>pBuiltinModuleList</name>
        <initializer>= <ref refid="px__mixer_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/ModuleManager.cpp" line="186" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/ModuleManager.cpp" bodystart="186" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_module_manager_8cpp_1a3c00e7ff11f33ab6c65d46183a51aae2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>wxWindow *</type>
        <definition>wxWindow* MakeHijackPanel</definition>
        <argsstring>()</argsstring>
        <name>MakeHijackPanel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>IF pPanelHijack has been found in a module DLL THEN when this function is called we&apos;ll go and create that window instead of the normal one. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/ModuleManager.cpp" line="80" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/ModuleManager.cpp" bodystart="80" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="_module_manager_8cpp_1a8cc679e8f74a18c47f06eea162a36596" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void RegisterBuiltinModule</definition>
        <argsstring>(ModuleMain moduleMain)</argsstring>
        <name>RegisterBuiltinModule</name>
        <param>
          <type><ref refid="_module_interface_8h_1a203a5e6d59345b566f77fc306253ce62" kindref="member">ModuleMain</ref></type>
          <declname>moduleMain</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/ModuleManager.cpp" line="187" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/ModuleManager.cpp" bodystart="187" bodyend="197"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Based on LoadLadspa, this code loads pluggable Audacity extension modules. It also has the code to (a) invoke a script server and (b) invoke a function returning a replacement window, i.e. an alternative to the usual interface, for Audacity. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>Audacity:<sp/>A<sp/>Digital<sp/>Audio<sp/>Editor</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>ModuleManager.cpp</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>Dominic<sp/>Mazzoni</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/>James<sp/>Crook</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight></codeline>
<codeline lineno="11"><highlight class="comment">*******************************************************************/</highlight><highlight class="comment">/*******************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/dynarray.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/dynlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/list.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/log.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/msgdlg.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/filename.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_audacity_8h" kindref="compound">Audacity.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_audacity_app_8h" kindref="compound">AudacityApp.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_file_names_8h" kindref="compound">FileNames.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_internat_8h" kindref="compound">Internat.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_plugin_manager_8h" kindref="compound">PluginManager.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_script_command_relay_8h" kindref="compound">commands/ScriptCommandRelay.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_non_gui_thread_8h" kindref="compound">NonGuiThread.h</ref>&gt;</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>header<sp/>from<sp/>libwidgetextra</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_plugin_interface_8h" kindref="compound">audacity/PluginInterface.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_MODULE_PREFS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_prefs_8h" kindref="compound">Prefs.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_module_prefs_8h" kindref="compound">./prefs/ModulePrefs.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_module_manager_8h" kindref="compound">ModuleManager.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_multi_dialog_8h" kindref="compound">widgets/MultiDialog.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/arrimpl.cpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_experimental_8h" kindref="compound">Experimental.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="_module_manager_8cpp_1a3cbb170a97bf73db60c140a201ce602a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>initFnName<sp/><sp/><sp/><sp/><sp/><sp/>&quot;ExtensionModuleInit&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="_module_manager_8cpp_1a9eafc46e275373441dd7b1efedefd35f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>versionFnName<sp/><sp/><sp/>&quot;GetVersionString&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="_module_manager_8cpp_1aa368890b4ec12db4b6e69b11b0a244d7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>scriptFnName<sp/><sp/><sp/><sp/>&quot;RegScriptServerFunc&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="_module_manager_8cpp_1a99541d973a1f886d437b12e4d62c7889" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>mainPanelFnName<sp/>&quot;MainPanelFunc&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="_module_manager_8cpp_1a9014c08a57dd154c84a454bcfe331068" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>wxWindow<sp/>*<sp/><ref refid="_module_manager_8cpp_1a9014c08a57dd154c84a454bcfe331068" kindref="member">pwxWindow</ref>;</highlight></codeline>
<codeline lineno="58" refid="_module_manager_8cpp_1a8be4cbcb5d9cc33c453b8a44fbff0c39" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref><sp/>(*<ref refid="_module_manager_8cpp_1a8be4cbcb5d9cc33c453b8a44fbff0c39" kindref="member">tModuleInit</ref>)(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//typedef<sp/>wxString<sp/>(*tVersionFn)();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="_module_manager_8cpp_1af2660e1db80720fceb206cb7ee43af43" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>wxChar<sp/>*<sp/>(*tVersionFn)();</highlight></codeline>
<codeline lineno="61" refid="_module_manager_8cpp_1aaaf7cf5c813b0f5e689ae5aada537006" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="_module_manager_8cpp_1a9014c08a57dd154c84a454bcfe331068" kindref="member">pwxWindow</ref><sp/>(*<ref refid="_module_manager_8cpp_1aaaf7cf5c813b0f5e689ae5aada537006" kindref="member">tPanelFn</ref>)(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>variable<sp/>will<sp/>hold<sp/>the<sp/>address<sp/>of<sp/>a<sp/>subroutine<sp/>in<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//<sp/>a<sp/>DLL<sp/>that<sp/>can<sp/>hijack<sp/>the<sp/>normal<sp/>panel.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="_module_manager_8cpp_1aaaf7cf5c813b0f5e689ae5aada537006" kindref="member">tPanelFn</ref><sp/>pPanelHijack=<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Next<sp/>two<sp/>commented<sp/>out<sp/>lines<sp/>are<sp/>handy<sp/>when<sp/>investigating</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//<sp/>strange<sp/>DLL<sp/>behaviour.<sp/><sp/>Instead<sp/>of<sp/>dynamic<sp/>linking,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">//<sp/>link<sp/>the<sp/>library<sp/>which<sp/>has<sp/>the<sp/>replacement<sp/>panel<sp/>statically.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Give<sp/>the<sp/>address<sp/>of<sp/>the<sp/>routine<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>a<sp/>great<sp/>help<sp/>in<sp/>identifying<sp/>missing<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">//<sp/>symbols<sp/>which<sp/>otherwise<sp/>cause<sp/>a<sp/>dll<sp/>to<sp/>unload<sp/>after<sp/>loading</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">//<sp/>without<sp/>an<sp/>explanation<sp/>as<sp/>to<sp/>why!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">//extern<sp/>wxWindow<sp/>*<sp/>MainPanelFunc(<sp/>int<sp/>i<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//tPanelFn<sp/>pPanelHijack=&amp;MainPanelFunc;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="_module_manager_8h_1a3c00e7ff11f33ab6c65d46183a51aae2" refkind="member"><highlight class="normal">wxWindow<sp/>*<sp/><ref refid="_module_manager_8cpp_1a3c00e7ff11f33ab6c65d46183a51aae2" kindref="member">MakeHijackPanel</ref>()</highlight></codeline>
<codeline lineno="81"><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>pPanelHijack<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pPanelHijack(0);</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>variable<sp/>will<sp/>hold<sp/>the<sp/>address<sp/>of<sp/>a<sp/>subroutine<sp/>in<sp/>a<sp/>DLL<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">//<sp/>starts<sp/>a<sp/>thread<sp/>and<sp/>reads<sp/>script<sp/>commands.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="_script_command_relay_8h_1a7811294d61067ab0506c97b6d70b4019" kindref="member">tpRegScriptServerFunc</ref><sp/>scriptFn;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="class_module_1aadbe3841de08baf7fdb0cbc79a1456e3" refkind="member"><highlight class="normal"><ref refid="class_module_1aadbe3841de08baf7fdb0cbc79a1456e3" kindref="member">Module::Module</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;<sp/><ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>)</highlight></codeline>
<codeline lineno="92"><highlight class="normal">{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/>mName<sp/>=<sp/><ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/>mLib<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>wxDynamicLibrary();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/>mDispatch<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="class_module_1a7c9d9c096786d127590fdd8aa2b7d681" refkind="member"><highlight class="normal"><ref refid="class_module_1a7c9d9c096786d127590fdd8aa2b7d681" kindref="member">Module::~Module</ref>()</highlight></codeline>
<codeline lineno="99"><highlight class="normal">{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>mLib;</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="class_module_1aa3f113deceb672bd13b9c7f8c2476c0f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_module_1aa3f113deceb672bd13b9c7f8c2476c0f" kindref="member">Module::Load</ref>()</highlight></codeline>
<codeline lineno="104"><highlight class="normal">{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mLib-&gt;IsLoaded())<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mDispatch)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mLib-&gt;Load(mName,<sp/>wxDL_LAZY))<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>version<sp/>string<sp/>matches.<sp/><sp/>(For<sp/>now,<sp/>they<sp/>must<sp/>match<sp/>exactly)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><ref refid="_module_manager_8cpp_1af2660e1db80720fceb206cb7ee43af43" kindref="member">tVersionFn</ref><sp/>versionFn<sp/>=<sp/>(<ref refid="_module_manager_8cpp_1af2660e1db80720fceb206cb7ee43af43" kindref="member">tVersionFn</ref>)(mLib-&gt;GetSymbol(wxT(<ref refid="_module_manager_8cpp_1a9eafc46e275373441dd7b1efedefd35f" kindref="member">versionFnName</ref>)));</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(versionFn<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>){</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/>ShortName<sp/>=<sp/>wxFileName(<sp/>mName<sp/>).GetName();</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxMessageBox(wxString::Format(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;The<sp/>module<sp/>%s<sp/>does<sp/>not<sp/>provide<sp/>a<sp/>version<sp/>string.\nIt<sp/>will<sp/>not<sp/>be<sp/>loaded.&quot;</highlight><highlight class="normal">),<sp/>ShortName.c_str()),<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Module<sp/>Unsuitable&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxLogMessage(wxString::Format(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;The<sp/>module<sp/>%s<sp/>does<sp/>not<sp/>provide<sp/>a<sp/>version<sp/>string.<sp/><sp/>It<sp/>will<sp/>not<sp/>be<sp/>loaded.&quot;</highlight><highlight class="normal">),<sp/>mName.c_str()));</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mLib-&gt;Unload();</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>moduleVersion<sp/>=<sp/>versionFn();</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!moduleVersion.IsSameAs(<ref refid="_audacity_8h_1a06785256c5408ee5ae69de8c7dfc57a5" kindref="member">AUDACITY_VERSION_STRING</ref>))<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/>ShortName<sp/>=<sp/>wxFileName(<sp/>mName<sp/>).GetName();</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxMessageBox(wxString::Format(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;The<sp/>module<sp/>%s<sp/>is<sp/>matched<sp/>with<sp/>Audacity<sp/>version<sp/>%s.\n\nIt<sp/>will<sp/>not<sp/>be<sp/>loaded.&quot;</highlight><highlight class="normal">),<sp/>ShortName.c_str(),<sp/>moduleVersion.c_str()),<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Module<sp/>Unsuitable&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxLogMessage(wxString::Format(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;The<sp/>module<sp/>%s<sp/>is<sp/>matched<sp/>with<sp/>Audacity<sp/>version<sp/>%s.<sp/><sp/>It<sp/>will<sp/>not<sp/>be<sp/>loaded.&quot;</highlight><highlight class="normal">),<sp/>mName.c_str(),<sp/>moduleVersion.c_str()));</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mLib-&gt;Unload();</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/>mDispatch<sp/>=<sp/>(<ref refid="_module_manager_8h_1aa2300337789be9d47ead49d5e1ffa3b3" kindref="member">fnModuleDispatch</ref>)<sp/>mLib-&gt;GetSymbol(wxT(<ref refid="_module_manager_8h_1a570532a63453debdee41ef38b152eb4f" kindref="member">ModuleDispatchName</ref>));</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mDispatch)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Module<sp/>does<sp/>not<sp/>provide<sp/>a<sp/>dispatch<sp/>function...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>That<sp/>can<sp/>be<sp/>OK,<sp/>as<sp/>long<sp/>as<sp/>we<sp/>never<sp/>try<sp/>to<sp/>call<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>However<sp/>if<sp/>we<sp/>do<sp/>have<sp/>it<sp/>and<sp/>it<sp/>does<sp/>not<sp/>work,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>then<sp/>the<sp/>module<sp/>is<sp/>bad.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>res<sp/>=<sp/>((mDispatch(<ref refid="_scripter_callback_8cpp_1a9f2f762f76ca014f9381eeabccdef359a1bf5c73b59c03d6544583932fe570e12" kindref="member">ModuleInitialize</ref>))!=0);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/>mDispatch<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="151"><highlight class="normal">}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153" refid="class_module_1af11472ff1fa98836eed501b51c01fcbc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_module_1af11472ff1fa98836eed501b51c01fcbc" kindref="member">Module::Unload</ref>()</highlight></codeline>
<codeline lineno="154"><highlight class="normal">{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mLib-&gt;IsLoaded())<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mDispatch(<ref refid="_scripter_callback_8cpp_1a9f2f762f76ca014f9381eeabccdef359ae47bfc7f94e66a1c0f638ca5665259dc" kindref="member">ModuleTerminate</ref>);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/>mLib-&gt;Unload();</highlight></codeline>
<codeline lineno="160"><highlight class="normal">}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162" refid="class_module_1ac8fbea5e6664d2e30846ceeb2d0bc0d9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_module_1ac8fbea5e6664d2e30846ceeb2d0bc0d9" kindref="member">Module::Dispatch</ref>(<ref refid="_scripter_callback_8cpp_1a9f2f762f76ca014f9381eeabccdef359" kindref="member">ModuleDispatchTypes</ref><sp/><ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref>)</highlight></codeline>
<codeline lineno="163"><highlight class="normal">{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mLib-&gt;IsLoaded())</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>mDispatch<sp/>!=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mDispatch(type);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171" refid="class_module_1a65f9fbaffd0e23f6e27c20ec1a812dc4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/><ref refid="class_module_1a65f9fbaffd0e23f6e27c20ec1a812dc4" kindref="member">Module::GetSymbol</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>)</highlight></codeline>
<codeline lineno="172"><highlight class="normal">{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mLib-&gt;GetSymbol(name);</highlight></codeline>
<codeline lineno="174"><highlight class="normal">}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ModuleManager</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>one<sp/>and<sp/>only<sp/>ModuleManager</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><ref refid="class_module_manager" kindref="compound">ModuleManager</ref><sp/>*ModuleManager::mInstance<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Provide<sp/>builtin<sp/>modules<sp/>a<sp/>means<sp/>to<sp/>identify<sp/>themselves</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>wxArrayPtrVoid<sp/>*pBuiltinModuleList<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="187" refid="_module_manager_8cpp_1a8cc679e8f74a18c47f06eea162a36596" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_module_manager_8cpp_1a8cc679e8f74a18c47f06eea162a36596" kindref="member">RegisterBuiltinModule</ref>(<ref refid="_module_interface_8h_1a203a5e6d59345b566f77fc306253ce62" kindref="member">ModuleMain</ref><sp/>moduleMain)</highlight></codeline>
<codeline lineno="188"><highlight class="normal">{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pBuiltinModuleList<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pBuiltinModuleList<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>wxArrayPtrVoid;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/>pBuiltinModuleList-&gt;Add((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)moduleMain);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Creation/Destruction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="comment">//<sp/>----------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203" refid="class_module_manager_1a2940b3dd370b9c454c7cc600c540bb0e" refkind="member"><highlight class="normal"><ref refid="class_module_manager_1a2940b3dd370b9c454c7cc600c540bb0e" kindref="member">ModuleManager::ModuleManager</ref>()</highlight></codeline>
<codeline lineno="204"><highlight class="normal">{</highlight></codeline>
<codeline lineno="205"><highlight class="normal">}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207" refid="class_module_manager_1a4f7e83d51dcbc461d2514f44d21aacb4" refkind="member"><highlight class="normal"><ref refid="class_module_manager_1a4f7e83d51dcbc461d2514f44d21aacb4" kindref="member">ModuleManager::~ModuleManager</ref>()</highlight></codeline>
<codeline lineno="208"><highlight class="normal">{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cnt<sp/>=<sp/>mModules.GetCount();</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ndx<sp/>=<sp/>0;<sp/>ndx<sp/>&lt;<sp/>cnt;<sp/>ndx++)<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>(<ref refid="class_module" kindref="compound">Module</ref><sp/>*)<sp/>mModules[ndx];</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/>mModules.Clear();</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/>ModuleMap::iterator<sp/>iter<sp/>=<sp/>mDynModules.begin();</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(iter<sp/>!=<sp/>mDynModules.end())</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>UnloadModule(iter-&gt;second);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mDynModules.erase(iter-&gt;first);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>iter<sp/>=<sp/>mDynModules.begin();</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pBuiltinModuleList<sp/>!=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pBuiltinModuleList;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal">}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="comment">//<sp/>static<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233" refid="class_module_manager_1aa24d1307fc562d497706bcd9409a99a3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_module_manager_1aa24d1307fc562d497706bcd9409a99a3" kindref="member">ModuleManager::Initialize</ref>(<ref refid="class_command_handler" kindref="compound">CommandHandler</ref><sp/>&amp;cmdHandler)</highlight></codeline>
<codeline lineno="234"><highlight class="normal">{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/>wxArrayString<sp/>audacityPathList<sp/>=<sp/><ref refid="_audacity_app_8h_1a1739dbd936ddeaedf4722b5f0b331976" kindref="member">wxGetApp</ref>().<ref refid="class_audacity_app_1a04d9d13de407ee9c61e9e74c8bdd9d38" kindref="member">audacityPathList</ref>;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/>wxArrayString<sp/>pathList;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/>wxArrayString<sp/><ref refid="namespacelv2docgen_1a2be4ec33b98834ddad6dbf8e8779cfb9" kindref="member">files</ref>;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>pathVar;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Code<sp/>from<sp/>LoadLadspa<sp/>that<sp/>might<sp/>be<sp/>useful<sp/>in<sp/>load<sp/>modules.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/>pathVar<sp/>=<sp/>wxGetenv(wxT(</highlight><highlight class="stringliteral">&quot;AUDACITY_MODULES_PATH&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pathVar<sp/>!=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_audacity_app_8h_1a1739dbd936ddeaedf4722b5f0b331976" kindref="member">wxGetApp</ref>().<ref refid="class_audacity_app_1a7fa907efc7345693ae4a81efd54149d9" kindref="member">AddMultiPathsToPathList</ref>(pathVar,<sp/>pathList);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>audacityPathList.GetCount();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/><ref refid="structprefix" kindref="compound">prefix</ref><sp/>=<sp/>audacityPathList[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>+<sp/>wxFILE_SEP_PATH;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_audacity_app_8h_1a1739dbd936ddeaedf4722b5f0b331976" kindref="member">wxGetApp</ref>().<ref refid="class_audacity_app_1a051affe029130ea2d5e54460e4bc9f96" kindref="member">AddUniquePathToPathList</ref>(prefix<sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;modules&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathList);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#if<sp/>defined(__WXMSW__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><ref refid="_audacity_app_8h_1a1739dbd936ddeaedf4722b5f0b331976" kindref="member">wxGetApp</ref>().<ref refid="class_audacity_app_1a491bdb4d064ffc5392375e8bdf0442c2" kindref="member">FindFilesInPathList</ref>(wxT(</highlight><highlight class="stringliteral">&quot;*.dll&quot;</highlight><highlight class="normal">),<sp/>pathList,<sp/>files);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><ref refid="_audacity_app_8h_1a1739dbd936ddeaedf4722b5f0b331976" kindref="member">wxGetApp</ref>().<ref refid="class_audacity_app_1a491bdb4d064ffc5392375e8bdf0442c2" kindref="member">FindFilesInPathList</ref>(wxT(</highlight><highlight class="stringliteral">&quot;*.so&quot;</highlight><highlight class="normal">),<sp/>pathList,<sp/>files);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>saveOldCWD<sp/>=<sp/><ref refid="filefn_8cpp_1ab0cc6ceca11d23f61cba353c01eeac06" kindref="member">::wxGetCwd</ref>();</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>files.GetCount();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>As<sp/>a<sp/>courtesy<sp/>to<sp/>some<sp/>modules<sp/>that<sp/>might<sp/>be<sp/>bridges<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>open<sp/>other<sp/>modules,<sp/>we<sp/>set<sp/>the<sp/>current<sp/>working</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>directory<sp/>to<sp/>be<sp/>the<sp/>module&apos;s<sp/>directory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/><ref refid="structprefix" kindref="compound">prefix</ref><sp/>=<sp/><ref refid="filefn_8cpp_1ac51030bd42f56198d4cc482ace51dbb6" kindref="member">::wxPathOnly</ref>(files[i]);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="filefn_8cpp_1a956c15a465191f8a8014c81410379272" kindref="member">::wxSetWorkingDirectory</ref>(prefix);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_MODULE_PREFS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>iModuleStatus<sp/>=<sp/><ref refid="class_module_prefs_1a1edb6a0f9d8f50689acbbebab4ac51ab" kindref="member">ModulePrefs::GetModuleStatus</ref>(<sp/>files[i]<sp/>);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>iModuleStatus<sp/>==<sp/><ref refid="_module_prefs_8h_1a91b717cdc34dd7316e4c43e9f26287c4a4fcd34b805812a22b7aa7ead3f70d193" kindref="member">kModuleDisabled</ref><sp/>)</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>iModuleStatus<sp/>==<sp/><ref refid="_module_prefs_8h_1a91b717cdc34dd7316e4c43e9f26287c4a79680a5a0990752619928a86d6f0fa76" kindref="member">kModuleFailed</ref><sp/>)</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>New<sp/>module?<sp/><sp/>You<sp/>have<sp/>to<sp/>go<sp/>and<sp/>explicitly<sp/>enable<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>iModuleStatus<sp/>==<sp/><ref refid="_module_prefs_8h_1a91b717cdc34dd7316e4c43e9f26287c4a79e2885fc89daf0d0a6114d866b503c8" kindref="member">kModuleNew</ref><sp/>){</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>To<sp/>ensure<sp/>it<sp/>is<sp/>noted<sp/>in<sp/>config<sp/>file<sp/>and<sp/>so</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>appears<sp/>on<sp/>modules<sp/>page.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_prefs_1ab359f853c3fa54486457a610252cc6a9" kindref="member">ModulePrefs::SetModuleStatus</ref>(<sp/>files[i],<sp/><ref refid="_module_prefs_8h_1a91b717cdc34dd7316e4c43e9f26287c4a79e2885fc89daf0d0a6114d866b503c8" kindref="member">kModuleNew</ref>);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>iModuleStatus<sp/>==<sp/><ref refid="_module_prefs_8h_1a91b717cdc34dd7316e4c43e9f26287c4a6f9fe6769ffff7176cfe52c99c60e16a" kindref="member">kModuleAsk</ref><sp/>)</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>JKC:<sp/>I<sp/>don&apos;t<sp/>like<sp/>prompting<sp/>for<sp/>the<sp/>plug-ins<sp/>individually</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>I<sp/>think<sp/>it<sp/>would<sp/>be<sp/>better<sp/>to<sp/>show<sp/>the<sp/>module<sp/>prefs<sp/>page,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>let<sp/>the<sp/>user<sp/>decide<sp/>for<sp/>each<sp/>one.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/>ShortName<sp/>=<sp/>wxFileName(<sp/>files[i]<sp/>).GetName();</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/>msg;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg.Printf(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Module<sp/>\&quot;%s\&quot;<sp/>found.&quot;</highlight><highlight class="normal">),<sp/>ShortName.c_str());</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg<sp/>+=<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;\n\nOnly<sp/>use<sp/>modules<sp/>from<sp/>trusted<sp/>sources&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxChar<sp/>*<ref refid="winmain_8cpp_1aa4250fecc19d9977f24b66fdac73f301" kindref="member">buttons</ref>[]<sp/>=<sp/>{<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Yes&quot;</highlight><highlight class="normal">),<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;No&quot;</highlight><highlight class="normal">),<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>};<sp/><sp/></highlight><highlight class="comment">//<sp/>could<sp/>add<sp/>a<sp/>button<sp/>here<sp/>for<sp/>&apos;yes<sp/>and<sp/>remember<sp/>that&apos;,<sp/>and<sp/>put<sp/>it<sp/>into<sp/>the<sp/>cfg<sp/>file.<sp/><sp/>Needs<sp/>more<sp/>thought.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacelv2specgen_1a7dac92a6e76f9cbfb25e902b88b09867" kindref="member">action</ref>;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>action<sp/>=<sp/><ref refid="_multi_dialog_8cpp_1a33ff195faf61ce7528a8403b10fcdaa1" kindref="member">ShowMultiDialog</ref>(msg,<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Audacity<sp/>Module<sp/>Loader&quot;</highlight><highlight class="normal">),<sp/>buttons,<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Try<sp/>and<sp/>load<sp/>this<sp/>module?&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_MODULE_PREFS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>we&apos;re<sp/>not<sp/>prompting<sp/>always,<sp/>accept<sp/>the<sp/>answer<sp/>permanantly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>iModuleStatus<sp/>==<sp/><ref refid="_module_prefs_8h_1a91b717cdc34dd7316e4c43e9f26287c4a79e2885fc89daf0d0a6114d866b503c8" kindref="member">kModuleNew</ref><sp/>){</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iModuleStatus<sp/>=<sp/>(action==1)?<ref refid="_module_prefs_8h_1a91b717cdc34dd7316e4c43e9f26287c4a4fcd34b805812a22b7aa7ead3f70d193" kindref="member">kModuleDisabled</ref><sp/>:<sp/><ref refid="_module_prefs_8h_1a91b717cdc34dd7316e4c43e9f26287c4ae41679313138840b4699e7837f6366f2" kindref="member">kModuleEnabled</ref>;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_prefs_1ab359f853c3fa54486457a610252cc6a9" kindref="member">ModulePrefs::SetModuleStatus</ref>(<sp/>files[i],<sp/>iModuleStatus<sp/>);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(action<sp/>==<sp/>1){<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;No&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_MODULE_PREFS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Before<sp/>attempting<sp/>to<sp/>load,<sp/>we<sp/>set<sp/>the<sp/>state<sp/>to<sp/>bad.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>That<sp/>way,<sp/>if<sp/>we<sp/>crash,<sp/>we<sp/>won&apos;t<sp/>try<sp/>again.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_prefs_1ab359f853c3fa54486457a610252cc6a9" kindref="member">ModulePrefs::SetModuleStatus</ref>(<sp/>files[i],<sp/><ref refid="_module_prefs_8h_1a91b717cdc34dd7316e4c43e9f26287c4a79680a5a0990752619928a86d6f0fa76" kindref="member">kModuleFailed</ref><sp/>);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module" kindref="compound">Module</ref><sp/>*module<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_module_1aadbe3841de08baf7fdb0cbc79a1456e3" kindref="member">Module</ref>(files[i]);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(module-&gt;<ref refid="class_module_1aa3f113deceb672bd13b9c7f8c2476c0f" kindref="member">Load</ref>())<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>will<sp/>get<sp/>rejected<sp/>if<sp/>there<sp/><sp/>are<sp/>version<sp/>problems</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Get().mModules.Add(module);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We&apos;ve<sp/>loaded<sp/>and<sp/>initialised<sp/>OK.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>So<sp/>look<sp/>for<sp/>special<sp/>case<sp/>functions:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxLogNull<sp/>logNo;<sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>show<sp/>wxWidgets<sp/>errors<sp/>if<sp/>we<sp/>can&apos;t<sp/>do<sp/>these.<sp/>(Was:<sp/>Fix<sp/>bug<sp/>544.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(a)<sp/>for<sp/>scripting.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>scriptFn<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>)</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scriptFn<sp/>=<sp/>(<ref refid="_script_command_relay_8h_1a7811294d61067ab0506c97b6d70b4019" kindref="member">tpRegScriptServerFunc</ref>)(module-&gt;<ref refid="class_module_1a65f9fbaffd0e23f6e27c20ec1a812dc4" kindref="member">GetSymbol</ref>(wxT(<ref refid="_module_manager_8cpp_1aa368890b4ec12db4b6e69b11b0a244d7" kindref="member">scriptFnName</ref>)));</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(b)<sp/>for<sp/>hijacking<sp/>the<sp/>entire<sp/>Audacity<sp/>panel.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>pPanelHijack==<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>)</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pPanelHijack<sp/>=<sp/>(<ref refid="_module_manager_8cpp_1aaaf7cf5c813b0f5e689ae5aada537006" kindref="member">tPanelFn</ref>)(module-&gt;<ref refid="class_module_1a65f9fbaffd0e23f6e27c20ec1a812dc4" kindref="member">GetSymbol</ref>(wxT(<ref refid="_module_manager_8cpp_1a99541d973a1f886d437b12e4d62c7889" kindref="member">mainPanelFnName</ref>)));</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_MODULE_PREFS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Loaded<sp/>successfully,<sp/>restore<sp/>the<sp/>status.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_prefs_1ab359f853c3fa54486457a610252cc6a9" kindref="member">ModulePrefs::SetModuleStatus</ref>(<sp/>files[i],<sp/>iModuleStatus);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>need<sp/>to<sp/>save<sp/>status,<sp/>as<sp/>we<sp/>already<sp/>set<sp/>kModuleFailed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>module;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><ref refid="filefn_8cpp_1a956c15a465191f8a8014c81410379272" kindref="member">::wxSetWorkingDirectory</ref>(saveOldCWD);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>After<sp/>loading<sp/>all<sp/>the<sp/>modules,<sp/>we<sp/>may<sp/>have<sp/>a<sp/>registered<sp/>scripting<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(scriptFn)</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_script_command_relay_1a77769d8835271612606f81f7a3a26b72" kindref="member">ScriptCommandRelay::SetCommandHandler</ref>(cmdHandler);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_script_command_relay_1adf1e2bdda1432acdb3d673b1485365f3" kindref="member">ScriptCommandRelay::SetRegScriptServerFunc</ref>(scriptFn);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_non_gui_thread_1a236a636ef6c007a648efeec2bda5e38a" kindref="member">NonGuiThread::StartChild</ref>(&amp;<ref refid="class_script_command_relay_1a619cdbc2b15a5d255ed3c3874019a144" kindref="member">ScriptCommandRelay::Run</ref>);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal">}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="comment">//<sp/>static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347" refid="class_module_manager_1a570d7a26f2684ca2eb0dc1daedd18145" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_module_manager_1a570d7a26f2684ca2eb0dc1daedd18145" kindref="member">ModuleManager::Dispatch</ref>(<ref refid="_scripter_callback_8cpp_1a9f2f762f76ca014f9381eeabccdef359" kindref="member">ModuleDispatchTypes</ref><sp/><ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref>)</highlight></codeline>
<codeline lineno="348"><highlight class="normal">{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cnt<sp/>=<sp/>Get().mModules.GetCount();</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ndx<sp/>=<sp/>0;<sp/>ndx<sp/>&lt;<sp/>cnt;<sp/>ndx++)<sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module" kindref="compound">Module</ref><sp/>*module<sp/>=<sp/>(<ref refid="class_module" kindref="compound">Module</ref><sp/>*)Get().mModules[ndx];</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>module-&gt;<ref refid="class_module_1ac8fbea5e6664d2e30846ceeb2d0bc0d9" kindref="member">Dispatch</ref>(type);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="357"><highlight class="normal">}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Return<sp/>reference<sp/>to<sp/>singleton</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(Thread-safe...no<sp/>active<sp/>threading<sp/>during<sp/>construction<sp/>or<sp/>after<sp/>destruction)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="comment">//<sp/>============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365" refid="class_module_manager_1a3820c2a8ad37e263b7fb2ed3b3aa46eb" refkind="member"><highlight class="normal"><ref refid="class_module_manager" kindref="compound">ModuleManager</ref><sp/>&amp;<sp/><ref refid="class_module_manager_1a3820c2a8ad37e263b7fb2ed3b3aa46eb" kindref="member">ModuleManager::Get</ref>()</highlight></codeline>
<codeline lineno="366"><highlight class="normal">{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mInstance)</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mInstance<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_module_manager" kindref="compound">ModuleManager</ref>();</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*mInstance;</highlight></codeline>
<codeline lineno="373"><highlight class="normal">}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375" refid="class_module_manager_1a2e8ff3a4f0e24dccb161a2887eda9451" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_module_manager_1a2e8ff3a4f0e24dccb161a2887eda9451" kindref="member">ModuleManager::Destroy</ref>()</highlight></codeline>
<codeline lineno="376"><highlight class="normal">{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mInstance)</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>mInstance;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mInstance<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="382"><highlight class="normal">}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384" refid="class_module_manager_1aadaae885edc750ca8469bd9a30e153d6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_module_manager_1aadaae885edc750ca8469bd9a30e153d6" kindref="member">ModuleManager::DiscoverProviders</ref>()</highlight></codeline>
<codeline lineno="385"><highlight class="normal">{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/>InitializeBuiltins();</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/>wxArrayString<sp/>provList;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/>wxArrayString<sp/>pathList;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Code<sp/>from<sp/>LoadLadspa<sp/>that<sp/>might<sp/>be<sp/>useful<sp/>in<sp/>load<sp/>modules.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>pathVar<sp/>=<sp/>wxString::FromUTF8(<ref refid="getopt_8c_1abc6595dbf6880c71628fecf0dbb23d66" kindref="member">getenv</ref>(</highlight><highlight class="stringliteral">&quot;AUDACITY_MODULES_PATH&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pathVar<sp/>!=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_audacity_app_8h_1a1739dbd936ddeaedf4722b5f0b331976" kindref="member">wxGetApp</ref>().<ref refid="class_audacity_app_1a7fa907efc7345693ae4a81efd54149d9" kindref="member">AddMultiPathsToPathList</ref>(pathVar,<sp/>pathList);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_audacity_app_8h_1a1739dbd936ddeaedf4722b5f0b331976" kindref="member">wxGetApp</ref>().<ref refid="class_audacity_app_1a051affe029130ea2d5e54460e4bc9f96" kindref="member">AddUniquePathToPathList</ref>(<ref refid="class_file_names_1a76ba26d7716a46b2477d2b230cff6472" kindref="member">FileNames::ModulesDir</ref>(),<sp/>pathList);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__WXMSW__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><ref refid="_audacity_app_8h_1a1739dbd936ddeaedf4722b5f0b331976" kindref="member">wxGetApp</ref>().<ref refid="class_audacity_app_1a491bdb4d064ffc5392375e8bdf0442c2" kindref="member">FindFilesInPathList</ref>(wxT(</highlight><highlight class="stringliteral">&quot;*.dll&quot;</highlight><highlight class="normal">),<sp/>pathList,<sp/>provList);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__WXMAC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><ref refid="_audacity_app_8h_1a1739dbd936ddeaedf4722b5f0b331976" kindref="member">wxGetApp</ref>().<ref refid="class_audacity_app_1a491bdb4d064ffc5392375e8bdf0442c2" kindref="member">FindFilesInPathList</ref>(wxT(</highlight><highlight class="stringliteral">&quot;*.dylib&quot;</highlight><highlight class="normal">),<sp/>pathList,<sp/>provList);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><ref refid="_audacity_app_8h_1a1739dbd936ddeaedf4722b5f0b331976" kindref="member">wxGetApp</ref>().<ref refid="class_audacity_app_1a491bdb4d064ffc5392375e8bdf0442c2" kindref="member">FindFilesInPathList</ref>(wxT(</highlight><highlight class="stringliteral">&quot;*.so&quot;</highlight><highlight class="normal">),<sp/>pathList,<sp/>provList);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_plugin_manager" kindref="compound">PluginManager</ref><sp/>&amp;<sp/>pm<sp/>=<sp/><ref refid="class_plugin_manager_1aeea97bed99a6b179dd87dc6fbf1086f7" kindref="member">PluginManager::Get</ref>();</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0,<sp/>cnt<sp/>=<sp/>provList.GetCount();<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>cnt;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_interface" kindref="compound">ModuleInterface</ref><sp/>*module<sp/>=<sp/>LoadModule(provList[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(module)</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Register<sp/>the<sp/>provider</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pm.<ref refid="class_plugin_manager_1ad58899e0639d0454b4457628aa4d7d1e" kindref="member">RegisterPlugin</ref>(module);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now,<sp/>allow<sp/>the<sp/>module<sp/>to<sp/>auto-register<sp/>children</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>module-&gt;<ref refid="class_module_interface_1aa5e320d435260546bca290f9b02442e1" kindref="member">AutoRegisterPlugins</ref>(pm);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="427"><highlight class="normal">}</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ModuleManager::InitializeBuiltins()</highlight></codeline>
<codeline lineno="430"><highlight class="normal">{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_plugin_manager" kindref="compound">PluginManager</ref><sp/>&amp;<sp/>pm<sp/>=<sp/><ref refid="class_plugin_manager_1aeea97bed99a6b179dd87dc6fbf1086f7" kindref="member">PluginManager::Get</ref>();</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0,<sp/>cnt<sp/>=<sp/>pBuiltinModuleList-&gt;GetCount();<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>cnt;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_interface" kindref="compound">ModuleInterface</ref><sp/>*module<sp/>=<sp/>((<ref refid="_module_interface_8h_1a203a5e6d59345b566f77fc306253ce62" kindref="member">ModuleMain</ref>)<sp/>(*pBuiltinModuleList)[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>])(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(module-&gt;<ref refid="class_module_interface_1ae86e3c39430a1f0064926499394b6b18" kindref="member">Initialize</ref>())</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Register<sp/>the<sp/>provider</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="include_2audacity_2_types_8h_1abe9b737fcebc2b5bea606246e1eab52e" kindref="member">PluginID</ref><sp/>&amp;<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>pm.<ref refid="class_plugin_manager_1ad58899e0639d0454b4457628aa4d7d1e" kindref="member">RegisterPlugin</ref>(module);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Need<sp/>to<sp/>remember<sp/>it<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mDynModules[id]<sp/>=<sp/>module;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Allow<sp/>the<sp/>module<sp/>to<sp/>auto-register<sp/>children</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>module-&gt;<ref refid="class_module_interface_1aa5e320d435260546bca290f9b02442e1" kindref="member">AutoRegisterPlugins</ref>(pm);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="449"><highlight class="normal">}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><ref refid="class_module_interface" kindref="compound">ModuleInterface</ref><sp/>*ModuleManager::LoadModule(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;<sp/><ref refid="namespacelv2docgen_1ae75d75173fc2ea012acad7d886aa2f9d" kindref="member">path</ref>)</highlight></codeline>
<codeline lineno="452"><highlight class="normal">{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/>wxDynamicLibrary<sp/>*lib<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>wxDynamicLibrary();</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lib-&gt;Load(path,<sp/>wxDL_NOW))</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>success<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_module_interface_8h_1a203a5e6d59345b566f77fc306253ce62" kindref="member">ModuleMain</ref><sp/>audacityMain<sp/>=<sp/>(<ref refid="_module_interface_8h_1a203a5e6d59345b566f77fc306253ce62" kindref="member">ModuleMain</ref>)<sp/>lib-&gt;<ref refid="class_ident_interface_1aaac0b262068534879c58d0536438d859" kindref="member">GetSymbol</ref>(wxSTRINGIZE_T(<ref refid="_module_interface_8h_1a4adc8e75049a1d3ec6662bf74e06fce7" kindref="member">MODULE_ENTRY</ref>),</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;success);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(success<sp/>&amp;&amp;<sp/>audacityMain)</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_interface" kindref="compound">ModuleInterface</ref><sp/>*module<sp/>=<sp/>audacityMain(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>&amp;path);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(module)</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(module-&gt;<ref refid="class_module_interface_1ae86e3c39430a1f0064926499394b6b18" kindref="member">Initialize</ref>())</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mDynModules[<ref refid="class_plugin_manager_1a067694d95ce2e8de430423083d313a46" kindref="member">PluginManager::GetID</ref>(module)]<sp/>=<sp/>module;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLibs[module]<sp/>=<sp/>lib;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>module;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>module-&gt;<ref refid="class_module_interface_1afdc247794e14d0349eba226a99937cc9" kindref="member">Terminate</ref>();</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>module;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lib-&gt;Unload();</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>lib;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="484"><highlight class="normal">}</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ModuleManager::UnloadModule(<ref refid="class_module_interface" kindref="compound">ModuleInterface</ref><sp/>*module)</highlight></codeline>
<codeline lineno="487"><highlight class="normal">{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(module)</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>module-&gt;<ref refid="class_module_interface_1afdc247794e14d0349eba226a99937cc9" kindref="member">Terminate</ref>();</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mLibs.find(module)<sp/>!=<sp/>mLibs.end())</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLibs[module]-&gt;Unload();</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLibs.erase(module);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>module;<sp/></highlight><highlight class="comment">//After<sp/>terminating<sp/>and<sp/>unloading,<sp/>we<sp/>can<sp/>safely<sp/>DELETE<sp/>the<sp/>module</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="500"><highlight class="normal">}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502" refid="class_module_manager_1a87c3e704925fcfa8e21f3fe3dce54850" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_module_manager_1a87c3e704925fcfa8e21f3fe3dce54850" kindref="member">ModuleManager::RegisterModule</ref>(<ref refid="class_module_interface" kindref="compound">ModuleInterface</ref><sp/>*module)</highlight></codeline>
<codeline lineno="503"><highlight class="normal">{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1abe9b737fcebc2b5bea606246e1eab52e" kindref="member">PluginID</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/><ref refid="class_plugin_manager_1a067694d95ce2e8de430423083d313a46" kindref="member">PluginManager::GetID</ref>(module);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mDynModules.find(</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/>!=<sp/>mDynModules.end())</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/><sp/>Should<sp/>we<sp/>complain<sp/>about<sp/>a<sp/>duplicate<sp/>registeration????</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/>mDynModules[id]<sp/>=<sp/>module;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_plugin_manager_1aeea97bed99a6b179dd87dc6fbf1086f7" kindref="member">PluginManager::Get</ref>().<ref refid="class_plugin_manager_1ad58899e0639d0454b4457628aa4d7d1e" kindref="member">RegisterPlugin</ref>(module);</highlight></codeline>
<codeline lineno="515"><highlight class="normal">}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517" refid="class_module_manager_1a7a17b09c856928d5491b1945f77b5856" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_module_manager_1a7a17b09c856928d5491b1945f77b5856" kindref="member">ModuleManager::FindAllPlugins</ref>(<ref refid="_plugin_manager_8h_1a628abfc9a8462192a361cf3b4a1f11f4" kindref="member">PluginIDList</ref><sp/>&amp;<sp/>providers,<sp/>wxArrayString<sp/>&amp;<sp/>paths)</highlight></codeline>
<codeline lineno="518"><highlight class="normal">{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_plugin_manager" kindref="compound">PluginManager</ref><sp/>&amp;<sp/>pm<sp/>=<sp/><ref refid="class_plugin_manager_1aeea97bed99a6b179dd87dc6fbf1086f7" kindref="member">PluginManager::Get</ref>();</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/>wxArrayString<sp/>modIDs;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/>wxArrayString<sp/>modPaths;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_plugin_descriptor" kindref="compound">PluginDescriptor</ref><sp/>*plug<sp/>=<sp/>pm.<ref refid="class_plugin_manager_1ac48483b481a43631934346c77ca104fb" kindref="member">GetFirstPlugin</ref>(<ref refid="_plugin_manager_8h_1a54e0db21fd49ff6e0178b6ebe120a6d2a67b96c80a37d2be13a0ab795a80fd25d" kindref="member">PluginTypeModule</ref>);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(plug)</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>modIDs.push_back(plug-&gt;<ref refid="class_plugin_descriptor_1ae5a3524df3239aa976c45a376eddbb0f" kindref="member">GetID</ref>());</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>modPaths.push_back(plug-&gt;<ref refid="class_plugin_descriptor_1a1b315b70472bd95d1caae05f54e3bff8" kindref="member">GetPath</ref>());</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>plug<sp/>=<sp/>pm.<ref refid="class_plugin_manager_1ac12e525c010e5d218ede9e2d4035e65b" kindref="member">GetNextPlugin</ref>(<ref refid="_plugin_manager_8h_1a54e0db21fd49ff6e0178b6ebe120a6d2a67b96c80a37d2be13a0ab795a80fd25d" kindref="member">PluginTypeModule</ref>);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0,<sp/>cnt<sp/>=<sp/>modIDs.size();<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>cnt;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1abe9b737fcebc2b5bea606246e1eab52e" kindref="member">PluginID</ref><sp/>providerID<sp/>=<sp/>modIDs[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_module_interface" kindref="compound">ModuleInterface</ref><sp/>*module<sp/>=</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_module_interface" kindref="compound">ModuleInterface</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(CreateProviderInstance(providerID,<sp/>modPaths[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]));</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxArrayString<sp/>newpaths<sp/>=<sp/>module-&gt;<ref refid="class_module_interface_1a67404aee6f6274738dfab1a77fd36151" kindref="member">FindPlugins</ref>(pm);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0,<sp/>cnt<sp/>=<sp/>newpaths.size();<sp/>i<sp/>&lt;<sp/>cnt;<sp/>i++)</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>providers.push_back(providerID);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>paths.push_back(newpaths[i]);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="545"><highlight class="normal">}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547" refid="class_module_manager_1af8b60dfe87a36058a171bdd7892ebdee" refkind="member"><highlight class="normal">wxArrayString<sp/><ref refid="class_module_manager_1af8b60dfe87a36058a171bdd7892ebdee" kindref="member">ModuleManager::FindPluginsForProvider</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="include_2audacity_2_types_8h_1abe9b737fcebc2b5bea606246e1eab52e" kindref="member">PluginID</ref><sp/>&amp;<sp/>providerID,</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;<sp/><ref refid="namespacelv2docgen_1ae75d75173fc2ea012acad7d886aa2f9d" kindref="member">path</ref>)</highlight></codeline>
<codeline lineno="549"><highlight class="normal">{</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Instantiate<sp/>if<sp/>it<sp/>hasn&apos;t<sp/>already<sp/>been<sp/>done</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mDynModules.find(providerID)<sp/>==<sp/>mDynModules.end())</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>it<sp/>couldn&apos;t<sp/>be<sp/>created,<sp/>just<sp/>give<sp/>up<sp/>and<sp/>return<sp/>an<sp/>empty<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!CreateProviderInstance(providerID,<sp/>path))</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wxArrayString();</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mDynModules[providerID]-&gt;FindPlugins(<ref refid="class_plugin_manager_1aeea97bed99a6b179dd87dc6fbf1086f7" kindref="member">PluginManager::Get</ref>());</highlight></codeline>
<codeline lineno="561"><highlight class="normal">}</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563" refid="class_module_manager_1a1f4871bc68a4547ce973ed2a17da1e25" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_module_manager_1a1f4871bc68a4547ce973ed2a17da1e25" kindref="member">ModuleManager::RegisterPlugin</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="include_2audacity_2_types_8h_1abe9b737fcebc2b5bea606246e1eab52e" kindref="member">PluginID</ref><sp/>&amp;<sp/>providerID,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;<sp/><ref refid="namespacelv2docgen_1ae75d75173fc2ea012acad7d886aa2f9d" kindref="member">path</ref>)</highlight></codeline>
<codeline lineno="564"><highlight class="normal">{</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mDynModules.find(providerID)<sp/>==<sp/>mDynModules.end())</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mDynModules[providerID]-&gt;RegisterPlugin(<ref refid="class_plugin_manager_1aeea97bed99a6b179dd87dc6fbf1086f7" kindref="member">PluginManager::Get</ref>(),<sp/>path);</highlight></codeline>
<codeline lineno="571"><highlight class="normal">}</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight></codeline>
<codeline lineno="573" refid="class_module_manager_1ac475594b3bcd28ab3289110337de74f8" refkind="member"><highlight class="normal"><ref refid="class_ident_interface" kindref="compound">IdentInterface</ref><sp/>*<ref refid="class_module_manager_1ac475594b3bcd28ab3289110337de74f8" kindref="member">ModuleManager::CreateProviderInstance</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="include_2audacity_2_types_8h_1abe9b737fcebc2b5bea606246e1eab52e" kindref="member">PluginID</ref><sp/>&amp;<sp/>providerID,</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;<sp/><ref refid="namespacelv2docgen_1ae75d75173fc2ea012acad7d886aa2f9d" kindref="member">path</ref>)</highlight></codeline>
<codeline lineno="575"><highlight class="normal">{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(path.IsEmpty()<sp/>&amp;&amp;<sp/>mDynModules.find(providerID)<sp/>!=<sp/>mDynModules.end())</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mDynModules[providerID];</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>LoadModule(path);</highlight></codeline>
<codeline lineno="582"><highlight class="normal">}</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584" refid="class_module_manager_1a8bc5eaa6ab2af671f544df4579afa2d5" refkind="member"><highlight class="normal"><ref refid="class_ident_interface" kindref="compound">IdentInterface</ref><sp/>*<ref refid="class_module_manager_1a8bc5eaa6ab2af671f544df4579afa2d5" kindref="member">ModuleManager::CreateInstance</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="include_2audacity_2_types_8h_1abe9b737fcebc2b5bea606246e1eab52e" kindref="member">PluginID</ref><sp/>&amp;<sp/>providerID,</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;<sp/><ref refid="namespacelv2docgen_1ae75d75173fc2ea012acad7d886aa2f9d" kindref="member">path</ref>)</highlight></codeline>
<codeline lineno="586"><highlight class="normal">{</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mDynModules.find(providerID)<sp/>==<sp/>mDynModules.end())</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mDynModules[providerID]-&gt;CreateInstance(path);</highlight></codeline>
<codeline lineno="593"><highlight class="normal">}</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595" refid="class_module_manager_1afa00062fa05f3c7e0c0fc784f8f6c3a2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_module_manager_1afa00062fa05f3c7e0c0fc784f8f6c3a2" kindref="member">ModuleManager::DeleteInstance</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="include_2audacity_2_types_8h_1abe9b737fcebc2b5bea606246e1eab52e" kindref="member">PluginID</ref><sp/>&amp;<sp/>providerID,</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_ident_interface" kindref="compound">IdentInterface</ref><sp/>*instance)</highlight></codeline>
<codeline lineno="597"><highlight class="normal">{</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mDynModules.find(providerID)<sp/>==<sp/>mDynModules.end())</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/>mDynModules[providerID]-&gt;DeleteInstance(instance);</highlight></codeline>
<codeline lineno="604"><highlight class="normal">}</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606" refid="class_module_manager_1a4870f9991dc54a1191caa0187e832ee8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_module_manager_1a4870f9991dc54a1191caa0187e832ee8" kindref="member">ModuleManager::IsProviderValid</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="include_2audacity_2_types_8h_1abe9b737fcebc2b5bea606246e1eab52e" kindref="member">PluginID</ref><sp/>&amp;<sp/>WXUNUSED(providerID),</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;<sp/><ref refid="namespacelv2docgen_1ae75d75173fc2ea012acad7d886aa2f9d" kindref="member">path</ref>)</highlight></codeline>
<codeline lineno="608"><highlight class="normal">{</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Builtin<sp/>modules<sp/>do<sp/>not<sp/>have<sp/>a<sp/>path</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(path.IsEmpty())</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/><sp/></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/>wxFileName<sp/>lib(path);</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lib.FileExists()<sp/>||<sp/>lib.DirExists())</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="622"><highlight class="normal">}</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="624" refid="class_module_manager_1a2debe397bd3a5c9fa2b08bcd17a3b9d2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_module_manager_1a2debe397bd3a5c9fa2b08bcd17a3b9d2" kindref="member">ModuleManager::IsPluginValid</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="include_2audacity_2_types_8h_1abe9b737fcebc2b5bea606246e1eab52e" kindref="member">PluginID</ref><sp/>&amp;<sp/>providerID,</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;<sp/><ref refid="namespacelv2docgen_1ae75d75173fc2ea012acad7d886aa2f9d" kindref="member">path</ref>)</highlight></codeline>
<codeline lineno="626"><highlight class="normal">{</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mDynModules.find(providerID)<sp/>==<sp/>mDynModules.end())</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mDynModules[providerID]-&gt;IsPluginValid(path);</highlight></codeline>
<codeline lineno="633"><highlight class="normal">}</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/src/ModuleManager.cpp"/>
  </compounddef>
</doxygen>
