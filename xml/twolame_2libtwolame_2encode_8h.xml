<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="twolame_2libtwolame_2encode_8h" kind="file" language="C++">
    <compoundname>encode.h</compoundname>
    <includedby refid="twolame_2libtwolame_2crc_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/crc.c</includedby>
    <includedby refid="twolame_2libtwolame_2encode_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/encode.c</includedby>
    <includedby refid="twolame_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.c</includedby>
    <invincdepgraph>
      <node id="7548">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/twolame.c</label>
        <link refid="twolame_8c"/>
      </node>
      <node id="7547">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/encode.c</label>
        <link refid="twolame_2libtwolame_2encode_8c"/>
      </node>
      <node id="7545">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/encode.h</label>
        <link refid="twolame/libtwolame/encode.h"/>
        <childnode refid="7546" relation="include">
        </childnode>
        <childnode refid="7547" relation="include">
        </childnode>
        <childnode refid="7548" relation="include">
        </childnode>
      </node>
      <node id="7546">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/crc.c</label>
        <link refid="twolame_2libtwolame_2crc_8c"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="twolame_2libtwolame_2encode_8h_1a806698a4987e0d9114cb04ec2d34fc37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int encode_init</definition>
        <argsstring>(twolame_options *glopts)</argsstring>
        <name>encode_init</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/encode.h" line="29" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/encode.c" bodystart="184" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="twolame_2libtwolame_2encode_8h_1aa59eba5ddc3c6526d17bb4eb3a0a1b62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void scalefactor_calc</definition>
        <argsstring>(FLOAT sb_sample[][3][SCALE_BLOCK][SBLIMIT], unsigned int scalar[][3][SBLIMIT], int nch, int sblimit)</argsstring>
        <name>scalefactor_calc</name>
        <param>
          <type><ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref></type>
          <declname>sb_sample</declname>
          <array>[][3][SCALE_BLOCK][SBLIMIT]</array>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>scalar</declname>
          <array>[][3][SBLIMIT]</array>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>nch</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>sblimit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/encode.h" line="31" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/encode.c" bodystart="277" bodyend="322"/>
      </memberdef>
      <memberdef kind="function" id="twolame_2libtwolame_2encode_8h_1acc5df7ac320b7535796ef2ff71572396" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void combine_lr</definition>
        <argsstring>(FLOAT sb_sample[2][3][SCALE_BLOCK][SBLIMIT], FLOAT joint_sample[3][SCALE_BLOCK][SBLIMIT], int sblimit)</argsstring>
        <name>combine_lr</name>
        <param>
          <type><ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref></type>
          <declname>sb_sample</declname>
          <array>[2][3][SCALE_BLOCK][SBLIMIT]</array>
        </param>
        <param>
          <type><ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref></type>
          <declname>joint_sample</declname>
          <array>[3][SCALE_BLOCK][SBLIMIT]</array>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>sblimit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/encode.h" line="34" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/encode.c" bodystart="326" bodyend="336"/>
      </memberdef>
      <memberdef kind="function" id="twolame_2libtwolame_2encode_8h_1a531ff0930c646e9d440164293dfdc415" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void find_sf_max</definition>
        <argsstring>(twolame_options *glopts, unsigned int sf_index[2][3][SBLIMIT], FLOAT sf_max[2][SBLIMIT])</argsstring>
        <name>find_sf_max</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>sf_index</declname>
          <array>[2][3][SBLIMIT]</array>
        </param>
        <param>
          <type><ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref></type>
          <declname>sf_max</declname>
          <array>[2][SBLIMIT]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/encode.h" line="37" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/encode.c" bodystart="350" bodyend="367"/>
      </memberdef>
      <memberdef kind="function" id="twolame_2libtwolame_2encode_8h_1a98c576c81a74d7ec73f3b5b505cc7f11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void sf_transmission_pattern</definition>
        <argsstring>(twolame_options *glopts, unsigned int sf_index[2][3][SBLIMIT], unsigned int sf_selectinfo[2][SBLIMIT])</argsstring>
        <name>sf_transmission_pattern</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>sf_index</declname>
          <array>[2][3][SBLIMIT]</array>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>sf_selectinfo</declname>
          <array>[2][SBLIMIT]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/encode.h" line="40" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/encode.c" bodystart="378" bodyend="446"/>
      </memberdef>
      <memberdef kind="function" id="twolame_2libtwolame_2encode_8h_1a2a016df598c6f65e39016018c5bc7a4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void write_header</definition>
        <argsstring>(twolame_options *glopts, bit_stream *bs)</argsstring>
        <name>write_header</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type><ref refid="bitbuffer_8h_1a6fd1cd4b0f368eb5f7362a1c322aa3c5" kindref="member">bit_stream</ref> *</type>
          <declname>bs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/encode.h" line="44" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/encode.c" bodystart="448" bodyend="465"/>
      </memberdef>
      <memberdef kind="function" id="twolame_2libtwolame_2encode_8h_1abe4db11c513918189b0461119d1ecf0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void write_bit_alloc</definition>
        <argsstring>(twolame_options *glopts, unsigned int bit_alloc[2][SBLIMIT], bit_stream *bs)</argsstring>
        <name>write_bit_alloc</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>bit_alloc</declname>
          <array>[2][SBLIMIT]</array>
        </param>
        <param>
          <type><ref refid="bitbuffer_8h_1a6fd1cd4b0f368eb5f7362a1c322aa3c5" kindref="member">bit_stream</ref> *</type>
          <declname>bs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/encode.h" line="46" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/encode.c" bodystart="475" bodyend="493"/>
      </memberdef>
      <memberdef kind="function" id="twolame_2libtwolame_2encode_8h_1a8fab993360b663648517e6c53dfbefd2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void write_scalefactors</definition>
        <argsstring>(twolame_options *glopts, unsigned int bit_alloc[2][SBLIMIT], unsigned int sf_selectinfo[2][SBLIMIT], unsigned int scalar[2][3][SBLIMIT], bit_stream *bs)</argsstring>
        <name>write_scalefactors</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>bit_alloc</declname>
          <array>[2][SBLIMIT]</array>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>sf_selectinfo</declname>
          <array>[2][SBLIMIT]</array>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>scalar</declname>
          <array>[2][3][SBLIMIT]</array>
        </param>
        <param>
          <type><ref refid="bitbuffer_8h_1a6fd1cd4b0f368eb5f7362a1c322aa3c5" kindref="member">bit_stream</ref> *</type>
          <declname>bs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/encode.h" line="48" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/encode.c" bodystart="507" bodyend="544"/>
      </memberdef>
      <memberdef kind="function" id="twolame_2libtwolame_2encode_8h_1a5b7b739e10c387ea8e7c777a29a7ad28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void subband_quantization</definition>
        <argsstring>(twolame_options *glopts, unsigned int sf_index[2][3][SBLIMIT], FLOAT sb_samples[2][3][SCALE_BLOCK][SBLIMIT], unsigned int j_scale[3][SBLIMIT], FLOAT j_samps[3][SCALE_BLOCK][SBLIMIT], unsigned int bit_alloc[2][SBLIMIT], unsigned int sbband[2][3][SCALE_BLOCK][SBLIMIT])</argsstring>
        <name>subband_quantization</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>sf_index</declname>
          <array>[2][3][SBLIMIT]</array>
        </param>
        <param>
          <type><ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref></type>
          <declname>sb_samples</declname>
          <array>[2][3][SCALE_BLOCK][SBLIMIT]</array>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>j_scale</declname>
          <array>[3][SBLIMIT]</array>
        </param>
        <param>
          <type><ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref></type>
          <declname>j_samps</declname>
          <array>[3][SCALE_BLOCK][SBLIMIT]</array>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>bit_alloc</declname>
          <array>[2][SBLIMIT]</array>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>sbband</declname>
          <array>[2][3][SCALE_BLOCK][SBLIMIT]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/encode.h" line="53" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/encode.c" bodystart="580" bodyend="645"/>
      </memberdef>
      <memberdef kind="function" id="twolame_2libtwolame_2encode_8h_1a27e01b1296b8ae425b52a1c4a22f2581" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void write_samples</definition>
        <argsstring>(twolame_options *glopts, unsigned int sbband[2][3][SCALE_BLOCK][SBLIMIT], unsigned int bit_alloc[2][SBLIMIT], bit_stream *bs)</argsstring>
        <name>write_samples</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>sbband</declname>
          <array>[2][3][SCALE_BLOCK][SBLIMIT]</array>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>bit_alloc</declname>
          <array>[2][SBLIMIT]</array>
        </param>
        <param>
          <type><ref refid="bitbuffer_8h_1a6fd1cd4b0f368eb5f7362a1c322aa3c5" kindref="member">bit_stream</ref> *</type>
          <declname>bs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/encode.h" line="61" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/encode.c" bodystart="658" bodyend="696"/>
      </memberdef>
      <memberdef kind="function" id="twolame_2libtwolame_2encode_8h_1a4cfed8d6ea3cf0c50a9b22506298354d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int bits_for_nonoise</definition>
        <argsstring>(twolame_options *glopts, FLOAT SMR[2][SBLIMIT], unsigned int scfsi[2][SBLIMIT], FLOAT min_mnr, unsigned int bit_alloc[2][SBLIMIT])</argsstring>
        <name>bits_for_nonoise</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type><ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref></type>
          <declname>SMR</declname>
          <array>[2][SBLIMIT]</array>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>scfsi</declname>
          <array>[2][SBLIMIT]</array>
        </param>
        <param>
          <type><ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref></type>
          <declname>min_mnr</declname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>bit_alloc</declname>
          <array>[2][SBLIMIT]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/encode.h" line="70" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/encode.c" bodystart="727" bodyend="797"/>
      </memberdef>
      <memberdef kind="function" id="twolame_2libtwolame_2encode_8h_1a8312466819ccf33a3daa7221a3600d3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int init_bit_allocation</definition>
        <argsstring>(twolame_options *glopts)</argsstring>
        <name>init_bit_allocation</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/encode.h" line="74" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/encode.c" bodystart="801" bodyend="863"/>
      </memberdef>
      <memberdef kind="function" id="twolame_2libtwolame_2encode_8h_1aa6f6a0b5c40635d5c4a2340dd5afd4bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void main_bit_allocation</definition>
        <argsstring>(twolame_options *glopts, FLOAT SMR[2][SBLIMIT], unsigned int scfsi[2][SBLIMIT], unsigned int bit_alloc[2][SBLIMIT], int *adb)</argsstring>
        <name>main_bit_allocation</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type><ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref></type>
          <declname>SMR</declname>
          <array>[2][SBLIMIT]</array>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>scfsi</declname>
          <array>[2][SBLIMIT]</array>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>bit_alloc</declname>
          <array>[2][SBLIMIT]</array>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>adb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/encode.h" line="76" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/encode.c" bodystart="890" bodyend="981"/>
      </memberdef>
      <memberdef kind="function" id="twolame_2libtwolame_2encode_8h_1a3f9faed846fb1d81840ec5f3fb096a29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int vbr_bit_allocation</definition>
        <argsstring>(twolame_options *glopts, FLOAT SMR[2][SBLIMIT], unsigned int scfsi[2][SBLIMIT], unsigned int bit_alloc[2][SBLIMIT], int *adb)</argsstring>
        <name>vbr_bit_allocation</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type><ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref></type>
          <declname>SMR</declname>
          <array>[2][SBLIMIT]</array>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>scfsi</declname>
          <array>[2][SBLIMIT]</array>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>bit_alloc</declname>
          <array>[2][SBLIMIT]</array>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>adb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/encode.h" line="80" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/encode.c" bodystart="1033" bodyend="1134"/>
      </memberdef>
      <memberdef kind="function" id="twolame_2libtwolame_2encode_8h_1a380e2f51c965b9495a876426fb34c4cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int a_bit_allocation</definition>
        <argsstring>(twolame_options *glopts, FLOAT SMR[2][SBLIMIT], unsigned int scfsi[2][SBLIMIT], unsigned int bit_alloc[2][SBLIMIT], int *adb)</argsstring>
        <name>a_bit_allocation</name>
        <param>
          <type><ref refid="twolame_8h_1a429c5c35b47d5d7cc34a07e48a82866d" kindref="member">twolame_options</ref> *</type>
          <declname>glopts</declname>
        </param>
        <param>
          <type><ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref></type>
          <declname>SMR</declname>
          <array>[2][SBLIMIT]</array>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>scfsi</declname>
          <array>[2][SBLIMIT]</array>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>bit_alloc</declname>
          <array>[2][SBLIMIT]</array>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>adb</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/encode.h" line="84" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/encode.c" bodystart="1185" bodyend="1297"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/>TwoLAME:<sp/>an<sp/>optimized<sp/>MPEG<sp/>Audio<sp/>Layer<sp/>Two<sp/>encoder</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>(C)<sp/>2001-2004<sp/>Michael<sp/>Cheng</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>(C)<sp/>2004-2006<sp/>The<sp/>TwoLAME<sp/>Project</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>library<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/>modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/>License<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/>version<sp/>2.1<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>library<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/>License<sp/>along<sp/>with<sp/>this<sp/>library;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/>Foundation,<sp/>Inc.,<sp/>59<sp/>Temple<sp/>Place,<sp/>Suite<sp/>330,<sp/>Boston,<sp/>MA<sp/><sp/>02111-1307<sp/><sp/>USA</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/><sp/>$Id$</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_ENCODE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_ENCODE_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="twolame_2libtwolame_2encode_8h_1a806698a4987e0d9114cb04ec2d34fc37" kindref="member">encode_init</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="twolame_2libtwolame_2encode_8h_1aa59eba5ddc3c6526d17bb4eb3a0a1b62" kindref="member">scalefactor_calc</ref>(<ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref><sp/>sb_sample[][3][<ref refid="twolame_2libtwolame_2common_8h_1ae51f5d4a4201eed1fa3111d2b1438bbf" kindref="member">SCALE_BLOCK</ref>][<ref refid="twolame_2libtwolame_2common_8h_1aae2d5a401c55c6b2b834c99340911fdb" kindref="member">SBLIMIT</ref>],</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scalar[][3][SBLIMIT],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nch,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="layer12_8c_1a6e51104237381e118e16da8bba73fd18" kindref="member">sblimit</ref>);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="twolame_2libtwolame_2encode_8h_1acc5df7ac320b7535796ef2ff71572396" kindref="member">combine_lr</ref>(<ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref><sp/>sb_sample[2][3][<ref refid="twolame_2libtwolame_2common_8h_1ae51f5d4a4201eed1fa3111d2b1438bbf" kindref="member">SCALE_BLOCK</ref>][<ref refid="twolame_2libtwolame_2common_8h_1aae2d5a401c55c6b2b834c99340911fdb" kindref="member">SBLIMIT</ref>],</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref><sp/>joint_sample[3][<ref refid="twolame_2libtwolame_2common_8h_1ae51f5d4a4201eed1fa3111d2b1438bbf" kindref="member">SCALE_BLOCK</ref>][SBLIMIT],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="layer12_8c_1a6e51104237381e118e16da8bba73fd18" kindref="member">sblimit</ref>);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="twolame_2libtwolame_2encode_8h_1a531ff0930c646e9d440164293dfdc415" kindref="member">find_sf_max</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sf_index[2][3][<ref refid="twolame_2libtwolame_2common_8h_1aae2d5a401c55c6b2b834c99340911fdb" kindref="member">SBLIMIT</ref>],<sp/><ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref><sp/>sf_max[2][SBLIMIT]);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="twolame_2libtwolame_2encode_8h_1a98c576c81a74d7ec73f3b5b505cc7f11" kindref="member">sf_transmission_pattern</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sf_index[2][3][<ref refid="twolame_2libtwolame_2common_8h_1aae2d5a401c55c6b2b834c99340911fdb" kindref="member">SBLIMIT</ref>],</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sf_selectinfo[2][SBLIMIT]);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="twolame_2libtwolame_2encode_8h_1a2a016df598c6f65e39016018c5bc7a4f" kindref="member">write_header</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,<sp/><ref refid="structbit__stream__struc" kindref="compound">bit_stream</ref><sp/>*<sp/>bs);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="twolame_2libtwolame_2encode_8h_1abe4db11c513918189b0461119d1ecf0e" kindref="member">write_bit_alloc</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bit_alloc[2][<ref refid="twolame_2libtwolame_2common_8h_1aae2d5a401c55c6b2b834c99340911fdb" kindref="member">SBLIMIT</ref>],<sp/><ref refid="structbit__stream__struc" kindref="compound">bit_stream</ref><sp/>*<sp/>bs);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="twolame_2libtwolame_2encode_8h_1a8fab993360b663648517e6c53dfbefd2" kindref="member">write_scalefactors</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bit_alloc[2][<ref refid="twolame_2libtwolame_2common_8h_1aae2d5a401c55c6b2b834c99340911fdb" kindref="member">SBLIMIT</ref>],</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sf_selectinfo[2][SBLIMIT],</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scalar[2][3][SBLIMIT],<sp/><ref refid="structbit__stream__struc" kindref="compound">bit_stream</ref><sp/>*<sp/>bs);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="twolame_2libtwolame_2encode_8h_1a5b7b739e10c387ea8e7c777a29a7ad28" kindref="member">subband_quantization</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sf_index[2][3][<ref refid="twolame_2libtwolame_2common_8h_1aae2d5a401c55c6b2b834c99340911fdb" kindref="member">SBLIMIT</ref>],</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref><sp/>sb_samples[2][3][<ref refid="twolame_2libtwolame_2common_8h_1ae51f5d4a4201eed1fa3111d2b1438bbf" kindref="member">SCALE_BLOCK</ref>][SBLIMIT],</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j_scale[3][SBLIMIT],</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref><sp/>j_samps[3][<ref refid="twolame_2libtwolame_2common_8h_1ae51f5d4a4201eed1fa3111d2b1438bbf" kindref="member">SCALE_BLOCK</ref>][SBLIMIT],</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bit_alloc[2][SBLIMIT],</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sbband[2][3][<ref refid="twolame_2libtwolame_2common_8h_1ae51f5d4a4201eed1fa3111d2b1438bbf" kindref="member">SCALE_BLOCK</ref>][SBLIMIT]);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="twolame_2libtwolame_2encode_8h_1a27e01b1296b8ae425b52a1c4a22f2581" kindref="member">write_samples</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sbband[2][3][<ref refid="twolame_2libtwolame_2common_8h_1ae51f5d4a4201eed1fa3111d2b1438bbf" kindref="member">SCALE_BLOCK</ref>][<ref refid="twolame_2libtwolame_2common_8h_1aae2d5a401c55c6b2b834c99340911fdb" kindref="member">SBLIMIT</ref>],</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bit_alloc[2][SBLIMIT],<sp/><ref refid="structbit__stream__struc" kindref="compound">bit_stream</ref><sp/>*<sp/>bs);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">/*******************************************************</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/><sp/><sp/>Bit<sp/>Allocation<sp/>Stuff<sp/></highlight></codeline>
<codeline lineno="68"><highlight class="comment">******************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="twolame_2libtwolame_2encode_8h_1a4cfed8d6ea3cf0c50a9b22506298354d" kindref="member">bits_for_nonoise</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,<sp/><ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref><sp/>SMR[2][<ref refid="twolame_2libtwolame_2common_8h_1aae2d5a401c55c6b2b834c99340911fdb" kindref="member">SBLIMIT</ref>],</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scfsi[2][SBLIMIT],<sp/><ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref><sp/>min_mnr,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bit_alloc[2][SBLIMIT]);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="twolame_2libtwolame_2encode_8h_1a8312466819ccf33a3daa7221a3600d3c" kindref="member">init_bit_allocation</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="twolame_2libtwolame_2encode_8h_1aa6f6a0b5c40635d5c4a2340dd5afd4bd" kindref="member">main_bit_allocation</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,<sp/><ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref><sp/>SMR[2][<ref refid="twolame_2libtwolame_2common_8h_1aae2d5a401c55c6b2b834c99340911fdb" kindref="member">SBLIMIT</ref>],</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scfsi[2][SBLIMIT],</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bit_alloc[2][SBLIMIT],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*adb);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="twolame_2libtwolame_2encode_8h_1a3f9faed846fb1d81840ec5f3fb096a29" kindref="member">vbr_bit_allocation</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,<sp/><ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref><sp/>SMR[2][<ref refid="twolame_2libtwolame_2common_8h_1aae2d5a401c55c6b2b834c99340911fdb" kindref="member">SBLIMIT</ref>],</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scfsi[2][SBLIMIT],</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bit_alloc[2][SBLIMIT],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*adb);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="twolame_2libtwolame_2encode_8h_1a380e2f51c965b9495a876426fb34c4cb" kindref="member">a_bit_allocation</ref>(<ref refid="structtwolame__options__struct" kindref="compound">twolame_options</ref><sp/>*<sp/>glopts,<sp/><ref refid="twolame_2libtwolame_2common_8h_1ae8690abbffa85934d64d545920e2b108" kindref="member">FLOAT</ref><sp/>SMR[2][<ref refid="twolame_2libtwolame_2common_8h_1aae2d5a401c55c6b2b834c99340911fdb" kindref="member">SBLIMIT</ref>],</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>scfsi[2][SBLIMIT],<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bit_alloc[2][SBLIMIT],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*adb);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">//<sp/>vim:ts=4:sw=4:nowrap:<sp/></highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/twolame/libtwolame/encode.h"/>
  </compounddef>
</doxygen>
