<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="timebase_8c" kind="file" language="C++">
    <compoundname>timebase.c</compoundname>
    <includes local="yes">stdio.h</includes>
    <includes refid="cext_8h" local="yes">cext.h</includes>
    <includes refid="userio_8h" local="yes">userio.h</includes>
    <includes refid="midifns_8h" local="yes">midifns.h</includes>
    <includes refid="timebase_8h" local="yes">timebase.h</includes>
    <includes refid="moxc_8h" local="yes">moxc.h</includes>
    <incdepgraph>
      <node id="11731">
        <label>cleanup.h</label>
        <link refid="cleanup_8h"/>
      </node>
      <node id="11730">
        <label>mem.h</label>
        <link refid="libnyquist_2nyquist_2cmt_2mem_8h"/>
      </node>
      <node id="11728">
        <label>string.h</label>
      </node>
      <node id="11729">
        <label>math.h</label>
      </node>
      <node id="11727">
        <label>switches.h</label>
      </node>
      <node id="11732">
        <label>userio.h</label>
        <link refid="userio_8h"/>
      </node>
      <node id="11733">
        <label>midifns.h</label>
        <link refid="midifns_8h"/>
        <childnode refid="11734" relation="include">
        </childnode>
      </node>
      <node id="11734">
        <label>midierr.h</label>
        <link refid="midierr_8h"/>
      </node>
      <node id="11736">
        <label>moxc.h</label>
        <link refid="moxc_8h"/>
      </node>
      <node id="11725">
        <label>stdio.h</label>
      </node>
      <node id="11724">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/timebase.c</label>
        <link refid="timebase.c"/>
        <childnode refid="11725" relation="include">
        </childnode>
        <childnode refid="11726" relation="include">
        </childnode>
        <childnode refid="11732" relation="include">
        </childnode>
        <childnode refid="11733" relation="include">
        </childnode>
        <childnode refid="11735" relation="include">
        </childnode>
        <childnode refid="11736" relation="include">
        </childnode>
      </node>
      <node id="11735">
        <label>timebase.h</label>
        <link refid="timebase_8h"/>
      </node>
      <node id="11726">
        <label>cext.h</label>
        <link refid="cext_8h"/>
        <childnode refid="11727" relation="include">
        </childnode>
        <childnode refid="11725" relation="include">
        </childnode>
        <childnode refid="11728" relation="include">
        </childnode>
        <childnode refid="11729" relation="include">
        </childnode>
        <childnode refid="11730" relation="include">
        </childnode>
        <childnode refid="11731" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="timebase_8c_1a0a255e110445b85f5eac1a90cd8797df" prot="public" static="no" mutable="no">
        <type><ref refid="timebase_8h_1a1eb83a40e21ea632c517395ce4b36d60" kindref="member">timebase_type</ref></type>
        <definition>timebase_type timebase_queue</definition>
        <argsstring></argsstring>
        <name>timebase_queue</name>
        <initializer>= <ref refid="px__mixer_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/timebase.c" line="21" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/timebase.c" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="timebase_8c_1add473bb7a202da29f6ff6a3447a63910" prot="public" static="no" mutable="no">
        <type><ref refid="timebase_8h_1a665ac30c6ef78ffb4bda378f09befc2b" kindref="member">call_type</ref></type>
        <definition>call_type callfree</definition>
        <argsstring></argsstring>
        <name>callfree</name>
        <initializer>= <ref refid="px__mixer_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/timebase.c" line="22" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/timebase.c" bodystart="22" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="timebase_8c_1a3b16944d3bb2475469f645174b187d6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mm_8c_1a6a1d6e1a12975a4e9a0b5b952e79eaad" kindref="member">private</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>private void fatal</definition>
        <argsstring>()</argsstring>
        <name>fatal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/timebase.c" line="24" column="1"/>
      </memberdef>
      <memberdef kind="function" id="timebase_8c_1ae38d62a98f407019296365494b7b1bdb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="timebase_8h_1a1eb83a40e21ea632c517395ce4b36d60" kindref="member">timebase_type</ref></type>
        <definition>timebase_type timebase_create</definition>
        <argsstring>(int maxsize)</argsstring>
        <name>timebase_create</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>maxsize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/timebase.c" line="35" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/timebase.c" bodystart="35" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="timebase_8c_1ac9d44fde9ef182e42726626abfc0eeda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void callinsert</definition>
        <argsstring>(timebase_type base, call_type call)</argsstring>
        <name>callinsert</name>
        <param>
          <type><ref refid="timebase_8h_1a1eb83a40e21ea632c517395ce4b36d60" kindref="member">timebase_type</ref></type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="timebase_8h_1a665ac30c6ef78ffb4bda378f09befc2b" kindref="member">call_type</ref></type>
          <declname>call</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/timebase.c" line="64" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/timebase.c" bodystart="64" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="timebase_8c_1a88e3dc7a4a48706282f688d221795a8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void callshow</definition>
        <argsstring>(call_type call)</argsstring>
        <name>callshow</name>
        <param>
          <type><ref refid="timebase_8h_1a665ac30c6ef78ffb4bda378f09befc2b" kindref="member">call_type</ref></type>
          <declname>call</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/timebase.c" line="123" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/timebase.c" bodystart="123" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="timebase_8c_1af98ccd7b05f17d24d18e3f3b91ea3c98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mm_8c_1a6a1d6e1a12975a4e9a0b5b952e79eaad" kindref="member">private</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>private void fatal</definition>
        <argsstring>(char *msg)</argsstring>
        <name>fatal</name>
        <param>
          <type>char *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/timebase.c" line="144" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/timebase.c" bodystart="144" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="timebase_8c_1a59267702c77411f63420fe4c26d72290" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void timebase_free</definition>
        <argsstring>(timebase_type timebase)</argsstring>
        <name>timebase_free</name>
        <param>
          <type><ref refid="timebase_8h_1a1eb83a40e21ea632c517395ce4b36d60" kindref="member">timebase_type</ref></type>
          <declname>timebase</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/timebase.c" line="158" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/timebase.c" bodystart="158" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="timebase_8c_1a187d243c612d95fa71ab39b81477ba78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void insert_base</definition>
        <argsstring>(timebase_type timebase)</argsstring>
        <name>insert_base</name>
        <param>
          <type><ref refid="timebase_8h_1a1eb83a40e21ea632c517395ce4b36d60" kindref="member">timebase_type</ref></type>
          <declname>timebase</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/timebase.c" line="177" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/timebase.c" bodystart="177" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="timebase_8c_1a2ebbe8b5122ba39241aba5ab3abe960a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void remove_base</definition>
        <argsstring>(timebase_type timebase)</argsstring>
        <name>remove_base</name>
        <param>
          <type><ref refid="timebase_8h_1a1eb83a40e21ea632c517395ce4b36d60" kindref="member">timebase_type</ref></type>
          <declname>timebase</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/timebase.c" line="219" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/timebase.c" bodystart="219" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="timebase_8c_1ae919190e330c56cd3d910da716c03b92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="timebase_8h_1a665ac30c6ef78ffb4bda378f09befc2b" kindref="member">call_type</ref></type>
        <definition>call_type remove_call</definition>
        <argsstring>(timebase_type a_timebase)</argsstring>
        <name>remove_call</name>
        <param>
          <type><ref refid="timebase_8h_1a1eb83a40e21ea632c517395ce4b36d60" kindref="member">timebase_type</ref></type>
          <declname>a_timebase</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/timebase.c" line="240" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/timebase.c" bodystart="240" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="timebase_8c_1aaaa00c5ca077b8868f9cd000b801b45d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void set_rate</definition>
        <argsstring>(timebase_type base, time_type rate)</argsstring>
        <name>set_rate</name>
        <param>
          <type><ref refid="timebase_8h_1a1eb83a40e21ea632c517395ce4b36d60" kindref="member">timebase_type</ref></type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="midifns_8h_1a3f787491db5dbc75c21b27d54e9ebae6" kindref="member">time_type</ref></type>
          <declname>rate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/timebase.c" line="275" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/timebase.c" bodystart="275" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="timebase_8c_1a94ab87fc8d67eee7fbac8e06c94af541" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void set_virttime</definition>
        <argsstring>(timebase_type base, time_type vtime)</argsstring>
        <name>set_virttime</name>
        <param>
          <type><ref refid="timebase_8h_1a1eb83a40e21ea632c517395ce4b36d60" kindref="member">timebase_type</ref></type>
          <declname>base</declname>
        </param>
        <param>
          <type><ref refid="midifns_8h_1a3f787491db5dbc75c21b27d54e9ebae6" kindref="member">time_type</ref></type>
          <declname>vtime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/timebase.c" line="297" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/timebase.c" bodystart="297" bodyend="306"/>
      </memberdef>
      <memberdef kind="function" id="timebase_8c_1a90c4e2e12751cf3cb1ee643df6fc7d6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void timebase_use</definition>
        <argsstring>(timebase_type base)</argsstring>
        <name>timebase_use</name>
        <param>
          <type><ref refid="timebase_8h_1a1eb83a40e21ea632c517395ce4b36d60" kindref="member">timebase_type</ref></type>
          <declname>base</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/timebase.c" line="315" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/timebase.c" bodystart="315" bodyend="322"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>timebase.c<sp/>--<sp/>management<sp/>of<sp/>calls,<sp/>time<sp/>bases<sp/>and<sp/>heaps<sp/>for<sp/>moxc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************</highlight></codeline>
<codeline lineno="4"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Change<sp/>Log</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*<sp/><sp/>Date<sp/>|<sp/>Change</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*-----------+-----------------------------------------------------------------</highlight></codeline>
<codeline lineno="7"><highlight class="comment">*<sp/><sp/>2-Apr-91<sp/>|<sp/>JDW<sp/>:<sp/>further<sp/>changes</highlight></codeline>
<codeline lineno="8"><highlight class="comment">*<sp/>21-Mar-92<sp/>|<sp/>GWL<sp/>:<sp/>abort<sp/>recovery</highlight></codeline>
<codeline lineno="9"><highlight class="comment">*<sp/>28-Apr-03<sp/>|<sp/><sp/>DM<sp/>:<sp/>true-&gt;TRUE</highlight></codeline>
<codeline lineno="10"><highlight class="comment">*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stdio.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cext_8h" kindref="compound">cext.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="userio_8h" kindref="compound">userio.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="midifns_8h" kindref="compound">midifns.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="timebase_8h" kindref="compound">timebase.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="moxc_8h" kindref="compound">moxc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="timebase_8h_1a0a255e110445b85f5eac1a90cd8797df" refkind="member"><highlight class="normal"><ref refid="structtimebase__struct" kindref="compound">timebase_type</ref><sp/><ref refid="timebase_8c_1a0a255e110445b85f5eac1a90cd8797df" kindref="member">timebase_queue</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>waiting<sp/>to<sp/>run<sp/>timebase<sp/>queue<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="timebase_8c_1add473bb7a202da29f6ff6a3447a63910" refkind="member"><highlight class="normal"><ref refid="structcall" kindref="compound">call_type</ref><sp/><ref refid="timebase_8c_1add473bb7a202da29f6ff6a3447a63910" kindref="member">callfree</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>free<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="timebase_8c_1a3b16944d3bb2475469f645174b187d6f" kindref="member">fatal</ref>();</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">/****************************************************************************</highlight></codeline>
<codeline lineno="28"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timebase_create</highlight></codeline>
<codeline lineno="29"><highlight class="comment">*<sp/>Inputs:</highlight></codeline>
<codeline lineno="30"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxsize<sp/>is<sp/>the<sp/>initial<sp/>size<sp/>of<sp/>the<sp/>heap</highlight></codeline>
<codeline lineno="31"><highlight class="comment">*<sp/>Outputs:</highlight></codeline>
<codeline lineno="32"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>returns<sp/>an<sp/>initialized<sp/>timebase_type</highlight></codeline>
<codeline lineno="33"><highlight class="comment">****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="timebase_8h_1ae38d62a98f407019296365494b7b1bdb" refkind="member"><highlight class="normal"><ref refid="structtimebase__struct" kindref="compound">timebase_type</ref><sp/><ref refid="timebase_8c_1ae38d62a98f407019296365494b7b1bdb" kindref="member">timebase_create</ref>(maxsize)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref><sp/>maxsize;</highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*error_msg<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Out<sp/>of<sp/>memory<sp/>in<sp/>timebase_create()&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtimebase__struct" kindref="compound">timebase_type</ref><sp/><ref refid="lib_2expat_8h_1a938e186c531ea86ae9adf3c0a649d8fc" kindref="member">base</ref><sp/>=<sp/>(<ref refid="timebase_8h_1a1eb83a40e21ea632c517395ce4b36d60" kindref="member">timebase_type</ref>)<sp/><ref refid="libnyquist_2nyquist_2cmt_2mem_8c_1a93024c2205e7968b36458c0e982efb4f" kindref="member">memget</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structtimebase__struct" kindref="compound">timebase_node</ref>));</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!base)<sp/><ref refid="timebase_8c_1a3b16944d3bb2475469f645174b187d6f" kindref="member">fatal</ref>(error_msg);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structtimebase__struct_1acc66c402d59aa01f42cfa2169ea2af16" kindref="member">next</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structtimebase__struct_1a8fcec62ba28a693e4b2629d330eaf56e" kindref="member">next_time</ref><sp/>=<sp/><ref refid="midifns_8h_1ae583bedb01edb77ee6ceb98e847969cb" kindref="member">MAXTIME</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structtimebase__struct_1a35b158b60735ca665974f52b48b761f4" kindref="member">virt_base</ref><sp/>=<sp/>0L;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structtimebase__struct_1a5430817b264d9280c43a71c1f53fa31e" kindref="member">real_base</ref><sp/>=<sp/>0L;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structtimebase__struct_1a0b7fdc52e2a68a22aef8b948a207fd49" kindref="member">rate</ref><sp/>=<sp/>256L;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structtimebase__struct_1a5f145edb534454276ec7076d3d9ece31" kindref="member">heap_size</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structtimebase__struct_1a7765b91dfd02b085a2a4f6699363ba0b" kindref="member">heap_max</ref><sp/>=<sp/>maxsize;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structtimebase__struct_1afce39c5827a70c2de6249ca2d473539f" kindref="member">heap</ref><sp/>=<sp/>(<ref refid="structcall" kindref="compound">call_type</ref><sp/>*)<sp/><ref refid="libnyquist_2nyquist_2cmt_2mem_8c_1a93024c2205e7968b36458c0e982efb4f" kindref="member">memget</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structcall" kindref="compound">call_type</ref>)<sp/>*<sp/>maxsize);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!base-&gt;<ref refid="structtimebase__struct_1afce39c5827a70c2de6249ca2d473539f" kindref="member">heap</ref>)<sp/><ref refid="timebase_8c_1a3b16944d3bb2475469f645174b187d6f" kindref="member">fatal</ref>(error_msg);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a938e186c531ea86ae9adf3c0a649d8fc" kindref="member">base</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">/****************************************************************************</highlight></codeline>
<codeline lineno="54"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callinsert</highlight></codeline>
<codeline lineno="55"><highlight class="comment">*<sp/>Inputs:</highlight></codeline>
<codeline lineno="56"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>timebase_type<sp/>base:<sp/>the<sp/>time<sp/>base<sp/>and<sp/>heap</highlight></codeline>
<codeline lineno="57"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>call_type<sp/>call:<sp/>the<sp/>call<sp/>to<sp/>insert<sp/>in<sp/>heap</highlight></codeline>
<codeline lineno="58"><highlight class="comment">*<sp/>Outputs:</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>none</highlight></codeline>
<codeline lineno="60"><highlight class="comment">*<sp/>Implementation:</highlight></codeline>
<codeline lineno="61"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>linear<sp/>insertion;<sp/>to<sp/>be<sp/>changed<sp/>to<sp/>heap</highlight></codeline>
<codeline lineno="62"><highlight class="comment">****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="timebase_8h_1ac9d44fde9ef182e42726626abfc0eeda" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="timebase_8c_1ac9d44fde9ef182e42726626abfc0eeda" kindref="member">callinsert</ref>(<ref refid="lib_2expat_8h_1a938e186c531ea86ae9adf3c0a649d8fc" kindref="member">base</ref>,<sp/><ref refid="structcall" kindref="compound">call</ref>)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><ref refid="structtimebase__struct" kindref="compound">timebase_type</ref><sp/><ref refid="lib_2expat_8h_1a938e186c531ea86ae9adf3c0a649d8fc" kindref="member">base</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><ref refid="structcall" kindref="compound">call_type</ref><sp/><ref refid="structcall" kindref="compound">call</ref>;</highlight></codeline>
<codeline lineno="67"><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="structcall" kindref="compound">call_type</ref><sp/>*heap<sp/>=<sp/>base-&gt;heap;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>handle<sp/>overflow<sp/>--<sp/>this<sp/>should<sp/>never<sp/>be<sp/>executed<sp/>if<sp/>the<sp/>user<sp/></highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>gives<sp/>the<sp/>right<sp/>initial<sp/>heap<sp/>size<sp/></highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;heap_size++;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(base-&gt;heap_size<sp/>&gt;=<sp/>base-&gt;heap_max)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structcall" kindref="compound">call_type</ref><sp/>*new_heap<sp/>=<sp/>(<ref refid="structcall" kindref="compound">call_type</ref><sp/>*)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libnyquist_2nyquist_2cmt_2mem_8c_1a93024c2205e7968b36458c0e982efb4f" kindref="member">memget</ref>((base-&gt;heap_max<sp/>&lt;&lt;<sp/>1)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="timebase_8h_1a665ac30c6ef78ffb4bda378f09befc2b" kindref="member">call_type</ref>));</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structcall" kindref="compound">call_type</ref><sp/>*oldptr;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structcall" kindref="compound">call_type</ref><sp/>*newptr;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!new_heap)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="userio_8c_1aa7fe1fd5a722b3baba97b2fb02fa73a1" kindref="member">gprintf</ref>(<ref refid="userio_8h_1abf9c248762203aeb01092b253484d6e0" kindref="member">TRANS</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Out<sp/>of<sp/>space,<sp/>can&apos;t<sp/>allocate<sp/>new<sp/>heap\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cext_8h_1a70928ac722fa556b729a98eab5d3e06f" kindref="member">EXIT</ref>(1);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oldptr<sp/>=<sp/>base-&gt;heap;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newptr<sp/>=<sp/>new_heap;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>base-&gt;heap_max;<sp/>i<sp/>&gt;<sp/>0;<sp/>i--)<sp/>*newptr++<sp/>=<sp/>*oldptr++;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libnyquist_2nyquist_2cmt_2mem_8c_1a01a63e7754f05c50ef87c381ff74cbf4" kindref="member">memfree</ref>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>heap,<sp/>base-&gt;heap_max<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structcall" kindref="compound">call_type</ref>));</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;heap<sp/>=<sp/>heap<sp/>=<sp/>new_heap;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;heap_max<sp/>=<sp/>(base-&gt;heap_max<sp/>&lt;&lt;<sp/>1);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>now<sp/>do<sp/>the<sp/>heap<sp/>insert<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>i<sp/>=<sp/>base-&gt;heap_size;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>parent<sp/>=<sp/>i<sp/>&gt;&gt;<sp/>1;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(heap[parent]-&gt;u.<ref refid="structcall_1a50f800b41e602b0ba7ff1052e4ad6a92" kindref="member">e</ref>.time<sp/>&lt;<sp/>call-&gt;<ref refid="structcall_1a0f49d493b3e8902b0879fe1c280b408a" kindref="member">u</ref>.<ref refid="structcall_1a50f800b41e602b0ba7ff1052e4ad6a92" kindref="member">e</ref>.time<sp/>||</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(heap[parent]-&gt;<ref refid="structcall_1a0f49d493b3e8902b0879fe1c280b408a" kindref="member">u</ref>.<ref refid="structcall_1a50f800b41e602b0ba7ff1052e4ad6a92" kindref="member">e</ref>.time<sp/>==<sp/>call-&gt;<ref refid="structcall_1a0f49d493b3e8902b0879fe1c280b408a" kindref="member">u</ref>.<ref refid="structcall_1a50f800b41e602b0ba7ff1052e4ad6a92" kindref="member">e</ref>.time<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>heap[parent]-&gt;<ref refid="structcall_1a0f49d493b3e8902b0879fe1c280b408a" kindref="member">u</ref>.<ref refid="structcall_1a50f800b41e602b0ba7ff1052e4ad6a92" kindref="member">e</ref>.priority<sp/>&lt;=<sp/>call-&gt;<ref refid="structcall_1a0f49d493b3e8902b0879fe1c280b408a" kindref="member">u</ref>.<ref refid="structcall_1a50f800b41e602b0ba7ff1052e4ad6a92" kindref="member">e</ref>.priority))<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>heap[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>heap[parent];</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>parent;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>heap[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>call;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>next_time<sp/>might<sp/>change,<sp/>reinsert<sp/>base<sp/>into<sp/>queue<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(heap[1]<sp/>==<sp/>call)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="timebase_8c_1a2ebbe8b5122ba39241aba5ab3abe960a" kindref="member">remove_base</ref>(base);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="timebase_8c_1a187d243c612d95fa71ab39b81477ba78" kindref="member">insert_base</ref>(base);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="comment">/****************************************************************************</highlight></codeline>
<codeline lineno="115"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callshow</highlight></codeline>
<codeline lineno="116"><highlight class="comment">*<sp/>Inputs:</highlight></codeline>
<codeline lineno="117"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>calltype<sp/>call:<sp/>the<sp/>call<sp/>to<sp/>show</highlight></codeline>
<codeline lineno="118"><highlight class="comment">*<sp/>Effect:<sp/></highlight></codeline>
<codeline lineno="119"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>prints<sp/>a<sp/>description<sp/>of<sp/>call</highlight></codeline>
<codeline lineno="120"><highlight class="comment">*<sp/>Assumes:</highlight></codeline>
<codeline lineno="121"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>call<sp/>is<sp/>not<sp/>null</highlight></codeline>
<codeline lineno="122"><highlight class="comment">****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="timebase_8h_1a88e3dc7a4a48706282f688d221795a8b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="timebase_8c_1a88e3dc7a4a48706282f688d221795a8b" kindref="member">callshow</ref>(<ref refid="structcall" kindref="compound">call</ref>)</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcall" kindref="compound">call_type</ref><sp/><ref refid="structcall" kindref="compound">call</ref>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal">{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="userio_8c_1aa7fe1fd5a722b3baba97b2fb02fa73a1" kindref="member">gprintf</ref>(<ref refid="userio_8h_1abf9c248762203aeb01092b253484d6e0" kindref="member">TRANS</ref>,</highlight><highlight class="stringliteral">&quot;address:<sp/><sp/>%lx\n&quot;</highlight><highlight class="normal">,<sp/>(<ref refid="_s_t_types_8h_1a718b4eb2652c286f4d42dc18a8e71a1a" kindref="member">ulong</ref>)call);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="userio_8c_1aa7fe1fd5a722b3baba97b2fb02fa73a1" kindref="member">gprintf</ref>(<ref refid="userio_8h_1abf9c248762203aeb01092b253484d6e0" kindref="member">TRANS</ref>,</highlight><highlight class="stringliteral">&quot;time:<sp/><sp/><sp/><sp/><sp/>%ld\n&quot;</highlight><highlight class="normal">,<sp/>call-&gt;u.e.time);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="userio_8c_1aa7fe1fd5a722b3baba97b2fb02fa73a1" kindref="member">gprintf</ref>(<ref refid="userio_8h_1abf9c248762203aeb01092b253484d6e0" kindref="member">TRANS</ref>,</highlight><highlight class="stringliteral">&quot;routine:<sp/><sp/>%lx\n&quot;</highlight><highlight class="normal">,<sp/>(<ref refid="_s_t_types_8h_1a718b4eb2652c286f4d42dc18a8e71a1a" kindref="member">ulong</ref>)call-&gt;u.e.routine);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="userio_8c_1aa7fe1fd5a722b3baba97b2fb02fa73a1" kindref="member">gprintf</ref>(<ref refid="userio_8h_1abf9c248762203aeb01092b253484d6e0" kindref="member">TRANS</ref>,</highlight><highlight class="stringliteral">&quot;parameters:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="timebase_8h_1aea67202bb7db9b2ce54661256974abc0" kindref="member">MAX_CALL_ARGS</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="userio_8c_1aa7fe1fd5a722b3baba97b2fb02fa73a1" kindref="member">gprintf</ref>(<ref refid="userio_8h_1abf9c248762203aeb01092b253484d6e0" kindref="member">TRANS</ref>,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>call-&gt;u.e.p.arg[i]);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="userio_8c_1aa7fe1fd5a722b3baba97b2fb02fa73a1" kindref="member">gprintf</ref>(<ref refid="userio_8h_1abf9c248762203aeb01092b253484d6e0" kindref="member">TRANS</ref>,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">/***************************************************************</highlight></codeline>
<codeline lineno="138"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fatal</highlight></codeline>
<codeline lineno="139"><highlight class="comment">*</highlight></codeline>
<codeline lineno="140"><highlight class="comment">*<sp/>Input<sp/>:<sp/>msg:<sp/>a<sp/>message<sp/>to<sp/>be<sp/>displayed</highlight></codeline>
<codeline lineno="141"><highlight class="comment">*<sp/>Effect:<sp/>print<sp/>message<sp/>and<sp/>exit<sp/>program</highlight></codeline>
<codeline lineno="142"><highlight class="comment">***************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="timebase_8c_1af98ccd7b05f17d24d18e3f3b91ea3c98" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="timebase_8c_1a3b16944d3bb2475469f645174b187d6f" kindref="member">fatal</ref>(msg)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>char<sp/>*msg;</highlight></codeline>
<codeline lineno="146"><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="userio_8c_1aa7fe1fd5a722b3baba97b2fb02fa73a1" kindref="member">gprintf</ref>(<ref refid="userio_8h_1a4362ac890f9e50aac5882590deedde41" kindref="member">FATAL</ref>,<sp/>msg);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cext_8h_1a70928ac722fa556b729a98eab5d3e06f" kindref="member">EXIT</ref>(1);</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="comment">/***************************************************************</highlight></codeline>
<codeline lineno="152"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timebase_free</highlight></codeline>
<codeline lineno="153"><highlight class="comment">*</highlight></codeline>
<codeline lineno="154"><highlight class="comment">*<sp/>Input<sp/>:<sp/>a<sp/>time<sp/>base</highlight></codeline>
<codeline lineno="155"><highlight class="comment">*<sp/>Effect:<sp/>deallocate<sp/>the<sp/>time<sp/>base</highlight></codeline>
<codeline lineno="156"><highlight class="comment">***************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="timebase_8h_1a59267702c77411f63420fe4c26d72290" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="timebase_8c_1a59267702c77411f63420fe4c26d72290" kindref="member">timebase_free</ref>(<ref refid="moxc_8c_1ab19ffac9ae6cc0109f089a377dfd7fa1" kindref="member">timebase</ref>)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><ref refid="structtimebase__struct" kindref="compound">timebase_type</ref><sp/><ref refid="moxc_8c_1ab19ffac9ae6cc0109f089a377dfd7fa1" kindref="member">timebase</ref>;</highlight></codeline>
<codeline lineno="160"><highlight class="normal">{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="timebase_8c_1a2ebbe8b5122ba39241aba5ab3abe960a" kindref="member">remove_base</ref>(timebase);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(timebase-&gt;heap)<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libnyquist_2nyquist_2cmt_2mem_8c_1a01a63e7754f05c50ef87c381ff74cbf4" kindref="member">memfree</ref>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>timebase-&gt;heap,</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(timebase-&gt;heap_max<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structcall" kindref="compound">call_type</ref>)));</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libnyquist_2nyquist_2cmt_2mem_8c_1a01a63e7754f05c50ef87c381ff74cbf4" kindref="member">memfree</ref>((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>timebase,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structtimebase__struct" kindref="compound">timebase_node</ref>));</highlight></codeline>
<codeline lineno="167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="comment">/***************************************************************</highlight></codeline>
<codeline lineno="170"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>insert_base</highlight></codeline>
<codeline lineno="171"><highlight class="comment">*</highlight></codeline>
<codeline lineno="172"><highlight class="comment">*<sp/>Input<sp/>:<sp/>a<sp/>time<sp/>base<sp/>not<sp/>in<sp/>the<sp/>list<sp/></highlight></codeline>
<codeline lineno="173"><highlight class="comment">*<sp/>Effect:<sp/>insert<sp/>timebase<sp/>at<sp/>the<sp/>appropriate<sp/>spot<sp/>in<sp/>the<sp/>list</highlight></codeline>
<codeline lineno="174"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>computes<sp/>the<sp/>next_time<sp/>field<sp/>from<sp/>the<sp/>top<sp/>of<sp/>the<sp/>heap</highlight></codeline>
<codeline lineno="175"><highlight class="comment">***************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177" refid="timebase_8h_1a187d243c612d95fa71ab39b81477ba78" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="timebase_8c_1a187d243c612d95fa71ab39b81477ba78" kindref="member">insert_base</ref>(<ref refid="moxc_8c_1ab19ffac9ae6cc0109f089a377dfd7fa1" kindref="member">timebase</ref>)</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><ref refid="structtimebase__struct" kindref="compound">timebase_type</ref><sp/><ref refid="moxc_8c_1ab19ffac9ae6cc0109f089a377dfd7fa1" kindref="member">timebase</ref>;</highlight></codeline>
<codeline lineno="179"><highlight class="normal">{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="structtimebase__struct" kindref="compound">timebase_type</ref><sp/>*ptr<sp/>=<sp/>&amp;<ref refid="timebase_8c_1a0a255e110445b85f5eac1a90cd8797df" kindref="member">timebase_queue</ref>;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="midifns_8h_1a3f787491db5dbc75c21b27d54e9ebae6" kindref="member">time_type</ref><sp/>next_time<sp/>=<sp/><ref refid="midifns_8h_1ae583bedb01edb77ee6ceb98e847969cb" kindref="member">MAXTIME</ref>;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>compute<sp/>next_time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(timebase-&gt;heap_size<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="structcall" kindref="compound">call_type</ref><sp/><ref refid="structcall" kindref="compound">call</ref><sp/>=<sp/>timebase-&gt;heap[1];</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>virt<sp/>to<sp/>real<sp/>calculation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_time<sp/>=<sp/>(<ref refid="timebase_8h_1a499c62319da34a694306aa5cb3a5d721" kindref="member">virt_to_real_256</ref>(timebase,<sp/>call-&gt;<ref refid="structcall_1a0f49d493b3e8902b0879fe1c280b408a" kindref="member">u</ref>.<ref refid="structcall_1a50f800b41e602b0ba7ff1052e4ad6a92" kindref="member">e</ref>.time)<sp/>&amp;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xFFFFFF00)<sp/>+<sp/>call-&gt;<ref refid="structcall_1a0f49d493b3e8902b0879fe1c280b408a" kindref="member">u</ref>.<ref refid="structcall_1a50f800b41e602b0ba7ff1052e4ad6a92" kindref="member">e</ref>.priority;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/>gprintf(TRANS,</highlight></codeline>
<codeline lineno="189"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;insert<sp/>next_time<sp/>is<sp/>%ld,<sp/>vt<sp/>%ld,<sp/>rb<sp/>%ld,<sp/>vb<sp/>%ld<sp/>rt<sp/>%ld\n&quot;,</highlight></codeline>
<codeline lineno="190"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_time,<sp/>timebase-&gt;heap[1]-&gt;u.e.time,</highlight></codeline>
<codeline lineno="191"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timebase-&gt;real_base,<sp/>timebase-&gt;virt_base,<sp/>timebase-&gt;rate);</highlight></codeline>
<codeline lineno="192"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>timebase-&gt;next_time<sp/>=<sp/>next_time;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(next_time<sp/>!=<sp/><ref refid="midifns_8h_1ae583bedb01edb77ee6ceb98e847969cb" kindref="member">MAXTIME</ref>)<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>insert<sp/>into<sp/>the<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>*ptr)<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ptr<sp/>=<sp/><ref refid="moxc_8c_1ab19ffac9ae6cc0109f089a377dfd7fa1" kindref="member">timebase</ref>;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timebase-&gt;<ref refid="structtimebase__struct_1acc66c402d59aa01f42cfa2169ea2af16" kindref="member">next</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*ptr)-&gt;next_time<sp/>&gt;=<sp/>next_time)<sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timebase-&gt;next<sp/>=<sp/>*ptr;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ptr<sp/>=<sp/><ref refid="moxc_8c_1ab19ffac9ae6cc0109f089a377dfd7fa1" kindref="member">timebase</ref>;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>ptr<sp/>=<sp/>&amp;((*ptr)-&gt;next);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="comment">/***************************************************************</highlight></codeline>
<codeline lineno="213"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remove_base</highlight></codeline>
<codeline lineno="214"><highlight class="comment">*</highlight></codeline>
<codeline lineno="215"><highlight class="comment">*<sp/>Input<sp/>:<sp/>timebase</highlight></codeline>
<codeline lineno="216"><highlight class="comment">*<sp/>Effect:<sp/>if<sp/>timebase<sp/>is<sp/>in<sp/>the<sp/>queue,<sp/>remove<sp/>it</highlight></codeline>
<codeline lineno="217"><highlight class="comment">***************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219" refid="timebase_8h_1a2ebbe8b5122ba39241aba5ab3abe960a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="timebase_8c_1a2ebbe8b5122ba39241aba5ab3abe960a" kindref="member">remove_base</ref>(<ref refid="moxc_8c_1ab19ffac9ae6cc0109f089a377dfd7fa1" kindref="member">timebase</ref>)</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><ref refid="structtimebase__struct" kindref="compound">timebase_type</ref><sp/><ref refid="moxc_8c_1ab19ffac9ae6cc0109f089a377dfd7fa1" kindref="member">timebase</ref>;</highlight></codeline>
<codeline lineno="221"><highlight class="normal">{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtimebase__struct" kindref="compound">timebase_type</ref><sp/>*ptr<sp/>=<sp/>&amp;<ref refid="timebase_8c_1a0a255e110445b85f5eac1a90cd8797df" kindref="member">timebase_queue</ref>;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*ptr)<sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*ptr<sp/>==<sp/>timebase)<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ptr<sp/>=<sp/>timebase-&gt;<ref refid="structtimebase__struct_1acc66c402d59aa01f42cfa2169ea2af16" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>ptr<sp/>=<sp/>&amp;((*ptr)-&gt;next);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="comment">/***************************************************************</highlight></codeline>
<codeline lineno="232"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remove_call</highlight></codeline>
<codeline lineno="233"><highlight class="comment">*</highlight></codeline>
<codeline lineno="234"><highlight class="comment">*<sp/>Input<sp/>:<sp/>a<sp/>timebase<sp/>--<sp/>passed<sp/>as<sp/>a<sp/>global</highlight></codeline>
<codeline lineno="235"><highlight class="comment">*<sp/>Assumes:<sp/>a_timebase-&gt;heap_size<sp/>&gt;<sp/>0</highlight></codeline>
<codeline lineno="236"><highlight class="comment">*<sp/>Returns:<sp/>the<sp/>earliest<sp/>call<sp/>in<sp/>the<sp/>queue</highlight></codeline>
<codeline lineno="237"><highlight class="comment">*<sp/>Effect:<sp/>removes<sp/>the<sp/>earliest<sp/>call<sp/>in<sp/>the<sp/>queue</highlight></codeline>
<codeline lineno="238"><highlight class="comment">***************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240" refid="timebase_8h_1ae919190e330c56cd3d910da716c03b92" refkind="member"><highlight class="normal"><ref refid="structcall" kindref="compound">call_type</ref><sp/><ref refid="timebase_8c_1ae919190e330c56cd3d910da716c03b92" kindref="member">remove_call</ref>(<ref refid="structtimebase__struct" kindref="compound">timebase_type</ref><sp/>a_timebase)</highlight></codeline>
<codeline lineno="241"><highlight class="normal">{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="structcall" kindref="compound">call_type</ref><sp/>*heap<sp/>=<sp/>a_timebase-&gt;<ref refid="structtimebase__struct_1afce39c5827a70c2de6249ca2d473539f" kindref="member">heap</ref>;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcall" kindref="compound">call_type</ref><sp/>result<sp/>=<sp/>heap[1];</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="structcall" kindref="compound">call_type</ref><sp/>large;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>child<sp/>=<sp/>i<sp/>&lt;&lt;<sp/>1;;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>large<sp/>=<sp/>heap[a_timebase-&gt;<ref refid="structtimebase__struct_1a5f145edb534454276ec7076d3d9ece31" kindref="member">heap_size</ref>--];</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(child<sp/>&lt;=<sp/>a_timebase-&gt;heap_size)<sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(child<sp/>+<sp/>1<sp/>&lt;=<sp/>a_timebase-&gt;<ref refid="structtimebase__struct_1a5f145edb534454276ec7076d3d9ece31" kindref="member">heap_size</ref>)<sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(heap[child<sp/>+<sp/>1]-&gt;u.<ref refid="structcall_1a50f800b41e602b0ba7ff1052e4ad6a92" kindref="member">e</ref>.time<sp/>&lt;<sp/>heap[child]-&gt;<ref refid="structcall_1a0f49d493b3e8902b0879fe1c280b408a" kindref="member">u</ref>.<ref refid="structcall_1a50f800b41e602b0ba7ff1052e4ad6a92" kindref="member">e</ref>.time<sp/>||</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(heap[child<sp/>+<sp/>1]-&gt;<ref refid="structcall_1a0f49d493b3e8902b0879fe1c280b408a" kindref="member">u</ref>.<ref refid="structcall_1a50f800b41e602b0ba7ff1052e4ad6a92" kindref="member">e</ref>.time<sp/>==<sp/>heap[child]-&gt;<ref refid="structcall_1a0f49d493b3e8902b0879fe1c280b408a" kindref="member">u</ref>.<ref refid="structcall_1a50f800b41e602b0ba7ff1052e4ad6a92" kindref="member">e</ref>.time<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>heap[child<sp/>+<sp/>1]-&gt;<ref refid="structcall_1a0f49d493b3e8902b0879fe1c280b408a" kindref="member">u</ref>.<ref refid="structcall_1a50f800b41e602b0ba7ff1052e4ad6a92" kindref="member">e</ref>.priority<sp/>&lt;<sp/>heap[child]-&gt;<ref refid="structcall_1a0f49d493b3e8902b0879fe1c280b408a" kindref="member">u</ref>.<ref refid="structcall_1a50f800b41e602b0ba7ff1052e4ad6a92" kindref="member">e</ref>.priority))</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>child++;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>child<sp/>is<sp/>now<sp/>the<sp/>index<sp/>of<sp/>the<sp/>least<sp/>child<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(large-&gt;<ref refid="structcall_1a0f49d493b3e8902b0879fe1c280b408a" kindref="member">u</ref>.<ref refid="structcall_1a50f800b41e602b0ba7ff1052e4ad6a92" kindref="member">e</ref>.time<sp/>&lt;<sp/>heap[child]-&gt;<ref refid="structcall_1a0f49d493b3e8902b0879fe1c280b408a" kindref="member">u</ref>.<ref refid="structcall_1a50f800b41e602b0ba7ff1052e4ad6a92" kindref="member">e</ref>.time<sp/>||</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(large-&gt;<ref refid="structcall_1a0f49d493b3e8902b0879fe1c280b408a" kindref="member">u</ref>.<ref refid="structcall_1a50f800b41e602b0ba7ff1052e4ad6a92" kindref="member">e</ref>.time<sp/>==<sp/>heap[child]-&gt;<ref refid="structcall_1a0f49d493b3e8902b0879fe1c280b408a" kindref="member">u</ref>.<ref refid="structcall_1a50f800b41e602b0ba7ff1052e4ad6a92" kindref="member">e</ref>.time<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>large-&gt;<ref refid="structcall_1a0f49d493b3e8902b0879fe1c280b408a" kindref="member">u</ref>.<ref refid="structcall_1a50f800b41e602b0ba7ff1052e4ad6a92" kindref="member">e</ref>.priority<sp/>&lt;=<sp/>heap[child]-&gt;<ref refid="structcall_1a0f49d493b3e8902b0879fe1c280b408a" kindref="member">u</ref>.<ref refid="structcall_1a50f800b41e602b0ba7ff1052e4ad6a92" kindref="member">e</ref>.priority))<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>swap<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>heap[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>heap[child];</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>child;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>child<sp/>=<sp/>i<sp/>&lt;&lt;<sp/>1;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>heap[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>large;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="266"><highlight class="normal">}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="comment">/***************************************************************</highlight></codeline>
<codeline lineno="269"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set_rate</highlight></codeline>
<codeline lineno="270"><highlight class="comment">*</highlight></codeline>
<codeline lineno="271"><highlight class="comment">*<sp/>Input<sp/>:<sp/>timebase<sp/>and<sp/>new<sp/>rate</highlight></codeline>
<codeline lineno="272"><highlight class="comment">*<sp/>Effect:<sp/>makes<sp/>the<sp/>current<sp/>rate<sp/>of<sp/>timebase<sp/>be<sp/>rate</highlight></codeline>
<codeline lineno="273"><highlight class="comment">***************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275" refid="timebase_8h_1aaaa00c5ca077b8868f9cd000b801b45d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="timebase_8c_1aaaa00c5ca077b8868f9cd000b801b45d" kindref="member">set_rate</ref>(<ref refid="lib_2expat_8h_1a938e186c531ea86ae9adf3c0a649d8fc" kindref="member">base</ref>,<sp/><ref refid="test__lib_f_l_a_c_2format_8c_1a960ad82c3ba394a46f17f5f6146c93ea" kindref="member">rate</ref>)</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><ref refid="structtimebase__struct" kindref="compound">timebase_type</ref><sp/><ref refid="lib_2expat_8h_1a938e186c531ea86ae9adf3c0a649d8fc" kindref="member">base</ref>;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><ref refid="midifns_8h_1a3f787491db5dbc75c21b27d54e9ebae6" kindref="member">time_type</ref><sp/><ref refid="test__lib_f_l_a_c_2format_8c_1a960ad82c3ba394a46f17f5f6146c93ea" kindref="member">rate</ref>;</highlight></codeline>
<codeline lineno="278"><highlight class="normal">{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(base<sp/>==<sp/><ref refid="moxc_8c_1ab19ffac9ae6cc0109f089a377dfd7fa1" kindref="member">timebase</ref>)<sp/>base-&gt;virt_base<sp/>=<sp/><ref refid="moxc_8c_1ac473afd8b92b443dca44674fa889f697" kindref="member">virttime</ref>;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>base-&gt;virt_base<sp/>=<sp/><ref refid="timebase_8h_1af5c38a56e37b43d2582aa0f1a3148e84" kindref="member">real_to_virt</ref>(base,<sp/><ref refid="moxc_8c_1ab21b8a451636325431b51f29601ff426" kindref="member">eventtime</ref>);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;real_base<sp/>=<sp/><ref refid="moxc_8c_1ab21b8a451636325431b51f29601ff426" kindref="member">eventtime</ref>;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;rate<sp/>=<sp/><ref refid="test__lib_f_l_a_c_2format_8c_1a960ad82c3ba394a46f17f5f6146c93ea" kindref="member">rate</ref>;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>gprintf(TRANS,<sp/>&quot;new<sp/>real_base<sp/>%ld<sp/>virt_base<sp/>%ld\n&quot;,</highlight></codeline>
<codeline lineno="284"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base-&gt;real_base,<sp/>base-&gt;virt_base);</highlight></codeline>
<codeline lineno="285"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="timebase_8c_1a2ebbe8b5122ba39241aba5ab3abe960a" kindref="member">remove_base</ref>(base);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="timebase_8c_1a187d243c612d95fa71ab39b81477ba78" kindref="member">insert_base</ref>(base);</highlight></codeline>
<codeline lineno="288"><highlight class="normal">}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="comment">/***************************************************************</highlight></codeline>
<codeline lineno="291"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set_virttime</highlight></codeline>
<codeline lineno="292"><highlight class="comment">*</highlight></codeline>
<codeline lineno="293"><highlight class="comment">*<sp/>Input<sp/>:<sp/>virtual<sp/>time</highlight></codeline>
<codeline lineno="294"><highlight class="comment">*<sp/>Effect:<sp/>makes<sp/>the<sp/>current<sp/>virtual<sp/>time<sp/>of<sp/>timebase<sp/>be<sp/>vtime</highlight></codeline>
<codeline lineno="295"><highlight class="comment">***************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297" refid="timebase_8h_1a94ab87fc8d67eee7fbac8e06c94af541" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="timebase_8c_1a94ab87fc8d67eee7fbac8e06c94af541" kindref="member">set_virttime</ref>(<ref refid="lib_2expat_8h_1a938e186c531ea86ae9adf3c0a649d8fc" kindref="member">base</ref>,<sp/>vtime)</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><ref refid="structtimebase__struct" kindref="compound">timebase_type</ref><sp/><ref refid="lib_2expat_8h_1a938e186c531ea86ae9adf3c0a649d8fc" kindref="member">base</ref>;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><ref refid="midifns_8h_1a3f787491db5dbc75c21b27d54e9ebae6" kindref="member">time_type</ref><sp/>vtime;</highlight></codeline>
<codeline lineno="300"><highlight class="normal">{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;<ref refid="structtimebase__struct_1a5430817b264d9280c43a71c1f53fa31e" kindref="member">real_base</ref><sp/>=<sp/><ref refid="moxc_8c_1ab21b8a451636325431b51f29601ff426" kindref="member">eventtime</ref>;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>base-&gt;virt_base<sp/>=<sp/>vtime;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(base<sp/>==<sp/><ref refid="moxc_8c_1ab19ffac9ae6cc0109f089a377dfd7fa1" kindref="member">timebase</ref>)<sp/><ref refid="moxc_8c_1ac473afd8b92b443dca44674fa889f697" kindref="member">virttime</ref><sp/>=<sp/>vtime;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="timebase_8c_1a2ebbe8b5122ba39241aba5ab3abe960a" kindref="member">remove_base</ref>(base);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="timebase_8c_1a187d243c612d95fa71ab39b81477ba78" kindref="member">insert_base</ref>(base);</highlight></codeline>
<codeline lineno="306"><highlight class="normal">}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="comment">/***************************************************************</highlight></codeline>
<codeline lineno="309"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timebase_use</highlight></codeline>
<codeline lineno="310"><highlight class="comment">*</highlight></codeline>
<codeline lineno="311"><highlight class="comment">*<sp/>Input<sp/>:<sp/>a<sp/>timebase<sp/>to<sp/>use<sp/>for<sp/>scheduling</highlight></codeline>
<codeline lineno="312"><highlight class="comment">*<sp/>Effect:<sp/>sets<sp/>up<sp/>globals:<sp/>timebase,<sp/>virttime</highlight></codeline>
<codeline lineno="313"><highlight class="comment">***************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315" refid="timebase_8h_1a90c4e2e12751cf3cb1ee643df6fc7d6f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="timebase_8c_1a90c4e2e12751cf3cb1ee643df6fc7d6f" kindref="member">timebase_use</ref>(<ref refid="lib_2expat_8h_1a938e186c531ea86ae9adf3c0a649d8fc" kindref="member">base</ref>)</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/>register<sp/><ref refid="structtimebase__struct" kindref="compound">timebase_type</ref><sp/><ref refid="lib_2expat_8h_1a938e186c531ea86ae9adf3c0a649d8fc" kindref="member">base</ref>;</highlight></codeline>
<codeline lineno="317"><highlight class="normal">{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="moxc_8c_1ab19ffac9ae6cc0109f089a377dfd7fa1" kindref="member">timebase</ref><sp/>!=<sp/>base)<sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="moxc_8c_1ab19ffac9ae6cc0109f089a377dfd7fa1" kindref="member">timebase</ref><sp/>=<sp/><ref refid="lib_2expat_8h_1a938e186c531ea86ae9adf3c0a649d8fc" kindref="member">base</ref>;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="moxc_8c_1ac473afd8b92b443dca44674fa889f697" kindref="member">virttime</ref><sp/>=<sp/><ref refid="timebase_8h_1af5c38a56e37b43d2582aa0f1a3148e84" kindref="member">real_to_virt</ref>(base,<sp/><ref refid="moxc_8c_1ab21b8a451636325431b51f29601ff426" kindref="member">eventtime</ref>);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/timebase.c"/>
  </compounddef>
</doxygen>
