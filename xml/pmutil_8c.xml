<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="pmutil_8c" kind="file" language="C++">
    <compoundname>pmutil.c</compoundname>
    <includes local="no">stdlib.h</includes>
    <includes refid="assert_8h" local="no">assert.h</includes>
    <includes local="no">string.h</includes>
    <includes refid="portmidi_8h" local="yes">portmidi.h</includes>
    <includes refid="pmutil_8h" local="yes">pmutil.h</includes>
    <includes refid="pminternal_8h" local="yes">pminternal.h</includes>
    <incdepgraph>
      <node id="30822">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/pmutil.c</label>
        <link refid="pmutil.c"/>
        <childnode refid="30823" relation="include">
        </childnode>
        <childnode refid="30824" relation="include">
        </childnode>
        <childnode refid="30825" relation="include">
        </childnode>
        <childnode refid="30826" relation="include">
        </childnode>
        <childnode refid="30828" relation="include">
        </childnode>
        <childnode refid="30829" relation="include">
        </childnode>
      </node>
      <node id="30828">
        <label>pmutil.h</label>
        <link refid="pmutil_8h"/>
      </node>
      <node id="30827">
        <label>stdint.h</label>
      </node>
      <node id="30823">
        <label>stdlib.h</label>
      </node>
      <node id="30824">
        <label>assert.h</label>
        <link refid="assert_8h"/>
      </node>
      <node id="30829">
        <label>pminternal.h</label>
        <link refid="pminternal_8h"/>
      </node>
      <node id="30825">
        <label>string.h</label>
      </node>
      <node id="30826">
        <label>portmidi.h</label>
        <link refid="portmidi_8h"/>
        <childnode refid="30827" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="struct_pm_queue_rep" prot="public">PmQueueRep</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="pmutil_8c_1a4b9e5baad25b1efbf575dd928d4c6f43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="porttime_8h_1ad478fb637833fb6b1a4bdb25a03f4662" kindref="member">PMEXPORT</ref> <ref refid="pmutil_8h_1aaffd2b634e54baa4759ee5dd2a32f717" kindref="member">PmQueue</ref> *</type>
        <definition>PMEXPORT PmQueue* Pm_QueueCreate</definition>
        <argsstring>(long num_msgs, int32_t bytes_per_msg)</argsstring>
        <name>Pm_QueueCreate</name>
        <param>
          <type>long</type>
          <declname>num_msgs</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a37994e3b11c72957c6f454c6ec96d43d" kindref="member">int32_t</ref></type>
          <declname>bytes_per_msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/pmutil.c" line="33" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/pmutil.c" bodystart="33" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="pmutil_8c_1a4dac98b6791b777886ea7729a33d3b43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="porttime_8h_1ad478fb637833fb6b1a4bdb25a03f4662" kindref="member">PMEXPORT</ref> <ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref></type>
        <definition>PMEXPORT PmError Pm_QueueDestroy</definition>
        <argsstring>(PmQueue *q)</argsstring>
        <name>Pm_QueueDestroy</name>
        <param>
          <type><ref refid="pmutil_8h_1aaffd2b634e54baa4759ee5dd2a32f717" kindref="member">PmQueue</ref> *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/pmutil.c" line="70" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/pmutil.c" bodystart="70" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="pmutil_8c_1aa1fa17b38e0037c212b1b69a55f0cd00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="porttime_8h_1ad478fb637833fb6b1a4bdb25a03f4662" kindref="member">PMEXPORT</ref> <ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref></type>
        <definition>PMEXPORT PmError Pm_Dequeue</definition>
        <argsstring>(PmQueue *q, void *msg)</argsstring>
        <name>Pm_Dequeue</name>
        <param>
          <type><ref refid="pmutil_8h_1aaffd2b634e54baa4759ee5dd2a32f717" kindref="member">PmQueue</ref> *</type>
          <declname>q</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/pmutil.c" line="85" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/pmutil.c" bodystart="85" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="pmutil_8c_1a6d791f67a1bf79cd67db2630947d41a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="porttime_8h_1ad478fb637833fb6b1a4bdb25a03f4662" kindref="member">PMEXPORT</ref> <ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref></type>
        <definition>PMEXPORT PmError Pm_SetOverflow</definition>
        <argsstring>(PmQueue *q)</argsstring>
        <name>Pm_SetOverflow</name>
        <param>
          <type><ref refid="pmutil_8h_1aaffd2b634e54baa4759ee5dd2a32f717" kindref="member">PmQueue</ref> *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/pmutil.c" line="164" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/pmutil.c" bodystart="164" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="pmutil_8c_1adb3212e6e63eca2f8e0af7e59e98e12d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="porttime_8h_1ad478fb637833fb6b1a4bdb25a03f4662" kindref="member">PMEXPORT</ref> <ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref></type>
        <definition>PMEXPORT PmError Pm_Enqueue</definition>
        <argsstring>(PmQueue *q, void *msg)</argsstring>
        <name>Pm_Enqueue</name>
        <param>
          <type><ref refid="pmutil_8h_1aaffd2b634e54baa4759ee5dd2a32f717" kindref="member">PmQueue</ref> *</type>
          <declname>q</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/pmutil.c" line="179" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/pmutil.c" bodystart="179" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="pmutil_8c_1a2d5a41d8cf27bc955442685a58ac8782" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="porttime_8h_1ad478fb637833fb6b1a4bdb25a03f4662" kindref="member">PMEXPORT</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>PMEXPORT int Pm_QueueEmpty</definition>
        <argsstring>(PmQueue *q)</argsstring>
        <name>Pm_QueueEmpty</name>
        <param>
          <type><ref refid="pmutil_8h_1aaffd2b634e54baa4759ee5dd2a32f717" kindref="member">PmQueue</ref> *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/pmutil.c" line="221" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/pmutil.c" bodystart="221" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="pmutil_8c_1a06751092be9985f765c2a6f3ddf3fc39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="porttime_8h_1ad478fb637833fb6b1a4bdb25a03f4662" kindref="member">PMEXPORT</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>PMEXPORT int Pm_QueueFull</definition>
        <argsstring>(PmQueue *q)</argsstring>
        <name>Pm_QueueFull</name>
        <param>
          <type><ref refid="pmutil_8h_1aaffd2b634e54baa4759ee5dd2a32f717" kindref="member">PmQueue</ref> *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/pmutil.c" line="229" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/pmutil.c" bodystart="229" bodyend="245"/>
      </memberdef>
      <memberdef kind="function" id="pmutil_8c_1abfbe351faff724cae21d403e3f71652a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="porttime_8h_1ad478fb637833fb6b1a4bdb25a03f4662" kindref="member">PMEXPORT</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
        <definition>PMEXPORT void* Pm_QueuePeek</definition>
        <argsstring>(PmQueue *q)</argsstring>
        <name>Pm_QueuePeek</name>
        <param>
          <type><ref refid="pmutil_8h_1aaffd2b634e54baa4759ee5dd2a32f717" kindref="member">PmQueue</ref> *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/pmutil.c" line="248" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/pmutil.c" bodystart="248" bodyend="283"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>pmutil.c<sp/>--<sp/>some<sp/>helpful<sp/>utilities<sp/>for<sp/>building<sp/>midi</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>applications<sp/>that<sp/>use<sp/>PortMidi</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="assert_8h" kindref="compound">assert.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="portmidi_8h" kindref="compound">portmidi.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pmutil_8h" kindref="compound">pmutil.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pminternal_8h" kindref="compound">pminternal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>bzero(addr,<sp/>siz)<sp/>memset(addr,<sp/>0,<sp/>siz)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#define<sp/>QUEUE_DEBUG<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>QUEUE_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stdio.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="struct_pm_queue_rep" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="21" refid="struct_pm_queue_rep_1ab516ccc6cedbf2ab076e63ad122c10a5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="struct_pm_queue_rep_1ab516ccc6cedbf2ab076e63ad122c10a5" kindref="member">head</ref>;</highlight></codeline>
<codeline lineno="22" refid="struct_pm_queue_rep_1a86aa2ed3eb0f43260058824bd92c5993" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="struct_pm_queue_rep_1a86aa2ed3eb0f43260058824bd92c5993" kindref="member">tail</ref>;</highlight></codeline>
<codeline lineno="23" refid="struct_pm_queue_rep_1a6e3749a77433a84bb26f7d89521adc5c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="struct_pm_queue_rep_1a6e3749a77433a84bb26f7d89521adc5c" kindref="member">len</ref>;</highlight></codeline>
<codeline lineno="24" refid="struct_pm_queue_rep_1a5fcbe9d90e738fb69b03ba7f2b847581" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="struct_pm_queue_rep_1a5fcbe9d90e738fb69b03ba7f2b847581" kindref="member">overflow</ref>;</highlight></codeline>
<codeline lineno="25" refid="struct_pm_queue_rep_1a87c1527e7fa395a0aae18efe6f9cd79a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a37994e3b11c72957c6f454c6ec96d43d" kindref="member">int32_t</ref><sp/><ref refid="struct_pm_queue_rep_1a87c1527e7fa395a0aae18efe6f9cd79a" kindref="member">msg_size</ref>;<sp/></highlight><highlight class="comment">/*<sp/>number<sp/>of<sp/>int32_t<sp/>in<sp/>a<sp/>message<sp/>including<sp/>extra<sp/>word<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="struct_pm_queue_rep_1ab5aa2fd81ec89f4674a87485398ab0dd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a37994e3b11c72957c6f454c6ec96d43d" kindref="member">int32_t</ref><sp/><ref refid="struct_pm_queue_rep_1ab5aa2fd81ec89f4674a87485398ab0dd" kindref="member">peek_overflow</ref>;</highlight></codeline>
<codeline lineno="27" refid="struct_pm_queue_rep_1a808f75fb14f8aef3ceadc691bbd0986b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a37994e3b11c72957c6f454c6ec96d43d" kindref="member">int32_t</ref><sp/>*<ref refid="struct_pm_queue_rep_1a808f75fb14f8aef3ceadc691bbd0986b" kindref="member">buffer</ref>;</highlight></codeline>
<codeline lineno="28" refid="struct_pm_queue_rep_1a0b498ff007aae21d7d6651722cc781c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a37994e3b11c72957c6f454c6ec96d43d" kindref="member">int32_t</ref><sp/>*<ref refid="struct_pm_queue_rep_1a0b498ff007aae21d7d6651722cc781c3" kindref="member">peek</ref>;</highlight></codeline>
<codeline lineno="29" refid="struct_pm_queue_rep_1ad8f20dd6f8f014da9c6ff04ae0ba537f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a37994e3b11c72957c6f454c6ec96d43d" kindref="member">int32_t</ref><sp/><ref refid="struct_pm_queue_rep_1ad8f20dd6f8f014da9c6ff04ae0ba537f" kindref="member">peek_flag</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}<sp/><ref refid="struct_pm_queue_rep" kindref="compound">PmQueueRep</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="pmutil_8h_1a4b9e5baad25b1efbf575dd928d4c6f43" refkind="member"><highlight class="normal"><ref refid="portmidi_8h_1ad478fb637833fb6b1a4bdb25a03f4662" kindref="member">PMEXPORT</ref><sp/><ref refid="pmutil_8h_1aaffd2b634e54baa4759ee5dd2a32f717" kindref="member">PmQueue</ref><sp/>*<ref refid="pmutil_8c_1a4b9e5baad25b1efbf575dd928d4c6f43" kindref="member">Pm_QueueCreate</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>num_msgs,<sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a37994e3b11c72957c6f454c6ec96d43d" kindref="member">int32_t</ref><sp/>bytes_per_msg)</highlight></codeline>
<codeline lineno="34"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a37994e3b11c72957c6f454c6ec96d43d" kindref="member">int32_t</ref><sp/>int32s_per_msg<sp/>=<sp/></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a37994e3b11c72957c6f454c6ec96d43d" kindref="member">int32_t</ref>)<sp/>(((bytes_per_msg<sp/>+<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a37994e3b11c72957c6f454c6ec96d43d" kindref="member">int32_t</ref>)<sp/>-<sp/>1)<sp/>&amp;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>~(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a37994e3b11c72957c6f454c6ec96d43d" kindref="member">int32_t</ref>)<sp/>-<sp/>1))<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a37994e3b11c72957c6f454c6ec96d43d" kindref="member">int32_t</ref>));</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pm_queue_rep" kindref="compound">PmQueueRep</ref><sp/>*queue<sp/>=<sp/>(<ref refid="struct_pm_queue_rep" kindref="compound">PmQueueRep</ref><sp/>*)<sp/><ref refid="pminternal_8h_1a5e0011f472e9c71efa58816f628eed08" kindref="member">pm_alloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_pm_queue_rep" kindref="compound">PmQueueRep</ref>));</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!queue)<sp/></highlight><highlight class="comment">/*<sp/>memory<sp/>allocation<sp/>failed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>need<sp/>extra<sp/>word<sp/>per<sp/>message<sp/>for<sp/>non-zero<sp/>encoding<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>queue-&gt;<ref refid="struct_pm_queue_rep_1a6e3749a77433a84bb26f7d89521adc5c" kindref="member">len</ref><sp/>=<sp/>num_msgs<sp/>*<sp/>(int32s_per_msg<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>queue-&gt;<ref refid="struct_pm_queue_rep_1a808f75fb14f8aef3ceadc691bbd0986b" kindref="member">buffer</ref><sp/>=<sp/>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a37994e3b11c72957c6f454c6ec96d43d" kindref="member">int32_t</ref><sp/>*)<sp/><ref refid="pminternal_8h_1a5e0011f472e9c71efa58816f628eed08" kindref="member">pm_alloc</ref>(queue-&gt;<ref refid="struct_pm_queue_rep_1a6e3749a77433a84bb26f7d89521adc5c" kindref="member">len</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a37994e3b11c72957c6f454c6ec96d43d" kindref="member">int32_t</ref>));</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>bzero(queue-&gt;<ref refid="struct_pm_queue_rep_1a808f75fb14f8aef3ceadc691bbd0986b" kindref="member">buffer</ref>,<sp/>queue-&gt;<ref refid="struct_pm_queue_rep_1a6e3749a77433a84bb26f7d89521adc5c" kindref="member">len</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a37994e3b11c72957c6f454c6ec96d43d" kindref="member">int32_t</ref>));</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!queue-&gt;<ref refid="struct_pm_queue_rep_1a808f75fb14f8aef3ceadc691bbd0986b" kindref="member">buffer</ref>)<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1a9ce0079220419af65fc4a78af8d422f2" kindref="member">pm_free</ref>(queue);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>allocate<sp/>the<sp/>&quot;peek&quot;<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>queue-&gt;<ref refid="struct_pm_queue_rep_1a0b498ff007aae21d7d6651722cc781c3" kindref="member">peek</ref><sp/>=<sp/>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a37994e3b11c72957c6f454c6ec96d43d" kindref="member">int32_t</ref><sp/>*)<sp/><ref refid="pminternal_8h_1a5e0011f472e9c71efa58816f628eed08" kindref="member">pm_alloc</ref>(int32s_per_msg<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a37994e3b11c72957c6f454c6ec96d43d" kindref="member">int32_t</ref>));</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!queue-&gt;<ref refid="struct_pm_queue_rep_1a0b498ff007aae21d7d6651722cc781c3" kindref="member">peek</ref>)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>free<sp/>everything<sp/>allocated<sp/>so<sp/>far<sp/>and<sp/>return<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1a9ce0079220419af65fc4a78af8d422f2" kindref="member">pm_free</ref>(queue-&gt;<ref refid="struct_pm_queue_rep_1a808f75fb14f8aef3ceadc691bbd0986b" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1a9ce0079220419af65fc4a78af8d422f2" kindref="member">pm_free</ref>(queue);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>bzero(queue-&gt;<ref refid="struct_pm_queue_rep_1a808f75fb14f8aef3ceadc691bbd0986b" kindref="member">buffer</ref>,<sp/>queue-&gt;<ref refid="struct_pm_queue_rep_1a6e3749a77433a84bb26f7d89521adc5c" kindref="member">len</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a37994e3b11c72957c6f454c6ec96d43d" kindref="member">int32_t</ref>));</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>queue-&gt;<ref refid="struct_pm_queue_rep_1ab516ccc6cedbf2ab076e63ad122c10a5" kindref="member">head</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>queue-&gt;<ref refid="struct_pm_queue_rep_1a86aa2ed3eb0f43260058824bd92c5993" kindref="member">tail</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>msg_size<sp/>is<sp/>in<sp/>words<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>queue-&gt;<ref refid="struct_pm_queue_rep_1a87c1527e7fa395a0aae18efe6f9cd79a" kindref="member">msg_size</ref><sp/>=<sp/>int32s_per_msg<sp/>+<sp/>1;<sp/></highlight><highlight class="comment">/*<sp/>note<sp/>extra<sp/>word<sp/>is<sp/>counted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>queue-&gt;<ref refid="struct_pm_queue_rep_1a5fcbe9d90e738fb69b03ba7f2b847581" kindref="member">overflow</ref><sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>queue-&gt;<ref refid="struct_pm_queue_rep_1ab5aa2fd81ec89f4674a87485398ab0dd" kindref="member">peek_overflow</ref><sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>queue-&gt;<ref refid="struct_pm_queue_rep_1ad8f20dd6f8f014da9c6ff04ae0ba537f" kindref="member">peek_flag</ref><sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>queue;</highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="pmutil_8h_1ad96fb66329910ccc4bf7c5c4b5fc6ab0" refkind="member"><highlight class="normal"><ref refid="portmidi_8h_1ad478fb637833fb6b1a4bdb25a03f4662" kindref="member">PMEXPORT</ref><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/><ref refid="pmutil_8c_1a4dac98b6791b777886ea7729a33d3b43" kindref="member">Pm_QueueDestroy</ref>(<ref refid="pmutil_8h_1aaffd2b634e54baa4759ee5dd2a32f717" kindref="member">PmQueue</ref><sp/>*<ref refid="genericdata_8c_1aed566b4fd5f50587a3ee550f7cd010ae" kindref="member">q</ref>)</highlight></codeline>
<codeline lineno="71"><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pm_queue_rep" kindref="compound">PmQueueRep</ref><sp/>*queue<sp/>=<sp/>(<ref refid="struct_pm_queue_rep" kindref="compound">PmQueueRep</ref><sp/>*)<sp/>q;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>arg<sp/>checking<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!queue<sp/>||<sp/>!queue-&gt;<ref refid="struct_pm_queue_rep_1a808f75fb14f8aef3ceadc691bbd0986b" kindref="member">buffer</ref><sp/>||<sp/>!queue-&gt;<ref refid="struct_pm_queue_rep_1a0b498ff007aae21d7d6651722cc781c3" kindref="member">peek</ref>)<sp/></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9ad918f36038e977eb97cd15daa851670c" kindref="member">pmBadPtr</ref>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1a9ce0079220419af65fc4a78af8d422f2" kindref="member">pm_free</ref>(queue-&gt;<ref refid="struct_pm_queue_rep_1a0b498ff007aae21d7d6651722cc781c3" kindref="member">peek</ref>);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1a9ce0079220419af65fc4a78af8d422f2" kindref="member">pm_free</ref>(queue-&gt;<ref refid="struct_pm_queue_rep_1a808f75fb14f8aef3ceadc691bbd0986b" kindref="member">buffer</ref>);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1a9ce0079220419af65fc4a78af8d422f2" kindref="member">pm_free</ref>(queue);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a9545ea325397bd81d2d81bdd7d92cba4" kindref="member">pmNoError</ref>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="pmutil_8h_1a0191ec51a6d9f94661df3328c505618a" refkind="member"><highlight class="normal"><ref refid="portmidi_8h_1ad478fb637833fb6b1a4bdb25a03f4662" kindref="member">PMEXPORT</ref><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/><ref refid="pmutil_8c_1aa1fa17b38e0037c212b1b69a55f0cd00" kindref="member">Pm_Dequeue</ref>(<ref refid="pmutil_8h_1aaffd2b634e54baa4759ee5dd2a32f717" kindref="member">PmQueue</ref><sp/>*<ref refid="genericdata_8c_1aed566b4fd5f50587a3ee550f7cd010ae" kindref="member">q</ref>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*msg)</highlight></codeline>
<codeline lineno="86"><highlight class="normal">{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>head;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pm_queue_rep" kindref="compound">PmQueueRep</ref><sp/>*queue<sp/>=<sp/>(<ref refid="struct_pm_queue_rep" kindref="compound">PmQueueRep</ref><sp/>*)<sp/>q;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a37994e3b11c72957c6f454c6ec96d43d" kindref="member">int32_t</ref><sp/>*msg_as_int32<sp/>=<sp/>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a37994e3b11c72957c6f454c6ec96d43d" kindref="member">int32_t</ref><sp/>*)<sp/>msg;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>arg<sp/>checking<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!queue)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9ad918f36038e977eb97cd15daa851670c" kindref="member">pmBadPtr</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>a<sp/>previous<sp/>peek<sp/>operation<sp/>encountered<sp/>an<sp/>overflow,<sp/>but<sp/>the<sp/>overflow</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>has<sp/>not<sp/>yet<sp/>been<sp/>reported<sp/>to<sp/>client,<sp/>so<sp/>do<sp/>it<sp/>now.<sp/>No<sp/>message<sp/>is</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>returned,<sp/>but<sp/>on<sp/>the<sp/>next<sp/>call,<sp/>we<sp/>will<sp/>return<sp/>the<sp/>peek<sp/>buffer.</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(queue-&gt;<ref refid="struct_pm_queue_rep_1ab5aa2fd81ec89f4674a87485398ab0dd" kindref="member">peek_overflow</ref>)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>queue-&gt;<ref refid="struct_pm_queue_rep_1ab5aa2fd81ec89f4674a87485398ab0dd" kindref="member">peek_overflow</ref><sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a3f41a487d89c058e39108822b2648695" kindref="member">pmBufferOverflow</ref>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(queue-&gt;<ref refid="struct_pm_queue_rep_1ad8f20dd6f8f014da9c6ff04ae0ba537f" kindref="member">peek_flag</ref>)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(msg,<sp/>queue-&gt;<ref refid="struct_pm_queue_rep_1a0b498ff007aae21d7d6651722cc781c3" kindref="member">peek</ref>,<sp/>(queue-&gt;<ref refid="struct_pm_queue_rep_1a87c1527e7fa395a0aae18efe6f9cd79a" kindref="member">msg_size</ref><sp/>-<sp/>1)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a37994e3b11c72957c6f454c6ec96d43d" kindref="member">int32_t</ref>));</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>queue-&gt;<ref refid="struct_pm_queue_rep_1ad8f20dd6f8f014da9c6ff04ae0ba537f" kindref="member">peek_flag</ref><sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a590ef425ab5bbe59658a08e551f1ad42" kindref="member">pmGotData</ref>;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>head<sp/>=<sp/>queue-&gt;<ref refid="struct_pm_queue_rep_1ab516ccc6cedbf2ab076e63ad122c10a5" kindref="member">head</ref>;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>writer<sp/>overflows,<sp/>it<sp/>writes<sp/>queue-&gt;overflow<sp/>=<sp/>tail+1<sp/>so<sp/>that</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>when<sp/>the<sp/>reader<sp/>gets<sp/>to<sp/>that<sp/>position<sp/>in<sp/>the<sp/>buffer,<sp/>it<sp/>can<sp/></highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>return<sp/>the<sp/>overflow<sp/>condition<sp/>to<sp/>the<sp/>reader.<sp/>The<sp/>problem<sp/>is<sp/>that</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>at<sp/>overflow,<sp/>things<sp/>have<sp/>wrapped<sp/>around,<sp/>so<sp/>tail<sp/>==<sp/>head,<sp/>and<sp/>the</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>reader<sp/>will<sp/>detect<sp/>overflow<sp/>immediately<sp/>instead<sp/>of<sp/>waiting<sp/>until</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>it<sp/>reads<sp/>everything<sp/>in<sp/>the<sp/>buffer,<sp/>wrapping<sp/>around<sp/>again<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>point<sp/>where<sp/>tail<sp/>==<sp/>head.<sp/>So<sp/>the<sp/>condition<sp/>also<sp/>checks<sp/>that</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>queue-&gt;buffer[head]<sp/>is<sp/>zero<sp/>--<sp/>if<sp/>so,<sp/>then<sp/>the<sp/>buffer<sp/>is<sp/>now</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>empty,<sp/>and<sp/>we&apos;re<sp/>at<sp/>the<sp/>point<sp/>in<sp/>the<sp/>msg<sp/>stream<sp/>where<sp/>overflow</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>occurred.<sp/>It&apos;s<sp/>time<sp/>to<sp/>signal<sp/>overflow<sp/>to<sp/>the<sp/>reader.<sp/>If<sp/></highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>queue-&gt;buffer[head]<sp/>is<sp/>non-zero,<sp/>there&apos;s<sp/>a<sp/>message<sp/>there<sp/>and<sp/>we</highlight></codeline>
<codeline lineno="121"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>should<sp/>read<sp/>all<sp/>the<sp/>way<sp/>around<sp/>the<sp/>buffer<sp/>before<sp/>signalling<sp/>overflow.</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>There<sp/>is<sp/>a<sp/>write-order<sp/>dependency<sp/>here,<sp/>but<sp/>to<sp/>fail,<sp/>the<sp/>overflow</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>field<sp/>would<sp/>have<sp/>to<sp/>be<sp/>written<sp/>while<sp/>an<sp/>entire<sp/>buffer<sp/>full<sp/>of<sp/></highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>writes<sp/>are<sp/>still<sp/>pending.<sp/>I&apos;m<sp/>assuming<sp/>out-of-order<sp/>writes<sp/>are</highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>possible,<sp/>but<sp/>not<sp/>that<sp/>many.</highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(queue-&gt;<ref refid="struct_pm_queue_rep_1a5fcbe9d90e738fb69b03ba7f2b847581" kindref="member">overflow</ref><sp/>==<sp/>head<sp/>+<sp/>1<sp/>&amp;&amp;<sp/>!queue-&gt;<ref refid="struct_pm_queue_rep_1a808f75fb14f8aef3ceadc691bbd0986b" kindref="member">buffer</ref>[head])<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>queue-&gt;<ref refid="struct_pm_queue_rep_1a5fcbe9d90e738fb69b03ba7f2b847581" kindref="member">overflow</ref><sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>non-overflow<sp/>condition<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a3f41a487d89c058e39108822b2648695" kindref="member">pmBufferOverflow</ref>;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>test<sp/>to<sp/>see<sp/>if<sp/>there<sp/>is<sp/>data<sp/>in<sp/>the<sp/>queue<sp/>--<sp/>test<sp/>from<sp/>back</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>to<sp/>front<sp/>so<sp/>if<sp/>writer<sp/>is<sp/>simultaneously<sp/>writing,<sp/>we<sp/>don&apos;t</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>waste<sp/>time<sp/>discovering<sp/>the<sp/>write<sp/>is<sp/>not<sp/>finished<sp/></highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>queue-&gt;<ref refid="struct_pm_queue_rep_1a87c1527e7fa395a0aae18efe6f9cd79a" kindref="member">msg_size</ref><sp/>-<sp/>1;<sp/>i<sp/>&gt;=<sp/>0;<sp/>i--)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!queue-&gt;<ref refid="struct_pm_queue_rep_1a808f75fb14f8aef3ceadc691bbd0986b" kindref="member">buffer</ref>[head<sp/>+<sp/>i])<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a63a88f49973a34b3e5c4ea0f4b5707b1" kindref="member">pmNoData</ref>;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(msg,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>&amp;queue-&gt;<ref refid="struct_pm_queue_rep_1a808f75fb14f8aef3ceadc691bbd0986b" kindref="member">buffer</ref>[head<sp/>+<sp/>1],<sp/></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a37994e3b11c72957c6f454c6ec96d43d" kindref="member">int32_t</ref>)<sp/>*<sp/>(queue-&gt;<ref refid="struct_pm_queue_rep_1a87c1527e7fa395a0aae18efe6f9cd79a" kindref="member">msg_size</ref><sp/>-<sp/>1));</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>fix<sp/>up<sp/>zeros<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>i<sp/>=<sp/>queue-&gt;<ref refid="struct_pm_queue_rep_1a808f75fb14f8aef3ceadc691bbd0986b" kindref="member">buffer</ref>[head];</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>queue-&gt;msg_size)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a37994e3b11c72957c6f454c6ec96d43d" kindref="member">int32_t</ref><sp/>j;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i--;<sp/></highlight><highlight class="comment">/*<sp/>msg<sp/>does<sp/>not<sp/>have<sp/>extra<sp/>word<sp/>so<sp/>shift<sp/>down<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j<sp/>=<sp/>msg_as_int32[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg_as_int32[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>j;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>signal<sp/>that<sp/>data<sp/>has<sp/>been<sp/>removed<sp/>by<sp/>zeroing:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>bzero((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>&amp;queue-&gt;<ref refid="struct_pm_queue_rep_1a808f75fb14f8aef3ceadc691bbd0986b" kindref="member">buffer</ref>[head],<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a37994e3b11c72957c6f454c6ec96d43d" kindref="member">int32_t</ref>)<sp/>*<sp/>queue-&gt;<ref refid="struct_pm_queue_rep_1a87c1527e7fa395a0aae18efe6f9cd79a" kindref="member">msg_size</ref>);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>update<sp/>head<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>head<sp/>+=<sp/>queue-&gt;<ref refid="struct_pm_queue_rep_1a87c1527e7fa395a0aae18efe6f9cd79a" kindref="member">msg_size</ref>;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(head<sp/>==<sp/>queue-&gt;<ref refid="struct_pm_queue_rep_1a6e3749a77433a84bb26f7d89521adc5c" kindref="member">len</ref>)<sp/>head<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>queue-&gt;<ref refid="struct_pm_queue_rep_1ab516ccc6cedbf2ab076e63ad122c10a5" kindref="member">head</ref><sp/>=<sp/>head;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a590ef425ab5bbe59658a08e551f1ad42" kindref="member">pmGotData</ref>;<sp/></highlight><highlight class="comment">/*<sp/>success<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal">}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164" refid="pmutil_8h_1a1d25278007a24fbd2ecf4c21db795f19" refkind="member"><highlight class="normal"><ref refid="portmidi_8h_1ad478fb637833fb6b1a4bdb25a03f4662" kindref="member">PMEXPORT</ref><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/><ref refid="pmutil_8c_1a6d791f67a1bf79cd67db2630947d41a3" kindref="member">Pm_SetOverflow</ref>(<ref refid="pmutil_8h_1aaffd2b634e54baa4759ee5dd2a32f717" kindref="member">PmQueue</ref><sp/>*<ref refid="genericdata_8c_1aed566b4fd5f50587a3ee550f7cd010ae" kindref="member">q</ref>)</highlight></codeline>
<codeline lineno="165"><highlight class="normal">{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pm_queue_rep" kindref="compound">PmQueueRep</ref><sp/>*queue<sp/>=<sp/>(<ref refid="struct_pm_queue_rep" kindref="compound">PmQueueRep</ref><sp/>*)<sp/>q;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>tail;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>arg<sp/>checking<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!queue)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9ad918f36038e977eb97cd15daa851670c" kindref="member">pmBadPtr</ref>;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>no<sp/>more<sp/>enqueue<sp/>until<sp/>receiver<sp/>acknowledges<sp/>overflow<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(queue-&gt;<ref refid="struct_pm_queue_rep_1a5fcbe9d90e738fb69b03ba7f2b847581" kindref="member">overflow</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a3f41a487d89c058e39108822b2648695" kindref="member">pmBufferOverflow</ref>;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>tail<sp/>=<sp/>queue-&gt;<ref refid="struct_pm_queue_rep_1a86aa2ed3eb0f43260058824bd92c5993" kindref="member">tail</ref>;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>queue-&gt;<ref refid="struct_pm_queue_rep_1a5fcbe9d90e738fb69b03ba7f2b847581" kindref="member">overflow</ref><sp/>=<sp/>tail<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a3f41a487d89c058e39108822b2648695" kindref="member">pmBufferOverflow</ref>;</highlight></codeline>
<codeline lineno="176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179" refid="pmutil_8h_1ab64bf944a76ddb46454c1ce904757191" refkind="member"><highlight class="normal"><ref refid="portmidi_8h_1ad478fb637833fb6b1a4bdb25a03f4662" kindref="member">PMEXPORT</ref><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/><ref refid="pmutil_8c_1adb3212e6e63eca2f8e0af7e59e98e12d" kindref="member">Pm_Enqueue</ref>(<ref refid="pmutil_8h_1aaffd2b634e54baa4759ee5dd2a32f717" kindref="member">PmQueue</ref><sp/>*<ref refid="genericdata_8c_1aed566b4fd5f50587a3ee550f7cd010ae" kindref="member">q</ref>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*msg)</highlight></codeline>
<codeline lineno="180"><highlight class="normal">{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pm_queue_rep" kindref="compound">PmQueueRep</ref><sp/>*queue<sp/>=<sp/>(<ref refid="struct_pm_queue_rep" kindref="compound">PmQueueRep</ref><sp/>*)<sp/>q;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>tail;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a37994e3b11c72957c6f454c6ec96d43d" kindref="member">int32_t</ref><sp/>*src<sp/>=<sp/>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a37994e3b11c72957c6f454c6ec96d43d" kindref="member">int32_t</ref><sp/>*)<sp/>msg;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a37994e3b11c72957c6f454c6ec96d43d" kindref="member">int32_t</ref><sp/>*ptr;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a37994e3b11c72957c6f454c6ec96d43d" kindref="member">int32_t</ref><sp/>*<ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rslt;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!queue)<sp/></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9ad918f36038e977eb97cd15daa851670c" kindref="member">pmBadPtr</ref>;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>no<sp/>more<sp/>enqueue<sp/>until<sp/>receiver<sp/>acknowledges<sp/>overflow<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(queue-&gt;<ref refid="struct_pm_queue_rep_1a5fcbe9d90e738fb69b03ba7f2b847581" kindref="member">overflow</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a3f41a487d89c058e39108822b2648695" kindref="member">pmBufferOverflow</ref>;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/><ref refid="pmutil_8c_1a06751092be9985f765c2a6f3ddf3fc39" kindref="member">Pm_QueueFull</ref>(q);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>already<sp/>checked<sp/>above:<sp/>if<sp/>(rslt<sp/>==<sp/>pmBadPtr)<sp/>return<sp/>rslt;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>tail<sp/>=<sp/>queue-&gt;<ref refid="struct_pm_queue_rep_1a86aa2ed3eb0f43260058824bd92c5993" kindref="member">tail</ref>;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rslt)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>queue-&gt;<ref refid="struct_pm_queue_rep_1a5fcbe9d90e738fb69b03ba7f2b847581" kindref="member">overflow</ref><sp/>=<sp/>tail<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a3f41a487d89c058e39108822b2648695" kindref="member">pmBufferOverflow</ref>;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>queue<sp/>is<sp/>has<sp/>room<sp/>for<sp/>message,<sp/>and<sp/>overflow<sp/>flag<sp/>is<sp/>cleared<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/>&amp;queue-&gt;<ref refid="struct_pm_queue_rep_1a808f75fb14f8aef3ceadc691bbd0986b" kindref="member">buffer</ref>[tail];</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>dest<sp/>=<sp/>ptr<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>queue-&gt;<ref refid="struct_pm_queue_rep_1a87c1527e7fa395a0aae18efe6f9cd79a" kindref="member">msg_size</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a37994e3b11c72957c6f454c6ec96d43d" kindref="member">int32_t</ref><sp/>j<sp/>=<sp/>src[i<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!j)<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ptr<sp/>=<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/><ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dest<sp/>=<sp/>j;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest++;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>*ptr<sp/>=<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>tail<sp/>+=<sp/>queue-&gt;<ref refid="struct_pm_queue_rep_1a87c1527e7fa395a0aae18efe6f9cd79a" kindref="member">msg_size</ref>;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tail<sp/>==<sp/>queue-&gt;<ref refid="struct_pm_queue_rep_1a6e3749a77433a84bb26f7d89521adc5c" kindref="member">len</ref>)<sp/>tail<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>queue-&gt;<ref refid="struct_pm_queue_rep_1a86aa2ed3eb0f43260058824bd92c5993" kindref="member">tail</ref><sp/>=<sp/>tail;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a9545ea325397bd81d2d81bdd7d92cba4" kindref="member">pmNoError</ref>;</highlight></codeline>
<codeline lineno="218"><highlight class="normal">}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221" refid="pmutil_8h_1a9076ca903990d923908e4655cc385747" refkind="member"><highlight class="normal"><ref refid="portmidi_8h_1ad478fb637833fb6b1a4bdb25a03f4662" kindref="member">PMEXPORT</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pmutil_8c_1a2d5a41d8cf27bc955442685a58ac8782" kindref="member">Pm_QueueEmpty</ref>(<ref refid="pmutil_8h_1aaffd2b634e54baa4759ee5dd2a32f717" kindref="member">PmQueue</ref><sp/>*<ref refid="genericdata_8c_1aed566b4fd5f50587a3ee550f7cd010ae" kindref="member">q</ref>)</highlight></codeline>
<codeline lineno="222"><highlight class="normal">{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pm_queue_rep" kindref="compound">PmQueueRep</ref><sp/>*queue<sp/>=<sp/>(<ref refid="struct_pm_queue_rep" kindref="compound">PmQueueRep</ref><sp/>*)<sp/>q;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(!queue)<sp/>||<sp/><sp/></highlight><highlight class="comment">/*<sp/>null<sp/>pointer<sp/>-&gt;<sp/>return<sp/>&quot;empty&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(queue-&gt;<ref refid="struct_pm_queue_rep_1a808f75fb14f8aef3ceadc691bbd0986b" kindref="member">buffer</ref>[queue-&gt;<ref refid="struct_pm_queue_rep_1ab516ccc6cedbf2ab076e63ad122c10a5" kindref="member">head</ref>]<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>!queue-&gt;<ref refid="struct_pm_queue_rep_1ad8f20dd6f8f014da9c6ff04ae0ba537f" kindref="member">peek_flag</ref>);</highlight></codeline>
<codeline lineno="226"><highlight class="normal">}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229" refid="pmutil_8h_1a9862615a386490b496ef16aa511623be" refkind="member"><highlight class="normal"><ref refid="portmidi_8h_1ad478fb637833fb6b1a4bdb25a03f4662" kindref="member">PMEXPORT</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pmutil_8c_1a06751092be9985f765c2a6f3ddf3fc39" kindref="member">Pm_QueueFull</ref>(<ref refid="pmutil_8h_1aaffd2b634e54baa4759ee5dd2a32f717" kindref="member">PmQueue</ref><sp/>*<ref refid="genericdata_8c_1aed566b4fd5f50587a3ee550f7cd010ae" kindref="member">q</ref>)</highlight></codeline>
<codeline lineno="230"><highlight class="normal">{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>tail;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;<sp/></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pm_queue_rep" kindref="compound">PmQueueRep</ref><sp/>*queue<sp/>=<sp/>(<ref refid="struct_pm_queue_rep" kindref="compound">PmQueueRep</ref><sp/>*)<sp/>q;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>arg<sp/>checking<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!queue)</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9ad918f36038e977eb97cd15daa851670c" kindref="member">pmBadPtr</ref>;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>tail<sp/>=<sp/>queue-&gt;<ref refid="struct_pm_queue_rep_1a86aa2ed3eb0f43260058824bd92c5993" kindref="member">tail</ref>;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>test<sp/>to<sp/>see<sp/>if<sp/>there<sp/>is<sp/>space<sp/>in<sp/>the<sp/>queue<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>queue-&gt;<ref refid="struct_pm_queue_rep_1a87c1527e7fa395a0aae18efe6f9cd79a" kindref="member">msg_size</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(queue-&gt;<ref refid="struct_pm_queue_rep_1a808f75fb14f8aef3ceadc691bbd0986b" kindref="member">buffer</ref>[tail<sp/>+<sp/>i])<sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="245"><highlight class="normal">}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248" refid="pmutil_8h_1a6cfbd76d7c72784327c7dd5d3f910aa4" refkind="member"><highlight class="normal"><ref refid="portmidi_8h_1ad478fb637833fb6b1a4bdb25a03f4662" kindref="member">PMEXPORT</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="pmutil_8c_1abfbe351faff724cae21d403e3f71652a" kindref="member">Pm_QueuePeek</ref>(<ref refid="pmutil_8h_1aaffd2b634e54baa4759ee5dd2a32f717" kindref="member">PmQueue</ref><sp/>*<ref refid="genericdata_8c_1aed566b4fd5f50587a3ee550f7cd010ae" kindref="member">q</ref>)</highlight></codeline>
<codeline lineno="249"><highlight class="normal">{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/>rslt;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a37994e3b11c72957c6f454c6ec96d43d" kindref="member">int32_t</ref><sp/>temp;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pm_queue_rep" kindref="compound">PmQueueRep</ref><sp/>*queue<sp/>=<sp/>(<ref refid="struct_pm_queue_rep" kindref="compound">PmQueueRep</ref><sp/>*)<sp/>q;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>arg<sp/>checking<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!queue)</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(queue-&gt;<ref refid="struct_pm_queue_rep_1ad8f20dd6f8f014da9c6ff04ae0ba537f" kindref="member">peek_flag</ref>)<sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>queue-&gt;<ref refid="struct_pm_queue_rep_1a0b498ff007aae21d7d6651722cc781c3" kindref="member">peek</ref>;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>this<sp/>is<sp/>ugly:<sp/>if<sp/>peek_overflow<sp/>is<sp/>set,<sp/>then<sp/>Pm_Dequeue()<sp/></highlight></codeline>
<codeline lineno="261"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>returns<sp/>immediately<sp/>with<sp/>pmBufferOverflow,<sp/>but<sp/>here,<sp/>we</highlight></codeline>
<codeline lineno="262"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>want<sp/>Pm_Dequeue()<sp/>to<sp/>really<sp/>check<sp/>for<sp/>data.<sp/>If<sp/>data<sp/>is</highlight></codeline>
<codeline lineno="263"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>there,<sp/>we<sp/>can<sp/>return<sp/>it</highlight></codeline>
<codeline lineno="264"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>queue-&gt;<ref refid="struct_pm_queue_rep_1ab5aa2fd81ec89f4674a87485398ab0dd" kindref="member">peek_overflow</ref>;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>queue-&gt;<ref refid="struct_pm_queue_rep_1ab5aa2fd81ec89f4674a87485398ab0dd" kindref="member">peek_overflow</ref><sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>rslt<sp/>=<sp/><ref refid="pmutil_8c_1aa1fa17b38e0037c212b1b69a55f0cd00" kindref="member">Pm_Dequeue</ref>(q,<sp/>queue-&gt;<ref refid="struct_pm_queue_rep_1a0b498ff007aae21d7d6651722cc781c3" kindref="member">peek</ref>);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>queue-&gt;<ref refid="struct_pm_queue_rep_1ab5aa2fd81ec89f4674a87485398ab0dd" kindref="member">peek_overflow</ref><sp/>=<sp/>temp;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rslt<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>queue-&gt;<ref refid="struct_pm_queue_rep_1ad8f20dd6f8f014da9c6ff04ae0ba537f" kindref="member">peek_flag</ref><sp/>=<sp/><ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>queue-&gt;<ref refid="struct_pm_queue_rep_1a0b498ff007aae21d7d6651722cc781c3" kindref="member">peek</ref>;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rslt<sp/>==<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a3f41a487d89c058e39108822b2648695" kindref="member">pmBufferOverflow</ref>)<sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>when<sp/>overflow<sp/>is<sp/>indicated,<sp/>the<sp/>queue<sp/>is<sp/>empty<sp/>and<sp/>the<sp/></highlight></codeline>
<codeline lineno="275"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>first<sp/>message<sp/>that<sp/>was<sp/>dropped<sp/>by<sp/>Enqueue<sp/>(signalling</highlight></codeline>
<codeline lineno="276"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>pmBufferOverflow<sp/>to<sp/>its<sp/>caller)<sp/>would<sp/>have<sp/>been<sp/>the<sp/>next</highlight></codeline>
<codeline lineno="277"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>message<sp/>in<sp/>the<sp/>queue.<sp/>Pm_QueuePeek<sp/>will<sp/>return<sp/>NULL,<sp/>but</highlight></codeline>
<codeline lineno="278"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>remember<sp/>that<sp/>an<sp/>overflow<sp/>occurred.<sp/>(see<sp/>Pm_Dequeue)</highlight></codeline>
<codeline lineno="279"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>queue-&gt;<ref refid="struct_pm_queue_rep_1ab5aa2fd81ec89f4674a87485398ab0dd" kindref="member">peek_overflow</ref><sp/>=<sp/><ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="283"><highlight class="normal">}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_common/pmutil.c"/>
  </compounddef>
</doxygen>
