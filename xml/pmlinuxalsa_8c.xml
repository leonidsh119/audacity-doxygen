<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="pmlinuxalsa_8c" kind="file" language="C++">
    <compoundname>pmlinuxalsa.c</compoundname>
    <includes local="yes">stdlib.h</includes>
    <includes refid="portmidi_8h" local="yes">portmidi.h</includes>
    <includes refid="pmutil_8h" local="yes">pmutil.h</includes>
    <includes refid="pminternal_8h" local="yes">pminternal.h</includes>
    <includes refid="pmlinuxalsa_8h" local="yes">pmlinuxalsa.h</includes>
    <includes local="yes">string.h</includes>
    <includes refid="porttime_8h" local="yes">porttime.h</includes>
    <includes refid="pmlinux_8h" local="yes">pmlinux.h</includes>
    <includes local="no">alsa/asoundlib.h</includes>
    <incdepgraph>
      <node id="30956">
        <label>pmutil.h</label>
        <link refid="pmutil_8h"/>
      </node>
      <node id="30955">
        <label>stdint.h</label>
      </node>
      <node id="30953">
        <label>stdlib.h</label>
      </node>
      <node id="30960">
        <label>porttime.h</label>
        <link refid="porttime_8h"/>
        <childnode refid="30955" relation="include">
        </childnode>
      </node>
      <node id="30961">
        <label>pmlinux.h</label>
        <link refid="pmlinux_8h"/>
      </node>
      <node id="30962">
        <label>alsa/asoundlib.h</label>
      </node>
      <node id="30957">
        <label>pminternal.h</label>
        <link refid="pminternal_8h"/>
      </node>
      <node id="30959">
        <label>string.h</label>
      </node>
      <node id="30954">
        <label>portmidi.h</label>
        <link refid="portmidi_8h"/>
        <childnode refid="30955" relation="include">
        </childnode>
      </node>
      <node id="30952">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/pmlinuxalsa.c</label>
        <link refid="pmlinuxalsa.c"/>
        <childnode refid="30953" relation="include">
        </childnode>
        <childnode refid="30954" relation="include">
        </childnode>
        <childnode refid="30956" relation="include">
        </childnode>
        <childnode refid="30957" relation="include">
        </childnode>
        <childnode refid="30958" relation="include">
        </childnode>
        <childnode refid="30959" relation="include">
        </childnode>
        <childnode refid="30960" relation="include">
        </childnode>
        <childnode refid="30961" relation="include">
        </childnode>
        <childnode refid="30962" relation="include">
        </childnode>
      </node>
      <node id="30958">
        <label>pmlinuxalsa.h</label>
        <link refid="pmlinuxalsa_8h"/>
      </node>
    </incdepgraph>
    <innerclass refid="structalsa__descriptor__struct" prot="public">alsa_descriptor_struct</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="pmlinuxalsa_8c_1acbbde1bd17dd8e09b46e3f0d809deea1" prot="public" static="no">
        <name>VERBOSE_ON</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/pmlinuxalsa.c" line="24" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/pmlinuxalsa.c" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pmlinuxalsa_8c_1a42f8c497a1968074f38bf5055c650dca" prot="public" static="no">
        <name>VERBOSE</name>
        <initializer><ref refid="sndfile__save_8m_1a55944e1fa1bcc1bfc6185bc610b0a930" kindref="member">if</ref> (<ref refid="pmmacosxcm_8c_1acbbde1bd17dd8e09b46e3f0d809deea1" kindref="member">VERBOSE_ON</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/pmlinuxalsa.c" line="25" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/pmlinuxalsa.c" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pmlinuxalsa_8c_1aa2197f6ca200566c0986e737edd211e4" prot="public" static="no">
        <name>MIDI_SYSEX</name>
        <initializer>0xf0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/pmlinuxalsa.c" line="27" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/pmlinuxalsa.c" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pmlinuxalsa_8c_1a140c8cfa4bbf1a03494abdbd639d49f2" prot="public" static="no">
        <name>MIDI_EOX</name>
        <initializer>0xf7</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/pmlinuxalsa.c" line="28" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/pmlinuxalsa.c" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pmlinuxalsa_8c_1a98660597625d6388c0a56fcee3ed9bc7" prot="public" static="no">
        <name>MAKE_DESCRIPTOR</name>
        <param><defname>client</defname></param>
        <param><defname>port</defname></param>
        <initializer>((<ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref>*)(((client) &lt;&lt; 8) | (port)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/pmlinuxalsa.c" line="35" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/pmlinuxalsa.c" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pmlinuxalsa_8c_1aa8f729e8e3c9f2f233707f521702dba3" prot="public" static="no">
        <name>GET_DESCRIPTOR_CLIENT</name>
        <param><defname>info</defname></param>
        <initializer>((((<ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref>)(<ref refid="lib_2expat_8h_1a20806b446e455c50dc5653b7d43e3de2" kindref="member">info</ref>)) &gt;&gt; 8) &amp; 0xff)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/pmlinuxalsa.c" line="36" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/pmlinuxalsa.c" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pmlinuxalsa_8c_1a8143caa81e81b6ca9e00cab24766de23" prot="public" static="no">
        <name>GET_DESCRIPTOR_PORT</name>
        <param><defname>info</defname></param>
        <initializer>(((<ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref>)(<ref refid="lib_2expat_8h_1a20806b446e455c50dc5653b7d43e3de2" kindref="member">info</ref>)) &amp; 0xff)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/pmlinuxalsa.c" line="37" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/pmlinuxalsa.c" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pmlinuxalsa_8c_1aec93e83855ac17c3c25c55c37ca186dd" prot="public" static="no">
        <name>BYTE</name>
        <initializer>unsigned char</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/pmlinuxalsa.c" line="39" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/pmlinuxalsa.c" bodystart="39" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="pmlinuxalsa_8c_1aad02e25908ef846cfdb65da0738daf23" prot="public" static="no">
        <type>struct <ref refid="structalsa__descriptor__struct" kindref="compound">alsa_descriptor_struct</ref></type>
        <definition>typedef struct alsa_descriptor_struct  alsa_descriptor_node</definition>
        <argsstring></argsstring>
        <name>alsa_descriptor_node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/pmlinuxalsa.c" line="55" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="pmlinuxalsa_8c_1a3db8dba62afe3f1e2cffcea3aad17ca0" prot="public" static="no">
        <type>struct <ref refid="structalsa__descriptor__struct" kindref="compound">alsa_descriptor_struct</ref> *</type>
        <definition>typedef struct alsa_descriptor_struct * alsa_descriptor_type</definition>
        <argsstring></argsstring>
        <name>alsa_descriptor_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/pmlinuxalsa.c" line="55" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="pmlinuxalsa_8c_1a461d9fe3422027bcb23c08df8397b2d8" prot="public" static="no" mutable="no">
        <type><ref refid="structpm__fns__node" kindref="compound">pm_fns_node</ref></type>
        <definition>pm_fns_node pm_linuxalsa_in_dictionary</definition>
        <argsstring></argsstring>
        <name>pm_linuxalsa_in_dictionary</name>
        <initializer>= {
    <ref refid="portmidi_8c_1a841d04eb4d4efa3eebfc4e718cf9faa3" kindref="member">none_write_short</ref>,
    <ref refid="pminternal_8h_1ac44b30c88f5076903c62f9e8fc8c51ec" kindref="member">none_sysex</ref>,
    <ref refid="pminternal_8h_1ac44b30c88f5076903c62f9e8fc8c51ec" kindref="member">none_sysex</ref>,
    <ref refid="portmidi_8c_1a2181992bfdc1d719bdd96353763965d7" kindref="member">none_write_byte</ref>,
    <ref refid="portmidi_8c_1a841d04eb4d4efa3eebfc4e718cf9faa3" kindref="member">none_write_short</ref>,
    <ref refid="pminternal_8h_1a1381cf29da7767a1db6c268b7941a6f8" kindref="member">none_write_flush</ref>,
    alsa_synchronize,
    alsa_in_open,
    alsa_abort,
    alsa_in_close,
    alsa_poll,
    alsa_has_host_error,
    alsa_get_host_error
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/pmlinuxalsa.c" line="41" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/pmlinuxalsa.c" bodystart="676" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pmlinuxalsa_8c_1ae7fa43a18d9f6d6231707b0f58e64d9c" prot="public" static="no" mutable="no">
        <type><ref refid="structpm__fns__node" kindref="compound">pm_fns_node</ref></type>
        <definition>pm_fns_node pm_linuxalsa_out_dictionary</definition>
        <argsstring></argsstring>
        <name>pm_linuxalsa_out_dictionary</name>
        <initializer>= {
    alsa_write_short,
    <ref refid="pmlinuxalsa_8c_1a0e4c196aec35cd6340cd5303dc5079a5" kindref="member">alsa_sysex</ref>,
    <ref refid="pmlinuxalsa_8c_1a0e4c196aec35cd6340cd5303dc5079a5" kindref="member">alsa_sysex</ref>,
    alsa_write_byte,
    alsa_write_short, 
    alsa_write_flush,
    alsa_synchronize,
    alsa_out_open, 
    alsa_abort, 
    alsa_out_close,
    <ref refid="pminternal_8h_1a7b782f381e349f7b220b925bcdf9c9c1" kindref="member">none_poll</ref>,
    alsa_has_host_error,
    alsa_get_host_error
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/pmlinuxalsa.c" line="42" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/pmlinuxalsa.c" bodystart="692" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pmlinuxalsa_8c_1a463fb5898ad944add5dd1824d7e24815" prot="public" static="yes" mutable="no">
        <type>snd_seq_t *</type>
        <definition>snd_seq_t* seq</definition>
        <argsstring></argsstring>
        <name>seq</name>
        <initializer>= <ref refid="px__mixer_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/pmlinuxalsa.c" line="44" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/pmlinuxalsa.c" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pmlinuxalsa_8c_1a404442353660d7effc914ba8220ebf7f" prot="public" static="yes" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int queue</definition>
        <argsstring></argsstring>
        <name>queue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/pmlinuxalsa.c" line="46" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/pmlinuxalsa.c" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="pmlinuxalsa_8c_1abccf825c80b2acb5f1a11b7e01680244" prot="public" static="yes" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int queue_used</definition>
        <argsstring></argsstring>
        <name>queue_used</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/pmlinuxalsa.c" line="46" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/pmlinuxalsa.c" bodystart="46" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="pmlinuxalsa_8c_1a4640b4cb175ba483a0389dddee6952b5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void get_alsa_error_text</definition>
        <argsstring>(char *msg, int len, int err)</argsstring>
        <name>get_alsa_error_text</name>
        <param>
          <type>char *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>len</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>err</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/pmlinuxalsa.c" line="60" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/pmlinuxalsa.c" bodystart="60" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="pmlinuxalsa_8c_1a052c48287bcc3cff0fc90cd6bfc676d7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref></type>
        <definition>static PmError alsa_use_queue</definition>
        <argsstring>(void)</argsstring>
        <name>alsa_use_queue</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/pmlinuxalsa.c" line="76" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/pmlinuxalsa.c" bodystart="76" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="pmlinuxalsa_8c_1aedb3ef69fb3d186245c1555bf942df8c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void alsa_unuse_queue</definition>
        <argsstring>(void)</argsstring>
        <name>alsa_unuse_queue</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/pmlinuxalsa.c" line="101" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/pmlinuxalsa.c" bodystart="101" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="pmlinuxalsa_8c_1a5373203b7918a75a13f6633b83e2cb8e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static int midi_message_length</definition>
        <argsstring>(PmMessage message)</argsstring>
        <name>midi_message_length</name>
        <param>
          <type><ref refid="group__grp__events__filters_1gad8455e4afe978a74c68e345bef99761d" kindref="member">PmMessage</ref></type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/pmlinuxalsa.c" line="113" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/pmlinuxalsa.c" bodystart="113" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="pmlinuxalsa_8c_1a931620dd2c138d5e6e93647ab0f55957" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref></type>
        <definition>static PmError alsa_out_open</definition>
        <argsstring>(PmInternal *midi, void *driverInfo)</argsstring>
        <name>alsa_out_open</name>
        <param>
          <type><ref refid="pminternal_8h_1acb48fe118f5feaf74bc314943658b733" kindref="member">PmInternal</ref> *</type>
          <declname>midi</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>driverInfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/pmlinuxalsa.c" line="129" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/pmlinuxalsa.c" bodystart="129" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="pmlinuxalsa_8c_1a09b01215f73b45fc4f0a416f68e99f15" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref></type>
        <definition>static PmError alsa_write_byte</definition>
        <argsstring>(PmInternal *midi, unsigned char byte, PmTimestamp timestamp)</argsstring>
        <name>alsa_write_byte</name>
        <param>
          <type><ref refid="pminternal_8h_1acb48fe118f5feaf74bc314943658b733" kindref="member">PmInternal</ref> *</type>
          <declname>midi</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>byte</declname>
        </param>
        <param>
          <type><ref refid="portmidi_8h_1acf4245beeef251c4a46d66e99d77ffdf" kindref="member">PmTimestamp</ref></type>
          <declname>timestamp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/pmlinuxalsa.c" line="189" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/pmlinuxalsa.c" bodystart="189" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="pmlinuxalsa_8c_1af7b2dd6054f58448b7e06cc3bb04a6c0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref></type>
        <definition>static PmError alsa_out_close</definition>
        <argsstring>(PmInternal *midi)</argsstring>
        <name>alsa_out_close</name>
        <param>
          <type><ref refid="pminternal_8h_1acb48fe118f5feaf74bc314943658b733" kindref="member">PmInternal</ref> *</type>
          <declname>midi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/pmlinuxalsa.c" line="240" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/pmlinuxalsa.c" bodystart="240" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="pmlinuxalsa_8c_1a5a64a69a146161ef1ac9b5a8abeceb1f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref></type>
        <definition>static PmError alsa_in_open</definition>
        <argsstring>(PmInternal *midi, void *driverInfo)</argsstring>
        <name>alsa_in_open</name>
        <param>
          <type><ref refid="pminternal_8h_1acb48fe118f5feaf74bc314943658b733" kindref="member">PmInternal</ref> *</type>
          <declname>midi</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>driverInfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/pmlinuxalsa.c" line="266" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/pmlinuxalsa.c" bodystart="266" bodyend="329"/>
      </memberdef>
      <memberdef kind="function" id="pmlinuxalsa_8c_1a96a3a5dc64a619352befeeee5be75001" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref></type>
        <definition>static PmError alsa_in_close</definition>
        <argsstring>(PmInternal *midi)</argsstring>
        <name>alsa_in_close</name>
        <param>
          <type><ref refid="pminternal_8h_1acb48fe118f5feaf74bc314943658b733" kindref="member">PmInternal</ref> *</type>
          <declname>midi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/pmlinuxalsa.c" line="331" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/pmlinuxalsa.c" bodystart="331" bodyend="350"/>
      </memberdef>
      <memberdef kind="function" id="pmlinuxalsa_8c_1ab5d0a58a42251c1686af1685412feae6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref></type>
        <definition>static PmError alsa_abort</definition>
        <argsstring>(PmInternal *midi)</argsstring>
        <name>alsa_abort</name>
        <param>
          <type><ref refid="pminternal_8h_1acb48fe118f5feaf74bc314943658b733" kindref="member">PmInternal</ref> *</type>
          <declname>midi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/pmlinuxalsa.c" line="353" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/pmlinuxalsa.c" bodystart="353" bodyend="381"/>
      </memberdef>
      <memberdef kind="function" id="pmlinuxalsa_8c_1a2e6bd764b2123504f21f2daa4e924709" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref></type>
        <definition>static PmError alsa_write_flush</definition>
        <argsstring>(PmInternal *midi, PmTimestamp timestamp)</argsstring>
        <name>alsa_write_flush</name>
        <param>
          <type><ref refid="pminternal_8h_1acb48fe118f5feaf74bc314943658b733" kindref="member">PmInternal</ref> *</type>
          <declname>midi</declname>
        </param>
        <param>
          <type><ref refid="portmidi_8h_1acf4245beeef251c4a46d66e99d77ffdf" kindref="member">PmTimestamp</ref></type>
          <declname>timestamp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/pmlinuxalsa.c" line="434" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/pmlinuxalsa.c" bodystart="434" bodyend="444"/>
      </memberdef>
      <memberdef kind="function" id="pmlinuxalsa_8c_1aa5f7bdd3b424bcdda4852abc7adfecf3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref></type>
        <definition>static PmError alsa_write_short</definition>
        <argsstring>(PmInternal *midi, PmEvent *event)</argsstring>
        <name>alsa_write_short</name>
        <param>
          <type><ref refid="pminternal_8h_1acb48fe118f5feaf74bc314943658b733" kindref="member">PmInternal</ref> *</type>
          <declname>midi</declname>
        </param>
        <param>
          <type><ref refid="struct_pm_event" kindref="compound">PmEvent</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/pmlinuxalsa.c" line="447" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/pmlinuxalsa.c" bodystart="447" bodyend="464"/>
      </memberdef>
      <memberdef kind="function" id="pmlinuxalsa_8c_1a0e4c196aec35cd6340cd5303dc5079a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref></type>
        <definition>PmError alsa_sysex</definition>
        <argsstring>(PmInternal *midi, PmTimestamp timestamp)</argsstring>
        <name>alsa_sysex</name>
        <param>
          <type><ref refid="pminternal_8h_1acb48fe118f5feaf74bc314943658b733" kindref="member">PmInternal</ref> *</type>
          <declname>midi</declname>
        </param>
        <param>
          <type><ref refid="portmidi_8h_1acf4245beeef251c4a46d66e99d77ffdf" kindref="member">PmTimestamp</ref></type>
          <declname>timestamp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/pmlinuxalsa.c" line="468" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/pmlinuxalsa.c" bodystart="468" bodyend="470"/>
      </memberdef>
      <memberdef kind="function" id="pmlinuxalsa_8c_1ad7ed6e1e55fb1c7fa485b60e2fe93ac6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portmidi_8h_1acf4245beeef251c4a46d66e99d77ffdf" kindref="member">PmTimestamp</ref></type>
        <definition>static PmTimestamp alsa_synchronize</definition>
        <argsstring>(PmInternal *midi)</argsstring>
        <name>alsa_synchronize</name>
        <param>
          <type><ref refid="pminternal_8h_1acb48fe118f5feaf74bc314943658b733" kindref="member">PmInternal</ref> *</type>
          <declname>midi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/pmlinuxalsa.c" line="473" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/pmlinuxalsa.c" bodystart="473" bodyend="480"/>
      </memberdef>
      <memberdef kind="function" id="pmlinuxalsa_8c_1a7bc3bade65f6b0109b1353c47e265771" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void handle_event</definition>
        <argsstring>(snd_seq_event_t *ev)</argsstring>
        <name>handle_event</name>
        <param>
          <type>snd_seq_event_t *</type>
          <declname>ev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/pmlinuxalsa.c" line="483" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/pmlinuxalsa.c" bodystart="483" bodyend="622"/>
      </memberdef>
      <memberdef kind="function" id="pmlinuxalsa_8c_1a1817277a99c1a2df5dd5476cac790b3e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref></type>
        <definition>static PmError alsa_poll</definition>
        <argsstring>(PmInternal *midi)</argsstring>
        <name>alsa_poll</name>
        <param>
          <type><ref refid="pminternal_8h_1acb48fe118f5feaf74bc314943658b733" kindref="member">PmInternal</ref> *</type>
          <declname>midi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/pmlinuxalsa.c" line="625" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/pmlinuxalsa.c" bodystart="625" bodyend="656"/>
      </memberdef>
      <memberdef kind="function" id="pmlinuxalsa_8c_1a14389557a443d11985f25dfcb84f8547" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static unsigned int alsa_has_host_error</definition>
        <argsstring>(PmInternal *midi)</argsstring>
        <name>alsa_has_host_error</name>
        <param>
          <type><ref refid="pminternal_8h_1acb48fe118f5feaf74bc314943658b733" kindref="member">PmInternal</ref> *</type>
          <declname>midi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/pmlinuxalsa.c" line="659" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/pmlinuxalsa.c" bodystart="659" bodyend="664"/>
      </memberdef>
      <memberdef kind="function" id="pmlinuxalsa_8c_1a8afeedb03fae48fe7c8c970febbce02c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void alsa_get_host_error</definition>
        <argsstring>(PmInternal *midi, char *msg, unsigned int len)</argsstring>
        <name>alsa_get_host_error</name>
        <param>
          <type><ref refid="pminternal_8h_1acb48fe118f5feaf74bc314943658b733" kindref="member">PmInternal</ref> *</type>
          <declname>midi</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>msg</declname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/pmlinuxalsa.c" line="667" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/pmlinuxalsa.c" bodystart="667" bodyend="673"/>
      </memberdef>
      <memberdef kind="function" id="pmlinuxalsa_8c_1ab2cda329f6e6115254f6141c0ee29d15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* pm_strdup</definition>
        <argsstring>(const char *s)</argsstring>
        <name>pm_strdup</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/pmlinuxalsa.c" line="714" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/pmlinuxalsa.c" bodystart="714" bodyend="720"/>
      </memberdef>
      <memberdef kind="function" id="pmlinuxalsa_8c_1acac1cffaebb86b112de17065bb71b776" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref></type>
        <definition>PmError pm_linuxalsa_init</definition>
        <argsstring>(void)</argsstring>
        <name>pm_linuxalsa_init</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/pmlinuxalsa.c" line="723" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/pmlinuxalsa.c" bodystart="723" bodyend="778"/>
      </memberdef>
      <memberdef kind="function" id="pmlinuxalsa_8c_1a975e3790b1038e878b4b10ff85060009" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void pm_linuxalsa_term</definition>
        <argsstring>(void)</argsstring>
        <name>pm_linuxalsa_term</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/pmlinuxalsa.c" line="781" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/pmlinuxalsa.c" bodystart="781" bodyend="790"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>pmlinuxalsa.c<sp/>--<sp/>system<sp/>specific<sp/>definitions</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>written<sp/>by:</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/>Roger<sp/>Dannenberg<sp/>(port<sp/>to<sp/>Alsa<sp/>0.9.x)</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/>Clemens<sp/>Ladisch<sp/>(provided<sp/>code<sp/>examples<sp/>and<sp/>invaluable<sp/>consulting)</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/>Jason<sp/>Cohen,<sp/>Rico<sp/>Colon,<sp/>Matt<sp/>Filippone<sp/>(Alsa<sp/>0.5.x<sp/>implementation)</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stdlib.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="portmidi_8h" kindref="compound">portmidi.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pmutil_8h" kindref="compound">pmutil.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pminternal_8h" kindref="compound">pminternal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pmlinuxalsa_8h" kindref="compound">pmlinuxalsa.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;string.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="porttime_8h" kindref="compound">porttime.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pmlinux_8h" kindref="compound">pmlinux.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;alsa/asoundlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>I<sp/>used<sp/>many<sp/>print<sp/>statements<sp/>to<sp/>debug<sp/>this<sp/>code.<sp/>I<sp/>left<sp/>them<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>source,<sp/>and<sp/>you<sp/>can<sp/>turn<sp/>them<sp/>on<sp/>by<sp/>changing<sp/>false<sp/>to<sp/>true<sp/>below:</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="pmlinuxalsa_8c_1acbbde1bd17dd8e09b46e3f0d809deea1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VERBOSE_ON<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="pmlinuxalsa_8c_1a42f8c497a1968074f38bf5055c650dca" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VERBOSE<sp/>if<sp/>(VERBOSE_ON)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="pmlinuxalsa_8c_1aa2197f6ca200566c0986e737edd211e4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MIDI_SYSEX<sp/><sp/><sp/><sp/><sp/><sp/>0xf0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="pmlinuxalsa_8c_1a140c8cfa4bbf1a03494abdbd639d49f2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MIDI_EOX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xf7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>SND_LIB_MAJOR<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>SND_LIB_MINOR<sp/>&lt;<sp/>9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>needs<sp/>ALSA<sp/>0.9.0<sp/>or<sp/>later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>to<sp/>store<sp/>client/port<sp/>in<sp/>the<sp/>device<sp/>descriptor<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="pmlinuxalsa_8c_1a98660597625d6388c0a56fcee3ed9bc7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAKE_DESCRIPTOR(client,<sp/>port)<sp/>((void*)(((client)<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>(port)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="pmlinuxalsa_8c_1aa8f729e8e3c9f2f233707f521702dba3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GET_DESCRIPTOR_CLIENT(info)<sp/>((((int)(info))<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0xff)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="pmlinuxalsa_8c_1a8143caa81e81b6ca9e00cab24766de23" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GET_DESCRIPTOR_PORT(info)<sp/>(((int)(info))<sp/>&amp;<sp/>0xff)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="pmlinuxalsa_8c_1aec93e83855ac17c3c25c55c37ca186dd" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BYTE<sp/>unsigned<sp/>char</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="structpm__fns__node" kindref="compound">pm_fns_node</ref><sp/><ref refid="pmlinuxalsa_8c_1a461d9fe3422027bcb23c08df8397b2d8" kindref="member">pm_linuxalsa_in_dictionary</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="structpm__fns__node" kindref="compound">pm_fns_node</ref><sp/><ref refid="pmlinuxalsa_8c_1ae7fa43a18d9f6d6231707b0f58e64d9c" kindref="member">pm_linuxalsa_out_dictionary</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>snd_seq_t<sp/>*seq<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/></highlight><highlight class="comment">//<sp/>all<sp/>input<sp/>comes<sp/>here,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>output<sp/>queue<sp/>allocated<sp/>on<sp/>seq</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>queue,<sp/>queue_used;<sp/></highlight><highlight class="comment">/*<sp/>one<sp/>for<sp/>all<sp/>ports,<sp/>reference<sp/>counted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="structalsa__descriptor__struct" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structalsa__descriptor__struct" kindref="compound">alsa_descriptor_struct</ref><sp/>{</highlight></codeline>
<codeline lineno="49" refid="structalsa__descriptor__struct_1a5e07931ecedb249e30d2af6bce04d440" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structalsa__descriptor__struct_1a5e07931ecedb249e30d2af6bce04d440" kindref="member">client</ref>;</highlight></codeline>
<codeline lineno="50" refid="structalsa__descriptor__struct_1af44fabb4f59f5e7140a0886137694914" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structalsa__descriptor__struct_1af44fabb4f59f5e7140a0886137694914" kindref="member">port</ref>;</highlight></codeline>
<codeline lineno="51" refid="structalsa__descriptor__struct_1a99d58c148eddf8bea8f1fbc67c8d640d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structalsa__descriptor__struct_1a99d58c148eddf8bea8f1fbc67c8d640d" kindref="member">this_port</ref>;</highlight></codeline>
<codeline lineno="52" refid="structalsa__descriptor__struct_1a846e4059a158f06992ddba837d74a4f4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structalsa__descriptor__struct_1a846e4059a158f06992ddba837d74a4f4" kindref="member">in_sysex</ref>;</highlight></codeline>
<codeline lineno="53" refid="structalsa__descriptor__struct_1a6f4027d2a0dd8eeaeb4d802cc1b10edb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_midi_event_t<sp/>*<ref refid="structalsa__descriptor__struct_1a6f4027d2a0dd8eeaeb4d802cc1b10edb" kindref="member">parser</ref>;</highlight></codeline>
<codeline lineno="54" refid="structalsa__descriptor__struct_1a72ee47beba102ffed919a03c7657a087" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structalsa__descriptor__struct_1a72ee47beba102ffed919a03c7657a087" kindref="member">error</ref>;<sp/></highlight><highlight class="comment">/*<sp/>host<sp/>error<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal">}<sp/><ref refid="pmlinuxalsa_8c_1aad02e25908ef846cfdb65da0738daf23" kindref="member">alsa_descriptor_node</ref>,<sp/>*<ref refid="pmlinuxalsa_8c_1a3db8dba62afe3f1e2cffcea3aad17ca0" kindref="member">alsa_descriptor_type</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>get_alsa_error_text<sp/>--<sp/>copy<sp/>error<sp/>text<sp/>to<sp/>potentially<sp/>short<sp/>string<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>get_alsa_error_text(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*msg,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err)</highlight></codeline>
<codeline lineno="61"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errlen<sp/>=<sp/>strlen(snd_strerror(err));</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(errlen<sp/>&lt;<sp/>len)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashrout_8h_1a11280e8971e1a91d58ccd7a36db51a8a" kindref="member">strcpy</ref>(msg,<sp/>snd_strerror(err));</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&gt;<sp/>20)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(msg,<sp/></highlight><highlight class="stringliteral">&quot;Alsa<sp/>error<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>err);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&gt;<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashrout_8h_1a11280e8971e1a91d58ccd7a36db51a8a" kindref="member">strcpy</ref>(msg,<sp/></highlight><highlight class="stringliteral">&quot;Alsa&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>queue<sp/>is<sp/>shared<sp/>by<sp/>both<sp/>input<sp/>and<sp/>output,<sp/>reference<sp/>counted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/>alsa_use_queue(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="77"><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(queue_used<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd_seq_queue_tempo_t<sp/>*<ref refid="seqread_8c_1ab60065e3a97916e09b76879be6be733f" kindref="member">tempo</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>queue<sp/>=<sp/>snd_seq_alloc_queue(seq);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(queue<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1af455cd83ef19eb07a7996c38dd806ee4" kindref="member">pm_hosterror</ref><sp/>=<sp/>queue;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a29400da63af0c60becca3e04a2c75fe5" kindref="member">pmHostError</ref>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd_seq_queue_tempo_alloca(&amp;tempo);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd_seq_queue_tempo_set_tempo(tempo,<sp/>480000);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd_seq_queue_tempo_set_ppq(tempo,<sp/>480);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1af455cd83ef19eb07a7996c38dd806ee4" kindref="member">pm_hosterror</ref><sp/>=<sp/>snd_seq_set_queue_tempo(seq,<sp/>queue,<sp/>tempo);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="pminternal_8h_1af455cd83ef19eb07a7996c38dd806ee4" kindref="member">pm_hosterror</ref><sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a29400da63af0c60becca3e04a2c75fe5" kindref="member">pmHostError</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd_seq_start_queue(seq,<sp/>queue,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd_seq_drain_output(seq);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>++queue_used;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a9545ea325397bd81d2d81bdd7d92cba4" kindref="member">pmNoError</ref>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>alsa_unuse_queue(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="102"><highlight class="normal">{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(--queue_used<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd_seq_stop_queue(seq,<sp/>queue,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd_seq_drain_output(seq);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd_seq_free_queue(seq,<sp/>queue);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pmlinuxalsa_8c_1a42f8c497a1968074f38bf5055c650dca" kindref="member">VERBOSE</ref><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;queue<sp/>freed\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>midi_message_length<sp/>--<sp/>how<sp/>many<sp/>bytes<sp/>in<sp/>a<sp/>message?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>midi_message_length(<ref refid="group__grp__events__filters_1gad8455e4afe978a74c68e345bef99761d" kindref="member">PmMessage</ref><sp/>message)</highlight></codeline>
<codeline lineno="114"><highlight class="normal">{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>message<sp/>&amp;=<sp/>0xff;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(message<sp/>&lt;<sp/>0x80)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(message<sp/>&lt;<sp/>0xf0)<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="test__lib_f_l_a_c_2format_8c_1ac94dc16b22556ba5fa815655f27442da" kindref="member">length</ref>[]<sp/>=<sp/>{3,<sp/>3,<sp/>3,<sp/>3,<sp/>2,<sp/>2,<sp/>3};</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>length[(message<sp/>-<sp/>0x80)<sp/>&gt;&gt;<sp/>4];</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="test__lib_f_l_a_c_2format_8c_1ac94dc16b22556ba5fa815655f27442da" kindref="member">length</ref>[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-1,<sp/>2,<sp/>3,<sp/>2,<sp/>0,<sp/>0,<sp/>1,<sp/>-1,<sp/>1,<sp/>0,<sp/>1,<sp/>1,<sp/>1,<sp/>0,<sp/>1,<sp/>1};</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>length[message<sp/>-<sp/>0xf0];</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/>alsa_out_open(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*<ref refid="midiclock_8c_1a55d909f140b116a12ba644132b67031e" kindref="member">midi</ref>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*driverInfo)<sp/></highlight></codeline>
<codeline lineno="130"><highlight class="normal">{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*client_port<sp/>=<sp/><ref refid="pminternal_8h_1a8a86f0e79d5794e79c94c3f380a7088c" kindref="member">descriptors</ref>[midi-&gt;<ref refid="structpm__internal__struct_1a6434c3e3e21fad6289c32c480e13edd5" kindref="member">device_id</ref>].<ref refid="structdescriptor__node_1a6a355a03bd3961544ca836f2e3fe477a" kindref="member">descriptor</ref>;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>alsa_descriptor_type<sp/><ref refid="_export_p_c_m_8cpp_1a717c8108dd6ce1ecc369d9bac2f471f2" kindref="member">desc</ref><sp/>=<sp/>(<ref refid="pmlinuxalsa_8c_1a3db8dba62afe3f1e2cffcea3aad17ca0" kindref="member">alsa_descriptor_type</ref>)<sp/></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1a5e0011f472e9c71efa58816f628eed08" kindref="member">pm_alloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structalsa__descriptor__struct" kindref="compound">alsa_descriptor_node</ref>));</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_seq_port_info_t<sp/>*<ref refid="lib_2expat_8h_1a20806b446e455c50dc5653b7d43e3de2" kindref="member">info</ref>;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!desc)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a2cd8d4985678f6c92748dcc1177a2512" kindref="member">pmInsufficientMemory</ref>;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_seq_port_info_alloca(&amp;info);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_seq_port_info_set_port(info,<sp/>midi-&gt;<ref refid="structpm__internal__struct_1a6434c3e3e21fad6289c32c480e13edd5" kindref="member">device_id</ref>);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_seq_port_info_set_capability(info,<sp/>SND_SEQ_PORT_CAP_WRITE<sp/>|</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SND_SEQ_PORT_CAP_READ);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_seq_port_info_set_type(info,<sp/>SND_SEQ_PORT_TYPE_MIDI_GENERIC<sp/>|<sp/></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SND_SEQ_PORT_TYPE_APPLICATION);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_seq_port_info_set_port_specified(info,<sp/>1);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>=<sp/>snd_seq_create_port(seq,<sp/>info);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>free_desc;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>fill<sp/>in<sp/>fields<sp/>of<sp/>desc,<sp/>which<sp/>is<sp/>passed<sp/>to<sp/>pm_write<sp/>routines<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1ae973f4d675d47c1b858ab4d2fb51281f" kindref="member">descriptor</ref><sp/>=<sp/><ref refid="_export_p_c_m_8cpp_1a717c8108dd6ce1ecc369d9bac2f471f2" kindref="member">desc</ref>;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>desc-&gt;<ref refid="structalsa__descriptor__struct_1a5e07931ecedb249e30d2af6bce04d440" kindref="member">client</ref><sp/>=<sp/><ref refid="pmlinuxalsa_8c_1aa8f729e8e3c9f2f233707f521702dba3" kindref="member">GET_DESCRIPTOR_CLIENT</ref>(client_port);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>desc-&gt;<ref refid="structalsa__descriptor__struct_1af44fabb4f59f5e7140a0886137694914" kindref="member">port</ref><sp/>=<sp/><ref refid="pmlinuxalsa_8c_1a8143caa81e81b6ca9e00cab24766de23" kindref="member">GET_DESCRIPTOR_PORT</ref>(client_port);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>desc-&gt;<ref refid="structalsa__descriptor__struct_1a99d58c148eddf8bea8f1fbc67c8d640d" kindref="member">this_port</ref><sp/>=<sp/>midi-&gt;<ref refid="structpm__internal__struct_1a6434c3e3e21fad6289c32c480e13edd5" kindref="member">device_id</ref>;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>desc-&gt;<ref refid="structalsa__descriptor__struct_1a846e4059a158f06992ddba837d74a4f4" kindref="member">in_sysex</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>desc-&gt;<ref refid="structalsa__descriptor__struct_1a72ee47beba102ffed919a03c7657a087" kindref="member">error</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>=<sp/>snd_midi_event_new(<ref refid="portmidi_8h_1a22eb909045c1638449c78e8a6207611b" kindref="member">PM_DEFAULT_SYSEX_BUFFER_SIZE</ref>,<sp/>&amp;desc-&gt;<ref refid="structalsa__descriptor__struct_1a6f4027d2a0dd8eeaeb4d802cc1b10edb" kindref="member">parser</ref>);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>free_this_port;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(midi-&gt;<ref refid="structpm__internal__struct_1ad1458cf67c24a176a66dd8350c50ac0a" kindref="member">latency</ref><sp/>&gt;<sp/>0)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>must<sp/>delay<sp/>output<sp/>using<sp/>a<sp/>queue<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>alsa_use_queue();</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>free_parser;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>snd_seq_connect_to(seq,<sp/>desc-&gt;<ref refid="structalsa__descriptor__struct_1a99d58c148eddf8bea8f1fbc67c8d640d" kindref="member">this_port</ref>,<sp/>desc-&gt;<ref refid="structalsa__descriptor__struct_1a5e07931ecedb249e30d2af6bce04d440" kindref="member">client</ref>,<sp/>desc-&gt;<ref refid="structalsa__descriptor__struct_1af44fabb4f59f5e7140a0886137694914" kindref="member">port</ref>);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>unuse_queue;<sp/><sp/></highlight><highlight class="comment">/*<sp/>clean<sp/>up<sp/>and<sp/>return<sp/>on<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>snd_seq_connect_to(seq,<sp/>desc-&gt;<ref refid="structalsa__descriptor__struct_1a99d58c148eddf8bea8f1fbc67c8d640d" kindref="member">this_port</ref>,<sp/>desc-&gt;<ref refid="structalsa__descriptor__struct_1a5e07931ecedb249e30d2af6bce04d440" kindref="member">client</ref>,<sp/>desc-&gt;<ref refid="structalsa__descriptor__struct_1af44fabb4f59f5e7140a0886137694914" kindref="member">port</ref>);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>free_parser;<sp/><sp/></highlight><highlight class="comment">/*<sp/>clean<sp/>up<sp/>and<sp/>return<sp/>on<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a9545ea325397bd81d2d81bdd7d92cba4" kindref="member">pmNoError</ref>;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/>unuse_queue:</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>alsa_unuse_queue();</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/>free_parser:</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_midi_event_free(desc-&gt;<ref refid="structalsa__descriptor__struct_1a6f4027d2a0dd8eeaeb4d802cc1b10edb" kindref="member">parser</ref>);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/>free_this_port:</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_seq_delete_port(seq,<sp/>desc-&gt;<ref refid="structalsa__descriptor__struct_1a99d58c148eddf8bea8f1fbc67c8d640d" kindref="member">this_port</ref>);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/>free_desc:</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1a9ce0079220419af65fc4a78af8d422f2" kindref="member">pm_free</ref>(desc);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1af455cd83ef19eb07a7996c38dd806ee4" kindref="member">pm_hosterror</ref><sp/>=<sp/>err;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_alsa_error_text(<ref refid="pminternal_8h_1ac24a8881f0ef8c3a944349bee479cf05" kindref="member">pm_hosterror_text</ref>,<sp/><ref refid="portmidi_8h_1a40b1b3ff3147b3e0dff5843911345c8e" kindref="member">PM_HOST_ERROR_MSG_LEN</ref>,<sp/>err);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a29400da63af0c60becca3e04a2c75fe5" kindref="member">pmHostError</ref>;</highlight></codeline>
<codeline lineno="186"><highlight class="normal">}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/>alsa_write_byte(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*midi,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>byte,<sp/></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portmidi_8h_1acf4245beeef251c4a46d66e99d77ffdf" kindref="member">PmTimestamp</ref><sp/>timestamp)</highlight></codeline>
<codeline lineno="191"><highlight class="normal">{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>alsa_descriptor_type<sp/><ref refid="_export_p_c_m_8cpp_1a717c8108dd6ce1ecc369d9bac2f471f2" kindref="member">desc</ref><sp/>=<sp/>(<ref refid="pmlinuxalsa_8c_1a3db8dba62afe3f1e2cffcea3aad17ca0" kindref="member">alsa_descriptor_type</ref>)<sp/>midi-&gt;<ref refid="structpm__internal__struct_1ae973f4d675d47c1b858ab4d2fb51281f" kindref="member">descriptor</ref>;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_seq_event_t<sp/>ev;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_seq_ev_clear(&amp;ev);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(snd_midi_event_encode_byte(desc-&gt;<ref refid="structalsa__descriptor__struct_1a6f4027d2a0dd8eeaeb4d802cc1b10edb" kindref="member">parser</ref>,<sp/>byte,<sp/>&amp;ev)<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd_seq_ev_set_dest(&amp;ev,<sp/>desc-&gt;<ref refid="structalsa__descriptor__struct_1a5e07931ecedb249e30d2af6bce04d440" kindref="member">client</ref>,<sp/>desc-&gt;<ref refid="structalsa__descriptor__struct_1af44fabb4f59f5e7140a0886137694914" kindref="member">port</ref>);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd_seq_ev_set_source(&amp;ev,<sp/>desc-&gt;<ref refid="structalsa__descriptor__struct_1a99d58c148eddf8bea8f1fbc67c8d640d" kindref="member">this_port</ref>);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(midi-&gt;<ref refid="structpm__internal__struct_1ad1458cf67c24a176a66dd8350c50ac0a" kindref="member">latency</ref><sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>compute<sp/>relative<sp/>time<sp/>of<sp/>event<sp/>=<sp/>timestamp<sp/>-<sp/>now<sp/>+<sp/>latency<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portmidi_8h_1acf4245beeef251c4a46d66e99d77ffdf" kindref="member">PmTimestamp</ref><sp/>now<sp/>=<sp/>(midi-&gt;<ref refid="structpm__internal__struct_1aa2268f6b4916d4ae3de765d880bc8641" kindref="member">time_proc</ref><sp/>?<sp/></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1aa2268f6b4916d4ae3de765d880bc8641" kindref="member">time_proc</ref>(midi-&gt;<ref refid="structpm__internal__struct_1ac3ee4fe374d89f3040708206648acb07" kindref="member">time_info</ref>)<sp/>:<sp/></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="porttime_8h_1a9a335bb8c04c85bf85d807dd448d72d0" kindref="member">Pt_Time</ref>(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>));</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>when<sp/>=<sp/>timestamp;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>timestamp<sp/>is<sp/>zero,<sp/>send<sp/>immediately<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>otherwise<sp/>compute<sp/>time<sp/>delay<sp/>and<sp/>use<sp/>delay<sp/>if<sp/>positive<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(when<sp/>==<sp/>0)<sp/>when<sp/>=<sp/>now;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>when<sp/>=<sp/>(when<sp/>-<sp/>now)<sp/>+<sp/>midi-&gt;<ref refid="structpm__internal__struct_1ad1458cf67c24a176a66dd8350c50ac0a" kindref="member">latency</ref>;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="winfun_8c_1ab24f32995c1d94525943b4568cce20cb" kindref="member">if</ref><sp/>(when<sp/>&lt;<sp/>0)<sp/>when<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pmlinuxalsa_8c_1a42f8c497a1968074f38bf5055c650dca" kindref="member">VERBOSE</ref><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;timestamp<sp/>%d<sp/>now<sp/>%d<sp/>latency<sp/>%d,<sp/>&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>timestamp,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>now,<sp/>midi-&gt;<ref refid="structpm__internal__struct_1ad1458cf67c24a176a66dd8350c50ac0a" kindref="member">latency</ref>);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pmlinuxalsa_8c_1a42f8c497a1968074f38bf5055c650dca" kindref="member">VERBOSE</ref><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;scheduling<sp/>event<sp/>after<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>when);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>message<sp/>is<sp/>sent<sp/>in<sp/>relative<sp/>ticks,<sp/>where<sp/>1<sp/>tick<sp/>=<sp/>1<sp/>ms<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd_seq_ev_schedule_tick(&amp;ev,<sp/>queue,<sp/>1,<sp/>when);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>NOTE:<sp/>for<sp/>cases<sp/>where<sp/>the<sp/>user<sp/>does<sp/>not<sp/>supply<sp/>a<sp/>time<sp/>function,</highlight></codeline>
<codeline lineno="217"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>we<sp/>could<sp/>optimize<sp/>the<sp/>code<sp/>by<sp/>not<sp/>starting<sp/>Pt_Time<sp/>and<sp/>using</highlight></codeline>
<codeline lineno="218"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>alsa<sp/>tick<sp/>time<sp/>instead.<sp/>I<sp/>didn&apos;t<sp/>do<sp/>this<sp/>because<sp/>it<sp/>would</highlight></codeline>
<codeline lineno="219"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entail<sp/>changing<sp/>the<sp/>queue<sp/>management<sp/>to<sp/>start<sp/>the<sp/>queue<sp/>tick</highlight></codeline>
<codeline lineno="220"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>when<sp/>PortMidi<sp/>is<sp/>initialized<sp/>and<sp/>keep<sp/>it<sp/>running<sp/>until</highlight></codeline>
<codeline lineno="221"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PortMidi<sp/>is<sp/>terminated.<sp/>(This<sp/>should<sp/>be<sp/>simple,<sp/>but<sp/>it&apos;s<sp/>not</highlight></codeline>
<codeline lineno="222"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>how<sp/>the<sp/>code<sp/>works<sp/>now.)<sp/>-RBD<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>send<sp/>event<sp/>out<sp/>without<sp/>queueing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pmlinuxalsa_8c_1a42f8c497a1968074f38bf5055c650dca" kindref="member">VERBOSE</ref><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;direct\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ev.queue<sp/>=<sp/>SND_SEQ_QUEUE_DIRECT;</highlight></codeline>
<codeline lineno="226"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ev.dest.client<sp/>=<sp/>SND_SEQ_ADDRESS_SUBSCRIBERS;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd_seq_ev_set_direct(&amp;ev);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pmlinuxalsa_8c_1a42f8c497a1968074f38bf5055c650dca" kindref="member">VERBOSE</ref><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;sending<sp/>event\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>snd_seq_event_output(seq,<sp/>&amp;ev);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc-&gt;<ref refid="structalsa__descriptor__struct_1a72ee47beba102ffed919a03c7657a087" kindref="member">error</ref><sp/>=<sp/>err;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a29400da63af0c60becca3e04a2c75fe5" kindref="member">pmHostError</ref>;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a9545ea325397bd81d2d81bdd7d92cba4" kindref="member">pmNoError</ref>;</highlight></codeline>
<codeline lineno="237"><highlight class="normal">}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/>alsa_out_close(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*midi)</highlight></codeline>
<codeline lineno="241"><highlight class="normal">{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>alsa_descriptor_type<sp/><ref refid="_export_p_c_m_8cpp_1a717c8108dd6ce1ecc369d9bac2f471f2" kindref="member">desc</ref><sp/>=<sp/>(<ref refid="pmlinuxalsa_8c_1a3db8dba62afe3f1e2cffcea3aad17ca0" kindref="member">alsa_descriptor_type</ref>)<sp/>midi-&gt;<ref refid="structpm__internal__struct_1ae973f4d675d47c1b858ab4d2fb51281f" kindref="member">descriptor</ref>;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="winfun_8c_1ab24f32995c1d94525943b4568cce20cb" kindref="member">if</ref><sp/>(!desc)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9ad918f36038e977eb97cd15daa851670c" kindref="member">pmBadPtr</ref>;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="pminternal_8h_1af455cd83ef19eb07a7996c38dd806ee4" kindref="member">pm_hosterror</ref><sp/>=<sp/>snd_seq_disconnect_to(seq,<sp/>desc-&gt;<ref refid="structalsa__descriptor__struct_1a99d58c148eddf8bea8f1fbc67c8d640d" kindref="member">this_port</ref>,<sp/></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc-&gt;<ref refid="structalsa__descriptor__struct_1a5e07931ecedb249e30d2af6bce04d440" kindref="member">client</ref>,<sp/>desc-&gt;<ref refid="structalsa__descriptor__struct_1af44fabb4f59f5e7140a0886137694914" kindref="member">port</ref>)))<sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>there&apos;s<sp/>an<sp/>error,<sp/>try<sp/>to<sp/>delete<sp/>the<sp/>port<sp/>anyway,<sp/>but<sp/>don&apos;t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>change<sp/>the<sp/>pm_hosterror<sp/>value<sp/>so<sp/>we<sp/>retain<sp/>the<sp/>first<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd_seq_delete_port(seq,<sp/>desc-&gt;<ref refid="structalsa__descriptor__struct_1a99d58c148eddf8bea8f1fbc67c8d640d" kindref="member">this_port</ref>);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>if<sp/>there&apos;s<sp/>no<sp/>error,<sp/>delete<sp/>the<sp/>port<sp/>and<sp/>retain<sp/>any<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1af455cd83ef19eb07a7996c38dd806ee4" kindref="member">pm_hosterror</ref><sp/>=<sp/>snd_seq_delete_port(seq,<sp/>desc-&gt;<ref refid="structalsa__descriptor__struct_1a99d58c148eddf8bea8f1fbc67c8d640d" kindref="member">this_port</ref>);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(midi-&gt;<ref refid="structpm__internal__struct_1ad1458cf67c24a176a66dd8350c50ac0a" kindref="member">latency</ref><sp/>&gt;<sp/>0)<sp/>alsa_unuse_queue();</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_midi_event_free(desc-&gt;<ref refid="structalsa__descriptor__struct_1a6f4027d2a0dd8eeaeb4d802cc1b10edb" kindref="member">parser</ref>);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1ae973f4d675d47c1b858ab4d2fb51281f" kindref="member">descriptor</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/></highlight><highlight class="comment">/*<sp/>destroy<sp/>the<sp/>pointer<sp/>to<sp/>signify<sp/>&quot;closed&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1a9ce0079220419af65fc4a78af8d422f2" kindref="member">pm_free</ref>(desc);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="pminternal_8h_1af455cd83ef19eb07a7996c38dd806ee4" kindref="member">pm_hosterror</ref>)<sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_alsa_error_text(<ref refid="pminternal_8h_1ac24a8881f0ef8c3a944349bee479cf05" kindref="member">pm_hosterror_text</ref>,<sp/><ref refid="portmidi_8h_1a40b1b3ff3147b3e0dff5843911345c8e" kindref="member">PM_HOST_ERROR_MSG_LEN</ref>,<sp/></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1af455cd83ef19eb07a7996c38dd806ee4" kindref="member">pm_hosterror</ref>);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a29400da63af0c60becca3e04a2c75fe5" kindref="member">pmHostError</ref>;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a9545ea325397bd81d2d81bdd7d92cba4" kindref="member">pmNoError</ref>;</highlight></codeline>
<codeline lineno="263"><highlight class="normal">}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/>alsa_in_open(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*midi,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*driverInfo)</highlight></codeline>
<codeline lineno="267"><highlight class="normal">{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*client_port<sp/>=<sp/><ref refid="pminternal_8h_1a8a86f0e79d5794e79c94c3f380a7088c" kindref="member">descriptors</ref>[midi-&gt;<ref refid="structpm__internal__struct_1a6434c3e3e21fad6289c32c480e13edd5" kindref="member">device_id</ref>].<ref refid="structdescriptor__node_1a6a355a03bd3961544ca836f2e3fe477a" kindref="member">descriptor</ref>;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>alsa_descriptor_type<sp/><ref refid="_export_p_c_m_8cpp_1a717c8108dd6ce1ecc369d9bac2f471f2" kindref="member">desc</ref><sp/>=<sp/>(<ref refid="pmlinuxalsa_8c_1a3db8dba62afe3f1e2cffcea3aad17ca0" kindref="member">alsa_descriptor_type</ref>)<sp/></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1a5e0011f472e9c71efa58816f628eed08" kindref="member">pm_alloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structalsa__descriptor__struct" kindref="compound">alsa_descriptor_node</ref>));</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_seq_port_info_t<sp/>*<ref refid="lib_2expat_8h_1a20806b446e455c50dc5653b7d43e3de2" kindref="member">info</ref>;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_seq_port_subscribe_t<sp/>*sub;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_seq_addr_t<sp/>addr;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!desc)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a2cd8d4985678f6c92748dcc1177a2512" kindref="member">pmInsufficientMemory</ref>;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>=<sp/>alsa_use_queue();</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>free_desc;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_seq_port_info_alloca(&amp;info);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_seq_port_info_set_port(info,<sp/>midi-&gt;<ref refid="structpm__internal__struct_1a6434c3e3e21fad6289c32c480e13edd5" kindref="member">device_id</ref>);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_seq_port_info_set_capability(info,<sp/>SND_SEQ_PORT_CAP_WRITE<sp/>|</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SND_SEQ_PORT_CAP_READ);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_seq_port_info_set_type(info,<sp/>SND_SEQ_PORT_TYPE_MIDI_GENERIC<sp/>|<sp/></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SND_SEQ_PORT_TYPE_APPLICATION);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_seq_port_info_set_port_specified(info,<sp/>1);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>=<sp/>snd_seq_create_port(seq,<sp/>info);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>free_queue;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>fill<sp/>in<sp/>fields<sp/>of<sp/>desc,<sp/>which<sp/>is<sp/>passed<sp/>to<sp/>pm_write<sp/>routines<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1ae973f4d675d47c1b858ab4d2fb51281f" kindref="member">descriptor</ref><sp/>=<sp/><ref refid="_export_p_c_m_8cpp_1a717c8108dd6ce1ecc369d9bac2f471f2" kindref="member">desc</ref>;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>desc-&gt;<ref refid="structalsa__descriptor__struct_1a5e07931ecedb249e30d2af6bce04d440" kindref="member">client</ref><sp/>=<sp/><ref refid="pmlinuxalsa_8c_1aa8f729e8e3c9f2f233707f521702dba3" kindref="member">GET_DESCRIPTOR_CLIENT</ref>(client_port);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>desc-&gt;<ref refid="structalsa__descriptor__struct_1af44fabb4f59f5e7140a0886137694914" kindref="member">port</ref><sp/>=<sp/><ref refid="pmlinuxalsa_8c_1a8143caa81e81b6ca9e00cab24766de23" kindref="member">GET_DESCRIPTOR_PORT</ref>(client_port);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>desc-&gt;<ref refid="structalsa__descriptor__struct_1a99d58c148eddf8bea8f1fbc67c8d640d" kindref="member">this_port</ref><sp/>=<sp/>midi-&gt;<ref refid="structpm__internal__struct_1a6434c3e3e21fad6289c32c480e13edd5" kindref="member">device_id</ref>;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>desc-&gt;<ref refid="structalsa__descriptor__struct_1a846e4059a158f06992ddba837d74a4f4" kindref="member">in_sysex</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>desc-&gt;<ref refid="structalsa__descriptor__struct_1a72ee47beba102ffed919a03c7657a087" kindref="member">error</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pmlinuxalsa_8c_1a42f8c497a1968074f38bf5055c650dca" kindref="member">VERBOSE</ref><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;snd_seq_connect_from:<sp/>%d<sp/>%d<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc-&gt;<ref refid="structalsa__descriptor__struct_1a99d58c148eddf8bea8f1fbc67c8d640d" kindref="member">this_port</ref>,<sp/>desc-&gt;<ref refid="structalsa__descriptor__struct_1a5e07931ecedb249e30d2af6bce04d440" kindref="member">client</ref>,<sp/>desc-&gt;<ref refid="structalsa__descriptor__struct_1af44fabb4f59f5e7140a0886137694914" kindref="member">port</ref>);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_seq_port_subscribe_alloca(&amp;sub);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>addr.client<sp/>=<sp/>snd_seq_client_id(seq);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>addr.port<sp/>=<sp/>desc-&gt;<ref refid="structalsa__descriptor__struct_1a99d58c148eddf8bea8f1fbc67c8d640d" kindref="member">this_port</ref>;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_seq_port_subscribe_set_dest(sub,<sp/>&amp;addr);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/>addr.client<sp/>=<sp/>desc-&gt;<ref refid="structalsa__descriptor__struct_1a5e07931ecedb249e30d2af6bce04d440" kindref="member">client</ref>;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>addr.port<sp/>=<sp/>desc-&gt;<ref refid="structalsa__descriptor__struct_1af44fabb4f59f5e7140a0886137694914" kindref="member">port</ref>;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_seq_port_subscribe_set_sender(sub,<sp/>&amp;addr);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_seq_port_subscribe_set_time_update(sub,<sp/>1);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>this<sp/>doesn&apos;t<sp/>seem<sp/>to<sp/>work:<sp/>messages<sp/>come<sp/>in<sp/>with<sp/>real<sp/>timestamps<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_seq_port_subscribe_set_time_real(sub,<sp/>0);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>=<sp/>snd_seq_subscribe_port(seq,<sp/>sub);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>err<sp/>=<sp/></highlight></codeline>
<codeline lineno="314"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd_seq_connect_from(seq,<sp/>desc-&gt;this_port,<sp/>desc-&gt;client,<sp/>desc-&gt;port);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>free_this_port;<sp/><sp/></highlight><highlight class="comment">/*<sp/>clean<sp/>up<sp/>and<sp/>return<sp/>on<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a9545ea325397bd81d2d81bdd7d92cba4" kindref="member">pmNoError</ref>;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/>free_this_port:</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_seq_delete_port(seq,<sp/>desc-&gt;<ref refid="structalsa__descriptor__struct_1a99d58c148eddf8bea8f1fbc67c8d640d" kindref="member">this_port</ref>);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/>free_queue:</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>alsa_unuse_queue();</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/>free_desc:</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1a9ce0079220419af65fc4a78af8d422f2" kindref="member">pm_free</ref>(desc);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1af455cd83ef19eb07a7996c38dd806ee4" kindref="member">pm_hosterror</ref><sp/>=<sp/>err;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_alsa_error_text(<ref refid="pminternal_8h_1ac24a8881f0ef8c3a944349bee479cf05" kindref="member">pm_hosterror_text</ref>,<sp/><ref refid="portmidi_8h_1a40b1b3ff3147b3e0dff5843911345c8e" kindref="member">PM_HOST_ERROR_MSG_LEN</ref>,<sp/>err);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a29400da63af0c60becca3e04a2c75fe5" kindref="member">pmHostError</ref>;</highlight></codeline>
<codeline lineno="329"><highlight class="normal">}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/>alsa_in_close(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*midi)</highlight></codeline>
<codeline lineno="332"><highlight class="normal">{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>alsa_descriptor_type<sp/><ref refid="_export_p_c_m_8cpp_1a717c8108dd6ce1ecc369d9bac2f471f2" kindref="member">desc</ref><sp/>=<sp/>(<ref refid="pmlinuxalsa_8c_1a3db8dba62afe3f1e2cffcea3aad17ca0" kindref="member">alsa_descriptor_type</ref>)<sp/>midi-&gt;<ref refid="structpm__internal__struct_1ae973f4d675d47c1b858ab4d2fb51281f" kindref="member">descriptor</ref>;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="winfun_8c_1ab24f32995c1d94525943b4568cce20cb" kindref="member">if</ref><sp/>(!desc)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9ad918f36038e977eb97cd15daa851670c" kindref="member">pmBadPtr</ref>;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="pminternal_8h_1af455cd83ef19eb07a7996c38dd806ee4" kindref="member">pm_hosterror</ref><sp/>=<sp/>snd_seq_disconnect_from(seq,<sp/>desc-&gt;<ref refid="structalsa__descriptor__struct_1a99d58c148eddf8bea8f1fbc67c8d640d" kindref="member">this_port</ref>,<sp/></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc-&gt;<ref refid="structalsa__descriptor__struct_1a5e07931ecedb249e30d2af6bce04d440" kindref="member">client</ref>,<sp/>desc-&gt;<ref refid="structalsa__descriptor__struct_1af44fabb4f59f5e7140a0886137694914" kindref="member">port</ref>)))<sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd_seq_delete_port(seq,<sp/>desc-&gt;<ref refid="structalsa__descriptor__struct_1a99d58c148eddf8bea8f1fbc67c8d640d" kindref="member">this_port</ref>);<sp/></highlight><highlight class="comment">/*<sp/>try<sp/>to<sp/>close<sp/>port<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1af455cd83ef19eb07a7996c38dd806ee4" kindref="member">pm_hosterror</ref><sp/>=<sp/>snd_seq_delete_port(seq,<sp/>desc-&gt;<ref refid="structalsa__descriptor__struct_1a99d58c148eddf8bea8f1fbc67c8d640d" kindref="member">this_port</ref>);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>alsa_unuse_queue();</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>midi-&gt;<ref refid="structpm__internal__struct_1ae973f4d675d47c1b858ab4d2fb51281f" kindref="member">descriptor</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1a9ce0079220419af65fc4a78af8d422f2" kindref="member">pm_free</ref>(desc);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="pminternal_8h_1af455cd83ef19eb07a7996c38dd806ee4" kindref="member">pm_hosterror</ref>)<sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_alsa_error_text(<ref refid="pminternal_8h_1ac24a8881f0ef8c3a944349bee479cf05" kindref="member">pm_hosterror_text</ref>,<sp/><ref refid="portmidi_8h_1a40b1b3ff3147b3e0dff5843911345c8e" kindref="member">PM_HOST_ERROR_MSG_LEN</ref>,<sp/></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1af455cd83ef19eb07a7996c38dd806ee4" kindref="member">pm_hosterror</ref>);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a29400da63af0c60becca3e04a2c75fe5" kindref="member">pmHostError</ref>;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a9545ea325397bd81d2d81bdd7d92cba4" kindref="member">pmNoError</ref>;</highlight></codeline>
<codeline lineno="350"><highlight class="normal">}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/>alsa_abort(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*midi)</highlight></codeline>
<codeline lineno="354"><highlight class="normal">{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>NOTE:<sp/>ALSA<sp/>documentation<sp/>is<sp/>vague.<sp/>This<sp/>is<sp/>supposed<sp/>to<sp/></highlight></codeline>
<codeline lineno="356"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>remove<sp/>any<sp/>pending<sp/>output<sp/>messages.<sp/>If<sp/>you<sp/>can<sp/>test<sp/>and<sp/></highlight></codeline>
<codeline lineno="357"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>confirm<sp/>this<sp/>code<sp/>is<sp/>correct,<sp/>please<sp/>update<sp/>this<sp/>comment.<sp/>-RBD</highlight></codeline>
<codeline lineno="358"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Unfortunately,<sp/>I<sp/>can&apos;t<sp/>even<sp/>compile<sp/>it<sp/>--<sp/>my<sp/>ALSA<sp/>version<sp/></highlight></codeline>
<codeline lineno="360"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>does<sp/>not<sp/>implement<sp/>snd_seq_remove_events_t,<sp/>so<sp/>this<sp/>does</highlight></codeline>
<codeline lineno="361"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>not<sp/>compile.<sp/>I&apos;ll<sp/>try<sp/>again,<sp/>but<sp/>it<sp/>looks<sp/>like<sp/>I&apos;ll<sp/>need<sp/>to</highlight></codeline>
<codeline lineno="362"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>upgrade<sp/>my<sp/>entire<sp/>Linux<sp/>OS<sp/>-RBD</highlight></codeline>
<codeline lineno="363"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="365"><highlight class="comment"><sp/><sp/><sp/><sp/>alsa_descriptor_type<sp/>desc<sp/>=<sp/>(alsa_descriptor_type)<sp/>midi-&gt;descriptor;</highlight></codeline>
<codeline lineno="366"><highlight class="comment"><sp/><sp/><sp/><sp/>snd_seq_remove_events_t<sp/>info;</highlight></codeline>
<codeline lineno="367"><highlight class="comment"><sp/><sp/><sp/><sp/>snd_seq_addr_t<sp/>addr;</highlight></codeline>
<codeline lineno="368"><highlight class="comment"><sp/><sp/><sp/><sp/>addr.client<sp/>=<sp/>desc-&gt;client;</highlight></codeline>
<codeline lineno="369"><highlight class="comment"><sp/><sp/><sp/><sp/>addr.port<sp/>=<sp/>desc-&gt;port;</highlight></codeline>
<codeline lineno="370"><highlight class="comment"><sp/><sp/><sp/><sp/>snd_seq_remove_events_set_dest(&amp;info,<sp/>&amp;addr);</highlight></codeline>
<codeline lineno="371"><highlight class="comment"><sp/><sp/><sp/><sp/>snd_seq_remove_events_set_condition(&amp;info,<sp/>SND_SEQ_REMOVE_DEST);</highlight></codeline>
<codeline lineno="372"><highlight class="comment"><sp/><sp/><sp/><sp/>pm_hosterror<sp/>=<sp/>snd_seq_remove_events(seq,<sp/>&amp;info);</highlight></codeline>
<codeline lineno="373"><highlight class="comment"><sp/><sp/><sp/><sp/>if<sp/>(pm_hosterror)<sp/>{</highlight></codeline>
<codeline lineno="374"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_alsa_error_text(pm_hosterror_text,<sp/>PM_HOST_ERROR_MSG_LEN,<sp/></highlight></codeline>
<codeline lineno="375"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pm_hosterror);</highlight></codeline>
<codeline lineno="376"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>pmHostError;</highlight></codeline>
<codeline lineno="377"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;WARNING:<sp/>alsa_abort<sp/>not<sp/>implemented\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a9545ea325397bd81d2d81bdd7d92cba4" kindref="member">pmNoError</ref>;</highlight></codeline>
<codeline lineno="381"><highlight class="normal">}</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>GARBAGE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal">This<sp/>is<sp/><ref refid="namespacewaflib_1_1_utils_1ac5e167303eb0d1a7a20df3daf91a264c" kindref="member">old</ref><sp/>code<sp/>here<sp/>temporarily<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>reference</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/>alsa_write(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*midi,<sp/><ref refid="struct_pm_event" kindref="compound">PmEvent</ref><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref>,<sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a37994e3b11c72957c6f454c6ec96d43d" kindref="member">int32_t</ref><sp/><ref refid="test__lib_f_l_a_c_2format_8c_1ac94dc16b22556ba5fa815655f27442da" kindref="member">length</ref>)</highlight></codeline>
<codeline lineno="387"><highlight class="normal">{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>alsa_descriptor_type<sp/><ref refid="_export_p_c_m_8cpp_1a717c8108dd6ce1ecc369d9bac2f471f2" kindref="member">desc</ref><sp/>=<sp/>(<ref refid="pmlinuxalsa_8c_1a3db8dba62afe3f1e2cffcea3aad17ca0" kindref="member">alsa_descriptor_type</ref>)<sp/>midi-&gt;<ref refid="structpm__internal__struct_1ae973f4d675d47c1b858ab4d2fb51281f" kindref="member">descriptor</ref>;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/>bytes;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>byte;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__grp__events__filters_1gad8455e4afe978a74c68e345bef99761d" kindref="member">PmMessage</ref><sp/>msg;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>desc-&gt;<ref refid="structalsa__descriptor__struct_1a72ee47beba102ffed919a03c7657a087" kindref="member">error</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hashrout_8h_1af69473f95324d0c0f91fdfb1d1a00360" kindref="member">for</ref><sp/>(;<sp/>length<sp/>&gt;<sp/>0;<sp/>length--,<sp/>buffer++)<sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pmlinuxalsa_8c_1a42f8c497a1968074f38bf5055c650dca" kindref="member">VERBOSE</ref><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;message<sp/>0x%x\n&quot;</highlight><highlight class="normal">,<sp/>buffer-&gt;<ref refid="struct_pm_event_1a2c8c12542447fdd566401fbf1a83d4e2" kindref="member">message</ref>);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__grp__events__filters_1ga729fed9ce1244a4052ef68527706eaf9" kindref="member">Pm_MessageStatus</ref>(buffer-&gt;<ref refid="struct_pm_event_1a2c8c12542447fdd566401fbf1a83d4e2" kindref="member">message</ref>)<sp/>==<sp/><ref refid="pmlinuxalsa_8c_1aa2197f6ca200566c0986e737edd211e4" kindref="member">MIDI_SYSEX</ref>)</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc-&gt;<ref refid="structalsa__descriptor__struct_1a846e4059a158f06992ddba837d74a4f4" kindref="member">in_sysex</ref><sp/>=<sp/><ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(desc-&gt;<ref refid="structalsa__descriptor__struct_1a846e4059a158f06992ddba837d74a4f4" kindref="member">in_sysex</ref>)<sp/>{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg<sp/>=<sp/>buffer-&gt;<ref refid="struct_pm_event_1a2c8c12542447fdd566401fbf1a83d4e2" kindref="member">message</ref>;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>4;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>byte<sp/>=<sp/>msg;<sp/><sp/></highlight><highlight class="comment">/*<sp/>extract<sp/>next<sp/>byte<sp/>to<sp/>send<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alsa_write_byte(midi,<sp/>byte,<sp/>buffer-&gt;<ref refid="struct_pm_event_1a3854d39e3b89e1e2a4e1fda8d85c2f16" kindref="member">timestamp</ref>);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(byte<sp/>==<sp/><ref refid="pmlinuxalsa_8c_1a140c8cfa4bbf1a03494abdbd639d49f2" kindref="member">MIDI_EOX</ref>)<sp/>{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>desc-&gt;<ref refid="structalsa__descriptor__struct_1a846e4059a158f06992ddba837d74a4f4" kindref="member">in_sysex</ref><sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(desc-&gt;<ref refid="structalsa__descriptor__struct_1a72ee47beba102ffed919a03c7657a087" kindref="member">error</ref><sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg<sp/>&gt;&gt;=<sp/>8;<sp/></highlight><highlight class="comment">/*<sp/>shift<sp/>next<sp/>byte<sp/>into<sp/>position<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bytes<sp/>=<sp/>midi_message_length(buffer-&gt;<ref refid="struct_pm_event_1a2c8c12542447fdd566401fbf1a83d4e2" kindref="member">message</ref>);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg<sp/>=<sp/>buffer-&gt;<ref refid="struct_pm_event_1a2c8c12542447fdd566401fbf1a83d4e2" kindref="member">message</ref>;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>bytes;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>byte<sp/>=<sp/>msg;<sp/></highlight><highlight class="comment">/*<sp/>extract<sp/>next<sp/>byte<sp/>to<sp/>send<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pmlinuxalsa_8c_1a42f8c497a1968074f38bf5055c650dca" kindref="member">VERBOSE</ref><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;sending<sp/>0x%x\n&quot;</highlight><highlight class="normal">,<sp/>byte);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alsa_write_byte(midi,<sp/>byte,<sp/>buffer-&gt;<ref refid="struct_pm_event_1a3854d39e3b89e1e2a4e1fda8d85c2f16" kindref="member">timestamp</ref>);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(desc-&gt;<ref refid="structalsa__descriptor__struct_1a72ee47beba102ffed919a03c7657a087" kindref="member">error</ref><sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg<sp/>&gt;&gt;=<sp/>8;<sp/></highlight><highlight class="comment">/*<sp/>shift<sp/>next<sp/>byte<sp/>into<sp/>position<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(desc-&gt;<ref refid="structalsa__descriptor__struct_1a72ee47beba102ffed919a03c7657a087" kindref="member">error</ref><sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a29400da63af0c60becca3e04a2c75fe5" kindref="member">pmHostError</ref>;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pmlinuxalsa_8c_1a42f8c497a1968074f38bf5055c650dca" kindref="member">VERBOSE</ref><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;snd_seq_drain_output:<sp/>0x%x\n&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>seq);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>desc-&gt;<ref refid="structalsa__descriptor__struct_1a72ee47beba102ffed919a03c7657a087" kindref="member">error</ref><sp/>=<sp/>snd_seq_drain_output(seq);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(desc-&gt;<ref refid="structalsa__descriptor__struct_1a72ee47beba102ffed919a03c7657a087" kindref="member">error</ref><sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a29400da63af0c60becca3e04a2c75fe5" kindref="member">pmHostError</ref>;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>desc-&gt;<ref refid="structalsa__descriptor__struct_1a72ee47beba102ffed919a03c7657a087" kindref="member">error</ref><sp/>=<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a9545ea325397bd81d2d81bdd7d92cba4" kindref="member">pmNoError</ref>;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a9545ea325397bd81d2d81bdd7d92cba4" kindref="member">pmNoError</ref>;</highlight></codeline>
<codeline lineno="430"><highlight class="normal">}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/>alsa_write_flush(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*midi,<sp/><ref refid="portmidi_8h_1acf4245beeef251c4a46d66e99d77ffdf" kindref="member">PmTimestamp</ref><sp/>timestamp)</highlight></codeline>
<codeline lineno="435"><highlight class="normal">{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>alsa_descriptor_type<sp/><ref refid="_export_p_c_m_8cpp_1a717c8108dd6ce1ecc369d9bac2f471f2" kindref="member">desc</ref><sp/>=<sp/>(<ref refid="pmlinuxalsa_8c_1a3db8dba62afe3f1e2cffcea3aad17ca0" kindref="member">alsa_descriptor_type</ref>)<sp/>midi-&gt;<ref refid="structpm__internal__struct_1ae973f4d675d47c1b858ab4d2fb51281f" kindref="member">descriptor</ref>;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="winfun_8c_1ab24f32995c1d94525943b4568cce20cb" kindref="member">if</ref><sp/>(!desc)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9ad918f36038e977eb97cd15daa851670c" kindref="member">pmBadPtr</ref>;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pmlinuxalsa_8c_1a42f8c497a1968074f38bf5055c650dca" kindref="member">VERBOSE</ref><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;snd_seq_drain_output:<sp/>0x%x\n&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>seq);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>desc-&gt;<ref refid="structalsa__descriptor__struct_1a72ee47beba102ffed919a03c7657a087" kindref="member">error</ref><sp/>=<sp/>snd_seq_drain_output(seq);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(desc-&gt;<ref refid="structalsa__descriptor__struct_1a72ee47beba102ffed919a03c7657a087" kindref="member">error</ref><sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a29400da63af0c60becca3e04a2c75fe5" kindref="member">pmHostError</ref>;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>desc-&gt;<ref refid="structalsa__descriptor__struct_1a72ee47beba102ffed919a03c7657a087" kindref="member">error</ref><sp/>=<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a9545ea325397bd81d2d81bdd7d92cba4" kindref="member">pmNoError</ref>;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a9545ea325397bd81d2d81bdd7d92cba4" kindref="member">pmNoError</ref>;</highlight></codeline>
<codeline lineno="444"><highlight class="normal">}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/>alsa_write_short(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*midi,<sp/><ref refid="struct_pm_event" kindref="compound">PmEvent</ref><sp/>*event)</highlight></codeline>
<codeline lineno="448"><highlight class="normal">{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bytes<sp/>=<sp/>midi_message_length(event-&gt;<ref refid="struct_pm_event_1a2c8c12542447fdd566401fbf1a83d4e2" kindref="member">message</ref>);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__grp__events__filters_1gad8455e4afe978a74c68e345bef99761d" kindref="member">PmMessage</ref><sp/>msg<sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">-&gt;message;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>alsa_descriptor_type<sp/><ref refid="_export_p_c_m_8cpp_1a717c8108dd6ce1ecc369d9bac2f471f2" kindref="member">desc</ref><sp/>=<sp/>(<ref refid="pmlinuxalsa_8c_1a3db8dba62afe3f1e2cffcea3aad17ca0" kindref="member">alsa_descriptor_type</ref>)<sp/>midi-&gt;<ref refid="structpm__internal__struct_1ae973f4d675d47c1b858ab4d2fb51281f" kindref="member">descriptor</ref>;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="winfun_8c_1ab24f32995c1d94525943b4568cce20cb" kindref="member">if</ref><sp/>(!desc)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9ad918f36038e977eb97cd15daa851670c" kindref="member">pmBadPtr</ref>;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>bytes;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>byte<sp/>=<sp/>msg;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pmlinuxalsa_8c_1a42f8c497a1968074f38bf5055c650dca" kindref="member">VERBOSE</ref><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;sending<sp/>0x%x\n&quot;</highlight><highlight class="normal">,<sp/>byte);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alsa_write_byte(midi,<sp/>byte,<sp/>event-&gt;<ref refid="struct_pm_event_1a3854d39e3b89e1e2a4e1fda8d85c2f16" kindref="member">timestamp</ref>);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(desc-&gt;<ref refid="structalsa__descriptor__struct_1a72ee47beba102ffed919a03c7657a087" kindref="member">error</ref><sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg<sp/>&gt;&gt;=<sp/>8;<sp/></highlight><highlight class="comment">/*<sp/>shift<sp/>next<sp/>byte<sp/>into<sp/>position<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(desc-&gt;<ref refid="structalsa__descriptor__struct_1a72ee47beba102ffed919a03c7657a087" kindref="member">error</ref><sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a29400da63af0c60becca3e04a2c75fe5" kindref="member">pmHostError</ref>;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>desc-&gt;<ref refid="structalsa__descriptor__struct_1a72ee47beba102ffed919a03c7657a087" kindref="member">error</ref><sp/>=<sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a9545ea325397bd81d2d81bdd7d92cba4" kindref="member">pmNoError</ref>;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a9545ea325397bd81d2d81bdd7d92cba4" kindref="member">pmNoError</ref>;</highlight></codeline>
<codeline lineno="464"><highlight class="normal">}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>alsa_sysex<sp/>--<sp/>implements<sp/>begin_sysex<sp/>and<sp/>end_sysex<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468" refid="pmlinuxalsa_8c_1a0e4c196aec35cd6340cd5303dc5079a5" refkind="member"><highlight class="normal"><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/><ref refid="pmlinuxalsa_8c_1a0e4c196aec35cd6340cd5303dc5079a5" kindref="member">alsa_sysex</ref>(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*midi,<sp/><ref refid="portmidi_8h_1acf4245beeef251c4a46d66e99d77ffdf" kindref="member">PmTimestamp</ref><sp/>timestamp)<sp/>{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a9545ea325397bd81d2d81bdd7d92cba4" kindref="member">pmNoError</ref>;</highlight></codeline>
<codeline lineno="470"><highlight class="normal">}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1acf4245beeef251c4a46d66e99d77ffdf" kindref="member">PmTimestamp</ref><sp/>alsa_synchronize(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*midi)</highlight></codeline>
<codeline lineno="474"><highlight class="normal">{</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>linux<sp/>implementation<sp/>does<sp/>not<sp/>use<sp/>this<sp/>synchronize<sp/>function<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Apparently,<sp/>Alsa<sp/>data<sp/>is<sp/>relative<sp/>to<sp/>the<sp/>time<sp/>you<sp/>send<sp/>it,<sp/>and<sp/>there</highlight></codeline>
<codeline lineno="477"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>no<sp/>reference.<sp/>If<sp/>this<sp/>is<sp/>true,<sp/>this<sp/>is<sp/>a<sp/>serious<sp/>shortcoming<sp/>of</highlight></codeline>
<codeline lineno="478"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Alsa.<sp/>If<sp/>not<sp/>true,<sp/>then<sp/>PortMidi<sp/>has<sp/>a<sp/>serious<sp/>shortcoming<sp/>--<sp/>it<sp/></highlight></codeline>
<codeline lineno="479"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>should<sp/>be<sp/>scheduling<sp/>relative<sp/>to<sp/>Alsa&apos;s<sp/>time<sp/>reference.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal">}</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>handle_event(snd_seq_event_t<sp/>*ev)</highlight></codeline>
<codeline lineno="484"><highlight class="normal">{</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>device_id<sp/>=<sp/>ev-&gt;dest.port;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*midi<sp/>=<sp/><ref refid="pminternal_8h_1a8a86f0e79d5794e79c94c3f380a7088c" kindref="member">descriptors</ref>[device_id].<ref refid="structdescriptor__node_1a5e90cf08a561afbc02fa8ac72264bb9a" kindref="member">internalDescriptor</ref>;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>There<sp/>is<sp/>a<sp/>race<sp/>condition<sp/>when<sp/>closing<sp/>a<sp/>device<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>continuing<sp/>to<sp/>poll<sp/>other<sp/>open<sp/>devices.<sp/>The<sp/>closed<sp/>device<sp/>may</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>have<sp/>outstanding<sp/>events<sp/>from<sp/>before<sp/>the<sp/>close<sp/>operation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!midi)<sp/>{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pm_event" kindref="compound">PmEvent</ref><sp/>pm_ev;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portmidi_8h_1a86cdcb85cfa72e067bc2fd1b96fca05d" kindref="member">PmTimeProcPtr</ref><sp/>time_proc<sp/>=<sp/>midi-&gt;<ref refid="structpm__internal__struct_1aa2268f6b4916d4ae3de765d880bc8641" kindref="member">time_proc</ref>;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portmidi_8h_1acf4245beeef251c4a46d66e99d77ffdf" kindref="member">PmTimestamp</ref><sp/>timestamp;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>time<sp/>stamp<sp/>should<sp/>be<sp/>in<sp/>ticks,<sp/>using<sp/>our<sp/>queue<sp/>where<sp/>1<sp/>tick<sp/>=<sp/>1ms<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>((ev-&gt;flags<sp/>&amp;<sp/>SND_SEQ_TIME_STAMP_MASK)<sp/>==<sp/>SND_SEQ_TIME_STAMP_TICK);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>no<sp/>time_proc,<sp/>just<sp/>return<sp/>&quot;native&quot;<sp/>ticks<sp/>(ms)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(time_proc<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timestamp<sp/>=<sp/>ev-&gt;time.tick;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>translate<sp/>time<sp/>to<sp/>time_proc<sp/>basis<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd_seq_queue_status_t<sp/>*queue_status;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd_seq_queue_status_alloca(&amp;queue_status);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd_seq_get_queue_status(seq,<sp/>queue,<sp/>queue_status);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>return<sp/>(now<sp/>-<sp/>alsa_now)<sp/>+<sp/>alsa_timestamp<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timestamp<sp/>=<sp/>(*time_proc)(midi-&gt;<ref refid="structpm__internal__struct_1ac3ee4fe374d89f3040708206648acb07" kindref="member">time_info</ref>)<sp/>+<sp/>ev-&gt;time.tick<sp/>-</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd_seq_queue_status_get_tick_time(queue_status);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>pm_ev.<ref refid="struct_pm_event_1a3854d39e3b89e1e2a4e1fda8d85c2f16" kindref="member">timestamp</ref><sp/>=<sp/>timestamp;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(ev-&gt;type)<sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SND_SEQ_EVENT_NOTEON:</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pm_ev.<ref refid="struct_pm_event_1a2c8c12542447fdd566401fbf1a83d4e2" kindref="member">message</ref><sp/>=<sp/><ref refid="group__grp__events__filters_1gaf1c22515214f7a2cbb1e1e8fb02602bd" kindref="member">Pm_Message</ref>(0x90<sp/>|<sp/>ev-&gt;data.note.channel,</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ev-&gt;data.note.note<sp/>&amp;<sp/>0x7f,</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ev-&gt;data.note.velocity<sp/>&amp;<sp/>0x7f);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1a11a153e33a42b3f20df33394ce241005" kindref="member">pm_read_short</ref>(midi,<sp/>&amp;pm_ev);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SND_SEQ_EVENT_NOTEOFF:</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pm_ev.<ref refid="struct_pm_event_1a2c8c12542447fdd566401fbf1a83d4e2" kindref="member">message</ref><sp/>=<sp/><ref refid="group__grp__events__filters_1gaf1c22515214f7a2cbb1e1e8fb02602bd" kindref="member">Pm_Message</ref>(0x80<sp/>|<sp/>ev-&gt;data.note.channel,</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ev-&gt;data.note.note<sp/>&amp;<sp/>0x7f,</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ev-&gt;data.note.velocity<sp/>&amp;<sp/>0x7f);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1a11a153e33a42b3f20df33394ce241005" kindref="member">pm_read_short</ref>(midi,<sp/>&amp;pm_ev);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SND_SEQ_EVENT_KEYPRESS:</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pm_ev.<ref refid="struct_pm_event_1a2c8c12542447fdd566401fbf1a83d4e2" kindref="member">message</ref><sp/>=<sp/><ref refid="group__grp__events__filters_1gaf1c22515214f7a2cbb1e1e8fb02602bd" kindref="member">Pm_Message</ref>(0xa0<sp/>|<sp/>ev-&gt;data.note.channel,</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ev-&gt;data.note.note<sp/>&amp;<sp/>0x7f,</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ev-&gt;data.note.velocity<sp/>&amp;<sp/>0x7f);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1a11a153e33a42b3f20df33394ce241005" kindref="member">pm_read_short</ref>(midi,<sp/>&amp;pm_ev);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SND_SEQ_EVENT_CONTROLLER:</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pm_ev.<ref refid="struct_pm_event_1a2c8c12542447fdd566401fbf1a83d4e2" kindref="member">message</ref><sp/>=<sp/><ref refid="group__grp__events__filters_1gaf1c22515214f7a2cbb1e1e8fb02602bd" kindref="member">Pm_Message</ref>(0xb0<sp/>|<sp/>ev-&gt;data.note.channel,</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ev-&gt;data.control.param<sp/>&amp;<sp/>0x7f,</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ev-&gt;data.control.value<sp/>&amp;<sp/>0x7f);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1a11a153e33a42b3f20df33394ce241005" kindref="member">pm_read_short</ref>(midi,<sp/>&amp;pm_ev);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SND_SEQ_EVENT_PGMCHANGE:</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pm_ev.<ref refid="struct_pm_event_1a2c8c12542447fdd566401fbf1a83d4e2" kindref="member">message</ref><sp/>=<sp/><ref refid="group__grp__events__filters_1gaf1c22515214f7a2cbb1e1e8fb02602bd" kindref="member">Pm_Message</ref>(0xc0<sp/>|<sp/>ev-&gt;data.note.channel,</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ev-&gt;data.control.value<sp/>&amp;<sp/>0x7f,<sp/>0);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1a11a153e33a42b3f20df33394ce241005" kindref="member">pm_read_short</ref>(midi,<sp/>&amp;pm_ev);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SND_SEQ_EVENT_CHANPRESS:</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pm_ev.<ref refid="struct_pm_event_1a2c8c12542447fdd566401fbf1a83d4e2" kindref="member">message</ref><sp/>=<sp/><ref refid="group__grp__events__filters_1gaf1c22515214f7a2cbb1e1e8fb02602bd" kindref="member">Pm_Message</ref>(0xd0<sp/>|<sp/>ev-&gt;data.note.channel,</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ev-&gt;data.control.value<sp/>&amp;<sp/>0x7f,<sp/>0);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1a11a153e33a42b3f20df33394ce241005" kindref="member">pm_read_short</ref>(midi,<sp/>&amp;pm_ev);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SND_SEQ_EVENT_PITCHBEND:</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pm_ev.<ref refid="struct_pm_event_1a2c8c12542447fdd566401fbf1a83d4e2" kindref="member">message</ref><sp/>=<sp/><ref refid="group__grp__events__filters_1gaf1c22515214f7a2cbb1e1e8fb02602bd" kindref="member">Pm_Message</ref>(0xe0<sp/>|<sp/>ev-&gt;data.note.channel,</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ev-&gt;data.control.value<sp/>+<sp/>0x2000)<sp/>&amp;<sp/>0x7f,</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((ev-&gt;data.control.value<sp/>+<sp/>0x2000)<sp/>&gt;&gt;<sp/>7)<sp/>&amp;<sp/>0x7f);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1a11a153e33a42b3f20df33394ce241005" kindref="member">pm_read_short</ref>(midi,<sp/>&amp;pm_ev);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SND_SEQ_EVENT_CONTROL14:</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ev-&gt;data.control.param<sp/>&lt;<sp/>0x20)<sp/>{</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pm_ev.<ref refid="struct_pm_event_1a2c8c12542447fdd566401fbf1a83d4e2" kindref="member">message</ref><sp/>=<sp/><ref refid="group__grp__events__filters_1gaf1c22515214f7a2cbb1e1e8fb02602bd" kindref="member">Pm_Message</ref>(0xb0<sp/>|<sp/>ev-&gt;data.note.channel,</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ev-&gt;data.control.param,</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ev-&gt;data.control.value<sp/>&gt;&gt;<sp/>7)<sp/>&amp;<sp/>0x7f);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1a11a153e33a42b3f20df33394ce241005" kindref="member">pm_read_short</ref>(midi,<sp/>&amp;pm_ev);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pm_ev.<ref refid="struct_pm_event_1a2c8c12542447fdd566401fbf1a83d4e2" kindref="member">message</ref><sp/>=<sp/><ref refid="group__grp__events__filters_1gaf1c22515214f7a2cbb1e1e8fb02602bd" kindref="member">Pm_Message</ref>(0xb0<sp/>|<sp/>ev-&gt;data.note.channel,</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ev-&gt;data.control.param<sp/>+<sp/>0x20,</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ev-&gt;data.control.value<sp/>&amp;<sp/>0x7f);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1a11a153e33a42b3f20df33394ce241005" kindref="member">pm_read_short</ref>(midi,<sp/>&amp;pm_ev);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pm_ev.<ref refid="struct_pm_event_1a2c8c12542447fdd566401fbf1a83d4e2" kindref="member">message</ref><sp/>=<sp/><ref refid="group__grp__events__filters_1gaf1c22515214f7a2cbb1e1e8fb02602bd" kindref="member">Pm_Message</ref>(0xb0<sp/>|<sp/>ev-&gt;data.note.channel,</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ev-&gt;data.control.param<sp/>&amp;<sp/>0x7f,</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ev-&gt;data.control.value<sp/>&amp;<sp/>0x7f);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1a11a153e33a42b3f20df33394ce241005" kindref="member">pm_read_short</ref>(midi,<sp/>&amp;pm_ev);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SND_SEQ_EVENT_SONGPOS:</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pm_ev.<ref refid="struct_pm_event_1a2c8c12542447fdd566401fbf1a83d4e2" kindref="member">message</ref><sp/>=<sp/><ref refid="group__grp__events__filters_1gaf1c22515214f7a2cbb1e1e8fb02602bd" kindref="member">Pm_Message</ref>(0xf2,</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ev-&gt;data.control.value<sp/>&amp;<sp/>0x7f,</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ev-&gt;data.control.value<sp/>&gt;&gt;<sp/>7)<sp/>&amp;<sp/>0x7f);</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1a11a153e33a42b3f20df33394ce241005" kindref="member">pm_read_short</ref>(midi,<sp/>&amp;pm_ev);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SND_SEQ_EVENT_SONGSEL:</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pm_ev.<ref refid="struct_pm_event_1a2c8c12542447fdd566401fbf1a83d4e2" kindref="member">message</ref><sp/>=<sp/><ref refid="group__grp__events__filters_1gaf1c22515214f7a2cbb1e1e8fb02602bd" kindref="member">Pm_Message</ref>(0xf3,</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ev-&gt;data.control.value<sp/>&amp;<sp/>0x7f,<sp/>0);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1a11a153e33a42b3f20df33394ce241005" kindref="member">pm_read_short</ref>(midi,<sp/>&amp;pm_ev);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SND_SEQ_EVENT_QFRAME:</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pm_ev.<ref refid="struct_pm_event_1a2c8c12542447fdd566401fbf1a83d4e2" kindref="member">message</ref><sp/>=<sp/><ref refid="group__grp__events__filters_1gaf1c22515214f7a2cbb1e1e8fb02602bd" kindref="member">Pm_Message</ref>(0xf1,</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ev-&gt;data.control.value<sp/>&amp;<sp/>0x7f,<sp/>0);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1a11a153e33a42b3f20df33394ce241005" kindref="member">pm_read_short</ref>(midi,<sp/>&amp;pm_ev);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SND_SEQ_EVENT_START:</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pm_ev.<ref refid="struct_pm_event_1a2c8c12542447fdd566401fbf1a83d4e2" kindref="member">message</ref><sp/>=<sp/><ref refid="group__grp__events__filters_1gaf1c22515214f7a2cbb1e1e8fb02602bd" kindref="member">Pm_Message</ref>(0xfa,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1a11a153e33a42b3f20df33394ce241005" kindref="member">pm_read_short</ref>(midi,<sp/>&amp;pm_ev);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SND_SEQ_EVENT_CONTINUE:</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pm_ev.<ref refid="struct_pm_event_1a2c8c12542447fdd566401fbf1a83d4e2" kindref="member">message</ref><sp/>=<sp/><ref refid="group__grp__events__filters_1gaf1c22515214f7a2cbb1e1e8fb02602bd" kindref="member">Pm_Message</ref>(0xfb,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1a11a153e33a42b3f20df33394ce241005" kindref="member">pm_read_short</ref>(midi,<sp/>&amp;pm_ev);</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SND_SEQ_EVENT_STOP:</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pm_ev.<ref refid="struct_pm_event_1a2c8c12542447fdd566401fbf1a83d4e2" kindref="member">message</ref><sp/>=<sp/><ref refid="group__grp__events__filters_1gaf1c22515214f7a2cbb1e1e8fb02602bd" kindref="member">Pm_Message</ref>(0xfc,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1a11a153e33a42b3f20df33394ce241005" kindref="member">pm_read_short</ref>(midi,<sp/>&amp;pm_ev);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SND_SEQ_EVENT_CLOCK:</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pm_ev.<ref refid="struct_pm_event_1a2c8c12542447fdd566401fbf1a83d4e2" kindref="member">message</ref><sp/>=<sp/><ref refid="group__grp__events__filters_1gaf1c22515214f7a2cbb1e1e8fb02602bd" kindref="member">Pm_Message</ref>(0xf8,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1a11a153e33a42b3f20df33394ce241005" kindref="member">pm_read_short</ref>(midi,<sp/>&amp;pm_ev);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SND_SEQ_EVENT_TUNE_REQUEST:</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pm_ev.<ref refid="struct_pm_event_1a2c8c12542447fdd566401fbf1a83d4e2" kindref="member">message</ref><sp/>=<sp/><ref refid="group__grp__events__filters_1gaf1c22515214f7a2cbb1e1e8fb02602bd" kindref="member">Pm_Message</ref>(0xf6,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1a11a153e33a42b3f20df33394ce241005" kindref="member">pm_read_short</ref>(midi,<sp/>&amp;pm_ev);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SND_SEQ_EVENT_RESET:</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pm_ev.<ref refid="struct_pm_event_1a2c8c12542447fdd566401fbf1a83d4e2" kindref="member">message</ref><sp/>=<sp/><ref refid="group__grp__events__filters_1gaf1c22515214f7a2cbb1e1e8fb02602bd" kindref="member">Pm_Message</ref>(0xff,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1a11a153e33a42b3f20df33394ce241005" kindref="member">pm_read_short</ref>(midi,<sp/>&amp;pm_ev);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SND_SEQ_EVENT_SENSING:</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pm_ev.<ref refid="struct_pm_event_1a2c8c12542447fdd566401fbf1a83d4e2" kindref="member">message</ref><sp/>=<sp/><ref refid="group__grp__events__filters_1gaf1c22515214f7a2cbb1e1e8fb02602bd" kindref="member">Pm_Message</ref>(0xfe,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1a11a153e33a42b3f20df33394ce241005" kindref="member">pm_read_short</ref>(midi,<sp/>&amp;pm_ev);</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SND_SEQ_EVENT_SYSEX:<sp/>{</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="mapinls_8h_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref><sp/>*ptr<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="mapinls_8h_1a4ae1dab0fb4b072a66584546209e7d58" kindref="member">BYTE</ref><sp/>*)<sp/>ev-&gt;data.ext.ptr;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>assume<sp/>there<sp/>is<sp/>one<sp/>sysex<sp/>byte<sp/>to<sp/>process<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1a10a244c0e5b19f6b14c83b78109aa9a9" kindref="member">pm_read_bytes</ref>(midi,<sp/>ptr,<sp/>ev-&gt;data.ext.len,<sp/>timestamp);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="622"><highlight class="normal">}</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/>alsa_poll(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*midi)</highlight></codeline>
<codeline lineno="626"><highlight class="normal">{</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_seq_event_t<sp/>*ev;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>expensive<sp/>check<sp/>for<sp/>input<sp/>data,<sp/>gets<sp/>data<sp/>from<sp/>device:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(snd_seq_event_input_pending(seq,<sp/><ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>)<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>cheap<sp/>check<sp/>on<sp/>local<sp/>input<sp/>buffer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(snd_seq_event_input_pending(seq,<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>)<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>for<sp/>and<sp/>ignore<sp/>errors,<sp/>e.g.<sp/>input<sp/>overflow<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>note:<sp/>if<sp/>there&apos;s<sp/>overflow,<sp/>this<sp/>should<sp/>be<sp/>reported</highlight></codeline>
<codeline lineno="634"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>all<sp/>the<sp/>way<sp/>through<sp/>to<sp/>client.<sp/>Since<sp/>input<sp/>from<sp/>all</highlight></codeline>
<codeline lineno="635"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>devices<sp/>is<sp/>merged,<sp/>we<sp/>need<sp/>to<sp/>find<sp/>all<sp/>input<sp/>devices</highlight></codeline>
<codeline lineno="636"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>and<sp/>set<sp/>all<sp/>to<sp/>the<sp/>overflow<sp/>state.</highlight></codeline>
<codeline lineno="637"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>NOTE:<sp/>this<sp/>assumes<sp/>every<sp/>input<sp/>is<sp/>ALSA<sp/>based.</highlight></codeline>
<codeline lineno="638"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rslt<sp/>=<sp/>snd_seq_event_input(seq,<sp/>&amp;ev);</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rslt<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handle_event(ev);</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rslt<sp/>==<sp/>-ENOSPC)<sp/>{</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="pminternal_8h_1abf37b57cc544c04b6d27cf33a02b473f" kindref="member">pm_descriptor_index</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="pminternal_8h_1a8a86f0e79d5794e79c94c3f380a7088c" kindref="member">descriptors</ref>[i].pub.input)<sp/>{</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*midi<sp/>=<sp/>(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*)<sp/></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1a8a86f0e79d5794e79c94c3f380a7088c" kindref="member">descriptors</ref>[i].internalDescriptor;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>careful,<sp/>device<sp/>may<sp/>not<sp/>be<sp/>open!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(midi)<sp/><ref refid="pmutil_8c_1a6d791f67a1bf79cd67db2630947d41a3" kindref="member">Pm_SetOverflow</ref>(midi-&gt;<ref refid="structpm__internal__struct_1a883e467783d250a41089efa00df2bb4c" kindref="member">queue</ref>);</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a9545ea325397bd81d2d81bdd7d92cba4" kindref="member">pmNoError</ref>;</highlight></codeline>
<codeline lineno="656"><highlight class="normal">}</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>alsa_has_host_error(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*midi)</highlight></codeline>
<codeline lineno="660"><highlight class="normal">{</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/>alsa_descriptor_type<sp/><ref refid="_export_p_c_m_8cpp_1a717c8108dd6ce1ecc369d9bac2f471f2" kindref="member">desc</ref><sp/>=<sp/>(<ref refid="pmlinuxalsa_8c_1a3db8dba62afe3f1e2cffcea3aad17ca0" kindref="member">alsa_descriptor_type</ref>)<sp/>midi-&gt;<ref refid="structpm__internal__struct_1ae973f4d675d47c1b858ab4d2fb51281f" kindref="member">descriptor</ref>;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="winfun_8c_1ab24f32995c1d94525943b4568cce20cb" kindref="member">if</ref><sp/>(!desc)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>desc-&gt;<ref refid="structalsa__descriptor__struct_1a72ee47beba102ffed919a03c7657a087" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="664"><highlight class="normal">}</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>alsa_get_host_error(<ref refid="structpm__internal__struct" kindref="compound">PmInternal</ref><sp/>*midi,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*msg,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>)</highlight></codeline>
<codeline lineno="668"><highlight class="normal">{</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/>alsa_descriptor_type<sp/><ref refid="_export_p_c_m_8cpp_1a717c8108dd6ce1ecc369d9bac2f471f2" kindref="member">desc</ref><sp/>=<sp/>(<ref refid="pmlinuxalsa_8c_1a3db8dba62afe3f1e2cffcea3aad17ca0" kindref="member">alsa_descriptor_type</ref>)<sp/>midi-&gt;<ref refid="structpm__internal__struct_1ae973f4d675d47c1b858ab4d2fb51281f" kindref="member">descriptor</ref>;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="winfun_8c_1ab24f32995c1d94525943b4568cce20cb" kindref="member">if</ref><sp/>(!desc)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err<sp/>=<sp/>(<ref refid="pminternal_8h_1af455cd83ef19eb07a7996c38dd806ee4" kindref="member">pm_hosterror</ref><sp/>||<sp/>desc-&gt;<ref refid="structalsa__descriptor__struct_1a72ee47beba102ffed919a03c7657a087" kindref="member">error</ref>);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/>get_alsa_error_text(msg,<sp/>len,<sp/>err);</highlight></codeline>
<codeline lineno="673"><highlight class="normal">}</highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="676" refid="pmlinuxalsa_8c_1a461d9fe3422027bcb23c08df8397b2d8" refkind="member"><highlight class="normal"><ref refid="structpm__fns__node" kindref="compound">pm_fns_node</ref><sp/>pm_linuxalsa_in_dictionary<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1a841d04eb4d4efa3eebfc4e718cf9faa3" kindref="member">none_write_short</ref>,</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1ac44b30c88f5076903c62f9e8fc8c51ec" kindref="member">none_sysex</ref>,</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1ac44b30c88f5076903c62f9e8fc8c51ec" kindref="member">none_sysex</ref>,</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1a2181992bfdc1d719bdd96353763965d7" kindref="member">none_write_byte</ref>,</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1a841d04eb4d4efa3eebfc4e718cf9faa3" kindref="member">none_write_short</ref>,</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1a1381cf29da7767a1db6c268b7941a6f8" kindref="member">none_write_flush</ref>,</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>alsa_synchronize,</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/>alsa_in_open,</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/>alsa_abort,</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/>alsa_in_close,</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/>alsa_poll,</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/>alsa_has_host_error,</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/>alsa_get_host_error</highlight></codeline>
<codeline lineno="690"><highlight class="normal">};</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692" refid="pmlinuxalsa_8c_1ae7fa43a18d9f6d6231707b0f58e64d9c" refkind="member"><highlight class="normal"><ref refid="structpm__fns__node" kindref="compound">pm_fns_node</ref><sp/>pm_linuxalsa_out_dictionary<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/>alsa_write_short,</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pmlinuxalsa_8c_1a0e4c196aec35cd6340cd5303dc5079a5" kindref="member">alsa_sysex</ref>,</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pmlinuxalsa_8c_1a0e4c196aec35cd6340cd5303dc5079a5" kindref="member">alsa_sysex</ref>,</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/>alsa_write_byte,</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/>alsa_write_short,<sp/></highlight><highlight class="comment">/*<sp/>short<sp/>realtime<sp/>message<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/>alsa_write_flush,</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/>alsa_synchronize,</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/>alsa_out_open,<sp/></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/>alsa_abort,<sp/></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/>alsa_out_close,</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1a7b782f381e349f7b220b925bcdf9c9c1" kindref="member">none_poll</ref>,</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/>alsa_has_host_error,</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/>alsa_get_host_error</highlight></codeline>
<codeline lineno="706"><highlight class="normal">};</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>pm_strdup<sp/>--<sp/>copy<sp/>a<sp/>string<sp/>to<sp/>the<sp/>heap.<sp/>Use<sp/>this<sp/>rather<sp/>than<sp/>strdup<sp/>so<sp/></highlight></codeline>
<codeline lineno="710"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>that<sp/>we<sp/>call<sp/>pm_alloc,<sp/>not<sp/>malloc.<sp/>This<sp/>allows<sp/>portmidi<sp/>to<sp/>avoid<sp/></highlight></codeline>
<codeline lineno="711"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>malloc<sp/>which<sp/>might<sp/>cause<sp/>priority<sp/>inversion.<sp/>Probably<sp/>ALSA<sp/>is<sp/>going</highlight></codeline>
<codeline lineno="712"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>to<sp/>call<sp/>malloc<sp/>anyway,<sp/>so<sp/>this<sp/>extra<sp/>work<sp/>here<sp/>may<sp/>be<sp/>pointless.</highlight></codeline>
<codeline lineno="713"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="714" refid="pmlinuxalsa_8c_1ab2cda329f6e6115254f6141c0ee29d15" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="pmlinuxalsa_8c_1ab2cda329f6e6115254f6141c0ee29d15" kindref="member">pm_strdup</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>)</highlight></codeline>
<codeline lineno="715"><highlight class="normal">{</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref><sp/>=<sp/>strlen(s);</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*dup<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/><ref refid="pminternal_8h_1a5e0011f472e9c71efa58816f628eed08" kindref="member">pm_alloc</ref>(len<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="hashrout_8h_1a11280e8971e1a91d58ccd7a36db51a8a" kindref="member">strcpy</ref>(dup,<sp/>s);</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dup;</highlight></codeline>
<codeline lineno="720"><highlight class="normal">}</highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="723" refid="pmlinuxalsa_8h_1acac1cffaebb86b112de17065bb71b776" refkind="member"><highlight class="normal"><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9" kindref="member">PmError</ref><sp/><ref refid="pmlinuxalsa_8c_1acac1cffaebb86b112de17065bb71b776" kindref="member">pm_linuxalsa_init</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="724"><highlight class="normal">{</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>err;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_seq_client_info_t<sp/>*cinfo;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_seq_port_info_t<sp/>*pinfo;</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ptwinmm_8c_1afaf18e680ca830409cafdc4bd0fe004a" kindref="member">caps</ref>;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Previously,<sp/>the<sp/>last<sp/>parameter<sp/>was<sp/>SND_SEQ_NONBLOCK,<sp/>but<sp/>this<sp/></highlight></codeline>
<codeline lineno="731"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>would<sp/>cause<sp/>messages<sp/>to<sp/>be<sp/>dropped<sp/>if<sp/>the<sp/>ALSA<sp/>buffer<sp/>fills<sp/>up.</highlight></codeline>
<codeline lineno="732"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>The<sp/>correct<sp/>behavior<sp/>is<sp/>for<sp/>writes<sp/>to<sp/>block<sp/>until<sp/>there<sp/>is<sp/></highlight></codeline>
<codeline lineno="733"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>room<sp/>to<sp/>send<sp/>all<sp/>the<sp/>data.<sp/>The<sp/>client<sp/>should<sp/>normally<sp/>allocate</highlight></codeline>
<codeline lineno="734"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>a<sp/>large<sp/>enough<sp/>buffer<sp/>to<sp/>avoid<sp/>blocking<sp/>on<sp/>output.<sp/></highlight></codeline>
<codeline lineno="735"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Now<sp/>that<sp/>blocking<sp/>is<sp/>enabled,<sp/>the<sp/>seq_event_input()<sp/>will<sp/>block</highlight></codeline>
<codeline lineno="736"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>if<sp/>there<sp/>is<sp/>no<sp/>input<sp/>data.<sp/>This<sp/>is<sp/>not<sp/>what<sp/>we<sp/>want,<sp/>so<sp/>must</highlight></codeline>
<codeline lineno="737"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>call<sp/>seq_event_input_pending()<sp/>to<sp/>avoid<sp/>blocking.</highlight></codeline>
<codeline lineno="738"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>=<sp/>snd_seq_open(&amp;seq,<sp/></highlight><highlight class="stringliteral">&quot;default&quot;</highlight><highlight class="normal">,<sp/>SND_SEQ_OPEN_DUPLEX,<sp/>0);</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_seq_client_info_alloca(&amp;cinfo);</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_seq_port_info_alloca(&amp;pinfo);</highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_seq_client_info_set_client(cinfo,<sp/>-1);</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(snd_seq_query_next_client(seq,<sp/>cinfo)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd_seq_port_info_set_client(pinfo,<sp/>snd_seq_client_info_get_client(cinfo));</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd_seq_port_info_set_port(pinfo,<sp/>-1);</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(snd_seq_query_next_port(seq,<sp/>pinfo)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(snd_seq_port_info_get_client(pinfo)<sp/>==<sp/>SND_SEQ_CLIENT_SYSTEM)</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">/*<sp/>ignore<sp/>Timer<sp/>and<sp/>Announce<sp/>ports<sp/>on<sp/>client<sp/>0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>caps<sp/>=<sp/>snd_seq_port_info_get_capability(pinfo);</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(caps<sp/>&amp;<sp/>(SND_SEQ_PORT_CAP_SUBS_READ<sp/>|<sp/>SND_SEQ_PORT_CAP_SUBS_WRITE)))</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">/*<sp/>ignore<sp/>if<sp/>you<sp/>cannot<sp/>read<sp/>or<sp/>write<sp/>port<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(caps<sp/>&amp;<sp/>SND_SEQ_PORT_CAP_SUBS_WRITE)<sp/>{</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="pmlinux_8c_1ad011be7b40be117313f2f0a28cdbabf2" kindref="member">pm_default_output_device_id</ref><sp/>==<sp/>-1)<sp/></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pmlinux_8c_1ad011be7b40be117313f2f0a28cdbabf2" kindref="member">pm_default_output_device_id</ref><sp/>=<sp/><ref refid="pminternal_8h_1abf37b57cc544c04b6d27cf33a02b473f" kindref="member">pm_descriptor_index</ref>;</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1a8c66dfe796fb47b3f2a4a195a0529249" kindref="member">pm_add_device</ref>(</highlight><highlight class="stringliteral">&quot;ALSA&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pmlinuxalsa_8c_1ab2cda329f6e6115254f6141c0ee29d15" kindref="member">pm_strdup</ref>(snd_seq_port_info_get_name(pinfo)),</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pmlinuxalsa_8c_1a98660597625d6388c0a56fcee3ed9bc7" kindref="member">MAKE_DESCRIPTOR</ref>(snd_seq_port_info_get_client(pinfo),</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd_seq_port_info_get_port(pinfo)),</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;pm_linuxalsa_out_dictionary);</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(caps<sp/>&amp;<sp/>SND_SEQ_PORT_CAP_SUBS_READ)<sp/>{</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="pmlinux_8c_1ad208a3e4bdc100653be6d5d520d0b15d" kindref="member">pm_default_input_device_id</ref><sp/>==<sp/>-1)<sp/></highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pmlinux_8c_1ad208a3e4bdc100653be6d5d520d0b15d" kindref="member">pm_default_input_device_id</ref><sp/>=<sp/><ref refid="pminternal_8h_1abf37b57cc544c04b6d27cf33a02b473f" kindref="member">pm_descriptor_index</ref>;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1a8c66dfe796fb47b3f2a4a195a0529249" kindref="member">pm_add_device</ref>(</highlight><highlight class="stringliteral">&quot;ALSA&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pmlinuxalsa_8c_1ab2cda329f6e6115254f6141c0ee29d15" kindref="member">pm_strdup</ref>(snd_seq_port_info_get_name(pinfo)),</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>,</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pmlinuxalsa_8c_1a98660597625d6388c0a56fcee3ed9bc7" kindref="member">MAKE_DESCRIPTOR</ref>(snd_seq_port_info_get_client(pinfo),</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd_seq_port_info_get_port(pinfo)),</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;pm_linuxalsa_in_dictionary);</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="portmidi_8h_1a5fd46ccd2e320e17a840886731e8c6b9a9545ea325397bd81d2d81bdd7d92cba4" kindref="member">pmNoError</ref>;</highlight></codeline>
<codeline lineno="778"><highlight class="normal">}</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight></codeline>
<codeline lineno="781" refid="pmlinuxalsa_8h_1a975e3790b1038e878b4b10ff85060009" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pmlinuxalsa_8c_1a975e3790b1038e878b4b10ff85060009" kindref="member">pm_linuxalsa_term</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="782"><highlight class="normal">{</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(seq)<sp/>{</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd_seq_close(seq);</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1a9ce0079220419af65fc4a78af8d422f2" kindref="member">pm_free</ref>(<ref refid="pminternal_8h_1a8a86f0e79d5794e79c94c3f380a7088c" kindref="member">descriptors</ref>);</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1a8a86f0e79d5794e79c94c3f380a7088c" kindref="member">descriptors</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1abf37b57cc544c04b6d27cf33a02b473f" kindref="member">pm_descriptor_index</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pminternal_8h_1a9ffc95d4de3ed10d1efcac1d79e39f11" kindref="member">pm_descriptor_max</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="790"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portmidi/pm_linux/pmlinuxalsa.c"/>
  </compounddef>
</doxygen>
