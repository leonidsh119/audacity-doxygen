<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="opt_8h" kind="file" language="C++">
    <compoundname>opt.h</compoundname>
    <includes refid="rational_8h" local="yes">rational.h</includes>
    <includes refid="avutil_8h" local="yes">avutil.h</includes>
    <includes refid="dict_8h" local="yes">dict.h</includes>
    <includes refid="ffmpeg_2libavutil_2log_8h" local="yes">log.h</includes>
    <includes refid="pixfmt_8h" local="yes">pixfmt.h</includes>
    <includes refid="samplefmt_8h" local="yes">samplefmt.h</includes>
    <incdepgraph>
      <node id="4451">
        <label>mathematics.h</label>
        <link refid="mathematics_8h"/>
        <childnode refid="4434" relation="include">
        </childnode>
        <childnode refid="4441" relation="include">
        </childnode>
        <childnode refid="4436" relation="include">
        </childnode>
        <childnode refid="4433" relation="include">
        </childnode>
        <childnode refid="4452" relation="include">
        </childnode>
      </node>
      <node id="4433">
        <label>rational.h</label>
        <link refid="rational_8h"/>
        <childnode refid="4434" relation="include">
        </childnode>
        <childnode refid="4435" relation="include">
        </childnode>
        <childnode refid="4436" relation="include">
        </childnode>
      </node>
      <node id="4454">
        <label>stdarg.h</label>
      </node>
      <node id="4436">
        <label>attributes.h</label>
        <link refid="attributes_8h"/>
      </node>
      <node id="4437">
        <label>avutil.h</label>
        <link refid="avutil_8h"/>
        <childnode refid="4438" relation="include">
        </childnode>
        <childnode refid="4449" relation="include">
        </childnode>
        <childnode refid="4445" relation="include">
        </childnode>
        <childnode refid="4446" relation="include">
        </childnode>
        <childnode refid="4451" relation="include">
        </childnode>
        <childnode refid="4433" relation="include">
        </childnode>
        <childnode refid="4453" relation="include">
        </childnode>
        <childnode refid="4455" relation="include">
        </childnode>
      </node>
      <node id="4434">
        <label>stdint.h</label>
      </node>
      <node id="4447">
        <label>libavutil/avconfig.h</label>
        <link refid="avconfig_8h"/>
      </node>
      <node id="4443">
        <label>stdlib.h</label>
      </node>
      <node id="4457">
        <label>dict.h</label>
        <link refid="dict_8h"/>
      </node>
      <node id="4439">
        <label>errno.h</label>
      </node>
      <node id="4445">
        <label>version.h</label>
        <link refid="ffmpeg_2libavutil_2version_8h"/>
        <childnode refid="4446" relation="include">
        </childnode>
      </node>
      <node id="4450">
        <label>stddef.h</label>
      </node>
      <node id="4435">
        <label>limits.h</label>
      </node>
      <node id="4449">
        <label>error.h</label>
        <link refid="error_8h"/>
        <childnode refid="4439" relation="include">
        </childnode>
        <childnode refid="4450" relation="include">
        </childnode>
      </node>
      <node id="4453">
        <label>log.h</label>
        <link refid="ffmpeg_2libavutil_2log_8h"/>
        <childnode refid="4454" relation="include">
        </childnode>
        <childnode refid="4437" relation="include">
        </childnode>
        <childnode refid="4436" relation="include">
        </childnode>
      </node>
      <node id="4444">
        <label>string.h</label>
      </node>
      <node id="4448">
        <label>mem.h</label>
        <link refid="ffmpeg_2libavutil_2mem_8h"/>
        <childnode refid="4435" relation="include">
        </childnode>
        <childnode refid="4434" relation="include">
        </childnode>
        <childnode refid="4436" relation="include">
        </childnode>
        <childnode refid="4449" relation="include">
        </childnode>
        <childnode refid="4437" relation="include">
        </childnode>
      </node>
      <node id="4452">
        <label>intfloat.h</label>
        <link refid="intfloat_8h"/>
        <childnode refid="4434" relation="include">
        </childnode>
        <childnode refid="4436" relation="include">
        </childnode>
      </node>
      <node id="4456">
        <label>old_pix_fmts.h</label>
        <link refid="old__pix__fmts_8h"/>
      </node>
      <node id="4441">
        <label>math.h</label>
      </node>
      <node id="4458">
        <label>samplefmt.h</label>
        <link refid="samplefmt_8h"/>
        <childnode refid="4434" relation="include">
        </childnode>
        <childnode refid="4437" relation="include">
        </childnode>
        <childnode refid="4436" relation="include">
        </childnode>
      </node>
      <node id="4432">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h</label>
        <link refid="opt.h"/>
        <childnode refid="4433" relation="include">
        </childnode>
        <childnode refid="4437" relation="include">
        </childnode>
        <childnode refid="4457" relation="include">
        </childnode>
        <childnode refid="4453" relation="include">
        </childnode>
        <childnode refid="4455" relation="include">
        </childnode>
        <childnode refid="4458" relation="include">
        </childnode>
      </node>
      <node id="4446">
        <label>macros.h</label>
        <link refid="ffmpeg_2libavutil_2macros_8h"/>
      </node>
      <node id="4438">
        <label>common.h</label>
        <link refid="ffmpeg_2libavutil_2common_8h"/>
        <childnode refid="4439" relation="include">
        </childnode>
        <childnode refid="4440" relation="include">
        </childnode>
        <childnode refid="4435" relation="include">
        </childnode>
        <childnode refid="4441" relation="include">
        </childnode>
        <childnode refid="4434" relation="include">
        </childnode>
        <childnode refid="4442" relation="include">
        </childnode>
        <childnode refid="4443" relation="include">
        </childnode>
        <childnode refid="4444" relation="include">
        </childnode>
        <childnode refid="4436" relation="include">
        </childnode>
        <childnode refid="4445" relation="include">
        </childnode>
        <childnode refid="4447" relation="include">
        </childnode>
        <childnode refid="4438" relation="include">
        </childnode>
        <childnode refid="4448" relation="include">
        </childnode>
      </node>
      <node id="4442">
        <label>stdio.h</label>
      </node>
      <node id="4455">
        <label>pixfmt.h</label>
        <link refid="pixfmt_8h"/>
        <childnode refid="4447" relation="include">
        </childnode>
        <childnode refid="4445" relation="include">
        </childnode>
        <childnode refid="4456" relation="include">
        </childnode>
      </node>
      <node id="4440">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="struct_a_v_option" prot="public">AVOption</innerclass>
    <innerclass refid="struct_a_v_option_range" prot="public">AVOptionRange</innerclass>
    <innerclass refid="struct_a_v_option_ranges" prot="public">AVOptionRanges</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="opt_8h_1aba0d5e41287b6fbeae5dd59f643695cc" prot="public" static="no">
        <name>AV_OPT_FLAG_ENCODING_PARAM</name>
        <initializer>1</initializer>
        <briefdescription>
<para>a generic parameter which can be set by the user for muxing or encoding </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" line="283" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" bodystart="283" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="opt_8h_1aad820197915e73441f76f5e0c384d78a" prot="public" static="no">
        <name>AV_OPT_FLAG_DECODING_PARAM</name>
        <initializer>2</initializer>
        <briefdescription>
<para>a generic parameter which can be set by the user for demuxing or decoding </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" line="284" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" bodystart="284" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="opt_8h_1a7cb99c554282ab219c3da10f9fc285e9" prot="public" static="no">
        <name>AV_OPT_FLAG_METADATA</name>
        <initializer>4</initializer>
        <briefdescription>
<para>some data extracted or inserted into the file like title, comment, ... </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" line="286" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" bodystart="286" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="opt_8h_1aaa63966a3f547a71a7742f4aea00093a" prot="public" static="no">
        <name>AV_OPT_FLAG_AUDIO_PARAM</name>
        <initializer>8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" line="288" column="10" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" bodystart="288" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="opt_8h_1aaf3d0af9d7eca757034486a8eb896246" prot="public" static="no">
        <name>AV_OPT_FLAG_VIDEO_PARAM</name>
        <initializer>16</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" line="289" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" bodystart="289" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="opt_8h_1ad27ec6a75c8a2c21329e443b15b368c3" prot="public" static="no">
        <name>AV_OPT_FLAG_SUBTITLE_PARAM</name>
        <initializer>32</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" line="290" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" bodystart="290" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="opt_8h_1adf984463025a7861f3c21b113966cb53" prot="public" static="no">
        <name>AV_OPT_FLAG_EXPORT</name>
        <initializer>64</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The option is inteded for exporting values to the caller. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" line="294" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" bodystart="294" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="opt_8h_1a5f24d30655a5aea4dc8bd7263dbfd78c" prot="public" static="no">
        <name>AV_OPT_FLAG_READONLY</name>
        <initializer>128</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The option may not be set through the AVOptions API, only read. This flag only makes sense when AV_OPT_FLAG_EXPORT is also set. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" line="299" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" bodystart="299" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="opt_8h_1a1fa5f9ced9142668142f316b0aad2cfc" prot="public" static="no">
        <name>AV_OPT_FLAG_FILTERING_PARAM</name>
        <initializer>(1&lt;&lt;16)</initializer>
        <briefdescription>
<para>a generic parameter which can be set by the user for filtering </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" line="300" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" bodystart="300" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__avoptions_1ga25801ba4fc9b5313eb33ec84e082dd72" prot="public" static="no">
        <name>AV_OPT_SEARCH_CHILDREN</name>
        <initializer>0x0001</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Search in possible children of the given object first. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" line="552" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" bodystart="551" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__avoptions_1gaa764998552a6f6f66a47ecd52b345caa" prot="public" static="no">
        <name>AV_OPT_SEARCH_FAKE_OBJ</name>
        <initializer>0x0002</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The obj passed to <ref refid="group__avoptions_1gae31ae7fb20113b00108d0ecf53f25664" kindref="member">av_opt_find()</ref> is fake <ndash/> only a double pointer to <ref refid="struct_a_v_class" kindref="compound">AVClass</ref> instead of a required pointer to a struct containing <ref refid="struct_a_v_class" kindref="compound">AVClass</ref>. This is useful for searching for options without needing to allocate the corresponding object. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" line="559" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" bodystart="560" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__opt__set__funcs_1gac06fc2b2e32f67f067ed7aaec163447f" prot="public" static="no">
        <name>av_opt_set_int_list</name>
        <param><defname>obj</defname></param>
        <param><defname>name</defname></param>
        <param><defname>val</defname></param>
        <param><defname>term</defname></param>
        <param><defname>flags</defname></param>
        <initializer>(<ref refid="group__lavu__misc_1gaddb1ee4dba6de5845eda3e9e1e740366" kindref="member">av_int_list_length</ref>(val, term) &gt; <ref refid="macint_8h_1a9ec306f36d50c7375e74f0d1c55a3a67" kindref="member">INT_MAX</ref> / sizeof(*(val)) ? \
     <ref refid="group__lavu__error_1gae4bb6f165973d09584e0ec0f335f69ca" kindref="member">AVERROR</ref>(EINVAL) : \
     <ref refid="group__opt__set__funcs_1ga6c32155fd8a96bed2f8cf5ebc030dadf" kindref="member">av_opt_set_bin</ref>(obj, <ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>, (<ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> *)(val), \
                    <ref refid="group__lavu__misc_1gaddb1ee4dba6de5845eda3e9e1e740366" kindref="member">av_int_list_length</ref>(val, term) * sizeof(*(val)), flags))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set a binary option to an integer list.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="struct_a_v_class" kindref="compound">AVClass</ref> object to set options on </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>name of the binary option </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>val</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an integer list (must have the correct type with regard to the contents of the list) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>term</parametername>
</parameternamelist>
<parameterdescription>
<para>list terminator (usually 0 or -1) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>search flags </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" line="684" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" bodystart="685" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__avoptions_1gabd75aa30eb8ad6387672df9a1fa79444" prot="public" static="no">
        <name>AVOptionType</name>
        <enumvalue id="group__avoptions_1ggabd75aa30eb8ad6387672df9a1fa79444a7aaeee142b88a3078ddc57c644b49a7e" prot="public">
          <name>AV_OPT_TYPE_FLAGS</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__avoptions_1ggabd75aa30eb8ad6387672df9a1fa79444ac068b8f6afeeb293a13aeabb5d702411" prot="public">
          <name>AV_OPT_TYPE_INT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__avoptions_1ggabd75aa30eb8ad6387672df9a1fa79444a94d540a5b928da813ff94d9367a1078a" prot="public">
          <name>AV_OPT_TYPE_INT64</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__avoptions_1ggabd75aa30eb8ad6387672df9a1fa79444ae0b49ec51847a758ceb46976083da2e5" prot="public">
          <name>AV_OPT_TYPE_DOUBLE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__avoptions_1ggabd75aa30eb8ad6387672df9a1fa79444ae91d3f6cbac4a4de2a6e880ac2a52d1a" prot="public">
          <name>AV_OPT_TYPE_FLOAT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__avoptions_1ggabd75aa30eb8ad6387672df9a1fa79444afadddce95ad3b690dd38644b458b96c4" prot="public">
          <name>AV_OPT_TYPE_STRING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__avoptions_1ggabd75aa30eb8ad6387672df9a1fa79444a74ba464440564230a72b95b39593cbfc" prot="public">
          <name>AV_OPT_TYPE_RATIONAL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__avoptions_1ggabd75aa30eb8ad6387672df9a1fa79444a2689966edbe494482dfdfaa4efdf95d3" prot="public">
          <name>AV_OPT_TYPE_BINARY</name>
          <briefdescription>
<para>offset must point to a pointer immediately followed by an int for the length </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__avoptions_1ggabd75aa30eb8ad6387672df9a1fa79444a0fa9f07d428bdc32495fe55c365c5329" prot="public">
          <name>AV_OPT_TYPE_CONST</name>
          <initializer>= 128</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__avoptions_1ggabd75aa30eb8ad6387672df9a1fa79444a078f280b98b49a9f585c5d479b711d9a" prot="public">
          <name>AV_OPT_TYPE_IMAGE_SIZE</name>
          <initializer>= MKBETAG(&apos;S&apos;,&apos;I&apos;,&apos;Z&apos;,&apos;E&apos;)</initializer>
          <briefdescription>
<para>offset must point to two consecutive integers </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__avoptions_1ggabd75aa30eb8ad6387672df9a1fa79444a114085ba9877df34de060124877d8274" prot="public">
          <name>AV_OPT_TYPE_PIXEL_FMT</name>
          <initializer>= MKBETAG(&apos;P&apos;,&apos;F&apos;,&apos;M&apos;,&apos;T&apos;)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__avoptions_1ggabd75aa30eb8ad6387672df9a1fa79444a711661923db91bbbd4abdec0efa5ff0a" prot="public">
          <name>AV_OPT_TYPE_SAMPLE_FMT</name>
          <initializer>= MKBETAG(&apos;S&apos;,&apos;F&apos;,&apos;M&apos;,&apos;T&apos;)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__avoptions_1ggabd75aa30eb8ad6387672df9a1fa79444a9429811abc62d4a564ec56938df0a572" prot="public">
          <name>AV_OPT_TYPE_VIDEO_RATE</name>
          <initializer>= MKBETAG(&apos;V&apos;,&apos;R&apos;,&apos;A&apos;,&apos;T&apos;)</initializer>
          <briefdescription>
<para>offset must point to <ref refid="struct_a_v_rational" kindref="compound">AVRational</ref> </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__avoptions_1ggabd75aa30eb8ad6387672df9a1fa79444a2e3a2fc47ae688f28cc4abe59452a032" prot="public">
          <name>AV_OPT_TYPE_DURATION</name>
          <initializer>= MKBETAG(&apos;D&apos;,&apos;U&apos;,&apos;R&apos;,&apos; &apos;)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__avoptions_1ggabd75aa30eb8ad6387672df9a1fa79444afdcd13cbd184901b05e27595e647fadc" prot="public">
          <name>AV_OPT_TYPE_COLOR</name>
          <initializer>= MKBETAG(&apos;C&apos;,&apos;O&apos;,&apos;L&apos;,&apos;R&apos;)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__avoptions_1ggabd75aa30eb8ad6387672df9a1fa79444a5628c270688d2ec28643dfff825dbe26" prot="public">
          <name>AV_OPT_TYPE_CHANNEL_LAYOUT</name>
          <initializer>= MKBETAG(&apos;C&apos;,&apos;H&apos;,&apos;L&apos;,&apos;A&apos;)</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__avoptions_1ggabd75aa30eb8ad6387672df9a1fa79444a972d740573d501897cf190e044f6cbd1" prot="public">
          <name>FF_OPT_TYPE_FLAGS</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__avoptions_1ggabd75aa30eb8ad6387672df9a1fa79444ade76f8560d82f468f9e65e45b06d73be" prot="public">
          <name>FF_OPT_TYPE_INT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__avoptions_1ggabd75aa30eb8ad6387672df9a1fa79444acef88775b03b83cef74a364782ee05bd" prot="public">
          <name>FF_OPT_TYPE_INT64</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__avoptions_1ggabd75aa30eb8ad6387672df9a1fa79444af97892f80a0b4906a7558dc3ed329a25" prot="public">
          <name>FF_OPT_TYPE_DOUBLE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__avoptions_1ggabd75aa30eb8ad6387672df9a1fa79444ad267c85328230996430fd6f8b935188b" prot="public">
          <name>FF_OPT_TYPE_FLOAT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__avoptions_1ggabd75aa30eb8ad6387672df9a1fa79444adf44c8f2d3159a3da10cb119dcf7afce" prot="public">
          <name>FF_OPT_TYPE_STRING</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__avoptions_1ggabd75aa30eb8ad6387672df9a1fa79444a3c959e9d7a955115e2fd28baabf1866f" prot="public">
          <name>FF_OPT_TYPE_RATIONAL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__avoptions_1ggabd75aa30eb8ad6387672df9a1fa79444a095c14bf4791388e6ec64e9362f2c565" prot="public">
          <name>FF_OPT_TYPE_BINARY</name>
          <briefdescription>
<para>offset must point to a pointer immediately followed by an int for the length </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__avoptions_1ggabd75aa30eb8ad6387672df9a1fa79444af4c3a5065a10d45c6137e9a024046a8f" prot="public">
          <name>FF_OPT_TYPE_CONST</name>
          <initializer>=128</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" line="220" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" bodystart="220" bodyend="248"/>
      </memberdef>
      <memberdef kind="enum" id="group__avoptions_1ga0411cd49bb5b71852cecd93bcbf0ca2d" prot="public" static="no">
        <name>@7</name>
        <enumvalue id="group__avoptions_1gga0411cd49bb5b71852cecd93bcbf0ca2daa836a939d74606db85ce1f09470d1605" prot="public">
          <name>AV_OPT_FLAG_IMPLICIT_KEY</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Accept to parse a value without a key; the key will then be returned as NULL. </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" line="518" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" bodystart="518" bodyend="525"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__avoptions_1gaa1b952fe722d2259743ba5a35ce47f46" prot="public" static="no">
        <type>struct <ref refid="struct_a_v_option" kindref="compound">AVOption</ref></type>
        <definition>typedef struct AVOption  AVOption</definition>
        <argsstring></argsstring>
        <name>AVOption</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="struct_a_v_option" kindref="compound">AVOption</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" line="309" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__avoptions_1gac8caf68f1d182f6a081ff4336efbeac6" prot="public" static="no">
        <type>struct <ref refid="struct_a_v_option_range" kindref="compound">AVOptionRange</ref></type>
        <definition>typedef struct AVOptionRange  AVOptionRange</definition>
        <argsstring></argsstring>
        <name>AVOptionRange</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A single allowed range of values, or a single allowed value. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" line="319" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__avoptions_1gabebd014aa2f58f03966597e280661e17" prot="public" static="no">
        <type>struct <ref refid="struct_a_v_option_ranges" kindref="compound">AVOptionRanges</ref></type>
        <definition>typedef struct AVOptionRanges  AVOptionRanges</definition>
        <argsstring></argsstring>
        <name>AVOptionRanges</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>List of <ref refid="struct_a_v_option_range" kindref="compound">AVOptionRange</ref> structs </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" line="327" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__avoptions_1gaa24cb225a282495b9f44377faac5b73f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="attributes_8h_1aa6d076561d3a9eea4729ee632652de02" kindref="member">attribute_deprecated</ref> <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_a_v_option" kindref="compound">AVOption</ref> *</type>
        <definition>attribute_deprecated const AVOption* av_find_opt</definition>
        <argsstring>(void *obj, const char *name, const char *unit, int mask, int flags)</argsstring>
        <name>av_find_opt</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>unit</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>mask</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Look for an option in obj. Look only for the options which have the flags set as specified in mask and flags (that is, for which it is the case that (opt-&gt;flags &amp; mask) == flags).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer to a struct whose first element is a pointer to an <ref refid="struct_a_v_class" kindref="compound">AVClass</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the option to look for </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">unit</parametername>
</parameternamelist>
<parameterdescription>
<para>the unit of the option to look for, or any if NULL </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a pointer to the option found, or NULL if no option has been found</para></simplesect>
<xrefsect id="deprecated_1_deprecated000027"><xreftitle>Deprecated</xreftitle><xrefdescription><para>use av_opt_find. </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" line="346" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__avoptions_1gaef3d3cd17236e8a38d95c8a13031ba80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="attributes_8h_1aa6d076561d3a9eea4729ee632652de02" kindref="member">attribute_deprecated</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>attribute_deprecated int av_set_string3</definition>
        <argsstring>(void *obj, const char *name, const char *val, int alloc, const AVOption **o_out)</argsstring>
        <name>av_set_string3</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>val</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>alloc</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_a_v_option" kindref="compound">AVOption</ref> **</type>
          <declname>o_out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the field of obj with the given name to value.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>A struct whose first element is a pointer to an <ref refid="struct_a_v_class" kindref="compound">AVClass</ref>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the field to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">val</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to set. If the field is not of a string type, then the given string is parsed. SI postfixes and some named scalars are supported. If the field is of a numeric type, it has to be a numeric or named scalar. Behavior with more than one scalar and +- infix operators is undefined. If the field is of a flags type, it has to be a sequence of numeric scalars or named flags separated by &apos;+&apos; or &apos;-&apos;. Prefixing a flag with &apos;+&apos; causes it to be set without affecting the other flags; similarly, &apos;-&apos; unsets a flag. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">o_out</parametername>
</parameternamelist>
<parameterdescription>
<para>if non-NULL put here a pointer to the <ref refid="struct_a_v_option" kindref="compound">AVOption</ref> found </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>alloc</parametername>
</parameternamelist>
<parameterdescription>
<para>this parameter is currently ignored </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 if the value has been set, or an AVERROR code in case of error: AVERROR_OPTION_NOT_FOUND if no matching option exists <ref refid="group__lavu__error_1gae4bb6f165973d09584e0ec0f335f69ca" kindref="member">AVERROR(ERANGE)</ref> if the value is out of range <ref refid="group__lavu__error_1gae4bb6f165973d09584e0ec0f335f69ca" kindref="member">AVERROR(EINVAL)</ref> if the value is not valid </para></simplesect>
<xrefsect id="deprecated_1_deprecated000028"><xreftitle>Deprecated</xreftitle><xrefdescription><para>use <ref refid="group__opt__set__funcs_1ga5fd4b92bdf4f392a2847f711676a7537" kindref="member">av_opt_set()</ref> </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" line="377" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__avoptions_1ga931434cfd1e6b54bcd3152c0c417b306" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="attributes_8h_1aa6d076561d3a9eea4729ee632652de02" kindref="member">attribute_deprecated</ref> <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_a_v_option" kindref="compound">AVOption</ref> *</type>
        <definition>attribute_deprecated const AVOption* av_set_double</definition>
        <argsstring>(void *obj, const char *name, double n)</argsstring>
        <name>av_set_double</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>double</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" line="379" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__avoptions_1gacbcdd7534efded7e6aa546916714aaad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="attributes_8h_1aa6d076561d3a9eea4729ee632652de02" kindref="member">attribute_deprecated</ref> <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_a_v_option" kindref="compound">AVOption</ref> *</type>
        <definition>attribute_deprecated const AVOption* av_set_q</definition>
        <argsstring>(void *obj, const char *name, AVRational n)</argsstring>
        <name>av_set_q</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="struct_a_v_rational" kindref="compound">AVRational</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" line="380" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__avoptions_1gae617457ddf4f7ffb9daf1fd0d836bc02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="attributes_8h_1aa6d076561d3a9eea4729ee632652de02" kindref="member">attribute_deprecated</ref> <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_a_v_option" kindref="compound">AVOption</ref> *</type>
        <definition>attribute_deprecated const AVOption* av_set_int</definition>
        <argsstring>(void *obj, const char *name, int64_t n)</argsstring>
        <name>av_set_int</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" line="381" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__avoptions_1ga13669ddc74946274fe9ed59dc4a4ad96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double av_get_double</definition>
        <argsstring>(void *obj, const char *name, const AVOption **o_out)</argsstring>
        <name>av_get_double</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_a_v_option" kindref="compound">AVOption</ref> **</type>
          <declname>o_out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" line="383" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__avoptions_1gaf37a7fe6cc3a390e7c7f03dfb66d78c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_a_v_rational" kindref="compound">AVRational</ref></type>
        <definition>AVRational av_get_q</definition>
        <argsstring>(void *obj, const char *name, const AVOption **o_out)</argsstring>
        <name>av_get_q</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_a_v_option" kindref="compound">AVOption</ref> **</type>
          <declname>o_out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" line="384" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__avoptions_1ga31e4f77ef6add323ff0f54bf7e4a0e36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref></type>
        <definition>int64_t av_get_int</definition>
        <argsstring>(void *obj, const char *name, const AVOption **o_out)</argsstring>
        <name>av_get_int</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_a_v_option" kindref="compound">AVOption</ref> **</type>
          <declname>o_out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" line="385" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__avoptions_1gae8bbeaee2ccbc463f05ac5b6cf38d4d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="attributes_8h_1aa6d076561d3a9eea4729ee632652de02" kindref="member">attribute_deprecated</ref> <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
        <definition>attribute_deprecated const char* av_get_string</definition>
        <argsstring>(void *obj, const char *name, const AVOption **o_out, char *buf, int buf_len)</argsstring>
        <name>av_get_string</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_a_v_option" kindref="compound">AVOption</ref> **</type>
          <declname>o_out</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>buf_len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" line="386" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__avoptions_1gab7c68cd85b200272fd5f4b68a495d361" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="attributes_8h_1aa6d076561d3a9eea4729ee632652de02" kindref="member">attribute_deprecated</ref> <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_a_v_option" kindref="compound">AVOption</ref> *</type>
        <definition>attribute_deprecated const AVOption* av_next_option</definition>
        <argsstring>(void *obj, const AVOption *last)</argsstring>
        <name>av_next_option</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_a_v_option" kindref="compound">AVOption</ref> *</type>
          <declname>last</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" line="387" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__avoptions_1gaf7394e27d34208b24af8bb4b4a11741b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_opt_show2</definition>
        <argsstring>(void *obj, void *av_log_obj, int req_flags, int rej_flags)</argsstring>
        <name>av_opt_show2</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>av_log_obj</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>req_flags</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>rej_flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Show the obj options.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>req_flags</parametername>
</parameternamelist>
<parameterdescription>
<para>requested flags for the options to show. Show only the options for which it is opt-&gt;flags &amp; req_flags. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rej_flags</parametername>
</parameternamelist>
<parameterdescription>
<para>rejected flags for the options to show. Show only the options for which it is !(opt-&gt;flags &amp; req_flags). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>av_log_obj</parametername>
</parameternamelist>
<parameterdescription>
<para>log context to use for showing the options </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" line="399" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__avoptions_1gad4ca968e9058b39b2da630ad0a091bdb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void av_opt_set_defaults</definition>
        <argsstring>(void *s)</argsstring>
        <name>av_opt_set_defaults</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the values of all <ref refid="struct_a_v_option" kindref="compound">AVOption</ref> fields to their default values.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>an AVOption-enabled struct (its first member must be a pointer to <ref refid="struct_a_v_class" kindref="compound">AVClass</ref>) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" line="406" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__avoptions_1ga6bf3c89a3a5a297733a89d3443094f3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="attributes_8h_1aa6d076561d3a9eea4729ee632652de02" kindref="member">attribute_deprecated</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>attribute_deprecated void av_opt_set_defaults2</definition>
        <argsstring>(void *s, int mask, int flags)</argsstring>
        <name>av_opt_set_defaults2</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>mask</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" line="410" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__avoptions_1gab48669d1326f7d47ef39e5702e34abd2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_set_options_string</definition>
        <argsstring>(void *ctx, const char *opts, const char *key_val_sep, const char *pairs_sep)</argsstring>
        <name>av_set_options_string</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>opts</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>key_val_sep</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>pairs_sep</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Parse the key/value pairs list in opts. For each key/value pair found, stores the value in the field in ctx that is named like the key. ctx must be an <ref refid="struct_a_v_class" kindref="compound">AVClass</ref> context, storing is done using AVOptions.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>opts</parametername>
</parameternamelist>
<parameterdescription>
<para>options string to parse, may be NULL </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key_val_sep</parametername>
</parameternamelist>
<parameterdescription>
<para>a 0-terminated list of characters used to separate key from value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pairs_sep</parametername>
</parameternamelist>
<parameterdescription>
<para>a 0-terminated list of characters used to separate two pairs from each other </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the number of successfully set key/value pairs, or a negative value corresponding to an AVERROR code in case of error: <ref refid="group__lavu__error_1gae4bb6f165973d09584e0ec0f335f69ca" kindref="member">AVERROR(EINVAL)</ref> if opts cannot be parsed, the error code issued by <ref refid="group__avoptions_1gaef3d3cd17236e8a38d95c8a13031ba80" kindref="member">av_set_string3()</ref> if a key/value pair cannot be set </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" line="430" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__avoptions_1gaa936b1aa7caca67b21cd50819c2b9fb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_opt_set_from_string</definition>
        <argsstring>(void *ctx, const char *opts, const char *const *shorthand, const char *key_val_sep, const char *pairs_sep)</argsstring>
        <name>av_opt_set_from_string</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>ctx</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>opts</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *<ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> *</type>
          <declname>shorthand</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>key_val_sep</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>pairs_sep</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Parse the key-value pairs list in opts. For each key=value pair found, set the value of the corresponding option in ctx.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="struct_a_v_class" kindref="compound">AVClass</ref> object to set options on </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>opts</parametername>
</parameternamelist>
<parameterdescription>
<para>the options string, key-value pairs separated by a delimiter </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>shorthand</parametername>
</parameternamelist>
<parameterdescription>
<para>a NULL-terminated array of options names for shorthand notation: if the first field in opts has no key part, the key is taken from the first element of shorthand; then again for the second, etc., until either opts is finished, shorthand is finished or a named option is found; after that, all options must be named </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key_val_sep</parametername>
</parameternamelist>
<parameterdescription>
<para>a 0-terminated list of characters used to separate key from value, for example &apos;=&apos; </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pairs_sep</parametername>
</parameternamelist>
<parameterdescription>
<para>a 0-terminated list of characters used to separate two pairs from each other, for example &apos;:&apos; or &apos;,&apos; </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the number of successfully set key=value pairs, or a negative value corresponding to an AVERROR code in case of error: <ref refid="group__lavu__error_1gae4bb6f165973d09584e0ec0f335f69ca" kindref="member">AVERROR(EINVAL)</ref> if opts cannot be parsed, the error code issued by <ref refid="group__avoptions_1gaef3d3cd17236e8a38d95c8a13031ba80" kindref="member">av_set_string3()</ref> if a key/value pair cannot be set</para></simplesect>
Options names must use only the following characters: a-z A-Z 0-9 - . / _ Separators must use characters distinct from option names and from each other. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" line="460" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__avoptions_1gac14db824af52baf8181406e98d116097" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void av_opt_free</definition>
        <argsstring>(void *obj)</argsstring>
        <name>av_opt_free</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Free all string and binary options in obj. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" line="466" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__avoptions_1ga1436a3afc8dbc70ed9e70c8287dcc766" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_opt_flag_is_set</definition>
        <argsstring>(void *obj, const char *field_name, const char *flag_name)</argsstring>
        <name>av_opt_flag_is_set</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>field_name</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>flag_name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check whether a particular flag is set in a flags field.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>field_name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the flag field option </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flag_name</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the flag to check </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>non-zero if the flag is set, zero if the flag isn&apos;t set, isn&apos;t of the right type, or the flags field doesn&apos;t exist. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" line="476" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__avoptions_1gaf1a88e8f152d7835f111b1ef8813fb2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_opt_set_dict</definition>
        <argsstring>(void *obj, struct AVDictionary **options)</argsstring>
        <name>av_opt_set_dict</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>struct <ref refid="group__lavu__dict_1ga1d7cc0833bee918994a600556410315f" kindref="member">AVDictionary</ref> **</type>
          <declname>options</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set all the options from a given dictionary on an object.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>a struct whose first element is a pointer to <ref refid="struct_a_v_class" kindref="compound">AVClass</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>options</parametername>
</parameternamelist>
<parameterdescription>
<para>options to process. This dictionary will be freed and replaced by a new one containing all options not found in obj. Of course this new dictionary needs to be freed by caller with <ref refid="group__lavu__dict_1ga1bafd682b1fbb90e48a4cc3814b820f7" kindref="member">av_dict_free()</ref>.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success, a negative AVERROR if some option was found in obj, but could not be set.</para></simplesect>
<simplesect kind="see"><para><ref refid="group__lavu__dict_1ga84757a064d7c4e5558389f1459958f8b" kindref="member">av_dict_copy()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" line="492" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__avoptions_1ga1e459af4e23415b8eb9b05aee81c933c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_opt_get_key_value</definition>
        <argsstring>(const char **ropts, const char *key_val_sep, const char *pairs_sep, unsigned flags, char **rkey, char **rval)</argsstring>
        <name>av_opt_get_key_value</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char **</type>
          <declname>ropts</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>key_val_sep</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>pairs_sep</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>rkey</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>rval</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Extract a key-value pair from the beginning of a string.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ropts</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the options string, will be updated to point to the rest of the string (one of the pairs_sep or the final NUL) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key_val_sep</parametername>
</parameternamelist>
<parameterdescription>
<para>a 0-terminated list of characters used to separate key from value, for example &apos;=&apos; </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pairs_sep</parametername>
</parameternamelist>
<parameterdescription>
<para>a 0-terminated list of characters used to separate two pairs from each other, for example &apos;:&apos; or &apos;,&apos; </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>flags; see the AV_OPT_FLAG_* values below </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rkey</parametername>
</parameternamelist>
<parameterdescription>
<para>parsed key; must be freed using <ref refid="group__lavu__mem_1ga0c9096f498624c525aa2315b8a20c411" kindref="member">av_free()</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rval</parametername>
</parameternamelist>
<parameterdescription>
<para>parsed value; must be freed using <ref refid="group__lavu__mem_1ga0c9096f498624c525aa2315b8a20c411" kindref="member">av_free()</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>&gt;=0 for success, or a negative value corresponding to an AVERROR code in case of error; in particular: <ref refid="group__lavu__error_1gae4bb6f165973d09584e0ec0f335f69ca" kindref="member">AVERROR(EINVAL)</ref> if no key is present </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" line="513" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__opt__eval__funcs_1gae245940b870e13b759354d570decf3dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_opt_eval_flags</definition>
        <argsstring>(void *obj, const AVOption *o, const char *val, int *flags_out)</argsstring>
        <name>av_opt_eval_flags</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_a_v_option" kindref="compound">AVOption</ref> *</type>
          <declname>o</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>val</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>flags_out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" line="541" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__opt__eval__funcs_1ga8bcee89d4a51400092e2d653c842bfa8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_opt_eval_int</definition>
        <argsstring>(void *obj, const AVOption *o, const char *val, int *int_out)</argsstring>
        <name>av_opt_eval_int</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_a_v_option" kindref="compound">AVOption</ref> *</type>
          <declname>o</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>val</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>int_out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" line="542" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__opt__eval__funcs_1gae2285d602e2079f0df141826fc00c666" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_opt_eval_int64</definition>
        <argsstring>(void *obj, const AVOption *o, const char *val, int64_t *int64_out)</argsstring>
        <name>av_opt_eval_int64</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_a_v_option" kindref="compound">AVOption</ref> *</type>
          <declname>o</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>val</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref> *</type>
          <declname>int64_out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" line="543" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__opt__eval__funcs_1ga3c06cf2a2e7efc60d97adbeb7bbb6b44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_opt_eval_float</definition>
        <argsstring>(void *obj, const AVOption *o, const char *val, float *float_out)</argsstring>
        <name>av_opt_eval_float</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_a_v_option" kindref="compound">AVOption</ref> *</type>
          <declname>o</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>float_out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" line="544" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__opt__eval__funcs_1gac65f3b9753c48616e8dd4dea0c47f9e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_opt_eval_double</definition>
        <argsstring>(void *obj, const AVOption *o, const char *val, double *double_out)</argsstring>
        <name>av_opt_eval_double</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_a_v_option" kindref="compound">AVOption</ref> *</type>
          <declname>o</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>val</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>double_out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" line="545" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__opt__eval__funcs_1gabd95639131aac582a2f7c4bfc5adb4b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_opt_eval_q</definition>
        <argsstring>(void *obj, const AVOption *o, const char *val, AVRational *q_out)</argsstring>
        <name>av_opt_eval_q</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_a_v_option" kindref="compound">AVOption</ref> *</type>
          <declname>o</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>val</declname>
        </param>
        <param>
          <type><ref refid="struct_a_v_rational" kindref="compound">AVRational</ref> *</type>
          <declname>q_out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" line="546" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__avoptions_1gae31ae7fb20113b00108d0ecf53f25664" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_a_v_option" kindref="compound">AVOption</ref> *</type>
        <definition>const AVOption* av_opt_find</definition>
        <argsstring>(void *obj, const char *name, const char *unit, int opt_flags, int search_flags)</argsstring>
        <name>av_opt_find</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>unit</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>opt_flags</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>search_flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Look for an option in an object. Consider only options which have all the specified flags set.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a struct whose first element is a pointer to an <ref refid="struct_a_v_class" kindref="compound">AVClass</ref>. Alternatively a double pointer to an <ref refid="struct_a_v_class" kindref="compound">AVClass</ref>, if AV_OPT_SEARCH_FAKE_OBJ search flag is set. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the option to look for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">unit</parametername>
</parameternamelist>
<parameterdescription>
<para>When searching for named constants, name of the unit it belongs to. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>opt_flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Find only options with all the specified flags set (AV_OPT_FLAG). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>search_flags</parametername>
</parameternamelist>
<parameterdescription>
<para>A combination of AV_OPT_SEARCH_*.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A pointer to the option found, or NULL if no option was found.</para></simplesect>
<simplesect kind="note"><para>Options found with AV_OPT_SEARCH_CHILDREN flag may not be settable directly with <ref refid="group__avoptions_1gaef3d3cd17236e8a38d95c8a13031ba80" kindref="member">av_set_string3()</ref>. Use special calls which take an options AVDictionary (e.g. <ref refid="group__lavf__decoding_1ga10a404346c646e4ab58f4ed798baca32" kindref="member">avformat_open_input()</ref>) to set options found with this flag. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" line="584" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__avoptions_1ga3e121fd0b44b34e31756f4fe848d29a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_a_v_option" kindref="compound">AVOption</ref> *</type>
        <definition>const AVOption* av_opt_find2</definition>
        <argsstring>(void *obj, const char *name, const char *unit, int opt_flags, int search_flags, void **target_obj)</argsstring>
        <name>av_opt_find2</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>unit</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>opt_flags</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>search_flags</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> **</type>
          <declname>target_obj</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Look for an option in an object. Consider only options which have all the specified flags set.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">obj</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a struct whose first element is a pointer to an <ref refid="struct_a_v_class" kindref="compound">AVClass</ref>. Alternatively a double pointer to an <ref refid="struct_a_v_class" kindref="compound">AVClass</ref>, if AV_OPT_SEARCH_FAKE_OBJ search flag is set. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the option to look for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">unit</parametername>
</parameternamelist>
<parameterdescription>
<para>When searching for named constants, name of the unit it belongs to. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>opt_flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Find only options with all the specified flags set (AV_OPT_FLAG). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>search_flags</parametername>
</parameternamelist>
<parameterdescription>
<para>A combination of AV_OPT_SEARCH_*. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">target_obj</parametername>
</parameternamelist>
<parameterdescription>
<para>if non-NULL, an object to which the option belongs will be written here. It may be different from obj if AV_OPT_SEARCH_CHILDREN is present in search_flags. This parameter is ignored if search_flags contain AV_OPT_SEARCH_FAKE_OBJ.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A pointer to the option found, or NULL if no option was found. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" line="608" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__avoptions_1ga78edbb7da1fdc8626d8a52f8ab7e7a0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_a_v_option" kindref="compound">AVOption</ref> *</type>
        <definition>const AVOption* av_opt_next</definition>
        <argsstring>(void *obj, const AVOption *prev)</argsstring>
        <name>av_opt_next</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_a_v_option" kindref="compound">AVOption</ref> *</type>
          <declname>prev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Iterate over all AVOptions belonging to obj.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>an AVOptions-enabled struct or a double pointer to an <ref refid="struct_a_v_class" kindref="compound">AVClass</ref> describing it. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>prev</parametername>
</parameternamelist>
<parameterdescription>
<para>result of the previous call to <ref refid="group__avoptions_1ga78edbb7da1fdc8626d8a52f8ab7e7a0c" kindref="member">av_opt_next()</ref> on this object or NULL </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>next <ref refid="struct_a_v_option" kindref="compound">AVOption</ref> or NULL </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" line="620" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__avoptions_1gaacce30022d2e99c7b9309d3ad3345f69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
        <definition>void* av_opt_child_next</definition>
        <argsstring>(void *obj, void *prev)</argsstring>
        <name>av_opt_child_next</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>prev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Iterate over AVOptions-enabled children of obj.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>prev</parametername>
</parameternamelist>
<parameterdescription>
<para>result of a previous call to this function or NULL </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>next AVOptions-enabled child or NULL </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" line="628" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__avoptions_1gadee1f425013a0f861a40a72d80f189b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_a_v_class" kindref="compound">AVClass</ref> *</type>
        <definition>const AVClass* av_opt_child_class_next</definition>
        <argsstring>(const AVClass *parent, const AVClass *prev)</argsstring>
        <name>av_opt_child_class_next</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_a_v_class" kindref="compound">AVClass</ref> *</type>
          <declname>parent</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_a_v_class" kindref="compound">AVClass</ref> *</type>
          <declname>prev</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Iterate over potential AVOptions-enabled children of parent.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>prev</parametername>
</parameternamelist>
<parameterdescription>
<para>result of a previous call to this function or NULL </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="struct_a_v_class" kindref="compound">AVClass</ref> corresponding to next potential child or NULL </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" line="636" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__opt__set__funcs_1ga5fd4b92bdf4f392a2847f711676a7537" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_opt_set</definition>
        <argsstring>(void *obj, const char *name, const char *val, int search_flags)</argsstring>
        <name>av_opt_set</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>val</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>search_flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" line="664" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__opt__set__funcs_1ga3adf7185c21cc080890a5ec02c2e56b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_opt_set_int</definition>
        <argsstring>(void *obj, const char *name, int64_t val, int search_flags)</argsstring>
        <name>av_opt_set_int</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref></type>
          <declname>val</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>search_flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" line="665" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__opt__set__funcs_1ga11f22424bb01fd58f6b34f220a0fff6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_opt_set_double</definition>
        <argsstring>(void *obj, const char *name, double val, int search_flags)</argsstring>
        <name>av_opt_set_double</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>search_flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" line="666" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__opt__set__funcs_1ga4f4f0b06e931c638ee8b4074e3638cef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_opt_set_q</definition>
        <argsstring>(void *obj, const char *name, AVRational val, int search_flags)</argsstring>
        <name>av_opt_set_q</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="struct_a_v_rational" kindref="compound">AVRational</ref></type>
          <declname>val</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>search_flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" line="667" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__opt__set__funcs_1ga6c32155fd8a96bed2f8cf5ebc030dadf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_opt_set_bin</definition>
        <argsstring>(void *obj, const char *name, const uint8_t *val, int size, int search_flags)</argsstring>
        <name>av_opt_set_bin</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> *</type>
          <declname>val</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>search_flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" line="668" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__opt__set__funcs_1ga29c5723116dcc9be891ee2ca61f2df5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_opt_set_image_size</definition>
        <argsstring>(void *obj, const char *name, int w, int h, int search_flags)</argsstring>
        <name>av_opt_set_image_size</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>w</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>h</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>search_flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" line="669" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__opt__set__funcs_1gae8992c7875fd69a0c0e8c010098d402d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_opt_set_pixel_fmt</definition>
        <argsstring>(void *obj, const char *name, enum AVPixelFormat fmt, int search_flags)</argsstring>
        <name>av_opt_set_pixel_fmt</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>enum <ref refid="pixfmt_8h_1a9a8e335cf3be472042bc9f0cf80cd4c5" kindref="member">AVPixelFormat</ref></type>
          <declname>fmt</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>search_flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" line="670" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__opt__set__funcs_1gad446f7a7b92442e464d43e400e661040" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_opt_set_sample_fmt</definition>
        <argsstring>(void *obj, const char *name, enum AVSampleFormat fmt, int search_flags)</argsstring>
        <name>av_opt_set_sample_fmt</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>enum <ref refid="samplefmt_8h_1af9a51ca15301871723577c730b5865c5" kindref="member">AVSampleFormat</ref></type>
          <declname>fmt</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>search_flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" line="671" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__opt__set__funcs_1gac4a81110dd4f5c717ec6ccf0a9e94b9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_opt_set_video_rate</definition>
        <argsstring>(void *obj, const char *name, AVRational val, int search_flags)</argsstring>
        <name>av_opt_set_video_rate</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="struct_a_v_rational" kindref="compound">AVRational</ref></type>
          <declname>val</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>search_flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" line="672" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__opt__set__funcs_1gaf25f11e11068f2c41197ba072f25d2a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_opt_set_channel_layout</definition>
        <argsstring>(void *obj, const char *name, int64_t ch_layout, int search_flags)</argsstring>
        <name>av_opt_set_channel_layout</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref></type>
          <declname>ch_layout</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>search_flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" line="673" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__opt__get__funcs_1gaf31144e60f9ce89dbe8cbea57a0b232c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_opt_get</definition>
        <argsstring>(void *obj, const char *name, int search_flags, uint8_t **out_val)</argsstring>
        <name>av_opt_get</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>search_flags</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> **</type>
          <declname>out_val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>the returned string will be <ref refid="group__lavu__mem_1gacbca30ebc510a7e4156d66e7aceb2dc8" kindref="member">av_malloc()</ref>ed and must be <ref refid="group__lavu__mem_1ga0c9096f498624c525aa2315b8a20c411" kindref="member">av_free()</ref>ed by the caller </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" line="709" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__opt__get__funcs_1gaab5b9c0969efe56420536a5d190e59bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_opt_get_int</definition>
        <argsstring>(void *obj, const char *name, int search_flags, int64_t *out_val)</argsstring>
        <name>av_opt_get_int</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>search_flags</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref> *</type>
          <declname>out_val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" line="710" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__opt__get__funcs_1ga4ee50245cd18a65ec1cd27bc8e0cab83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_opt_get_double</definition>
        <argsstring>(void *obj, const char *name, int search_flags, double *out_val)</argsstring>
        <name>av_opt_get_double</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>search_flags</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>out_val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" line="711" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__opt__get__funcs_1gabc553a1b95468f935eedfa9db86e2a15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_opt_get_q</definition>
        <argsstring>(void *obj, const char *name, int search_flags, AVRational *out_val)</argsstring>
        <name>av_opt_get_q</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>search_flags</declname>
        </param>
        <param>
          <type><ref refid="struct_a_v_rational" kindref="compound">AVRational</ref> *</type>
          <declname>out_val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" line="712" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__opt__get__funcs_1ga96d9c726c3feff308e7fe447633c9720" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_opt_get_image_size</definition>
        <argsstring>(void *obj, const char *name, int search_flags, int *w_out, int *h_out)</argsstring>
        <name>av_opt_get_image_size</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>search_flags</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>w_out</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>h_out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" line="713" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__opt__get__funcs_1ga41fdd93f0483e96548168f9cfaf5bf6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_opt_get_pixel_fmt</definition>
        <argsstring>(void *obj, const char *name, int search_flags, enum AVPixelFormat *out_fmt)</argsstring>
        <name>av_opt_get_pixel_fmt</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>search_flags</declname>
        </param>
        <param>
          <type>enum <ref refid="pixfmt_8h_1a9a8e335cf3be472042bc9f0cf80cd4c5" kindref="member">AVPixelFormat</ref> *</type>
          <declname>out_fmt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" line="714" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__opt__get__funcs_1gade39dd8ce34b193f7012022072e36642" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_opt_get_sample_fmt</definition>
        <argsstring>(void *obj, const char *name, int search_flags, enum AVSampleFormat *out_fmt)</argsstring>
        <name>av_opt_get_sample_fmt</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>search_flags</declname>
        </param>
        <param>
          <type>enum <ref refid="samplefmt_8h_1af9a51ca15301871723577c730b5865c5" kindref="member">AVSampleFormat</ref> *</type>
          <declname>out_fmt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" line="715" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__opt__get__funcs_1gaf565dc77c53e8e56d08ee1a3c642f95f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_opt_get_video_rate</definition>
        <argsstring>(void *obj, const char *name, int search_flags, AVRational *out_val)</argsstring>
        <name>av_opt_get_video_rate</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>search_flags</declname>
        </param>
        <param>
          <type><ref refid="struct_a_v_rational" kindref="compound">AVRational</ref> *</type>
          <declname>out_val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" line="716" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__opt__get__funcs_1ga35864ccde3246be3f56366fd5145fc12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_opt_get_channel_layout</definition>
        <argsstring>(void *obj, const char *name, int search_flags, int64_t *ch_layout)</argsstring>
        <name>av_opt_get_channel_layout</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>search_flags</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref> *</type>
          <declname>ch_layout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" line="717" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__avoptions_1gab1d208d09e487741a28016919225bef6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
        <definition>void* av_opt_ptr</definition>
        <argsstring>(const AVClass *avclass, void *obj, const char *name)</argsstring>
        <name>av_opt_ptr</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_a_v_class" kindref="compound">AVClass</ref> *</type>
          <declname>avclass</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets a pointer to the requested field in a struct. This function allows accessing a struct even when its fields are moved or renamed since the application making the access has been compiled,</para><para><simplesect kind="return"><para>a pointer to the field, it can be cast to the correct type and read or written to. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" line="729" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__avoptions_1ga880756f24644ff66c806ed2d9ab3d790" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void av_opt_freep_ranges</definition>
        <argsstring>(AVOptionRanges **ranges)</argsstring>
        <name>av_opt_freep_ranges</name>
        <param>
          <type><ref refid="struct_a_v_option_ranges" kindref="compound">AVOptionRanges</ref> **</type>
          <declname>ranges</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Free an <ref refid="struct_a_v_option_ranges" kindref="compound">AVOptionRanges</ref> struct and set it to NULL. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" line="734" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__avoptions_1ga9751db4da3e0facd522f5b345f4001ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_opt_query_ranges</definition>
        <argsstring>(AVOptionRanges **, void *obj, const char *key, int flags)</argsstring>
        <name>av_opt_query_ranges</name>
        <param>
          <type><ref refid="struct_a_v_option_ranges" kindref="compound">AVOptionRanges</ref> **</type>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a list of allowed ranges for the given option.</para><para>The returned list may depend on other fields in obj like for example profile.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>is a bitmask of flags, undefined flags should not be set and should be ignored AV_OPT_SEARCH_FAKE_OBJ indicates that the obj is a double pointer to a <ref refid="struct_a_v_class" kindref="compound">AVClass</ref> instead of a full instance</para></parameterdescription>
</parameteritem>
</parameterlist>
The result must be freed with av_opt_freep_ranges.</para><para><simplesect kind="return"><para>&gt;= 0 on success, a negative errro code otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" line="748" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__avoptions_1ga4e50bee09b6a374cc54237314892c001" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_opt_query_ranges_default</definition>
        <argsstring>(AVOptionRanges **, void *obj, const char *key, int flags)</argsstring>
        <name>av_opt_query_ranges_default</name>
        <param>
          <type><ref refid="struct_a_v_option_ranges" kindref="compound">AVOptionRanges</ref> **</type>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>flags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a default list of allowed ranges for the given option.</para><para>This list is constructed without using the <ref refid="struct_a_v_class_1a1f25d6b76f5a8b474cc1cb16aa5ed5df" kindref="member">AVClass.query_ranges()</ref> callback and can be used as fallback from within the callback.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>is a bitmask of flags, undefined flags should not be set and should be ignored AV_OPT_SEARCH_FAKE_OBJ indicates that the obj is a double pointer to a <ref refid="struct_a_v_class" kindref="compound">AVClass</ref> instead of a full instance</para></parameterdescription>
</parameteritem>
</parameterlist>
The result must be freed with av_opt_free_ranges.</para><para><simplesect kind="return"><para>&gt;= 0 on success, a negative errro code otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h" line="763" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>AVOptions </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>AVOptions</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>copyright<sp/>(c)<sp/>2005<sp/>Michael<sp/>Niedermayer<sp/>&lt;michaelni@gmx.at&gt;</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>FFmpeg.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>FFmpeg<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>License<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>version<sp/>2.1<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>FFmpeg<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>License<sp/>along<sp/>with<sp/>FFmpeg;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>Street,<sp/>Fifth<sp/>Floor,<sp/>Boston,<sp/>MA<sp/>02110-1301<sp/>USA</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>AVUTIL_OPT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AVUTIL_OPT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="rational_8h" kindref="compound">rational.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="avutil_8h" kindref="compound">avutil.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dict_8h" kindref="compound">dict.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ffmpeg_2libavutil_2log_8h" kindref="compound">log.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pixfmt_8h" kindref="compound">pixfmt.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="samplefmt_8h" kindref="compound">samplefmt.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="220" refid="group__avoptions_1gabd75aa30eb8ad6387672df9a1fa79444" refkind="member"><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__avoptions_1gabd75aa30eb8ad6387672df9a1fa79444" kindref="member">AVOptionType</ref>{</highlight></codeline>
<codeline lineno="221" refid="group__avoptions_1ggabd75aa30eb8ad6387672df9a1fa79444a7aaeee142b88a3078ddc57c644b49a7e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__avoptions_1ggabd75aa30eb8ad6387672df9a1fa79444a7aaeee142b88a3078ddc57c644b49a7e" kindref="member">AV_OPT_TYPE_FLAGS</ref>,</highlight></codeline>
<codeline lineno="222" refid="group__avoptions_1ggabd75aa30eb8ad6387672df9a1fa79444ac068b8f6afeeb293a13aeabb5d702411" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__avoptions_1ggabd75aa30eb8ad6387672df9a1fa79444ac068b8f6afeeb293a13aeabb5d702411" kindref="member">AV_OPT_TYPE_INT</ref>,</highlight></codeline>
<codeline lineno="223" refid="group__avoptions_1ggabd75aa30eb8ad6387672df9a1fa79444a94d540a5b928da813ff94d9367a1078a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__avoptions_1ggabd75aa30eb8ad6387672df9a1fa79444a94d540a5b928da813ff94d9367a1078a" kindref="member">AV_OPT_TYPE_INT64</ref>,</highlight></codeline>
<codeline lineno="224" refid="group__avoptions_1ggabd75aa30eb8ad6387672df9a1fa79444ae0b49ec51847a758ceb46976083da2e5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__avoptions_1ggabd75aa30eb8ad6387672df9a1fa79444ae0b49ec51847a758ceb46976083da2e5" kindref="member">AV_OPT_TYPE_DOUBLE</ref>,</highlight></codeline>
<codeline lineno="225" refid="group__avoptions_1ggabd75aa30eb8ad6387672df9a1fa79444ae91d3f6cbac4a4de2a6e880ac2a52d1a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__avoptions_1ggabd75aa30eb8ad6387672df9a1fa79444ae91d3f6cbac4a4de2a6e880ac2a52d1a" kindref="member">AV_OPT_TYPE_FLOAT</ref>,</highlight></codeline>
<codeline lineno="226" refid="group__avoptions_1ggabd75aa30eb8ad6387672df9a1fa79444afadddce95ad3b690dd38644b458b96c4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__avoptions_1ggabd75aa30eb8ad6387672df9a1fa79444afadddce95ad3b690dd38644b458b96c4" kindref="member">AV_OPT_TYPE_STRING</ref>,</highlight></codeline>
<codeline lineno="227" refid="group__avoptions_1ggabd75aa30eb8ad6387672df9a1fa79444a74ba464440564230a72b95b39593cbfc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__avoptions_1ggabd75aa30eb8ad6387672df9a1fa79444a74ba464440564230a72b95b39593cbfc" kindref="member">AV_OPT_TYPE_RATIONAL</ref>,</highlight></codeline>
<codeline lineno="228" refid="group__avoptions_1ggabd75aa30eb8ad6387672df9a1fa79444a2689966edbe494482dfdfaa4efdf95d3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__avoptions_1ggabd75aa30eb8ad6387672df9a1fa79444a2689966edbe494482dfdfaa4efdf95d3" kindref="member">AV_OPT_TYPE_BINARY</ref>,<sp/><sp/></highlight></codeline>
<codeline lineno="229" refid="group__avoptions_1ggabd75aa30eb8ad6387672df9a1fa79444a0fa9f07d428bdc32495fe55c365c5329" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__avoptions_1ggabd75aa30eb8ad6387672df9a1fa79444a0fa9f07d428bdc32495fe55c365c5329" kindref="member">AV_OPT_TYPE_CONST</ref><sp/>=<sp/>128,</highlight></codeline>
<codeline lineno="230" refid="group__avoptions_1ggabd75aa30eb8ad6387672df9a1fa79444a078f280b98b49a9f585c5d479b711d9a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__avoptions_1ggabd75aa30eb8ad6387672df9a1fa79444a078f280b98b49a9f585c5d479b711d9a" kindref="member">AV_OPT_TYPE_IMAGE_SIZE</ref><sp/>=<sp/><ref refid="ffmpeg_2libavutil_2common_8h_1a1e233db224cd0a3079fd4572d1a3d717" kindref="member">MKBETAG</ref>(</highlight><highlight class="charliteral">&apos;S&apos;</highlight><highlight class="normal">,</highlight><highlight class="charliteral">&apos;I&apos;</highlight><highlight class="normal">,</highlight><highlight class="charliteral">&apos;Z&apos;</highlight><highlight class="normal">,</highlight><highlight class="charliteral">&apos;E&apos;</highlight><highlight class="normal">),<sp/></highlight></codeline>
<codeline lineno="231" refid="group__avoptions_1ggabd75aa30eb8ad6387672df9a1fa79444a114085ba9877df34de060124877d8274" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__avoptions_1ggabd75aa30eb8ad6387672df9a1fa79444a114085ba9877df34de060124877d8274" kindref="member">AV_OPT_TYPE_PIXEL_FMT</ref><sp/><sp/>=<sp/><ref refid="ffmpeg_2libavutil_2common_8h_1a1e233db224cd0a3079fd4572d1a3d717" kindref="member">MKBETAG</ref>(</highlight><highlight class="charliteral">&apos;P&apos;</highlight><highlight class="normal">,</highlight><highlight class="charliteral">&apos;F&apos;</highlight><highlight class="normal">,</highlight><highlight class="charliteral">&apos;M&apos;</highlight><highlight class="normal">,</highlight><highlight class="charliteral">&apos;T&apos;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="232" refid="group__avoptions_1ggabd75aa30eb8ad6387672df9a1fa79444a711661923db91bbbd4abdec0efa5ff0a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__avoptions_1ggabd75aa30eb8ad6387672df9a1fa79444a711661923db91bbbd4abdec0efa5ff0a" kindref="member">AV_OPT_TYPE_SAMPLE_FMT</ref><sp/>=<sp/><ref refid="ffmpeg_2libavutil_2common_8h_1a1e233db224cd0a3079fd4572d1a3d717" kindref="member">MKBETAG</ref>(</highlight><highlight class="charliteral">&apos;S&apos;</highlight><highlight class="normal">,</highlight><highlight class="charliteral">&apos;F&apos;</highlight><highlight class="normal">,</highlight><highlight class="charliteral">&apos;M&apos;</highlight><highlight class="normal">,</highlight><highlight class="charliteral">&apos;T&apos;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="233" refid="group__avoptions_1ggabd75aa30eb8ad6387672df9a1fa79444a9429811abc62d4a564ec56938df0a572" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__avoptions_1ggabd75aa30eb8ad6387672df9a1fa79444a9429811abc62d4a564ec56938df0a572" kindref="member">AV_OPT_TYPE_VIDEO_RATE</ref><sp/>=<sp/><ref refid="ffmpeg_2libavutil_2common_8h_1a1e233db224cd0a3079fd4572d1a3d717" kindref="member">MKBETAG</ref>(</highlight><highlight class="charliteral">&apos;V&apos;</highlight><highlight class="normal">,</highlight><highlight class="charliteral">&apos;R&apos;</highlight><highlight class="normal">,</highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal">,</highlight><highlight class="charliteral">&apos;T&apos;</highlight><highlight class="normal">),<sp/></highlight></codeline>
<codeline lineno="234" refid="group__avoptions_1ggabd75aa30eb8ad6387672df9a1fa79444a2e3a2fc47ae688f28cc4abe59452a032" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__avoptions_1ggabd75aa30eb8ad6387672df9a1fa79444a2e3a2fc47ae688f28cc4abe59452a032" kindref="member">AV_OPT_TYPE_DURATION</ref><sp/><sp/><sp/>=<sp/><ref refid="ffmpeg_2libavutil_2common_8h_1a1e233db224cd0a3079fd4572d1a3d717" kindref="member">MKBETAG</ref>(</highlight><highlight class="charliteral">&apos;D&apos;</highlight><highlight class="normal">,</highlight><highlight class="charliteral">&apos;U&apos;</highlight><highlight class="normal">,</highlight><highlight class="charliteral">&apos;R&apos;</highlight><highlight class="normal">,</highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="235" refid="group__avoptions_1ggabd75aa30eb8ad6387672df9a1fa79444afdcd13cbd184901b05e27595e647fadc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__avoptions_1ggabd75aa30eb8ad6387672df9a1fa79444afdcd13cbd184901b05e27595e647fadc" kindref="member">AV_OPT_TYPE_COLOR</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="ffmpeg_2libavutil_2common_8h_1a1e233db224cd0a3079fd4572d1a3d717" kindref="member">MKBETAG</ref>(</highlight><highlight class="charliteral">&apos;C&apos;</highlight><highlight class="normal">,</highlight><highlight class="charliteral">&apos;O&apos;</highlight><highlight class="normal">,</highlight><highlight class="charliteral">&apos;L&apos;</highlight><highlight class="normal">,</highlight><highlight class="charliteral">&apos;R&apos;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="236" refid="group__avoptions_1ggabd75aa30eb8ad6387672df9a1fa79444a5628c270688d2ec28643dfff825dbe26" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__avoptions_1ggabd75aa30eb8ad6387672df9a1fa79444a5628c270688d2ec28643dfff825dbe26" kindref="member">AV_OPT_TYPE_CHANNEL_LAYOUT</ref><sp/>=<sp/><ref refid="ffmpeg_2libavutil_2common_8h_1a1e233db224cd0a3079fd4572d1a3d717" kindref="member">MKBETAG</ref>(</highlight><highlight class="charliteral">&apos;C&apos;</highlight><highlight class="normal">,</highlight><highlight class="charliteral">&apos;H&apos;</highlight><highlight class="normal">,</highlight><highlight class="charliteral">&apos;L&apos;</highlight><highlight class="normal">,</highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>FF_API_OLD_AVOPTIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238" refid="group__avoptions_1ggabd75aa30eb8ad6387672df9a1fa79444a972d740573d501897cf190e044f6cbd1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__avoptions_1ggabd75aa30eb8ad6387672df9a1fa79444a972d740573d501897cf190e044f6cbd1" kindref="member">FF_OPT_TYPE_FLAGS</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="239" refid="group__avoptions_1ggabd75aa30eb8ad6387672df9a1fa79444ade76f8560d82f468f9e65e45b06d73be" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__avoptions_1ggabd75aa30eb8ad6387672df9a1fa79444ade76f8560d82f468f9e65e45b06d73be" kindref="member">FF_OPT_TYPE_INT</ref>,</highlight></codeline>
<codeline lineno="240" refid="group__avoptions_1ggabd75aa30eb8ad6387672df9a1fa79444acef88775b03b83cef74a364782ee05bd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__avoptions_1ggabd75aa30eb8ad6387672df9a1fa79444acef88775b03b83cef74a364782ee05bd" kindref="member">FF_OPT_TYPE_INT64</ref>,</highlight></codeline>
<codeline lineno="241" refid="group__avoptions_1ggabd75aa30eb8ad6387672df9a1fa79444af97892f80a0b4906a7558dc3ed329a25" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__avoptions_1ggabd75aa30eb8ad6387672df9a1fa79444af97892f80a0b4906a7558dc3ed329a25" kindref="member">FF_OPT_TYPE_DOUBLE</ref>,</highlight></codeline>
<codeline lineno="242" refid="group__avoptions_1ggabd75aa30eb8ad6387672df9a1fa79444ad267c85328230996430fd6f8b935188b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__avoptions_1ggabd75aa30eb8ad6387672df9a1fa79444ad267c85328230996430fd6f8b935188b" kindref="member">FF_OPT_TYPE_FLOAT</ref>,</highlight></codeline>
<codeline lineno="243" refid="group__avoptions_1ggabd75aa30eb8ad6387672df9a1fa79444adf44c8f2d3159a3da10cb119dcf7afce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__avoptions_1ggabd75aa30eb8ad6387672df9a1fa79444adf44c8f2d3159a3da10cb119dcf7afce" kindref="member">FF_OPT_TYPE_STRING</ref>,</highlight></codeline>
<codeline lineno="244" refid="group__avoptions_1ggabd75aa30eb8ad6387672df9a1fa79444a3c959e9d7a955115e2fd28baabf1866f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__avoptions_1ggabd75aa30eb8ad6387672df9a1fa79444a3c959e9d7a955115e2fd28baabf1866f" kindref="member">FF_OPT_TYPE_RATIONAL</ref>,</highlight></codeline>
<codeline lineno="245" refid="group__avoptions_1ggabd75aa30eb8ad6387672df9a1fa79444a095c14bf4791388e6ec64e9362f2c565" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__avoptions_1ggabd75aa30eb8ad6387672df9a1fa79444a095c14bf4791388e6ec64e9362f2c565" kindref="member">FF_OPT_TYPE_BINARY</ref>,<sp/><sp/></highlight></codeline>
<codeline lineno="246" refid="group__avoptions_1ggabd75aa30eb8ad6387672df9a1fa79444af4c3a5065a10d45c6137e9a024046a8f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__avoptions_1ggabd75aa30eb8ad6387672df9a1fa79444af4c3a5065a10d45c6137e9a024046a8f" kindref="member">FF_OPT_TYPE_CONST</ref>=128,</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal">};</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="253" refid="struct_a_v_option" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_a_v_option" kindref="compound">AVOption</ref><sp/>{</highlight></codeline>
<codeline lineno="254" refid="struct_a_v_option_1a87e81c6e58d6a94d97a98ad15a4e507c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="struct_a_v_option_1a87e81c6e58d6a94d97a98ad15a4e507c" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="260" refid="struct_a_v_option_1a6c72d22b8c599e89abba088b85dfcd8a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="struct_a_v_option_1a6c72d22b8c599e89abba088b85dfcd8a" kindref="member">help</ref>;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="266" refid="struct_a_v_option_1a0ab0d209c04b72cfd72808c9e9e46a46" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_a_v_option_1a0ab0d209c04b72cfd72808c9e9e46a46" kindref="member">offset</ref>;</highlight></codeline>
<codeline lineno="267" refid="struct_a_v_option_1af50f9be082b4b1cf0d76b1e24face3bc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__avoptions_1gabd75aa30eb8ad6387672df9a1fa79444" kindref="member">AVOptionType</ref><sp/><ref refid="struct_a_v_option_1af50f9be082b4b1cf0d76b1e24face3bc" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="273" refid="struct_a_v_option_1a9ee4ba4426ba1ff7e2f8030d2c49ba35" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref><sp/><ref refid="struct_a_v_option_1a9ee4ba4426ba1ff7e2f8030d2c49ba35" kindref="member">i64</ref>;</highlight></codeline>
<codeline lineno="274" refid="struct_a_v_option_1afd9a2f8e983c9ee8de643621022064f0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="struct_a_v_option_1afd9a2f8e983c9ee8de643621022064f0" kindref="member">dbl</ref>;</highlight></codeline>
<codeline lineno="275" refid="struct_a_v_option_1a3edf01c0c79e387474ef38a3d9e6f79c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="struct_a_v_option_1a3edf01c0c79e387474ef38a3d9e6f79c" kindref="member">str</ref>;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>TODO<sp/>those<sp/>are<sp/>unused<sp/>now<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277" refid="struct_a_v_option_1a3dc71ba8963767a30821b5b2bfc7e79d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_a_v_rational" kindref="compound">AVRational</ref><sp/><ref refid="struct_a_v_option_1a3dc71ba8963767a30821b5b2bfc7e79d" kindref="member">q</ref>;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><ref refid="struct_a_v_option_1a4e7968bd94d3e773e5fe145f919ecd9e" kindref="member">default_val</ref>;</highlight></codeline>
<codeline lineno="279" refid="struct_a_v_option_1aaf1937648549dce7a4be35268a359a19" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="struct_a_v_option_1aaf1937648549dce7a4be35268a359a19" kindref="member">min</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="280" refid="struct_a_v_option_1a078ff8d3707143690d7d59d87d4706f4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="struct_a_v_option_1a078ff8d3707143690d7d59d87d4706f4" kindref="member">max</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282" refid="struct_a_v_option_1ae6b670af4b2c7819c35437cab61c2745" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_a_v_option_1ae6b670af4b2c7819c35437cab61c2745" kindref="member">flags</ref>;</highlight></codeline>
<codeline lineno="283" refid="opt_8h_1aba0d5e41287b6fbeae5dd59f643695cc" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AV_OPT_FLAG_ENCODING_PARAM<sp/><sp/>1<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="284" refid="opt_8h_1aad820197915e73441f76f5e0c384d78a" refkind="member"><highlight class="preprocessor">#define<sp/>AV_OPT_FLAG_DECODING_PARAM<sp/><sp/>2<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="285"><highlight class="preprocessor">#if<sp/>FF_API_OPT_TYPE_METADATA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286" refid="opt_8h_1a7cb99c554282ab219c3da10f9fc285e9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AV_OPT_FLAG_METADATA<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="287"><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288" refid="opt_8h_1aaa63966a3f547a71a7742f4aea00093a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AV_OPT_FLAG_AUDIO_PARAM<sp/><sp/><sp/><sp/><sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289" refid="opt_8h_1aaf3d0af9d7eca757034486a8eb896246" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AV_OPT_FLAG_VIDEO_PARAM<sp/><sp/><sp/><sp/><sp/>16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290" refid="opt_8h_1ad27ec6a75c8a2c21329e443b15b368c3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AV_OPT_FLAG_SUBTITLE_PARAM<sp/><sp/>32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="294" refid="opt_8h_1adf984463025a7861f3c21b113966cb53" refkind="member"><highlight class="preprocessor">#define<sp/>AV_OPT_FLAG_EXPORT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="299" refid="opt_8h_1a5f24d30655a5aea4dc8bd7263dbfd78c" refkind="member"><highlight class="preprocessor">#define<sp/>AV_OPT_FLAG_READONLY<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>128</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300" refid="opt_8h_1a1fa5f9ced9142668142f316b0aad2cfc" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AV_OPT_FLAG_FILTERING_PARAM<sp/>(1&lt;&lt;16)<sp/></highlight></codeline>
<codeline lineno="301"><highlight class="preprocessor">//FIXME<sp/>think<sp/>about<sp/>enc-audio,<sp/>...<sp/>style<sp/>flags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="308" refid="struct_a_v_option_1a248d65a7cab7d7bd3a4eb51212ab0e49" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="struct_a_v_option_1a248d65a7cab7d7bd3a4eb51212ab0e49" kindref="member">unit</ref>;</highlight></codeline>
<codeline lineno="309"><highlight class="normal">}<sp/><ref refid="group__avoptions_1gaa1b952fe722d2259743ba5a35ce47f46" kindref="member">AVOption</ref>;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="314" refid="struct_a_v_option_range" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_a_v_option_range" kindref="compound">AVOptionRange</ref><sp/>{</highlight></codeline>
<codeline lineno="315" refid="struct_a_v_option_range_1a354f95a62affe330479bb9941146d734" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="struct_a_v_option_range_1a354f95a62affe330479bb9941146d734" kindref="member">str</ref>;</highlight></codeline>
<codeline lineno="316" refid="struct_a_v_option_range_1adb21ecde2d4e6b47b9107816f9287ccb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="struct_a_v_option_range_1adb21ecde2d4e6b47b9107816f9287ccb" kindref="member">value_min</ref>,<sp/>value_max;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="317" refid="struct_a_v_option_range_1a2f107bb96630be02d4aec9657b24bb3a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="struct_a_v_option_range_1a2f107bb96630be02d4aec9657b24bb3a" kindref="member">component_min</ref>,<sp/>component_max;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="318" refid="struct_a_v_option_range_1afb2f043056ff5fea103f24ba98eafafc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_a_v_option_range_1afb2f043056ff5fea103f24ba98eafafc" kindref="member">is_range</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="319"><highlight class="normal">}<sp/><ref refid="group__avoptions_1gac8caf68f1d182f6a081ff4336efbeac6" kindref="member">AVOptionRange</ref>;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="324" refid="struct_a_v_option_ranges" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_a_v_option_ranges" kindref="compound">AVOptionRanges</ref><sp/>{</highlight></codeline>
<codeline lineno="325" refid="struct_a_v_option_ranges_1a6e081daa7e707607e63165909b0995ce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_a_v_option_range" kindref="compound">AVOptionRange</ref><sp/>**<ref refid="struct_a_v_option_ranges_1a6e081daa7e707607e63165909b0995ce" kindref="member">range</ref>;</highlight></codeline>
<codeline lineno="326" refid="struct_a_v_option_ranges_1a4cc8d5b5afbb07ae49357a7e0d6a2517" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_a_v_option_ranges_1a4cc8d5b5afbb07ae49357a7e0d6a2517" kindref="member">nb_ranges</ref>;</highlight></codeline>
<codeline lineno="327"><highlight class="normal">}<sp/><ref refid="group__avoptions_1gabebd014aa2f58f03966597e280661e17" kindref="member">AVOptionRanges</ref>;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>FF_API_FIND_OPT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><ref refid="attributes_8h_1aa6d076561d3a9eea4729ee632652de02" kindref="member">attribute_deprecated</ref></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_v_option" kindref="compound">AVOption</ref><sp/>*<ref refid="group__avoptions_1gaa24cb225a282495b9f44377faac5b73f" kindref="member">av_find_opt</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="struct_a_v_option_1a248d65a7cab7d7bd3a4eb51212ab0e49" kindref="member">unit</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structmask" kindref="compound">mask</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_a_v_option_1ae6b670af4b2c7819c35437cab61c2745" kindref="member">flags</ref>);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>FF_API_OLD_AVOPTIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><ref refid="attributes_8h_1aa6d076561d3a9eea4729ee632652de02" kindref="member">attribute_deprecated</ref></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__avoptions_1gaef3d3cd17236e8a38d95c8a13031ba80" kindref="member">av_set_string3</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*val,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>alloc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_v_option" kindref="compound">AVOption</ref><sp/>**o_out);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><ref refid="attributes_8h_1aa6d076561d3a9eea4729ee632652de02" kindref="member">attribute_deprecated</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_v_option" kindref="compound">AVOption</ref><sp/>*<ref refid="group__avoptions_1ga931434cfd1e6b54bcd3152c0c417b306" kindref="member">av_set_double</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><ref refid="attributes_8h_1aa6d076561d3a9eea4729ee632652de02" kindref="member">attribute_deprecated</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_v_option" kindref="compound">AVOption</ref><sp/>*<ref refid="group__avoptions_1gacbcdd7534efded7e6aa546916714aaad" kindref="member">av_set_q</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>,<sp/><ref refid="struct_a_v_rational" kindref="compound">AVRational</ref><sp/>n);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><ref refid="attributes_8h_1aa6d076561d3a9eea4729ee632652de02" kindref="member">attribute_deprecated</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_v_option" kindref="compound">AVOption</ref><sp/>*<ref refid="group__avoptions_1gae617457ddf4f7ffb9daf1fd0d836bc02" kindref="member">av_set_int</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>,<sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref><sp/>n);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="group__avoptions_1ga13669ddc74946274fe9ed59dc4a4ad96" kindref="member">av_get_double</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_v_option" kindref="compound">AVOption</ref><sp/>**o_out);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><ref refid="struct_a_v_rational" kindref="compound">AVRational</ref><sp/><ref refid="group__avoptions_1gaf37a7fe6cc3a390e7c7f03dfb66d78c8" kindref="member">av_get_q</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_v_option" kindref="compound">AVOption</ref><sp/>**o_out);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref><sp/><ref refid="group__avoptions_1ga31e4f77ef6add323ff0f54bf7e4a0e36" kindref="member">av_get_int</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_v_option" kindref="compound">AVOption</ref><sp/>**o_out);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><ref refid="attributes_8h_1aa6d076561d3a9eea4729ee632652de02" kindref="member">attribute_deprecated</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="group__avoptions_1gae8bbeaee2ccbc463f05ac5b6cf38d4d1" kindref="member">av_get_string</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_v_option" kindref="compound">AVOption</ref><sp/>**o_out,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="xlglob_8c_1a6d3f7f126151ca554ba001d63c9721f9" kindref="member">buf</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>buf_len);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><ref refid="attributes_8h_1aa6d076561d3a9eea4729ee632652de02" kindref="member">attribute_deprecated</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_v_option" kindref="compound">AVOption</ref><sp/>*<ref refid="group__avoptions_1gab7c68cd85b200272fd5f4b68a495d361" kindref="member">av_next_option</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_v_option" kindref="compound">AVOption</ref><sp/>*<ref refid="record_8c_1a6c49eed6a71ecf58a51b1f64f4ec8e55" kindref="member">last</ref>);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__avoptions_1gaf7394e27d34208b24af8bb4b4a11741b" kindref="member">av_opt_show2</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*av_log_obj,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>req_flags,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rej_flags);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__avoptions_1gad4ca968e9058b39b2da630ad0a091bdb" kindref="member">av_opt_set_defaults</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>FF_API_OLD_AVOPTIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><ref refid="attributes_8h_1aa6d076561d3a9eea4729ee632652de02" kindref="member">attribute_deprecated</ref></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__avoptions_1ga6bf3c89a3a5a297733a89d3443094f3e" kindref="member">av_opt_set_defaults2</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structmask" kindref="compound">mask</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_a_v_option_1ae6b670af4b2c7819c35437cab61c2745" kindref="member">flags</ref>);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__avoptions_1gab48669d1326f7d47ef39e5702e34abd2" kindref="member">av_set_options_string</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ctx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="namespacelv2specgen_1a3418d48f73144afbd9db69c0c1aaf6b8" kindref="member">opts</ref>,</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key_val_sep,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pairs_sep);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__avoptions_1gaa936b1aa7caca67b21cd50819c2b9fb1" kindref="member">av_opt_set_from_string</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ctx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="namespacelv2specgen_1a3418d48f73144afbd9db69c0c1aaf6b8" kindref="member">opts</ref>,</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*shorthand,</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key_val_sep,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pairs_sep);</highlight></codeline>
<codeline lineno="466"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__avoptions_1gac14db824af52baf8181406e98d116097" kindref="member">av_opt_free</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__avoptions_1ga1436a3afc8dbc70ed9e70c8287dcc766" kindref="member">av_opt_flag_is_set</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*field_name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*flag_name);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__avoptions_1gaf1a88e8f152d7835f111b1ef8813fb2e" kindref="member">av_opt_set_dict</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="group__lavu__dict_1ga1d7cc0833bee918994a600556410315f" kindref="member">AVDictionary</ref><sp/>**<ref refid="namespacewaflib_1_1_options_1a59b9c00933a268d11c1c960cd109e113" kindref="member">options</ref>);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__avoptions_1ga1e459af4e23415b8eb9b05aee81c933c" kindref="member">av_opt_get_key_value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**ropts,</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key_val_sep,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pairs_sep,</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="struct_a_v_option_1ae6b670af4b2c7819c35437cab61c2745" kindref="member">flags</ref>,</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**rkey,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**rval);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="524" refid="group__avoptions_1gga0411cd49bb5b71852cecd93bcbf0ca2daa836a939d74606db85ce1f09470d1605" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__avoptions_1gga0411cd49bb5b71852cecd93bcbf0ca2daa836a939d74606db85ce1f09470d1605" kindref="member">AV_OPT_FLAG_IMPLICIT_KEY</ref><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="525"><highlight class="normal">};</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__opt__eval__funcs_1gae245940b870e13b759354d570decf3dc" kindref="member">av_opt_eval_flags</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_v_option" kindref="compound">AVOption</ref><sp/>*<ref refid="namespacesmartmsgmerge_1aba35baca6a2a8d4f665ba30724f4739a" kindref="member">o</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*val,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*flags_out);</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__opt__eval__funcs_1ga8bcee89d4a51400092e2d653c842bfa8" kindref="member">av_opt_eval_int</ref><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_v_option" kindref="compound">AVOption</ref><sp/>*<ref refid="namespacesmartmsgmerge_1aba35baca6a2a8d4f665ba30724f4739a" kindref="member">o</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*val,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*int_out);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__opt__eval__funcs_1gae2285d602e2079f0df141826fc00c666" kindref="member">av_opt_eval_int64</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_v_option" kindref="compound">AVOption</ref><sp/>*<ref refid="namespacesmartmsgmerge_1aba35baca6a2a8d4f665ba30724f4739a" kindref="member">o</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*val,<sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref><sp/><sp/><sp/><sp/>*int64_out);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__opt__eval__funcs_1ga3c06cf2a2e7efc60d97adbeb7bbb6b44" kindref="member">av_opt_eval_float</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_v_option" kindref="compound">AVOption</ref><sp/>*<ref refid="namespacesmartmsgmerge_1aba35baca6a2a8d4f665ba30724f4739a" kindref="member">o</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*val,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*float_out);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__opt__eval__funcs_1gac65f3b9753c48616e8dd4dea0c47f9e6" kindref="member">av_opt_eval_double</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_v_option" kindref="compound">AVOption</ref><sp/>*<ref refid="namespacesmartmsgmerge_1aba35baca6a2a8d4f665ba30724f4739a" kindref="member">o</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*val,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>*double_out);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__opt__eval__funcs_1gabd95639131aac582a2f7c4bfc5adb4b0" kindref="member">av_opt_eval_q</ref><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_v_option" kindref="compound">AVOption</ref><sp/>*<ref refid="namespacesmartmsgmerge_1aba35baca6a2a8d4f665ba30724f4739a" kindref="member">o</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*val,<sp/><ref refid="struct_a_v_rational" kindref="compound">AVRational</ref><sp/>*q_out);</highlight></codeline>
<codeline lineno="551" refid="group__avoptions_1ga25801ba4fc9b5313eb33ec84e082dd72" refkind="member"><highlight class="preprocessor">#define<sp/>AV_OPT_SEARCH_CHILDREN<sp/><sp/><sp/>0x0001<sp/></highlight></codeline>
<codeline lineno="559"><highlight class="preprocessor">#define<sp/>AV_OPT_SEARCH_FAKE_OBJ<sp/><sp/><sp/>0x0002</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560" refid="group__avoptions_1gaa764998552a6f6f66a47ecd52b345caa" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_v_option" kindref="compound">AVOption</ref><sp/>*<ref refid="group__avoptions_1gae31ae7fb20113b00108d0ecf53f25664" kindref="member">av_opt_find</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="struct_a_v_option_1a248d65a7cab7d7bd3a4eb51212ab0e49" kindref="member">unit</ref>,</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>opt_flags,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>search_flags);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_v_option" kindref="compound">AVOption</ref><sp/>*<ref refid="group__avoptions_1ga3e121fd0b44b34e31756f4fe848d29a7" kindref="member">av_opt_find2</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="struct_a_v_option_1a248d65a7cab7d7bd3a4eb51212ab0e49" kindref="member">unit</ref>,</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>opt_flags,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>search_flags,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**target_obj);</highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_v_option" kindref="compound">AVOption</ref><sp/>*<ref refid="group__avoptions_1ga78edbb7da1fdc8626d8a52f8ab7e7a0c" kindref="member">av_opt_next</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_v_option" kindref="compound">AVOption</ref><sp/>*prev);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="group__avoptions_1gaacce30022d2e99c7b9309d3ad3345f69" kindref="member">av_opt_child_next</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*prev);</highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_v_class" kindref="compound">AVClass</ref><sp/>*<ref refid="group__avoptions_1gadee1f425013a0f861a40a72d80f189b1" kindref="member">av_opt_child_class_next</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_v_class" kindref="compound">AVClass</ref><sp/>*parent,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_v_class" kindref="compound">AVClass</ref><sp/>*prev);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__opt__set__funcs_1ga5fd4b92bdf4f392a2847f711676a7537" kindref="member">av_opt_set</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*val,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>search_flags);</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__opt__set__funcs_1ga3adf7185c21cc080890a5ec02c2e56b2" kindref="member">av_opt_set_int</ref><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>,<sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref><sp/><sp/><sp/><sp/><sp/>val,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>search_flags);</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__opt__set__funcs_1ga11f22424bb01fd58f6b34f220a0fff6a" kindref="member">av_opt_set_double</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>val,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>search_flags);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__opt__set__funcs_1ga4f4f0b06e931c638ee8b4074e3638cef" kindref="member">av_opt_set_q</ref><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>,<sp/><ref refid="struct_a_v_rational" kindref="compound">AVRational</ref><sp/><sp/>val,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>search_flags);</highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__opt__set__funcs_1ga6c32155fd8a96bed2f8cf5ebc030dadf" kindref="member">av_opt_set_bin</ref><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/>*val,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>search_flags);</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__opt__set__funcs_1ga29c5723116dcc9be891ee2ca61f2df5e" kindref="member">av_opt_set_image_size</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>search_flags);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__opt__set__funcs_1gae8992c7875fd69a0c0e8c010098d402d" kindref="member">av_opt_set_pixel_fmt</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>,<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="pixfmt_8h_1a9a8e335cf3be472042bc9f0cf80cd4c5" kindref="member">AVPixelFormat</ref><sp/>fmt,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>search_flags);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__opt__set__funcs_1gad446f7a7b92442e464d43e400e661040" kindref="member">av_opt_set_sample_fmt</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>,<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="samplefmt_8h_1af9a51ca15301871723577c730b5865c5" kindref="member">AVSampleFormat</ref><sp/>fmt,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>search_flags);</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__opt__set__funcs_1gac4a81110dd4f5c717ec6ccf0a9e94b9f" kindref="member">av_opt_set_video_rate</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>,<sp/><ref refid="struct_a_v_rational" kindref="compound">AVRational</ref><sp/>val,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>search_flags);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__opt__set__funcs_1gaf25f11e11068f2c41197ba072f25d2a4" kindref="member">av_opt_set_channel_layout</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>,<sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref><sp/>ch_layout,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>search_flags);</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="preprocessor">#define<sp/>av_opt_set_int_list(obj,<sp/>name,<sp/>val,<sp/>term,<sp/>flags)<sp/>\</highlight></codeline>
<codeline lineno="685" refid="group__opt__set__funcs_1gac06fc2b2e32f67f067ed7aaec163447f" refkind="member"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(av_int_list_length(val,<sp/>term)<sp/>&gt;<sp/>INT_MAX<sp/>/<sp/>sizeof(*(val))<sp/>?<sp/>\</highlight></codeline>
<codeline lineno="686"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>AVERROR(EINVAL)<sp/>:<sp/>\</highlight></codeline>
<codeline lineno="687"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>av_opt_set_bin(obj,<sp/>name,<sp/>(const<sp/>uint8_t<sp/>*)(val),<sp/>\</highlight></codeline>
<codeline lineno="688"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>av_int_list_length(val,<sp/>term)<sp/>*<sp/>sizeof(*(val)),<sp/>flags))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__opt__get__funcs_1gaf31144e60f9ce89dbe8cbea57a0b232c" kindref="member">av_opt_get</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>search_flags,<sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/><sp/><sp/>**out_val);</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__opt__get__funcs_1gaab5b9c0969efe56420536a5d190e59bd" kindref="member">av_opt_get_int</ref><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>search_flags,<sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref><sp/><sp/><sp/><sp/>*out_val);</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__opt__get__funcs_1ga4ee50245cd18a65ec1cd27bc8e0cab83" kindref="member">av_opt_get_double</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>search_flags,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>*out_val);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__opt__get__funcs_1gabc553a1b95468f935eedfa9db86e2a15" kindref="member">av_opt_get_q</ref><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>search_flags,<sp/><ref refid="struct_a_v_rational" kindref="compound">AVRational</ref><sp/>*out_val);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__opt__get__funcs_1ga96d9c726c3feff308e7fe447633c9720" kindref="member">av_opt_get_image_size</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>search_flags,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*w_out,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*h_out);</highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__opt__get__funcs_1ga41fdd93f0483e96548168f9cfaf5bf6b" kindref="member">av_opt_get_pixel_fmt</ref><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>search_flags,<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="pixfmt_8h_1a9a8e335cf3be472042bc9f0cf80cd4c5" kindref="member">AVPixelFormat</ref><sp/>*out_fmt);</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__opt__get__funcs_1gade39dd8ce34b193f7012022072e36642" kindref="member">av_opt_get_sample_fmt</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>search_flags,<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="samplefmt_8h_1af9a51ca15301871723577c730b5865c5" kindref="member">AVSampleFormat</ref><sp/>*out_fmt);</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__opt__get__funcs_1gaf565dc77c53e8e56d08ee1a3c642f95f" kindref="member">av_opt_get_video_rate</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>search_flags,<sp/><ref refid="struct_a_v_rational" kindref="compound">AVRational</ref><sp/>*out_val);</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__opt__get__funcs_1ga35864ccde3246be3f56366fd5145fc12" kindref="member">av_opt_get_channel_layout</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>search_flags,<sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref><sp/>*ch_layout);</highlight></codeline>
<codeline lineno="728"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="group__avoptions_1gab1d208d09e487741a28016919225bef6" kindref="member">av_opt_ptr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_v_class" kindref="compound">AVClass</ref><sp/>*avclass,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__avoptions_1ga880756f24644ff66c806ed2d9ab3d790" kindref="member">av_opt_freep_ranges</ref>(<ref refid="struct_a_v_option_ranges" kindref="compound">AVOptionRanges</ref><sp/>**ranges);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__avoptions_1ga9751db4da3e0facd522f5b345f4001ef" kindref="member">av_opt_query_ranges</ref>(<ref refid="struct_a_v_option_ranges" kindref="compound">AVOptionRanges</ref><sp/>**,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_a_v_option_1ae6b670af4b2c7819c35437cab61c2745" kindref="member">flags</ref>);</highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__avoptions_1ga4e50bee09b6a374cc54237314892c001" kindref="member">av_opt_query_ranges_default</ref>(<ref refid="struct_a_v_option_ranges" kindref="compound">AVOptionRanges</ref><sp/>**,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*obj,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*key,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_a_v_option_1ae6b670af4b2c7819c35437cab61c2745" kindref="member">flags</ref>);</highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>AVUTIL_OPT_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/opt.h"/>
  </compounddef>
</doxygen>
