<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="imgutils_8h" kind="file" language="C++">
    <compoundname>imgutils.h</compoundname>
    <includes refid="avutil_8h" local="yes">avutil.h</includes>
    <includes refid="pixdesc_8h" local="yes">pixdesc.h</includes>
    <incdepgraph>
      <node id="3962">
        <label>mathematics.h</label>
        <link refid="mathematics_8h"/>
        <childnode refid="3951" relation="include">
        </childnode>
        <childnode refid="3950" relation="include">
        </childnode>
        <childnode refid="3955" relation="include">
        </childnode>
        <childnode refid="3963" relation="include">
        </childnode>
        <childnode refid="3964" relation="include">
        </childnode>
      </node>
      <node id="3963">
        <label>rational.h</label>
        <link refid="rational_8h"/>
        <childnode refid="3951" relation="include">
        </childnode>
        <childnode refid="3949" relation="include">
        </childnode>
        <childnode refid="3955" relation="include">
        </childnode>
      </node>
      <node id="3966">
        <label>stdarg.h</label>
      </node>
      <node id="3955">
        <label>attributes.h</label>
        <link refid="attributes_8h"/>
      </node>
      <node id="3945">
        <label>avutil.h</label>
        <link refid="avutil_8h"/>
        <childnode refid="3946" relation="include">
        </childnode>
        <childnode refid="3960" relation="include">
        </childnode>
        <childnode refid="3956" relation="include">
        </childnode>
        <childnode refid="3957" relation="include">
        </childnode>
        <childnode refid="3962" relation="include">
        </childnode>
        <childnode refid="3963" relation="include">
        </childnode>
        <childnode refid="3965" relation="include">
        </childnode>
        <childnode refid="3967" relation="include">
        </childnode>
      </node>
      <node id="3951">
        <label>stdint.h</label>
      </node>
      <node id="3958">
        <label>libavutil/avconfig.h</label>
        <link refid="avconfig_8h"/>
      </node>
      <node id="3953">
        <label>stdlib.h</label>
      </node>
      <node id="3969">
        <label>pixdesc.h</label>
        <link refid="pixdesc_8h"/>
        <childnode refid="3948" relation="include">
        </childnode>
        <childnode refid="3955" relation="include">
        </childnode>
        <childnode refid="3967" relation="include">
        </childnode>
      </node>
      <node id="3947">
        <label>errno.h</label>
      </node>
      <node id="3956">
        <label>version.h</label>
        <link refid="ffmpeg_2libavutil_2version_8h"/>
        <childnode refid="3957" relation="include">
        </childnode>
      </node>
      <node id="3961">
        <label>stddef.h</label>
      </node>
      <node id="3949">
        <label>limits.h</label>
      </node>
      <node id="3960">
        <label>error.h</label>
        <link refid="error_8h"/>
        <childnode refid="3947" relation="include">
        </childnode>
        <childnode refid="3961" relation="include">
        </childnode>
      </node>
      <node id="3965">
        <label>log.h</label>
        <link refid="ffmpeg_2libavutil_2log_8h"/>
        <childnode refid="3966" relation="include">
        </childnode>
        <childnode refid="3945" relation="include">
        </childnode>
        <childnode refid="3955" relation="include">
        </childnode>
      </node>
      <node id="3954">
        <label>string.h</label>
      </node>
      <node id="3959">
        <label>mem.h</label>
        <link refid="ffmpeg_2libavutil_2mem_8h"/>
        <childnode refid="3949" relation="include">
        </childnode>
        <childnode refid="3951" relation="include">
        </childnode>
        <childnode refid="3955" relation="include">
        </childnode>
        <childnode refid="3960" relation="include">
        </childnode>
        <childnode refid="3945" relation="include">
        </childnode>
      </node>
      <node id="3964">
        <label>intfloat.h</label>
        <link refid="intfloat_8h"/>
        <childnode refid="3951" relation="include">
        </childnode>
        <childnode refid="3955" relation="include">
        </childnode>
      </node>
      <node id="3968">
        <label>old_pix_fmts.h</label>
        <link refid="old__pix__fmts_8h"/>
      </node>
      <node id="3950">
        <label>math.h</label>
      </node>
      <node id="3957">
        <label>macros.h</label>
        <link refid="ffmpeg_2libavutil_2macros_8h"/>
      </node>
      <node id="3946">
        <label>common.h</label>
        <link refid="ffmpeg_2libavutil_2common_8h"/>
        <childnode refid="3947" relation="include">
        </childnode>
        <childnode refid="3948" relation="include">
        </childnode>
        <childnode refid="3949" relation="include">
        </childnode>
        <childnode refid="3950" relation="include">
        </childnode>
        <childnode refid="3951" relation="include">
        </childnode>
        <childnode refid="3952" relation="include">
        </childnode>
        <childnode refid="3953" relation="include">
        </childnode>
        <childnode refid="3954" relation="include">
        </childnode>
        <childnode refid="3955" relation="include">
        </childnode>
        <childnode refid="3956" relation="include">
        </childnode>
        <childnode refid="3958" relation="include">
        </childnode>
        <childnode refid="3946" relation="include">
        </childnode>
        <childnode refid="3959" relation="include">
        </childnode>
      </node>
      <node id="3944">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/imgutils.h</label>
        <link refid="imgutils.h"/>
        <childnode refid="3945" relation="include">
        </childnode>
        <childnode refid="3969" relation="include">
        </childnode>
      </node>
      <node id="3952">
        <label>stdio.h</label>
      </node>
      <node id="3967">
        <label>pixfmt.h</label>
        <link refid="pixfmt_8h"/>
        <childnode refid="3958" relation="include">
        </childnode>
        <childnode refid="3956" relation="include">
        </childnode>
        <childnode refid="3968" relation="include">
        </childnode>
      </node>
      <node id="3948">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__lavu__picture_1gad3af84de3a86a9ebb71715e3c0ebf627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void av_image_fill_max_pixsteps</definition>
        <argsstring>(int max_pixsteps[4], int max_pixstep_comps[4], const AVPixFmtDescriptor *pixdesc)</argsstring>
        <name>av_image_fill_max_pixsteps</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>max_pixsteps</declname>
          <array>[4]</array>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>max_pixstep_comps</declname>
          <array>[4]</array>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_a_v_pix_fmt_descriptor" kindref="compound">AVPixFmtDescriptor</ref> *</type>
          <declname>pixdesc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compute the max pixel step for each plane of an image with a format described by pixdesc.</para><para>The pixel step is the distance in bytes between the first byte of the group of bytes which describe a pixel component and the first byte of the successive group in the same plane for the same component.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>max_pixsteps</parametername>
</parameternamelist>
<parameterdescription>
<para>an array which is filled with the max pixel step for each plane. Since a plane may contain different pixel components, the computed max_pixsteps[plane] is relative to the component in the plane with the max pixel step. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max_pixstep_comps</parametername>
</parameternamelist>
<parameterdescription>
<para>an array which is filled with the component for each plane which has the max pixel step. May be NULL. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/imgutils.h" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavu__picture_1ga8eddd074d5eb6a235591013675ac1055" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_image_get_linesize</definition>
        <argsstring>(enum AVPixelFormat pix_fmt, int width, int plane)</argsstring>
        <name>av_image_get_linesize</name>
        <param>
          <type>enum <ref refid="pixfmt_8h_1a9a8e335cf3be472042bc9f0cf80cd4c5" kindref="member">AVPixelFormat</ref></type>
          <declname>pix_fmt</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>width</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>plane</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compute the size of an image line with format pix_fmt and width width for the plane plane.</para><para><simplesect kind="return"><para>the computed size in bytes </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/imgutils.h" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavu__picture_1gaccd7fda79188060dadb28408223946ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_image_fill_linesizes</definition>
        <argsstring>(int linesizes[4], enum AVPixelFormat pix_fmt, int width)</argsstring>
        <name>av_image_fill_linesizes</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>linesizes</declname>
          <array>[4]</array>
        </param>
        <param>
          <type>enum <ref refid="pixfmt_8h_1a9a8e335cf3be472042bc9f0cf80cd4c5" kindref="member">AVPixelFormat</ref></type>
          <declname>pix_fmt</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>width</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Fill plane linesizes for an image with pixel format pix_fmt and width width.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>linesizes</parametername>
</parameternamelist>
<parameterdescription>
<para>array to be filled with the linesize for each plane </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>&gt;= 0 in case of success, a negative error code otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/imgutils.h" line="67" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavu__picture_1ga4513d36f527c1476e89845631d975542" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_image_fill_pointers</definition>
        <argsstring>(uint8_t *data[4], enum AVPixelFormat pix_fmt, int height, uint8_t *ptr, const int linesizes[4])</argsstring>
        <name>av_image_fill_pointers</name>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> *</type>
          <declname>data</declname>
          <array>[4]</array>
        </param>
        <param>
          <type>enum <ref refid="pixfmt_8h_1a9a8e335cf3be472042bc9f0cf80cd4c5" kindref="member">AVPixelFormat</ref></type>
          <declname>pix_fmt</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>height</declname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>linesizes</declname>
          <array>[4]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Fill plane data pointers for an image with pixel format pix_fmt and height height.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>pointers array to be filled with the pointer for each image plane </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ptr</parametername>
</parameternamelist>
<parameterdescription>
<para>the pointer to a buffer which will contain the image </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>linesizes</parametername>
</parameternamelist>
<parameterdescription>
<para>the array containing the linesize for each plane, should be filled by <ref refid="group__lavu__picture_1gaccd7fda79188060dadb28408223946ef" kindref="member">av_image_fill_linesizes()</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the size in bytes required for the image buffer, a negative error code in case of failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/imgutils.h" line="80" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavu__picture_1ga841e0a89a642e24141af1918a2c10448" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_image_alloc</definition>
        <argsstring>(uint8_t *pointers[4], int linesizes[4], int w, int h, enum AVPixelFormat pix_fmt, int align)</argsstring>
        <name>av_image_alloc</name>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> *</type>
          <declname>pointers</declname>
          <array>[4]</array>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>linesizes</declname>
          <array>[4]</array>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>w</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>h</declname>
        </param>
        <param>
          <type>enum <ref refid="pixfmt_8h_1a9a8e335cf3be472042bc9f0cf80cd4c5" kindref="member">AVPixelFormat</ref></type>
          <declname>pix_fmt</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>align</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allocate an image with size w and h and pixel format pix_fmt, and fill pointers and linesizes accordingly. The allocated image buffer has to be freed by using av_freep(&amp;pointers[0]).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>align</parametername>
</parameternamelist>
<parameterdescription>
<para>the value to use for buffer size alignment </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the size in bytes required for the image buffer, a negative error code in case of failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/imgutils.h" line="93" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavu__picture_1ga735cb949320867e9c2fffcb327d0ece2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void av_image_copy_plane</definition>
        <argsstring>(uint8_t *dst, int dst_linesize, const uint8_t *src, int src_linesize, int bytewidth, int height)</argsstring>
        <name>av_image_copy_plane</name>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>dst_linesize</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>src_linesize</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>bytewidth</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy image plane from src to dst. That is, copy &quot;height&quot; number of lines of &quot;bytewidth&quot; bytes each. The first byte of each successive line is separated by *_linesize bytes.</para><para>bytewidth must be contained by both absolute values of dst_linesize and src_linesize, otherwise the function behavior is undefined.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dst_linesize</parametername>
</parameternamelist>
<parameterdescription>
<para>linesize for the image plane in dst </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src_linesize</parametername>
</parameternamelist>
<parameterdescription>
<para>linesize for the image plane in src </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/imgutils.h" line="108" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavu__picture_1ga6b5a267e202daadf81cbde6584055d1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void av_image_copy</definition>
        <argsstring>(uint8_t *dst_data[4], int dst_linesizes[4], const uint8_t *src_data[4], const int src_linesizes[4], enum AVPixelFormat pix_fmt, int width, int height)</argsstring>
        <name>av_image_copy</name>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> *</type>
          <declname>dst_data</declname>
          <array>[4]</array>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>dst_linesizes</declname>
          <array>[4]</array>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> *</type>
          <declname>src_data</declname>
          <array>[4]</array>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>src_linesizes</declname>
          <array>[4]</array>
        </param>
        <param>
          <type>enum <ref refid="pixfmt_8h_1a9a8e335cf3be472042bc9f0cf80cd4c5" kindref="member">AVPixelFormat</ref></type>
          <declname>pix_fmt</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>width</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy image in src_data to dst_data.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dst_linesizes</parametername>
</parameternamelist>
<parameterdescription>
<para>linesizes for the image in dst_data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src_linesizes</parametername>
</parameternamelist>
<parameterdescription>
<para>linesizes for the image in src_data </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/imgutils.h" line="118" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavu__picture_1ga5b6ead346a70342ae8a303c16d2b3629" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_image_fill_arrays</definition>
        <argsstring>(uint8_t *dst_data[4], int dst_linesize[4], const uint8_t *src, enum AVPixelFormat pix_fmt, int width, int height, int align)</argsstring>
        <name>av_image_fill_arrays</name>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> *</type>
          <declname>dst_data</declname>
          <array>[4]</array>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>dst_linesize</declname>
          <array>[4]</array>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>enum <ref refid="pixfmt_8h_1a9a8e335cf3be472042bc9f0cf80cd4c5" kindref="member">AVPixelFormat</ref></type>
          <declname>pix_fmt</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>width</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>height</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>align</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Setup the data pointers and linesizes based on the specified image parameters and the provided array.</para><para>The fields of the given image are filled in by using the src address which points to the image data buffer. Depending on the specified pixel format, one or multiple image data pointers and line sizes will be set. If a planar format is specified, several pointers will be set pointing to the different picture planes and the line sizes of the different planes will be stored in the lines_sizes array. Call with src == NULL to get the required size for the src buffer.</para><para>To allocate the buffer and fill in the dst_data and dst_linesize in one call, use <ref refid="group__lavu__picture_1ga841e0a89a642e24141af1918a2c10448" kindref="member">av_image_alloc()</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dst_data</parametername>
</parameternamelist>
<parameterdescription>
<para>data pointers to be filled in </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dst_linesizes</parametername>
</parameternamelist>
<parameterdescription>
<para>linesizes for the image in dst_data to be filled in </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>buffer which will contain or contains the actual image data, can be NULL </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pix_fmt</parametername>
</parameternamelist>
<parameterdescription>
<para>the pixel format of the image </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>the width of the image in pixels </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>the height of the image in pixels </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>align</parametername>
</parameternamelist>
<parameterdescription>
<para>the value used in src for linesize alignment </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the size in bytes required for src, a negative error code in case of failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/imgutils.h" line="148" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavu__picture_1ga24a67963c3ae0054a2a4bab35930e694" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_image_get_buffer_size</definition>
        <argsstring>(enum AVPixelFormat pix_fmt, int width, int height, int align)</argsstring>
        <name>av_image_get_buffer_size</name>
        <param>
          <type>enum <ref refid="pixfmt_8h_1a9a8e335cf3be472042bc9f0cf80cd4c5" kindref="member">AVPixelFormat</ref></type>
          <declname>pix_fmt</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>width</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>height</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>align</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the size in bytes of the amount of data required to store an image with the given parameters.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">align</parametername>
</parameternamelist>
<parameterdescription>
<para>the assumed linesize alignment </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/imgutils.h" line="158" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavu__picture_1ga6f8576f1ef0c2d9a9f7c5ac7f9a28c52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_image_copy_to_buffer</definition>
        <argsstring>(uint8_t *dst, int dst_size, const uint8_t *const src_data[4], const int src_linesize[4], enum AVPixelFormat pix_fmt, int width, int height, int align)</argsstring>
        <name>av_image_copy_to_buffer</name>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> *</type>
          <declname>dst</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>dst_size</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> *<ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref></type>
          <declname>src_data</declname>
          <array>[4]</array>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>src_linesize</declname>
          <array>[4]</array>
        </param>
        <param>
          <type>enum <ref refid="pixfmt_8h_1a9a8e335cf3be472042bc9f0cf80cd4c5" kindref="member">AVPixelFormat</ref></type>
          <declname>pix_fmt</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>width</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>height</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>align</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy image data from an image into a buffer.</para><para><ref refid="group__lavu__picture_1ga24a67963c3ae0054a2a4bab35930e694" kindref="member">av_image_get_buffer_size()</ref> can be used to compute the required size for the buffer to fill.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dst</parametername>
</parameternamelist>
<parameterdescription>
<para>a buffer into which picture data will be copied </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dst_size</parametername>
</parameternamelist>
<parameterdescription>
<para>the size in bytes of dst </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src_data</parametername>
</parameternamelist>
<parameterdescription>
<para>pointers containing the source image data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src_linesizes</parametername>
</parameternamelist>
<parameterdescription>
<para>linesizes for the image in src_data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pix_fmt</parametername>
</parameternamelist>
<parameterdescription>
<para>the pixel format of the source image </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>the width of the source image in pixels </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>the height of the source image in pixels </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>align</parametername>
</parameternamelist>
<parameterdescription>
<para>the assumed linesize alignment for dst </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the number of bytes written to dst, or a negative value (error code) on error </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/imgutils.h" line="177" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavu__picture_1ga3a867b6180ddad1e0c382ef0c5940b8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_image_check_size</definition>
        <argsstring>(unsigned int w, unsigned int h, int log_offset, void *log_ctx)</argsstring>
        <name>av_image_check_size</name>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>w</declname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>h</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>log_offset</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>log_ctx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if the given dimension of an image is valid, meaning that all bytes of the image can be addressed with a signed int.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>w</parametername>
</parameternamelist>
<parameterdescription>
<para>the width of the picture </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>h</parametername>
</parameternamelist>
<parameterdescription>
<para>the height of the picture </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>log_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>the offset to sum to the log level for logging with log_ctx </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>log_ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>the parent logging context, it may be NULL </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>&gt;= 0 if valid, a negative error code otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/imgutils.h" line="191" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__lavu__picture_1ga70c8ff744ad06fe3b6f0aaf5ec8fa14a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int avpriv_set_systematic_pal2</definition>
        <argsstring>(uint32_t pal[256], enum AVPixelFormat pix_fmt)</argsstring>
        <name>avpriv_set_systematic_pal2</name>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref></type>
          <declname>pal</declname>
          <array>[256]</array>
        </param>
        <param>
          <type>enum <ref refid="pixfmt_8h_1a9a8e335cf3be472042bc9f0cf80cd4c5" kindref="member">AVPixelFormat</ref></type>
          <declname>pix_fmt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/imgutils.h" line="193" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>misc image utilities </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>FFmpeg.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>FFmpeg<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>License<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>version<sp/>2.1<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>FFmpeg<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>License<sp/>along<sp/>with<sp/>FFmpeg;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>Street,<sp/>Fifth<sp/>Floor,<sp/>Boston,<sp/>MA<sp/>02110-1301<sp/>USA</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>AVUTIL_IMGUTILS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AVUTIL_IMGUTILS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="avutil_8h" kindref="compound">avutil.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pixdesc_8h" kindref="compound">pixdesc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lavu__picture_1gad3af84de3a86a9ebb71715e3c0ebf627" kindref="member">av_image_fill_max_pixsteps</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_pixsteps[4],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_pixstep_comps[4],</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_v_pix_fmt_descriptor" kindref="compound">AVPixFmtDescriptor</ref><sp/>*pixdesc);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lavu__picture_1ga8eddd074d5eb6a235591013675ac1055" kindref="member">av_image_get_linesize</ref>(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="pixfmt_8h_1a9a8e335cf3be472042bc9f0cf80cd4c5" kindref="member">AVPixelFormat</ref><sp/>pix_fmt,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>plane);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lavu__picture_1gaccd7fda79188060dadb28408223946ef" kindref="member">av_image_fill_linesizes</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>linesizes[4],<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="pixfmt_8h_1a9a8e335cf3be472042bc9f0cf80cd4c5" kindref="member">AVPixelFormat</ref><sp/>pix_fmt,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lavu__picture_1ga4513d36f527c1476e89845631d975542" kindref="member">av_image_fill_pointers</ref>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>[4],<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="pixfmt_8h_1a9a8e335cf3be472042bc9f0cf80cd4c5" kindref="member">AVPixelFormat</ref><sp/>pix_fmt,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/>*ptr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>linesizes[4]);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lavu__picture_1ga841e0a89a642e24141af1918a2c10448" kindref="member">av_image_alloc</ref>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/>*pointers[4],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>linesizes[4],</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h,<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="pixfmt_8h_1a9a8e335cf3be472042bc9f0cf80cd4c5" kindref="member">AVPixelFormat</ref><sp/>pix_fmt,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>align);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lavu__picture_1ga735cb949320867e9c2fffcb327d0ece2" kindref="member">av_image_copy_plane</ref>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dst,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dst_linesize,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/>*src,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>src_linesize,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bytewidth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__lavu__picture_1ga6b5a267e202daadf81cbde6584055d1e" kindref="member">av_image_copy</ref>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/>*dst_data[4],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dst_linesizes[4],</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/>*src_data[4],<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>src_linesizes[4],</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="pixfmt_8h_1a9a8e335cf3be472042bc9f0cf80cd4c5" kindref="member">AVPixelFormat</ref><sp/>pix_fmt,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lavu__picture_1ga5b6ead346a70342ae8a303c16d2b3629" kindref="member">av_image_fill_arrays</ref>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/>*dst_data[4],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dst_linesize[4],</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/>*src,</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="pixfmt_8h_1a9a8e335cf3be472042bc9f0cf80cd4c5" kindref="member">AVPixelFormat</ref><sp/>pix_fmt,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>align);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lavu__picture_1ga24a67963c3ae0054a2a4bab35930e694" kindref="member">av_image_get_buffer_size</ref>(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="pixfmt_8h_1a9a8e335cf3be472042bc9f0cf80cd4c5" kindref="member">AVPixelFormat</ref><sp/>pix_fmt,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>align);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lavu__picture_1ga6f8576f1ef0c2d9a9f7c5ac7f9a28c52" kindref="member">av_image_copy_to_buffer</ref>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/>*dst,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dst_size,</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>src_data[4],<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>src_linesize[4],</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="pixfmt_8h_1a9a8e335cf3be472042bc9f0cf80cd4c5" kindref="member">AVPixelFormat</ref><sp/>pix_fmt,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>align);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lavu__picture_1ga3a867b6180ddad1e0c382ef0c5940b8e" kindref="member">av_image_check_size</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>log_offset,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*log_ctx);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lavu__picture_1ga70c8ff744ad06fe3b6f0aaf5ec8fa14a" kindref="member">avpriv_set_systematic_pal2</ref>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref><sp/>pal[256],<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="pixfmt_8h_1a9a8e335cf3be472042bc9f0cf80cd4c5" kindref="member">AVPixelFormat</ref><sp/>pix_fmt);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>AVUTIL_IMGUTILS_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/imgutils.h"/>
  </compounddef>
</doxygen>
