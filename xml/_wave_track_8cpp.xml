<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_wave_track_8cpp" kind="file" language="C++">
    <compoundname>WaveTrack.cpp</compoundname>
    <includes refid="_wave_track_8h" local="yes">WaveTrack.h</includes>
    <includes local="no">wx/defs.h</includes>
    <includes local="no">wx/intl.h</includes>
    <includes local="no">wx/debug.h</includes>
    <includes refid="float_8h" local="no">float.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">algorithm</includes>
    <includes refid="_memory_x_8h" local="yes">MemoryX.h</includes>
    <includes refid="float__cast_8h" local="yes">float_cast.h</includes>
    <includes refid="src_2_envelope_8h" local="yes">Envelope.h</includes>
    <includes refid="_sequence_8h" local="yes">Sequence.h</includes>
    <includes refid="_spectrum_8h" local="yes">Spectrum.h</includes>
    <includes refid="_project_8h" local="yes">Project.h</includes>
    <includes refid="_internat_8h" local="yes">Internat.h</includes>
    <includes refid="_audio_i_o_8h" local="yes">AudioIO.h</includes>
    <includes refid="_prefs_8h" local="yes">Prefs.h</includes>
    <includes refid="_o_d_manager_8h" local="yes">ondemand/ODManager.h</includes>
    <includes refid="_time_warper_8h" local="yes">effects/TimeWarper.h</includes>
    <includes refid="_spectrum_prefs_8h" local="yes">prefs/SpectrumPrefs.h</includes>
    <includes refid="_waveform_prefs_8h" local="yes">prefs/WaveformPrefs.h</includes>
    <includes refid="_experimental_8h" local="yes">Experimental.h</includes>
    <incdepgraph>
      <node id="58037">
        <label>wx/dir.h</label>
      </node>
      <node id="58044">
        <label>wx/choice.h</label>
      </node>
      <node id="57994">
        <label>WaveClip.h</label>
        <link refid="_wave_clip_8h"/>
        <childnode refid="57976" relation="include">
        </childnode>
        <childnode refid="57987" relation="include">
        </childnode>
        <childnode refid="57995" relation="include">
        </childnode>
        <childnode refid="58001" relation="include">
        </childnode>
        <childnode refid="57990" relation="include">
        </childnode>
        <childnode refid="57985" relation="include">
        </childnode>
        <childnode refid="58003" relation="include">
        </childnode>
        <childnode refid="57982" relation="include">
        </childnode>
        <childnode refid="57983" relation="include">
        </childnode>
        <childnode refid="58004" relation="include">
        </childnode>
        <childnode refid="58005" relation="include">
        </childnode>
        <childnode refid="57979" relation="include">
        </childnode>
      </node>
      <node id="58080">
        <label>effects/TimeWarper.h</label>
        <link refid="_time_warper_8h"/>
      </node>
      <node id="58082">
        <label>PrefsPanel.h</label>
        <link refid="_prefs_panel_8h"/>
        <childnode refid="58083" relation="include">
        </childnode>
        <childnode refid="58046" relation="include">
        </childnode>
      </node>
      <node id="58027">
        <label>wx/hashmap.h</label>
      </node>
      <node id="58065">
        <label>toolbars/SelectionBarListener.h</label>
        <link refid="_selection_bar_listener_8h"/>
      </node>
      <node id="57998">
        <label>wx/gauge.h</label>
      </node>
      <node id="57993">
        <label>wx/ffile.h</label>
      </node>
      <node id="57981">
        <label>wx/event.h</label>
      </node>
      <node id="58058">
        <label>audacity/ModuleInterface.h</label>
        <link refid="_module_interface_8h"/>
        <childnode refid="57988" relation="include">
        </childnode>
        <childnode refid="58050" relation="include">
        </childnode>
        <childnode refid="58059" relation="include">
        </childnode>
      </node>
      <node id="58077">
        <label>ODTask.h</label>
        <link refid="_o_d_task_8h"/>
        <childnode refid="58001" relation="include">
        </childnode>
        <childnode refid="58078" relation="include">
        </childnode>
        <childnode refid="58024" relation="include">
        </childnode>
        <childnode refid="57979" relation="include">
        </childnode>
        <childnode refid="58079" relation="include">
        </childnode>
      </node>
      <node id="58070">
        <label>wx/dcclient.h</label>
      </node>
      <node id="58036">
        <label>wx/cmdline.h</label>
      </node>
      <node id="58010">
        <label>FLAC/ordinals.h</label>
        <link refid="ordinals_8h"/>
        <childnode refid="58011" relation="include">
        </childnode>
      </node>
      <node id="58072">
        <label>AudioIO.h</label>
        <link refid="_audio_i_o_8h"/>
        <childnode refid="58073" relation="include">
        </childnode>
        <childnode refid="57976" relation="include">
        </childnode>
        <childnode refid="57985" relation="include">
        </childnode>
        <childnode refid="57981" relation="include">
        </childnode>
        <childnode refid="57984" relation="include">
        </childnode>
        <childnode refid="58002" relation="include">
        </childnode>
        <childnode refid="57987" relation="include">
        </childnode>
      </node>
      <node id="58049">
        <label>audacity/EffectInterface.h</label>
        <link refid="_effect_interface_8h"/>
        <childnode refid="57988" relation="include">
        </childnode>
        <childnode refid="58050" relation="include">
        </childnode>
        <childnode refid="58051" relation="include">
        </childnode>
        <childnode refid="58052" relation="include">
        </childnode>
        <childnode refid="57996" relation="include">
        </childnode>
      </node>
      <node id="58022">
        <label>FFT.h</label>
        <link refid="src_2fft_8h"/>
        <childnode refid="57986" relation="include">
        </childnode>
        <childnode refid="58023" relation="include">
        </childnode>
        <childnode refid="57985" relation="include">
        </childnode>
      </node>
      <node id="58086">
        <label>WaveformSettings.h</label>
        <link refid="_waveform_settings_8h"/>
      </node>
      <node id="58019">
        <label>Internat.h</label>
        <link refid="_internat_8h"/>
        <childnode refid="57989" relation="include">
        </childnode>
        <childnode refid="57984" relation="include">
        </childnode>
        <childnode refid="57983" relation="include">
        </childnode>
      </node>
      <node id="57990">
        <label>xml/XMLTagHandler.h</label>
        <link refid="_x_m_l_tag_handler_8h"/>
        <childnode refid="57976" relation="include">
        </childnode>
        <childnode refid="57984" relation="include">
        </childnode>
        <childnode refid="57991" relation="include">
        </childnode>
        <childnode refid="57992" relation="include">
        </childnode>
      </node>
      <node id="58011">
        <label>stdint.h</label>
      </node>
      <node id="58016">
        <label>stdlib.h</label>
      </node>
      <node id="58030">
        <label>TrackPanelListener.h</label>
        <link refid="_track_panel_listener_8h"/>
      </node>
      <node id="58023">
        <label>wx/wxchar.h</label>
      </node>
      <node id="58018">
        <label>wx/pen.h</label>
      </node>
      <node id="58069">
        <label>wx/frame.h</label>
      </node>
      <node id="58001">
        <label>ondemand/ODTaskThread.h</label>
        <link refid="_o_d_task_thread_8h"/>
        <childnode refid="58002" relation="include">
        </childnode>
        <childnode refid="57976" relation="include">
        </childnode>
      </node>
      <node id="58051">
        <label>audacity/ConfigInterface.h</label>
        <link refid="_config_interface_8h"/>
        <childnode refid="57988" relation="include">
        </childnode>
      </node>
      <node id="58000">
        <label>wx/utils.h</label>
      </node>
      <node id="58076">
        <label>ondemand/ODManager.h</label>
        <link refid="_o_d_manager_8h"/>
        <childnode refid="57979" relation="include">
        </childnode>
        <childnode refid="58077" relation="include">
        </childnode>
        <childnode refid="58001" relation="include">
        </childnode>
        <childnode refid="58002" relation="include">
        </childnode>
        <childnode refid="58079" relation="include">
        </childnode>
      </node>
      <node id="57997">
        <label>wx/evtloop.h</label>
      </node>
      <node id="57985">
        <label>Experimental.h</label>
        <link refid="_experimental_8h"/>
        <childnode refid="57986" relation="include">
        </childnode>
      </node>
      <node id="58042">
        <label>wx/timer.h</label>
      </node>
      <node id="57982">
        <label>wx/gdicmn.h</label>
      </node>
      <node id="58028">
        <label>ViewInfo.h</label>
        <link refid="_view_info_8h"/>
        <childnode refid="57979" relation="include">
        </childnode>
        <childnode refid="58029" relation="include">
        </childnode>
      </node>
      <node id="58064">
        <label>../Shuttle.h</label>
        <link refid="_shuttle_8h"/>
      </node>
      <node id="58054">
        <label>wx/fileconf.h</label>
      </node>
      <node id="58056">
        <label>map</label>
      </node>
      <node id="58006">
        <label>WaveTrackLocation.h</label>
        <link refid="_wave_track_location_8h"/>
      </node>
      <node id="58059">
        <label>audacity/PluginInterface.h</label>
        <link refid="_plugin_interface_8h"/>
        <childnode refid="57988" relation="include">
        </childnode>
        <childnode refid="58051" relation="include">
        </childnode>
        <childnode refid="58049" relation="include">
        </childnode>
        <childnode refid="58050" relation="include">
        </childnode>
        <childnode refid="58057" relation="include">
        </childnode>
        <childnode refid="58058" relation="include">
        </childnode>
      </node>
      <node id="58003">
        <label>RealFFTf.h</label>
        <link refid="_real_f_f_tf_8h"/>
        <childnode refid="57985" relation="include">
        </childnode>
      </node>
      <node id="58066">
        <label>toolbars/SpectralSelectionBarListener.h</label>
        <link refid="_spectral_selection_bar_listener_8h"/>
        <childnode refid="57976" relation="include">
        </childnode>
      </node>
      <node id="57999">
        <label>wx/stattext.h</label>
      </node>
      <node id="58041">
        <label>wx/socket.h</label>
      </node>
      <node id="58068">
        <label>wx/generic/dragimgg.h</label>
      </node>
      <node id="58050">
        <label>audacity/IdentInterface.h</label>
        <link refid="_ident_interface_8h"/>
        <childnode refid="57988" relation="include">
        </childnode>
      </node>
      <node id="58004">
        <label>wx/list.h</label>
      </node>
      <node id="58033">
        <label>wx/menu.h</label>
      </node>
      <node id="57986">
        <label>wx/defs.h</label>
      </node>
      <node id="58046">
        <label>wx/window.h</label>
      </node>
      <node id="58007">
        <label>wx/intl.h</label>
      </node>
      <node id="57995">
        <label>widgets/ProgressDialog.h</label>
        <link refid="_progress_dialog_8h"/>
        <childnode refid="57976" relation="include">
        </childnode>
        <childnode refid="57986" relation="include">
        </childnode>
        <childnode refid="57996" relation="include">
        </childnode>
        <childnode refid="57997" relation="include">
        </childnode>
        <childnode refid="57998" relation="include">
        </childnode>
        <childnode refid="57999" relation="include">
        </childnode>
        <childnode refid="58000" relation="include">
        </childnode>
      </node>
      <node id="58062">
        <label>wx/bmpbuttn.h</label>
      </node>
      <node id="58085">
        <label>prefs/WaveformPrefs.h</label>
        <link refid="_waveform_prefs_8h"/>
        <childnode refid="58082" relation="include">
        </childnode>
        <childnode refid="58086" relation="include">
        </childnode>
      </node>
      <node id="57988">
        <label>audacity/Types.h</label>
        <link refid="include_2audacity_2_types_8h"/>
        <childnode refid="57984" relation="include">
        </childnode>
        <childnode refid="57989" relation="include">
        </childnode>
      </node>
      <node id="58078">
        <label>../BlockFile.h</label>
        <link refid="_block_file_8h"/>
        <childnode refid="57984" relation="include">
        </childnode>
        <childnode refid="57993" relation="include">
        </childnode>
        <childnode refid="58026" relation="include">
        </childnode>
        <childnode refid="57990" relation="include">
        </childnode>
        <childnode refid="57992" relation="include">
        </childnode>
        <childnode refid="57987" relation="include">
        </childnode>
      </node>
      <node id="58055">
        <label>../PluginManager.h</label>
        <link refid="_plugin_manager_8h"/>
        <childnode refid="57986" relation="include">
        </childnode>
        <childnode refid="57980" relation="include">
        </childnode>
        <childnode refid="58054" relation="include">
        </childnode>
        <childnode refid="57984" relation="include">
        </childnode>
        <childnode refid="58056" relation="include">
        </childnode>
        <childnode refid="58049" relation="include">
        </childnode>
        <childnode refid="58057" relation="include">
        </childnode>
        <childnode refid="58058" relation="include">
        </childnode>
        <childnode refid="58059" relation="include">
        </childnode>
      </node>
      <node id="57996">
        <label>wx/dialog.h</label>
      </node>
      <node id="58026">
        <label>wx/filename.h</label>
      </node>
      <node id="58047">
        <label>effects/EffectManager.h</label>
        <link refid="_effect_manager_8h"/>
        <childnode refid="57985" relation="include">
        </childnode>
        <childnode refid="58044" relation="include">
        </childnode>
        <childnode refid="57996" relation="include">
        </childnode>
        <childnode refid="57981" relation="include">
        </childnode>
        <childnode refid="58048" relation="include">
        </childnode>
        <childnode refid="57984" relation="include">
        </childnode>
        <childnode refid="58049" relation="include">
        </childnode>
        <childnode refid="58055" relation="include">
        </childnode>
        <childnode refid="58060" relation="include">
        </childnode>
      </node>
      <node id="58020">
        <label>Sequence.h</label>
        <link refid="_sequence_8h"/>
        <childnode refid="57979" relation="include">
        </childnode>
        <childnode refid="57984" relation="include">
        </childnode>
        <childnode refid="57980" relation="include">
        </childnode>
        <childnode refid="57987" relation="include">
        </childnode>
        <childnode refid="57990" relation="include">
        </childnode>
        <childnode refid="57992" relation="include">
        </childnode>
        <childnode refid="58001" relation="include">
        </childnode>
        <childnode refid="57988" relation="include">
        </childnode>
      </node>
      <node id="58052">
        <label>audacity/EffectAutomationParameters.h</label>
        <link refid="_effect_automation_parameters_8h"/>
        <childnode refid="58053" relation="include">
        </childnode>
        <childnode refid="58036" relation="include">
        </childnode>
        <childnode refid="58054" relation="include">
        </childnode>
        <childnode refid="58007" relation="include">
        </childnode>
      </node>
      <node id="58074">
        <label>Prefs.h</label>
        <link refid="_prefs_8h"/>
        <childnode refid="57976" relation="include">
        </childnode>
        <childnode refid="58075" relation="include">
        </childnode>
        <childnode refid="58054" relation="include">
        </childnode>
      </node>
      <node id="58017">
        <label>wx/brush.h</label>
      </node>
      <node id="58008">
        <label>wx/debug.h</label>
      </node>
      <node id="58032">
        <label>commands/CommandManager.h</label>
        <link refid="_command_manager_8h"/>
        <childnode refid="57985" relation="include">
        </childnode>
        <childnode refid="57977" relation="include">
        </childnode>
        <childnode refid="57979" relation="include">
        </childnode>
        <childnode refid="57984" relation="include">
        </childnode>
        <childnode refid="57980" relation="include">
        </childnode>
        <childnode refid="58033" relation="include">
        </childnode>
        <childnode refid="58027" relation="include">
        </childnode>
        <childnode refid="58034" relation="include">
        </childnode>
        <childnode refid="57990" relation="include">
        </childnode>
        <childnode refid="57988" relation="include">
        </childnode>
      </node>
      <node id="57976">
        <label>Audacity.h</label>
        <link refid="_audacity_8h"/>
      </node>
      <node id="58045">
        <label>wx/grid.h</label>
      </node>
      <node id="58009">
        <label>float.h</label>
        <link refid="float_8h"/>
        <childnode refid="58010" relation="include">
        </childnode>
      </node>
      <node id="57979">
        <label>vector</label>
      </node>
      <node id="58060">
        <label>Effect.h</label>
        <link refid="src_2effects_2_effect_8h"/>
        <childnode refid="57976" relation="include">
        </childnode>
        <childnode refid="57977" relation="include">
        </childnode>
        <childnode refid="58061" relation="include">
        </childnode>
        <childnode refid="58062" relation="include">
        </childnode>
        <childnode refid="57980" relation="include">
        </childnode>
        <childnode refid="58007" relation="include">
        </childnode>
        <childnode refid="57984" relation="include">
        </childnode>
        <childnode refid="58063" relation="include">
        </childnode>
        <childnode refid="58051" relation="include">
        </childnode>
        <childnode refid="58049" relation="include">
        </childnode>
        <childnode refid="57985" relation="include">
        </childnode>
        <childnode refid="58029" relation="include">
        </childnode>
        <childnode refid="58064" relation="include">
        </childnode>
        <childnode refid="58019" relation="include">
        </childnode>
        <childnode refid="57995" relation="include">
        </childnode>
      </node>
      <node id="57980">
        <label>wx/dynarray.h</label>
      </node>
      <node id="58024">
        <label>Project.h</label>
        <link refid="_project_8h"/>
        <childnode refid="57976" relation="include">
        </childnode>
        <childnode refid="57985" relation="include">
        </childnode>
        <childnode refid="58025" relation="include">
        </childnode>
        <childnode refid="58028" relation="include">
        </childnode>
        <childnode refid="58030" relation="include">
        </childnode>
        <childnode refid="58031" relation="include">
        </childnode>
        <childnode refid="58032" relation="include">
        </childnode>
        <childnode refid="58047" relation="include">
        </childnode>
        <childnode refid="57990" relation="include">
        </childnode>
        <childnode refid="58065" relation="include">
        </childnode>
        <childnode refid="58066" relation="include">
        </childnode>
        <childnode refid="57986" relation="include">
        </childnode>
        <childnode refid="57981" relation="include">
        </childnode>
        <childnode refid="58040" relation="include">
        </childnode>
        <childnode refid="58067" relation="include">
        </childnode>
        <childnode refid="58068" relation="include">
        </childnode>
        <childnode refid="58069" relation="include">
        </childnode>
        <childnode refid="58007" relation="include">
        </childnode>
        <childnode refid="58070" relation="include">
        </childnode>
        <childnode refid="58071" relation="include">
        </childnode>
      </node>
      <node id="58057">
        <label>audacity/ImporterInterface.h</label>
        <link refid="_importer_interface_8h"/>
        <childnode refid="57988" relation="include">
        </childnode>
        <childnode refid="58051" relation="include">
        </childnode>
        <childnode refid="58050" relation="include">
        </childnode>
      </node>
      <node id="57984">
        <label>wx/string.h</label>
      </node>
      <node id="58034">
        <label>../AudacityApp.h</label>
        <link refid="_audacity_app_8h"/>
        <childnode refid="57976" relation="include">
        </childnode>
        <childnode refid="58035" relation="include">
        </childnode>
        <childnode refid="58036" relation="include">
        </childnode>
        <childnode refid="58037" relation="include">
        </childnode>
        <childnode refid="57981" relation="include">
        </childnode>
        <childnode refid="58038" relation="include">
        </childnode>
        <childnode refid="58007" relation="include">
        </childnode>
        <childnode refid="58039" relation="include">
        </childnode>
        <childnode refid="58040" relation="include">
        </childnode>
        <childnode refid="58041" relation="include">
        </childnode>
        <childnode refid="58042" relation="include">
        </childnode>
        <childnode refid="58043" relation="include">
        </childnode>
        <childnode refid="58001" relation="include">
        </childnode>
        <childnode refid="57985" relation="include">
        </childnode>
      </node>
      <node id="58048">
        <label>wx/listbox.h</label>
      </node>
      <node id="58005">
        <label>wx/msgdlg.h</label>
      </node>
      <node id="58015">
        <label>Envelope.h</label>
        <link refid="src_2_envelope_8h"/>
        <childnode refid="58016" relation="include">
        </childnode>
        <childnode refid="58013" relation="include">
        </childnode>
        <childnode refid="57979" relation="include">
        </childnode>
        <childnode refid="57980" relation="include">
        </childnode>
        <childnode refid="58017" relation="include">
        </childnode>
        <childnode refid="58018" relation="include">
        </childnode>
        <childnode refid="57990" relation="include">
        </childnode>
        <childnode refid="58019" relation="include">
        </childnode>
      </node>
      <node id="57973">
        <label>C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp</label>
        <link refid="WaveTrack.cpp"/>
        <childnode refid="57974" relation="include">
        </childnode>
        <childnode refid="57986" relation="include">
        </childnode>
        <childnode refid="58007" relation="include">
        </childnode>
        <childnode refid="58008" relation="include">
        </childnode>
        <childnode refid="58009" relation="include">
        </childnode>
        <childnode refid="58012" relation="include">
        </childnode>
        <childnode refid="58013" relation="include">
        </childnode>
        <childnode refid="57977" relation="include">
        </childnode>
        <childnode refid="58014" relation="include">
        </childnode>
        <childnode refid="58015" relation="include">
        </childnode>
        <childnode refid="58020" relation="include">
        </childnode>
        <childnode refid="58021" relation="include">
        </childnode>
        <childnode refid="58024" relation="include">
        </childnode>
        <childnode refid="58019" relation="include">
        </childnode>
        <childnode refid="58072" relation="include">
        </childnode>
        <childnode refid="58074" relation="include">
        </childnode>
        <childnode refid="58076" relation="include">
        </childnode>
        <childnode refid="58080" relation="include">
        </childnode>
        <childnode refid="58081" relation="include">
        </childnode>
        <childnode refid="58085" relation="include">
        </childnode>
        <childnode refid="57985" relation="include">
        </childnode>
      </node>
      <node id="58073">
        <label>portaudio.h</label>
        <link refid="portaudio_8h"/>
      </node>
      <node id="58040">
        <label>wx/log.h</label>
      </node>
      <node id="58012">
        <label>math.h</label>
      </node>
      <node id="58025">
        <label>DirManager.h</label>
        <link refid="_dir_manager_8h"/>
        <childnode refid="58004" relation="include">
        </childnode>
        <childnode refid="57984" relation="include">
        </childnode>
        <childnode refid="58026" relation="include">
        </childnode>
        <childnode refid="58027" relation="include">
        </childnode>
        <childnode refid="58000" relation="include">
        </childnode>
        <childnode refid="57988" relation="include">
        </childnode>
        <childnode refid="57990" relation="include">
        </childnode>
      </node>
      <node id="58029">
        <label>SelectedRegion.h</label>
        <link refid="_selected_region_8h"/>
        <childnode refid="57976" relation="include">
        </childnode>
        <childnode refid="57985" relation="include">
        </childnode>
        <childnode refid="57986" relation="include">
        </childnode>
        <childnode refid="58023" relation="include">
        </childnode>
        <childnode refid="58012" relation="include">
        </childnode>
      </node>
      <node id="57989">
        <label>wx/arrstr.h</label>
      </node>
      <node id="58075">
        <label>wx/config.h</label>
      </node>
      <node id="58079">
        <label>wx/wx.h</label>
      </node>
      <node id="58039">
        <label>wx/snglinst.h</label>
      </node>
      <node id="58014">
        <label>float_cast.h</label>
        <link refid="float__cast_8h"/>
        <childnode refid="57976" relation="include">
        </childnode>
        <childnode refid="58012" relation="include">
        </childnode>
      </node>
      <node id="57975">
        <label>Track.h</label>
        <link refid="src_2track_8h"/>
        <childnode refid="57976" relation="include">
        </childnode>
        <childnode refid="57977" relation="include">
        </childnode>
        <childnode refid="57979" relation="include">
        </childnode>
        <childnode refid="57980" relation="include">
        </childnode>
        <childnode refid="57981" relation="include">
        </childnode>
        <childnode refid="57982" relation="include">
        </childnode>
        <childnode refid="57983" relation="include">
        </childnode>
        <childnode refid="57984" relation="include">
        </childnode>
        <childnode refid="57985" relation="include">
        </childnode>
        <childnode refid="57987" relation="include">
        </childnode>
        <childnode refid="57990" relation="include">
        </childnode>
      </node>
      <node id="58002">
        <label>wx/thread.h</label>
      </node>
      <node id="58067">
        <label>wx/dragimag.h</label>
      </node>
      <node id="58084">
        <label>SpectrogramSettings.h</label>
        <link refid="_spectrogram_settings_8h"/>
        <childnode refid="57985" relation="include">
        </childnode>
      </node>
      <node id="58063">
        <label>wx/tglbtn.h</label>
      </node>
      <node id="57977">
        <label>MemoryX.h</label>
        <link refid="_memory_x_8h"/>
        <childnode refid="57978" relation="include">
        </childnode>
      </node>
      <node id="58043">
        <label>widgets/FileHistory.h</label>
        <link refid="_file_history_8h"/>
        <childnode refid="57986" relation="include">
        </childnode>
        <childnode refid="58044" relation="include">
        </childnode>
        <childnode refid="57980" relation="include">
        </childnode>
        <childnode refid="57981" relation="include">
        </childnode>
        <childnode refid="58045" relation="include">
        </childnode>
        <childnode refid="57984" relation="include">
        </childnode>
        <childnode refid="58046" relation="include">
        </childnode>
      </node>
      <node id="58061">
        <label>set</label>
      </node>
      <node id="58071">
        <label>Menus.h</label>
        <link refid="_menus_8h"/>
        <childnode refid="57985" relation="include">
        </childnode>
      </node>
      <node id="58035">
        <label>wx/app.h</label>
        <link refid="app_8h"/>
      </node>
      <node id="57983">
        <label>wx/longlong.h</label>
      </node>
      <node id="58083">
        <label>wx/panel.h</label>
      </node>
      <node id="57974">
        <label>WaveTrack.h</label>
        <link refid="_wave_track_8h"/>
        <childnode refid="57975" relation="include">
        </childnode>
        <childnode refid="57987" relation="include">
        </childnode>
        <childnode refid="57994" relation="include">
        </childnode>
        <childnode refid="57985" relation="include">
        </childnode>
        <childnode refid="57995" relation="include">
        </childnode>
        <childnode refid="57979" relation="include">
        </childnode>
        <childnode refid="57982" relation="include">
        </childnode>
        <childnode refid="57983" relation="include">
        </childnode>
        <childnode refid="58002" relation="include">
        </childnode>
        <childnode refid="58006" relation="include">
        </childnode>
      </node>
      <node id="58021">
        <label>Spectrum.h</label>
        <link refid="_spectrum_8h"/>
        <childnode refid="58022" relation="include">
        </childnode>
      </node>
      <node id="58013">
        <label>algorithm</label>
      </node>
      <node id="57991">
        <label>stdio.h</label>
      </node>
      <node id="57987">
        <label>SampleFormat.h</label>
        <link refid="_sample_format_8h"/>
        <childnode refid="57976" relation="include">
        </childnode>
        <childnode refid="57986" relation="include">
        </childnode>
        <childnode refid="57988" relation="include">
        </childnode>
      </node>
      <node id="58053">
        <label>locale.h</label>
      </node>
      <node id="58038">
        <label>wx/docview.h</label>
      </node>
      <node id="57978">
        <label>memory</label>
      </node>
      <node id="57992">
        <label>XMLWriter.h</label>
        <link refid="_x_m_l_writer_8h"/>
        <childnode refid="57989" relation="include">
        </childnode>
        <childnode refid="57980" relation="include">
        </childnode>
        <childnode refid="57993" relation="include">
        </childnode>
      </node>
      <node id="58081">
        <label>prefs/SpectrumPrefs.h</label>
        <link refid="_spectrum_prefs_8h"/>
        <childnode refid="57986" relation="include">
        </childnode>
        <childnode refid="57984" relation="include">
        </childnode>
        <childnode refid="58046" relation="include">
        </childnode>
        <childnode refid="57985" relation="include">
        </childnode>
        <childnode refid="58082" relation="include">
        </childnode>
        <childnode refid="58084" relation="include">
        </childnode>
      </node>
      <node id="58031">
        <label>AudioIOListener.h</label>
        <link refid="_audio_i_o_listener_8h"/>
        <childnode refid="57984" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="_wave_track_8cpp_1ac921c059aa728a6e996ed99bc59e8fd8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static int SortClipArrayCmpFunc</definition>
        <argsstring>(WaveClip **clip1, WaveClip **clip2)</argsstring>
        <name>SortClipArrayCmpFunc</name>
        <param>
          <type><ref refid="class_wave_clip" kindref="compound">WaveClip</ref> **</type>
          <declname>clip1</declname>
        </param>
        <param>
          <type><ref refid="class_wave_clip" kindref="compound">WaveClip</ref> **</type>
          <declname>clip2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" line="2608" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp" bodystart="2608" bodyend="2614"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>Audacity:<sp/>A<sp/>Digital<sp/>Audio<sp/>Editor</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>WaveTrack.cpp</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>Dominic<sp/>Mazzoni</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment">*******************************************************************/</highlight><highlight class="comment">/****************************************************************/</highlight><highlight class="comment">/****************************************************************/</highlight><highlight class="comment">/*******************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_wave_track_8h" kindref="compound">WaveTrack.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/defs.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/intl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/debug.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="float_8h" kindref="compound">float.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_memory_x_8h" kindref="compound">MemoryX.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="float__cast_8h" kindref="compound">float_cast.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="src_2_envelope_8h" kindref="compound">Envelope.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_sequence_8h" kindref="compound">Sequence.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_spectrum_8h" kindref="compound">Spectrum.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_project_8h" kindref="compound">Project.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_internat_8h" kindref="compound">Internat.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_audio_i_o_8h" kindref="compound">AudioIO.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_prefs_8h" kindref="compound">Prefs.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_o_d_manager_8h" kindref="compound">ondemand/ODManager.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_time_warper_8h" kindref="compound">effects/TimeWarper.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_spectrum_prefs_8h" kindref="compound">prefs/SpectrumPrefs.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_waveform_prefs_8h" kindref="compound">prefs/WaveformPrefs.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_experimental_8h" kindref="compound">Experimental.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">std::max</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_OUTPUT_DISPLAY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>WaveTrack::mMonoAsVirtualStereo;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="class_track_factory_1a8ae6b7c1d51a0d1f1de04f848c9989e2" refkind="member"><highlight class="normal"><ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*<sp/><ref refid="class_track_factory_1a8ae6b7c1d51a0d1f1de04f848c9989e2" kindref="member">TrackFactory::DuplicateWaveTrack</ref>(<ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>&amp;orig)</highlight></codeline>
<codeline lineno="67"><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*)(orig.Duplicate());</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="class_track_factory_1ab1cb74f7da7619abac80e7aa5ebaa5f2" refkind="member"><highlight class="normal"><ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*<ref refid="class_track_factory_1ab1cb74f7da7619abac80e7aa5ebaa5f2" kindref="member">TrackFactory::NewWaveTrack</ref>(<ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792" kindref="member">sampleFormat</ref><sp/><ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="test__lib_f_l_a_c_2format_8c_1a960ad82c3ba394a46f17f5f6146c93ea" kindref="member">rate</ref>)</highlight></codeline>
<codeline lineno="73"><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref>(mDirManager,<sp/>format,<sp/>rate);</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal">WaveTrack::WaveTrack(<ref refid="class_dir_manager" kindref="compound">DirManager</ref><sp/>*projDirManager,<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792" kindref="member">sampleFormat</ref><sp/><ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="test__lib_f_l_a_c_2format_8c_1a960ad82c3ba394a46f17f5f6146c93ea" kindref="member">rate</ref>)<sp/>:</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref>(projDirManager)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/>,<sp/>mpSpectrumSettings(0)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/>,<sp/>mpWaveformSettings(0)</highlight></codeline>
<codeline lineno="81"><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref><sp/>==<sp/>(<ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792" kindref="member">sampleFormat</ref>)0)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref><sp/>=<sp/><ref refid="_project_8cpp_1a897aa047b58617a9acc187fc882e3bb4" kindref="member">GetActiveProject</ref>()-&gt;<ref refid="class_audacity_project_1aa714321a887cd650140df0ba7fcea0ac" kindref="member">GetDefaultFormat</ref>();</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="test__lib_f_l_a_c_2format_8c_1a960ad82c3ba394a46f17f5f6146c93ea" kindref="member">rate</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="test__lib_f_l_a_c_2format_8c_1a960ad82c3ba394a46f17f5f6146c93ea" kindref="member">rate</ref><sp/>=<sp/><ref refid="_project_8cpp_1a897aa047b58617a9acc187fc882e3bb4" kindref="member">GetActiveProject</ref>()-&gt;<ref refid="class_audacity_project_1a73a477249a9746f99bd0f72e9d9fe531" kindref="member">GetRate</ref>();</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Force<sp/>creation<sp/>always:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_waveform_settings" kindref="compound">WaveformSettings</ref><sp/>&amp;settings<sp/>=<sp/>GetIndependentWaveformSettings();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/>mDisplay<sp/>=<sp/>FindDefaultViewMode();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mDisplay<sp/>==<sp/>obsoleteWaveformDBDisplay)<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mDisplay<sp/>=<sp/>Waveform;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>settings.<ref refid="class_waveform_settings_1a6866a0a302099ef5fcd4fb60cba946cd" kindref="member">scaleType</ref><sp/>=<sp/><ref refid="class_waveform_settings_1a62e3323b180e270201c4bd5bcf52b4e4a2e6fe9dffc2c1d6bbcfaaee36df90f68" kindref="member">WaveformSettings::stLogarithmic</ref>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/>mLegacyProjectFileOffset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/>mFormat<sp/>=<sp/><ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref>;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/>mRate<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)<sp/><ref refid="test__lib_f_l_a_c_2format_8c_1a960ad82c3ba394a46f17f5f6146c93ea" kindref="member">rate</ref>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/>mGain<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/>mPan<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/>SetDefaultName(<ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(wxT(</highlight><highlight class="stringliteral">&quot;/GUI/TrackNames/DefaultTrackName&quot;</highlight><highlight class="normal">),<sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Audio<sp/>Track&quot;</highlight><highlight class="normal">)));</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/>SetName(GetDefaultName());</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/>mDisplayMin<sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/>mDisplayMax<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/>mSpectrumMin<sp/>=<sp/>mSpectrumMax<sp/>=<sp/>-1;<sp/></highlight><highlight class="comment">//<sp/>so<sp/>values<sp/>will<sp/>default<sp/>to<sp/>settings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/>mLastScaleType<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/>mLastdBRange<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/>mAutoSaveIdent<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal">WaveTrack::WaveTrack(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>&amp;orig):</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref>(orig)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/>,<sp/>mpSpectrumSettings(orig.mpSpectrumSettings</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_spectrogram_settings" kindref="compound">SpectrogramSettings</ref>(*orig.mpSpectrumSettings)<sp/>:<sp/>0</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/>,<sp/>mpWaveformSettings(orig.mpWaveformSettings<sp/></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_waveform_settings" kindref="compound">WaveformSettings</ref>(*orig.mpWaveformSettings)<sp/>:<sp/>0)</highlight></codeline>
<codeline lineno="123"><highlight class="normal">{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/>mLastScaleType<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/>mLastdBRange<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/>mLegacyProjectFileOffset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/>Init(orig);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(WaveClipList::compatibility_iterator<sp/><ref refid="structnode" kindref="compound">node</ref><sp/>=<sp/>orig.<ref refid="class_wave_track_1aab186786a53179d53c986771c42f5880" kindref="member">mClips</ref>.GetFirst();<sp/><ref refid="structnode" kindref="compound">node</ref>;<sp/><ref refid="structnode" kindref="compound">node</ref><sp/>=<sp/><ref refid="structnode" kindref="compound">node</ref>-&gt;GetNext())</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mClips.Append(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref>(*<ref refid="structnode" kindref="compound">node</ref>-&gt;GetData(),<sp/>mDirManager));</highlight></codeline>
<codeline lineno="133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copy<sp/>the<sp/>track<sp/>metadata<sp/>but<sp/>not<sp/>the<sp/>contents.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WaveTrack::Init(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>&amp;orig)</highlight></codeline>
<codeline lineno="137"><highlight class="normal">{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_1a947a448d4a6e9c7f2a6e4f36fb017ba5" kindref="member">Track::Init</ref>(orig);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/>mFormat<sp/>=<sp/>orig.<ref refid="class_wave_track_1a3938299d11824a2314ce22c688468e26" kindref="member">mFormat</ref>;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/>mRate<sp/>=<sp/>orig.<ref refid="class_wave_track_1ac9ff43cf5ca331f25aa7796beaa7c016" kindref="member">mRate</ref>;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/>mGain<sp/>=<sp/>orig.<ref refid="class_wave_track_1a07150ae1d89338c529717a3a43163bbc" kindref="member">mGain</ref>;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/>mPan<sp/>=<sp/>orig.<ref refid="class_wave_track_1a342936b12f0ed288970c87eaed874b71" kindref="member">mPan</ref>;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/>SetDefaultName(orig.<ref refid="class_track_1ae9c9b6f2e53b0e55b214ae192b30ec60" kindref="member">GetDefaultName</ref>());</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/>SetName(orig.<ref refid="class_track_1a670b88686f99e151d6a305a709f130b1" kindref="member">GetName</ref>());</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/>mDisplay<sp/>=<sp/>orig.<ref refid="class_wave_track_1a8c6f228f31fb7b7c144ca775d4600c10" kindref="member">mDisplay</ref>;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/>mDisplayMin<sp/>=<sp/>orig.<ref refid="class_wave_track_1a144805b8b5d766763d93cf1c47bb0cc0" kindref="member">mDisplayMin</ref>;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/>mDisplayMax<sp/>=<sp/>orig.<ref refid="class_wave_track_1a8dbec05f10d02f2c2547d846ca8cfc21" kindref="member">mDisplayMax</ref>;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/>mSpectrumMin<sp/>=<sp/>orig.<ref refid="class_wave_track_1a69645755c41a02f3c20f80f0bf5ced79" kindref="member">mSpectrumMin</ref>;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/>mSpectrumMax<sp/>=<sp/>orig.<ref refid="class_wave_track_1a92d5b6594bbe1a2b7dba5121c52882c6" kindref="member">mSpectrumMax</ref>;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/>mDisplayLocationsCache.clear();</highlight></codeline>
<codeline lineno="151"><highlight class="normal">}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153" refid="class_wave_track_1ab2609e4e0ce9f9d74ad5dd84ad5cf8e3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1ab2609e4e0ce9f9d74ad5dd84ad5cf8e3" kindref="member">WaveTrack::Merge</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>&amp;orig)</highlight></codeline>
<codeline lineno="154"><highlight class="normal">{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(orig.<ref refid="class_track_1ad71d0460cf42bcde59dcf600af7ef6b7" kindref="member">GetKind</ref>()<sp/>==<sp/>Wave)</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>&amp;wt<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="class_wave_track" kindref="compound">WaveTrack</ref>&amp;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(orig);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mDisplay<sp/>=<sp/>wt.<ref refid="class_wave_track_1a8c6f228f31fb7b7c144ca775d4600c10" kindref="member">mDisplay</ref>;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mGain<sp/><sp/><sp/><sp/>=<sp/>wt.<ref refid="class_wave_track_1a07150ae1d89338c529717a3a43163bbc" kindref="member">mGain</ref>;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mPan<sp/><sp/><sp/><sp/><sp/>=<sp/>wt.<ref refid="class_wave_track_1a342936b12f0ed288970c87eaed874b71" kindref="member">mPan</ref>;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SetSpectrogramSettings(wt.mpSpectrumSettings</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_spectrogram_settings" kindref="compound">SpectrogramSettings</ref>(*wt.mpSpectrumSettings)<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SetWaveformSettings</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(wt.mpWaveformSettings<sp/>?<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_waveform_settings" kindref="compound">WaveformSettings</ref>(*wt.mpWaveformSettings)<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_1a0345783930c487b7b511f8419f068aa5" kindref="member">Track::Merge</ref>(orig);</highlight></codeline>
<codeline lineno="167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169" refid="class_wave_track_1af60cfd7907bd8c1cbb7f263808e0eebe" refkind="member"><highlight class="normal"><ref refid="class_wave_track_1af60cfd7907bd8c1cbb7f263808e0eebe" kindref="member">WaveTrack::~WaveTrack</ref>()</highlight></codeline>
<codeline lineno="170"><highlight class="normal">{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Let<sp/>the<sp/>ODManager<sp/>know<sp/>this<sp/>WaveTrack<sp/>is<sp/>disappearing.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Deschedules<sp/>tasks<sp/>associated<sp/>with<sp/>this<sp/>track.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="class_o_d_manager_1a6647fc26402ceed611a794b7224063a5" kindref="member">ODManager::IsInstanceCreated</ref>())</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_o_d_manager_1aef1bcdded223f015b22a0d1d439c23ad" kindref="member">ODManager::Instance</ref>()-&gt;<ref refid="class_o_d_manager_1a9f273cddbbf88ab5f10d83ef71412260" kindref="member">RemoveWaveTrack</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(WaveClipList::compatibility_iterator<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>=GetClipIterator();<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>;<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>=<ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetNext())</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetData();</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/>mClips.Clear();</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>mpSpectrumSettings;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>mpWaveformSettings;</highlight></codeline>
<codeline lineno="182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184" refid="class_wave_track_1af199a667b2c17d34c3428a58dbc0d556" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1af199a667b2c17d34c3428a58dbc0d556" kindref="member">WaveTrack::GetOffset</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="185"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetStartTime();</highlight></codeline>
<codeline lineno="187"><highlight class="normal">}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189" refid="class_wave_track_1ad46c588dfe6753fc8c1573bbc5517d1a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1ad46c588dfe6753fc8c1573bbc5517d1a" kindref="member">WaveTrack::SetOffset</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacesmartmsgmerge_1aba35baca6a2a8d4f665ba30724f4739a" kindref="member">o</ref>)</highlight></codeline>
<codeline lineno="190"><highlight class="normal">{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>delta<sp/>=<sp/>o<sp/>-<sp/>GetOffset();</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(WaveClipList::compatibility_iterator<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>=GetClipIterator();<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>;<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>=<ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetNext())</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref>*<sp/>clip<sp/>=<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetData();</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>clip-&gt;<ref refid="class_wave_clip_1ac0c4ce7ebbc00afa175813f60bd97019" kindref="member">SetOffset</ref>(clip-&gt;<ref refid="class_wave_clip_1a070d7b2328a78c6ddaecc2f60ad4567f" kindref="member">GetOffset</ref>()<sp/>+<sp/>delta);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/>mOffset<sp/>=<sp/><ref refid="namespacesmartmsgmerge_1aba35baca6a2a8d4f665ba30724f4739a" kindref="member">o</ref>;</highlight></codeline>
<codeline lineno="200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="comment">//static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203" refid="class_wave_track_1a92b3b5c624dbac625e25d5335afcd7a5" refkind="member"><highlight class="normal"><ref refid="class_wave_track_1a084eba52413a5cc74d2634b36e2f85b5" kindref="member">WaveTrack::WaveTrackDisplay</ref><sp/><ref refid="class_wave_track_1a92b3b5c624dbac625e25d5335afcd7a5" kindref="member">WaveTrack::FindDefaultViewMode</ref>()</highlight></codeline>
<codeline lineno="204"><highlight class="normal">{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>PRL:<sp/><sp/>Bugs<sp/>1043,<sp/>1044</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2.1.1<sp/>writes<sp/>a<sp/>NEW<sp/>key<sp/>for<sp/>this<sp/>preference,<sp/>which<sp/>got<sp/>new<sp/>values,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>avoid<sp/>confusing<sp/>version<sp/>2.1.0<sp/>if<sp/>it<sp/>reads<sp/>the<sp/>preference<sp/>file<sp/>afterwards.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Prefer<sp/>the<sp/>NEW<sp/>preference<sp/>key<sp/>if<sp/>it<sp/>is<sp/>present</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_wave_track_1a084eba52413a5cc74d2634b36e2f85b5" kindref="member">WaveTrack::WaveTrackDisplay</ref><sp/>viewMode;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(wxT(</highlight><highlight class="stringliteral">&quot;/GUI/DefaultViewModeNew&quot;</highlight><highlight class="normal">),<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*)&amp;viewMode,<sp/>-1);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Default<sp/>to<sp/>the<sp/>old<sp/>key<sp/>only<sp/>if<sp/>not,<sp/>default<sp/>the<sp/>value<sp/>if<sp/>it&apos;s<sp/>not<sp/>there<sp/>either</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/>wxASSERT(<ref refid="class_wave_track_1a084eba52413a5cc74d2634b36e2f85b5a28366f7f02378aa2d22f68aa9749cc77" kindref="member">WaveTrack::MinDisplay</ref><sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(viewMode<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>oldMode;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(wxT(</highlight><highlight class="stringliteral">&quot;/GUI/DefaultViewMode&quot;</highlight><highlight class="normal">),<sp/>&amp;oldMode,</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(<ref refid="class_wave_track_1a084eba52413a5cc74d2634b36e2f85b5aeef9a24216b729762bfd38161b5b2a83" kindref="member">WaveTrack::Waveform</ref>));</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>viewMode<sp/>=<sp/><ref refid="class_wave_track_1a7129f7e9044f717d60ae824d3ab156fc" kindref="member">WaveTrack::ConvertLegacyDisplayValue</ref>(oldMode);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>future-proof<sp/>2.1.1<sp/>against<sp/>a<sp/>recurrence<sp/>of<sp/>this<sp/>sort<sp/>of<sp/>bug!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/>viewMode<sp/>=<sp/><ref refid="class_wave_track_1a2c0fdb366755a9100946fd7d0c4fae15" kindref="member">WaveTrack::ValidateWaveTrackDisplay</ref>(viewMode);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>viewMode;</highlight></codeline>
<codeline lineno="226"><highlight class="normal">}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="comment">//<sp/>static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><ref refid="class_wave_track_1a084eba52413a5cc74d2634b36e2f85b5" kindref="member">WaveTrack::WaveTrackDisplay</ref></highlight></codeline>
<codeline lineno="230" refid="class_wave_track_1a7129f7e9044f717d60ae824d3ab156fc" refkind="member"><highlight class="normal"><ref refid="class_wave_track_1a7129f7e9044f717d60ae824d3ab156fc" kindref="member">WaveTrack::ConvertLegacyDisplayValue</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>oldValue)</highlight></codeline>
<codeline lineno="231"><highlight class="normal">{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remap<sp/>old<sp/>values.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>OldValues<sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Waveform,</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>WaveformDB,</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Spectrogram,</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SpectrogramLogF,</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Pitch,</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_wave_track_1a084eba52413a5cc74d2634b36e2f85b5" kindref="member">WaveTrackDisplay</ref><sp/>newValue;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(oldValue)<sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Waveform:</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>newValue<sp/>=<sp/><ref refid="class_wave_track_1a084eba52413a5cc74d2634b36e2f85b5aeef9a24216b729762bfd38161b5b2a83" kindref="member">WaveTrack::Waveform</ref>;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>WaveformDB:</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>newValue<sp/>=<sp/><ref refid="class_wave_track_1a084eba52413a5cc74d2634b36e2f85b5af78a59d2fbae6820d78fa0432da86fa9" kindref="member">WaveTrack::obsoleteWaveformDBDisplay</ref>;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Spectrogram:</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>SpectrogramLogF:</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Pitch:</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>newValue<sp/>=<sp/><ref refid="class_wave_track_1a084eba52413a5cc74d2634b36e2f85b5ac0941a4c239c9e4a1d487f31786fbbc9" kindref="member">WaveTrack::Spectrum</ref>;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="253"><highlight class="comment"><sp/><sp/><sp/>case<sp/>SpectrogramLogF:</highlight></codeline>
<codeline lineno="254"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>newValue<sp/>=<sp/>WaveTrack::SpectrumLogDisplay;<sp/>break;</highlight></codeline>
<codeline lineno="255"><highlight class="comment"><sp/><sp/><sp/>case<sp/>Pitch:</highlight></codeline>
<codeline lineno="256"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>newValue<sp/>=<sp/>WaveTrack::PitchDisplay;<sp/>break;</highlight></codeline>
<codeline lineno="257"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>newValue;</highlight></codeline>
<codeline lineno="260"><highlight class="normal">}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="comment">//<sp/>static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><ref refid="class_wave_track_1a084eba52413a5cc74d2634b36e2f85b5" kindref="member">WaveTrack::WaveTrackDisplay</ref></highlight></codeline>
<codeline lineno="264" refid="class_wave_track_1a2c0fdb366755a9100946fd7d0c4fae15" refkind="member"><highlight class="normal"><ref refid="class_wave_track_1a2c0fdb366755a9100946fd7d0c4fae15" kindref="member">WaveTrack::ValidateWaveTrackDisplay</ref>(<ref refid="class_wave_track_1a084eba52413a5cc74d2634b36e2f85b5" kindref="member">WaveTrackDisplay</ref><sp/>display)</highlight></codeline>
<codeline lineno="265"><highlight class="normal">{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(display)<sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>non-obsolete<sp/>codes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Waveform:</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>obsoleteWaveformDBDisplay:</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Spectrum:</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>display;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>obsolete<sp/>codes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>obsolete1:<sp/></highlight><highlight class="comment">//<sp/>was<sp/>SpectrumLogDisplay</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>obsolete2:<sp/></highlight><highlight class="comment">//<sp/>was<sp/>SpectralSelectionDisplay</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>obsolete3:<sp/></highlight><highlight class="comment">//<sp/>was<sp/>SpectralSelectionLogDisplay</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>obsolete4:<sp/></highlight><highlight class="comment">//<sp/>was<sp/>PitchDisplay</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Spectrum;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>codes<sp/>out<sp/>of<sp/>bounds<sp/>(from<sp/>future<sp/>prefs<sp/>files?)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MinDisplay;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal">}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286" refid="class_wave_track_1a0692506243ea687501faddd0e767124e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1a0692506243ea687501faddd0e767124e" kindref="member">WaveTrack::SetLastScaleType</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="287"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/>mLastScaleType<sp/>=<sp/>GetWaveformSettings().scaleType;</highlight></codeline>
<codeline lineno="289"><highlight class="normal">}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291" refid="class_wave_track_1a9223604210ecf46c9238f43a715ab5f3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1a9223604210ecf46c9238f43a715ab5f3" kindref="member">WaveTrack::SetLastdBRange</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="292"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/>mLastdBRange<sp/>=<sp/>GetWaveformSettings().dBRange;</highlight></codeline>
<codeline lineno="294"><highlight class="normal">}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296" refid="class_wave_track_1aebb4cac69620ce02b4f396fb37d23f82" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1aebb4cac69620ce02b4f396fb37d23f82" kindref="member">WaveTrack::GetDisplayBounds</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="297"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/>*min<sp/>=<sp/>mDisplayMin;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/>*max<sp/>=<sp/>mDisplayMax;</highlight></codeline>
<codeline lineno="300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302" refid="class_wave_track_1aaf6f597255538feaf1017d046993445c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1aaf6f597255538feaf1017d046993445c" kindref="member">WaveTrack::SetDisplayBounds</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="303"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/>mDisplayMin<sp/>=<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/>mDisplayMax<sp/>=<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>;</highlight></codeline>
<codeline lineno="306"><highlight class="normal">}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308" refid="class_wave_track_1a6c31cef06f382857502ce036b2dc795b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1a6c31cef06f382857502ce036b2dc795b" kindref="member">WaveTrack::GetSpectrumBounds</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="309"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="test__lib_f_l_a_c_2format_8c_1a960ad82c3ba394a46f17f5f6146c93ea" kindref="member">rate</ref><sp/>=<sp/>GetRate();</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_spectrogram_settings" kindref="compound">SpectrogramSettings</ref><sp/>&amp;settings<sp/>=<sp/>GetSpectrogramSettings();</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_spectrogram_settings_1ad80cc088bcf7afb4176fd7195d4691fc" kindref="member">SpectrogramSettings::ScaleType</ref><sp/><ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref><sp/>=<sp/>settings.<ref refid="class_spectrogram_settings_1a8c6871ffc9d2f3f645e9d14c24920e04" kindref="member">scaleType</ref>;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>top<sp/>=<sp/>(rate<sp/>/<sp/>2.);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>bottom;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/><ref refid="class_spectrogram_settings_1ad80cc088bcf7afb4176fd7195d4691fca409b06214bb9e020d4252d6981947acf" kindref="member">SpectrogramSettings::stLinear</ref>)</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bottom<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>==<sp/><ref refid="class_spectrogram_settings_1ad80cc088bcf7afb4176fd7195d4691fcaee4c3c5d4de31bbe5faa2a7b62d73260" kindref="member">SpectrogramSettings::stPeriod</ref>)<sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>special<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>half<sp/>=<sp/>settings.<ref refid="class_spectrogram_settings_1a35321029bb4e809eedb8721db80c448e" kindref="member">GetFFTLength</ref>()<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>EAC<sp/>returns<sp/>no<sp/>data<sp/>for<sp/>below<sp/>this<sp/>frequency:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>bin2<sp/>=<sp/>rate<sp/>/<sp/>half;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bottom<sp/>=<sp/>bin2;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>logarithmic,<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>bottom<sp/>=<sp/>1.0f;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>spectrumMax<sp/>=<sp/>mSpectrumMax;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(spectrumMax<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spectrumMax<sp/>=<sp/>settings.<ref refid="class_spectrogram_settings_1a96c10597fd33d67b76c1ba5389b496e3" kindref="member">maxFreq</ref>;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(spectrumMax<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*max<sp/>=<sp/>top;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*max<sp/>=<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">std::max</ref>(bottom,<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">std::min</ref>(top,<sp/>spectrumMax));</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>spectrumMin<sp/>=<sp/>mSpectrumMin;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(spectrumMin<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spectrumMin<sp/>=<sp/>settings.<ref refid="class_spectrogram_settings_1a2cdeae9342848e7407bf7bb9f5701d2d" kindref="member">minFreq</ref>;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(spectrumMin<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*min<sp/>=<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">std::max</ref>(bottom,<sp/>top<sp/>/<sp/>1000.0<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*min<sp/>=<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">std::max</ref>(bottom,<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">std::min</ref>(top,<sp/>spectrumMin));</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal">}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352" refid="class_wave_track_1adc327ebce52049287878201d876de903" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1adc327ebce52049287878201d876de903" kindref="member">WaveTrack::SetSpectrumBounds</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="353"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/>mSpectrumMin<sp/>=<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/>mSpectrumMax<sp/>=<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>;</highlight></codeline>
<codeline lineno="356"><highlight class="normal">}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><ref refid="class_track" kindref="compound">Track</ref><sp/>*WaveTrack::Duplicate()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="359"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="361"><highlight class="normal">}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363" refid="class_wave_track_1a18bbe6e1bb4b1016c3a3de835c33b8fa" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1a18bbe6e1bb4b1016c3a3de835c33b8fa" kindref="member">WaveTrack::GetRate</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="364"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mRate;</highlight></codeline>
<codeline lineno="366"><highlight class="normal">}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368" refid="class_wave_track_1a0ab2aae5fbbcc2b0bd9da119727022ec" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1a0ab2aae5fbbcc2b0bd9da119727022ec" kindref="member">WaveTrack::SetRate</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>newRate)</highlight></codeline>
<codeline lineno="369"><highlight class="normal">{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/>mRate<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)<sp/>newRate;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(WaveClipList::compatibility_iterator<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>=GetClipIterator();<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>;<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>=<ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetNext())</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetData()-&gt;SetRate((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>newRate);</highlight></codeline>
<codeline lineno="373"><highlight class="normal">}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375" refid="class_wave_track_1a2f8be921b1e2c2183e3a3eb367eb3416" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1a2f8be921b1e2c2183e3a3eb367eb3416" kindref="member">WaveTrack::GetGain</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="376"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mGain;</highlight></codeline>
<codeline lineno="378"><highlight class="normal">}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380" refid="class_wave_track_1aa64cfe45ca3be7f2067f263784d2a864" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1aa64cfe45ca3be7f2067f263784d2a864" kindref="member">WaveTrack::SetGain</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>newGain)</highlight></codeline>
<codeline lineno="381"><highlight class="normal">{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/>mGain<sp/>=<sp/>newGain;</highlight></codeline>
<codeline lineno="383"><highlight class="normal">}</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385" refid="class_wave_track_1a39fb6133b9ead187e3eb8127fd8966c0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1a39fb6133b9ead187e3eb8127fd8966c0" kindref="member">WaveTrack::GetPan</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="386"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mPan;</highlight></codeline>
<codeline lineno="388"><highlight class="normal">}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_OUTPUT_DISPLAY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1a8711fa41c9fcec3519d80286a96f049d" kindref="member">WaveTrack::SetPan</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>newPan)</highlight></codeline>
<codeline lineno="392"><highlight class="normal">{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>=mPan;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>panZero=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>temp;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newPan<sp/>&gt;<sp/>1.0)</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mPan<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newPan<sp/>&lt;<sp/>-1.0)</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mPan<sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mPan<sp/>=<sp/>newPan;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mDisplay<sp/>==<sp/>WaveTrack::WaveformDisplay<sp/>&amp;&amp;<sp/>mChannel<sp/>==<sp/><ref refid="class_track_1af7ac66dc1b976cffbaee1e01206d362fad1d594e80888976c85f7a4a258dc2f19" kindref="member">Track::MonoChannel</ref><sp/>&amp;&amp;<sp/>(p<sp/>==<sp/>0.0<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref><sp/>&amp;&amp;<sp/>newPan<sp/>!=<sp/>0.0<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref><sp/>||<sp/>p<sp/>!=<sp/>0.0<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref><sp/>&amp;&amp;<sp/>newPan<sp/>==<sp/>0.0<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>)<sp/>&amp;&amp;<sp/>mMonoAsVirtualStereo)</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>panZero=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!mPan){</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mHeight<sp/>=<sp/>mHeight<sp/>+<sp/>mHeightv;</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>mHeight;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mHeight<sp/>=<sp/>temp*mPerY;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mHeightv<sp/>=<sp/>temp<sp/>-<sp/>mHeight;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ReorderList();</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>panZero;</highlight></codeline>
<codeline lineno="418"><highlight class="normal">}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/>//<sp/>EXPERIMENTAL_OUTPUT_DISPLAY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421" refid="class_wave_track_1a8711fa41c9fcec3519d80286a96f049d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1a8711fa41c9fcec3519d80286a96f049d" kindref="member">WaveTrack::SetPan</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>newPan)</highlight></codeline>
<codeline lineno="422"><highlight class="normal">{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newPan<sp/>&gt;<sp/>1.0)</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mPan<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newPan<sp/>&lt;<sp/>-1.0)</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mPan<sp/>=<sp/>-1.0;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mPan<sp/>=<sp/>newPan;</highlight></codeline>
<codeline lineno="429"><highlight class="normal">}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>EXPERIMENTAL_OUTPUT_DISPLAY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_OUTPUT_DISPLAY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WaveTrack::SetVirtualState(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>state,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>half)</highlight></codeline>
<codeline lineno="434"><highlight class="normal">{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>temp;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(half)</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mPerY<sp/>=<sp/>0.5;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(state){</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mPan){</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>mHeight;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mHeight<sp/>=<sp/>temp*mPerY;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mHeightv<sp/>=<sp/>temp<sp/>-<sp/>mHeight;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ReorderList();</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mPan){</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mHeight<sp/>=<sp/>mHeight<sp/>+<sp/>mHeightv;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="452"><highlight class="normal">}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_track_1aa39728150b3da63f63b35b5974f8839a" kindref="member">WaveTrack::GetMinimizedHeight</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="455"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(GetLink())<sp/>{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>20;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(GetChannel()<sp/>==<sp/>MonoChannel<sp/>&amp;&amp;<sp/>GetPan()<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>mMonoAsVirtualStereo<sp/>&amp;&amp;<sp/><sp/>mDisplay<sp/>==<sp/>WaveformDisplay)</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>20;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>40;</highlight></codeline>
<codeline lineno="464"><highlight class="normal">}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WaveTrack::VirtualStereoInit()</highlight></codeline>
<codeline lineno="467"><highlight class="normal">{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>temp;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mChannel<sp/>==<sp/><ref refid="class_track_1af7ac66dc1b976cffbaee1e01206d362fad1d594e80888976c85f7a4a258dc2f19" kindref="member">Track::MonoChannel</ref><sp/>&amp;&amp;<sp/>mPan<sp/>!=<sp/>0.0<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref><sp/>&amp;&amp;<sp/>mMonoAsVirtualStereo){</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>mHeight;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mHeight<sp/>=<sp/>temp*mPerY;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mHeightv<sp/>=<sp/>temp<sp/>-<sp/>mHeight;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ReorderList(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="476"><highlight class="normal">}</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479" refid="class_wave_track_1a93d35f717c7120f01d93ccb0e1d18db4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1a93d35f717c7120f01d93ccb0e1d18db4" kindref="member">WaveTrack::GetChannelGain</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channel)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="480"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>left<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>right<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_OUTPUT_DISPLAY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mVirtualStereo)</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>channel<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mPan<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>right<sp/>=<sp/>(mPan<sp/>+<sp/>1.0);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mPan<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>left<sp/>=<sp/>1.0<sp/>-<sp/>mPan;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((channel%2)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>left*mGain;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>right*mGain;</highlight></codeline>
<codeline lineno="498"><highlight class="normal">}</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500" refid="class_wave_track_1ae54ac2b95b5b6adfcbbba34964f7fee3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1ae54ac2b95b5b6adfcbbba34964f7fee3" kindref="member">WaveTrack::ConvertToSampleFormat</ref>(<ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792" kindref="member">sampleFormat</ref><sp/><ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref>)</highlight></codeline>
<codeline lineno="501"><highlight class="normal">{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(WaveClipList::compatibility_iterator<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>=GetClipIterator();<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>;<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>=<ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetNext())</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetData()-&gt;ConvertToSampleFormat(format);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/>mFormat<sp/>=<sp/><ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref>;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="507"><highlight class="normal">}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="509" refid="class_wave_track_1a5b87d35cb0fea96b149c43a997b20089" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1a5b87d35cb0fea96b149c43a997b20089" kindref="member">WaveTrack::IsEmpty</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1)</highlight></codeline>
<codeline lineno="510"><highlight class="normal">{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/>WaveClipList::compatibility_iterator<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;Searching<sp/>for<sp/>overlap<sp/>in<sp/>%.6f...%.6f\n&quot;,<sp/>t0,<sp/>t1);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it=GetClipIterator();<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>;<sp/>it=it-&gt;GetNext())</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref><sp/>*clip<sp/>=<sp/>it-&gt;GetData();</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!clip-&gt;<ref refid="class_wave_clip_1a52706d68f2addb697e9a4fb4d3c14220" kindref="member">BeforeClip</ref>(t1)<sp/>&amp;&amp;<sp/>!clip-&gt;<ref refid="class_wave_clip_1a75a19f4c77475b0926936fd1932f5911" kindref="member">AfterClip</ref>(t0))<sp/>{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;Overlapping<sp/>clip:<sp/>%.6f...%.6f\n&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>clip-&gt;GetStartTime(),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>clip-&gt;GetEndTime());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>found<sp/>a<sp/>clip<sp/>that<sp/>overlaps<sp/>this<sp/>region</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;No<sp/>overlap<sp/>found\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Otherwise,<sp/>no<sp/>clips<sp/>overlap<sp/>this<sp/>region</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="530"><highlight class="normal">}</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532" refid="class_wave_track_1ab3baf9ac8b43075bf65786bdf42fba85" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1ab3baf9ac8b43075bf65786bdf42fba85" kindref="member">WaveTrack::Cut</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1,<sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>**<ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>)</highlight></codeline>
<codeline lineno="533"><highlight class="normal">{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t1<sp/>&lt;<sp/>t0)</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!Copy(t0,<sp/>t1,<sp/>dest))</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Clear(t0,<sp/>t1);</highlight></codeline>
<codeline lineno="541"><highlight class="normal">}</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543" refid="class_wave_track_1a23c69640f758645adb7bb25bf59b2f3e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1a23c69640f758645adb7bb25bf59b2f3e" kindref="member">WaveTrack::SplitCut</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1,<sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>**<ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>)</highlight></codeline>
<codeline lineno="544"><highlight class="normal">{</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t1<sp/>&lt;<sp/>t0)</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SplitCut<sp/>is<sp/>the<sp/>same<sp/>as<sp/>&apos;Copy&apos;,<sp/>then<sp/>&apos;SplitDelete&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!Copy(t0,<sp/>t1,<sp/>dest))</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>SplitDelete(t0,<sp/>t1);</highlight></codeline>
<codeline lineno="552"><highlight class="normal">}</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>WaveTrack::CutAndAddCutLine(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1,<sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>**<ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>)</highlight></codeline>
<codeline lineno="556"><highlight class="normal">{</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t1<sp/>&lt;<sp/>t0)</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Cut<sp/>is<sp/>the<sp/>same<sp/>as<sp/>&apos;Copy&apos;,<sp/>then<sp/>&apos;Delete&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!Copy(t0,<sp/>t1,<sp/>dest))</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ClearAndAddCutLine(t0,<sp/>t1);</highlight></codeline>
<codeline lineno="564"><highlight class="normal">}</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight><highlight class="comment">//Trim<sp/>trims<sp/>within<sp/>a<sp/>clip,<sp/>rather<sp/>than<sp/>trimming<sp/>everything.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight><highlight class="comment">//If<sp/>a<sp/>bound<sp/>is<sp/>outside<sp/>a<sp/>clip,<sp/>it<sp/>trims<sp/>everything.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571" refid="class_wave_track_1a8c974d0b1252821e7dedb4971316f4ef" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1a8c974d0b1252821e7dedb4971316f4ef" kindref="member">WaveTrack::Trim</ref><sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1)</highlight></codeline>
<codeline lineno="572"><highlight class="normal">{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>inside0<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>inside1<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Keeps<sp/>track<sp/>of<sp/>the<sp/>offset<sp/>of<sp/>the<sp/>first<sp/>clip<sp/>greater<sp/>than</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>left<sp/>selection<sp/>t0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>firstGreaterOffset<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/>WaveClipList::compatibility_iterator<sp/><sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(it<sp/>=<sp/>GetClipIterator();<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>;<sp/>it<sp/>=<sp/>it-&gt;GetNext())</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref><sp/>*<sp/>clip<sp/>=<sp/>it-&gt;GetData();</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Find<sp/>the<sp/>first<sp/>clip<sp/>greater<sp/>than<sp/>the<sp/>offset.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>we<sp/>end<sp/>up<sp/>clipping<sp/>the<sp/>entire<sp/>track,<sp/>this<sp/>is<sp/>useful.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(firstGreaterOffset<sp/>&lt;<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clip-&gt;<ref refid="class_wave_clip_1a839a293df9246f7a9bb6fcf4d8be7b40" kindref="member">GetStartTime</ref>()<sp/>&gt;=<sp/>t0)</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>firstGreaterOffset<sp/>=<sp/>clip-&gt;<ref refid="class_wave_clip_1a839a293df9246f7a9bb6fcf4d8be7b40" kindref="member">GetStartTime</ref>();</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(t1<sp/>&gt;<sp/>clip-&gt;<ref refid="class_wave_clip_1a839a293df9246f7a9bb6fcf4d8be7b40" kindref="member">GetStartTime</ref>()<sp/>&amp;&amp;<sp/>t1<sp/>&lt;<sp/>clip-&gt;<ref refid="class_wave_clip_1a7c878143bdd7641be183325944d02f39" kindref="member">GetEndTime</ref>())</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!clip-&gt;<ref refid="class_wave_clip_1aff72eda8b7f0c6dec6ff16c7b30c622c" kindref="member">Clear</ref>(t1,clip-&gt;<ref refid="class_wave_clip_1a7c878143bdd7641be183325944d02f39" kindref="member">GetEndTime</ref>()))</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inside1<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(t0<sp/>&gt;<sp/>clip-&gt;<ref refid="class_wave_clip_1a839a293df9246f7a9bb6fcf4d8be7b40" kindref="member">GetStartTime</ref>()<sp/>&amp;&amp;<sp/>t0<sp/>&lt;<sp/>clip-&gt;<ref refid="class_wave_clip_1a7c878143bdd7641be183325944d02f39" kindref="member">GetEndTime</ref>())</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!clip-&gt;<ref refid="class_wave_clip_1aff72eda8b7f0c6dec6ff16c7b30c622c" kindref="member">Clear</ref>(clip-&gt;<ref refid="class_wave_clip_1a839a293df9246f7a9bb6fcf4d8be7b40" kindref="member">GetStartTime</ref>(),t0))</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clip-&gt;<ref refid="class_wave_clip_1ac0c4ce7ebbc00afa175813f60bd97019" kindref="member">SetOffset</ref>(t0);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inside0<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>inside0<sp/>is<sp/>false,<sp/>then<sp/>the<sp/>left<sp/>selector<sp/>was<sp/>between</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//clips,<sp/>so<sp/>DELETE<sp/>everything<sp/>to<sp/>its<sp/>left.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>==<sp/>inside1)</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!Clear(t1,GetEndTime()))</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>==<sp/>inside0)</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!SplitDelete(0,t0))</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="621"><highlight class="normal">}</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight></codeline>
<codeline lineno="626" refid="class_wave_track_1a80d2c62c76195237b5412fa22aae8b46" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1a80d2c62c76195237b5412fa22aae8b46" kindref="member">WaveTrack::Copy</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1,<sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>**dest)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="627"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/>*dest<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t1<sp/>&lt;=<sp/>t0)</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*newTrack<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref>(mDirManager);</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/>newTrack-&gt;Init(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/>WaveClipList::compatibility_iterator<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>;</highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it<sp/>=<sp/>const_cast&lt;WaveTrack*&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">)-&gt;GetClipIterator();<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>;<sp/>it<sp/>=<sp/>it-&gt;GetNext())</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref><sp/>*clip<sp/>=<sp/>it-&gt;GetData();</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t0<sp/>&lt;=<sp/>clip-&gt;GetStartTime()<sp/>&amp;&amp;<sp/>t1<sp/>&gt;=<sp/>clip-&gt;<ref refid="class_wave_clip_1a7c878143bdd7641be183325944d02f39" kindref="member">GetEndTime</ref>())</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Whole<sp/>clip<sp/>is<sp/>in<sp/>copy<sp/>region</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;copy:<sp/>clip<sp/>%i<sp/>is<sp/>in<sp/>copy<sp/>region\n&quot;,<sp/>(int)clip);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref><sp/>*newClip<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref>(*clip,<sp/>mDirManager);</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newClip-&gt;<ref refid="class_wave_clip_1a39a93d0ad31f6e021d2758fa5f8e0b70" kindref="member">RemoveAllCutLines</ref>();</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newClip-&gt;<ref refid="class_wave_clip_1a02ede29411c67eb9bc3193e6f1f453eb" kindref="member">Offset</ref>(-t0);</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newTrack-&gt;<ref refid="class_wave_track_1aab186786a53179d53c986771c42f5880" kindref="member">mClips</ref>.Append(newClip);</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t1<sp/>&gt;<sp/>clip-&gt;<ref refid="class_wave_clip_1a839a293df9246f7a9bb6fcf4d8be7b40" kindref="member">GetStartTime</ref>()<sp/>&amp;&amp;<sp/>t0<sp/>&lt;<sp/>clip-&gt;<ref refid="class_wave_clip_1a7c878143bdd7641be183325944d02f39" kindref="member">GetEndTime</ref>())</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clip<sp/>is<sp/>affected<sp/>by<sp/>command</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;copy:<sp/>clip<sp/>%i<sp/>is<sp/>affected<sp/>by<sp/>command\n&quot;,<sp/>(int)clip);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref><sp/>*newClip<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref>(*clip,<sp/>mDirManager);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newClip-&gt;<ref refid="class_wave_clip_1a39a93d0ad31f6e021d2758fa5f8e0b70" kindref="member">RemoveAllCutLines</ref>();</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>clip_t0<sp/>=<sp/>t0;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>clip_t1<sp/>=<sp/>t1;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clip_t0<sp/>&lt;<sp/>clip-&gt;GetStartTime())</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clip_t0<sp/>=<sp/>clip-&gt;<ref refid="class_wave_clip_1a839a293df9246f7a9bb6fcf4d8be7b40" kindref="member">GetStartTime</ref>();</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clip_t1<sp/>&gt;<sp/>clip-&gt;<ref refid="class_wave_clip_1a7c878143bdd7641be183325944d02f39" kindref="member">GetEndTime</ref>())</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clip_t1<sp/>=<sp/>clip-&gt;<ref refid="class_wave_clip_1a7c878143bdd7641be183325944d02f39" kindref="member">GetEndTime</ref>();</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;copy:<sp/>clip_t0=%f,<sp/>clip_t1=%f\n&quot;,<sp/>clip_t0,<sp/>clip_t1);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newClip-&gt;<ref refid="class_wave_clip_1a02ede29411c67eb9bc3193e6f1f453eb" kindref="member">Offset</ref>(-t0);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newClip-&gt;<ref refid="class_wave_clip_1a070d7b2328a78c6ddaecc2f60ad4567f" kindref="member">GetOffset</ref>()<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newClip-&gt;<ref refid="class_wave_clip_1ac0c4ce7ebbc00afa175813f60bd97019" kindref="member">SetOffset</ref>(0);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;copy:<sp/>clip<sp/>offset<sp/>is<sp/>now<sp/>%f\n&quot;,<sp/>newClip-&gt;GetOffset());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!newClip-&gt;<ref refid="class_wave_clip_1a7a72ade10b0fb3475c1511342f105fff" kindref="member">CreateFromCopy</ref>(clip_t0,<sp/>clip_t1,<sp/>clip))</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;paste:<sp/>CreateFromCopy(%f,<sp/>%f,<sp/>%i)<sp/>returns<sp/>false,<sp/>quitting\n&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>clip_t0,<sp/>clip_t1,<sp/>(int)clip);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>JKC:<sp/>July<sp/>2007,<sp/>previously<sp/>we<sp/>did<sp/>&apos;return<sp/>false&apos;<sp/>here<sp/>which</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>could<sp/>leave<sp/>*dest<sp/>undefined.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>I<sp/>think<sp/>this<sp/>is<sp/>dealing<sp/>with<sp/>clips<sp/>that<sp/>don&apos;t<sp/>have<sp/>any<sp/>sequence<sp/>content</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>i.e.<sp/>we<sp/>don&apos;t<sp/>copy<sp/>cut<sp/>lines<sp/>and<sp/>such<sp/>-<sp/>anyone<sp/>like<sp/>to<sp/>explain<sp/>more?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>newClip;</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newTrack-&gt;<ref refid="class_wave_track_1aab186786a53179d53c986771c42f5880" kindref="member">mClips</ref>.Append(newClip);</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>AWD,<sp/>Oct<sp/>2009:<sp/>If<sp/>the<sp/>selection<sp/>ends<sp/>in<sp/>whitespace,<sp/>create<sp/>a<sp/>placeholder</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clip<sp/>representing<sp/>that<sp/>whitespace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newTrack-&gt;<ref refid="class_wave_track_1a73f81dee4dcb79e0df3bb6a85b866ae1" kindref="member">GetEndTime</ref>()<sp/>+<sp/>1.0<sp/>/<sp/>newTrack-&gt;<ref refid="class_wave_track_1a18bbe6e1bb4b1016c3a3de835c33b8fa" kindref="member">GetRate</ref>()<sp/>&lt;<sp/>t1<sp/>-<sp/>t0)</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref><sp/>*placeholder<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref>(mDirManager,</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newTrack-&gt;<ref refid="class_wave_track_1aeacd5bae293c72523bcde439345739f7" kindref="member">GetSampleFormat</ref>(),<sp/>newTrack-&gt;<ref refid="class_wave_track_1a18bbe6e1bb4b1016c3a3de835c33b8fa" kindref="member">GetRate</ref>());</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>placeholder-&gt;<ref refid="class_wave_clip_1a220eff6e7c228d5d4efd16581af0d9c3" kindref="member">SetIsPlaceholder</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!<sp/>placeholder-&gt;<ref refid="class_wave_clip_1a3c7d2ee22cfb286a588c0f03abc5e470" kindref="member">InsertSilence</ref>(</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/>(t1<sp/>-<sp/>t0)<sp/>-<sp/>newTrack-&gt;<ref refid="class_wave_track_1a73f81dee4dcb79e0df3bb6a85b866ae1" kindref="member">GetEndTime</ref>())<sp/>)</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>placeholder;</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>placeholder-&gt;<ref refid="class_wave_clip_1a02ede29411c67eb9bc3193e6f1f453eb" kindref="member">Offset</ref>(newTrack-&gt;<ref refid="class_wave_track_1a73f81dee4dcb79e0df3bb6a85b866ae1" kindref="member">GetEndTime</ref>());</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newTrack-&gt;<ref refid="class_wave_track_1aab186786a53179d53c986771c42f5880" kindref="member">mClips</ref>.Append(placeholder);</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/>*dest<sp/>=<sp/>newTrack;</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="714"><highlight class="normal">}</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="716" refid="class_wave_track_1afcccee2ff72be9519c5a096a423476ff" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1afcccee2ff72be9519c5a096a423476ff" kindref="member">WaveTrack::CopyNonconst</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1,<sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>**dest)</highlight></codeline>
<codeline lineno="717"><highlight class="normal">{</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Copy(t0,<sp/>t1,<sp/>dest);</highlight></codeline>
<codeline lineno="719"><highlight class="normal">}</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="721" refid="class_wave_track_1a0643176c8e3d2b4de917b002af73e0ea" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1a0643176c8e3d2b4de917b002af73e0ea" kindref="member">WaveTrack::Clear</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1)</highlight></codeline>
<codeline lineno="722"><highlight class="normal">{</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HandleClear(t0,<sp/>t1,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="724"><highlight class="normal">}</highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight></codeline>
<codeline lineno="726" refid="class_wave_track_1aa12467e5e5da8f444d905f0716701d07" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1aa12467e5e5da8f444d905f0716701d07" kindref="member">WaveTrack::ClearAndAddCutLine</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1)</highlight></codeline>
<codeline lineno="727"><highlight class="normal">{</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HandleClear(t0,<sp/>t1,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="729"><highlight class="normal">}</highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="731" refid="class_wave_track_1a54f8ed0c9c1d1fae0241867565b33512" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_spectrogram_settings" kindref="compound">SpectrogramSettings</ref><sp/>&amp;<ref refid="class_wave_track_1a54f8ed0c9c1d1fae0241867565b33512" kindref="member">WaveTrack::GetSpectrogramSettings</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="732"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mpSpectrumSettings)</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*mpSpectrumSettings;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_spectrogram_settings_1a0c2bcef4a3bcdbe8874848a3a0d07f70" kindref="member">SpectrogramSettings::defaults</ref>();</highlight></codeline>
<codeline lineno="737"><highlight class="normal">}</highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight></codeline>
<codeline lineno="739" refid="class_wave_track_1a1a73f266c9172e34b51d6c1b78d2ec8c" refkind="member"><highlight class="normal"><ref refid="class_spectrogram_settings" kindref="compound">SpectrogramSettings</ref><sp/>&amp;<ref refid="class_wave_track_1a54f8ed0c9c1d1fae0241867565b33512" kindref="member">WaveTrack::GetSpectrogramSettings</ref>()</highlight></codeline>
<codeline lineno="740"><highlight class="normal">{</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mpSpectrumSettings)</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*mpSpectrumSettings;</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_spectrogram_settings_1a0c2bcef4a3bcdbe8874848a3a0d07f70" kindref="member">SpectrogramSettings::defaults</ref>();</highlight></codeline>
<codeline lineno="745"><highlight class="normal">}</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="747" refid="class_wave_track_1af7353bc939d97b3090ef20a0e0a6707b" refkind="member"><highlight class="normal"><ref refid="class_spectrogram_settings" kindref="compound">SpectrogramSettings</ref><sp/>&amp;<ref refid="class_wave_track_1af7353bc939d97b3090ef20a0e0a6707b" kindref="member">WaveTrack::GetIndependentSpectrogramSettings</ref>()</highlight></codeline>
<codeline lineno="748"><highlight class="normal">{</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mpSpectrumSettings)</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mpSpectrumSettings<sp/>=</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_spectrogram_settings" kindref="compound">SpectrogramSettings</ref>(<ref refid="class_spectrogram_settings_1a0c2bcef4a3bcdbe8874848a3a0d07f70" kindref="member">SpectrogramSettings::defaults</ref>());</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*mpSpectrumSettings;</highlight></codeline>
<codeline lineno="753"><highlight class="normal">}</highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight></codeline>
<codeline lineno="755" refid="class_wave_track_1a994147b87a99e06d53fdb80acca46e32" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1a994147b87a99e06d53fdb80acca46e32" kindref="member">WaveTrack::SetSpectrogramSettings</ref>(<ref refid="class_spectrogram_settings" kindref="compound">SpectrogramSettings</ref><sp/>*pSettings)</highlight></codeline>
<codeline lineno="756"><highlight class="normal">{</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mpSpectrumSettings<sp/>!=<sp/>pSettings)<sp/>{</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>mpSpectrumSettings;</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mpSpectrumSettings<sp/>=<sp/>pSettings;</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="761"><highlight class="normal">}</highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight></codeline>
<codeline lineno="763" refid="class_wave_track_1a10c50123dc26cba66469b011c1852047" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_waveform_settings" kindref="compound">WaveformSettings</ref><sp/>&amp;<ref refid="class_wave_track_1a10c50123dc26cba66469b011c1852047" kindref="member">WaveTrack::GetWaveformSettings</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="764"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mpWaveformSettings)</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*mpWaveformSettings;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_waveform_settings_1a7405a35e953949379b89a4fdedb3f91a" kindref="member">WaveformSettings::defaults</ref>();</highlight></codeline>
<codeline lineno="769"><highlight class="normal">}</highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight></codeline>
<codeline lineno="771" refid="class_wave_track_1aa26938c5028c13c0811e68e19ef89274" refkind="member"><highlight class="normal"><ref refid="class_waveform_settings" kindref="compound">WaveformSettings</ref><sp/>&amp;<ref refid="class_wave_track_1a10c50123dc26cba66469b011c1852047" kindref="member">WaveTrack::GetWaveformSettings</ref>()</highlight></codeline>
<codeline lineno="772"><highlight class="normal">{</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mpWaveformSettings)</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*mpWaveformSettings;</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_waveform_settings_1a7405a35e953949379b89a4fdedb3f91a" kindref="member">WaveformSettings::defaults</ref>();</highlight></codeline>
<codeline lineno="777"><highlight class="normal">}</highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight></codeline>
<codeline lineno="779" refid="class_wave_track_1aec6387c49dc73248ebc0d2b250e746cd" refkind="member"><highlight class="normal"><ref refid="class_waveform_settings" kindref="compound">WaveformSettings</ref><sp/>&amp;<ref refid="class_wave_track_1aec6387c49dc73248ebc0d2b250e746cd" kindref="member">WaveTrack::GetIndependentWaveformSettings</ref>()</highlight></codeline>
<codeline lineno="780"><highlight class="normal">{</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mpWaveformSettings)</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mpWaveformSettings<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_waveform_settings" kindref="compound">WaveformSettings</ref>(<ref refid="class_waveform_settings_1a7405a35e953949379b89a4fdedb3f91a" kindref="member">WaveformSettings::defaults</ref>());</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*mpWaveformSettings;</highlight></codeline>
<codeline lineno="784"><highlight class="normal">}</highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight></codeline>
<codeline lineno="786" refid="class_wave_track_1aa07485811d9d93644345e7e2bec9d56e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1aa07485811d9d93644345e7e2bec9d56e" kindref="member">WaveTrack::SetWaveformSettings</ref>(<ref refid="class_waveform_settings" kindref="compound">WaveformSettings</ref><sp/>*pSettings)</highlight></codeline>
<codeline lineno="787"><highlight class="normal">{</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mpWaveformSettings<sp/>!=<sp/>pSettings)<sp/>{</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>mpWaveformSettings;</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mpWaveformSettings<sp/>=<sp/>pSettings;</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="792"><highlight class="normal">}</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ClearAndPaste()<sp/>is<sp/>a<sp/>specialized<sp/>version<sp/>of<sp/>HandleClear()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight><highlight class="comment">//<sp/>followed<sp/>by<sp/>Paste()<sp/>and<sp/>is<sp/>used<sp/>mostly<sp/>by<sp/>effects<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight><highlight class="comment">//<sp/>can&apos;t<sp/>replace<sp/>track<sp/>data<sp/>directly<sp/>using<sp/>Get()/Set().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight><highlight class="comment">//<sp/>HandleClear()<sp/>removes<sp/>any<sp/>cut/split<sp/>lines<sp/>lines<sp/>with<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight><highlight class="comment">//<sp/>cleared<sp/>range,<sp/>but,<sp/>in<sp/>most<sp/>cases,<sp/>effects<sp/>want<sp/>to<sp/>preserve</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>existing<sp/>cut/split<sp/>lines,<sp/>so<sp/>they<sp/>are<sp/>saved<sp/>before<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight><highlight class="comment">//<sp/>HandleClear()/Paste()<sp/>and<sp/>restored<sp/>after.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>pasted<sp/>track<sp/>overlaps<sp/>two<sp/>or<sp/>more<sp/>clips,<sp/>then<sp/>it<sp/>will</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight><highlight class="comment">//<sp/>be<sp/>pasted<sp/>with<sp/>visible<sp/>split<sp/>lines.<sp/><sp/>Normally,<sp/>effects<sp/>do<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight><highlight class="comment">//<sp/>want<sp/>these<sp/>extra<sp/>lines,<sp/>so<sp/>they<sp/>may<sp/>be<sp/>merged<sp/>out.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="808" refid="class_wave_track_1a0eddcd7d1b35068c7369145a5d97ee17" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1a0eddcd7d1b35068c7369145a5d97ee17" kindref="member">WaveTrack::ClearAndPaste</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0,<sp/></highlight><highlight class="comment">//<sp/>Start<sp/>of<sp/>time<sp/>to<sp/>clear</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1,<sp/></highlight><highlight class="comment">//<sp/>End<sp/>of<sp/>time<sp/>to<sp/>clear</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*src,<sp/></highlight><highlight class="comment">//<sp/>What<sp/>to<sp/>paste</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>preserve,<sp/></highlight><highlight class="comment">//<sp/>Whether<sp/>to<sp/>reinsert<sp/>splits/cuts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>merge,<sp/></highlight><highlight class="comment">//<sp/>Whether<sp/>to<sp/>remove<sp/>&apos;extra&apos;<sp/>splits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_time_warper" kindref="compound">TimeWarper</ref><sp/>*effectWarper<sp/></highlight><highlight class="comment">//<sp/>How<sp/>does<sp/>time<sp/>change</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="815"><highlight class="normal">{</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/>WaveClipList::compatibility_iterator<sp/>ic;</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/>WaveClipList::compatibility_iterator<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>;</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="seqread_8c_1a3c79b5a9ee81c3835b8de9b0d900d2de" kindref="member">dur</ref><sp/>=<sp/>wxMin(t1<sp/>-<sp/>t0,<sp/>src-&gt;<ref refid="class_track_1a94b9fd13ee5b04493ed1024715e9c62b" kindref="member">GetEndTime</ref>());</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/>wxArrayDouble<sp/>splits;</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/>WaveClipArray<sp/>cuts;</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref><sp/>*clip;</highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>duration<sp/>is<sp/>0,<sp/>then<sp/>it&apos;s<sp/>just<sp/>a<sp/>plain<sp/>paste</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dur<sp/>==<sp/>0.0)<sp/>{</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Paste(t0,<sp/>src);</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>provided<sp/>time<sp/>warper<sp/>was<sp/>NULL,<sp/>use<sp/>a<sp/>default<sp/>one<sp/>that<sp/>does<sp/>nothing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_identity_time_warper" kindref="compound">IdentityTimeWarper</ref><sp/>localWarper;</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_time_warper" kindref="compound">TimeWarper</ref><sp/>*warper<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(effectWarper<sp/>!=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>warper<sp/>=<sp/>effectWarper;</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>warper<sp/>=<sp/>&amp;localWarper;</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Align<sp/>to<sp/>a<sp/>sample</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/>t0<sp/>=<sp/>LongSamplesToTime(TimeToLongSamples(t0));</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/>t1<sp/>=<sp/>LongSamplesToTime(TimeToLongSamples(t1));</highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>the<sp/>cut/split<sp/>lines<sp/>whether<sp/>preserving<sp/>or<sp/>not<sp/>since<sp/>merging</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>needs<sp/>to<sp/>know<sp/>if<sp/>a<sp/>clip<sp/>boundary<sp/>is<sp/>being<sp/>crossed<sp/>since<sp/>Paste()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>will<sp/>add<sp/>split<sp/>lines<sp/>around<sp/>the<sp/>pasted<sp/>clip<sp/>if<sp/>so.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ic<sp/>=<sp/>GetClipIterator();<sp/>ic;<sp/>ic<sp/>=<sp/>ic-&gt;GetNext())<sp/>{</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>st;</highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>clip<sp/>=<sp/>ic-&gt;GetData();</highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remember<sp/>clip<sp/>boundaries<sp/>as<sp/>locations<sp/>to<sp/>split</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>st<sp/>=<sp/>LongSamplesToTime(TimeToLongSamples(clip-&gt;<ref refid="class_wave_clip_1a839a293df9246f7a9bb6fcf4d8be7b40" kindref="member">GetStartTime</ref>()));</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(st<sp/>&gt;=<sp/>t0<sp/>&amp;&amp;<sp/>st<sp/>&lt;=<sp/>t1<sp/>&amp;&amp;<sp/>splits.Index(st)<sp/>==<sp/>wxNOT_FOUND)<sp/>{</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>splits.Add(st);</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="854"><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>st<sp/>=<sp/>LongSamplesToTime(TimeToLongSamples(clip-&gt;<ref refid="class_wave_clip_1a7c878143bdd7641be183325944d02f39" kindref="member">GetEndTime</ref>()));</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(st<sp/>&gt;=<sp/>t0<sp/>&amp;&amp;<sp/>st<sp/>&lt;=<sp/>t1<sp/>&amp;&amp;<sp/>splits.Index(st)<sp/>==<sp/>wxNOT_FOUND)<sp/>{</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>splits.Add(st);</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Search<sp/>for<sp/>cut<sp/>lines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>WaveClipList*<sp/>cutlines<sp/>=<sp/>clip-&gt;<ref refid="class_wave_clip_1a1c1ecfe9be3476335a2bf66d80774f03" kindref="member">GetCutLines</ref>();</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>=<sp/>cutlines-&gt;GetFirst();</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(it)<sp/>{</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WaveClipList::compatibility_iterator<sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref><sp/>=<sp/>it-&gt;GetNext();</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref><sp/>*cut<sp/>=<sp/>it-&gt;GetData();</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cs<sp/>=<sp/>LongSamplesToTime(TimeToLongSamples(clip-&gt;<ref refid="class_wave_clip_1a070d7b2328a78c6ddaecc2f60ad4567f" kindref="member">GetOffset</ref>()<sp/>+</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cut-&gt;<ref refid="class_wave_clip_1a070d7b2328a78c6ddaecc2f60ad4567f" kindref="member">GetOffset</ref>()));</highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remember<sp/>cut<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cs<sp/>&gt;=<sp/>t0<sp/>&amp;&amp;<sp/>cs<sp/>&lt;=<sp/>t1)<sp/>{</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>cut<sp/>point<sp/>from<sp/>this<sp/>clips<sp/>cutlines<sp/>array,<sp/>otherwise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>it<sp/>will<sp/>not<sp/>be<sp/>deleted<sp/>when<sp/>HandleClear()<sp/>is<sp/>called.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cutlines-&gt;DeleteNode(it);</highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remember<sp/>the<sp/>absolute<sp/>offset<sp/>and<sp/>add<sp/>to<sp/>our<sp/>cuts<sp/>array.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cut-&gt;<ref refid="class_wave_clip_1ac0c4ce7ebbc00afa175813f60bd97019" kindref="member">SetOffset</ref>(cs);</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cuts.Add(cut);</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>=<sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>;</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now,<sp/>clear<sp/>the<sp/>selection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(HandleClear(t0,<sp/>t1,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>And<sp/>paste<sp/>in<sp/>the<sp/>NEW<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(Paste(t0,<sp/>src))<sp/>{</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="890"><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>First,<sp/>merge<sp/>the<sp/>NEW<sp/>clip(s)<sp/>in<sp/>with<sp/>the<sp/>existing<sp/>clips</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(merge<sp/>&amp;&amp;<sp/>splits.GetCount()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WaveClipArray<sp/>clips;</highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>t1<sp/>represents<sp/>the<sp/>absolute<sp/>end<sp/>of<sp/>the<sp/>pasted<sp/>data.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t1<sp/>=<sp/>t0<sp/>+<sp/>src-&gt;<ref refid="class_track_1a94b9fd13ee5b04493ed1024715e9c62b" kindref="member">GetEndTime</ref>();</highlight></codeline>
<codeline lineno="898"><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>a<sp/>sorted<sp/>array<sp/>of<sp/>the<sp/>clips</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FillSortedClipArray(clips);</highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Scan<sp/>the<sp/>sorted<sp/>clips<sp/>for<sp/>the<sp/>first<sp/>clip<sp/>whose<sp/>start<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>exceeds<sp/>the<sp/>pasted<sp/>regions<sp/>end<sp/>time.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>clips.GetCount();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clip<sp/>=<sp/>clips[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Merge<sp/>this<sp/>clip<sp/>and<sp/>the<sp/>previous<sp/>clip<sp/>if<sp/>the<sp/>end<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>falls<sp/>within<sp/>it<sp/>and<sp/>this<sp/>isn&apos;t<sp/>the<sp/>first<sp/>clip<sp/>in<sp/>the<sp/>track.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(t1<sp/>-<sp/>clip-&gt;<ref refid="class_wave_clip_1a839a293df9246f7a9bb6fcf4d8be7b40" kindref="member">GetStartTime</ref>())<sp/>&lt;<sp/><ref refid="_wave_track_8h_1a49de0e8a9d91fb9eb450291e4e230b8b" kindref="member">WAVETRACK_MERGE_POINT_TOLERANCE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bResult<sp/>=<sp/>MergeClips(GetClipIndex(clips[i<sp/>-<sp/>1]),<sp/>GetClipIndex(clip));</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxASSERT(bResult);<sp/></highlight><highlight class="comment">//<sp/>TO<sp/>DO:<sp/>Actually<sp/>handle<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxUnusedVar(bResult);</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Refill<sp/>the<sp/>array<sp/>since<sp/>clips<sp/>have<sp/>changed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FillSortedClipArray(clips);</highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Scan<sp/>the<sp/>sorted<sp/>clips<sp/>to<sp/>look<sp/>for<sp/>the<sp/>start<sp/>of<sp/>the<sp/>pasted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>region.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>clips.GetCount();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clip<sp/>=<sp/>clips[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="926"><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Merge<sp/>this<sp/>clip<sp/>and<sp/>the<sp/>next<sp/>clip<sp/>if<sp/>the<sp/>start<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>falls<sp/>within<sp/>it<sp/>and<sp/>this<sp/>isn&apos;t<sp/>the<sp/>last<sp/>clip<sp/>in<sp/>the<sp/>track.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(t0<sp/>-<sp/>clip-&gt;<ref refid="class_wave_clip_1a7c878143bdd7641be183325944d02f39" kindref="member">GetEndTime</ref>())<sp/>&lt;<sp/><ref refid="_wave_track_8h_1a49de0e8a9d91fb9eb450291e4e230b8b" kindref="member">WAVETRACK_MERGE_POINT_TOLERANCE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>clips.GetCount()<sp/>-<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bResult<sp/>=<sp/>MergeClips(GetClipIndex(clip),<sp/>GetClipIndex(clips[i<sp/>+<sp/>1]));</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxASSERT(bResult);<sp/></highlight><highlight class="comment">//<sp/>TO<sp/>DO:<sp/>Actually<sp/>handle<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxUnusedVar(bResult);</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="939"><highlight class="normal"></highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Restore<sp/>cut/split<sp/>lines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(preserve)<sp/>{</highlight></codeline>
<codeline lineno="942"><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Restore<sp/>the<sp/>split<sp/>lines,<sp/>transforming<sp/>the<sp/>position<sp/>appropriately</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>splits.GetCount();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SplitAt(warper-&gt;<ref refid="class_time_warper_1a23723ae122b6feed38614cdcc328a394" kindref="member">Warp</ref>(splits[i]));</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="947"><highlight class="normal"></highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Restore<sp/>the<sp/>saved<sp/>cut<sp/>lines,<sp/>also<sp/>transforming<sp/>if<sp/>time<sp/>altered</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ic<sp/>=<sp/>GetClipIterator();<sp/>ic;<sp/>ic<sp/>=<sp/>ic-&gt;GetNext())<sp/>{</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>st;</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>et;</highlight></codeline>
<codeline lineno="952"><highlight class="normal"></highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clip<sp/>=<sp/>ic-&gt;GetData();</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st<sp/>=<sp/>clip-&gt;<ref refid="class_wave_clip_1a839a293df9246f7a9bb6fcf4d8be7b40" kindref="member">GetStartTime</ref>();</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>et<sp/>=<sp/>clip-&gt;<ref refid="class_wave_clip_1a7c878143bdd7641be183325944d02f39" kindref="member">GetEndTime</ref>();</highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Scan<sp/>the<sp/>cuts<sp/>for<sp/>any<sp/>that<sp/>live<sp/>within<sp/>this<sp/>clip</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>cuts.GetCount();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref><sp/>*cut<sp/>=<sp/>cuts[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cs<sp/>=<sp/>cut-&gt;<ref refid="class_wave_clip_1a070d7b2328a78c6ddaecc2f60ad4567f" kindref="member">GetOffset</ref>();</highlight></codeline>
<codeline lineno="961"><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Offset<sp/>the<sp/>cut<sp/>from<sp/>the<sp/>start<sp/>of<sp/>the<sp/>clip<sp/>and<sp/>add<sp/>it<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>clips<sp/>cutlines.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cs<sp/>&gt;=<sp/>st<sp/>&amp;&amp;<sp/>cs<sp/>&lt;=<sp/>et)<sp/>{</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cut-&gt;<ref refid="class_wave_clip_1ac0c4ce7ebbc00afa175813f60bd97019" kindref="member">SetOffset</ref>(warper-&gt;<ref refid="class_time_warper_1a23723ae122b6feed38614cdcc328a394" kindref="member">Warp</ref>(cs)<sp/>-<sp/>st);</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clip-&gt;<ref refid="class_wave_clip_1a1c1ecfe9be3476335a2bf66d80774f03" kindref="member">GetCutLines</ref>()-&gt;Append(cut);</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cuts.RemoveAt(i);</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i--;</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="975"><highlight class="normal"></highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Delete<sp/>cutlines<sp/>that<sp/>fell<sp/>outside<sp/>of<sp/>resulting<sp/>clips</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ii<sp/>=<sp/>cuts.GetCount();<sp/>ii--;)</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>cuts[ii];</highlight></codeline>
<codeline lineno="979"><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="981"><highlight class="normal">}</highlight></codeline>
<codeline lineno="982"><highlight class="normal"></highlight></codeline>
<codeline lineno="983" refid="class_wave_track_1afad9695b9e4348602605a60ddecea184" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1afad9695b9e4348602605a60ddecea184" kindref="member">WaveTrack::SplitDelete</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1)</highlight></codeline>
<codeline lineno="984"><highlight class="normal">{</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>addCutLines<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>split<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>HandleClear(t0,<sp/>t1,<sp/>addCutLines,<sp/>split);</highlight></codeline>
<codeline lineno="988"><highlight class="normal">}</highlight></codeline>
<codeline lineno="989"><highlight class="normal"></highlight></codeline>
<codeline lineno="990" refid="class_wave_track_1a87c77243803f525bead9bd6dd98b01fc" refkind="member"><highlight class="normal"><ref refid="class_wave_clip" kindref="compound">WaveClip</ref>*<sp/><ref refid="class_wave_track_1a87c77243803f525bead9bd6dd98b01fc" kindref="member">WaveTrack::RemoveAndReturnClip</ref>(<ref refid="class_wave_clip" kindref="compound">WaveClip</ref>*<sp/>clip)</highlight></codeline>
<codeline lineno="991"><highlight class="normal">{</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/>WaveClipList::compatibility_iterator<sp/><ref refid="structnode" kindref="compound">node</ref><sp/>=<sp/>mClips.Find(clip);</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref>*<sp/>clipReturn<sp/>=<sp/>node-&gt;GetData();</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/>mClips.DeleteNode(node);</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>clipReturn;</highlight></codeline>
<codeline lineno="996"><highlight class="normal">}</highlight></codeline>
<codeline lineno="997"><highlight class="normal"></highlight></codeline>
<codeline lineno="998" refid="class_wave_track_1a67a4e0c18385069f83ae940203854126" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1a67a4e0c18385069f83ae940203854126" kindref="member">WaveTrack::AddClip</ref>(<ref refid="class_wave_clip" kindref="compound">WaveClip</ref>*<sp/>clip)</highlight></codeline>
<codeline lineno="999"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Uncomment<sp/>the<sp/>following<sp/>line<sp/>after<sp/>we<sp/>correct<sp/>the<sp/>problem<sp/>of<sp/>zero-length<sp/>clips</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(CanInsertClip(clip))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mClips.Append(clip);</highlight></codeline>
<codeline lineno="1003"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"></highlight></codeline>
<codeline lineno="1005" refid="class_wave_track_1ab70b3459275bc45091a583cb5b849519" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1ab70b3459275bc45091a583cb5b849519" kindref="member">WaveTrack::HandleClear</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1,</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>addCutLines,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>split)</highlight></codeline>
<codeline lineno="1007"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t1<sp/>&lt;<sp/>t0)</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>editClipCanMove<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(wxT(</highlight><highlight class="stringliteral">&quot;/GUI/EditClipCanMove&quot;</highlight><highlight class="normal">),<sp/>&amp;editClipCanMove);</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"></highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/>WaveClipList::compatibility_iterator<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>;</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/>WaveClipList<sp/>clipsToDelete;</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/>WaveClipList<sp/>clipsToAdd;</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"></highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>only<sp/>add<sp/>cut<sp/>lines<sp/>when<sp/>deleting<sp/>in<sp/>the<sp/>middle<sp/>of<sp/>a<sp/>single<sp/>clip</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>cut<sp/>line<sp/>code<sp/>is<sp/>not<sp/>really<sp/>prepared<sp/>to<sp/>handle<sp/>other<sp/>situations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(addCutLines)</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it=GetClipIterator();<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>;<sp/>it=it-&gt;GetNext())</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref><sp/>*clip<sp/>=<sp/>it-&gt;GetData();</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!clip-&gt;<ref refid="class_wave_clip_1a52706d68f2addb697e9a4fb4d3c14220" kindref="member">BeforeClip</ref>(t1)<sp/>&amp;&amp;<sp/>!clip-&gt;<ref refid="class_wave_clip_1a75a19f4c77475b0926936fd1932f5911" kindref="member">AfterClip</ref>(t0)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(clip-&gt;<ref refid="class_wave_clip_1a52706d68f2addb697e9a4fb4d3c14220" kindref="member">BeforeClip</ref>(t0)<sp/>||<sp/>clip-&gt;<ref refid="class_wave_clip_1a75a19f4c77475b0926936fd1932f5911" kindref="member">AfterClip</ref>(t1)))</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addCutLines<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it=GetClipIterator();<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>;<sp/>it=it-&gt;GetNext())<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>main<sp/>loop<sp/>through<sp/>clips</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref><sp/>*clip<sp/>=<sp/>it-&gt;GetData();</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clip-&gt;<ref refid="class_wave_clip_1a52706d68f2addb697e9a4fb4d3c14220" kindref="member">BeforeClip</ref>(t0)<sp/>&amp;&amp;<sp/>clip-&gt;<ref refid="class_wave_clip_1a75a19f4c77475b0926936fd1932f5911" kindref="member">AfterClip</ref>(t1))</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Whole<sp/>clip<sp/>must<sp/>be<sp/>deleted<sp/>-<sp/>remember<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clipsToDelete.<ref refid="class_wave_clip_1a3f1bee3270d0e6edb160be180b42fe20" kindref="member">Append</ref>(clip);</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!clip-&gt;<ref refid="class_wave_clip_1a52706d68f2addb697e9a4fb4d3c14220" kindref="member">BeforeClip</ref>(t1)<sp/>&amp;&amp;<sp/>!clip-&gt;<ref refid="class_wave_clip_1a75a19f4c77475b0926936fd1932f5911" kindref="member">AfterClip</ref>(t0))</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clip<sp/>data<sp/>is<sp/>affected<sp/>by<sp/>command</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(addCutLines)</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!clip-&gt;<ref refid="class_wave_clip_1a9813ed13f73bfb5aae6c5b794f5af07a" kindref="member">ClearAndAddCutLine</ref>(t0,t1))</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(split)<sp/>{</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Three<sp/>cases:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clip-&gt;<ref refid="class_wave_clip_1a52706d68f2addb697e9a4fb4d3c14220" kindref="member">BeforeClip</ref>(t0))<sp/>{</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Delete<sp/>from<sp/>the<sp/>left<sp/>edge</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clip-&gt;<ref refid="class_wave_clip_1aff72eda8b7f0c6dec6ff16c7b30c622c" kindref="member">Clear</ref>(clip-&gt;<ref refid="class_wave_clip_1a839a293df9246f7a9bb6fcf4d8be7b40" kindref="member">GetStartTime</ref>(),<sp/>t1);</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clip-&gt;<ref refid="class_wave_clip_1a02ede29411c67eb9bc3193e6f1f453eb" kindref="member">Offset</ref>(t1-clip-&gt;<ref refid="class_wave_clip_1a839a293df9246f7a9bb6fcf4d8be7b40" kindref="member">GetStartTime</ref>());</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clip-&gt;<ref refid="class_wave_clip_1a75a19f4c77475b0926936fd1932f5911" kindref="member">AfterClip</ref>(t1))<sp/>{</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Delete<sp/>to<sp/>right<sp/>edge</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clip-&gt;<ref refid="class_wave_clip_1aff72eda8b7f0c6dec6ff16c7b30c622c" kindref="member">Clear</ref>(t0,<sp/>clip-&gt;<ref refid="class_wave_clip_1a7c878143bdd7641be183325944d02f39" kindref="member">GetEndTime</ref>());</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Delete<sp/>in<sp/>the<sp/>middle<sp/>of<sp/>the<sp/>clip...we<sp/>actually<sp/>create<sp/>two</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NEW<sp/>clips<sp/>out<sp/>of<sp/>the<sp/>left<sp/>and<sp/>right<sp/>halves...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1068"><highlight class="normal"></highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref><sp/>*left<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref>(*clip,<sp/>mDirManager);</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left-&gt;<ref refid="class_wave_clip_1aff72eda8b7f0c6dec6ff16c7b30c622c" kindref="member">Clear</ref>(t0,<sp/>clip-&gt;<ref refid="class_wave_clip_1a7c878143bdd7641be183325944d02f39" kindref="member">GetEndTime</ref>());</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clipsToAdd.Append(left);</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"></highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref><sp/>*right<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref>(*clip,<sp/>mDirManager);</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>right-&gt;<ref refid="class_wave_clip_1aff72eda8b7f0c6dec6ff16c7b30c622c" kindref="member">Clear</ref>(clip-&gt;<ref refid="class_wave_clip_1a839a293df9246f7a9bb6fcf4d8be7b40" kindref="member">GetStartTime</ref>(),<sp/>t1);</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>right-&gt;<ref refid="class_wave_clip_1a02ede29411c67eb9bc3193e6f1f453eb" kindref="member">Offset</ref>(t1-clip-&gt;<ref refid="class_wave_clip_1a839a293df9246f7a9bb6fcf4d8be7b40" kindref="member">GetStartTime</ref>());</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clipsToAdd.Append(right);</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clipsToDelete.Append(clip);</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>(We<sp/>are<sp/>not<sp/>doing<sp/>a<sp/>split<sp/>cut)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>are<sp/>going<sp/>to<sp/>DELETE<sp/>part<sp/>of<sp/>the<sp/>clip<sp/>here.<sp/>The<sp/>clip<sp/>may</highlight></codeline>
<codeline lineno="1083"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>have<sp/>envelope<sp/>points,<sp/>and<sp/>we<sp/>need<sp/>to<sp/>ensure<sp/>that<sp/>the<sp/>envelope</highlight></codeline>
<codeline lineno="1084"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>outside<sp/>of<sp/>the<sp/>cleared<sp/>region<sp/>is<sp/>not<sp/>affected.<sp/>This<sp/>means</highlight></codeline>
<codeline lineno="1085"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>putting<sp/>in<sp/>&quot;glue&quot;<sp/>points<sp/>where<sp/>the<sp/>clip<sp/>enters<sp/>and<sp/>leaves<sp/>the</highlight></codeline>
<codeline lineno="1086"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>region<sp/>being<sp/>cleared.<sp/>If<sp/>one<sp/>of<sp/>the<sp/>ends<sp/>of<sp/>the<sp/>clip<sp/>is<sp/>inside</highlight></codeline>
<codeline lineno="1087"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>region,<sp/>then<sp/>one<sp/>of<sp/>the<sp/>glue<sp/>points<sp/>will<sp/>be<sp/>redundant.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clip-&gt;Clear<sp/>keeps<sp/>points<sp/>&lt;<sp/>t0<sp/>and<sp/>&gt;=<sp/>t1<sp/>via<sp/>Envelope::CollapseRegion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clip-&gt;<ref refid="class_wave_clip_1a89df7eef9147be5868fe247c6239e5c8" kindref="member">GetEnvelope</ref>()-&gt;<ref refid="class_envelope_1adfc11a49a3ca8a9a5f4b51ff4131c9c1" kindref="member">GetNumberOfPoints</ref>()<sp/>&gt;<sp/>0)<sp/>{<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>insert<sp/>env<sp/>pts<sp/>if<sp/>none<sp/>exist</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clip-&gt;<ref refid="class_wave_clip_1a1077591aea50132fb96b1345527b4110" kindref="member">WithinClip</ref>(t0))</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>start<sp/>of<sp/>region<sp/>within<sp/>clip</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>clip-&gt;<ref refid="class_wave_clip_1a89df7eef9147be5868fe247c6239e5c8" kindref="member">GetEnvelope</ref>()-&gt;<ref refid="class_envelope_1ac5729053c923e47b43f0f063845c2ce9" kindref="member">GetValue</ref>(t0);</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clip-&gt;<ref refid="class_wave_clip_1a89df7eef9147be5868fe247c6239e5c8" kindref="member">GetEnvelope</ref>()-&gt;<ref refid="class_envelope_1aa0d5f77099711f3843108dbce4cf4ed2" kindref="member">Insert</ref>(t0<sp/>-<sp/>clip-&gt;<ref refid="class_wave_clip_1a070d7b2328a78c6ddaecc2f60ad4567f" kindref="member">GetOffset</ref>()<sp/>-<sp/>1.0/clip-&gt;<ref refid="class_wave_clip_1a04d1806de89e39538576880a8dd43c11" kindref="member">GetRate</ref>(),<sp/>val);</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clip-&gt;<ref refid="class_wave_clip_1a1077591aea50132fb96b1345527b4110" kindref="member">WithinClip</ref>(t1))</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>end<sp/>of<sp/>region<sp/>within<sp/>clip</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>clip-&gt;<ref refid="class_wave_clip_1a89df7eef9147be5868fe247c6239e5c8" kindref="member">GetEnvelope</ref>()-&gt;<ref refid="class_envelope_1ac5729053c923e47b43f0f063845c2ce9" kindref="member">GetValue</ref>(t1);</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clip-&gt;<ref refid="class_wave_clip_1a89df7eef9147be5868fe247c6239e5c8" kindref="member">GetEnvelope</ref>()-&gt;<ref refid="class_envelope_1aa0d5f77099711f3843108dbce4cf4ed2" kindref="member">Insert</ref>(t1<sp/>-<sp/>clip-&gt;<ref refid="class_wave_clip_1a070d7b2328a78c6ddaecc2f60ad4567f" kindref="member">GetOffset</ref>(),<sp/>val);</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!clip-&gt;<ref refid="class_wave_clip_1aff72eda8b7f0c6dec6ff16c7b30c622c" kindref="member">Clear</ref>(t0,t1))</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clip-&gt;<ref refid="class_wave_clip_1a89df7eef9147be5868fe247c6239e5c8" kindref="member">GetEnvelope</ref>()-&gt;<ref refid="class_envelope_1a7b5895b783e85bfa1bfac92a41256091" kindref="member">RemoveUnneededPoints</ref>(t0);</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clip-&gt;<ref refid="class_wave_clip_1a52706d68f2addb697e9a4fb4d3c14220" kindref="member">BeforeClip</ref>(t1))</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clip<sp/>is<sp/>&quot;behind&quot;<sp/>the<sp/>region<sp/>--<sp/>offset<sp/>it<sp/>unless<sp/>we&apos;re<sp/>splitting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>or<sp/>we&apos;re<sp/>using<sp/>the<sp/>&quot;don&apos;t<sp/>move<sp/>other<sp/>clips&quot;<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!split<sp/>&amp;&amp;<sp/>editClipCanMove)</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clip-&gt;<ref refid="class_wave_clip_1a02ede29411c67eb9bc3193e6f1f453eb" kindref="member">Offset</ref>(-(t1-t0));</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"></highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it=clipsToDelete.GetFirst();<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>;<sp/>it=it-&gt;GetNext())</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mClips.DeleteObject(it-&gt;GetData());</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>it-&gt;GetData();</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"></highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it=clipsToAdd.GetFirst();<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>;<sp/>it=it-&gt;GetNext())</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mClips.Append(it-&gt;GetData());</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"></highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"></highlight></codeline>
<codeline lineno="1131" refid="class_wave_track_1a49cda2bf10befe089ebd666260e5c5f7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1a49cda2bf10befe089ebd666260e5c5f7" kindref="member">WaveTrack::SyncLockAdjust</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>oldT1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>newT1)</highlight></codeline>
<codeline lineno="1132"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newT1<sp/>&gt;<sp/>oldT1)<sp/>{</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>space<sp/>within<sp/>the<sp/>track</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1135"><highlight class="normal"></highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>JKC:<sp/>This<sp/>is<sp/>a<sp/>rare<sp/>case<sp/>where<sp/>using<sp/>&gt;=<sp/>rather<sp/>than<sp/>&gt;<sp/>on<sp/>a<sp/>float<sp/>matters.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>GetEndTime()<sp/>looks<sp/>through<sp/>the<sp/>clips<sp/>and<sp/>may<sp/>give<sp/>us<sp/>EXACTLY<sp/>the<sp/>same</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>value<sp/>as<sp/>T1,<sp/>when<sp/>T1<sp/>was<sp/>set<sp/>to<sp/>be<sp/>at<sp/>the<sp/>end<sp/>of<sp/>one<sp/>of<sp/>those<sp/>clips.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(oldT1<sp/>&gt;=<sp/>GetEndTime())</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"></highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>track<sp/>is<sp/>empty<sp/>at<sp/>oldT1<sp/>insert<sp/>whitespace;<sp/>otherwise,<sp/>silence</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(IsEmpty(oldT1,<sp/>oldT1))</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"></highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>clips<sp/>can<sp/>move</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>clipsCanMove<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(wxT(</highlight><highlight class="stringliteral">&quot;/GUI/EditClipCanMove&quot;</highlight><highlight class="normal">),<sp/>&amp;clipsCanMove);</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clipsCanMove)<sp/>{</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*tmp<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>Cut<sp/>(oldT1,<sp/>GetEndTime()<sp/>+<sp/>1.0/GetRate(),<sp/>&amp;tmp);</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ret)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"></highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>Paste(newT1,<sp/>tmp);</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxASSERT(ret);</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>tmp;</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"></highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>AWD:<sp/>Could<sp/>just<sp/>use<sp/>InsertSilence()<sp/>on<sp/>its<sp/>own<sp/>here,<sp/>but<sp/>it<sp/>doesn&apos;t</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>follow<sp/>EditClipCanMove<sp/>rules<sp/>(Paste()<sp/>does<sp/>it<sp/>right)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_audacity_project" kindref="compound">AudacityProject</ref><sp/>*<ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref><sp/>=<sp/><ref refid="_project_8cpp_1a897aa047b58617a9acc187fc882e3bb4" kindref="member">GetActiveProject</ref>();</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!p)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track_factory" kindref="compound">TrackFactory</ref><sp/>*<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref><sp/>=<sp/>p-&gt;<ref refid="class_audacity_project_1a05d3d9ac4cafb63f987d3b2306c9059d" kindref="member">GetTrackFactory</ref>();</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!f)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*tmp<sp/>=<sp/>f-&gt;<ref refid="class_track_factory_1ab1cb74f7da7619abac80e7aa5ebaa5f2" kindref="member">NewWaveTrack</ref>(GetSampleFormat(),<sp/>GetRate());</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"></highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bResult<sp/>=<sp/>tmp-&gt;<ref refid="class_wave_track_1a2baf7d0d8cf05bb018ee3409ee5488cc" kindref="member">InsertSilence</ref>(0.0,<sp/>newT1<sp/>-<sp/>oldT1);</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxASSERT(bResult);<sp/></highlight><highlight class="comment">//<sp/>TO<sp/>DO:<sp/>Actually<sp/>handle<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxUnusedVar(bResult);</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp-&gt;<ref refid="class_wave_track_1af2ca2143f5fec142410d26cf064ec37c" kindref="member">Flush</ref>();</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bResult<sp/>=<sp/>Paste(oldT1,<sp/>tmp);</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxASSERT(bResult);<sp/></highlight><highlight class="comment">//<sp/>TO<sp/>DO:<sp/>Actually<sp/>handle<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxUnusedVar(bResult);</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>tmp;</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newT1<sp/>&lt;<sp/>oldT1)<sp/>{</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Clear(newT1,<sp/>oldT1);</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"></highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fall-through:<sp/>no<sp/>change</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1187"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"></highlight></codeline>
<codeline lineno="1189" refid="class_wave_track_1a98b8e8311e6b12bffd18a16b30302c8b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1a98b8e8311e6b12bffd18a16b30302c8b" kindref="member">WaveTrack::Paste</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*src)</highlight></codeline>
<codeline lineno="1190"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>editClipCanMove<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(wxT(</highlight><highlight class="stringliteral">&quot;/GUI/EditClipCanMove&quot;</highlight><highlight class="normal">),<sp/>&amp;editClipCanMove);</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"></highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>src<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>)</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"></highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(src-&gt;<ref refid="class_track_1ad71d0460cf42bcde59dcf600af7ef6b7" kindref="member">GetKind</ref>()<sp/>!=<sp/><ref refid="class_track_1a4a6604845139575dfc25be299aeb60efab39033be088537a007532668cb6d16a8" kindref="member">Track::Wave</ref>)</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"></highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*<sp/>other<sp/>=<sp/>(<ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*)src;</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"></highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Pasting<sp/>is<sp/>a<sp/>bit<sp/>complicated,<sp/>because<sp/>with<sp/>the<sp/>existence<sp/>of<sp/>multiclip<sp/>mode,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>must<sp/>guess<sp/>the<sp/>behaviour<sp/>the<sp/>user<sp/>wants.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Currently,<sp/>two<sp/>modes<sp/>are<sp/>implemented:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>If<sp/>a<sp/>single<sp/>clip<sp/>should<sp/>be<sp/>pasted,<sp/>and<sp/>it<sp/>should<sp/>be<sp/>pasted<sp/>inside<sp/>another</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>clip,<sp/>no<sp/>NEW<sp/>clips<sp/>are<sp/>generated.<sp/>The<sp/>audio<sp/>is<sp/>simply<sp/>inserted.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>This<sp/>resembles<sp/>the<sp/>old<sp/>(pre-multiclip<sp/>support)<sp/>behaviour.<sp/>However,<sp/>if</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>the<sp/>clip<sp/>is<sp/>pasted<sp/>outside<sp/>of<sp/>any<sp/>clip,<sp/>a<sp/>NEW<sp/>clip<sp/>is<sp/>generated.<sp/>This<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>the<sp/>only<sp/>behaviour<sp/>which<sp/>is<sp/>different<sp/>to<sp/>what<sp/>was<sp/>done<sp/>before,<sp/>but<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>shouldn&apos;t<sp/>confuse<sp/>users<sp/>too<sp/>much.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>If<sp/>multiple<sp/>clips<sp/>should<sp/>be<sp/>pasted,<sp/>or<sp/>a<sp/>single<sp/>clip<sp/>that<sp/>does<sp/>not<sp/>fill</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>duration<sp/>of<sp/>the<sp/>pasted<sp/>track,<sp/>these<sp/>are<sp/>always<sp/>pasted<sp/>as<sp/>single</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clips,<sp/>and<sp/>the<sp/>current<sp/>clip<sp/>is<sp/>splitted,<sp/>when<sp/>necessary.<sp/>This<sp/>may<sp/>seem</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>strange<sp/>at<sp/>first,<sp/>but<sp/>it<sp/>probably<sp/>is<sp/>better<sp/>than<sp/>trying<sp/>to<sp/>auto-merge</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>anything.<sp/>The<sp/>user<sp/>can<sp/>still<sp/>merge<sp/>the<sp/>clips<sp/>by<sp/>hand<sp/>(which<sp/>should<sp/>be<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>simple<sp/>command<sp/>reachable<sp/>by<sp/>a<sp/>hotkey<sp/>or<sp/>single<sp/>mouse<sp/>click).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1222"><highlight class="normal"></highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(other-&gt;<ref refid="class_wave_track_1a296527181493e5553b86d3447a03bf6d" kindref="member">GetNumClips</ref>()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;paste:<sp/>we<sp/>have<sp/>at<sp/>least<sp/>one<sp/>clip\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>singleClipMode<sp/>=<sp/>(other-&gt;<ref refid="class_wave_track_1a296527181493e5553b86d3447a03bf6d" kindref="member">GetNumClips</ref>()<sp/>==<sp/>1<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>other-&gt;<ref refid="class_wave_track_1acd39f4f01272e112a2d132e48b60678e" kindref="member">GetStartTime</ref>()<sp/>==<sp/>0.0);</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"></highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>insertDuration<sp/>=<sp/>other-&gt;<ref refid="class_wave_track_1a73f81dee4dcb79e0df3bb6a85b866ae1" kindref="member">GetEndTime</ref>();</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/>WaveClipList::compatibility_iterator<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>;</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"></highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;Check<sp/>if<sp/>we<sp/>need<sp/>to<sp/>make<sp/>room<sp/>for<sp/>the<sp/>pasted<sp/>data\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1235"><highlight class="normal"></highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>room<sp/>for<sp/>the<sp/>pasted<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(editClipCanMove)<sp/>{</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!singleClipMode)<sp/>{</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>need<sp/>to<sp/>insert<sp/>multiple<sp/>clips,<sp/>so<sp/>split<sp/>the<sp/>current<sp/>clip<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>move<sp/>everything<sp/>to<sp/>the<sp/>right,<sp/>then<sp/>try<sp/>to<sp/>paste<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!IsEmpty(t0,<sp/>GetEndTime()))<sp/>{</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*tmp<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Cut(t0,<sp/>GetEndTime()+1.0/mRate,<sp/>&amp;tmp);</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bResult<sp/>=<sp/>Paste(t0<sp/>+<sp/>insertDuration,<sp/>tmp);</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxASSERT(bResult);<sp/></highlight><highlight class="comment">//<sp/>TO<sp/>DO:<sp/>Actually<sp/>handle<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxUnusedVar(bResult);</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>tmp;</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>only<sp/>need<sp/>to<sp/>insert<sp/>one<sp/>single<sp/>clip,<sp/>so<sp/>just<sp/>move<sp/>all<sp/>clips</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>the<sp/>right<sp/>of<sp/>the<sp/>paste<sp/>point<sp/>out<sp/>of<sp/>the<sp/>way</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it=GetClipIterator();<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>;<sp/>it=it-&gt;GetNext())</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref>*<sp/>clip<sp/>=<sp/>it-&gt;GetData();</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clip-&gt;<ref refid="class_wave_clip_1a839a293df9246f7a9bb6fcf4d8be7b40" kindref="member">GetStartTime</ref>()<sp/>&gt;<sp/>t0-(1.0/mRate))</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clip-&gt;<ref refid="class_wave_clip_1a02ede29411c67eb9bc3193e6f1f453eb" kindref="member">Offset</ref>(insertDuration);</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"></highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(singleClipMode)</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Single<sp/>clip<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>printf(&quot;paste:<sp/>checking<sp/>for<sp/>single<sp/>clip<sp/>mode!\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1266"><highlight class="normal"></highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref><sp/>*insideClip<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"></highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it=GetClipIterator();<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>;<sp/>it=it-&gt;GetNext())</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref><sp/>*clip<sp/>=<sp/>it-&gt;GetData();</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"></highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(editClipCanMove)</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clip-&gt;<ref refid="class_wave_clip_1a1077591aea50132fb96b1345527b4110" kindref="member">WithinClip</ref>(t0))</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;t0=%.6f:<sp/>inside<sp/>clip<sp/>is<sp/>%.6f<sp/>...<sp/>%.6f\n&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>t0,<sp/>clip-&gt;GetStartTime(),<sp/>clip-&gt;GetEndTime());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>insideClip<sp/>=<sp/>clip;</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>clips<sp/>are<sp/>immovable<sp/>we<sp/>also<sp/>allow<sp/>prepending<sp/>to<sp/>clips</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clip-&gt;<ref refid="class_wave_clip_1a1077591aea50132fb96b1345527b4110" kindref="member">WithinClip</ref>(t0)<sp/>||</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TimeToLongSamples(t0)<sp/>==<sp/>clip-&gt;<ref refid="class_wave_clip_1a8c8c86f52d4722b09e9e0f562a4585e3" kindref="member">GetStartSample</ref>())</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>insideClip<sp/>=<sp/>clip;</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"></highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(insideClip)</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Exhibit<sp/>traditional<sp/>behaviour</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;paste:<sp/>traditional<sp/>behaviour\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!editClipCanMove)</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>did<sp/>not<sp/>move<sp/>other<sp/>clips<sp/>out<sp/>of<sp/>the<sp/>way<sp/>already,<sp/>so</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>if<sp/>we<sp/>can<sp/>paste<sp/>without<sp/>having<sp/>to<sp/>move<sp/>other<sp/>clips</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it=GetClipIterator();<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>;<sp/>it=it-&gt;GetNext())</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref><sp/>*clip<sp/>=<sp/>it-&gt;GetData();</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"></highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clip-&gt;<ref refid="class_wave_clip_1a839a293df9246f7a9bb6fcf4d8be7b40" kindref="member">GetStartTime</ref>()<sp/>&gt;<sp/>insideClip-&gt;<ref refid="class_wave_clip_1a839a293df9246f7a9bb6fcf4d8be7b40" kindref="member">GetStartTime</ref>()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>insideClip-&gt;<ref refid="class_wave_clip_1a7c878143bdd7641be183325944d02f39" kindref="member">GetEndTime</ref>()<sp/>+<sp/>insertDuration<sp/>&gt;</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clip-&gt;<ref refid="class_wave_clip_1a839a293df9246f7a9bb6fcf4d8be7b40" kindref="member">GetStartTime</ref>())</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxMessageBox(</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;There<sp/>is<sp/>not<sp/>enough<sp/>room<sp/>available<sp/>to<sp/>paste<sp/>the<sp/>selection&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Error&quot;</highlight><highlight class="normal">),<sp/>wxICON_STOP);</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"></highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>insideClip-&gt;<ref refid="class_wave_clip_1a72dc26a0e0eb5ac08696cee72c81b477" kindref="member">Paste</ref>(t0,<sp/>other-&gt;<ref refid="class_wave_track_1a5d0fc3eba22b8a63602e78776efd767a" kindref="member">GetClipByIndex</ref>(0));</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"></highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Just<sp/>fall<sp/>through<sp/>and<sp/>exhibit<sp/>NEW<sp/>behaviour</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"></highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>NEW<sp/>clips</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;paste:<sp/>multi<sp/>clip<sp/>mode!\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1326"><highlight class="normal"></highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!editClipCanMove<sp/>&amp;&amp;<sp/>!IsEmpty(t0,<sp/>t0+insertDuration-1.0/mRate))</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxMessageBox(</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;There<sp/>is<sp/>not<sp/>enough<sp/>room<sp/>available<sp/>to<sp/>paste<sp/>the<sp/>selection&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Error&quot;</highlight><highlight class="normal">),<sp/>wxICON_STOP);</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"></highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it=other-&gt;<ref refid="class_wave_track_1a40a351c828128e85e2ba993107b96ef3" kindref="member">GetClipIterator</ref>();<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>;<sp/>it=it-&gt;GetNext())</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref>*<sp/>clip<sp/>=<sp/>it-&gt;GetData();</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"></highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>AWD<sp/>Oct.<sp/>2009:<sp/>Don&apos;t<sp/>actually<sp/>paste<sp/>in<sp/>placeholder<sp/>clips</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!clip-&gt;<ref refid="class_wave_clip_1a81b17cb663222f323f01f3bcbf3a22c5" kindref="member">GetIsPlaceholder</ref>())</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref>*<sp/>newClip<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref>(*clip,<sp/>mDirManager);</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newClip-&gt;<ref refid="class_wave_clip_1ada848d3405e07d83918b614a42a1799b" kindref="member">Resample</ref>(mRate);</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newClip-&gt;<ref refid="class_wave_clip_1a02ede29411c67eb9bc3193e6f1f453eb" kindref="member">Offset</ref>(t0);</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newClip-&gt;<ref refid="class_wave_clip_1a272fcb9bb28b53329674c6ba14026c7b" kindref="member">MarkChanged</ref>();</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mClips.Append(newClip);</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1350"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"></highlight></codeline>
<codeline lineno="1352" refid="class_wave_track_1aa033919229edf163f5a484ac9a5d50e1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1aa033919229edf163f5a484ac9a5d50e1" kindref="member">WaveTrack::Silence</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1)</highlight></codeline>
<codeline lineno="1353"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t1<sp/>&lt;<sp/>t0)</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"></highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref><sp/>=<sp/>(<ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref>)floor(t0<sp/>*<sp/>mRate<sp/>+<sp/>0.5);</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref><sp/>=<sp/>(<ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref>)floor(t1<sp/>*<sp/>mRate<sp/>+<sp/>0.5)<sp/>-<sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>;</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"></highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(WaveClipList::compatibility_iterator<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>=GetClipIterator();<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>;<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>=<ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetNext())</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref><sp/>*clip<sp/>=<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetData();</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"></highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>clipStart<sp/>=<sp/>clip-&gt;<ref refid="class_wave_clip_1a8c8c86f52d4722b09e9e0f562a4585e3" kindref="member">GetStartSample</ref>();</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>clipEnd<sp/>=<sp/>clip-&gt;<ref refid="class_wave_clip_1ad629593dec3ed120a412c92d64500c11" kindref="member">GetEndSample</ref>();</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"></highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clipEnd<sp/>&gt;<sp/>start<sp/>&amp;&amp;<sp/>clipStart<sp/>&lt;<sp/>start+len)</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clip<sp/>sample<sp/>region<sp/>and<sp/>Get/Put<sp/>sample<sp/>region<sp/>overlap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>samplesToCopy<sp/>=<sp/>start+len<sp/>-<sp/>clipStart;</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(samplesToCopy<sp/>&gt;<sp/>clip-&gt;<ref refid="class_wave_clip_1a6cd003778b510cad742feaa5763c6ac2" kindref="member">GetNumSamples</ref>())</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>samplesToCopy<sp/>=<sp/>clip-&gt;<ref refid="class_wave_clip_1a6cd003778b510cad742feaa5763c6ac2" kindref="member">GetNumSamples</ref>();</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>inclipDelta<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>startDelta<sp/>=<sp/>clipStart<sp/>-<sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>;</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(startDelta<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inclipDelta<sp/>=<sp/>-startDelta;<sp/></highlight><highlight class="comment">//<sp/>make<sp/>positive<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>samplesToCopy<sp/>-=<sp/>inclipDelta;</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>startDelta<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"></highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!clip-&gt;<ref refid="class_wave_clip_1abd2e26af620a0406b2c45aca8736bd9a" kindref="member">GetSequence</ref>()-&gt;<ref refid="class_sequence_1a6ee7c8ee2f05c5fd9493ced6b45324a9" kindref="member">SetSilence</ref>(inclipDelta,<sp/>samplesToCopy))</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxASSERT(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>should<sp/>always<sp/>work</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clip-&gt;<ref refid="class_wave_clip_1a272fcb9bb28b53329674c6ba14026c7b" kindref="member">MarkChanged</ref>();</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"></highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1393"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"></highlight></codeline>
<codeline lineno="1395" refid="class_wave_track_1a2baf7d0d8cf05bb018ee3409ee5488cc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1a2baf7d0d8cf05bb018ee3409ee5488cc" kindref="member">WaveTrack::InsertSilence</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>)</highlight></codeline>
<codeline lineno="1396"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"></highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mClips.IsEmpty())</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Special<sp/>case<sp/>if<sp/>there<sp/>is<sp/>no<sp/>clip<sp/>yet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref>*<sp/>clip<sp/>=<sp/>CreateClip();</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>clip-&gt;<ref refid="class_wave_clip_1a3c7d2ee22cfb286a588c0f03abc5e470" kindref="member">InsertSilence</ref>(0,<sp/>len);</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"></highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(WaveClipList::compatibility_iterator<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>=GetClipIterator();<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>;<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>=<ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetNext())</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref><sp/>*clip<sp/>=<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetData();</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clip-&gt;<ref refid="class_wave_clip_1a52706d68f2addb697e9a4fb4d3c14220" kindref="member">BeforeClip</ref>(t))</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clip-&gt;<ref refid="class_wave_clip_1a02ede29411c67eb9bc3193e6f1f453eb" kindref="member">Offset</ref>(len);</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clip-&gt;<ref refid="class_wave_clip_1a1077591aea50132fb96b1345527b4110" kindref="member">WithinClip</ref>(t))</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!clip-&gt;<ref refid="class_wave_clip_1a3c7d2ee22cfb286a588c0f03abc5e470" kindref="member">InsertSilence</ref>(t,<sp/>len))<sp/>{</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"></highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1421"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"></highlight></codeline>
<codeline lineno="1423"><highlight class="normal"></highlight><highlight class="comment">//Performs<sp/>the<sp/>opposite<sp/>of<sp/>Join</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1424"><highlight class="normal"></highlight><highlight class="comment">//Analyses<sp/>selected<sp/>region<sp/>for<sp/>possible<sp/>Joined<sp/>clips<sp/>and<sp/>disjoins<sp/>them</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1425" refid="class_wave_track_1aa717acd203bf249faa871a6871f6397f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1aa717acd203bf249faa871a6871f6397f" kindref="member">WaveTrack::Disjoin</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1)</highlight></codeline>
<codeline lineno="1426"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>minSamples<sp/>=<sp/>TimeToLongSamples(<sp/><ref refid="_wave_track_8h_1a49de0e8a9d91fb9eb450291e4e230b8b" kindref="member">WAVETRACK_MERGE_POINT_TOLERANCE</ref><sp/>);</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>maxAtOnce<sp/>=<sp/>1048576;</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[<sp/>maxAtOnce<sp/>];</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_regions" kindref="compound">Regions</ref><sp/>regions;</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"></highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/>wxBusyCursor<sp/>busy;</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"></highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>WaveClipList::compatibility_iterator<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref><sp/>=<sp/>GetClipIterator();<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>;<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref><sp/>=<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetNext()<sp/>)</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref><sp/>*clip<sp/>=<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetData();</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"></highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>startTime<sp/>=<sp/>clip-&gt;<ref refid="class_wave_clip_1a839a293df9246f7a9bb6fcf4d8be7b40" kindref="member">GetStartTime</ref>();</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>endTime<sp/>=<sp/>clip-&gt;<ref refid="class_wave_clip_1a7c878143bdd7641be183325944d02f39" kindref="member">GetEndTime</ref>();</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"></highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>endTime<sp/>&lt;<sp/>t0<sp/>||<sp/>startTime<sp/>&gt;<sp/>t1<sp/>)</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"></highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>t0<sp/>&gt;<sp/>startTime<sp/>)</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>startTime<sp/>=<sp/>t0;</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>t1<sp/>&lt;<sp/>endTime<sp/>)</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endTime<sp/>=<sp/>t1;</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"></highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//simply<sp/>look<sp/>for<sp/>a<sp/>sequence<sp/>of<sp/>zeroes<sp/>and<sp/>if<sp/>the<sp/>sequence</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//is<sp/>greater<sp/>than<sp/>minimum<sp/>number,<sp/>split-DELETE<sp/>the<sp/>region</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1451"><highlight class="normal"></highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>seqStart<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>,<sp/><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>;</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>clip-&gt;<ref refid="class_wave_clip_1a391ab35fa8e9cc0549060cf46e4b5ba4" kindref="member">TimeToSamplesClip</ref>(<sp/>startTime,<sp/>&amp;start<sp/>);</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>clip-&gt;<ref refid="class_wave_clip_1a391ab35fa8e9cc0549060cf46e4b5ba4" kindref="member">TimeToSamplesClip</ref>(<sp/>endTime,<sp/>&amp;end<sp/>);</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"></highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref><sp/>=<sp/>(<sp/>end<sp/>-<sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref><sp/>);</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="midiclock_8c_1a5f689029e53f12e337967312e0a17717" kindref="member">done</ref><sp/>=<sp/>0;<sp/><ref refid="midiclock_8c_1a5f689029e53f12e337967312e0a17717" kindref="member">done</ref><sp/>&lt;<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;<sp/><ref refid="midiclock_8c_1a5f689029e53f12e337967312e0a17717" kindref="member">done</ref><sp/>+=<sp/>maxAtOnce<sp/>)</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>numSamples<sp/>=<sp/>maxAtOnce;</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><ref refid="midiclock_8c_1a5f689029e53f12e337967312e0a17717" kindref="member">done</ref><sp/>+<sp/>maxAtOnce<sp/>&gt;<sp/>len<sp/>)</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numSamples<sp/>=<sp/>len<sp/>-<sp/><ref refid="midiclock_8c_1a5f689029e53f12e337967312e0a17717" kindref="member">done</ref>;</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"></highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clip-&gt;<ref refid="class_wave_clip_1a7909b8a8e1bac5eea9e4bc422b021a59" kindref="member">GetSamples</ref>(<sp/>(<sp/><ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref><sp/>)buffer,<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>,<sp/>start<sp/>+<sp/>done,</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numSamples<sp/>);</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>numSamples;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++<sp/>)</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>curSamplePos<sp/>=<sp/>start<sp/>+<sp/>done<sp/>+<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"></highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//start<sp/>a<sp/>NEW<sp/>sequence</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>buffer[<sp/>i<sp/>]<sp/>==<sp/>0.0<sp/>&amp;&amp;<sp/>seqStart<sp/>==<sp/>-1<sp/>)</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seqStart<sp/>=<sp/>curSamplePos;</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>buffer[<sp/>i<sp/>]<sp/>!=<sp/>0.0<sp/>||<sp/>curSamplePos<sp/>==<sp/>end<sp/>-<sp/>1<sp/>)</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>seqStart<sp/>!=<sp/>-1<sp/>)</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>seqEnd;</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"></highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//consider<sp/>the<sp/>end<sp/>case,<sp/>where<sp/>selection<sp/>ends<sp/>in<sp/>zeroes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>curSamplePos<sp/>==<sp/>end<sp/>-<sp/>1<sp/>&amp;&amp;<sp/>buffer[<sp/>i<sp/>]<sp/>==<sp/>0.0<sp/>)</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seqEnd<sp/>=<sp/><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>;</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seqEnd<sp/>=<sp/>curSamplePos;</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>seqEnd<sp/>-<sp/>seqStart<sp/>+<sp/>1<sp/>&gt;<sp/>minSamples<sp/>)</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>regions.push_back(<ref refid="_v_s_t_control_g_t_k_8h_1a1fea9f23277a9588e3a7adbc48b50e4c" kindref="member">Region</ref>(</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seqStart<sp/>/<sp/>GetRate()<sp/>+<sp/>clip-&gt;<ref refid="class_wave_clip_1a839a293df9246f7a9bb6fcf4d8be7b40" kindref="member">GetStartTime</ref>(),</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seqEnd<sp/>/<sp/>GetRate()<sp/>+<sp/>clip-&gt;<ref refid="class_wave_clip_1a839a293df9246f7a9bb6fcf4d8be7b40" kindref="member">GetStartTime</ref>()));</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seqStart<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"></highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>regions.size();<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++<sp/>)</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_region" kindref="compound">Region</ref><sp/>&amp;region<sp/>=<sp/>regions.at(<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>);</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>SplitDelete(region.<ref refid="struct_region_1a2241d9f45df2ea4dde3bd752bcb079c0" kindref="member">start</ref>,<sp/>region.<ref refid="struct_region_1ae97386d49f9f1ee231793ae71dd990d0" kindref="member">end</ref><sp/>);</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"></highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/><ref refid="recplay_8c_1adbbab5cb2248179d231690a1a02ff977" kindref="member">buffer</ref>;</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1505"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"></highlight></codeline>
<codeline lineno="1507" refid="class_wave_track_1a7109457670c515101a52f625c0c14334" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1a7109457670c515101a52f625c0c14334" kindref="member">WaveTrack::Join</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1)</highlight></codeline>
<codeline lineno="1508"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Merge<sp/>all<sp/>WaveClips<sp/>overlapping<sp/>selection<sp/>into<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1510"><highlight class="normal"></highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/>WaveClipList::compatibility_iterator<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>;</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/>WaveClipList<sp/>clipsToDelete;</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref><sp/>*newClip;</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"></highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it=GetClipIterator();<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>;<sp/>it=it-&gt;GetNext())</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref><sp/>*clip<sp/>=<sp/>it-&gt;GetData();</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"></highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clip-&gt;<ref refid="class_wave_clip_1a839a293df9246f7a9bb6fcf4d8be7b40" kindref="member">GetStartTime</ref>()<sp/>&lt;<sp/>t1-(1.0/mRate)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clip-&gt;<ref refid="class_wave_clip_1a7c878143bdd7641be183325944d02f39" kindref="member">GetEndTime</ref>()-(1.0/mRate)<sp/>&gt;<sp/>t0)<sp/>{</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"></highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Put<sp/>in<sp/>sorted<sp/>order</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;<sp/>i&lt;(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)clipsToDelete.GetCount();<sp/>i++)</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clipsToDelete[i]-&gt;GetStartTime()<sp/>&gt;<sp/>clip-&gt;<ref refid="class_wave_clip_1a839a293df9246f7a9bb6fcf4d8be7b40" kindref="member">GetStartTime</ref>())</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;Insert<sp/>clip<sp/>%.6f<sp/>at<sp/>position<sp/>%d\n&quot;,<sp/>clip-&gt;GetStartTime(),<sp/>i);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clipsToDelete.Insert(i,<sp/>clip);</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"></highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>there<sp/>are<sp/>no<sp/>clips<sp/>to<sp/>DELETE,<sp/>nothing<sp/>to<sp/>do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>clipsToDelete.GetCount()<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"></highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/>newClip<sp/>=<sp/>CreateClip();</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref><sp/>=<sp/>clipsToDelete[0]-&gt;GetOffset();</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/>newClip-&gt;<ref refid="class_wave_clip_1ac0c4ce7ebbc00afa175813f60bd97019" kindref="member">SetOffset</ref>(t);</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(it=clipsToDelete.GetFirst();<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>;<sp/>it=it-&gt;GetNext())</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref><sp/>*clip<sp/>=<sp/>it-&gt;GetData();</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"></highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;t=%.6f<sp/>adding<sp/>clip<sp/>(offset<sp/>%.6f,<sp/>%.6f<sp/>...<sp/>%.6f)\n&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>t,<sp/>clip-&gt;GetOffset(),<sp/>clip-&gt;GetStartTime(),<sp/>clip-&gt;GetEndTime());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1545"><highlight class="normal"></highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clip-&gt;<ref refid="class_wave_clip_1a070d7b2328a78c6ddaecc2f60ad4567f" kindref="member">GetOffset</ref>()<sp/>-<sp/>t<sp/>&gt;<sp/>(1.0<sp/>/<sp/>mRate))<sp/>{</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>addedSilence<sp/>=<sp/>(clip-&gt;<ref refid="class_wave_clip_1a070d7b2328a78c6ddaecc2f60ad4567f" kindref="member">GetOffset</ref>()<sp/>-<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>);</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;Adding<sp/>%.6f<sp/>seconds<sp/>of<sp/>silence\n&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bResult<sp/>=<sp/>newClip-&gt;<ref refid="class_wave_clip_1a3c7d2ee22cfb286a588c0f03abc5e470" kindref="member">InsertSilence</ref>(t,<sp/>addedSilence);</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxASSERT(bResult);<sp/></highlight><highlight class="comment">//<sp/>TO<sp/>DO:<sp/>Actually<sp/>handle<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxUnusedVar(bResult);</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>+=<sp/>addedSilence;</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"></highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//printf(&quot;Pasting<sp/>at<sp/>%.6f\n&quot;,<sp/>t);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bResult<sp/>=<sp/>newClip-&gt;<ref refid="class_wave_clip_1a72dc26a0e0eb5ac08696cee72c81b477" kindref="member">Paste</ref>(t,<sp/>clip);</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxASSERT(bResult);<sp/></highlight><highlight class="comment">//<sp/>TO<sp/>DO:<sp/>Actually<sp/>handle<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxUnusedVar(bResult);</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>newClip-&gt;<ref refid="class_wave_clip_1a7c878143bdd7641be183325944d02f39" kindref="member">GetEndTime</ref>();</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"></highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mClips.DeleteObject(clip);</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>clip;</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"></highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1566"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"></highlight></codeline>
<codeline lineno="1568" refid="class_wave_track_1adc09591a8d9b92cbbed08d8ccf28bac5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1adc09591a8d9b92cbbed08d8ccf28bac5" kindref="member">WaveTrack::Append</ref>(<ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref><sp/><ref refid="structbuffer" kindref="compound">buffer</ref>,<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792" kindref="member">sampleFormat</ref><sp/><ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref>,</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride<sp/></highlight><highlight class="comment">/*<sp/>=<sp/>1<sp/>*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_x_m_l_writer" kindref="compound">XMLWriter</ref><sp/>*blockFileLog<sp/></highlight><highlight class="comment">/*<sp/>=<sp/>NULL<sp/>*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1571"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>RightmostOrNewClip()-&gt;Append(buffer,<sp/>format,<sp/>len,<sp/>stride,</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blockFileLog);</highlight></codeline>
<codeline lineno="1574"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"></highlight></codeline>
<codeline lineno="1576" refid="class_wave_track_1a1be99bf9423f1cd5bf86ffdb4320d1cf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1a1be99bf9423f1cd5bf86ffdb4320d1cf" kindref="member">WaveTrack::AppendAlias</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;fName,<sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>,</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channel,</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useOD)</highlight></codeline>
<codeline lineno="1578"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>RightmostOrNewClip()-&gt;AppendAlias(fName,<sp/>start,<sp/>len,<sp/>channel,<sp/>useOD);</highlight></codeline>
<codeline lineno="1580"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"></highlight></codeline>
<codeline lineno="1582"><highlight class="normal"></highlight></codeline>
<codeline lineno="1583" refid="class_wave_track_1a56c95e5c6b671b69de16590932fb0b76" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1a56c95e5c6b671b69de16590932fb0b76" kindref="member">WaveTrack::AppendCoded</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;fName,<sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>,</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channel,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>decodeType)</highlight></codeline>
<codeline lineno="1585"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>RightmostOrNewClip()-&gt;AppendCoded(fName,<sp/>start,<sp/>len,<sp/>channel,<sp/>decodeType);</highlight></codeline>
<codeline lineno="1587"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"></highlight></codeline>
<codeline lineno="1590" refid="class_wave_track_1a56ce9eef3a87624a428a0c44058a8484" refkind="member"><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1a56ce9eef3a87624a428a0c44058a8484" kindref="member">WaveTrack::GetODFlags</ref>()</highlight></codeline>
<codeline lineno="1591"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(WaveClipList::compatibility_iterator<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>=GetClipIterator();<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>;<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>=<ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetNext())</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref>*<sp/>clip<sp/>=<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetData();</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>ret<sp/>|<sp/>clip-&gt;<ref refid="class_wave_clip_1abd2e26af620a0406b2c45aca8736bd9a" kindref="member">GetSequence</ref>()-&gt;<ref refid="class_sequence_1a4d5686aaba2fb7bc284d07e196085f84" kindref="member">GetODFlags</ref>();</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="1599"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"></highlight></codeline>
<codeline lineno="1601"><highlight class="normal"></highlight></codeline>
<codeline lineno="1602" refid="class_wave_track_1ae8a803fab37d72e446c024d1fcc20264" refkind="member"><highlight class="normal"><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="class_wave_track_1ae8a803fab37d72e446c024d1fcc20264" kindref="member">WaveTrack::GetBlockStart</ref>(<ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1603"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(WaveClipList::compatibility_iterator<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref><sp/>=<sp/>const_cast&lt;WaveTrack&amp;&gt;(*this).GetClipIterator();</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>;<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref><sp/>=<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetNext())</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref>*<sp/>clip<sp/>=<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetData();</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>startSample<sp/>=<sp/>(<ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref>)floor(0.5<sp/>+<sp/>clip-&gt;<ref refid="class_wave_clip_1a839a293df9246f7a9bb6fcf4d8be7b40" kindref="member">GetStartTime</ref>()*mRate);</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>endSample<sp/>=<sp/>startSample<sp/>+<sp/>clip-&gt;<ref refid="class_wave_clip_1a6cd003778b510cad742feaa5763c6ac2" kindref="member">GetNumSamples</ref>();</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s<sp/>&gt;=<sp/>startSample<sp/>&amp;&amp;<sp/>s<sp/>&lt;<sp/>endSample)</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>startSample<sp/>+<sp/>clip-&gt;<ref refid="class_wave_clip_1abd2e26af620a0406b2c45aca8736bd9a" kindref="member">GetSequence</ref>()-&gt;<ref refid="class_sequence_1aab2ccf5d73433f7b1ebb21fbd98fbc4b" kindref="member">GetBlockStart</ref>(s<sp/>-<sp/>startSample);</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"></highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1615"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"></highlight></codeline>
<codeline lineno="1617" refid="class_wave_track_1afe9a831f943117dc2f818d0d003c4475" refkind="member"><highlight class="normal"><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="class_wave_track_1afe9a831f943117dc2f818d0d003c4475" kindref="member">WaveTrack::GetBestBlockSize</ref>(<ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1618"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>bestBlockSize<sp/>=<sp/>GetMaxBlockSize();</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"></highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(WaveClipList::compatibility_iterator<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref><sp/>=<sp/>const_cast&lt;WaveTrack&amp;&gt;(*this).GetClipIterator();</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>;<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref><sp/>=<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetNext())</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref>*<sp/>clip<sp/>=<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetData();</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>startSample<sp/>=<sp/>(<ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref>)floor(clip-&gt;<ref refid="class_wave_clip_1a839a293df9246f7a9bb6fcf4d8be7b40" kindref="member">GetStartTime</ref>()*mRate<sp/>+<sp/>0.5);</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>endSample<sp/>=<sp/>startSample<sp/>+<sp/>clip-&gt;<ref refid="class_wave_clip_1a6cd003778b510cad742feaa5763c6ac2" kindref="member">GetNumSamples</ref>();</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s<sp/>&gt;=<sp/>startSample<sp/>&amp;&amp;<sp/>s<sp/>&lt;<sp/>endSample)</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bestBlockSize<sp/>=<sp/>clip-&gt;<ref refid="class_wave_clip_1abd2e26af620a0406b2c45aca8736bd9a" kindref="member">GetSequence</ref>()-&gt;<ref refid="class_sequence_1a76954c104c6d8649510340c47595a870" kindref="member">GetBestBlockSize</ref>(s<sp/>-<sp/>startSample);</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"></highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bestBlockSize;</highlight></codeline>
<codeline lineno="1635"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"></highlight></codeline>
<codeline lineno="1637" refid="class_wave_track_1a59ca00cf8abf1c28d043effec2866870" refkind="member"><highlight class="normal"><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="class_wave_track_1a59ca00cf8abf1c28d043effec2866870" kindref="member">WaveTrack::GetMaxBlockSize</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1638"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxblocksize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(WaveClipList::compatibility_iterator<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref><sp/>=<sp/>const_cast&lt;WaveTrack&amp;&gt;(*this).GetClipIterator();</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>;<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref><sp/>=<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetNext())</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref>*<sp/>clip<sp/>=<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetData();</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clip-&gt;<ref refid="class_wave_clip_1abd2e26af620a0406b2c45aca8736bd9a" kindref="member">GetSequence</ref>()-&gt;<ref refid="class_sequence_1ab55738fa6a1ca2941242bae22a37c343" kindref="member">GetMaxBlockSize</ref>()<sp/>&gt;<sp/>maxblocksize)</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxblocksize<sp/>=<sp/>clip-&gt;<ref refid="class_wave_clip_1abd2e26af620a0406b2c45aca8736bd9a" kindref="member">GetSequence</ref>()-&gt;<ref refid="class_sequence_1ab55738fa6a1ca2941242bae22a37c343" kindref="member">GetMaxBlockSize</ref>();</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"></highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(maxblocksize<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>really<sp/>need<sp/>the<sp/>maximum<sp/>block<sp/>size,<sp/>so<sp/>create<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>temporary<sp/>sequence<sp/>to<sp/>get<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>maxblocksize<sp/>=<sp/><ref refid="class_sequence" kindref="compound">Sequence</ref>{<sp/>mDirManager,<sp/>mFormat<sp/>}.GetMaxBlockSize();</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"></highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/>wxASSERT(maxblocksize<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"></highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>maxblocksize;</highlight></codeline>
<codeline lineno="1658"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"></highlight></codeline>
<codeline lineno="1660" refid="class_wave_track_1af1df93d6e053c30b707c53f6d224f104" refkind="member"><highlight class="normal"><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="class_wave_track_1af1df93d6e053c30b707c53f6d224f104" kindref="member">WaveTrack::GetIdealBlockSize</ref>()</highlight></codeline>
<codeline lineno="1661"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NewestOrNewClip()-&gt;GetSequence()-&gt;GetIdealBlockSize();</highlight></codeline>
<codeline lineno="1663"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"></highlight></codeline>
<codeline lineno="1665" refid="class_wave_track_1af2ca2143f5fec142410d26cf064ec37c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1af2ca2143f5fec142410d26cf064ec37c" kindref="member">WaveTrack::Flush</ref>()</highlight></codeline>
<codeline lineno="1666"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>After<sp/>appending,<sp/>presumably.<sp/><sp/>Do<sp/>this<sp/>to<sp/>the<sp/>clip<sp/>that<sp/>gets<sp/>appended.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>RightmostOrNewClip()-&gt;Flush();</highlight></codeline>
<codeline lineno="1669"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"></highlight></codeline>
<codeline lineno="1671" refid="class_wave_track_1a8914c769a559d645dbace68f0f56fb8a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1a8914c769a559d645dbace68f0f56fb8a" kindref="member">WaveTrack::HandleXMLTag</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxChar<sp/>*<ref refid="structtag" kindref="compound">tag</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxChar<sp/>**attrs)</highlight></codeline>
<codeline lineno="1672"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wxStrcmp(tag,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;wavetrack&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dblValue;</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>nValue;</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(*attrs)<sp/>{</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxChar<sp/>*attr<sp/>=<sp/>*attrs++;</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxChar<sp/>*<ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref><sp/>=<sp/>*attrs++;</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"></highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!value)</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"></highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>strValue<sp/>=<sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wxStrcmp(attr,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;rate&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mRate<sp/>is<sp/>an<sp/>int,<sp/>but<sp/>&quot;rate&quot;<sp/>in<sp/>the<sp/>project<sp/>file<sp/>is<sp/>a<sp/>float.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_x_m_l_value_checker_1adf2bcfece118875538ca2bdd528b8c23" kindref="member">XMLValueChecker::IsGoodString</ref>(strValue)<sp/>||</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="class_internat_1ab79e779c79e9ddf82270cb78e78d638d" kindref="member">Internat::CompatibleToDouble</ref>(strValue,<sp/>&amp;dblValue)<sp/>||</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(dblValue<sp/>&lt;<sp/>1.0)<sp/>||<sp/>(dblValue<sp/>&gt;<sp/>1000000.0))<sp/></highlight><highlight class="comment">//<sp/>allow<sp/>a<sp/>large<sp/>range<sp/>to<sp/>be<sp/>read</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mRate<sp/>=<sp/><ref refid="real_8h_1a01a38abe6848b3731344a2891c357d42" kindref="member">lrint</ref>(dblValue);</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wxStrcmp(attr,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;offset&quot;</highlight><highlight class="normal">))<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_x_m_l_value_checker_1adf2bcfece118875538ca2bdd528b8c23" kindref="member">XMLValueChecker::IsGoodString</ref>(strValue)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_internat_1ab79e779c79e9ddf82270cb78e78d638d" kindref="member">Internat::CompatibleToDouble</ref>(strValue,<sp/>&amp;dblValue))</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Offset<sp/>is<sp/>only<sp/>relevant<sp/>for<sp/>legacy<sp/>project<sp/>files.<sp/>The<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>cached<sp/>until<sp/>the<sp/>actual<sp/>WaveClip<sp/>containing<sp/>the<sp/>legacy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>track<sp/>is<sp/>created.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mLegacyProjectFileOffset<sp/>=<sp/>dblValue;</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wxStrcmp(attr,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;mute&quot;</highlight><highlight class="normal">))<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_x_m_l_value_checker_1adc0cf9db4d3e99dfdc8c82144e129103" kindref="member">XMLValueChecker::IsGoodInt</ref>(strValue)<sp/>&amp;&amp;<sp/>strValue.ToLong(&amp;nValue))</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mMute<sp/>=<sp/>(nValue<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wxStrcmp(attr,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;solo&quot;</highlight><highlight class="normal">))<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_x_m_l_value_checker_1adc0cf9db4d3e99dfdc8c82144e129103" kindref="member">XMLValueChecker::IsGoodInt</ref>(strValue)<sp/>&amp;&amp;<sp/>strValue.ToLong(&amp;nValue))</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mSolo<sp/>=<sp/>(nValue<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wxStrcmp(attr,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;height&quot;</highlight><highlight class="normal">))<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_x_m_l_value_checker_1adc0cf9db4d3e99dfdc8c82144e129103" kindref="member">XMLValueChecker::IsGoodInt</ref>(strValue)<sp/>&amp;&amp;<sp/>strValue.ToLong(&amp;nValue))</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mHeight<sp/>=<sp/>nValue;</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wxStrcmp(attr,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;minimized&quot;</highlight><highlight class="normal">))<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_x_m_l_value_checker_1adc0cf9db4d3e99dfdc8c82144e129103" kindref="member">XMLValueChecker::IsGoodInt</ref>(strValue)<sp/>&amp;&amp;<sp/>strValue.ToLong(&amp;nValue))</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mMinimized<sp/>=<sp/>(nValue<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wxStrcmp(attr,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;isSelected&quot;</highlight><highlight class="normal">))<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_x_m_l_value_checker_1adc0cf9db4d3e99dfdc8c82144e129103" kindref="member">XMLValueChecker::IsGoodInt</ref>(strValue)<sp/>&amp;&amp;<sp/>strValue.ToLong(&amp;nValue))</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;SetSelected(nValue<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wxStrcmp(attr,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;gain&quot;</highlight><highlight class="normal">))<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_x_m_l_value_checker_1adf2bcfece118875538ca2bdd528b8c23" kindref="member">XMLValueChecker::IsGoodString</ref>(strValue)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_internat_1ab79e779c79e9ddf82270cb78e78d638d" kindref="member">Internat::CompatibleToDouble</ref>(strValue,<sp/>&amp;dblValue))</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mGain<sp/>=<sp/>dblValue;</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wxStrcmp(attr,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;pan&quot;</highlight><highlight class="normal">))<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_x_m_l_value_checker_1adf2bcfece118875538ca2bdd528b8c23" kindref="member">XMLValueChecker::IsGoodString</ref>(strValue)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_internat_1ab79e779c79e9ddf82270cb78e78d638d" kindref="member">Internat::CompatibleToDouble</ref>(strValue,<sp/>&amp;dblValue)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(dblValue<sp/>&gt;=<sp/>-1.0)<sp/>&amp;&amp;<sp/>(dblValue<sp/>&lt;=<sp/>1.0))</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mPan<sp/>=<sp/>dblValue;</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wxStrcmp(attr,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">))<sp/>&amp;&amp;<sp/><ref refid="class_x_m_l_value_checker_1adf2bcfece118875538ca2bdd528b8c23" kindref="member">XMLValueChecker::IsGoodString</ref>(strValue))</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mName<sp/>=<sp/>strValue;</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wxStrcmp(attr,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;channel&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_x_m_l_value_checker_1adc0cf9db4d3e99dfdc8c82144e129103" kindref="member">XMLValueChecker::IsGoodInt</ref>(strValue)<sp/>||<sp/>!strValue.ToLong(&amp;nValue)<sp/>||</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="class_x_m_l_value_checker_1a391cb5648030e28716d3775e8b4dd955" kindref="member">XMLValueChecker::IsValidChannel</ref>(nValue))</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mChannel<sp/>=<sp/>nValue;</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wxStrcmp(attr,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;linked&quot;</highlight><highlight class="normal">))<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_x_m_l_value_checker_1adc0cf9db4d3e99dfdc8c82144e129103" kindref="member">XMLValueChecker::IsGoodInt</ref>(strValue)<sp/>&amp;&amp;<sp/>strValue.ToLong(&amp;nValue))</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SetLinked(nValue<sp/>!=<sp/>0);</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wxStrcmp(attr,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;autosaveid&quot;</highlight><highlight class="normal">))<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_x_m_l_value_checker_1adc0cf9db4d3e99dfdc8c82144e129103" kindref="member">XMLValueChecker::IsGoodInt</ref>(strValue)<sp/>&amp;&amp;<sp/>strValue.ToLong(&amp;nValue))</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mAutoSaveIdent<sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>nValue;</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"></highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>while</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1743"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_OUTPUT_DISPLAY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>VirtualStereoInit();</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"></highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1750"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"></highlight></codeline>
<codeline lineno="1752" refid="class_wave_track_1ad71b41c39dce899dba1ef7418b2cd54e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1ad71b41c39dce899dba1ef7418b2cd54e" kindref="member">WaveTrack::HandleXMLEndTag</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxChar<sp/>*<sp/>WXUNUSED(<ref refid="structtag" kindref="compound">tag</ref>))</highlight></codeline>
<codeline lineno="1753"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>case<sp/>we<sp/>opened<sp/>a<sp/>pre-multiclip<sp/>project,<sp/>we<sp/>need<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>simulate<sp/>closing<sp/>the<sp/>waveclip<sp/>tag.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/><sp/>NewestOrNewClip()-&gt;HandleXMLEndTag(wxT(</highlight><highlight class="stringliteral">&quot;waveclip&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1757"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"></highlight></codeline>
<codeline lineno="1759" refid="class_wave_track_1a1ccd263058aa228a709301e5c442afe2" refkind="member"><highlight class="normal"><ref refid="class_x_m_l_tag_handler" kindref="compound">XMLTagHandler</ref><sp/>*<ref refid="class_wave_track_1a1ccd263058aa228a709301e5c442afe2" kindref="member">WaveTrack::HandleXMLChild</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxChar<sp/>*<ref refid="structtag" kindref="compound">tag</ref>)</highlight></codeline>
<codeline lineno="1760"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>legacy<sp/>code<sp/>(1.2<sp/>and<sp/>previous)<sp/>and<sp/>is<sp/>not<sp/>called<sp/>for<sp/>NEW<sp/>projects!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wxStrcmp(tag,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;sequence&quot;</highlight><highlight class="normal">))<sp/>||<sp/>!wxStrcmp(tag,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;envelope&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>a<sp/>legacy<sp/>project,<sp/>so<sp/>set<sp/>the<sp/>cached<sp/>offset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>NewestOrNewClip()-&gt;SetOffset(mLegacyProjectFileOffset);</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"></highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Legacy<sp/>project<sp/>file<sp/>tracks<sp/>are<sp/>imported<sp/>as<sp/>one<sp/>single<sp/>wave<sp/>clip</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wxStrcmp(tag,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;sequence&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NewestOrNewClip()-&gt;GetSequence();</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wxStrcmp(tag,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;envelope&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NewestOrNewClip()-&gt;GetEnvelope();</highlight></codeline>
<codeline lineno="1774"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1775"><highlight class="normal"></highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>JKC...<sp/>for<sp/>1.1.0,<sp/>one<sp/>step<sp/>better<sp/>than<sp/>what<sp/>we<sp/>had,<sp/>but<sp/>still<sp/>badly<sp/>broken.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//If<sp/>we<sp/>see<sp/>a<sp/>waveblock<sp/>at<sp/>this<sp/>level,<sp/>we&apos;d<sp/>better<sp/>generate<sp/>a<sp/>sequence.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!wxStrcmp(<sp/>tag,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;waveblock&quot;</highlight><highlight class="normal"><sp/>)))</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>a<sp/>legacy<sp/>project,<sp/>so<sp/>set<sp/>the<sp/>cached<sp/>offset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>NewestOrNewClip()-&gt;SetOffset(mLegacyProjectFileOffset);</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sequence" kindref="compound">Sequence</ref><sp/>*pSeq<sp/>=<sp/>NewestOrNewClip()-&gt;GetSequence();</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pSeq;</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"></highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>for<sp/>the<sp/>NEW<sp/>file<sp/>format<sp/>(post-1.2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wxStrcmp(tag,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;waveclip&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CreateClip();</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1793"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"></highlight></codeline>
<codeline lineno="1795" refid="class_wave_track_1aebbe78d1db8eb38b330686c799456a0d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1aebbe78d1db8eb38b330686c799456a0d" kindref="member">WaveTrack::WriteXML</ref>(<ref refid="class_x_m_l_writer" kindref="compound">XMLWriter</ref><sp/>&amp;xmlFile)</highlight></codeline>
<codeline lineno="1796"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a38abb8ecc4a15db0272d43ff8bec1369" kindref="member">StartTag</ref>(wxT(</highlight><highlight class="stringliteral">&quot;wavetrack&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mAutoSaveIdent)</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a631a2d04a50680a64f0ae48a61d4a4d1" kindref="member">WriteAttr</ref>(wxT(</highlight><highlight class="stringliteral">&quot;autosaveid&quot;</highlight><highlight class="normal">),<sp/>mAutoSaveIdent);</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a631a2d04a50680a64f0ae48a61d4a4d1" kindref="member">WriteAttr</ref>(wxT(</highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">),<sp/>mName);</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a631a2d04a50680a64f0ae48a61d4a4d1" kindref="member">WriteAttr</ref>(wxT(</highlight><highlight class="stringliteral">&quot;channel&quot;</highlight><highlight class="normal">),<sp/>mChannel);</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a631a2d04a50680a64f0ae48a61d4a4d1" kindref="member">WriteAttr</ref>(wxT(</highlight><highlight class="stringliteral">&quot;linked&quot;</highlight><highlight class="normal">),<sp/>mLinked);</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a631a2d04a50680a64f0ae48a61d4a4d1" kindref="member">WriteAttr</ref>(wxT(</highlight><highlight class="stringliteral">&quot;mute&quot;</highlight><highlight class="normal">),<sp/>mMute);</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a631a2d04a50680a64f0ae48a61d4a4d1" kindref="member">WriteAttr</ref>(wxT(</highlight><highlight class="stringliteral">&quot;solo&quot;</highlight><highlight class="normal">),<sp/>mSolo);</highlight></codeline>
<codeline lineno="1807"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_OUTPUT_DISPLAY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height;</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(MONO_PAN)</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>height<sp/>=<sp/>mHeight<sp/>+<sp/>mHeightv;</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>height<sp/>=<sp/>this-&gt;GetActualHeight();</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a631a2d04a50680a64f0ae48a61d4a4d1" kindref="member">WriteAttr</ref>(wxT(</highlight><highlight class="stringliteral">&quot;height&quot;</highlight><highlight class="normal">),<sp/>height);</highlight></codeline>
<codeline lineno="1814"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a631a2d04a50680a64f0ae48a61d4a4d1" kindref="member">WriteAttr</ref>(wxT(</highlight><highlight class="stringliteral">&quot;height&quot;</highlight><highlight class="normal">),<sp/>this-&gt;GetActualHeight());</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a631a2d04a50680a64f0ae48a61d4a4d1" kindref="member">WriteAttr</ref>(wxT(</highlight><highlight class="stringliteral">&quot;minimized&quot;</highlight><highlight class="normal">),<sp/>this-&gt;GetMinimized());</highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a631a2d04a50680a64f0ae48a61d4a4d1" kindref="member">WriteAttr</ref>(wxT(</highlight><highlight class="stringliteral">&quot;isSelected&quot;</highlight><highlight class="normal">),<sp/>this-&gt;GetSelected());</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a631a2d04a50680a64f0ae48a61d4a4d1" kindref="member">WriteAttr</ref>(wxT(</highlight><highlight class="stringliteral">&quot;rate&quot;</highlight><highlight class="normal">),<sp/>mRate);</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a631a2d04a50680a64f0ae48a61d4a4d1" kindref="member">WriteAttr</ref>(wxT(</highlight><highlight class="stringliteral">&quot;gain&quot;</highlight><highlight class="normal">),<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)mGain);</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a631a2d04a50680a64f0ae48a61d4a4d1" kindref="member">WriteAttr</ref>(wxT(</highlight><highlight class="stringliteral">&quot;pan&quot;</highlight><highlight class="normal">),<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)mPan);</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"></highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(WaveClipList::compatibility_iterator<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>=GetClipIterator();<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>;<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>=<ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetNext())</highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetData()-&gt;WriteXML(xmlFile);</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1827"><highlight class="normal"></highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a5c4e63c2c9762b6a04ad4e48bb117678" kindref="member">EndTag</ref>(wxT(</highlight><highlight class="stringliteral">&quot;wavetrack&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="1829"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"></highlight></codeline>
<codeline lineno="1831" refid="class_wave_track_1a6634d8840f1b87586e594bd628bcd7a5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1a6634d8840f1b87586e594bd628bcd7a5" kindref="member">WaveTrack::GetErrorOpening</ref>()</highlight></codeline>
<codeline lineno="1832"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(WaveClipList::compatibility_iterator<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>=GetClipIterator();<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>;<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>=<ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetNext())</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetData()-&gt;GetSequence()-&gt;GetErrorOpening())</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"></highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1838"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"></highlight></codeline>
<codeline lineno="1840" refid="class_wave_track_1af5871fa161f389a2f488857d718ad8fb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1af5871fa161f389a2f488857d718ad8fb" kindref="member">WaveTrack::Lock</ref>()</highlight></codeline>
<codeline lineno="1841"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(WaveClipList::compatibility_iterator<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>=GetClipIterator();<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>;<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>=<ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetNext())</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetData()-&gt;Lock();</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"></highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1846"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"></highlight></codeline>
<codeline lineno="1848" refid="class_wave_track_1af7e1d96ef2e79cc51a7bf94c00840dd6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1af7e1d96ef2e79cc51a7bf94c00840dd6" kindref="member">WaveTrack::CloseLock</ref>()</highlight></codeline>
<codeline lineno="1849"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(WaveClipList::compatibility_iterator<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>=GetClipIterator();<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>;<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>=<ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetNext())</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetData()-&gt;CloseLock();</highlight></codeline>
<codeline lineno="1852"><highlight class="normal"></highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1854"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1855"><highlight class="normal"></highlight></codeline>
<codeline lineno="1856"><highlight class="normal"></highlight></codeline>
<codeline lineno="1857" refid="class_wave_track_1a4302f01c726ed2178ceda8cd7e6c8e5a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1a4302f01c726ed2178ceda8cd7e6c8e5a" kindref="member">WaveTrack::Unlock</ref>()</highlight></codeline>
<codeline lineno="1858"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(WaveClipList::compatibility_iterator<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>=GetClipIterator();<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>;<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>=<ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetNext())</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetData()-&gt;Unlock();</highlight></codeline>
<codeline lineno="1861"><highlight class="normal"></highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1863"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1864"><highlight class="normal"></highlight></codeline>
<codeline lineno="1865" refid="class_wave_track_1afe621ba06a0396725da44e937143972f" refkind="member"><highlight class="normal">AUDACITY_DLL_API<sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="class_wave_track_1afe621ba06a0396725da44e937143972f" kindref="member">WaveTrack::TimeToLongSamples</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1866"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref>)floor(t0<sp/>*<sp/>mRate<sp/>+<sp/>0.5);</highlight></codeline>
<codeline lineno="1868"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"></highlight></codeline>
<codeline lineno="1870" refid="class_wave_track_1a16171cfb9bd446a6d16e0e5ac1695318" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1a16171cfb9bd446a6d16e0e5ac1695318" kindref="member">WaveTrack::LongSamplesToTime</ref>(<ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>pos)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1871"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)pos)<sp/>/<sp/>mRate;</highlight></codeline>
<codeline lineno="1873"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1874"><highlight class="normal"></highlight></codeline>
<codeline lineno="1875" refid="class_wave_track_1acd39f4f01272e112a2d132e48b60678e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1acd39f4f01272e112a2d132e48b60678e" kindref="member">WaveTrack::GetStartTime</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1876"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>best<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="1879"><highlight class="normal"></highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mClips.IsEmpty())</highlight></codeline>
<codeline lineno="1881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1882"><highlight class="normal"></highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(WaveClipList::compatibility_iterator<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref><sp/>=<sp/>const_cast&lt;WaveTrack&amp;&gt;(*this).GetClipIterator();</highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>;<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref><sp/>=<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetNext())</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!found)</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best<sp/>=<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetData()-&gt;GetStartTime();</highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetData()-&gt;GetStartTime()<sp/>&lt;<sp/>best)</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best<sp/>=<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetData()-&gt;GetStartTime();</highlight></codeline>
<codeline lineno="1891"><highlight class="normal"></highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>best;</highlight></codeline>
<codeline lineno="1893"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"></highlight></codeline>
<codeline lineno="1895" refid="class_wave_track_1a73f81dee4dcb79e0df3bb6a85b866ae1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1a73f81dee4dcb79e0df3bb6a85b866ae1" kindref="member">WaveTrack::GetEndTime</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1896"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>best<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="1899"><highlight class="normal"></highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mClips.IsEmpty())</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1902"><highlight class="normal"></highlight></codeline>
<codeline lineno="1903"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(WaveClipList::compatibility_iterator<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref><sp/>=<sp/>const_cast&lt;WaveTrack&amp;&gt;(*this).GetClipIterator();</highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>;<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref><sp/>=<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetNext())</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!found)</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best<sp/>=<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetData()-&gt;GetEndTime();</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetData()-&gt;GetEndTime()<sp/>&gt;<sp/>best)</highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best<sp/>=<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetData()-&gt;GetEndTime();</highlight></codeline>
<codeline lineno="1911"><highlight class="normal"></highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>best;</highlight></codeline>
<codeline lineno="1913"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1914"><highlight class="normal"></highlight></codeline>
<codeline lineno="1915"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1916"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Getting/setting<sp/>samples.<sp/><sp/>The<sp/>sample<sp/>counts<sp/>here<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1917"><highlight class="normal"></highlight><highlight class="comment">//<sp/>expressed<sp/>relative<sp/>to<sp/>t=0.0<sp/>at<sp/>the<sp/>track&apos;s<sp/>sample<sp/>rate.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1918"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1919"><highlight class="normal"></highlight></codeline>
<codeline lineno="1920" refid="class_wave_track_1ae29a2df788e32b4d84cc550b81ce9212" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1ae29a2df788e32b4d84cc550b81ce9212" kindref="member">WaveTrack::GetMinMax</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>,</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1)</highlight></codeline>
<codeline lineno="1922"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1923"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>clipFound<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1924"><highlight class="normal"></highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/><sp/>*min<sp/>=<sp/>FLT_MAX;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>need<sp/>these<sp/>at<sp/>extremes<sp/>to<sp/>make<sp/>sure<sp/>we<sp/>find<sp/>true<sp/>min<sp/>and<sp/>max</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1926"><highlight class="normal"><sp/><sp/><sp/>*max<sp/>=<sp/>-FLT_MAX;</highlight></codeline>
<codeline lineno="1927"><highlight class="normal"></highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t0<sp/>&gt;<sp/>t1)</highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1930"><highlight class="normal"></highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t0<sp/>==<sp/>t1)</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"></highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"></highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(WaveClipList::compatibility_iterator<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>=GetClipIterator();<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>;<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>=<ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetNext())</highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref>*<sp/>clip<sp/>=<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetData();</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"></highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t1<sp/>&gt;=<sp/>clip-&gt;<ref refid="class_wave_clip_1a839a293df9246f7a9bb6fcf4d8be7b40" kindref="member">GetStartTime</ref>()<sp/>&amp;&amp;<sp/>t0<sp/>&lt;=<sp/>clip-&gt;<ref refid="class_wave_clip_1a7c878143bdd7641be183325944d02f39" kindref="member">GetEndTime</ref>())</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clipFound<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>clipmin,<sp/>clipmax;</highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetData()-&gt;GetMinMax(&amp;clipmin,<sp/>&amp;clipmax,<sp/>t0,<sp/>t1))</highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clipmin<sp/>&lt;<sp/>*min)</highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*min<sp/>=<sp/>clipmin;</highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clipmax<sp/>&gt;<sp/>*max)</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*max<sp/>=<sp/>clipmax;</highlight></codeline>
<codeline lineno="1950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1956"><highlight class="normal"></highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!clipFound)</highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*min<sp/>=<sp/>float(0.0);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>sensible<sp/>defaults<sp/>if<sp/>no<sp/>clips<sp/>found</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*max<sp/>=<sp/>float(0.0);</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1962"><highlight class="normal"></highlight></codeline>
<codeline lineno="1963"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1964"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1965"><highlight class="normal"></highlight></codeline>
<codeline lineno="1966" refid="class_wave_track_1acfebdfdf55f1bf86e258f7beae256958" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1acfebdfdf55f1bf86e258f7beae256958" kindref="member">WaveTrack::GetRMS</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*rms,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1)</highlight></codeline>
<codeline lineno="1967"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t0<sp/>&gt;<sp/>t1)</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1970"><highlight class="normal"></highlight></codeline>
<codeline lineno="1971"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t0<sp/>==<sp/>t1)</highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1973"><highlight class="normal"></highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1975"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sumsq<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="1976"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="test__lib_f_l_a_c_2format_8c_1ac94dc16b22556ba5fa815655f27442da" kindref="member">length</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1977"><highlight class="normal"></highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(WaveClipList::compatibility_iterator<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>=GetClipIterator();<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>;<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>=<ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetNext())</highlight></codeline>
<codeline lineno="1979"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref>*<sp/>clip<sp/>=<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetData();</highlight></codeline>
<codeline lineno="1981"><highlight class="normal"></highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t1<sp/>&gt;=<sp/>clip-&gt;<ref refid="class_wave_clip_1a839a293df9246f7a9bb6fcf4d8be7b40" kindref="member">GetStartTime</ref>()<sp/>&amp;&amp;<sp/>t0<sp/>&lt;=<sp/>clip-&gt;<ref refid="class_wave_clip_1a7c878143bdd7641be183325944d02f39" kindref="member">GetEndTime</ref>())</highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cliprms;</highlight></codeline>
<codeline lineno="1985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>clipStart,<sp/>clipEnd;</highlight></codeline>
<codeline lineno="1986"><highlight class="normal"></highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetData()-&gt;GetRMS(&amp;cliprms,<sp/>t0,<sp/>t1))</highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clip-&gt;<ref refid="class_wave_clip_1a391ab35fa8e9cc0549060cf46e4b5ba4" kindref="member">TimeToSamplesClip</ref>(wxMax(t0,<sp/>clip-&gt;<ref refid="class_wave_clip_1a839a293df9246f7a9bb6fcf4d8be7b40" kindref="member">GetStartTime</ref>()),<sp/>&amp;clipStart);</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clip-&gt;<ref refid="class_wave_clip_1a391ab35fa8e9cc0549060cf46e4b5ba4" kindref="member">TimeToSamplesClip</ref>(wxMin(t1,<sp/>clip-&gt;<ref refid="class_wave_clip_1a7c878143bdd7641be183325944d02f39" kindref="member">GetEndTime</ref>()),<sp/>&amp;clipEnd);</highlight></codeline>
<codeline lineno="1991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sumsq<sp/>+=<sp/>cliprms<sp/>*<sp/>cliprms<sp/>*<sp/>(clipEnd<sp/>-<sp/>clipStart);</highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length<sp/>+=<sp/>(clipEnd<sp/>-<sp/>clipStart);</highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1998"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/><sp/>*rms<sp/>=<sp/>length<sp/>&gt;<sp/>0.0<sp/>?<sp/>sqrt(sumsq<sp/>/<sp/>length)<sp/>:<sp/>0.0;</highlight></codeline>
<codeline lineno="2000"><highlight class="normal"></highlight></codeline>
<codeline lineno="2001"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2002"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2003"><highlight class="normal"></highlight></codeline>
<codeline lineno="2004" refid="class_wave_track_1a989e55726466fa1d8ec9aa4322f1c950" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1a989e55726466fa1d8ec9aa4322f1c950" kindref="member">WaveTrack::Get</ref>(<ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref><sp/><ref refid="structbuffer" kindref="compound">buffer</ref>,<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792" kindref="member">sampleFormat</ref><sp/><ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref>,</highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>,<sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>,<sp/><ref refid="_sample_format_8h_1acd5339de9cb74e4e26fe562752273c5e" kindref="member">fillFormat</ref><sp/>fill<sp/>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2006"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2007"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Simple<sp/>optimization:<sp/>When<sp/>this<sp/>buffer<sp/>is<sp/>completely<sp/>contained<sp/>within<sp/>one<sp/>clip,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>don&apos;t<sp/>clear<sp/>anything<sp/>(because<sp/>we<sp/>won&apos;t<sp/>have<sp/>to).<sp/>Otherwise,<sp/>just<sp/>clear</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>everything<sp/>to<sp/>be<sp/>on<sp/>the<sp/>safe<sp/>side.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/><sp/>WaveClipList::compatibility_iterator<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>;</highlight></codeline>
<codeline lineno="2011"><highlight class="normal"></highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>doClear<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it<sp/>=<sp/>const_cast&lt;WaveTrack&amp;&gt;(*this).GetClipIterator();<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>;<sp/>it<sp/>=<sp/>it-&gt;GetNext())</highlight></codeline>
<codeline lineno="2014"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>clip<sp/>=<sp/>it-&gt;GetData();</highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(start<sp/>&gt;=<sp/>clip-&gt;<ref refid="class_wave_clip_1a8c8c86f52d4722b09e9e0f562a4585e3" kindref="member">GetStartSample</ref>()<sp/>&amp;&amp;<sp/>start+len<sp/>&lt;=<sp/>clip-&gt;<ref refid="class_wave_clip_1ad629593dec3ed120a412c92d64500c11" kindref="member">GetEndSample</ref>())</highlight></codeline>
<codeline lineno="2017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doClear<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(doClear)</highlight></codeline>
<codeline lineno="2023"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Usually<sp/>we<sp/>fill<sp/>in<sp/>empty<sp/>sapce<sp/>with<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>fill<sp/>==<sp/><ref refid="_sample_format_8h_1acd5339de9cb74e4e26fe562752273c5ea4ddeed8f52e42d92b8bfb4fcf6d21932" kindref="member">fillZero</ref><sp/>)</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_sample_format_8cpp_1a3e6207a5663cc3daa9e7792476af8f6e" kindref="member">ClearSamples</ref>(buffer,<sp/>format,<sp/>0,<sp/>len);</highlight></codeline>
<codeline lineno="2027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>we<sp/>don&apos;t<sp/>have<sp/>to.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>fill==<ref refid="_sample_format_8h_1acd5339de9cb74e4e26fe562752273c5eabe5c752e8e5a351837fced53479f858c" kindref="member">fillTwo</ref><sp/>)</highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxASSERT(<sp/>format==<ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref><sp/>);</highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<sp/>pBuffer<sp/>=<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*)buffer;</highlight></codeline>
<codeline lineno="2032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>=0;<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>&lt;<ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="2033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pBuffer[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]=2.0<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>;</highlight></codeline>
<codeline lineno="2034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxFAIL_MSG(wxT(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>fill<sp/>format&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="2038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2039"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2040"><highlight class="normal"></highlight></codeline>
<codeline lineno="2041"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it<sp/>=<sp/>const_cast&lt;WaveTrack&amp;&gt;(*this).GetClipIterator();<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>;<sp/>it<sp/>=<sp/>it-&gt;GetNext())</highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>clip<sp/>=<sp/>it-&gt;GetData();</highlight></codeline>
<codeline lineno="2044"><highlight class="normal"></highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>clipStart<sp/>=<sp/>clip-&gt;<ref refid="class_wave_clip_1a8c8c86f52d4722b09e9e0f562a4585e3" kindref="member">GetStartSample</ref>();</highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>clipEnd<sp/>=<sp/>clip-&gt;<ref refid="class_wave_clip_1ad629593dec3ed120a412c92d64500c11" kindref="member">GetEndSample</ref>();</highlight></codeline>
<codeline lineno="2047"><highlight class="normal"></highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clipEnd<sp/>&gt;<sp/>start<sp/>&amp;&amp;<sp/>clipStart<sp/>&lt;<sp/>start+len)</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clip<sp/>sample<sp/>region<sp/>and<sp/>Get/Put<sp/>sample<sp/>region<sp/>overlap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>samplesToCopy<sp/>=<sp/>start+len<sp/>-<sp/>clipStart;</highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(samplesToCopy<sp/>&gt;<sp/>clip-&gt;<ref refid="class_wave_clip_1a6cd003778b510cad742feaa5763c6ac2" kindref="member">GetNumSamples</ref>())</highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>samplesToCopy<sp/>=<sp/>clip-&gt;<ref refid="class_wave_clip_1a6cd003778b510cad742feaa5763c6ac2" kindref="member">GetNumSamples</ref>();</highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>inclipDelta<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>startDelta<sp/>=<sp/>clipStart<sp/>-<sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>;</highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(startDelta<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inclipDelta<sp/>=<sp/>-startDelta;<sp/></highlight><highlight class="comment">//<sp/>make<sp/>positive<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>samplesToCopy<sp/>-=<sp/>inclipDelta;</highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>startDelta<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2062"><highlight class="normal"></highlight></codeline>
<codeline lineno="2063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!clip-&gt;<ref refid="class_wave_clip_1a7909b8a8e1bac5eea9e4bc422b021a59" kindref="member">GetSamples</ref>((<ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref>)(((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)buffer)+startDelta*<ref refid="include_2audacity_2_types_8h_1a7ecd88c1f16f362ccc891b8d1f6f69cb" kindref="member">SAMPLE_SIZE</ref>(format)),</highlight></codeline>
<codeline lineno="2064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>format,<sp/>inclipDelta,<sp/>samplesToCopy))</highlight></codeline>
<codeline lineno="2065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxASSERT(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>should<sp/>always<sp/>work</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2070"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2071"><highlight class="normal"></highlight></codeline>
<codeline lineno="2072"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2073"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2074"><highlight class="normal"></highlight></codeline>
<codeline lineno="2075" refid="class_wave_track_1aea32b02fe3634c9f6d0a79af3da7c987" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1aea32b02fe3634c9f6d0a79af3da7c987" kindref="member">WaveTrack::Set</ref>(<ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref><sp/><ref refid="structbuffer" kindref="compound">buffer</ref>,<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792" kindref="member">sampleFormat</ref><sp/><ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref>,</highlight></codeline>
<codeline lineno="2076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>,<sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>)</highlight></codeline>
<codeline lineno="2077"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2078"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>result<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2079"><highlight class="normal"></highlight></codeline>
<codeline lineno="2080"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(WaveClipList::compatibility_iterator<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>=GetClipIterator();<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>;<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>=<ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetNext())</highlight></codeline>
<codeline lineno="2081"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref><sp/>*clip<sp/>=<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetData();</highlight></codeline>
<codeline lineno="2083"><highlight class="normal"></highlight></codeline>
<codeline lineno="2084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>clipStart<sp/>=<sp/>clip-&gt;<ref refid="class_wave_clip_1a8c8c86f52d4722b09e9e0f562a4585e3" kindref="member">GetStartSample</ref>();</highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>clipEnd<sp/>=<sp/>clip-&gt;<ref refid="class_wave_clip_1ad629593dec3ed120a412c92d64500c11" kindref="member">GetEndSample</ref>();</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"></highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clipEnd<sp/>&gt;<sp/>start<sp/>&amp;&amp;<sp/>clipStart<sp/>&lt;<sp/>start+len)</highlight></codeline>
<codeline lineno="2088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clip<sp/>sample<sp/>region<sp/>and<sp/>Get/Put<sp/>sample<sp/>region<sp/>overlap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>samplesToCopy<sp/>=<sp/>start+len<sp/>-<sp/>clipStart;</highlight></codeline>
<codeline lineno="2091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(samplesToCopy<sp/>&gt;<sp/>clip-&gt;<ref refid="class_wave_clip_1a6cd003778b510cad742feaa5763c6ac2" kindref="member">GetNumSamples</ref>())</highlight></codeline>
<codeline lineno="2092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>samplesToCopy<sp/>=<sp/>clip-&gt;<ref refid="class_wave_clip_1a6cd003778b510cad742feaa5763c6ac2" kindref="member">GetNumSamples</ref>();</highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>inclipDelta<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>startDelta<sp/>=<sp/>clipStart<sp/>-<sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>;</highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(startDelta<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="2096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inclipDelta<sp/>=<sp/>-startDelta;<sp/></highlight><highlight class="comment">//<sp/>make<sp/>positive<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>samplesToCopy<sp/>-=<sp/>inclipDelta;</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>startDelta<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2101"><highlight class="normal"></highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!clip-&gt;<ref refid="class_wave_clip_1af2e12bace67d5da881127ab43568dfa2" kindref="member">SetSamples</ref>((<ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref>)(((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)buffer)+startDelta*<ref refid="include_2audacity_2_types_8h_1a7ecd88c1f16f362ccc891b8d1f6f69cb" kindref="member">SAMPLE_SIZE</ref>(format)),</highlight></codeline>
<codeline lineno="2103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>format,<sp/>inclipDelta,<sp/>samplesToCopy))</highlight></codeline>
<codeline lineno="2104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxASSERT(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>should<sp/>always<sp/>work</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clip-&gt;<ref refid="class_wave_clip_1a272fcb9bb28b53329674c6ba14026c7b" kindref="member">MarkChanged</ref>();</highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"></highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2114"><highlight class="normal"></highlight></codeline>
<codeline lineno="2115" refid="class_wave_track_1a95b1096a2ace691e8b76c02535a56f1a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1a95b1096a2ace691e8b76c02535a56f1a" kindref="member">WaveTrack::GetEnvelopeValues</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bufferLen,</highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>tstep)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2117"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Possibly<sp/>nothing<sp/>to<sp/>do.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2119"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bufferLen<sp/>&lt;=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="2120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2121"><highlight class="normal"></highlight></codeline>
<codeline lineno="2122"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>output<sp/>buffer<sp/>corresponds<sp/>to<sp/>an<sp/>unbroken<sp/>span<sp/>of<sp/>time<sp/>which<sp/>the<sp/>callers<sp/>expect</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2123"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>be<sp/>fully<sp/>valid.<sp/><sp/>As<sp/>clips<sp/>are<sp/>processed<sp/>below,<sp/>the<sp/>output<sp/>buffer<sp/>is<sp/>updated<sp/>with</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2124"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>envelope<sp/>values<sp/>from<sp/>any<sp/>portion<sp/>of<sp/>a<sp/>clip,<sp/>start,<sp/>end,<sp/>middle,<sp/>or<sp/>none<sp/>at<sp/>all.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2125"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Since<sp/>this<sp/>does<sp/>not<sp/>guarantee<sp/>that<sp/>the<sp/>entire<sp/>buffer<sp/>is<sp/>filled<sp/>with<sp/>values<sp/>we<sp/>need</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2126"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>initialize<sp/>the<sp/>entire<sp/>buffer<sp/>to<sp/>a<sp/>default<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2127"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2128"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>does<sp/>mean<sp/>that,<sp/>in<sp/>the<sp/>cases<sp/>where<sp/>a<sp/>usuable<sp/>clip<sp/>is<sp/>located,<sp/>the<sp/>buffer<sp/>value<sp/>will</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2129"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>be<sp/>set<sp/>twice.<sp/><sp/>Unfortunately,<sp/>there<sp/>is<sp/>no<sp/>easy<sp/>way<sp/>around<sp/>this<sp/>since<sp/>the<sp/>clips<sp/>are<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2130"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stored<sp/>in<sp/>increasing<sp/>time<sp/>order.<sp/><sp/>If<sp/>they<sp/>were,<sp/>we<sp/>could<sp/>just<sp/>track<sp/>the<sp/>time<sp/>as<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2131"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>buffer<sp/>is<sp/>filled.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2132"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>bufferLen;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="2133"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buffer[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="2135"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2136"><highlight class="normal"></highlight></codeline>
<codeline lineno="2137"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>startTime<sp/>=<sp/>t0;</highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>endTime<sp/>=<sp/>t0+tstep*bufferLen;</highlight></codeline>
<codeline lineno="2139"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(WaveClipList::compatibility_iterator<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref><sp/>=<sp/>const_cast&lt;WaveTrack&amp;&gt;(*this).GetClipIterator();</highlight></codeline>
<codeline lineno="2140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>;<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref><sp/>=<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetNext())</highlight></codeline>
<codeline lineno="2141"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>clip<sp/>=<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetData();</highlight></codeline>
<codeline lineno="2143"><highlight class="normal"></highlight></codeline>
<codeline lineno="2144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>IF<sp/>clip<sp/>intersects<sp/>startTime..endTime<sp/>THEN...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dClipStartTime<sp/>=<sp/>clip-&gt;<ref refid="class_wave_clip_1a839a293df9246f7a9bb6fcf4d8be7b40" kindref="member">GetStartTime</ref>();</highlight></codeline>
<codeline lineno="2146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dClipEndTime<sp/>=<sp/>clip-&gt;<ref refid="class_wave_clip_1a7c878143bdd7641be183325944d02f39" kindref="member">GetEndTime</ref>();</highlight></codeline>
<codeline lineno="2147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((dClipStartTime<sp/>&lt;<sp/>endTime)<sp/>&amp;&amp;<sp/>(dClipEndTime<sp/>&gt;<sp/>startTime))</highlight></codeline>
<codeline lineno="2148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>rbuf<sp/>=<sp/><ref refid="recplay_8c_1adbbab5cb2248179d231690a1a02ff977" kindref="member">buffer</ref>;</highlight></codeline>
<codeline lineno="2150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rlen<sp/>=<sp/>bufferLen;</highlight></codeline>
<codeline lineno="2151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rt0<sp/>=<sp/>t0;</highlight></codeline>
<codeline lineno="2152"><highlight class="normal"></highlight></codeline>
<codeline lineno="2153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rt0<sp/>&lt;<sp/>dClipStartTime)</highlight></codeline>
<codeline lineno="2154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>nDiff<sp/>=<sp/>(<ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref>)floor((dClipStartTime<sp/>-<sp/>rt0)<sp/>*<sp/>mRate<sp/>+<sp/>0.5);</highlight></codeline>
<codeline lineno="2156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rbuf<sp/>+=<sp/>nDiff;</highlight></codeline>
<codeline lineno="2157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rlen<sp/>-=<sp/>nDiff;</highlight></codeline>
<codeline lineno="2158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rt0<sp/>=<sp/>dClipStartTime;</highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2160"><highlight class="normal"></highlight></codeline>
<codeline lineno="2161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rt0<sp/>+<sp/>rlen*tstep<sp/>&gt;<sp/>dClipEndTime)</highlight></codeline>
<codeline lineno="2162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nClipLen<sp/>=<sp/>clip-&gt;<ref refid="class_wave_clip_1ad629593dec3ed120a412c92d64500c11" kindref="member">GetEndSample</ref>()<sp/>-<sp/>clip-&gt;<ref refid="class_wave_clip_1a8c8c86f52d4722b09e9e0f562a4585e3" kindref="member">GetStartSample</ref>();</highlight></codeline>
<codeline lineno="2164"><highlight class="normal"></highlight></codeline>
<codeline lineno="2165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nClipLen<sp/>&lt;=<sp/>0)<sp/></highlight><highlight class="comment">//<sp/>Testing<sp/>for<sp/>bug<sp/>641,<sp/>this<sp/>problem<sp/>is<sp/>consistently<sp/>&apos;==<sp/>0&apos;,<sp/>but<sp/>doesn&apos;t<sp/>hurt<sp/>to<sp/>check<sp/>&lt;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2167"><highlight class="normal"></highlight></codeline>
<codeline lineno="2168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>check<sp/>prevents<sp/>problem<sp/>cited<sp/>in<sp/>http://bugzilla.audacityteam.org/show_bug.cgi?id=528#c11,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Gale&apos;s<sp/>cross_fade_out<sp/>project,<sp/>which<sp/>was<sp/>already<sp/>corrupted<sp/>by<sp/>bug<sp/>528.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>conditional<sp/>prevents<sp/>the<sp/>previous<sp/>write<sp/>past<sp/>the<sp/>buffer<sp/>end,<sp/>in<sp/>clip-&gt;GetEnvelope()<sp/>call.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Never<sp/>increase<sp/>rlen<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>PRL<sp/>bug<sp/>827:<sp/><sp/>rewrote<sp/>it<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rlen<sp/>=<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">std::min</ref>(rlen,<sp/>nClipLen);</highlight></codeline>
<codeline lineno="2174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rlen<sp/>=<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">std::min</ref>(rlen,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(floor(0.5<sp/>+<sp/>(dClipEndTime<sp/>-<sp/>rt0)<sp/>/<sp/>tstep)));</highlight></codeline>
<codeline lineno="2175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clip-&gt;<ref refid="class_wave_clip_1a89df7eef9147be5868fe247c6239e5c8" kindref="member">GetEnvelope</ref>()-&gt;<ref refid="class_envelope_1a5daec75b3aa3b0da7919fc986014e1db" kindref="member">GetValues</ref>(rbuf,<sp/>rlen,<sp/>rt0,<sp/>tstep);</highlight></codeline>
<codeline lineno="2177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2178"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2179"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2180"><highlight class="normal"></highlight></codeline>
<codeline lineno="2181" refid="class_wave_track_1a6f2397064c743a2265ecbc4c9e35fea7" refkind="member"><highlight class="normal"><ref refid="class_wave_clip" kindref="compound">WaveClip</ref>*<sp/><ref refid="class_wave_track_1a6f2397064c743a2265ecbc4c9e35fea7" kindref="member">WaveTrack::GetClipAtX</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xcoord)</highlight></codeline>
<codeline lineno="2182"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2183"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(WaveClipList::compatibility_iterator<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>=GetClipIterator();<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>;<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>=<ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetNext())</highlight></codeline>
<codeline lineno="2184"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxRect<sp/>r;</highlight></codeline>
<codeline lineno="2186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetData()-&gt;GetDisplayRect(&amp;r);</highlight></codeline>
<codeline lineno="2187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xcoord<sp/>&gt;=<sp/>r.x<sp/>&amp;&amp;<sp/>xcoord<sp/>&lt;<sp/>r.x+r.width)</highlight></codeline>
<codeline lineno="2188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetData();</highlight></codeline>
<codeline lineno="2189"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2190"><highlight class="normal"></highlight></codeline>
<codeline lineno="2191"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="2192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2193"><highlight class="normal"></highlight></codeline>
<codeline lineno="2194" refid="class_wave_track_1aa57f503b09b51617bc6b1fd27ac54421" refkind="member"><highlight class="normal"><ref refid="class_wave_clip" kindref="compound">WaveClip</ref>*<sp/><ref refid="class_wave_track_1aa57f503b09b51617bc6b1fd27ac54421" kindref="member">WaveTrack::GetClipAtSample</ref>(<ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>sample)</highlight></codeline>
<codeline lineno="2195"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2196"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(WaveClipList::compatibility_iterator<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>=GetClipIterator();<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>;<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>=<ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetNext())</highlight></codeline>
<codeline lineno="2197"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref><sp/>*clip;</highlight></codeline>
<codeline lineno="2199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>,<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;</highlight></codeline>
<codeline lineno="2200"><highlight class="normal"></highlight></codeline>
<codeline lineno="2201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>clip<sp/><sp/>=<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetData();</highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>start<sp/>=<sp/>clip-&gt;<ref refid="class_wave_clip_1a8c8c86f52d4722b09e9e0f562a4585e3" kindref="member">GetStartSample</ref>();</highlight></codeline>
<codeline lineno="2203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/>=<sp/>clip-&gt;<ref refid="class_wave_clip_1a6cd003778b510cad742feaa5763c6ac2" kindref="member">GetNumSamples</ref>();</highlight></codeline>
<codeline lineno="2204"><highlight class="normal"></highlight></codeline>
<codeline lineno="2205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sample<sp/>&gt;=<sp/>start<sp/>&amp;&amp;<sp/>sample<sp/>&lt;<sp/>start<sp/>+<sp/>len)</highlight></codeline>
<codeline lineno="2206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>clip;</highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2208"><highlight class="normal"></highlight></codeline>
<codeline lineno="2209"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="2210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2211"><highlight class="normal"></highlight></codeline>
<codeline lineno="2212" refid="class_wave_track_1ab5377b2d185a54c4c8f5eb334f1c4285" refkind="member"><highlight class="normal"><ref refid="class_envelope" kindref="compound">Envelope</ref>*<sp/><ref refid="class_wave_track_1ab5377b2d185a54c4c8f5eb334f1c4285" kindref="member">WaveTrack::GetEnvelopeAtX</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xcoord)</highlight></codeline>
<codeline lineno="2213"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref>*<sp/>clip<sp/>=<sp/>GetClipAtX(xcoord);</highlight></codeline>
<codeline lineno="2215"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clip)</highlight></codeline>
<codeline lineno="2216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>clip-&gt;<ref refid="class_wave_clip_1a89df7eef9147be5868fe247c6239e5c8" kindref="member">GetEnvelope</ref>();</highlight></codeline>
<codeline lineno="2217"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="2219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2220"><highlight class="normal"></highlight></codeline>
<codeline lineno="2221"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Search<sp/>for<sp/>any<sp/>active<sp/>DragPoint<sp/>on<sp/>the<sp/>current<sp/>track</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2222" refid="class_wave_track_1ad051f6b5dea67bc6926eef457052f3e4" refkind="member"><highlight class="normal"><ref refid="class_envelope" kindref="compound">Envelope</ref>*<sp/><ref refid="class_wave_track_1ad051f6b5dea67bc6926eef457052f3e4" kindref="member">WaveTrack::GetActiveEnvelope</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2223"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2224"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(WaveClipList::compatibility_iterator<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>=GetClipIterator();<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>;<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>=<ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetNext())</highlight></codeline>
<codeline lineno="2225"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref>*<sp/>clip<sp/>=<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetData();</highlight></codeline>
<codeline lineno="2227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_envelope" kindref="compound">Envelope</ref>*<sp/>env<sp/>=<sp/>clip-&gt;<ref refid="class_wave_clip_1a89df7eef9147be5868fe247c6239e5c8" kindref="member">GetEnvelope</ref>()<sp/>;</highlight></codeline>
<codeline lineno="2228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(env-&gt;<ref refid="class_envelope_1a2e71d43f9b2f683080c57e57fb93355c" kindref="member">GetDragPoint</ref>()<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>env;</highlight></codeline>
<codeline lineno="2230"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2231"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="2232"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2233"><highlight class="normal"></highlight></codeline>
<codeline lineno="2234" refid="class_wave_track_1aa414c35568381768e61b337207933a82" refkind="member"><highlight class="normal"><ref refid="class_sequence" kindref="compound">Sequence</ref>*<sp/><ref refid="class_wave_track_1aa414c35568381768e61b337207933a82" kindref="member">WaveTrack::GetSequenceAtX</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xcoord)</highlight></codeline>
<codeline lineno="2235"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2236"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref>*<sp/>clip<sp/>=<sp/>GetClipAtX(xcoord);</highlight></codeline>
<codeline lineno="2237"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clip)</highlight></codeline>
<codeline lineno="2238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>clip-&gt;<ref refid="class_wave_clip_1abd2e26af620a0406b2c45aca8736bd9a" kindref="member">GetSequence</ref>();</highlight></codeline>
<codeline lineno="2239"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="2241"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2242"><highlight class="normal"></highlight></codeline>
<codeline lineno="2243" refid="class_wave_track_1a0dd8d940d6fd4a87a273458881a1f63d" refkind="member"><highlight class="normal"><ref refid="class_wave_clip" kindref="compound">WaveClip</ref>*<sp/><ref refid="class_wave_track_1a0dd8d940d6fd4a87a273458881a1f63d" kindref="member">WaveTrack::CreateClip</ref>()</highlight></codeline>
<codeline lineno="2244"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2245"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref>*<sp/>clip<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref>(mDirManager,<sp/>mFormat,<sp/>mRate);</highlight></codeline>
<codeline lineno="2246"><highlight class="normal"><sp/><sp/><sp/>mClips.Append(clip);</highlight></codeline>
<codeline lineno="2247"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>clip;</highlight></codeline>
<codeline lineno="2248"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2249"><highlight class="normal"></highlight></codeline>
<codeline lineno="2250" refid="class_wave_track_1a4c2402bda2c645184a3025772b57f87f" refkind="member"><highlight class="normal"><ref refid="class_wave_clip" kindref="compound">WaveClip</ref>*<sp/><ref refid="class_wave_track_1a4c2402bda2c645184a3025772b57f87f" kindref="member">WaveTrack::NewestOrNewClip</ref>()</highlight></codeline>
<codeline lineno="2251"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2252"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mClips.IsEmpty())<sp/>{</highlight></codeline>
<codeline lineno="2253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref><sp/>*clip<sp/>=<sp/>CreateClip();</highlight></codeline>
<codeline lineno="2254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>clip-&gt;<ref refid="class_wave_clip_1ac0c4ce7ebbc00afa175813f60bd97019" kindref="member">SetOffset</ref>(mOffset);</highlight></codeline>
<codeline lineno="2255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>clip;</highlight></codeline>
<codeline lineno="2256"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2257"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mClips.GetLast()-&gt;GetData();</highlight></codeline>
<codeline lineno="2259"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2260"><highlight class="normal"></highlight></codeline>
<codeline lineno="2261" refid="class_wave_track_1aaa23817cfb806f4aa5015d1c6ffeb4db" refkind="member"><highlight class="normal"><ref refid="class_wave_clip" kindref="compound">WaveClip</ref>*<sp/><ref refid="class_wave_track_1aaa23817cfb806f4aa5015d1c6ffeb4db" kindref="member">WaveTrack::RightmostOrNewClip</ref>()</highlight></codeline>
<codeline lineno="2262"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2263"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mClips.IsEmpty())<sp/>{</highlight></codeline>
<codeline lineno="2264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref><sp/>*clip<sp/>=<sp/>CreateClip();</highlight></codeline>
<codeline lineno="2265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>clip-&gt;<ref refid="class_wave_clip_1ac0c4ce7ebbc00afa175813f60bd97019" kindref="member">SetOffset</ref>(mOffset);</highlight></codeline>
<codeline lineno="2266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>clip;</highlight></codeline>
<codeline lineno="2267"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2268"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2269"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>WaveClipList::compatibility_iterator<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref><sp/>=<sp/>GetClipIterator();</highlight></codeline>
<codeline lineno="2271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref><sp/>*rightmost<sp/>=<sp/>it-&gt;GetData();</highlight></codeline>
<codeline lineno="2272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>maxOffset<sp/>=<sp/>rightmost-&gt;<ref refid="class_wave_clip_1a070d7b2328a78c6ddaecc2f60ad4567f" kindref="member">GetOffset</ref>();</highlight></codeline>
<codeline lineno="2273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it<sp/>=<sp/>it-&gt;GetNext();<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>;<sp/>it<sp/>=<sp/>it-&gt;GetNext())</highlight></codeline>
<codeline lineno="2274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref><sp/>*clip<sp/>=<sp/>it-&gt;GetData();</highlight></codeline>
<codeline lineno="2276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="layer12_8c_1a33d71f23ba2052d17f0b754dc35265b0" kindref="member">offset</ref><sp/>=<sp/>clip-&gt;<ref refid="class_wave_clip_1a070d7b2328a78c6ddaecc2f60ad4567f" kindref="member">GetOffset</ref>();</highlight></codeline>
<codeline lineno="2277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(maxOffset<sp/>&lt;<sp/>offset)</highlight></codeline>
<codeline lineno="2278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxOffset<sp/>=<sp/><ref refid="layer12_8c_1a33d71f23ba2052d17f0b754dc35265b0" kindref="member">offset</ref>,<sp/>rightmost<sp/>=<sp/>clip;</highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rightmost;</highlight></codeline>
<codeline lineno="2281"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2282"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2283"><highlight class="normal"></highlight></codeline>
<codeline lineno="2284" refid="class_wave_track_1a41bd6c2839fc568f06ea3c10b2dac60b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1a41bd6c2839fc568f06ea3c10b2dac60b" kindref="member">WaveTrack::GetClipIndex</ref>(<ref refid="class_wave_clip" kindref="compound">WaveClip</ref>*<sp/>clip)</highlight></codeline>
<codeline lineno="2285"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2286"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mClips.IndexOf(clip);</highlight></codeline>
<codeline lineno="2287"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2288"><highlight class="normal"></highlight></codeline>
<codeline lineno="2289" refid="class_wave_track_1a5d0fc3eba22b8a63602e78776efd767a" refkind="member"><highlight class="normal"><ref refid="class_wave_clip" kindref="compound">WaveClip</ref>*<sp/><ref refid="class_wave_track_1a5d0fc3eba22b8a63602e78776efd767a" kindref="member">WaveTrack::GetClipByIndex</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight></codeline>
<codeline lineno="2290"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2291"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(index<sp/>&lt;<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)mClips.GetCount())</highlight></codeline>
<codeline lineno="2292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mClips.Item(index)-&gt;GetData();</highlight></codeline>
<codeline lineno="2293"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="2295"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2296"><highlight class="normal"></highlight></codeline>
<codeline lineno="2297" refid="class_wave_track_1a296527181493e5553b86d3447a03bf6d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1a296527181493e5553b86d3447a03bf6d" kindref="member">WaveTrack::GetNumClips</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2298"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2299"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mClips.GetCount();</highlight></codeline>
<codeline lineno="2300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2301"><highlight class="normal"></highlight></codeline>
<codeline lineno="2302"><highlight class="normal"></highlight><highlight class="comment">//<sp/>unused</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2303"><highlight class="normal"></highlight><highlight class="comment">//void<sp/>WaveTrack::MoveClipToTrack(int<sp/>clipIndex,<sp/>WaveTrack*<sp/>dest)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2304"><highlight class="normal"></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2305"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>WaveClipList::compatibility_iterator<sp/>node<sp/>=<sp/>mClips.Item(clipIndex);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2306"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>WaveClip*<sp/>clip<sp/>=<sp/>node-&gt;GetData();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2307"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>mClips.DeleteNode(node);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2308"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>dest-&gt;mClips.Append(clip);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2309"><highlight class="normal"></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2310"><highlight class="normal"></highlight></codeline>
<codeline lineno="2311" refid="class_wave_track_1ae10af3465e1040ebee762c856a50b3be" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1ae10af3465e1040ebee762c856a50b3be" kindref="member">WaveTrack::MoveClipToTrack</ref>(<ref refid="class_wave_clip" kindref="compound">WaveClip</ref><sp/>*clip,<sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*<sp/>dest)</highlight></codeline>
<codeline lineno="2312"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2313"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(WaveClipList::compatibility_iterator<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>=GetClipIterator();<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>;<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>=<ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetNext())<sp/>{</highlight></codeline>
<codeline lineno="2314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetData()<sp/>==<sp/>clip)<sp/>{</highlight></codeline>
<codeline lineno="2315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref>*<sp/>clip<sp/>=<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetData();<sp/></highlight><highlight class="comment">//vvv<sp/>ANSWER-ME:<sp/>Why<sp/>declare<sp/>and<sp/>assign<sp/>this<sp/>to<sp/>another<sp/>variable,<sp/>when<sp/>we<sp/>just<sp/>verified<sp/>the<sp/>&apos;clip&apos;<sp/>parameter<sp/>is<sp/>the<sp/>right<sp/>value?!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mClips.DeleteNode(<ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>);</highlight></codeline>
<codeline lineno="2317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dest)</highlight></codeline>
<codeline lineno="2318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest-&gt;<ref refid="class_wave_track_1aab186786a53179d53c986771c42f5880" kindref="member">mClips</ref>.Append(clip);</highlight></codeline>
<codeline lineno="2319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>JKC<sp/>iterator<sp/>is<sp/>now<sp/>&apos;defunct&apos;<sp/>so<sp/>better<sp/>return<sp/>straight<sp/>away.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2321"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2322"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2323"><highlight class="normal"></highlight></codeline>
<codeline lineno="2324" refid="class_wave_track_1aa3263588cf2b126720215ee551df12d2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1aa3263588cf2b126720215ee551df12d2" kindref="member">WaveTrack::CanOffsetClip</ref>(<ref refid="class_wave_clip" kindref="compound">WaveClip</ref>*<sp/>clip,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>amount,</highlight></codeline>
<codeline lineno="2325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*allowedAmount<sp/></highlight><highlight class="comment">/*<sp/>=<sp/>NULL<sp/>*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2326"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2327"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(allowedAmount)</highlight></codeline>
<codeline lineno="2328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*allowedAmount<sp/>=<sp/>amount;</highlight></codeline>
<codeline lineno="2329"><highlight class="normal"></highlight></codeline>
<codeline lineno="2330"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(WaveClipList::compatibility_iterator<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>=GetClipIterator();<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>;<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>=<ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetNext())</highlight></codeline>
<codeline lineno="2331"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref>*<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref><sp/>=<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetData();</highlight></codeline>
<codeline lineno="2333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>!=<sp/>clip<sp/>&amp;&amp;<sp/>c-&gt;<ref refid="class_wave_clip_1a839a293df9246f7a9bb6fcf4d8be7b40" kindref="member">GetStartTime</ref>()<sp/>&lt;<sp/>clip-&gt;<ref refid="class_wave_clip_1a7c878143bdd7641be183325944d02f39" kindref="member">GetEndTime</ref>()+amount<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c-&gt;<ref refid="class_wave_clip_1a7c878143bdd7641be183325944d02f39" kindref="member">GetEndTime</ref>()<sp/>&gt;<sp/>clip-&gt;<ref refid="class_wave_clip_1a839a293df9246f7a9bb6fcf4d8be7b40" kindref="member">GetStartTime</ref>()+amount)</highlight></codeline>
<codeline lineno="2335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!allowedAmount)</highlight></codeline>
<codeline lineno="2337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>clips<sp/>overlap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2338"><highlight class="normal"></highlight></codeline>
<codeline lineno="2339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(amount<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="2340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c-&gt;<ref refid="class_wave_clip_1a839a293df9246f7a9bb6fcf4d8be7b40" kindref="member">GetStartTime</ref>()-clip-&gt;<ref refid="class_wave_clip_1a7c878143bdd7641be183325944d02f39" kindref="member">GetEndTime</ref>()<sp/>&lt;<sp/>*allowedAmount)</highlight></codeline>
<codeline lineno="2342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*allowedAmount<sp/>=<sp/>c-&gt;<ref refid="class_wave_clip_1a839a293df9246f7a9bb6fcf4d8be7b40" kindref="member">GetStartTime</ref>()-clip-&gt;<ref refid="class_wave_clip_1a7c878143bdd7641be183325944d02f39" kindref="member">GetEndTime</ref>();</highlight></codeline>
<codeline lineno="2343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*allowedAmount<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="2344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*allowedAmount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c-&gt;<ref refid="class_wave_clip_1a7c878143bdd7641be183325944d02f39" kindref="member">GetEndTime</ref>()-clip-&gt;<ref refid="class_wave_clip_1a839a293df9246f7a9bb6fcf4d8be7b40" kindref="member">GetStartTime</ref>()<sp/>&gt;<sp/>*allowedAmount)</highlight></codeline>
<codeline lineno="2348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*allowedAmount<sp/>=<sp/>c-&gt;<ref refid="class_wave_clip_1a7c878143bdd7641be183325944d02f39" kindref="member">GetEndTime</ref>()-clip-&gt;<ref refid="class_wave_clip_1a839a293df9246f7a9bb6fcf4d8be7b40" kindref="member">GetStartTime</ref>();</highlight></codeline>
<codeline lineno="2349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*allowedAmount<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="2350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*allowedAmount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2353"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2354"><highlight class="normal"></highlight></codeline>
<codeline lineno="2355"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(allowedAmount)</highlight></codeline>
<codeline lineno="2356"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*allowedAmount<sp/>==<sp/>amount)</highlight></codeline>
<codeline lineno="2358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2359"><highlight class="normal"></highlight></codeline>
<codeline lineno="2360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>NEW<sp/>calculated<sp/>amount<sp/>would<sp/>not<sp/>violate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>any<sp/>other<sp/>constraint</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!CanOffsetClip(clip,<sp/>*allowedAmount,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>))<sp/>{</highlight></codeline>
<codeline lineno="2363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*allowedAmount<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>play<sp/>safe<sp/>and<sp/>don&apos;t<sp/>allow<sp/>anything</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2368"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2370"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2371"><highlight class="normal"></highlight></codeline>
<codeline lineno="2372" refid="class_wave_track_1a420ddb9afa44d1dbbf15172edc451107" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1a420ddb9afa44d1dbbf15172edc451107" kindref="member">WaveTrack::CanInsertClip</ref>(<ref refid="class_wave_clip" kindref="compound">WaveClip</ref>*<sp/>clip)</highlight></codeline>
<codeline lineno="2373"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2374"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(WaveClipList::compatibility_iterator<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>=GetClipIterator();<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>;<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>=<ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetNext())</highlight></codeline>
<codeline lineno="2375"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref>*<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref><sp/>=<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetData();</highlight></codeline>
<codeline lineno="2377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c-&gt;<ref refid="class_wave_clip_1a839a293df9246f7a9bb6fcf4d8be7b40" kindref="member">GetStartTime</ref>()<sp/>&lt;<sp/>clip-&gt;<ref refid="class_wave_clip_1a7c878143bdd7641be183325944d02f39" kindref="member">GetEndTime</ref>()<sp/>&amp;&amp;<sp/>c-&gt;<ref refid="class_wave_clip_1a7c878143bdd7641be183325944d02f39" kindref="member">GetEndTime</ref>()<sp/>&gt;<sp/>clip-&gt;<ref refid="class_wave_clip_1a839a293df9246f7a9bb6fcf4d8be7b40" kindref="member">GetStartTime</ref>())</highlight></codeline>
<codeline lineno="2378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>clips<sp/>overlap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2379"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2380"><highlight class="normal"></highlight></codeline>
<codeline lineno="2381"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2382"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2383"><highlight class="normal"></highlight></codeline>
<codeline lineno="2384" refid="class_wave_track_1ad939e22300f4b4ee7f2ba2840da6ecf8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1ad939e22300f4b4ee7f2ba2840da6ecf8" kindref="member">WaveTrack::Split</ref>(<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t0,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>t1<sp/>)</highlight></codeline>
<codeline lineno="2385"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2386"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>SplitAt(<sp/>t0<sp/>);</highlight></codeline>
<codeline lineno="2387"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>ret<sp/>&amp;&amp;<sp/>t0<sp/>!=<sp/>t1<sp/>)</highlight></codeline>
<codeline lineno="2388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/>SplitAt(<sp/>t1<sp/>);</highlight></codeline>
<codeline lineno="2389"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="2390"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2391"><highlight class="normal"></highlight></codeline>
<codeline lineno="2392" refid="class_wave_track_1a769938d719138184ef8ba642ba1ae5c3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1a769938d719138184ef8ba642ba1ae5c3" kindref="member">WaveTrack::SplitAt</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>)</highlight></codeline>
<codeline lineno="2393"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2394"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(WaveClipList::compatibility_iterator<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>=GetClipIterator();<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>;<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>=<ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetNext())</highlight></codeline>
<codeline lineno="2395"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref>*<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref><sp/>=<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetData();</highlight></codeline>
<codeline lineno="2397"><highlight class="normal"></highlight></codeline>
<codeline lineno="2398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c-&gt;<ref refid="class_wave_clip_1a1077591aea50132fb96b1345527b4110" kindref="member">WithinClip</ref>(t))</highlight></codeline>
<codeline lineno="2399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="2401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>LongSamplesToTime(TimeToLongSamples(t));<sp/></highlight><highlight class="comment">//<sp/>put<sp/>t<sp/>on<sp/>a<sp/>sample</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>c-&gt;<ref refid="class_wave_clip_1a89df7eef9147be5868fe247c6239e5c8" kindref="member">GetEnvelope</ref>()-&gt;<ref refid="class_envelope_1ac5729053c923e47b43f0f063845c2ce9" kindref="member">GetValue</ref>(t);</highlight></codeline>
<codeline lineno="2403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//make<sp/>two<sp/>envelope<sp/>points<sp/>to<sp/>preserve<sp/>the<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//handle<sp/>the<sp/>case<sp/>where<sp/>we<sp/>split<sp/>on<sp/>the<sp/>1st<sp/>sample<sp/>(without<sp/>this<sp/>we<sp/>hit<sp/>an<sp/>assert)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(t<sp/>-<sp/>1.0/c-&gt;<ref refid="class_wave_clip_1a04d1806de89e39538576880a8dd43c11" kindref="member">GetRate</ref>()<sp/>&gt;=<sp/>c-&gt;<ref refid="class_wave_clip_1a070d7b2328a78c6ddaecc2f60ad4567f" kindref="member">GetOffset</ref>())</highlight></codeline>
<codeline lineno="2406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c-&gt;<ref refid="class_wave_clip_1a89df7eef9147be5868fe247c6239e5c8" kindref="member">GetEnvelope</ref>()-&gt;<ref refid="class_envelope_1aa0d5f77099711f3843108dbce4cf4ed2" kindref="member">Insert</ref>(t<sp/>-<sp/>c-&gt;<ref refid="class_wave_clip_1a070d7b2328a78c6ddaecc2f60ad4567f" kindref="member">GetOffset</ref>()<sp/>-<sp/>1.0/c-&gt;<ref refid="class_wave_clip_1a04d1806de89e39538576880a8dd43c11" kindref="member">GetRate</ref>(),<sp/>val);<sp/><sp/></highlight><highlight class="comment">//<sp/>frame<sp/>end<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c-&gt;<ref refid="class_wave_clip_1a89df7eef9147be5868fe247c6239e5c8" kindref="member">GetEnvelope</ref>()-&gt;<ref refid="class_envelope_1aa0d5f77099711f3843108dbce4cf4ed2" kindref="member">Insert</ref>(t<sp/>-<sp/>c-&gt;<ref refid="class_wave_clip_1a070d7b2328a78c6ddaecc2f60ad4567f" kindref="member">GetOffset</ref>(),<sp/>val);</highlight></codeline>
<codeline lineno="2408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref>*<sp/>newClip<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref>(*c,<sp/>mDirManager);</highlight></codeline>
<codeline lineno="2409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!c-&gt;<ref refid="class_wave_clip_1aff72eda8b7f0c6dec6ff16c7b30c622c" kindref="member">Clear</ref>(t,<sp/>c-&gt;<ref refid="class_wave_clip_1a7c878143bdd7641be183325944d02f39" kindref="member">GetEndTime</ref>()))</highlight></codeline>
<codeline lineno="2410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>newClip;</highlight></codeline>
<codeline lineno="2412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!newClip-&gt;<ref refid="class_wave_clip_1aff72eda8b7f0c6dec6ff16c7b30c622c" kindref="member">Clear</ref>(c-&gt;<ref refid="class_wave_clip_1a839a293df9246f7a9bb6fcf4d8be7b40" kindref="member">GetStartTime</ref>(),<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>))</highlight></codeline>
<codeline lineno="2415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>newClip;</highlight></codeline>
<codeline lineno="2417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2419"><highlight class="normal"></highlight></codeline>
<codeline lineno="2420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//offset<sp/>the<sp/>NEW<sp/>clip<sp/>by<sp/>the<sp/>splitpoint<sp/>(noting<sp/>that<sp/>it<sp/>is<sp/>already<sp/>offset<sp/>to<sp/>c-&gt;GetStartTime())</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>here<sp/>=<sp/>llrint(floor(((t<sp/>-<sp/>c-&gt;<ref refid="class_wave_clip_1a839a293df9246f7a9bb6fcf4d8be7b40" kindref="member">GetStartTime</ref>())<sp/>*<sp/>mRate)<sp/>+<sp/>0.5));</highlight></codeline>
<codeline lineno="2422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newClip-&gt;<ref refid="class_wave_clip_1a02ede29411c67eb9bc3193e6f1f453eb" kindref="member">Offset</ref>((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)here/(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)mRate);</highlight></codeline>
<codeline lineno="2423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mClips.Append(newClip);</highlight></codeline>
<codeline lineno="2424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2426"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2427"><highlight class="normal"></highlight></codeline>
<codeline lineno="2428"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2429"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2430"><highlight class="normal"></highlight></codeline>
<codeline lineno="2431" refid="class_wave_track_1a00b8ff13124c65a9b937e546cbcff466" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1a00b8ff13124c65a9b937e546cbcff466" kindref="member">WaveTrack::UpdateLocationsCache</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2432"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2433"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="2434"><highlight class="normal"><sp/><sp/><sp/>WaveClipArray<sp/>clips;</highlight></codeline>
<codeline lineno="2435"><highlight class="normal"></highlight></codeline>
<codeline lineno="2436"><highlight class="normal"><sp/><sp/><sp/>FillSortedClipArray(clips);</highlight></codeline>
<codeline lineno="2437"><highlight class="normal"></highlight></codeline>
<codeline lineno="2438"><highlight class="normal"><sp/><sp/><sp/>mDisplayLocationsCache.clear();</highlight></codeline>
<codeline lineno="2439"><highlight class="normal"></highlight></codeline>
<codeline lineno="2440"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Count<sp/>number<sp/>of<sp/>display<sp/>locations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2441"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2442"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>clips.GetCount();<sp/>i++)</highlight></codeline>
<codeline lineno="2443"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref>*<sp/>clip<sp/>=<sp/>clips.Item(i);</highlight></codeline>
<codeline lineno="2445"><highlight class="normal"></highlight></codeline>
<codeline lineno="2446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>num<sp/>+=<sp/>clip-&gt;<ref refid="class_wave_clip_1a1c1ecfe9be3476335a2bf66d80774f03" kindref="member">GetCutLines</ref>()-&gt;GetCount();</highlight></codeline>
<codeline lineno="2447"><highlight class="normal"></highlight></codeline>
<codeline lineno="2448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>fabs(clips.Item(i<sp/>-<sp/>1)-&gt;GetEndTime()<sp/>-</highlight></codeline>
<codeline lineno="2449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clip-&gt;<ref refid="class_wave_clip_1a839a293df9246f7a9bb6fcf4d8be7b40" kindref="member">GetStartTime</ref>())<sp/>&lt;<sp/><ref refid="_wave_track_8h_1a49de0e8a9d91fb9eb450291e4e230b8b" kindref="member">WAVETRACK_MERGE_POINT_TOLERANCE</ref>)</highlight></codeline>
<codeline lineno="2450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++num;</highlight></codeline>
<codeline lineno="2451"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2452"><highlight class="normal"></highlight></codeline>
<codeline lineno="2453"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(num<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="2454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2455"><highlight class="normal"></highlight></codeline>
<codeline lineno="2456"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Alloc<sp/>necessary<sp/>number<sp/>of<sp/>display<sp/>locations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2457"><highlight class="normal"><sp/><sp/><sp/>mDisplayLocationsCache.reserve(num);</highlight></codeline>
<codeline lineno="2458"><highlight class="normal"></highlight></codeline>
<codeline lineno="2459"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>all<sp/>display<sp/>locations<sp/>to<sp/>cache</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2460"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>curpos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2461"><highlight class="normal"></highlight></codeline>
<codeline lineno="2462"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>clips.GetCount();<sp/>i++)</highlight></codeline>
<codeline lineno="2463"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref>*<sp/>clip<sp/>=<sp/>clips.Item(i);</highlight></codeline>
<codeline lineno="2465"><highlight class="normal"></highlight></codeline>
<codeline lineno="2466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>WaveClipList*<sp/>cutlines<sp/>=<sp/>clip-&gt;<ref refid="class_wave_clip_1a1c1ecfe9be3476335a2bf66d80774f03" kindref="member">GetCutLines</ref>();</highlight></codeline>
<codeline lineno="2467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(WaveClipList::compatibility_iterator<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref><sp/>=<sp/>cutlines-&gt;GetFirst();<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>;</highlight></codeline>
<codeline lineno="2468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref><sp/>=<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetNext())</highlight></codeline>
<codeline lineno="2469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>cut<sp/>line<sp/>expander<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mDisplayLocationsCache.push_back(<ref refid="struct_wave_track_location" kindref="compound">WaveTrackLocation</ref>{</highlight></codeline>
<codeline lineno="2472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clip-&gt;<ref refid="class_wave_clip_1a070d7b2328a78c6ddaecc2f60ad4567f" kindref="member">GetOffset</ref>()<sp/>+<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetData()-&gt;GetOffset(),</highlight></codeline>
<codeline lineno="2473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_wave_track_location_1a0a54a8fbcc73dfe63879bcff10a75c6da399879306fdea1e62201b1045d682e78" kindref="member">WaveTrackLocation::locationCutLine</ref></highlight></codeline>
<codeline lineno="2474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="2475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curpos++;</highlight></codeline>
<codeline lineno="2476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2477"><highlight class="normal"></highlight></codeline>
<codeline lineno="2478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="2479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref>*<sp/>previousClip<sp/>=<sp/>clips.Item(i<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="2481"><highlight class="normal"></highlight></codeline>
<codeline lineno="2482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fabs(previousClip-&gt;<ref refid="class_wave_clip_1a7c878143bdd7641be183325944d02f39" kindref="member">GetEndTime</ref>()<sp/>-<sp/>clip-&gt;<ref refid="class_wave_clip_1a839a293df9246f7a9bb6fcf4d8be7b40" kindref="member">GetStartTime</ref>())</highlight></codeline>
<codeline lineno="2483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;<sp/><ref refid="_wave_track_8h_1a49de0e8a9d91fb9eb450291e4e230b8b" kindref="member">WAVETRACK_MERGE_POINT_TOLERANCE</ref>)</highlight></codeline>
<codeline lineno="2484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>merge<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mDisplayLocationsCache.push_back(<ref refid="struct_wave_track_location" kindref="compound">WaveTrackLocation</ref>{</highlight></codeline>
<codeline lineno="2487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clips.Item(i<sp/>-<sp/>1)-&gt;GetEndTime(),</highlight></codeline>
<codeline lineno="2488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_wave_track_location_1a0a54a8fbcc73dfe63879bcff10a75c6da871a4f5cfaaaa8055d719336eca06f11" kindref="member">WaveTrackLocation::locationMergePoint</ref>,</highlight></codeline>
<codeline lineno="2489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mClips.IndexOf(previousClip),</highlight></codeline>
<codeline lineno="2490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mClips.IndexOf(clip)</highlight></codeline>
<codeline lineno="2491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="2492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curpos++;</highlight></codeline>
<codeline lineno="2493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2495"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2496"><highlight class="normal"></highlight></codeline>
<codeline lineno="2497"><highlight class="normal"><sp/><sp/><sp/>wxASSERT(curpos<sp/>==<sp/>num);</highlight></codeline>
<codeline lineno="2498"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2499"><highlight class="normal"></highlight></codeline>
<codeline lineno="2500"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Expand<sp/>cut<sp/>line<sp/>(that<sp/>is,<sp/>re-insert<sp/>audio,<sp/>then<sp/>DELETE<sp/>audio<sp/>saved<sp/>in<sp/>cut<sp/>line)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2501" refid="class_wave_track_1a66de941065c151bc6ef012dca3f5ea7e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1a66de941065c151bc6ef012dca3f5ea7e" kindref="member">WaveTrack::ExpandCutLine</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cutLinePosition,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>cutlineStart,</highlight></codeline>
<codeline lineno="2502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>cutlineEnd)</highlight></codeline>
<codeline lineno="2503"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2504"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>editClipCanMove<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2505"><highlight class="normal"><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(wxT(</highlight><highlight class="stringliteral">&quot;/GUI/EditClipCanMove&quot;</highlight><highlight class="normal">),<sp/>&amp;editClipCanMove);</highlight></codeline>
<codeline lineno="2506"><highlight class="normal"></highlight></codeline>
<codeline lineno="2507"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>clip<sp/>which<sp/>contains<sp/>this<sp/>cut<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2508"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(WaveClipList::compatibility_iterator<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>=GetClipIterator();<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>;<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>=<ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetNext())</highlight></codeline>
<codeline lineno="2509"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref>*<sp/>clip<sp/>=<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetData();</highlight></codeline>
<codeline lineno="2511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref><sp/>=<sp/>0,<sp/><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2512"><highlight class="normal"></highlight></codeline>
<codeline lineno="2513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clip-&gt;<ref refid="class_wave_clip_1a488b6cd7e76c282a1bf70200beb4d66c" kindref="member">FindCutLine</ref>(cutLinePosition,<sp/>&amp;start,<sp/>&amp;<ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>))</highlight></codeline>
<codeline lineno="2514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>WaveClipList::compatibility_iterator<sp/>it2;</highlight></codeline>
<codeline lineno="2516"><highlight class="normal"></highlight></codeline>
<codeline lineno="2517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!editClipCanMove)</highlight></codeline>
<codeline lineno="2518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>are<sp/>not<sp/>allowed<sp/>to<sp/>move<sp/>the<sp/>other<sp/>clips,<sp/>so<sp/>see<sp/>if<sp/>there</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>enough<sp/>room<sp/>to<sp/>expand<sp/>the<sp/>cut<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it2=GetClipIterator();<sp/>it2;<sp/>it2=it2-&gt;GetNext())</highlight></codeline>
<codeline lineno="2522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref><sp/>*clip2<sp/>=<sp/>it2-&gt;GetData();</highlight></codeline>
<codeline lineno="2524"><highlight class="normal"></highlight></codeline>
<codeline lineno="2525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clip2-&gt;<ref refid="class_wave_clip_1a839a293df9246f7a9bb6fcf4d8be7b40" kindref="member">GetStartTime</ref>()<sp/>&gt;<sp/>clip-&gt;<ref refid="class_wave_clip_1a839a293df9246f7a9bb6fcf4d8be7b40" kindref="member">GetStartTime</ref>()<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clip-&gt;<ref refid="class_wave_clip_1a7c878143bdd7641be183325944d02f39" kindref="member">GetEndTime</ref>()<sp/>+<sp/><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref><sp/>-<sp/>start<sp/>&gt;<sp/>clip2-&gt;<ref refid="class_wave_clip_1a839a293df9246f7a9bb6fcf4d8be7b40" kindref="member">GetStartTime</ref>())</highlight></codeline>
<codeline lineno="2527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxMessageBox(</highlight></codeline>
<codeline lineno="2529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;There<sp/>is<sp/>not<sp/>enough<sp/>room<sp/>available<sp/>to<sp/>expand<sp/>the<sp/>cut<sp/>line&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="2530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Error&quot;</highlight><highlight class="normal">),<sp/>wxICON_STOP);</highlight></codeline>
<codeline lineno="2531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2535"><highlight class="normal"></highlight></codeline>
<codeline lineno="2536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!clip-&gt;<ref refid="class_wave_clip_1af6c3f9e851393b1197a370b0a499ba85" kindref="member">ExpandCutLine</ref>(cutLinePosition))</highlight></codeline>
<codeline lineno="2537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2538"><highlight class="normal"></highlight></codeline>
<codeline lineno="2539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cutlineStart)</highlight></codeline>
<codeline lineno="2540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*cutlineStart<sp/>=<sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>;</highlight></codeline>
<codeline lineno="2541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cutlineEnd)</highlight></codeline>
<codeline lineno="2542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*cutlineEnd<sp/>=<sp/><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>;</highlight></codeline>
<codeline lineno="2543"><highlight class="normal"></highlight></codeline>
<codeline lineno="2544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Move<sp/>clips<sp/>which<sp/>are<sp/>to<sp/>the<sp/>right<sp/>of<sp/>the<sp/>cut<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(editClipCanMove)</highlight></codeline>
<codeline lineno="2546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(it2=GetClipIterator();<sp/>it2;</highlight></codeline>
<codeline lineno="2548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it2=it2-&gt;GetNext())</highlight></codeline>
<codeline lineno="2549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref>*<sp/>clip2<sp/>=<sp/>it2-&gt;GetData();</highlight></codeline>
<codeline lineno="2551"><highlight class="normal"></highlight></codeline>
<codeline lineno="2552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(clip2-&gt;<ref refid="class_wave_clip_1a839a293df9246f7a9bb6fcf4d8be7b40" kindref="member">GetStartTime</ref>()<sp/>&gt;<sp/>clip-&gt;<ref refid="class_wave_clip_1a839a293df9246f7a9bb6fcf4d8be7b40" kindref="member">GetStartTime</ref>())</highlight></codeline>
<codeline lineno="2553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clip2-&gt;<ref refid="class_wave_clip_1a02ede29411c67eb9bc3193e6f1f453eb" kindref="member">Offset</ref>(<ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref><sp/>-<sp/>start);</highlight></codeline>
<codeline lineno="2554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2556"><highlight class="normal"></highlight></codeline>
<codeline lineno="2557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2559"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2560"><highlight class="normal"></highlight></codeline>
<codeline lineno="2561"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2562"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2563"><highlight class="normal"></highlight></codeline>
<codeline lineno="2564" refid="class_wave_track_1a72f9ed30336279133f57bee0d1958c38" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1a72f9ed30336279133f57bee0d1958c38" kindref="member">WaveTrack::RemoveCutLine</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cutLinePosition)</highlight></codeline>
<codeline lineno="2565"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2566"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(WaveClipList::compatibility_iterator<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>=GetClipIterator();<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>;<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>=<ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetNext())</highlight></codeline>
<codeline lineno="2567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetData()-&gt;RemoveCutLine(cutLinePosition))</highlight></codeline>
<codeline lineno="2568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2569"><highlight class="normal"></highlight></codeline>
<codeline lineno="2570"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2571"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2572"><highlight class="normal"></highlight></codeline>
<codeline lineno="2573" refid="class_wave_track_1a06a36f1d12be7617ba580664f69f9965" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1a06a36f1d12be7617ba580664f69f9965" kindref="member">WaveTrack::MergeClips</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>clipidx1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>clipidx2)</highlight></codeline>
<codeline lineno="2574"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2575"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref>*<sp/>clip1<sp/>=<sp/>GetClipByIndex(clipidx1);</highlight></codeline>
<codeline lineno="2576"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref>*<sp/>clip2<sp/>=<sp/>GetClipByIndex(clipidx2);</highlight></codeline>
<codeline lineno="2577"><highlight class="normal"></highlight></codeline>
<codeline lineno="2578"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!clip1<sp/>||<sp/>!clip2)<sp/></highlight><highlight class="comment">//<sp/>Could<sp/>happen<sp/>if<sp/>one<sp/>track<sp/>of<sp/>a<sp/>linked<sp/>pair<sp/>had<sp/>a<sp/>split<sp/>and<sp/>the<sp/>other<sp/>didn&apos;t.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2580"><highlight class="normal"></highlight></codeline>
<codeline lineno="2581"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Append<sp/>data<sp/>from<sp/>second<sp/>clip<sp/>to<sp/>first<sp/>clip</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2582"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!clip1-&gt;<ref refid="class_wave_clip_1a72dc26a0e0eb5ac08696cee72c81b477" kindref="member">Paste</ref>(clip1-&gt;<ref refid="class_wave_clip_1a7c878143bdd7641be183325944d02f39" kindref="member">GetEndTime</ref>(),<sp/>clip2))</highlight></codeline>
<codeline lineno="2583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2584"><highlight class="normal"></highlight></codeline>
<codeline lineno="2585"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Delete<sp/>second<sp/>clip</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2586"><highlight class="normal"><sp/><sp/><sp/>mClips.DeleteObject(clip2);</highlight></codeline>
<codeline lineno="2587"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>clip2;</highlight></codeline>
<codeline lineno="2588"><highlight class="normal"></highlight></codeline>
<codeline lineno="2589"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2590"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2591"><highlight class="normal"></highlight></codeline>
<codeline lineno="2592" refid="class_wave_track_1ad3d90c746e52a3b82295d99a50e7549b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1ad3d90c746e52a3b82295d99a50e7549b" kindref="member">WaveTrack::Resample</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="test__lib_f_l_a_c_2format_8c_1a960ad82c3ba394a46f17f5f6146c93ea" kindref="member">rate</ref>,<sp/><ref refid="class_progress_dialog" kindref="compound">ProgressDialog</ref><sp/>*progress)</highlight></codeline>
<codeline lineno="2593"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2594"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(WaveClipList::compatibility_iterator<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>=GetClipIterator();<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>;<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>=<ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetNext())</highlight></codeline>
<codeline lineno="2595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetData()-&gt;Resample(rate,<sp/>progress))</highlight></codeline>
<codeline lineno="2596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxLogDebug(<sp/>wxT(</highlight><highlight class="stringliteral">&quot;Resampling<sp/>problem!<sp/><sp/>We&apos;re<sp/>partially<sp/>resampled&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="2598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>The<sp/>track<sp/>is<sp/>now<sp/>in<sp/>an<sp/>inconsistent<sp/>state<sp/>since<sp/>some</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clips<sp/>are<sp/>resampled<sp/>and<sp/>some<sp/>are<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2602"><highlight class="normal"></highlight></codeline>
<codeline lineno="2603"><highlight class="normal"><sp/><sp/><sp/>mRate<sp/>=<sp/><ref refid="test__lib_f_l_a_c_2format_8c_1a960ad82c3ba394a46f17f5f6146c93ea" kindref="member">rate</ref>;</highlight></codeline>
<codeline lineno="2604"><highlight class="normal"></highlight></codeline>
<codeline lineno="2605"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2606"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2607"><highlight class="normal"></highlight></codeline>
<codeline lineno="2608"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>SortClipArrayCmpFunc(<ref refid="class_wave_clip" kindref="compound">WaveClip</ref>**<sp/>clip1,<sp/><ref refid="class_wave_clip" kindref="compound">WaveClip</ref>**<sp/>clip2)</highlight></codeline>
<codeline lineno="2609"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2610"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((*clip1)-&gt;GetStartTime()<sp/>&lt;<sp/>(*clip2)-&gt;GetStartTime())</highlight></codeline>
<codeline lineno="2611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="2612"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="2614"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2615"><highlight class="normal"></highlight></codeline>
<codeline lineno="2616" refid="class_wave_track_1acb1fc325d50a01d0f9716788d3dc62b3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1acb1fc325d50a01d0f9716788d3dc62b3" kindref="member">WaveTrack::FillSortedClipArray</ref>(WaveClipArray&amp;<sp/>clips)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="2617"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2618"><highlight class="normal"><sp/><sp/><sp/>clips.Empty();</highlight></codeline>
<codeline lineno="2619"><highlight class="normal"></highlight></codeline>
<codeline lineno="2620"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(WaveClipList::compatibility_iterator<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref><sp/>=</highlight></codeline>
<codeline lineno="2621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>const_cast&lt;WaveTrack*&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">)-&gt;GetClipIterator();<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>;<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>=<ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetNext())</highlight></codeline>
<codeline lineno="2622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>clips.Add(<ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetData());</highlight></codeline>
<codeline lineno="2623"><highlight class="normal"></highlight></codeline>
<codeline lineno="2624"><highlight class="normal"><sp/><sp/><sp/>clips.Sort(SortClipArrayCmpFunc);</highlight></codeline>
<codeline lineno="2625"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2626"><highlight class="normal"></highlight></codeline>
<codeline lineno="2628" refid="class_wave_track_1ac2e0fb56a6fd859520ed3f89eba9718b" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1ac2e0fb56a6fd859520ed3f89eba9718b" kindref="member">WaveTrack::DeleteWaveCaches</ref>()</highlight></codeline>
<codeline lineno="2629"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2630"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(WaveClipList::compatibility_iterator<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>=GetClipIterator();<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>;<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>=<ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetNext())</highlight></codeline>
<codeline lineno="2631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetData()-&gt;DeleteWaveCache();</highlight></codeline>
<codeline lineno="2632"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2633"><highlight class="normal"></highlight></codeline>
<codeline lineno="2635" refid="class_wave_track_1a108276d05d8faeb7a961b3400a634006" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1a108276d05d8faeb7a961b3400a634006" kindref="member">WaveTrack::AddInvalidRegion</ref>(<ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>startSample,<sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>endSample)</highlight></codeline>
<codeline lineno="2636"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2637"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(WaveClipList::compatibility_iterator<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>=GetClipIterator();<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>;<sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>=<ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetNext())</highlight></codeline>
<codeline lineno="2638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>-&gt;GetData()-&gt;AddInvalidRegion(startSample,endSample);</highlight></codeline>
<codeline lineno="2639"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2640"><highlight class="normal"></highlight></codeline>
<codeline lineno="2641" refid="class_wave_track_1ae148d756ee549d196cc8c24600e01ebf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1ae148d756ee549d196cc8c24600e01ebf" kindref="member">WaveTrack::GetAutoSaveIdent</ref>()</highlight></codeline>
<codeline lineno="2642"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2643"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mAutoSaveIdent;</highlight></codeline>
<codeline lineno="2644"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2645"><highlight class="normal"></highlight></codeline>
<codeline lineno="2646" refid="class_wave_track_1a1e9090e6e1bfee1d312528e3d3345025" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_1a1e9090e6e1bfee1d312528e3d3345025" kindref="member">WaveTrack::SetAutoSaveIdent</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ident)</highlight></codeline>
<codeline lineno="2647"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2648"><highlight class="normal"><sp/><sp/><sp/>mAutoSaveIdent<sp/>=<sp/>ident;</highlight></codeline>
<codeline lineno="2649"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2650"><highlight class="normal"></highlight></codeline>
<codeline lineno="2651" refid="class_wave_track_cache_1ab047b20fa99329025aa65db1af601e5c" refkind="member"><highlight class="normal"><ref refid="class_wave_track_cache_1ab047b20fa99329025aa65db1af601e5c" kindref="member">WaveTrackCache::~WaveTrackCache</ref>()</highlight></codeline>
<codeline lineno="2652"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2653"><highlight class="normal"><sp/><sp/><sp/>Free();</highlight></codeline>
<codeline lineno="2654"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2655"><highlight class="normal"></highlight></codeline>
<codeline lineno="2656" refid="class_wave_track_cache_1a267446b098e82cda876480feebf5fc9c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_wave_track_cache_1a267446b098e82cda876480feebf5fc9c" kindref="member">WaveTrackCache::SetTrack</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*pTrack)</highlight></codeline>
<codeline lineno="2657"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2658"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mPTrack<sp/>!=<sp/>pTrack)<sp/>{</highlight></codeline>
<codeline lineno="2659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pTrack)<sp/>{</highlight></codeline>
<codeline lineno="2660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBufferSize<sp/>=<sp/>pTrack-&gt;<ref refid="class_wave_track_1a59ca00cf8abf1c28d043effec2866870" kindref="member">GetMaxBlockSize</ref>();</highlight></codeline>
<codeline lineno="2661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mPTrack<sp/>||</highlight></codeline>
<codeline lineno="2662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mPTrack-&gt;GetMaxBlockSize()<sp/>!=<sp/>mBufferSize)<sp/>{</highlight></codeline>
<codeline lineno="2663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Free();</highlight></codeline>
<codeline lineno="2664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuffers[0].data<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[mBufferSize];</highlight></codeline>
<codeline lineno="2665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuffers[1].data<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[mBufferSize];</highlight></codeline>
<codeline lineno="2666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Free();</highlight></codeline>
<codeline lineno="2670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mPTrack<sp/>=<sp/>pTrack;</highlight></codeline>
<codeline lineno="2671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mNValidBuffers<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2672"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2673"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2674"><highlight class="normal"></highlight></codeline>
<codeline lineno="2675" refid="class_wave_track_cache_1a13aabc9536d3b6c0013b03f1ebb9e271" refkind="member"><highlight class="normal"><ref refid="include_2audacity_2_types_8h_1ae9d797c03eedf134ab8f620fc7bc753e" kindref="member">constSamplePtr</ref><sp/><ref refid="class_wave_track_cache_1a13aabc9536d3b6c0013b03f1ebb9e271" kindref="member">WaveTrackCache::Get</ref>(<ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792" kindref="member">sampleFormat</ref><sp/><ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref>,</highlight></codeline>
<codeline lineno="2676"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>,<sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>)</highlight></codeline>
<codeline lineno="2677"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2678"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(format<sp/>==<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref><sp/>&amp;&amp;<sp/>len<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref><sp/>=<sp/>start<sp/>+<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;</highlight></codeline>
<codeline lineno="2680"><highlight class="normal"></highlight></codeline>
<codeline lineno="2681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fillFirst<sp/>=<sp/>(mNValidBuffers<sp/>&lt;<sp/>1);</highlight></codeline>
<codeline lineno="2682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fillSecond<sp/>=<sp/>(mNValidBuffers<sp/>&lt;<sp/>2);</highlight></codeline>
<codeline lineno="2683"><highlight class="normal"></highlight></codeline>
<codeline lineno="2684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Discard<sp/>cached<sp/>results<sp/>that<sp/>we<sp/>no<sp/>longer<sp/>need</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mNValidBuffers<sp/>&gt;<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(end<sp/>&lt;=<sp/>mBuffers[0].start<sp/>||</highlight></codeline>
<codeline lineno="2687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start<sp/>&gt;=<sp/>mBuffers[mNValidBuffers<sp/>-<sp/>1].<ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>()))<sp/>{</highlight></codeline>
<codeline lineno="2688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Complete<sp/>miss</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fillFirst<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fillSecond<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mNValidBuffers<sp/>==<sp/>2<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start<sp/>&gt;=<sp/>mBuffers[1].start<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end<sp/>&gt;<sp/>mBuffers[1].<ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>())<sp/>{</highlight></codeline>
<codeline lineno="2695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Request<sp/>starts<sp/>in<sp/>the<sp/>second<sp/>buffer<sp/>and<sp/>extends<sp/>past<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Discard<sp/>the<sp/>first<sp/>buffer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(But<sp/>don&apos;t<sp/>deallocate<sp/>the<sp/>buffer<sp/>space.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*save<sp/>=<sp/>mBuffers[0].data;</highlight></codeline>
<codeline lineno="2699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuffers[0]<sp/>=<sp/>mBuffers[1];</highlight></codeline>
<codeline lineno="2700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuffers[1].data<sp/>=<sp/>save;</highlight></codeline>
<codeline lineno="2701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fillSecond<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mNValidBuffers<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mNValidBuffers<sp/>&gt;<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start<sp/>&lt;<sp/>mBuffers[0].start<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/>&lt;=<sp/>mPTrack-&gt;GetBlockStart(start))<sp/>{</highlight></codeline>
<codeline lineno="2707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Request<sp/>is<sp/>not<sp/>a<sp/>total<sp/>miss<sp/>but<sp/>starts<sp/>before<sp/>the<sp/>cache,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>there<sp/>is<sp/>a<sp/>clip<sp/>to<sp/>fetch<sp/>from.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Not<sp/>the<sp/>access<sp/>pattern<sp/>for<sp/>drawing<sp/>spectrogram<sp/>or<sp/>playback,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>but<sp/>maybe<sp/>scrubbing<sp/>causes<sp/>this.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Move<sp/>the<sp/>first<sp/>buffer<sp/>into<sp/>second<sp/>place,<sp/>and<sp/>later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>refill<sp/>the<sp/>first.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(This<sp/>case<sp/>might<sp/>be<sp/>useful<sp/>when<sp/>marching<sp/>backwards<sp/>through</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>track,<sp/>as<sp/>with<sp/>scrubbing.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*save<sp/>=<sp/>mBuffers[1].data;</highlight></codeline>
<codeline lineno="2716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuffers[1]<sp/>=<sp/>mBuffers[0];</highlight></codeline>
<codeline lineno="2717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuffers[0].data<sp/>=<sp/>save;</highlight></codeline>
<codeline lineno="2718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fillFirst<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Cache<sp/>is<sp/>not<sp/>in<sp/>a<sp/>consistent<sp/>state<sp/>yet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mNValidBuffers<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2722"><highlight class="normal"></highlight></codeline>
<codeline lineno="2723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Refill<sp/>buffers<sp/>as<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fillFirst)<sp/>{</highlight></codeline>
<codeline lineno="2725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>start0<sp/>=<sp/>mPTrack-&gt;GetBlockStart(start);</highlight></codeline>
<codeline lineno="2726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(start0<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>len0<sp/>=<sp/>mPTrack-&gt;GetBestBlockSize(start0);</highlight></codeline>
<codeline lineno="2728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxASSERT(len0<sp/>&lt;=<sp/>mBufferSize);</highlight></codeline>
<codeline lineno="2729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mPTrack-&gt;Get(<ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref>(mBuffers[0].<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>),<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>,<sp/>start0,<sp/>len0))</highlight></codeline>
<codeline lineno="2730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuffers[0].start<sp/>=<sp/>start0;</highlight></codeline>
<codeline lineno="2732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuffers[0].len<sp/>=<sp/>len0;</highlight></codeline>
<codeline lineno="2733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fillSecond<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="2734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuffers[0].<ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>()<sp/>!=<sp/>mBuffers[1].start)</highlight></codeline>
<codeline lineno="2735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fillSecond<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Keep<sp/>the<sp/>partially<sp/>updated<sp/>state<sp/>consistent:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mNValidBuffers<sp/>=<sp/>fillSecond<sp/>?<sp/>1<sp/>:<sp/>2;</highlight></codeline>
<codeline lineno="2738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Request<sp/>may<sp/>fall<sp/>between<sp/>the<sp/>clips<sp/>of<sp/>a<sp/>track.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Invalidate<sp/>all.<sp/><sp/>WaveTrack::Get()<sp/>will<sp/>return<sp/>zeroes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mNValidBuffers<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fillSecond<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxASSERT(!fillSecond<sp/>||<sp/>mNValidBuffers<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="2747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fillSecond)<sp/>{</highlight></codeline>
<codeline lineno="2748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mNValidBuffers<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="2749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>end0<sp/>=<sp/>mBuffers[0].end();</highlight></codeline>
<codeline lineno="2750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(end<sp/>&gt;<sp/>end0)<sp/>{</highlight></codeline>
<codeline lineno="2751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>start1<sp/>=<sp/>mPTrack-&gt;GetBlockStart(end0);</highlight></codeline>
<codeline lineno="2752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(start1<sp/>==<sp/>end0)<sp/>{</highlight></codeline>
<codeline lineno="2753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>len1<sp/>=<sp/>mPTrack-&gt;GetBestBlockSize(start1);</highlight></codeline>
<codeline lineno="2754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxASSERT(len1<sp/>&lt;=<sp/>mBufferSize);</highlight></codeline>
<codeline lineno="2755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mPTrack-&gt;Get(<ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref>(mBuffers[1].<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>),<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>,<sp/>start1,<sp/>len1))</highlight></codeline>
<codeline lineno="2756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuffers[1].start<sp/>=<sp/>start1;</highlight></codeline>
<codeline lineno="2758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mBuffers[1].len<sp/>=<sp/>len1;</highlight></codeline>
<codeline lineno="2759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mNValidBuffers<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="2760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxASSERT(mNValidBuffers<sp/>&lt;<sp/>2<sp/>||<sp/>mBuffers[0].<ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>()<sp/>==<sp/>mBuffers[1].start);</highlight></codeline>
<codeline lineno="2764"><highlight class="normal"></highlight></codeline>
<codeline lineno="2765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref><sp/><ref refid="structbuffer" kindref="compound">buffer</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>remaining<sp/>=<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;</highlight></codeline>
<codeline lineno="2767"><highlight class="normal"></highlight></codeline>
<codeline lineno="2768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Possibly<sp/>get<sp/>an<sp/>initial<sp/>portion<sp/>that<sp/>is<sp/>uncached</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>initLen<sp/>=</highlight></codeline>
<codeline lineno="2770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mNValidBuffers<sp/>&lt;<sp/>1<sp/>?<sp/>len<sp/>:<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">std::min</ref>(len,<sp/>mBuffers[0].start<sp/>-<sp/>start);</highlight></codeline>
<codeline lineno="2771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(initLen<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>might<sp/>be<sp/>fetching<sp/>zeroes<sp/>between<sp/>clips</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mOverlapBuffer.Resize(len,<sp/>format);</highlight></codeline>
<codeline lineno="2774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mPTrack-&gt;Get(mOverlapBuffer.ptr(),<sp/><ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref>,<sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>,<sp/>initLen))</highlight></codeline>
<codeline lineno="2775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remaining<sp/>-=<sp/>initLen;</highlight></codeline>
<codeline lineno="2777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start<sp/>+=<sp/>initLen;</highlight></codeline>
<codeline lineno="2778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer<sp/>=<sp/>mOverlapBuffer.ptr()<sp/>+<sp/>initLen<sp/>*<sp/><ref refid="include_2audacity_2_types_8h_1a7ecd88c1f16f362ccc891b8d1f6f69cb" kindref="member">SAMPLE_SIZE</ref>(format);</highlight></codeline>
<codeline lineno="2779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2780"><highlight class="normal"></highlight></codeline>
<codeline lineno="2781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>satisfy<sp/>the<sp/>request<sp/>from<sp/>the<sp/>buffers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ii<sp/>=<sp/>0;<sp/>ii<sp/>&lt;<sp/>mNValidBuffers<sp/>&amp;&amp;<sp/>remaining<sp/>&gt;<sp/>0;<sp/>++ii)<sp/>{</highlight></codeline>
<codeline lineno="2783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>starti<sp/>=<sp/>start<sp/>-<sp/>mBuffers[ii].start;</highlight></codeline>
<codeline lineno="2784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>leni<sp/>=<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">std::min</ref>(remaining,<sp/>mBuffers[ii].len<sp/>-<sp/>starti);</highlight></codeline>
<codeline lineno="2785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(leni<sp/>==<sp/>len)<sp/>{</highlight></codeline>
<codeline lineno="2786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>All<sp/>is<sp/>contiguous<sp/>already.<sp/><sp/>We<sp/>can<sp/>completely<sp/>avoid<sp/>copying</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref>(mBuffers[ii].<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref><sp/>+<sp/>starti);</highlight></codeline>
<codeline lineno="2788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(leni<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buffer<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mOverlapBuffer.Resize(len,<sp/>format);</highlight></codeline>
<codeline lineno="2792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer<sp/>=<sp/>mOverlapBuffer.ptr();</highlight></codeline>
<codeline lineno="2793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(float)<sp/>*<sp/>leni;</highlight></codeline>
<codeline lineno="2795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(buffer,<sp/>mBuffers[ii].<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref><sp/>+<sp/>starti,<sp/>size);</highlight></codeline>
<codeline lineno="2796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>remaining<sp/>-=<sp/>leni;</highlight></codeline>
<codeline lineno="2797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start<sp/>+=<sp/>leni;</highlight></codeline>
<codeline lineno="2798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer<sp/>+=<sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="2799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2801"><highlight class="normal"></highlight></codeline>
<codeline lineno="2802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(remaining<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Very<sp/>big<sp/>request!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fall<sp/>back<sp/>to<sp/>direct<sp/>fetch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mPTrack-&gt;Get(buffer,<sp/>format,<sp/>start,<sp/>remaining))</highlight></codeline>
<codeline lineno="2806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2808"><highlight class="normal"></highlight></codeline>
<codeline lineno="2809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mOverlapBuffer.ptr();</highlight></codeline>
<codeline lineno="2810"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2811"><highlight class="normal"></highlight></codeline>
<codeline lineno="2812"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Cache<sp/>works<sp/>only<sp/>for<sp/>float<sp/>format.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2813"><highlight class="normal"><sp/><sp/><sp/>mOverlapBuffer.Resize(len,<sp/>format);</highlight></codeline>
<codeline lineno="2814"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mPTrack-&gt;Get(mOverlapBuffer.ptr(),<sp/><ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref>,<sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>,<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>))</highlight></codeline>
<codeline lineno="2815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mOverlapBuffer.ptr();</highlight></codeline>
<codeline lineno="2816"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2818"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2819"><highlight class="normal"></highlight></codeline>
<codeline lineno="2820"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>WaveTrackCache::Free()</highlight></codeline>
<codeline lineno="2821"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2822"><highlight class="normal"><sp/><sp/><sp/>mBuffers[0].Free();</highlight></codeline>
<codeline lineno="2823"><highlight class="normal"><sp/><sp/><sp/>mBuffers[1].Free();</highlight></codeline>
<codeline lineno="2824"><highlight class="normal"><sp/><sp/><sp/>mOverlapBuffer.Free();</highlight></codeline>
<codeline lineno="2825"><highlight class="normal"><sp/><sp/><sp/>mNValidBuffers<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2826"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/src/WaveTrack.cpp"/>
  </compounddef>
</doxygen>
