<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="test__audio__analyzer_8c" kind="file" language="C++">
    <compoundname>test_audio_analyzer.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">math.h</includes>
    <includes refid="qa__tools_8h" local="yes">qa_tools.h</includes>
    <includes refid="audio__analyzer_8h" local="yes">audio_analyzer.h</includes>
    <includes refid="test__audio__analyzer_8h" local="yes">test_audio_analyzer.h</includes>
    <includes refid="write__wav_8h" local="yes">write_wav.h</includes>
    <includes refid="biquad__filter_8h" local="yes">biquad_filter.h</includes>
    <incdepgraph>
      <node id="29293">
        <label>stdlib.h</label>
      </node>
      <node id="29297">
        <label>biquad_filter.h</label>
        <link refid="biquad__filter_8h"/>
      </node>
      <node id="29299">
        <label>write_wav.h</label>
        <link refid="write__wav_8h"/>
      </node>
      <node id="29291">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/test_audio_analyzer.c</label>
        <link refid="test_audio_analyzer.c"/>
        <childnode refid="29292" relation="include">
        </childnode>
        <childnode refid="29293" relation="include">
        </childnode>
        <childnode refid="29294" relation="include">
        </childnode>
        <childnode refid="29295" relation="include">
        </childnode>
        <childnode refid="29296" relation="include">
        </childnode>
        <childnode refid="29298" relation="include">
        </childnode>
        <childnode refid="29299" relation="include">
        </childnode>
        <childnode refid="29297" relation="include">
        </childnode>
      </node>
      <node id="29298">
        <label>test_audio_analyzer.h</label>
        <link refid="test__audio__analyzer_8h"/>
      </node>
      <node id="29294">
        <label>math.h</label>
      </node>
      <node id="29292">
        <label>stdio.h</label>
      </node>
      <node id="29295">
        <label>qa_tools.h</label>
        <link refid="qa__tools_8h"/>
      </node>
      <node id="29296">
        <label>audio_analyzer.h</label>
        <link refid="audio__analyzer_8h"/>
        <childnode refid="29297" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="test__audio__analyzer_8c_1af19e095bf3ce66f4ee6568cfaf9941a4" prot="public" static="no">
        <name>FRAMES_PER_BLOCK</name>
        <initializer>(64)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/test_audio_analyzer.c" line="48" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/test_audio_analyzer.c" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="test__audio__analyzer_8c_1a2935ac69b4ecbf5c6f2fd33fcc3612d4" prot="public" static="no">
        <name>PRINT_REPORTS</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/test_audio_analyzer.c" line="49" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/test_audio_analyzer.c" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="test__audio__analyzer_8c_1aa35c426d1b1d86e9349e256f1819887d" prot="public" static="no">
        <name>TEST_SAVED_WAVE</name>
        <initializer>(0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/test_audio_analyzer.c" line="51" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/test_audio_analyzer.c" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="test__audio__analyzer_8c_1adb4feafe5da19da9570c1145351e1f89" prot="public" static="no">
        <name>NUM_TONES</name>
        <initializer>(5)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/test_audio_analyzer.c" line="112" column="9"/>
      </memberdef>
      <memberdef kind="define" id="test__audio__analyzer_8c_1a6b20d41d6252e9871430c242cb1a56e7" prot="public" static="no">
        <name>BUFFER_SIZE</name>
        <initializer>512</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/test_audio_analyzer.c" line="175" column="9"/>
      </memberdef>
      <memberdef kind="define" id="test__audio__analyzer_8c_1a6b20d41d6252e9871430c242cb1a56e7" prot="public" static="no">
        <name>BUFFER_SIZE</name>
        <initializer>512</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/test_audio_analyzer.c" line="231" column="9"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="test__audio__analyzer_8c_1a2f0314037f4792fe9c19ff27ff6c7994" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static int TestSingleMonoTone</definition>
        <argsstring>(void)</argsstring>
        <name>TestSingleMonoTone</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Detect a single tone. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/test_audio_analyzer.c" line="57" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/test_audio_analyzer.c" bodystart="57" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="test__audio__analyzer_8c_1acbc692d2c691145a92efe5ea6b66200a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static int TestMixedMonoTones</definition>
        <argsstring>(void)</argsstring>
        <name>TestMixedMonoTones</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Mix multiple tones and then detect them. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/test_audio_analyzer.c" line="108" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/test_audio_analyzer.c" bodystart="108" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="test__audio__analyzer_8c_1ab8d61a65e889db2024d6f025a3ace5e8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void MakeRecordingWithAddedFrames</definition>
        <argsstring>(PaQaRecording *recording, PaQaTestTone *testTone, int glitchPosition, int framesToAdd)</argsstring>
        <name>MakeRecordingWithAddedFrames</name>
        <param>
          <type><ref refid="audio__analyzer_8h_1ad8dbda49a320a7e18ce4215416afd9a7" kindref="member">PaQaRecording</ref> *</type>
          <declname>recording</declname>
        </param>
        <param>
          <type><ref refid="audio__analyzer_8h_1aeb941f66bc7a144aba7db0ed6088d9b1" kindref="member">PaQaTestTone</ref> *</type>
          <declname>testTone</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>glitchPosition</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>framesToAdd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Generate a recording with added or dropped frames. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/test_audio_analyzer.c" line="172" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/test_audio_analyzer.c" bodystart="172" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="test__audio__analyzer_8c_1a1bc00f07c50a46b87612183a8a3e9fbe" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void MakeCleanRecording</definition>
        <argsstring>(PaQaRecording *recording, PaQaTestTone *testTone)</argsstring>
        <name>MakeCleanRecording</name>
        <param>
          <type><ref refid="audio__analyzer_8h_1ad8dbda49a320a7e18ce4215416afd9a7" kindref="member">PaQaRecording</ref> *</type>
          <declname>recording</declname>
        </param>
        <param>
          <type><ref refid="audio__analyzer_8h_1aeb941f66bc7a144aba7db0ed6088d9b1" kindref="member">PaQaTestTone</ref> *</type>
          <declname>testTone</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Generate a clean recording. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/test_audio_analyzer.c" line="228" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/test_audio_analyzer.c" bodystart="228" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="test__audio__analyzer_8c_1a8ad3a3aade86876dab484252f50e2379" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void MakeRecordingWithPop</definition>
        <argsstring>(PaQaRecording *recording, PaQaTestTone *testTone, int popPosition, int popWidth, double popAmplitude)</argsstring>
        <name>MakeRecordingWithPop</name>
        <param>
          <type><ref refid="audio__analyzer_8h_1ad8dbda49a320a7e18ce4215416afd9a7" kindref="member">PaQaRecording</ref> *</type>
          <declname>recording</declname>
        </param>
        <param>
          <type><ref refid="audio__analyzer_8h_1aeb941f66bc7a144aba7db0ed6088d9b1" kindref="member">PaQaTestTone</ref> *</type>
          <declname>testTone</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>popPosition</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>popWidth</declname>
        </param>
        <param>
          <type>double</type>
          <declname>popAmplitude</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Generate a recording with pop. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/test_audio_analyzer.c" line="255" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/test_audio_analyzer.c" bodystart="255" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="test__audio__analyzer_8c_1aa98b10ffa7004d865c42b95f070099d0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static int TestDetectSinglePhaseError</definition>
        <argsstring>(double sampleRate, int cycleSize, int latencyFrames, int glitchPosition, int framesAdded)</argsstring>
        <name>TestDetectSinglePhaseError</name>
        <param>
          <type>double</type>
          <declname>sampleRate</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>cycleSize</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>latencyFrames</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>glitchPosition</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>framesAdded</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Detect one phase error in a recording. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/test_audio_analyzer.c" line="279" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/test_audio_analyzer.c" bodystart="279" bodyend="328"/>
      </memberdef>
      <memberdef kind="function" id="test__audio__analyzer_8c_1a4c8196db3d40126ad50b1f905d68b144" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static int TestDetectPhaseErrors</definition>
        <argsstring>(void)</argsstring>
        <name>TestDetectPhaseErrors</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="struct_test" kindref="compound">Test</ref> various dropped sample scenarios. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/test_audio_analyzer.c" line="334" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/test_audio_analyzer.c" bodystart="334" bodyend="364"/>
      </memberdef>
      <memberdef kind="function" id="test__audio__analyzer_8c_1ad9d4ba5415e81044256abeb50f8636a5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static int TestDetectSinglePop</definition>
        <argsstring>(double sampleRate, int cycleSize, int latencyFrames, int popPosition, int popWidth, double popAmplitude)</argsstring>
        <name>TestDetectSinglePop</name>
        <param>
          <type>double</type>
          <declname>sampleRate</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>cycleSize</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>latencyFrames</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>popPosition</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>popWidth</declname>
        </param>
        <param>
          <type>double</type>
          <declname>popAmplitude</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Detect one pop in a recording. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/test_audio_analyzer.c" line="370" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/test_audio_analyzer.c" bodystart="370" bodyend="418"/>
      </memberdef>
      <memberdef kind="function" id="test__audio__analyzer_8c_1a206795c85c178c67780a0dfa84a8681c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static int TestSingleInitialSpike</definition>
        <argsstring>(double sampleRate, int stepPosition, int cycleSize, int latencyFrames, double stepAmplitude)</argsstring>
        <name>TestSingleInitialSpike</name>
        <param>
          <type>double</type>
          <declname>sampleRate</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>stepPosition</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>cycleSize</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>latencyFrames</declname>
        </param>
        <param>
          <type>double</type>
          <declname>stepAmplitude</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Analyse recording with a DC offset. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/test_audio_analyzer.c" line="424" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/test_audio_analyzer.c" bodystart="424" bodyend="492"/>
      </memberdef>
      <memberdef kind="function" id="test__audio__analyzer_8c_1acc7ce32478872df590cf4c4504dd317a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static int TestDetectPops</definition>
        <argsstring>(void)</argsstring>
        <name>TestDetectPops</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="struct_test" kindref="compound">Test</ref> various dropped sample scenarios. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/test_audio_analyzer.c" line="498" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/test_audio_analyzer.c" bodystart="498" bodyend="520"/>
      </memberdef>
      <memberdef kind="function" id="test__audio__analyzer_8c_1a24be2870a53dae2712f39398a88b7369" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static int TestInitialSpike</definition>
        <argsstring>(void)</argsstring>
        <name>TestInitialSpike</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="struct_test" kindref="compound">Test</ref> analysis when there is a DC offset step before the sine signal. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/test_audio_analyzer.c" line="526" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/test_audio_analyzer.c" bodystart="526" bodyend="553"/>
      </memberdef>
      <memberdef kind="function" id="test__audio__analyzer_8c_1ad3cf3b24e555bbae9e2daf607d458ca4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void PaQa_FillWithSine</definition>
        <argsstring>(PaQaRecording *recording, double sampleRate, double freq, double amp)</argsstring>
        <name>PaQa_FillWithSine</name>
        <param>
          <type><ref refid="audio__analyzer_8h_1ad8dbda49a320a7e18ce4215416afd9a7" kindref="member">PaQaRecording</ref> *</type>
          <declname>recording</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sampleRate</declname>
        </param>
        <param>
          <type>double</type>
          <declname>freq</declname>
        </param>
        <param>
          <type>double</type>
          <declname>amp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Easy way to generate a sine tone recording. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/test_audio_analyzer.c" line="601" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/test_audio_analyzer.c" bodystart="601" bodyend="620"/>
      </memberdef>
      <memberdef kind="function" id="test__audio__analyzer_8c_1a1e6a92088455a4e68ca30ebccc98ee4d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>static int TestNotchFilter</definition>
        <argsstring>(void)</argsstring>
        <name>TestNotchFilter</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Generate a tone then knock it out using a filter. Also check using filter slightly off tune to see if some energy gets through. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/test_audio_analyzer.c" line="627" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/test_audio_analyzer.c" bodystart="627" bodyend="684"/>
      </memberdef>
      <memberdef kind="function" id="test__audio__analyzer_8c_1a5e542ff033899b8794caf83e6d15aa4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int PaQa_TestAnalyzer</definition>
        <argsstring>(void)</argsstring>
        <name>PaQa_TestAnalyzer</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="struct_test" kindref="compound">Test</ref> the audio analyzer by itself without any PortAudio calls. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/test_audio_analyzer.c" line="689" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/test_audio_analyzer.c" bodystart="689" bodyend="718"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>PortAudio<sp/>Portable<sp/>Real-Time<sp/>Audio<sp/>Library</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Latest<sp/>Version<sp/>at:<sp/>http://www.portaudio.com</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>1999-2010<sp/>Phil<sp/>Burk<sp/>and<sp/>Ross<sp/>Bencina</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>The<sp/>text<sp/>above<sp/>constitutes<sp/>the<sp/>entire<sp/>PortAudio<sp/>license;<sp/>however,<sp/></highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>the<sp/>PortAudio<sp/>community<sp/>also<sp/>makes<sp/>the<sp/>following<sp/>non-binding<sp/>requests:</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>Any<sp/>person<sp/>wishing<sp/>to<sp/>distribute<sp/>modifications<sp/>to<sp/>the<sp/>Software<sp/>is</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/>requested<sp/>to<sp/>send<sp/>the<sp/>modifications<sp/>to<sp/>the<sp/>original<sp/>developer<sp/>so<sp/>that</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>they<sp/>can<sp/>be<sp/>incorporated<sp/>into<sp/>the<sp/>canonical<sp/>version.<sp/>It<sp/>is<sp/>also<sp/></highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/>requested<sp/>that<sp/>these<sp/>non-binding<sp/>requests<sp/>be<sp/>included<sp/>along<sp/>with<sp/>the<sp/></highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/>license<sp/>above.</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="qa__tools_8h" kindref="compound">qa_tools.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="audio__analyzer_8h" kindref="compound">audio_analyzer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="test__audio__analyzer_8h" kindref="compound">test_audio_analyzer.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="write__wav_8h" kindref="compound">write_wav.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="biquad__filter_8h" kindref="compound">biquad_filter.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="test__audio__analyzer_8c_1af19e095bf3ce66f4ee6568cfaf9941a4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FRAMES_PER_BLOCK<sp/><sp/>(64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="test__audio__analyzer_8c_1a2935ac69b4ecbf5c6f2fd33fcc3612d4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PRINT_REPORTS<sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="test__audio__analyzer_8c_1aa35c426d1b1d86e9349e256f1819887d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TEST_SAVED_WAVE<sp/><sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">/*==========================================================================================*/</highlight></codeline>
<codeline lineno="57"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>TestSingleMonoTone(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="58"><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_qa_sine_generator__s" kindref="compound">PaQaSineGenerator</ref><sp/>generator;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_qa_recording__s" kindref="compound">PaQaRecording</ref><sp/><sp/><sp/><sp/><sp/>recording;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structbuffer" kindref="compound">buffer</ref>[<ref refid="test__audio__analyzer_8c_1af19e095bf3ce66f4ee6568cfaf9941a4" kindref="member">FRAMES_PER_BLOCK</ref>];</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacepatest__suggested__vs__streaminfo__latency_1a14f2ecd6f756d329f6df4096833062d0" kindref="member">sampleRate</ref><sp/>=<sp/>44100.0;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxFrames<sp/>=<sp/>((<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)sampleRate)<sp/>*<sp/>1;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>samplesPerFrame<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="midiclock_8c_1a5f689029e53f12e337967312e0a17717" kindref="member">done</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>freq<sp/>=<sp/>234.5;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>amp<sp/>=<sp/>0.5;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mag1,<sp/>mag2;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>a<sp/>sine<sp/>oscillator.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="audio__analyzer_8c_1a5b15fa5f9ffe7d147b31f747c40ff49b" kindref="member">PaQa_SetupSineGenerator</ref>(<sp/>&amp;generator,<sp/>freq,<sp/>amp,<sp/>sampleRate<sp/>);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="audio__analyzer_8c_1a13f48cb441107ed8d398bb6c63f802ae" kindref="member">PaQa_InitializeRecording</ref>(<sp/>&amp;recording,<sp/>maxFrames,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>sampleRate<sp/>);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="qa__tools_8h_1a236d0b49165b23edd501e3562ae14485" kindref="member">QA_ASSERT_EQUALS</ref>(<sp/></highlight><highlight class="stringliteral">&quot;PaQa_InitializeRecording<sp/>failed&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>result<sp/>);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>done<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!done)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="audio__analyzer_8c_1a0d053fe46ae855fa1401098ea08efa88" kindref="member">PaQa_EraseBuffer</ref>(<sp/>buffer,<sp/><ref refid="test__audio__analyzer_8c_1af19e095bf3ce66f4ee6568cfaf9941a4" kindref="member">FRAMES_PER_BLOCK</ref>,<sp/>samplesPerFrame<sp/>);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="audio__analyzer_8c_1a3511746af23da7b237a81abcd5103e0e" kindref="member">PaQa_MixSine</ref>(<sp/>&amp;generator,<sp/>buffer,<sp/><ref refid="test__audio__analyzer_8c_1af19e095bf3ce66f4ee6568cfaf9941a4" kindref="member">FRAMES_PER_BLOCK</ref>,<sp/>stride<sp/>);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>done<sp/>=<sp/><ref refid="audio__analyzer_8c_1a2d62bebaad42618015497e0c80be4324" kindref="member">PaQa_WriteRecording</ref>(<sp/>&amp;recording,<sp/>buffer,<sp/><ref refid="test__audio__analyzer_8c_1af19e095bf3ce66f4ee6568cfaf9941a4" kindref="member">FRAMES_PER_BLOCK</ref>,<sp/>samplesPerFrame<sp/>);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>mag1<sp/>=<sp/><ref refid="audio__analyzer_8c_1a7f26dbd09af0cc0cf873e84d7ec0a13b" kindref="member">PaQa_CorrelateSine</ref>(<sp/>&amp;recording,<sp/>freq,<sp/>sampleRate,<sp/>0,<sp/>recording.<ref refid="struct_pa_qa_recording__s_1a0da5f9ac0c45a0051ce5c50cc1e05731" kindref="member">numFrames</ref>,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="qa__tools_8h_1aab3a1d80d89ca253fe6229730db464a6" kindref="member">QA_ASSERT_CLOSE</ref>(<sp/></highlight><highlight class="stringliteral">&quot;exact<sp/>frequency<sp/>match&quot;</highlight><highlight class="normal">,<sp/>amp,<sp/>mag1,<sp/>0.01<sp/>);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>mag2<sp/>=<sp/><ref refid="audio__analyzer_8c_1a7f26dbd09af0cc0cf873e84d7ec0a13b" kindref="member">PaQa_CorrelateSine</ref>(<sp/>&amp;recording,<sp/>freq<sp/>*<sp/>1.23,<sp/>sampleRate,<sp/>0,<sp/>recording.<ref refid="struct_pa_qa_recording__s_1a0da5f9ac0c45a0051ce5c50cc1e05731" kindref="member">numFrames</ref>,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="qa__tools_8h_1aab3a1d80d89ca253fe6229730db464a6" kindref="member">QA_ASSERT_CLOSE</ref>(<sp/></highlight><highlight class="stringliteral">&quot;wrong<sp/>frequency&quot;</highlight><highlight class="normal">,<sp/>0.0,<sp/>mag2,<sp/>0.01<sp/>);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="audio__analyzer_8c_1a75b79fa3e7ebd8814532f4e6771f1d0b" kindref="member">PaQa_TerminateRecording</ref>(<sp/>&amp;recording<sp/>);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>:</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="audio__analyzer_8c_1a75b79fa3e7ebd8814532f4e6771f1d0b" kindref="member">PaQa_TerminateRecording</ref>(<sp/>&amp;recording);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">/*==========================================================================================*/</highlight></codeline>
<codeline lineno="108"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>TestMixedMonoTones(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="109"><highlight class="normal">{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NUM_TONES<sp/>(5)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_qa_sine_generator__s" kindref="compound">PaQaSineGenerator</ref><sp/>generators[<ref refid="test__audio__analyzer_8c_1adb4feafe5da19da9570c1145351e1f89" kindref="member">NUM_TONES</ref>];</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_qa_recording__s" kindref="compound">PaQaRecording</ref><sp/><sp/><sp/><sp/><sp/>recording;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structbuffer" kindref="compound">buffer</ref>[<ref refid="test__audio__analyzer_8c_1af19e095bf3ce66f4ee6568cfaf9941a4" kindref="member">FRAMES_PER_BLOCK</ref>];</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacepatest__suggested__vs__streaminfo__latency_1a14f2ecd6f756d329f6df4096833062d0" kindref="member">sampleRate</ref><sp/>=<sp/>44100.0;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxFrames<sp/>=<sp/>((<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)sampleRate)<sp/>*<sp/>1;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>samplesPerFrame<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>baseFreq<sp/>=<sp/>234.5;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>amp<sp/>=<sp/>0.1;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mag2;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride<sp/>=<sp/>samplesPerFrame;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="midiclock_8c_1a5f689029e53f12e337967312e0a17717" kindref="member">done</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>a<sp/>sine<sp/>oscillator.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i=0;<sp/>i&lt;<ref refid="test__audio__analyzer_8c_1adb4feafe5da19da9570c1145351e1f89" kindref="member">NUM_TONES</ref>;<sp/>i++<sp/>)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="audio__analyzer_8c_1a5b15fa5f9ffe7d147b31f747c40ff49b" kindref="member">PaQa_SetupSineGenerator</ref>(<sp/>&amp;generators[i],<sp/><ref refid="audio__analyzer_8c_1a9c930334efac22cea25f83543823d995" kindref="member">PaQa_GetNthFrequency</ref>(<sp/>baseFreq,<sp/>i<sp/>),<sp/>amp,<sp/>sampleRate<sp/>);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="audio__analyzer_8c_1a13f48cb441107ed8d398bb6c63f802ae" kindref="member">PaQa_InitializeRecording</ref>(<sp/>&amp;recording,<sp/>maxFrames,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>sampleRate<sp/>);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="qa__tools_8h_1a236d0b49165b23edd501e3562ae14485" kindref="member">QA_ASSERT_EQUALS</ref>(<sp/></highlight><highlight class="stringliteral">&quot;PaQa_InitializeRecording<sp/>failed&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>result<sp/>);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>done<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!done)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="audio__analyzer_8c_1a0d053fe46ae855fa1401098ea08efa88" kindref="member">PaQa_EraseBuffer</ref>(<sp/>buffer,<sp/><ref refid="test__audio__analyzer_8c_1af19e095bf3ce66f4ee6568cfaf9941a4" kindref="member">FRAMES_PER_BLOCK</ref>,<sp/>samplesPerFrame<sp/>);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i=0;<sp/>i&lt;<ref refid="test__audio__analyzer_8c_1adb4feafe5da19da9570c1145351e1f89" kindref="member">NUM_TONES</ref>;<sp/>i++<sp/>)</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="audio__analyzer_8c_1a3511746af23da7b237a81abcd5103e0e" kindref="member">PaQa_MixSine</ref>(<sp/>&amp;generators[i],<sp/>buffer,<sp/><ref refid="test__audio__analyzer_8c_1af19e095bf3ce66f4ee6568cfaf9941a4" kindref="member">FRAMES_PER_BLOCK</ref>,<sp/>stride<sp/>);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>done<sp/>=<sp/><ref refid="audio__analyzer_8c_1a2d62bebaad42618015497e0c80be4324" kindref="member">PaQa_WriteRecording</ref>(<sp/>&amp;recording,<sp/>buffer,<sp/><ref refid="test__audio__analyzer_8c_1af19e095bf3ce66f4ee6568cfaf9941a4" kindref="member">FRAMES_PER_BLOCK</ref>,<sp/>samplesPerFrame<sp/>);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i=0;<sp/>i&lt;<ref refid="test__audio__analyzer_8c_1adb4feafe5da19da9570c1145351e1f89" kindref="member">NUM_TONES</ref>;<sp/>i++<sp/>)</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mag<sp/>=<sp/><ref refid="audio__analyzer_8c_1a7f26dbd09af0cc0cf873e84d7ec0a13b" kindref="member">PaQa_CorrelateSine</ref>(<sp/>&amp;recording,<sp/><ref refid="audio__analyzer_8c_1a9c930334efac22cea25f83543823d995" kindref="member">PaQa_GetNthFrequency</ref>(<sp/>baseFreq,<sp/>i),<sp/>sampleRate,<sp/>0,<sp/>recording.<ref refid="struct_pa_qa_recording__s_1a0da5f9ac0c45a0051ce5c50cc1e05731" kindref="member">numFrames</ref>,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="qa__tools_8h_1aab3a1d80d89ca253fe6229730db464a6" kindref="member">QA_ASSERT_CLOSE</ref>(<sp/></highlight><highlight class="stringliteral">&quot;exact<sp/>frequency<sp/>match&quot;</highlight><highlight class="normal">,<sp/>amp,<sp/>mag,<sp/>0.01<sp/>);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>mag2<sp/>=<sp/><ref refid="audio__analyzer_8c_1a7f26dbd09af0cc0cf873e84d7ec0a13b" kindref="member">PaQa_CorrelateSine</ref>(<sp/>&amp;recording,<sp/>baseFreq<sp/>*<sp/>0.87,<sp/>sampleRate,<sp/>0,<sp/>recording.<ref refid="struct_pa_qa_recording__s_1a0da5f9ac0c45a0051ce5c50cc1e05731" kindref="member">numFrames</ref>,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="qa__tools_8h_1aab3a1d80d89ca253fe6229730db464a6" kindref="member">QA_ASSERT_CLOSE</ref>(<sp/></highlight><highlight class="stringliteral">&quot;wrong<sp/>frequency&quot;</highlight><highlight class="normal">,<sp/>0.0,<sp/>mag2,<sp/>0.01<sp/>);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="audio__analyzer_8c_1a75b79fa3e7ebd8814532f4e6771f1d0b" kindref="member">PaQa_TerminateRecording</ref>(<sp/>&amp;recording<sp/>);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>:</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="audio__analyzer_8c_1a75b79fa3e7ebd8814532f4e6771f1d0b" kindref="member">PaQa_TerminateRecording</ref>(<sp/>&amp;recording);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="comment">/*==========================================================================================*/</highlight></codeline>
<codeline lineno="172"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MakeRecordingWithAddedFrames(<sp/><ref refid="struct_pa_qa_recording__s" kindref="compound">PaQaRecording</ref><sp/>*recording,<sp/><ref refid="struct_pa_qa_test_tone__s" kindref="compound">PaQaTestTone</ref><sp/>*testTone,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>glitchPosition,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>framesToAdd<sp/>)</highlight></codeline>
<codeline lineno="173"><highlight class="normal">{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_qa_sine_generator__s" kindref="compound">PaQaSineGenerator</ref><sp/>generator;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BUFFER_SIZE<sp/>512</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structbuffer" kindref="compound">buffer</ref>[<ref refid="test__audio__analyzer_8c_1a6b20d41d6252e9871430c242cb1a56e7" kindref="member">BUFFER_SIZE</ref>];</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>frameCounter<sp/>=<sp/>testTone-&gt;<ref refid="struct_pa_qa_test_tone__s_1a094a7dd30970e8def532ac7ea38f6b31" kindref="member">startDelay</ref>;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Record<sp/>some<sp/>initial<sp/>silence.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="midiclock_8c_1a5f689029e53f12e337967312e0a17717" kindref="member">done</ref><sp/>=<sp/><ref refid="audio__analyzer_8c_1a12ccb2fbd5fe3bf93b8cd79bd7985ca1" kindref="member">PaQa_WriteSilence</ref>(<sp/>recording,<sp/>testTone-&gt;<ref refid="struct_pa_qa_test_tone__s_1a094a7dd30970e8def532ac7ea38f6b31" kindref="member">startDelay</ref><sp/>);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>a<sp/>sine<sp/>oscillator.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="audio__analyzer_8c_1a5b15fa5f9ffe7d147b31f747c40ff49b" kindref="member">PaQa_SetupSineGenerator</ref>(<sp/>&amp;generator,<sp/>testTone-&gt;<ref refid="struct_pa_qa_test_tone__s_1ab6e6a027870ba348bbce705bf5c196e5" kindref="member">frequency</ref>,<sp/>testTone-&gt;<ref refid="struct_pa_qa_test_tone__s_1a94af989158aefe3bd584700022836a55" kindref="member">amplitude</ref>,<sp/>testTone-&gt;<ref refid="struct_pa_qa_test_tone__s_1a204af537989a744626b4aabeb9e2d3a9" kindref="member">sampleRate</ref><sp/>);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!done)</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>framesThisLoop<sp/>=<sp/><ref refid="test__audio__analyzer_8c_1a6b20d41d6252e9871430c242cb1a56e7" kindref="member">BUFFER_SIZE</ref>;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>frameCounter<sp/>==<sp/>glitchPosition<sp/>)</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>framesToAdd<sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Record<sp/>some<sp/>frozen<sp/>data<sp/>without<sp/>advancing<sp/>the<sp/>sine<sp/>generator.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>done<sp/>=<sp/><ref refid="audio__analyzer_8c_1ad876645a8a56487a53473d914d36c502" kindref="member">PaQa_RecordFreeze</ref>(<sp/>recording,<sp/>framesToAdd<sp/>);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frameCounter<sp/>+=<sp/>framesToAdd;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>framesToAdd<sp/>&lt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Advance<sp/>sine<sp/>generator<sp/>a<sp/>few<sp/>frames.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="audio__analyzer_8c_1a3511746af23da7b237a81abcd5103e0e" kindref="member">PaQa_MixSine</ref>(<sp/>&amp;generator,<sp/>buffer,<sp/>0<sp/>-<sp/>framesToAdd,<sp/>stride<sp/>);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(frameCounter<sp/>&lt;<sp/>glitchPosition)<sp/>&amp;&amp;<sp/>((frameCounter<sp/>+<sp/>framesThisLoop)<sp/>&gt;<sp/>glitchPosition)<sp/>)</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Go<sp/>right<sp/>up<sp/>to<sp/>the<sp/>glitchPosition.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesThisLoop<sp/>=<sp/>glitchPosition<sp/>-<sp/>frameCounter;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>framesThisLoop<sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="audio__analyzer_8c_1a0d053fe46ae855fa1401098ea08efa88" kindref="member">PaQa_EraseBuffer</ref>(<sp/>buffer,<sp/>framesThisLoop,<sp/>testTone-&gt;<ref refid="struct_pa_qa_test_tone__s_1a90c802d23c98b9b340772c2bf2c14a84" kindref="member">samplesPerFrame</ref><sp/>);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="audio__analyzer_8c_1a3511746af23da7b237a81abcd5103e0e" kindref="member">PaQa_MixSine</ref>(<sp/>&amp;generator,<sp/>buffer,<sp/>framesThisLoop,<sp/>stride<sp/>);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>done<sp/>=<sp/><ref refid="audio__analyzer_8c_1a2d62bebaad42618015497e0c80be4324" kindref="member">PaQa_WriteRecording</ref>(<sp/>recording,<sp/>buffer,<sp/>framesThisLoop,<sp/>testTone-&gt;<ref refid="struct_pa_qa_test_tone__s_1a90c802d23c98b9b340772c2bf2c14a84" kindref="member">samplesPerFrame</ref><sp/>);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frameCounter<sp/>+=<sp/>framesThisLoop;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal">}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="comment">/*==========================================================================================*/</highlight></codeline>
<codeline lineno="228"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MakeCleanRecording(<sp/><ref refid="struct_pa_qa_recording__s" kindref="compound">PaQaRecording</ref><sp/>*recording,<sp/><ref refid="struct_pa_qa_test_tone__s" kindref="compound">PaQaTestTone</ref><sp/>*testTone<sp/>)</highlight></codeline>
<codeline lineno="229"><highlight class="normal">{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_qa_sine_generator__s" kindref="compound">PaQaSineGenerator</ref><sp/>generator;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BUFFER_SIZE<sp/>512</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structbuffer" kindref="compound">buffer</ref>[<ref refid="test__audio__analyzer_8c_1a6b20d41d6252e9871430c242cb1a56e7" kindref="member">BUFFER_SIZE</ref>];</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Record<sp/>some<sp/>initial<sp/>silence.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="midiclock_8c_1a5f689029e53f12e337967312e0a17717" kindref="member">done</ref><sp/>=<sp/><ref refid="audio__analyzer_8c_1a12ccb2fbd5fe3bf93b8cd79bd7985ca1" kindref="member">PaQa_WriteSilence</ref>(<sp/>recording,<sp/>testTone-&gt;<ref refid="struct_pa_qa_test_tone__s_1a094a7dd30970e8def532ac7ea38f6b31" kindref="member">startDelay</ref><sp/>);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>a<sp/>sine<sp/>oscillator.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="audio__analyzer_8c_1a5b15fa5f9ffe7d147b31f747c40ff49b" kindref="member">PaQa_SetupSineGenerator</ref>(<sp/>&amp;generator,<sp/>testTone-&gt;<ref refid="struct_pa_qa_test_tone__s_1ab6e6a027870ba348bbce705bf5c196e5" kindref="member">frequency</ref>,<sp/>testTone-&gt;<ref refid="struct_pa_qa_test_tone__s_1a94af989158aefe3bd584700022836a55" kindref="member">amplitude</ref>,<sp/>testTone-&gt;<ref refid="struct_pa_qa_test_tone__s_1a204af537989a744626b4aabeb9e2d3a9" kindref="member">sampleRate</ref><sp/>);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Generate<sp/>recording<sp/>with<sp/>good<sp/>phase.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!done)</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="audio__analyzer_8c_1a0d053fe46ae855fa1401098ea08efa88" kindref="member">PaQa_EraseBuffer</ref>(<sp/>buffer,<sp/><ref refid="test__audio__analyzer_8c_1a6b20d41d6252e9871430c242cb1a56e7" kindref="member">BUFFER_SIZE</ref>,<sp/>testTone-&gt;<ref refid="struct_pa_qa_test_tone__s_1a90c802d23c98b9b340772c2bf2c14a84" kindref="member">samplesPerFrame</ref><sp/>);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="audio__analyzer_8c_1a3511746af23da7b237a81abcd5103e0e" kindref="member">PaQa_MixSine</ref>(<sp/>&amp;generator,<sp/>buffer,<sp/><ref refid="test__audio__analyzer_8c_1a6b20d41d6252e9871430c242cb1a56e7" kindref="member">BUFFER_SIZE</ref>,<sp/>stride<sp/>);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>done<sp/>=<sp/><ref refid="audio__analyzer_8c_1a2d62bebaad42618015497e0c80be4324" kindref="member">PaQa_WriteRecording</ref>(<sp/>recording,<sp/>buffer,<sp/><ref refid="test__audio__analyzer_8c_1a6b20d41d6252e9871430c242cb1a56e7" kindref="member">BUFFER_SIZE</ref>,<sp/>testTone-&gt;<ref refid="struct_pa_qa_test_tone__s_1a90c802d23c98b9b340772c2bf2c14a84" kindref="member">samplesPerFrame</ref><sp/>);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal">}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="comment">/*==========================================================================================*/</highlight></codeline>
<codeline lineno="255"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>MakeRecordingWithPop(<sp/><ref refid="struct_pa_qa_recording__s" kindref="compound">PaQaRecording</ref><sp/>*recording,<sp/><ref refid="struct_pa_qa_test_tone__s" kindref="compound">PaQaTestTone</ref><sp/>*testTone,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>popPosition,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>popWidth,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>popAmplitude<sp/>)</highlight></codeline>
<codeline lineno="256"><highlight class="normal">{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>MakeCleanRecording(<sp/>recording,<sp/>testTone<sp/>);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>glitch<sp/>to<sp/>good<sp/>recording.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(popPosition<sp/>+<sp/>popWidth)<sp/>&gt;=<sp/>recording-&gt;<ref refid="struct_pa_qa_recording__s_1a0da5f9ac0c45a0051ce5c50cc1e05731" kindref="member">numFrames</ref><sp/>)</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>popWidth<sp/>=<sp/>(recording-&gt;<ref refid="struct_pa_qa_recording__s_1a0da5f9ac0c45a0051ce5c50cc1e05731" kindref="member">numFrames</ref><sp/>-<sp/>popPosition)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i=0;<sp/>i&lt;popWidth;<sp/>i++<sp/>)</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="charmaps_8h_1a422f205059a9d17797eb370ded3c21c6" kindref="member">good</ref><sp/>=<sp/>recording-&gt;<ref refid="struct_pa_qa_recording__s_1a0881fb1e483b51cd2a828ac786728f93" kindref="member">buffer</ref>[i+popPosition];</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="charmaps_8h_1afe308d4985b5e0160df686b81d58a0c1" kindref="member">bad</ref><sp/>=<sp/>(good<sp/>&gt;<sp/>0.0)<sp/>?<sp/>(good<sp/>-<sp/>popAmplitude)<sp/>:<sp/>(good<sp/>+<sp/>popAmplitude);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recording-&gt;<ref refid="struct_pa_qa_recording__s_1a0881fb1e483b51cd2a828ac786728f93" kindref="member">buffer</ref>[i+popPosition]<sp/>=<sp/><ref refid="charmaps_8h_1afe308d4985b5e0160df686b81d58a0c1" kindref="member">bad</ref>;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal">}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="comment">/*==========================================================================================*/</highlight></codeline>
<codeline lineno="279"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>TestDetectSinglePhaseError(<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacepatest__suggested__vs__streaminfo__latency_1a14f2ecd6f756d329f6df4096833062d0" kindref="member">sampleRate</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cycleSize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>latencyFrames,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>glitchPosition,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>framesAdded<sp/>)</highlight></codeline>
<codeline lineno="280"><highlight class="normal">{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_qa_recording__s" kindref="compound">PaQaRecording</ref><sp/><sp/><sp/><sp/><sp/>recording;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_qa_test_tone__s" kindref="compound">PaQaTestTone</ref><sp/>testTone;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_qa_analysis_result__s" kindref="compound">PaQaAnalysisResult</ref><sp/>analysisResult<sp/>=<sp/>{<sp/>0.0<sp/>};</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>framesDropped<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxFrames<sp/>=<sp/>((<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)<ref refid="namespacepatest__suggested__vs__streaminfo__latency_1a14f2ecd6f756d329f6df4096833062d0" kindref="member">sampleRate</ref>)<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>testTone.<ref refid="struct_pa_qa_test_tone__s_1a90c802d23c98b9b340772c2bf2c14a84" kindref="member">samplesPerFrame</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>testTone.<ref refid="struct_pa_qa_test_tone__s_1a204af537989a744626b4aabeb9e2d3a9" kindref="member">sampleRate</ref><sp/>=<sp/><ref refid="namespacepatest__suggested__vs__streaminfo__latency_1a14f2ecd6f756d329f6df4096833062d0" kindref="member">sampleRate</ref>;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/>testTone.<ref refid="struct_pa_qa_test_tone__s_1ab6e6a027870ba348bbce705bf5c196e5" kindref="member">frequency</ref><sp/>=<sp/><ref refid="namespacepatest__suggested__vs__streaminfo__latency_1a14f2ecd6f756d329f6df4096833062d0" kindref="member">sampleRate</ref><sp/>/<sp/>cycleSize;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>testTone.<ref refid="struct_pa_qa_test_tone__s_1a94af989158aefe3bd584700022836a55" kindref="member">amplitude</ref><sp/>=<sp/>0.5;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>testTone.<ref refid="struct_pa_qa_test_tone__s_1a094a7dd30970e8def532ac7ea38f6b31" kindref="member">startDelay</ref><sp/>=<sp/>latencyFrames;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="audio__analyzer_8c_1a13f48cb441107ed8d398bb6c63f802ae" kindref="member">PaQa_InitializeRecording</ref>(<sp/>&amp;recording,<sp/>maxFrames,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/><ref refid="namespacepatest__suggested__vs__streaminfo__latency_1a14f2ecd6f756d329f6df4096833062d0" kindref="member">sampleRate</ref><sp/>);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="qa__tools_8h_1a236d0b49165b23edd501e3562ae14485" kindref="member">QA_ASSERT_EQUALS</ref>(<sp/></highlight><highlight class="stringliteral">&quot;PaQa_InitializeRecording<sp/>failed&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>result<sp/>);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>MakeRecordingWithAddedFrames(<sp/>&amp;recording,<sp/>&amp;testTone,<sp/>glitchPosition,<sp/>framesAdded<sp/>);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="audio__analyzer_8c_1a6232297ca356c8753050d169966525b6" kindref="member">PaQa_AnalyseRecording</ref>(<sp/>&amp;recording,<sp/>&amp;testTone,<sp/>&amp;analysisResult<sp/>);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>framesAdded<sp/>&lt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesDropped<sp/>=<sp/>-framesAdded;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesAdded<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PRINT_REPORTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;\n===<sp/>Dropped<sp/>Frame<sp/>Analysis<sp/>===================\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expected<sp/><sp/><sp/><sp/><sp/><sp/>actual\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>latency:<sp/>%10.3f<sp/><sp/>%10.3f\n&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)latencyFrames,<sp/>analysisResult.<ref refid="struct_pa_qa_analysis_result__s_1aa01cd3b08f4331d42e541a5525b5a5ef" kindref="member">latency</ref><sp/>);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>num<sp/>added<sp/>frames:<sp/>%10.3f<sp/><sp/>%10.3f\n&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)framesAdded,<sp/>analysisResult.<ref refid="struct_pa_qa_analysis_result__s_1aeb484763fda64f2ad66d30f1e7538290" kindref="member">numAddedFrames</ref><sp/>);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/>added<sp/>frames<sp/>at:<sp/>%10.3f<sp/><sp/>%10.3f\n&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)glitchPosition,<sp/>analysisResult.<ref refid="struct_pa_qa_analysis_result__s_1a54d571e9c681cdaf3901744c0dd84d10" kindref="member">addedFramesPosition</ref><sp/>);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>num<sp/>dropped<sp/>frames:<sp/>%10.3f<sp/><sp/>%10.3f\n&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)framesDropped,<sp/>analysisResult.<ref refid="struct_pa_qa_analysis_result__s_1adf01d50ef45ca2a38f961659b0b5e39e" kindref="member">numDroppedFrames</ref><sp/>);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>dropped<sp/>frames<sp/>at:<sp/>%10.3f<sp/><sp/>%10.3f\n&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)glitchPosition,<sp/>analysisResult.<ref refid="struct_pa_qa_analysis_result__s_1a5465c8dc21981f08bce260e864882808" kindref="member">droppedFramesPosition</ref><sp/>);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="qa__tools_8h_1aab3a1d80d89ca253fe6229730db464a6" kindref="member">QA_ASSERT_CLOSE</ref>(<sp/></highlight><highlight class="stringliteral">&quot;PaQa_AnalyseRecording<sp/>latency&quot;</highlight><highlight class="normal">,<sp/>latencyFrames,<sp/>analysisResult.<ref refid="struct_pa_qa_analysis_result__s_1aa01cd3b08f4331d42e541a5525b5a5ef" kindref="member">latency</ref>,<sp/>0.5<sp/>);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="qa__tools_8h_1aab3a1d80d89ca253fe6229730db464a6" kindref="member">QA_ASSERT_CLOSE</ref>(<sp/></highlight><highlight class="stringliteral">&quot;PaQa_AnalyseRecording<sp/>framesAdded&quot;</highlight><highlight class="normal">,<sp/>framesAdded,<sp/>analysisResult.<ref refid="struct_pa_qa_analysis_result__s_1aeb484763fda64f2ad66d30f1e7538290" kindref="member">numAddedFrames</ref>,<sp/>1.0<sp/>);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="qa__tools_8h_1aab3a1d80d89ca253fe6229730db464a6" kindref="member">QA_ASSERT_CLOSE</ref>(<sp/></highlight><highlight class="stringliteral">&quot;PaQa_AnalyseRecording<sp/>framesDropped&quot;</highlight><highlight class="normal">,<sp/>framesDropped,<sp/>analysisResult.<ref refid="struct_pa_qa_analysis_result__s_1adf01d50ef45ca2a38f961659b0b5e39e" kindref="member">numDroppedFrames</ref>,<sp/>1.0<sp/>);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>QA_ASSERT_CLOSE(<sp/>&quot;PaQa_AnalyseRecording<sp/>glitchPosition&quot;,<sp/>glitchPosition,<sp/>analysisResult.glitchPosition,<sp/>cycleSize<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="audio__analyzer_8c_1a75b79fa3e7ebd8814532f4e6771f1d0b" kindref="member">PaQa_TerminateRecording</ref>(<sp/>&amp;recording<sp/>);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>:</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="audio__analyzer_8c_1a75b79fa3e7ebd8814532f4e6771f1d0b" kindref="member">PaQa_TerminateRecording</ref>(<sp/>&amp;recording);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="328"><highlight class="normal">}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="comment">/*==========================================================================================*/</highlight></codeline>
<codeline lineno="334"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>TestDetectPhaseErrors(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="335"><highlight class="normal">{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>TestDetectSinglePhaseError(<sp/>44100,<sp/>200,<sp/>477,<sp/>-1,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>result<sp/>&lt;<sp/>0<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="341"><highlight class="comment"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>TestDetectSinglePhaseError(<sp/>44100,<sp/>200,<sp/>77,<sp/>-1,<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="342"><highlight class="comment"><sp/><sp/><sp/><sp/>if(<sp/>result<sp/>&lt;<sp/>0<sp/>)<sp/>return<sp/>result;</highlight></codeline>
<codeline lineno="343"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="344"><highlight class="comment"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>TestDetectSinglePhaseError(<sp/>44100,<sp/>200,<sp/>83,<sp/>3712,<sp/>9<sp/>);</highlight></codeline>
<codeline lineno="345"><highlight class="comment"><sp/><sp/><sp/><sp/>if(<sp/>result<sp/>&lt;<sp/>0<sp/>)<sp/>return<sp/>result;</highlight></codeline>
<codeline lineno="346"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="347"><highlight class="comment"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>TestDetectSinglePhaseError(<sp/>44100,<sp/>280,<sp/>83,<sp/>3712,<sp/>27<sp/>);</highlight></codeline>
<codeline lineno="348"><highlight class="comment"><sp/><sp/><sp/><sp/>if(<sp/>result<sp/>&lt;<sp/>0<sp/>)<sp/>return<sp/>result;</highlight></codeline>
<codeline lineno="349"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="350"><highlight class="comment"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>TestDetectSinglePhaseError(<sp/>44100,<sp/>200,<sp/>234,<sp/>3712,<sp/>-9<sp/>);</highlight></codeline>
<codeline lineno="351"><highlight class="comment"><sp/><sp/><sp/><sp/>if(<sp/>result<sp/>&lt;<sp/>0<sp/>)<sp/>return<sp/>result;</highlight></codeline>
<codeline lineno="352"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="353"><highlight class="comment"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>TestDetectSinglePhaseError(<sp/>44100,<sp/>200,<sp/>2091,<sp/>8923,<sp/>-2<sp/>);</highlight></codeline>
<codeline lineno="354"><highlight class="comment"><sp/><sp/><sp/><sp/>if(<sp/>result<sp/>&lt;<sp/>0<sp/>)<sp/>return<sp/>result;</highlight></codeline>
<codeline lineno="355"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="356"><highlight class="comment"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>TestDetectSinglePhaseError(<sp/>44100,<sp/>120,<sp/>1782,<sp/>5772,<sp/>-18<sp/>);</highlight></codeline>
<codeline lineno="357"><highlight class="comment"><sp/><sp/><sp/><sp/>if(<sp/>result<sp/>&lt;<sp/>0<sp/>)<sp/>return<sp/>result;</highlight></codeline>
<codeline lineno="358"><highlight class="comment"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="359"><highlight class="comment"><sp/><sp/><sp/><sp/>//<sp/>Note<sp/>that<sp/>if<sp/>the<sp/>frequency<sp/>is<sp/>too<sp/>high<sp/>then<sp/>it<sp/>is<sp/>hard<sp/>to<sp/>detect<sp/>single<sp/>dropped<sp/>frames.</highlight></codeline>
<codeline lineno="360"><highlight class="comment"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>TestDetectSinglePhaseError(<sp/>44100,<sp/>200,<sp/>500,<sp/>4251,<sp/>-1<sp/>);</highlight></codeline>
<codeline lineno="361"><highlight class="comment"><sp/><sp/><sp/><sp/>if(<sp/>result<sp/>&lt;<sp/>0<sp/>)<sp/>return<sp/>result;</highlight></codeline>
<codeline lineno="362"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="364"><highlight class="normal">}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight><highlight class="comment">/*==========================================================================================*/</highlight></codeline>
<codeline lineno="370"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>TestDetectSinglePop(<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacepatest__suggested__vs__streaminfo__latency_1a14f2ecd6f756d329f6df4096833062d0" kindref="member">sampleRate</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cycleSize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>latencyFrames,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>popPosition,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>popWidth,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>popAmplitude<sp/>)</highlight></codeline>
<codeline lineno="371"><highlight class="normal">{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_qa_recording__s" kindref="compound">PaQaRecording</ref><sp/><sp/><sp/><sp/><sp/>recording;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_qa_test_tone__s" kindref="compound">PaQaTestTone</ref><sp/>testTone;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_qa_analysis_result__s" kindref="compound">PaQaAnalysisResult</ref><sp/>analysisResult<sp/>=<sp/>{<sp/>0.0<sp/>};</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxFrames<sp/>=<sp/>((<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)<ref refid="namespacepatest__suggested__vs__streaminfo__latency_1a14f2ecd6f756d329f6df4096833062d0" kindref="member">sampleRate</ref>)<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>testTone.<ref refid="struct_pa_qa_test_tone__s_1a90c802d23c98b9b340772c2bf2c14a84" kindref="member">samplesPerFrame</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>testTone.<ref refid="struct_pa_qa_test_tone__s_1a204af537989a744626b4aabeb9e2d3a9" kindref="member">sampleRate</ref><sp/>=<sp/><ref refid="namespacepatest__suggested__vs__streaminfo__latency_1a14f2ecd6f756d329f6df4096833062d0" kindref="member">sampleRate</ref>;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>testTone.<ref refid="struct_pa_qa_test_tone__s_1ab6e6a027870ba348bbce705bf5c196e5" kindref="member">frequency</ref><sp/>=<sp/><ref refid="namespacepatest__suggested__vs__streaminfo__latency_1a14f2ecd6f756d329f6df4096833062d0" kindref="member">sampleRate</ref><sp/>/<sp/>cycleSize;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>testTone.<ref refid="struct_pa_qa_test_tone__s_1a94af989158aefe3bd584700022836a55" kindref="member">amplitude</ref><sp/>=<sp/>0.5;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>testTone.<ref refid="struct_pa_qa_test_tone__s_1a094a7dd30970e8def532ac7ea38f6b31" kindref="member">startDelay</ref><sp/>=<sp/>latencyFrames;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="audio__analyzer_8c_1a13f48cb441107ed8d398bb6c63f802ae" kindref="member">PaQa_InitializeRecording</ref>(<sp/>&amp;recording,<sp/>maxFrames,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/><ref refid="namespacepatest__suggested__vs__streaminfo__latency_1a14f2ecd6f756d329f6df4096833062d0" kindref="member">sampleRate</ref><sp/>);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="qa__tools_8h_1a236d0b49165b23edd501e3562ae14485" kindref="member">QA_ASSERT_EQUALS</ref>(<sp/></highlight><highlight class="stringliteral">&quot;PaQa_InitializeRecording<sp/>failed&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>result<sp/>);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>MakeRecordingWithPop(<sp/>&amp;recording,<sp/>&amp;testTone,<sp/>popPosition,<sp/>popWidth,<sp/>popAmplitude<sp/>);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="audio__analyzer_8c_1a6232297ca356c8753050d169966525b6" kindref="member">PaQa_AnalyseRecording</ref>(<sp/>&amp;recording,<sp/>&amp;testTone,<sp/>&amp;analysisResult<sp/>);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PRINT_REPORTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;\n===<sp/>Pop<sp/>Analysis<sp/>===================\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expected<sp/><sp/><sp/><sp/><sp/><sp/>actual\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>latency:<sp/>%10.3f<sp/><sp/>%10.3f\n&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)latencyFrames,<sp/>analysisResult.<ref refid="struct_pa_qa_analysis_result__s_1aa01cd3b08f4331d42e541a5525b5a5ef" kindref="member">latency</ref><sp/>);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>popPosition:<sp/>%10.3f<sp/><sp/>%10.3f\n&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)popPosition,<sp/>analysisResult.<ref refid="struct_pa_qa_analysis_result__s_1aa803a3ce07fc930d172f019881cb5b44" kindref="member">popPosition</ref><sp/>);<sp/></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>popAmplitude:<sp/>%10.3f<sp/><sp/>%10.3f\n&quot;</highlight><highlight class="normal">,<sp/>popAmplitude,<sp/>analysisResult.<ref refid="struct_pa_qa_analysis_result__s_1ab23ac837dc1cc396ab58326efea278ba" kindref="member">popAmplitude</ref><sp/>);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cycleSize:<sp/>%6d\n&quot;</highlight><highlight class="normal">,<sp/>cycleSize<sp/>);<sp/><sp/></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>num<sp/>added<sp/>frames:<sp/>%10.3f\n&quot;</highlight><highlight class="normal">,<sp/>analysisResult.<ref refid="struct_pa_qa_analysis_result__s_1aeb484763fda64f2ad66d30f1e7538290" kindref="member">numAddedFrames</ref><sp/>);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/>added<sp/>frames<sp/>at:<sp/>%10.3f\n&quot;</highlight><highlight class="normal">,<sp/>analysisResult.<ref refid="struct_pa_qa_analysis_result__s_1a54d571e9c681cdaf3901744c0dd84d10" kindref="member">addedFramesPosition</ref><sp/>);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>num<sp/>dropped<sp/>frames:<sp/>%10.3f\n&quot;</highlight><highlight class="normal">,<sp/>analysisResult.<ref refid="struct_pa_qa_analysis_result__s_1adf01d50ef45ca2a38f961659b0b5e39e" kindref="member">numDroppedFrames</ref><sp/>);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>dropped<sp/>frames<sp/>at:<sp/>%10.3f\n&quot;</highlight><highlight class="normal">,<sp/>analysisResult.<ref refid="struct_pa_qa_analysis_result__s_1a5465c8dc21981f08bce260e864882808" kindref="member">droppedFramesPosition</ref><sp/>);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="qa__tools_8h_1aab3a1d80d89ca253fe6229730db464a6" kindref="member">QA_ASSERT_CLOSE</ref>(<sp/></highlight><highlight class="stringliteral">&quot;PaQa_AnalyseRecording<sp/>latency&quot;</highlight><highlight class="normal">,<sp/>latencyFrames,<sp/>analysisResult.<ref refid="struct_pa_qa_analysis_result__s_1aa01cd3b08f4331d42e541a5525b5a5ef" kindref="member">latency</ref>,<sp/>0.5<sp/>);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="qa__tools_8h_1aab3a1d80d89ca253fe6229730db464a6" kindref="member">QA_ASSERT_CLOSE</ref>(<sp/></highlight><highlight class="stringliteral">&quot;PaQa_AnalyseRecording<sp/>popPosition&quot;</highlight><highlight class="normal">,<sp/>popPosition,<sp/>analysisResult.<ref refid="struct_pa_qa_analysis_result__s_1aa803a3ce07fc930d172f019881cb5b44" kindref="member">popPosition</ref>,<sp/>10<sp/>);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>popWidth<sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="qa__tools_8h_1aab3a1d80d89ca253fe6229730db464a6" kindref="member">QA_ASSERT_CLOSE</ref>(<sp/></highlight><highlight class="stringliteral">&quot;PaQa_AnalyseRecording<sp/>popAmplitude&quot;</highlight><highlight class="normal">,<sp/>popAmplitude,<sp/>analysisResult.<ref refid="struct_pa_qa_analysis_result__s_1ab23ac837dc1cc396ab58326efea278ba" kindref="member">popAmplitude</ref>,<sp/>0.1<sp/>*<sp/>popAmplitude<sp/><sp/>);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="audio__analyzer_8c_1a75b79fa3e7ebd8814532f4e6771f1d0b" kindref="member">PaQa_TerminateRecording</ref>(<sp/>&amp;recording<sp/>);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>:</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="audio__analyzer_8c_1ad176a266e1bb48a3107f50755127fac8" kindref="member">PaQa_SaveRecordingToWaveFile</ref>(<sp/>&amp;recording,<sp/></highlight><highlight class="stringliteral">&quot;bad_recording.wav&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="audio__analyzer_8c_1a75b79fa3e7ebd8814532f4e6771f1d0b" kindref="member">PaQa_TerminateRecording</ref>(<sp/>&amp;recording);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="418"><highlight class="normal">}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight><highlight class="comment">/*==========================================================================================*/</highlight></codeline>
<codeline lineno="424"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>TestSingleInitialSpike(<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacepatest__suggested__vs__streaminfo__latency_1a14f2ecd6f756d329f6df4096833062d0" kindref="member">sampleRate</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stepPosition,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cycleSize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>latencyFrames,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>stepAmplitude<sp/>)</highlight></codeline>
<codeline lineno="425"><highlight class="normal">{</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Account<sp/>for<sp/>highpass<sp/>filter<sp/>offset.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>expectedLatency<sp/>=<sp/>latencyFrames<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_qa_recording__s" kindref="compound">PaQaRecording</ref><sp/><sp/><sp/><sp/><sp/>recording;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_qa_recording__s" kindref="compound">PaQaRecording</ref><sp/><sp/><sp/><sp/><sp/>hipassOutput<sp/>=<sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_biquad_filter__s" kindref="compound">BiquadFilter</ref><sp/><sp/><sp/><sp/><sp/><sp/>hipassFilter;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_qa_test_tone__s" kindref="compound">PaQaTestTone</ref><sp/>testTone;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_qa_analysis_result__s" kindref="compound">PaQaAnalysisResult</ref><sp/>analysisResult<sp/>=<sp/>{<sp/>0.0<sp/>};</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxFrames<sp/>=<sp/>((<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)<ref refid="namespacepatest__suggested__vs__streaminfo__latency_1a14f2ecd6f756d329f6df4096833062d0" kindref="member">sampleRate</ref>)<sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>testTone.<ref refid="struct_pa_qa_test_tone__s_1a90c802d23c98b9b340772c2bf2c14a84" kindref="member">samplesPerFrame</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>testTone.<ref refid="struct_pa_qa_test_tone__s_1a204af537989a744626b4aabeb9e2d3a9" kindref="member">sampleRate</ref><sp/>=<sp/><ref refid="namespacepatest__suggested__vs__streaminfo__latency_1a14f2ecd6f756d329f6df4096833062d0" kindref="member">sampleRate</ref>;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>testTone.<ref refid="struct_pa_qa_test_tone__s_1ab6e6a027870ba348bbce705bf5c196e5" kindref="member">frequency</ref><sp/>=<sp/><ref refid="namespacepatest__suggested__vs__streaminfo__latency_1a14f2ecd6f756d329f6df4096833062d0" kindref="member">sampleRate</ref><sp/>/<sp/>cycleSize;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>testTone.<ref refid="struct_pa_qa_test_tone__s_1a94af989158aefe3bd584700022836a55" kindref="member">amplitude</ref><sp/>=<sp/>-0.5;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>testTone.<ref refid="struct_pa_qa_test_tone__s_1a094a7dd30970e8def532ac7ea38f6b31" kindref="member">startDelay</ref><sp/>=<sp/>latencyFrames;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="audio__analyzer_8c_1a13f48cb441107ed8d398bb6c63f802ae" kindref="member">PaQa_InitializeRecording</ref>(<sp/>&amp;recording,<sp/>maxFrames,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/><ref refid="namespacepatest__suggested__vs__streaminfo__latency_1a14f2ecd6f756d329f6df4096833062d0" kindref="member">sampleRate</ref><sp/>);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="qa__tools_8h_1a236d0b49165b23edd501e3562ae14485" kindref="member">QA_ASSERT_EQUALS</ref>(<sp/></highlight><highlight class="stringliteral">&quot;PaQa_InitializeRecording<sp/>failed&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>result<sp/>);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="audio__analyzer_8c_1a13f48cb441107ed8d398bb6c63f802ae" kindref="member">PaQa_InitializeRecording</ref>(<sp/>&amp;hipassOutput,<sp/>maxFrames,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>sampleRate<sp/>);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="qa__tools_8h_1a236d0b49165b23edd501e3562ae14485" kindref="member">QA_ASSERT_EQUALS</ref>(<sp/></highlight><highlight class="stringliteral">&quot;PaQa_InitializeRecording<sp/>failed&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>result<sp/>);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>MakeCleanRecording(<sp/>&amp;recording,<sp/>&amp;testTone<sp/>);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Apply<sp/>DC<sp/>step.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i=stepPosition;<sp/>i&lt;recording.<ref refid="struct_pa_qa_recording__s_1a0da5f9ac0c45a0051ce5c50cc1e05731" kindref="member">numFrames</ref>;<sp/>i++<sp/>)</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recording.<ref refid="struct_pa_qa_recording__s_1a0881fb1e483b51cd2a828ac786728f93" kindref="member">buffer</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>+=<sp/>stepAmplitude;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>high<sp/>pass<sp/>as<sp/>a<sp/>DC<sp/>blocker!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="biquad__filter_8c_1aa302a7fc0cb71ad72013dcfe9b875ce3" kindref="member">BiquadFilter_SetupHighPass</ref>(<sp/>&amp;hipassFilter,<sp/>10.0<sp/>/<sp/>sampleRate,<sp/>0.5<sp/>);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="audio__analyzer_8c_1a89f3a57c92da52f6ebdb4ee3633db3b2" kindref="member">PaQa_FilterRecording</ref>(<sp/>&amp;recording,<sp/>&amp;hipassOutput,<sp/>&amp;hipassFilter<sp/>);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>testTone.<ref refid="struct_pa_qa_test_tone__s_1a94af989158aefe3bd584700022836a55" kindref="member">amplitude</ref><sp/>=<sp/>0.5;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="audio__analyzer_8c_1a6232297ca356c8753050d169966525b6" kindref="member">PaQa_AnalyseRecording</ref>(<sp/>&amp;hipassOutput,<sp/>&amp;testTone,<sp/>&amp;analysisResult<sp/>);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>PRINT_REPORTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;\n===<sp/>InitialSpike<sp/>Analysis<sp/>===================\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expected<sp/><sp/><sp/><sp/><sp/><sp/>actual\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>latency:<sp/>%10.3f<sp/><sp/>%10.3f\n&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)expectedLatency,<sp/>analysisResult.<ref refid="struct_pa_qa_analysis_result__s_1aa01cd3b08f4331d42e541a5525b5a5ef" kindref="member">latency</ref><sp/>);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>popPosition:<sp/>%10.3f\n&quot;</highlight><highlight class="normal">,<sp/>analysisResult.<ref refid="struct_pa_qa_analysis_result__s_1aa803a3ce07fc930d172f019881cb5b44" kindref="member">popPosition</ref><sp/>);<sp/><sp/></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>popAmplitude:<sp/>%10.3f\n&quot;</highlight><highlight class="normal">,<sp/>analysisResult.<ref refid="struct_pa_qa_analysis_result__s_1ab23ac837dc1cc396ab58326efea278ba" kindref="member">popAmplitude</ref><sp/>);<sp/></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/>amplitudeRatio:<sp/>%10.3f\n&quot;</highlight><highlight class="normal">,<sp/>analysisResult.<ref refid="struct_pa_qa_analysis_result__s_1a3db306b382cb9b01f4954e078f1f0d4c" kindref="member">amplitudeRatio</ref><sp/>);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cycleSize:<sp/>%6d\n&quot;</highlight><highlight class="normal">,<sp/>cycleSize<sp/>);<sp/><sp/></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>num<sp/>added<sp/>frames:<sp/>%10.3f\n&quot;</highlight><highlight class="normal">,<sp/>analysisResult.<ref refid="struct_pa_qa_analysis_result__s_1aeb484763fda64f2ad66d30f1e7538290" kindref="member">numAddedFrames</ref><sp/>);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/>added<sp/>frames<sp/>at:<sp/>%10.3f\n&quot;</highlight><highlight class="normal">,<sp/>analysisResult.<ref refid="struct_pa_qa_analysis_result__s_1a54d571e9c681cdaf3901744c0dd84d10" kindref="member">addedFramesPosition</ref><sp/>);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>num<sp/>dropped<sp/>frames:<sp/>%10.3f\n&quot;</highlight><highlight class="normal">,<sp/>analysisResult.<ref refid="struct_pa_qa_analysis_result__s_1adf01d50ef45ca2a38f961659b0b5e39e" kindref="member">numDroppedFrames</ref><sp/>);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>dropped<sp/>frames<sp/>at:<sp/>%10.3f\n&quot;</highlight><highlight class="normal">,<sp/>analysisResult.<ref refid="struct_pa_qa_analysis_result__s_1a5465c8dc21981f08bce260e864882808" kindref="member">droppedFramesPosition</ref><sp/>);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="qa__tools_8h_1aab3a1d80d89ca253fe6229730db464a6" kindref="member">QA_ASSERT_CLOSE</ref>(<sp/></highlight><highlight class="stringliteral">&quot;PaQa_AnalyseRecording<sp/>latency&quot;</highlight><highlight class="normal">,<sp/>expectedLatency,<sp/>analysisResult.<ref refid="struct_pa_qa_analysis_result__s_1aa01cd3b08f4331d42e541a5525b5a5ef" kindref="member">latency</ref>,<sp/>4.0<sp/>);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="qa__tools_8h_1a236d0b49165b23edd501e3562ae14485" kindref="member">QA_ASSERT_EQUALS</ref>(<sp/></highlight><highlight class="stringliteral">&quot;PaQa_AnalyseRecording<sp/>no<sp/>pop<sp/>from<sp/>step&quot;</highlight><highlight class="normal">,<sp/>-1,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>analysisResult.<ref refid="struct_pa_qa_analysis_result__s_1aa803a3ce07fc930d172f019881cb5b44" kindref="member">popPosition</ref><sp/>);<sp/></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="audio__analyzer_8c_1a75b79fa3e7ebd8814532f4e6771f1d0b" kindref="member">PaQa_TerminateRecording</ref>(<sp/>&amp;recording<sp/>);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="audio__analyzer_8c_1a75b79fa3e7ebd8814532f4e6771f1d0b" kindref="member">PaQa_TerminateRecording</ref>(<sp/>&amp;hipassOutput<sp/>);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>:</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="audio__analyzer_8c_1ad176a266e1bb48a3107f50755127fac8" kindref="member">PaQa_SaveRecordingToWaveFile</ref>(<sp/>&amp;recording,<sp/></highlight><highlight class="stringliteral">&quot;bad_step_original.wav&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="audio__analyzer_8c_1ad176a266e1bb48a3107f50755127fac8" kindref="member">PaQa_SaveRecordingToWaveFile</ref>(<sp/>&amp;hipassOutput,<sp/></highlight><highlight class="stringliteral">&quot;bad_step_hipass.wav&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="audio__analyzer_8c_1a75b79fa3e7ebd8814532f4e6771f1d0b" kindref="member">PaQa_TerminateRecording</ref>(<sp/>&amp;recording);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="audio__analyzer_8c_1a75b79fa3e7ebd8814532f4e6771f1d0b" kindref="member">PaQa_TerminateRecording</ref>(<sp/>&amp;hipassOutput<sp/>);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="492"><highlight class="normal">}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight><highlight class="comment">/*==========================================================================================*/</highlight></codeline>
<codeline lineno="498"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>TestDetectPops(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="499"><highlight class="normal">{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>pop.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>TestDetectSinglePop(<sp/>44100,<sp/>200,<sp/>477,<sp/>-1,<sp/>0,<sp/>0.0<sp/>);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>result<sp/>&lt;<sp/>0<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>short<sp/>pop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>TestDetectSinglePop(<sp/>44100,<sp/>300,<sp/>810,<sp/>3987,<sp/>1,<sp/>0.5<sp/>);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>result<sp/>&lt;<sp/>0<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>medium<sp/>long<sp/>pop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>TestDetectSinglePop(<sp/>44100,<sp/>300,<sp/>810,<sp/>9876,<sp/>5,<sp/>0.5<sp/>);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>result<sp/>&lt;<sp/>0<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>short<sp/>tiny<sp/>pop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>TestDetectSinglePop(<sp/>44100,<sp/>250,<sp/>810,<sp/>5672,<sp/>1,<sp/>0.05<sp/>);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>result<sp/>&lt;<sp/>0<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="520"><highlight class="normal">}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight><highlight class="comment">/*==========================================================================================*/</highlight></codeline>
<codeline lineno="526"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>TestInitialSpike(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="527"><highlight class="normal">{</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight><highlight class="comment">//(<sp/>double<sp/>sampleRate,<sp/>int<sp/>stepPosition,<sp/>int<sp/>cycleSize,<sp/>int<sp/>latencyFrames,<sp/>double<sp/>stepAmplitude<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>spike.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>TestSingleInitialSpike(<sp/>44100,<sp/>32,<sp/>100,<sp/>537,<sp/>0.0<sp/>);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>result<sp/>&lt;<sp/>0<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Small<sp/>spike.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>TestSingleInitialSpike(<sp/>44100,<sp/>32,<sp/>100,<sp/>537,<sp/>0.1<sp/>);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>result<sp/>&lt;<sp/>0<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>short<sp/>pop<sp/>like<sp/>Ross&apos;s<sp/>error.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>TestSingleInitialSpike(<sp/>8000,<sp/>32,<sp/>42,<sp/>2000,<sp/>0.1<sp/>);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>result<sp/>&lt;<sp/>0<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Medium<sp/>spike.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>TestSingleInitialSpike(<sp/>44100,<sp/>40,<sp/>190,<sp/>3000,<sp/>0.5<sp/>);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>result<sp/>&lt;<sp/>0<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Spike<sp/>near<sp/>sine.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//result<sp/>=<sp/>TestSingleInitialSpike(<sp/>44100,<sp/>2900,<sp/>140,<sp/>3000,<sp/>0.1<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>result<sp/>&lt;<sp/>0<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="553"><highlight class="normal">}</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>TEST_SAVED_WAVE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight><highlight class="comment">/*==========================================================================================*/</highlight></codeline>
<codeline lineno="561"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>TestSavedWave()</highlight></codeline>
<codeline lineno="562"><highlight class="normal">{</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,j;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_w_a_v___writer__s" kindref="compound">WAV_Writer</ref><sp/>writer;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NUM_SAMPLES<sp/><sp/>(200)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>[<ref refid="audio__analyzer_8c_1af0b23eedf2352de4c1eff77e1401730c" kindref="member">NUM_SAMPLES</ref>];</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>saw<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><sp/><ref refid="write__wav_8c_1a2ccf8f4887bd22ac43f3e5c7a9e16799" kindref="member">Audio_WAV_OpenWriter</ref>(<sp/>&amp;writer,<sp/></highlight><highlight class="stringliteral">&quot;test_sawtooth.wav&quot;</highlight><highlight class="normal">,<sp/>44100,<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>result<sp/>&lt;<sp/>0<sp/>)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i=0;<sp/>i&lt;15;<sp/>i++<sp/>)</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>j=0;<sp/>j&lt;<ref refid="audio__analyzer_8c_1af0b23eedf2352de4c1eff77e1401730c" kindref="member">NUM_SAMPLES</ref>;<sp/>j++<sp/>)</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data[j]<sp/>=<sp/>saw;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>saw<sp/>+=<sp/>293;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><sp/><ref refid="write__wav_8c_1acf9e3951bed222ba08f37c45fe24d77d" kindref="member">Audio_WAV_WriteShorts</ref>(<sp/>&amp;writer,<sp/>data,<sp/>NUM_SAMPLES<sp/>);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>result<sp/>&lt;<sp/>0<sp/>)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><sp/><ref refid="write__wav_8c_1adb4825adde65afffe3ea3d5ef840bd5f" kindref="member">Audio_WAV_CloseWriter</ref>(<sp/>&amp;writer<sp/>);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>result<sp/>&lt;<sp/>0<sp/>)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>:</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;ERROR:<sp/>result<sp/>=<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>result<sp/>);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="594"><highlight class="normal">}</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>TEST_SAVED_WAVE<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight><highlight class="comment">/*==========================================================================================*/</highlight></codeline>
<codeline lineno="601" refid="test__audio__analyzer_8c_1ad3cf3b24e555bbae9e2daf607d458ca4" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="test__audio__analyzer_8c_1ad3cf3b24e555bbae9e2daf607d458ca4" kindref="member">PaQa_FillWithSine</ref>(<sp/><ref refid="struct_pa_qa_recording__s" kindref="compound">PaQaRecording</ref><sp/>*recording,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacepatest__suggested__vs__streaminfo__latency_1a14f2ecd6f756d329f6df4096833062d0" kindref="member">sampleRate</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>freq,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>amp<sp/>)</highlight></codeline>
<codeline lineno="602"><highlight class="normal">{</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_qa_sine_generator__s" kindref="compound">PaQaSineGenerator</ref><sp/>generator;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="structbuffer" kindref="compound">buffer</ref>[<ref refid="test__audio__analyzer_8c_1af19e095bf3ce66f4ee6568cfaf9941a4" kindref="member">FRAMES_PER_BLOCK</ref>];</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>samplesPerFrame<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stride<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="midiclock_8c_1a5f689029e53f12e337967312e0a17717" kindref="member">done</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>a<sp/>sine<sp/>oscillator.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="audio__analyzer_8c_1a5b15fa5f9ffe7d147b31f747c40ff49b" kindref="member">PaQa_SetupSineGenerator</ref>(<sp/>&amp;generator,<sp/>freq,<sp/>amp,<sp/>sampleRate<sp/>);</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/>done<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!done)</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="audio__analyzer_8c_1a0d053fe46ae855fa1401098ea08efa88" kindref="member">PaQa_EraseBuffer</ref>(<sp/>buffer,<sp/><ref refid="test__audio__analyzer_8c_1af19e095bf3ce66f4ee6568cfaf9941a4" kindref="member">FRAMES_PER_BLOCK</ref>,<sp/>samplesPerFrame<sp/>);</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="audio__analyzer_8c_1a3511746af23da7b237a81abcd5103e0e" kindref="member">PaQa_MixSine</ref>(<sp/>&amp;generator,<sp/>buffer,<sp/><ref refid="test__audio__analyzer_8c_1af19e095bf3ce66f4ee6568cfaf9941a4" kindref="member">FRAMES_PER_BLOCK</ref>,<sp/>stride<sp/>);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>done<sp/>=<sp/><ref refid="audio__analyzer_8c_1a2d62bebaad42618015497e0c80be4324" kindref="member">PaQa_WriteRecording</ref>(<sp/>recording,<sp/>buffer,<sp/><ref refid="test__audio__analyzer_8c_1af19e095bf3ce66f4ee6568cfaf9941a4" kindref="member">FRAMES_PER_BLOCK</ref>,<sp/>samplesPerFrame<sp/>);</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="620"><highlight class="normal">}</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight><highlight class="comment">/*==========================================================================================*/</highlight></codeline>
<codeline lineno="627"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>TestNotchFilter(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="628"><highlight class="normal">{</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_qa_recording__s" kindref="compound">PaQaRecording</ref><sp/><sp/><sp/><sp/><sp/>original<sp/>=<sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_qa_recording__s" kindref="compound">PaQaRecording</ref><sp/><sp/><sp/><sp/><sp/>filtered<sp/>=<sp/>{<sp/>0<sp/>};</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_biquad_filter__s" kindref="compound">BiquadFilter</ref><sp/><sp/><sp/><sp/><sp/><sp/>notchFilter;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacepatest__suggested__vs__streaminfo__latency_1a14f2ecd6f756d329f6df4096833062d0" kindref="member">sampleRate</ref><sp/>=<sp/>44100.0;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxFrames<sp/>=<sp/>((<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)sampleRate)<sp/>*<sp/>1;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>freq<sp/>=<sp/>234.5;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>amp<sp/>=<sp/>0.5;</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mag1,<sp/>mag2,<sp/>mag3;</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="audio__analyzer_8c_1a13f48cb441107ed8d398bb6c63f802ae" kindref="member">PaQa_InitializeRecording</ref>(<sp/>&amp;original,<sp/>maxFrames,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>sampleRate<sp/>);</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="qa__tools_8h_1a236d0b49165b23edd501e3562ae14485" kindref="member">QA_ASSERT_EQUALS</ref>(<sp/></highlight><highlight class="stringliteral">&quot;PaQa_InitializeRecording<sp/>failed&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>result<sp/>);</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="test__audio__analyzer_8c_1ad3cf3b24e555bbae9e2daf607d458ca4" kindref="member">PaQa_FillWithSine</ref>(<sp/>&amp;original,<sp/>sampleRate,<sp/>freq,<sp/>amp<sp/>);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//result<sp/>=<sp/>PaQa_SaveRecordingToWaveFile(<sp/>&amp;original,<sp/>&quot;original.wav&quot;<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//QA_ASSERT_EQUALS(<sp/>&quot;PaQa_SaveRecordingToWaveFile<sp/>failed&quot;,<sp/>0,<sp/>result<sp/>);<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>mag1<sp/>=<sp/><ref refid="audio__analyzer_8c_1a7f26dbd09af0cc0cf873e84d7ec0a13b" kindref="member">PaQa_CorrelateSine</ref>(<sp/>&amp;original,<sp/>freq,<sp/>sampleRate,<sp/>0,<sp/>original.<ref refid="struct_pa_qa_recording__s_1a0da5f9ac0c45a0051ce5c50cc1e05731" kindref="member">numFrames</ref>,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="qa__tools_8h_1aab3a1d80d89ca253fe6229730db464a6" kindref="member">QA_ASSERT_CLOSE</ref>(<sp/></highlight><highlight class="stringliteral">&quot;exact<sp/>frequency<sp/>match&quot;</highlight><highlight class="normal">,<sp/>amp,<sp/>mag1,<sp/>0.01<sp/>);</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Filter<sp/>with<sp/>exact<sp/>frequency.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="audio__analyzer_8c_1a13f48cb441107ed8d398bb6c63f802ae" kindref="member">PaQa_InitializeRecording</ref>(<sp/>&amp;filtered,<sp/>maxFrames,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>sampleRate<sp/>);</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="qa__tools_8h_1a236d0b49165b23edd501e3562ae14485" kindref="member">QA_ASSERT_EQUALS</ref>(<sp/></highlight><highlight class="stringliteral">&quot;PaQa_InitializeRecording<sp/>failed&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>result<sp/>);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="biquad__filter_8c_1ad03fda9b4f22950f65f43139541a8377" kindref="member">BiquadFilter_SetupNotch</ref>(<sp/>&amp;notchFilter,<sp/>freq<sp/>/<sp/>sampleRate,<sp/>0.5<sp/>);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="audio__analyzer_8c_1a89f3a57c92da52f6ebdb4ee3633db3b2" kindref="member">PaQa_FilterRecording</ref>(<sp/>&amp;original,<sp/>&amp;filtered,<sp/>&amp;notchFilter<sp/>);</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="audio__analyzer_8c_1ad176a266e1bb48a3107f50755127fac8" kindref="member">PaQa_SaveRecordingToWaveFile</ref>(<sp/>&amp;filtered,<sp/></highlight><highlight class="stringliteral">&quot;filtered1.wav&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="qa__tools_8h_1a236d0b49165b23edd501e3562ae14485" kindref="member">QA_ASSERT_EQUALS</ref>(<sp/></highlight><highlight class="stringliteral">&quot;PaQa_SaveRecordingToWaveFile<sp/>failed&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>result<sp/>);</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/>mag2<sp/>=<sp/><ref refid="audio__analyzer_8c_1a7f26dbd09af0cc0cf873e84d7ec0a13b" kindref="member">PaQa_CorrelateSine</ref>(<sp/>&amp;filtered,<sp/>freq,<sp/>sampleRate,<sp/>0,<sp/>filtered.<ref refid="struct_pa_qa_recording__s_1a0da5f9ac0c45a0051ce5c50cc1e05731" kindref="member">numFrames</ref>,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="qa__tools_8h_1aab3a1d80d89ca253fe6229730db464a6" kindref="member">QA_ASSERT_CLOSE</ref>(<sp/></highlight><highlight class="stringliteral">&quot;should<sp/>eliminate<sp/>tone&quot;</highlight><highlight class="normal">,<sp/>0.0,<sp/>mag2,<sp/>0.01<sp/>);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Filter<sp/>with<sp/>mismatched<sp/>frequency.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="biquad__filter_8c_1ad03fda9b4f22950f65f43139541a8377" kindref="member">BiquadFilter_SetupNotch</ref>(<sp/>&amp;notchFilter,<sp/>1.07<sp/>*<sp/>freq<sp/>/<sp/>sampleRate,<sp/>2.0<sp/>);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="audio__analyzer_8c_1a89f3a57c92da52f6ebdb4ee3633db3b2" kindref="member">PaQa_FilterRecording</ref>(<sp/>&amp;original,<sp/>&amp;filtered,<sp/>&amp;notchFilter<sp/>);</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//result<sp/>=<sp/>PaQa_SaveRecordingToWaveFile(<sp/>&amp;filtered,<sp/>&quot;badfiltered.wav&quot;<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//QA_ASSERT_EQUALS(<sp/>&quot;PaQa_SaveRecordingToWaveFile<sp/>failed&quot;,<sp/>0,<sp/>result<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/>mag3<sp/>=<sp/><ref refid="audio__analyzer_8c_1a7f26dbd09af0cc0cf873e84d7ec0a13b" kindref="member">PaQa_CorrelateSine</ref>(<sp/>&amp;filtered,<sp/>freq,<sp/>sampleRate,<sp/>0,<sp/>filtered.<ref refid="struct_pa_qa_recording__s_1a0da5f9ac0c45a0051ce5c50cc1e05731" kindref="member">numFrames</ref>,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="qa__tools_8h_1aab3a1d80d89ca253fe6229730db464a6" kindref="member">QA_ASSERT_CLOSE</ref>(<sp/></highlight><highlight class="stringliteral">&quot;should<sp/>eliminate<sp/>tone&quot;</highlight><highlight class="normal">,<sp/>amp*0.26,<sp/>mag3,<sp/>0.01<sp/>);</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="audio__analyzer_8c_1a75b79fa3e7ebd8814532f4e6771f1d0b" kindref="member">PaQa_TerminateRecording</ref>(<sp/>&amp;original<sp/>);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="audio__analyzer_8c_1a75b79fa3e7ebd8814532f4e6771f1d0b" kindref="member">PaQa_TerminateRecording</ref>(<sp/>&amp;filtered<sp/>);</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="679"><highlight class="normal"><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>:</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="audio__analyzer_8c_1a75b79fa3e7ebd8814532f4e6771f1d0b" kindref="member">PaQa_TerminateRecording</ref>(<sp/>&amp;original);</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="audio__analyzer_8c_1a75b79fa3e7ebd8814532f4e6771f1d0b" kindref="member">PaQa_TerminateRecording</ref>(<sp/>&amp;filtered<sp/>);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="684"><highlight class="normal">}</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight><highlight class="comment">/*==========================================================================================*/</highlight></codeline>
<codeline lineno="689" refid="test__audio__analyzer_8h_1a5e542ff033899b8794caf83e6d15aa4c" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="test__audio__analyzer_8c_1a5e542ff033899b8794caf83e6d15aa4c" kindref="member">PaQa_TestAnalyzer</ref>(<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="690"><highlight class="normal">{</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>TEST_SAVED_WAVE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>a<sp/>simple<sp/>wave<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((result<sp/>=<sp/>TestSavedWave())<sp/>!=<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>TEST_SAVED_WAVE<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Generate<sp/>single<sp/>tone<sp/>and<sp/>verify<sp/>presence.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((result<sp/>=<sp/>TestSingleMonoTone())<sp/>!=<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Generate<sp/>prime<sp/>series<sp/>of<sp/>tones<sp/>and<sp/>verify<sp/>presence.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((result<sp/>=<sp/>TestMixedMonoTones())<sp/>!=<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Detect<sp/>dropped<sp/>or<sp/>added<sp/>samples<sp/>in<sp/>a<sp/>sine<sp/>wave<sp/>recording.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((result<sp/>=<sp/>TestDetectPhaseErrors())<sp/>!=<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>to<sp/>see<sp/>if<sp/>notch<sp/>filter<sp/>can<sp/>knock<sp/>out<sp/>the<sp/>test<sp/>tone.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((result<sp/>=<sp/>TestNotchFilter())<sp/>!=<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Detect<sp/>pops<sp/>that<sp/>get<sp/>back<sp/>in<sp/>phase.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((result<sp/>=<sp/>TestDetectPops())<sp/>!=<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>to<sp/>see<sp/>if<sp/>the<sp/>latency<sp/>detector<sp/>can<sp/>be<sp/>tricked<sp/>like<sp/>it<sp/>was<sp/>on<sp/>Ross&apos;<sp/>Windows<sp/>machine.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((result<sp/>=<sp/>TestInitialSpike())<sp/>!=<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="718"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/qa/loopback/src/test_audio_analyzer.c"/>
  </compounddef>
</doxygen>
