<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="moxc_8c" kind="file" language="C++">
    <compoundname>moxc.c</compoundname>
    <includes local="yes">switches.h</includes>
    <includes local="yes">stdio.h</includes>
    <includes refid="cext_8h" local="yes">cext.h</includes>
    <includes refid="userio_8h" local="yes">userio.h</includes>
    <includes refid="midifns_8h" local="yes">midifns.h</includes>
    <includes refid="cmdline_8h" local="yes">cmdline.h</includes>
    <includes refid="libnyquist_2nyquist_2cmt_2midicode_8h" local="yes">midicode.h</includes>
    <includes refid="timebase_8h" local="yes">timebase.h</includes>
    <includes refid="moxc_8h" local="yes">moxc.h</includes>
    <incdepgraph>
      <node id="11351">
        <label>cmdline.h</label>
        <link refid="cmdline_8h"/>
      </node>
      <node id="11347">
        <label>cleanup.h</label>
        <link refid="cleanup_8h"/>
      </node>
      <node id="11346">
        <label>mem.h</label>
        <link refid="libnyquist_2nyquist_2cmt_2mem_8h"/>
      </node>
      <node id="11344">
        <label>string.h</label>
      </node>
      <node id="11345">
        <label>math.h</label>
      </node>
      <node id="11341">
        <label>switches.h</label>
      </node>
      <node id="11348">
        <label>userio.h</label>
        <link refid="userio_8h"/>
      </node>
      <node id="11349">
        <label>midifns.h</label>
        <link refid="midifns_8h"/>
        <childnode refid="11350" relation="include">
        </childnode>
      </node>
      <node id="11350">
        <label>midierr.h</label>
        <link refid="midierr_8h"/>
      </node>
      <node id="11340">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/moxc.c</label>
        <link refid="moxc.c"/>
        <childnode refid="11341" relation="include">
        </childnode>
        <childnode refid="11342" relation="include">
        </childnode>
        <childnode refid="11343" relation="include">
        </childnode>
        <childnode refid="11348" relation="include">
        </childnode>
        <childnode refid="11349" relation="include">
        </childnode>
        <childnode refid="11351" relation="include">
        </childnode>
        <childnode refid="11352" relation="include">
        </childnode>
        <childnode refid="11353" relation="include">
        </childnode>
        <childnode refid="11354" relation="include">
        </childnode>
      </node>
      <node id="11354">
        <label>moxc.h</label>
        <link refid="moxc_8h"/>
      </node>
      <node id="11342">
        <label>stdio.h</label>
      </node>
      <node id="11352">
        <label>midicode.h</label>
        <link refid="libnyquist_2nyquist_2cmt_2midicode_8h"/>
      </node>
      <node id="11353">
        <label>timebase.h</label>
        <link refid="timebase_8h"/>
      </node>
      <node id="11343">
        <label>cext.h</label>
        <link refid="cext_8h"/>
        <childnode refid="11341" relation="include">
        </childnode>
        <childnode refid="11342" relation="include">
        </childnode>
        <childnode refid="11344" relation="include">
        </childnode>
        <childnode refid="11345" relation="include">
        </childnode>
        <childnode refid="11346" relation="include">
        </childnode>
        <childnode refid="11347" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="moxc_8c_1ad1e5b227eaa547bd9d1032d33257175a" prot="public" static="no">
        <name>SAFEMOXC</name>
        <initializer><ref refid="twolame_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/moxc.c" line="81" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/moxc.c" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="moxc_8c_1a56a746c625b331d2457a87725fc3b55d" prot="public" static="no">
        <name>BREAKKEY</name>
        <initializer>0x03</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/moxc.c" line="82" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/moxc.c" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="moxc_8c_1a9d114d03d435a08ae70e733dca096138" prot="public" static="no">
        <name>GCC_MODEL_CPU</name>
        <initializer>&quot;GCC_MODEL_CPU is <ref refid="textio_8cpp_1ad29ee78caa97a605c7748d87d7e80a15" kindref="member">undefined</ref> <ref refid="hashrout_8h_1a63bdfbdfaa50cfc85afcbff4ce2c16a6" kindref="member">for</ref> this compilation&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/moxc.c" line="223" column="9"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="moxc_8c_1af7e5e4672bfeaa2a9b89ce260eccdbce" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int abort_flag</definition>
        <argsstring></argsstring>
        <name>abort_flag</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/moxc.c" line="36" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/userio.c" bodystart="187" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="moxc_8c_1a293be463c12224cab1e365879e589167" prot="public" static="no" mutable="no">
        <type>char *</type>
        <definition>char* app_syntax</definition>
        <argsstring></argsstring>
        <name>app_syntax</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/moxc.c" line="56" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/handlers.c" bodystart="5" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="moxc_8c_1ad87aed56dbb3574e571ec88c5a814dd4" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int moxcdone</definition>
        <argsstring></argsstring>
        <name>moxcdone</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/moxc.c" line="84" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/moxc.c" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="moxc_8c_1ab21b8a451636325431b51f29601ff426" prot="public" static="no" mutable="no">
        <type><ref refid="midifns_8h_1a3f787491db5dbc75c21b27d54e9ebae6" kindref="member">time_type</ref></type>
        <definition>time_type eventtime</definition>
        <argsstring></argsstring>
        <name>eventtime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/moxc.c" line="85" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/moxc.c" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="moxc_8c_1ac473afd8b92b443dca44674fa889f697" prot="public" static="no" mutable="no">
        <type><ref refid="midifns_8h_1a3f787491db5dbc75c21b27d54e9ebae6" kindref="member">time_type</ref></type>
        <definition>time_type virttime</definition>
        <argsstring></argsstring>
        <name>virttime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/moxc.c" line="87" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/moxc.c" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="moxc_8c_1ab19ffac9ae6cc0109f089a377dfd7fa1" prot="public" static="no" mutable="no">
        <type><ref refid="timebase_8h_1a1eb83a40e21ea632c517395ce4b36d60" kindref="member">timebase_type</ref></type>
        <definition>timebase_type timebase</definition>
        <argsstring></argsstring>
        <name>timebase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/moxc.c" line="88" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/moxc.c" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="moxc_8c_1a957be7d4a1b738f98e7ff37e5136007c" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int mididecode</definition>
        <argsstring></argsstring>
        <name>mididecode</name>
        <initializer>= <ref refid="twolame_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/moxc.c" line="89" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/moxc.c" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="moxc_8c_1ac3e1795766a80ec63b157951b4b9a7d4" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int debug</definition>
        <argsstring></argsstring>
        <name>debug</name>
        <initializer>= <ref refid="twolame_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/moxc.c" line="91" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/moxc.c" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="moxc_8c_1ab1c805c7e10455131e6a1d1f00e941ba" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int moxcdebug</definition>
        <argsstring></argsstring>
        <name>moxcdebug</name>
        <initializer>= <ref refid="twolame_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/moxc.c" line="92" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/moxc.c" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="moxc_8c_1add069c2640c5ec0f030831212cf1fd6f" prot="public" static="no" mutable="no">
        <type><ref refid="midifns_8h_1a3f787491db5dbc75c21b27d54e9ebae6" kindref="member">time_type</ref></type>
        <definition>time_type next_wakeup</definition>
        <argsstring></argsstring>
        <name>next_wakeup</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/moxc.c" line="93" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/moxc.c" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="moxc_8c_1afd87ad47b5a7e451a582be3a8b9451a7" prot="public" static="no" mutable="no">
        <type><ref refid="timebase_8h_1a1eb83a40e21ea632c517395ce4b36d60" kindref="member">timebase_type</ref></type>
        <definition>timebase_type default_base</definition>
        <argsstring></argsstring>
        <name>default_base</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/moxc.c" line="94" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/moxc.c" bodystart="94" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="moxc_8c_1aeb221a5a25bf25e3501386149119851c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mm_8c_1a6a1d6e1a12975a4e9a0b5b952e79eaad" kindref="member">private</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>private void callrun</definition>
        <argsstring>()</argsstring>
        <name>callrun</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/moxc.c" line="105" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/moxc.c" bodystart="315" bodyend="337"/>
      </memberdef>
      <memberdef kind="function" id="moxc_8c_1ae754a0f850e267dd2739e1ee8d0f031c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mm_8c_1a6a1d6e1a12975a4e9a0b5b952e79eaad" kindref="member">private</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>private void decode</definition>
        <argsstring>()</argsstring>
        <name>decode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/moxc.c" line="106" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/moxc.c" bodystart="466" bodyend="637"/>
      </memberdef>
      <memberdef kind="function" id="moxc_8c_1a6a50d547911a748a6368ee293c9a7912" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mm_8c_1a6a1d6e1a12975a4e9a0b5b952e79eaad" kindref="member">private</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>private void moxcterm</definition>
        <argsstring>()</argsstring>
        <name>moxcterm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/moxc.c" line="107" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/moxc.c" bodystart="663" bodyend="669"/>
      </memberdef>
      <memberdef kind="function" id="moxc_8c_1a53bb48c299b12b3133469914c0c37121" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void callallcancel</definition>
        <argsstring>()</argsstring>
        <name>callallcancel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/moxc.c" line="120" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/moxc.c" bodystart="120" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="moxc_8c_1a926bfedcca4e1e25deb03f14acc1eaa6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void catchup</definition>
        <argsstring>()</argsstring>
        <name>catchup</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/moxc.c" line="135" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/moxc.c" bodystart="135" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="moxc_8c_1a667f7390a8435b47e027ae9ea2455cb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void cause</definition>
        <argsstring>(delay_type delay, int(*routine)(), call_args_node p)</argsstring>
        <name>cause</name>
        <param>
          <type><ref refid="midifns_8h_1a90bc8a533ac78d3f6e076de78883fb75" kindref="member">delay_type</ref></type>
          <declname>delay</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref>(*)()</type>
          <declname>routine</declname>
        </param>
        <param>
          <type><ref refid="timebase_8h_1a69fd223628aabdd8bf73febbcf0f1c1d" kindref="member">call_args_node</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/moxc.c" line="177" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/moxc.c" bodystart="177" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="moxc_8c_1acaca1db2e4d549d9fd42caf9cc6b8a40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void causepri</definition>
        <argsstring>(delay_type delay, int pri, int(*routine)(), call_args_node p)</argsstring>
        <name>causepri</name>
        <param>
          <type><ref refid="midifns_8h_1a90bc8a533ac78d3f6e076de78883fb75" kindref="member">delay_type</ref></type>
          <declname>delay</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>pri</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref>(*)()</type>
          <declname>routine</declname>
        </param>
        <param>
          <type><ref refid="timebase_8h_1a69fd223628aabdd8bf73febbcf0f1c1d" kindref="member">call_args_node</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/moxc.c" line="251" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/moxc.c" bodystart="251" bodyend="305"/>
      </memberdef>
      <memberdef kind="function" id="moxc_8c_1a397e9d20c5b5de16221a5ec7019c9ce0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void m_restuntil</definition>
        <argsstring>(time_type time)</argsstring>
        <name>m_restuntil</name>
        <param>
          <type><ref refid="midifns_8h_1a3f787491db5dbc75c21b27d54e9ebae6" kindref="member">time_type</ref></type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/moxc.c" line="348" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/moxc.c" bodystart="348" bodyend="355"/>
      </memberdef>
      <memberdef kind="function" id="moxc_8c_1ad21bfc14386797716f7d3e316f5df5b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void m_rest</definition>
        <argsstring>(time_type time)</argsstring>
        <name>m_rest</name>
        <param>
          <type><ref refid="midifns_8h_1a3f787491db5dbc75c21b27d54e9ebae6" kindref="member">time_type</ref></type>
          <declname>time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/moxc.c" line="370" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/moxc.c" bodystart="370" bodyend="374"/>
      </memberdef>
      <memberdef kind="function" id="moxc_8c_1acd226f19dc3476faf2a260c998c8b5a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cext_8h_1a7670a4e8a07d9ebb00411948b0bbf86d" kindref="member">boolean</ref></type>
        <definition>boolean moxcinit</definition>
        <argsstring>(int argc, argv)</argsstring>
        <name>moxcinit</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>argc</declname>
        </param>
        <param>
          <type><ref refid="cmdline_8c_1ad407d5ba91709bd9b092003858600723" kindref="member">argv</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/moxc.c" line="384" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/moxc.c" bodystart="384" bodyend="433"/>
      </memberdef>
      <memberdef kind="function" id="moxc_8c_1ab06fc1a6181085c797a39e253d0db9fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void moxcwait</definition>
        <argsstring>(time_type dateoftimeout)</argsstring>
        <name>moxcwait</name>
        <param>
          <type><ref refid="midifns_8h_1a3f787491db5dbc75c21b27d54e9ebae6" kindref="member">time_type</ref></type>
          <declname>dateoftimeout</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/moxc.c" line="447" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/moxc.c" bodystart="447" bodyend="458"/>
      </memberdef>
      <memberdef kind="function" id="moxc_8c_1a2463a3acef2df4c951ce942a3229e44e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void quit</definition>
        <argsstring>()</argsstring>
        <name>quit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/moxc.c" line="645" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/moxc.c" bodystart="645" bodyend="648"/>
      </memberdef>
      <memberdef kind="function" id="moxc_8c_1a68c01cfa2e96170b270d070db618287c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void moxcrun</definition>
        <argsstring>()</argsstring>
        <name>moxcrun</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/moxc.c" line="652" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/moxc.c" bodystart="652" bodyend="659"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>MOXC<sp/>--<sp/>a<sp/>C<sp/>version<sp/>of<sp/>Collinge&apos;s<sp/>MOXIE<sp/>language<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Copyright<sp/>1989<sp/>Carnegie<sp/>Mellon<sp/>University<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Change<sp/>Log</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*<sp/><sp/>Date<sp/><sp/><sp/><sp/><sp/>|<sp/>Change</highlight></codeline>
<codeline lineno="7"><highlight class="comment">*-----------+-----------------------------------------------------------------</highlight></codeline>
<codeline lineno="8"><highlight class="comment">*<sp/>31-Dec-85<sp/>|<sp/>Modified<sp/>for<sp/>use<sp/>with<sp/>midi</highlight></codeline>
<codeline lineno="9"><highlight class="comment">*<sp/><sp/>5-Feb-86<sp/>|<sp/>Added<sp/>m_rest<sp/>and<sp/>m_restuntil<sp/>allowing<sp/>rests<sp/>at<sp/>top<sp/>level</highlight></codeline>
<codeline lineno="10"><highlight class="comment">*<sp/>28-May-86<sp/>|<sp/>Added<sp/>command<sp/>line<sp/>parsing</highlight></codeline>
<codeline lineno="11"><highlight class="comment">*<sp/><sp/>4-Jun-86<sp/>|<sp/>changed<sp/>keyevent<sp/>to<sp/>separate<sp/>calls<sp/>for<sp/>each<sp/>event<sp/>type</highlight></codeline>
<codeline lineno="12"><highlight class="comment">*<sp/>10-Jul-86<sp/>|<sp/>put<sp/>loop<sp/>in<sp/>mainscore<sp/>with<sp/>prompt<sp/>to<sp/>play<sp/>and<sp/>replay</highlight></codeline>
<codeline lineno="13"><highlight class="comment">*<sp/>03-Jun-88<sp/>|<sp/>modified<sp/>for<sp/>portability<sp/>(AMIGA)<sp/>-JCD</highlight></codeline>
<codeline lineno="14"><highlight class="comment">*<sp/>07-Jul-89<sp/>|<sp/>time<sp/>bases<sp/>-RBD</highlight></codeline>
<codeline lineno="15"><highlight class="comment">*<sp/>31-Jan-90<sp/>|<sp/>GWL<sp/>:<sp/>cleaned<sp/>up<sp/>for<sp/>LATTICE</highlight></codeline>
<codeline lineno="16"><highlight class="comment">*<sp/>30-Jun-90<sp/>|<sp/>RBD<sp/>:<sp/>further<sp/>changes</highlight></codeline>
<codeline lineno="17"><highlight class="comment">*<sp/><sp/>2-Apr-91<sp/>|<sp/>JDW<sp/>:<sp/>further<sp/>changes</highlight></codeline>
<codeline lineno="18"><highlight class="comment">*<sp/><sp/>4-Mar-91<sp/>|<sp/>GWL<sp/>:<sp/>DOS<sp/>allows<sp/>odd<sp/>inst<sp/>addrs</highlight></codeline>
<codeline lineno="19"><highlight class="comment">*<sp/>10-Oct-94<sp/>|<sp/>nix<sp/>:<sp/>posicionador<sp/>tridimensionale<sp/>interface</highlight></codeline>
<codeline lineno="20"><highlight class="comment">*<sp/>28-Apr-03<sp/>|<sp/><sp/>DM<sp/>:<sp/>true-&gt;TRUE,<sp/>false-&gt;FALSE</highlight></codeline>
<codeline lineno="21"><highlight class="comment">*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;switches.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMIGA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AZTEC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;functions.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;amiga.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;exec/exec.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cmtcmd_8h" kindref="compound">cmtcmd.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>event_mask;<sp/></highlight><highlight class="comment">/*<sp/>imported<sp/>from<sp/>midifns.c<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="moxc_8c_1af7e5e4672bfeaa2a9b89ce260eccdbce" kindref="member">abort_flag</ref>;<sp/><sp/></highlight><highlight class="comment">/*DMH:<sp/>taken<sp/>out<sp/>of<sp/>ifdef<sp/>AMIGA<sp/>for<sp/>moxcrun*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stdio.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cext_8h" kindref="compound">cext.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="userio_8h" kindref="compound">userio.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="midifns_8h" kindref="compound">midifns.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cmdline_8h" kindref="compound">cmdline.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="libnyquist_2nyquist_2cmt_2midicode_8h" kindref="compound">midicode.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="timebase_8h" kindref="compound">timebase.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="moxc_8h" kindref="compound">moxc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMIGA<sp/></highlight><highlight class="comment">/*DMH:<sp/>only<sp/>AMIGA<sp/>cares<sp/>about<sp/>AMIGA&apos;s<sp/>&quot;proportional<sp/>controllers&quot;*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;prop1.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>POSICIONADOR_3D</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pos3d.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;pos3dbuf.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>POSICIONADOR_3D<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="moxc_8c_1a293be463c12224cab1e365879e589167" kindref="member">app_syntax</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">/***************************************************************************</highlight></codeline>
<codeline lineno="59"><highlight class="comment">*</highlight></codeline>
<codeline lineno="60"><highlight class="comment">*<sp/><sp/>IMPORTS:</highlight></codeline>
<codeline lineno="61"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>asciievent(k)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>user-defined<sp/>action<sp/>for<sp/>terminal<sp/>input</highlight></codeline>
<codeline lineno="62"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>bendchange(ch,<sp/>val)<sp/><sp/><sp/><sp/><sp/>user-defined<sp/>pitch<sp/>bend<sp/>handler</highlight></codeline>
<codeline lineno="63"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>ctrlchange(ch,<sp/>c,<sp/>val)<sp/><sp/>user-defined<sp/>control<sp/>change<sp/>handler</highlight></codeline>
<codeline lineno="64"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>keydown(ch,<sp/>p,<sp/>v)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>user-defined<sp/>MIDI<sp/>note<sp/>on<sp/>handler</highlight></codeline>
<codeline lineno="65"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyup(ch,<sp/>p)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>user-defined<sp/>MIDI<sp/>note<sp/>off<sp/>handler</highlight></codeline>
<codeline lineno="66"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>mainscore()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>user-defined<sp/>first<sp/>action(s)</highlight></codeline>
<codeline lineno="67"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>musicfns<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lots<sp/>of<sp/>time<sp/>and<sp/>io<sp/>functions</highlight></codeline>
<codeline lineno="68"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>peddown(ch)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>user-defined<sp/>pedal<sp/>down<sp/>handler</highlight></codeline>
<codeline lineno="69"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>pedup(ch)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>user-defined<sp/>pedal<sp/>up<sp/>handler</highlight></codeline>
<codeline lineno="70"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>touchchange(ch,<sp/>val)<sp/><sp/><sp/><sp/>user-defined<sp/>aftertouch<sp/>handler</highlight></codeline>
<codeline lineno="71"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>app_syntax<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>string<sp/>defining<sp/>extra<sp/>command<sp/>line<sp/>options</highlight></codeline>
<codeline lineno="72"><highlight class="comment">*</highlight></codeline>
<codeline lineno="73"><highlight class="comment">*<sp/><sp/>EXPORTS:</highlight></codeline>
<codeline lineno="74"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="75"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>cause(delay,<sp/>routine,<sp/>p1,<sp/>p2,<sp/>...,<sp/>p8)</highlight></codeline>
<codeline lineno="76"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>moxcdone<sp/>--<sp/>set<sp/>to<sp/>TRUE<sp/>to<sp/>quit</highlight></codeline>
<codeline lineno="77"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>eventtime<sp/>--<sp/>ideallized<sp/>current<sp/>time</highlight></codeline>
<codeline lineno="78"><highlight class="comment">*</highlight></codeline>
<codeline lineno="79"><highlight class="comment">*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="moxc_8c_1ad1e5b227eaa547bd9d1032d33257175a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SAFEMOXC<sp/>TRUE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="moxc_8c_1a56a746c625b331d2457a87725fc3b55d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BREAKKEY<sp/>0x03</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="moxc_8h_1ad87aed56dbb3574e571ec88c5a814dd4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="moxc_8c_1ad87aed56dbb3574e571ec88c5a814dd4" kindref="member">moxcdone</ref>;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>flag<sp/>to<sp/>halt<sp/>execution<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="moxc_8h_1ab21b8a451636325431b51f29601ff426" refkind="member"><highlight class="normal"><ref refid="midifns_8h_1a3f787491db5dbc75c21b27d54e9ebae6" kindref="member">time_type</ref><sp/><ref refid="moxc_8c_1ab21b8a451636325431b51f29601ff426" kindref="member">eventtime</ref>;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>time<sp/>of<sp/>current<sp/>call<sp/>--<sp/>used<sp/>to<sp/>avoid<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>timing<sp/>errors<sp/>due<sp/>to<sp/>finite<sp/>execution<sp/>speed<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="moxc_8h_1ac473afd8b92b443dca44674fa889f697" refkind="member"><highlight class="normal"><ref refid="midifns_8h_1a3f787491db5dbc75c21b27d54e9ebae6" kindref="member">time_type</ref><sp/><ref refid="moxc_8c_1ac473afd8b92b443dca44674fa889f697" kindref="member">virttime</ref>;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>virtual<sp/>time<sp/>of<sp/>current<sp/>call<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="moxc_8h_1ab19ffac9ae6cc0109f089a377dfd7fa1" refkind="member"><highlight class="normal"><ref refid="structtimebase__struct" kindref="compound">timebase_type</ref><sp/><ref refid="moxc_8c_1ab19ffac9ae6cc0109f089a377dfd7fa1" kindref="member">timebase</ref>;<sp/></highlight><highlight class="comment">/*<sp/>time<sp/>base<sp/>of<sp/>current<sp/>call<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="moxc_8h_1a957be7d4a1b738f98e7ff37e5136007c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="moxc_8c_1a957be7d4a1b738f98e7ff37e5136007c" kindref="member">mididecode</ref><sp/>=<sp/><ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;<sp/><sp/></highlight><highlight class="comment">/*<sp/>whether<sp/>to<sp/>decode<sp/>messages<sp/>or<sp/>just<sp/>call<sp/>midievent<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="userio_8c_1ac3e1795766a80ec63b157951b4b9a7d4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="moxc_8c_1ac3e1795766a80ec63b157951b4b9a7d4" kindref="member">debug</ref><sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="92" refid="seq_8c_1ab1c805c7e10455131e6a1d1f00e941ba" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="moxc_8c_1ab1c805c7e10455131e6a1d1f00e941ba" kindref="member">moxcdebug</ref><sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="93" refid="moxc_8c_1add069c2640c5ec0f030831212cf1fd6f" refkind="member"><highlight class="normal"><ref refid="midifns_8h_1a3f787491db5dbc75c21b27d54e9ebae6" kindref="member">time_type</ref><sp/><ref refid="moxc_8c_1add069c2640c5ec0f030831212cf1fd6f" kindref="member">next_wakeup</ref>;</highlight></codeline>
<codeline lineno="94" refid="seq_8c_1afd87ad47b5a7e451a582be3a8b9451a7" refkind="member"><highlight class="normal"><ref refid="structtimebase__struct" kindref="compound">timebase_type</ref><sp/><ref refid="moxc_8c_1afd87ad47b5a7e451a582be3a8b9451a7" kindref="member">default_base</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMIGA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pub_port_signal;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">MsgPort<sp/>pub_port;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************</highlight></codeline>
<codeline lineno="102"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Routines<sp/>local<sp/>to<sp/>this<sp/>module</highlight></codeline>
<codeline lineno="103"><highlight class="comment">*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="moxc_8c_1aeb221a5a25bf25e3501386149119851c" kindref="member">callrun</ref>();</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="moxc_8c_1ae754a0f850e267dd2739e1ee8d0f031c" kindref="member">decode</ref>();</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="moxc_8c_1a6a50d547911a748a6368ee293c9a7912" kindref="member">moxcterm</ref>();</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment">/****************************************************************************</highlight></codeline>
<codeline lineno="110"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callallcancel</highlight></codeline>
<codeline lineno="111"><highlight class="comment">*<sp/>Inputs:</highlight></codeline>
<codeline lineno="112"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>timebase_queue</highlight></codeline>
<codeline lineno="113"><highlight class="comment">*<sp/>Effect:<sp/></highlight></codeline>
<codeline lineno="114"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>all<sp/>calls<sp/>to<sp/>free<sp/>list</highlight></codeline>
<codeline lineno="115"><highlight class="comment">*<sp/>Implementation:</highlight></codeline>
<codeline lineno="116"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>timebase_queue<sp/>is<sp/>not<sp/>empty,<sp/>there&apos;s<sp/>a<sp/>pending<sp/>call.<sp/><sp/>Remove<sp/>the<sp/>call</highlight></codeline>
<codeline lineno="117"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(not<sp/>necessarily<sp/>the<sp/>timebase)<sp/>and<sp/>repeat.</highlight></codeline>
<codeline lineno="118"><highlight class="comment">****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120" refid="moxc_8h_1a22437fc8effd315366f8c9813ad1f0ed" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="moxc_8c_1a53bb48c299b12b3133469914c0c37121" kindref="member">callallcancel</ref>()</highlight></codeline>
<codeline lineno="121"><highlight class="normal">{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="moxc_8c_1ab1c805c7e10455131e6a1d1f00e941ba" kindref="member">moxcdebug</ref>)<sp/><ref refid="userio_8c_1aa7fe1fd5a722b3baba97b2fb02fa73a1" kindref="member">gprintf</ref>(<ref refid="userio_8h_1a74e88acac653562bdfeee426813d9fef" kindref="member">GDEBUG</ref>,<sp/></highlight><highlight class="stringliteral">&quot;cancel<sp/>all<sp/>calls\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="timebase_8c_1a0a255e110445b85f5eac1a90cd8797df" kindref="member">timebase_queue</ref>)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timebase<sp/>=<sp/><ref refid="timebase_8c_1a0a255e110445b85f5eac1a90cd8797df" kindref="member">timebase_queue</ref>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="timebase_8c_1a0a255e110445b85f5eac1a90cd8797df" kindref="member">timebase_queue</ref><sp/>=<sp/>timebase-&gt;<ref refid="structtimebase__struct_1acc66c402d59aa01f42cfa2169ea2af16" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(timebase-&gt;<ref refid="structtimebase__struct_1a5f145edb534454276ec7076d3d9ece31" kindref="member">heap_size</ref><sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="timebase_8h_1a7aa65d3890d3ad179f4db751c535d78a" kindref="member">call_free</ref>(<ref refid="timebase_8c_1ae919190e330c56cd3d910da716c03b92" kindref="member">remove_call</ref>(timebase));</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="timebase_8c_1a187d243c612d95fa71ab39b81477ba78" kindref="member">insert_base</ref>(timebase);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>catchup<sp/>--<sp/>bring<sp/>current<sp/>timebase<sp/>up<sp/>to<sp/>date<sp/>by<sp/>running<sp/>its<sp/>calls<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="moxc_8h_1a3b519b8ef7b888c9a2bfc5b3fedee881" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="moxc_8c_1a926bfedcca4e1e25deb03f14acc1eaa6" kindref="member">catchup</ref>()</highlight></codeline>
<codeline lineno="136"><highlight class="normal">{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="structcall" kindref="compound">call_type</ref><sp/><ref refid="structcall" kindref="compound">call</ref>;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Remember<sp/>where<sp/>we&apos;re<sp/>going<sp/>in<sp/>virtual<sp/>time<sp/>because<sp/>setting<sp/>the</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>rate<sp/>will<sp/>also<sp/>modify<sp/>timebase-&gt;virt_base.<sp/><sp/>We<sp/>don&apos;t<sp/>want<sp/>catchup</highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>to<sp/>stop<sp/>short:</highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="midifns_8h_1a3f787491db5dbc75c21b27d54e9ebae6" kindref="member">time_type</ref><sp/>target_time<sp/>=<sp/>timebase-&gt;<ref refid="structtimebase__struct_1a35b158b60735ca665974f52b48b761f4" kindref="member">virt_base</ref>;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>remember<sp/>timebase<sp/>here<sp/>because<sp/>it&apos;s<sp/>possible<sp/>that<sp/>a<sp/>call<sp/>will<sp/>do</highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>a<sp/>timebase_use()<sp/>and<sp/>change<sp/>it:</highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="structtimebase__struct" kindref="compound">timebase_type</ref><sp/>my_base<sp/>=<sp/><ref refid="moxc_8c_1ab19ffac9ae6cc0109f089a377dfd7fa1" kindref="member">timebase</ref>;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(my_base-&gt;<ref refid="structtimebase__struct_1a5f145edb534454276ec7076d3d9ece31" kindref="member">heap_size</ref><sp/>!=<sp/>0<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(my_base-&gt;<ref refid="structtimebase__struct_1afce39c5827a70c2de6249ca2d473539f" kindref="member">heap</ref>[1]-&gt;<ref refid="structcall_1a0f49d493b3e8902b0879fe1c280b408a" kindref="member">u</ref>.<ref refid="structcall_1a50f800b41e602b0ba7ff1052e4ad6a92" kindref="member">e</ref>.time<sp/>&lt;<sp/>target_time))<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>eventtime<sp/>is<sp/>the<sp/>real<sp/>time<sp/>at<sp/>which<sp/>something<sp/>was<sp/>scheduled<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="moxc_8c_1ab21b8a451636325431b51f29601ff426" kindref="member">eventtime</ref><sp/>=<sp/>(my_base-&gt;<ref refid="structtimebase__struct_1a8fcec62ba28a693e4b2629d330eaf56e" kindref="member">next_time</ref>)<sp/>&gt;&gt;<sp/>8;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>call<sp/>=<sp/><ref refid="timebase_8c_1ae919190e330c56cd3d910da716c03b92" kindref="member">remove_call</ref>(my_base);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="moxc_8c_1ac473afd8b92b443dca44674fa889f697" kindref="member">virttime</ref><sp/>=<sp/>call-&gt;<ref refid="structcall_1a0f49d493b3e8902b0879fe1c280b408a" kindref="member">u</ref>.<ref refid="structcall_1a50f800b41e602b0ba7ff1052e4ad6a92" kindref="member">e</ref>.time;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*(call-&gt;<ref refid="structcall_1a0f49d493b3e8902b0879fe1c280b408a" kindref="member">u</ref>.<ref refid="structcall_1a50f800b41e602b0ba7ff1052e4ad6a92" kindref="member">e</ref>.routine))(<ref refid="timebase_8h_1aea137b67f1785c99e4a8e88722054333" kindref="member">CALLARGS</ref>(call));</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="timebase_8h_1a7aa65d3890d3ad179f4db751c535d78a" kindref="member">call_free</ref>(call);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>now<sp/>that<sp/>we&apos;ve<sp/>possibly<sp/>pulled<sp/>events<sp/>out<sp/>of<sp/>the<sp/>timebase,<sp/>adjust</highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>position<sp/>in<sp/>the<sp/>timebase<sp/>queue<sp/>(and<sp/>possibly<sp/>remove<sp/>it).</highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="timebase_8c_1a2ebbe8b5122ba39241aba5ab3abe960a" kindref="member">remove_base</ref>(my_base);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="timebase_8c_1a187d243c612d95fa71ab39b81477ba78" kindref="member">insert_base</ref>(my_base);</highlight></codeline>
<codeline lineno="162"><highlight class="normal">}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="comment">/****************************************************************************</highlight></codeline>
<codeline lineno="167"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cause</highlight></codeline>
<codeline lineno="168"><highlight class="comment">*<sp/>Inputs:</highlight></codeline>
<codeline lineno="169"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>delay_type<sp/>(long)<sp/>delay:<sp/>time<sp/>before<sp/>this<sp/>call<sp/>should<sp/>occur</highlight></codeline>
<codeline lineno="170"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>(*routine)():<sp/>routine<sp/>that<sp/>implements<sp/>the<sp/>call</highlight></codeline>
<codeline lineno="171"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>p1<sp/>through<sp/>p8:<sp/>parameters<sp/>to<sp/>pass<sp/>to<sp/>routine</highlight></codeline>
<codeline lineno="172"><highlight class="comment">*<sp/>Effect:<sp/></highlight></codeline>
<codeline lineno="173"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>builds<sp/>a<sp/>call<sp/>and<sp/>puts<sp/>it<sp/>in<sp/>pending<sp/>queue<sp/>for<sp/>later<sp/>scheduling</highlight></codeline>
<codeline lineno="174"><highlight class="comment">****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DOTS_FOR_ARGS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177" refid="moxc_8c_1a667f7390a8435b47e027ae9ea2455cb9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="moxc_8c_1a667f7390a8435b47e027ae9ea2455cb9" kindref="member">cause</ref>(delay,<sp/>routine,<sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>)</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="midifns_8h_1a90bc8a533ac78d3f6e076de78883fb75" kindref="member">delay_type</ref><sp/><sp/>delay;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>(*routine)();</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcall__args__struct" kindref="compound">call_args_node</ref><sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdarg.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="moxc_8c_1a667f7390a8435b47e027ae9ea2455cb9" kindref="member">cause</ref>(<ref refid="midifns_8h_1a90bc8a533ac78d3f6e076de78883fb75" kindref="member">delay_type</ref><sp/>delay,<sp/>...)</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>note:<sp/>the<sp/>routine<sp/>parameter<sp/>is<sp/>not<sp/>checked<sp/>because<sp/>any<sp/>routine<sp/>type<sp/>can</highlight></codeline>
<codeline lineno="186"><highlight class="comment"><sp/><sp/><sp/>be<sp/>passed<sp/>as<sp/>a<sp/>parameter,<sp/>but<sp/>in<sp/>the<sp/>call<sp/>struct<sp/>it&apos;s<sp/>an<sp/>int<sp/>(*)()</highlight></codeline>
<codeline lineno="187"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal">{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="structcall" kindref="compound">call_type</ref><sp/><ref refid="structcall" kindref="compound">call</ref><sp/>=<sp/><ref refid="timebase_8h_1a47f6b8b61feb6f07bf1fe181dcc504d3" kindref="member">call_alloc</ref>();</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DOTS_FOR_ARGS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>va_list<sp/>xp;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!call)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="userio_8c_1aa7fe1fd5a722b3baba97b2fb02fa73a1" kindref="member">gprintf</ref>(<ref refid="cmtio_8c_1a625c9ba637aa53c043a3d8c5ded9a1ff" kindref="member">ERROR</ref>,<sp/></highlight><highlight class="stringliteral">&quot;cause:<sp/>out<sp/>of<sp/>memory\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cext_8h_1a70928ac722fa556b729a98eab5d3e06f" kindref="member">EXIT</ref>(1);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DOTS_FOR_ARGS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>call-&gt;<ref refid="structcall_1a0f49d493b3e8902b0879fe1c280b408a" kindref="member">u</ref>.<ref refid="structcall_1a50f800b41e602b0ba7ff1052e4ad6a92" kindref="member">e</ref>.time<sp/>=<sp/><ref refid="moxc_8c_1ac473afd8b92b443dca44674fa889f697" kindref="member">virttime</ref><sp/>+<sp/>delay;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>call-&gt;<ref refid="structcall_1a0f49d493b3e8902b0879fe1c280b408a" kindref="member">u</ref>.<ref refid="structcall_1a50f800b41e602b0ba7ff1052e4ad6a92" kindref="member">e</ref>.priority<sp/>=<sp/>128;<sp/></highlight><highlight class="comment">/*<sp/>default<sp/>priority<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>va_start(xp,<sp/>delay);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>call-&gt;<ref refid="structcall_1a0f49d493b3e8902b0879fe1c280b408a" kindref="member">u</ref>.<ref refid="structcall_1a50f800b41e602b0ba7ff1052e4ad6a92" kindref="member">e</ref>.routine<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref><sp/>(*)())<sp/>va_arg(xp,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>call-&gt;<ref refid="structcall_1a0f49d493b3e8902b0879fe1c280b408a" kindref="member">u</ref>.<ref refid="structcall_1a50f800b41e602b0ba7ff1052e4ad6a92" kindref="member">e</ref>.p<sp/>=<sp/>va_arg(xp,<sp/><ref refid="structcall__args__struct" kindref="compound">call_args_node</ref>);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>va_end(xp);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>call-&gt;<ref refid="structcall_1a0f49d493b3e8902b0879fe1c280b408a" kindref="member">u</ref>.<ref refid="structcall_1a50f800b41e602b0ba7ff1052e4ad6a92" kindref="member">e</ref>.time<sp/>=<sp/><ref refid="moxc_8c_1ac473afd8b92b443dca44674fa889f697" kindref="member">virttime</ref><sp/>+<sp/>delay;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>call-&gt;<ref refid="structcall_1a0f49d493b3e8902b0879fe1c280b408a" kindref="member">u</ref>.<ref refid="structcall_1a50f800b41e602b0ba7ff1052e4ad6a92" kindref="member">e</ref>.priority<sp/>=<sp/>128;<sp/></highlight><highlight class="comment">/*<sp/>default<sp/>priority<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>call-&gt;<ref refid="structcall_1a0f49d493b3e8902b0879fe1c280b408a" kindref="member">u</ref>.<ref refid="structcall_1a50f800b41e602b0ba7ff1052e4ad6a92" kindref="member">e</ref>.routine<sp/>=<sp/>routine;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>call-&gt;<ref refid="structcall_1a0f49d493b3e8902b0879fe1c280b408a" kindref="member">u</ref>.<ref refid="structcall_1a50f800b41e602b0ba7ff1052e4ad6a92" kindref="member">e</ref>.p<sp/>=<sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SAFEMOXC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(call-&gt;<ref refid="structcall_1a0f49d493b3e8902b0879fe1c280b408a" kindref="member">u</ref>.<ref refid="structcall_1a50f800b41e602b0ba7ff1052e4ad6a92" kindref="member">e</ref>.routine<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="userio_8c_1aa7fe1fd5a722b3baba97b2fb02fa73a1" kindref="member">gprintf</ref>(<ref refid="cmtio_8c_1a625c9ba637aa53c043a3d8c5ded9a1ff" kindref="member">ERROR</ref>,</highlight><highlight class="stringliteral">&quot;cause<sp/>called<sp/>with<sp/>NULL<sp/>routine\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cext_8h_1a70928ac722fa556b729a98eab5d3e06f" kindref="member">EXIT</ref>(1);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DOS<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IBM<sp/>allows<sp/>odd<sp/>addresses<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(__APPLE__<sp/>!=<sp/>1<sp/>||<sp/>__i386__<sp/>!=<sp/>1)<sp/></highlight><highlight class="comment">/*<sp/>Intel<sp/>Mac<sp/>allows<sp/>odd<sp/>addresses<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>call-&gt;<ref refid="structcall_1a0f49d493b3e8902b0879fe1c280b408a" kindref="member">u</ref>.<ref refid="structcall_1a50f800b41e602b0ba7ff1052e4ad6a92" kindref="member">e</ref>.routine)<sp/>&amp;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="userio_8c_1aa7fe1fd5a722b3baba97b2fb02fa73a1" kindref="member">gprintf</ref>(<ref refid="cmtio_8c_1a625c9ba637aa53c043a3d8c5ded9a1ff" kindref="member">ERROR</ref>,<sp/></highlight><highlight class="stringliteral">&quot;cause<sp/>called<sp/>with<sp/>bad<sp/>routine<sp/>address:<sp/>0x%lx\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>call-&gt;<ref refid="structcall_1a0f49d493b3e8902b0879fe1c280b408a" kindref="member">u</ref>.<ref refid="structcall_1a50f800b41e602b0ba7ff1052e4ad6a92" kindref="member">e</ref>.routine);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GCC_MODEL_CPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GCC_MODEL_CPU<sp/>&quot;GCC_MODEL_CPU<sp/>is<sp/>undefined<sp/>for<sp/>this<sp/>compilation&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="userio_8c_1aa7fe1fd5a722b3baba97b2fb02fa73a1" kindref="member">gprintf</ref>(<ref refid="cmtio_8c_1a625c9ba637aa53c043a3d8c5ded9a1ff" kindref="member">ERROR</ref>,<sp/><ref refid="moxc_8c_1a9d114d03d435a08ae70e733dca096138" kindref="member">GCC_MODEL_CPU</ref>);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cext_8h_1a70928ac722fa556b729a98eab5d3e06f" kindref="member">EXIT</ref>(1);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>put<sp/>call<sp/>in<sp/>default<sp/>queue<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="timebase_8c_1ac9d44fde9ef182e42726626abfc0eeda" kindref="member">callinsert</ref>(timebase,<sp/>call);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="moxc_8c_1ab1c805c7e10455131e6a1d1f00e941ba" kindref="member">moxcdebug</ref>)<sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="userio_8c_1aa7fe1fd5a722b3baba97b2fb02fa73a1" kindref="member">gprintf</ref>(<ref refid="userio_8h_1a74e88acac653562bdfeee426813d9fef" kindref="member">GDEBUG</ref>,</highlight><highlight class="stringliteral">&quot;(cause)<sp/>call<sp/>is<sp/>pending<sp/>on<sp/>timebase<sp/>0x%x:\n&quot;</highlight><highlight class="normal">,<sp/>timebase);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="timebase_8c_1a88e3dc7a4a48706282f688d221795a8b" kindref="member">callshow</ref>(call);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal">}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="comment">/****************************************************************************</highlight></codeline>
<codeline lineno="240"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>causepri</highlight></codeline>
<codeline lineno="241"><highlight class="comment">*<sp/>Inputs:</highlight></codeline>
<codeline lineno="242"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>delay:<sp/>time<sp/>before<sp/>this<sp/>call<sp/>should<sp/>occur</highlight></codeline>
<codeline lineno="243"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>pri:<sp/>priority,<sp/>lowest<sp/>priority<sp/>goes<sp/>first</highlight></codeline>
<codeline lineno="244"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>(*routine)():<sp/>routine<sp/>that<sp/>implements<sp/>the<sp/>call</highlight></codeline>
<codeline lineno="245"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>p1<sp/>through<sp/>p8:<sp/>parameters<sp/>to<sp/>pass<sp/>to<sp/>routine</highlight></codeline>
<codeline lineno="246"><highlight class="comment">*<sp/>Effect:<sp/></highlight></codeline>
<codeline lineno="247"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>builds<sp/>a<sp/>call<sp/>and<sp/>puts<sp/>it<sp/>in<sp/>pending<sp/>queue<sp/>for<sp/>later<sp/>scheduling</highlight></codeline>
<codeline lineno="248"><highlight class="comment">****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DOTS_FOR_ARGS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251" refid="moxc_8c_1acaca1db2e4d549d9fd42caf9cc6b8a40" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="moxc_8c_1acaca1db2e4d549d9fd42caf9cc6b8a40" kindref="member">causepri</ref>(delay,<sp/>pri,<sp/>routine,<sp/>p)</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="midifns_8h_1a90bc8a533ac78d3f6e076de78883fb75" kindref="member">delay_type</ref><sp/><sp/>delay;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pri;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>(*routine)();</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcall__args__struct" kindref="compound">call_args_node</ref><sp/>p;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>already<sp/>included<sp/>stdarg.h<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="moxc_8c_1acaca1db2e4d549d9fd42caf9cc6b8a40" kindref="member">causepri</ref>(<ref refid="midifns_8h_1a90bc8a533ac78d3f6e076de78883fb75" kindref="member">delay_type</ref><sp/>delay,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pri,<sp/>...)</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal">{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="structcall" kindref="compound">call_type</ref><sp/><ref refid="structcall" kindref="compound">call</ref><sp/>=<sp/><ref refid="timebase_8h_1a47f6b8b61feb6f07bf1fe181dcc504d3" kindref="member">call_alloc</ref>();</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DOTS_FOR_ARGS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>va_list<sp/>xp;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!call)<sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="userio_8c_1aa7fe1fd5a722b3baba97b2fb02fa73a1" kindref="member">gprintf</ref>(<ref refid="cmtio_8c_1a625c9ba637aa53c043a3d8c5ded9a1ff" kindref="member">ERROR</ref>,<sp/></highlight><highlight class="stringliteral">&quot;cause:<sp/>out<sp/>of<sp/>memory\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cext_8h_1a70928ac722fa556b729a98eab5d3e06f" kindref="member">EXIT</ref>(1);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DOTS_FOR_ARGS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>call-&gt;<ref refid="structcall_1a0f49d493b3e8902b0879fe1c280b408a" kindref="member">u</ref>.<ref refid="structcall_1a50f800b41e602b0ba7ff1052e4ad6a92" kindref="member">e</ref>.time<sp/>=<sp/><ref refid="moxc_8c_1ac473afd8b92b443dca44674fa889f697" kindref="member">virttime</ref><sp/>+<sp/>delay;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>call-&gt;<ref refid="structcall_1a0f49d493b3e8902b0879fe1c280b408a" kindref="member">u</ref>.<ref refid="structcall_1a50f800b41e602b0ba7ff1052e4ad6a92" kindref="member">e</ref>.priority<sp/>=<sp/>pri;<sp/></highlight><highlight class="comment">/*<sp/>default<sp/>priority<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>va_start(xp,<sp/>pri);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>call-&gt;<ref refid="structcall_1a0f49d493b3e8902b0879fe1c280b408a" kindref="member">u</ref>.<ref refid="structcall_1a50f800b41e602b0ba7ff1052e4ad6a92" kindref="member">e</ref>.routine<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref><sp/>(*)())<sp/>va_arg(xp,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>call-&gt;<ref refid="structcall_1a0f49d493b3e8902b0879fe1c280b408a" kindref="member">u</ref>.<ref refid="structcall_1a50f800b41e602b0ba7ff1052e4ad6a92" kindref="member">e</ref>.p<sp/>=<sp/>va_arg(xp,<sp/><ref refid="structcall__args__struct" kindref="compound">call_args_node</ref>);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>va_end(xp);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>call-&gt;<ref refid="structcall_1a0f49d493b3e8902b0879fe1c280b408a" kindref="member">u</ref>.<ref refid="structcall_1a50f800b41e602b0ba7ff1052e4ad6a92" kindref="member">e</ref>.time<sp/>=<sp/><ref refid="moxc_8c_1ac473afd8b92b443dca44674fa889f697" kindref="member">virttime</ref><sp/>+<sp/>delay;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>call-&gt;<ref refid="structcall_1a0f49d493b3e8902b0879fe1c280b408a" kindref="member">u</ref>.<ref refid="structcall_1a50f800b41e602b0ba7ff1052e4ad6a92" kindref="member">e</ref>.priority<sp/>=<sp/>pri;<sp/></highlight><highlight class="comment">/*<sp/>default<sp/>priority<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>call-&gt;<ref refid="structcall_1a0f49d493b3e8902b0879fe1c280b408a" kindref="member">u</ref>.<ref refid="structcall_1a50f800b41e602b0ba7ff1052e4ad6a92" kindref="member">e</ref>.routine<sp/>=<sp/>routine;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>call-&gt;<ref refid="structcall_1a0f49d493b3e8902b0879fe1c280b408a" kindref="member">u</ref>.<ref refid="structcall_1a50f800b41e602b0ba7ff1052e4ad6a92" kindref="member">e</ref>.p<sp/>=<sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SAFEMOXC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(call-&gt;<ref refid="structcall_1a0f49d493b3e8902b0879fe1c280b408a" kindref="member">u</ref>.<ref refid="structcall_1a50f800b41e602b0ba7ff1052e4ad6a92" kindref="member">e</ref>.routine<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="userio_8c_1aa7fe1fd5a722b3baba97b2fb02fa73a1" kindref="member">gprintf</ref>(<ref refid="cmtio_8c_1a625c9ba637aa53c043a3d8c5ded9a1ff" kindref="member">ERROR</ref>,</highlight><highlight class="stringliteral">&quot;cause<sp/>called<sp/>with<sp/>NULL<sp/>routine\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cext_8h_1a70928ac722fa556b729a98eab5d3e06f" kindref="member">EXIT</ref>(1);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DOS<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IBM<sp/>allows<sp/>odd<sp/>addresses<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(__APPLE__<sp/>!=<sp/>1<sp/>||<sp/>__i386__<sp/>!=<sp/>1)<sp/></highlight><highlight class="comment">/*<sp/>Intel<sp/>Mac<sp/>allows<sp/>odd<sp/>addresses<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>call-&gt;<ref refid="structcall_1a0f49d493b3e8902b0879fe1c280b408a" kindref="member">u</ref>.<ref refid="structcall_1a50f800b41e602b0ba7ff1052e4ad6a92" kindref="member">e</ref>.routine)<sp/>&amp;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="userio_8c_1aa7fe1fd5a722b3baba97b2fb02fa73a1" kindref="member">gprintf</ref>(<ref refid="cmtio_8c_1a625c9ba637aa53c043a3d8c5ded9a1ff" kindref="member">ERROR</ref>,<sp/></highlight><highlight class="stringliteral">&quot;causepri<sp/>called<sp/>with<sp/>bad<sp/>routine<sp/>address:<sp/>0x%lx\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>call-&gt;<ref refid="structcall_1a0f49d493b3e8902b0879fe1c280b408a" kindref="member">u</ref>.<ref refid="structcall_1a50f800b41e602b0ba7ff1052e4ad6a92" kindref="member">e</ref>.routine);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cext_8h_1a70928ac722fa556b729a98eab5d3e06f" kindref="member">EXIT</ref>(1);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>put<sp/>call<sp/>in<sp/>default<sp/>queue<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="timebase_8c_1ac9d44fde9ef182e42726626abfc0eeda" kindref="member">callinsert</ref>(timebase,<sp/>call);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="moxc_8c_1ab1c805c7e10455131e6a1d1f00e941ba" kindref="member">moxcdebug</ref>)<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="userio_8c_1aa7fe1fd5a722b3baba97b2fb02fa73a1" kindref="member">gprintf</ref>(<ref refid="userio_8h_1a74e88acac653562bdfeee426813d9fef" kindref="member">GDEBUG</ref>,</highlight><highlight class="stringliteral">&quot;(cause)<sp/>call<sp/>is<sp/>pending:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="timebase_8c_1a88e3dc7a4a48706282f688d221795a8b" kindref="member">callshow</ref>(call);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal">}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="comment">/****************************************************************************</highlight></codeline>
<codeline lineno="308"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>callrun</highlight></codeline>
<codeline lineno="309"><highlight class="comment">*<sp/>Inputs:</highlight></codeline>
<codeline lineno="310"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>call_type<sp/>call:<sp/>the<sp/>call<sp/>to<sp/>execute</highlight></codeline>
<codeline lineno="311"><highlight class="comment">*<sp/>Effect:<sp/></highlight></codeline>
<codeline lineno="312"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>executes<sp/>the<sp/>previously<sp/>scheduled<sp/>call<sp/>call<sp/>and<sp/>deallocates<sp/>it</highlight></codeline>
<codeline lineno="313"><highlight class="comment">****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315" refid="moxc_8c_1aeb221a5a25bf25e3501386149119851c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="moxc_8c_1aeb221a5a25bf25e3501386149119851c" kindref="member">callrun</ref>()</highlight></codeline>
<codeline lineno="316"><highlight class="normal">{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcall" kindref="compound">call_type</ref><sp/><ref refid="structcall" kindref="compound">call</ref>;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="moxc_8c_1ab1c805c7e10455131e6a1d1f00e941ba" kindref="member">moxcdebug</ref>)<sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="userio_8c_1aa7fe1fd5a722b3baba97b2fb02fa73a1" kindref="member">gprintf</ref>(<ref refid="userio_8h_1a74e88acac653562bdfeee426813d9fef" kindref="member">GDEBUG</ref>,</highlight><highlight class="stringliteral">&quot;(callrun)<sp/>running<sp/>a<sp/>call:<sp/>\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>remove<sp/>from<sp/>head<sp/>of<sp/>queue<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!<ref refid="timebase_8c_1a0a255e110445b85f5eac1a90cd8797df" kindref="member">timebase_queue</ref>)<sp/><ref refid="userio_8c_1aa7fe1fd5a722b3baba97b2fb02fa73a1" kindref="member">gprintf</ref>(<ref refid="userio_8h_1abf9c248762203aeb01092b253484d6e0" kindref="member">TRANS</ref>,<sp/></highlight><highlight class="stringliteral">&quot;callrun<sp/>fatal<sp/>error\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>timebase<sp/>=<sp/><ref refid="timebase_8c_1a0a255e110445b85f5eac1a90cd8797df" kindref="member">timebase_queue</ref>;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="timebase_8c_1a0a255e110445b85f5eac1a90cd8797df" kindref="member">timebase_queue</ref><sp/>=<sp/>timebase-&gt;<ref refid="structtimebase__struct_1acc66c402d59aa01f42cfa2169ea2af16" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="moxc_8c_1ac3e1795766a80ec63b157951b4b9a7d4" kindref="member">debug</ref>)<sp/><ref refid="userio_8c_1aa7fe1fd5a722b3baba97b2fb02fa73a1" kindref="member">gprintf</ref>(<ref refid="userio_8h_1abf9c248762203aeb01092b253484d6e0" kindref="member">TRANS</ref>,<sp/></highlight><highlight class="stringliteral">&quot;callrun<sp/>time<sp/>%ld\n&quot;</highlight><highlight class="normal">,<sp/>timebase-&gt;<ref refid="structtimebase__struct_1a8fcec62ba28a693e4b2629d330eaf56e" kindref="member">next_time</ref>);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="moxc_8c_1ab21b8a451636325431b51f29601ff426" kindref="member">eventtime</ref><sp/>=<sp/>(timebase-&gt;<ref refid="structtimebase__struct_1a8fcec62ba28a693e4b2629d330eaf56e" kindref="member">next_time</ref>)<sp/>&gt;&gt;<sp/>8;<sp/></highlight><highlight class="comment">/*<sp/>real<sp/>time<sp/>of<sp/>the<sp/>call<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>remove<sp/>first<sp/>call<sp/>from<sp/>timebase<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>call<sp/>=<sp/><ref refid="timebase_8c_1ae919190e330c56cd3d910da716c03b92" kindref="member">remove_call</ref>(timebase);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="moxc_8c_1ac3e1795766a80ec63b157951b4b9a7d4" kindref="member">debug</ref>)<sp/><ref refid="userio_8c_1aa7fe1fd5a722b3baba97b2fb02fa73a1" kindref="member">gprintf</ref>(<ref refid="userio_8h_1abf9c248762203aeb01092b253484d6e0" kindref="member">TRANS</ref>,<sp/></highlight><highlight class="stringliteral">&quot;callrun<sp/>call<sp/>%lx\n&quot;</highlight><highlight class="normal">,<sp/>(<ref refid="_s_t_types_8h_1a718b4eb2652c286f4d42dc18a8e71a1a" kindref="member">ulong</ref>)call);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="timebase_8c_1a187d243c612d95fa71ab39b81477ba78" kindref="member">insert_base</ref>(timebase);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="moxc_8c_1ac473afd8b92b443dca44674fa889f697" kindref="member">virttime</ref><sp/>=<sp/>call-&gt;u.e.time;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>virtual<sp/>time<sp/>of<sp/>the<sp/>call<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="moxc_8c_1ab1c805c7e10455131e6a1d1f00e941ba" kindref="member">moxcdebug</ref>)<sp/><ref refid="timebase_8c_1a88e3dc7a4a48706282f688d221795a8b" kindref="member">callshow</ref>(call);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>(*(call-&gt;u.e.routine))(<ref refid="timebase_8h_1aea137b67f1785c99e4a8e88722054333" kindref="member">CALLARGS</ref>(call));</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="timebase_8h_1a7aa65d3890d3ad179f4db751c535d78a" kindref="member">call_free</ref>(call);</highlight></codeline>
<codeline lineno="337"><highlight class="normal">}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="comment">/****************************************************************************</highlight></codeline>
<codeline lineno="340"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_restuntil</highlight></codeline>
<codeline lineno="341"><highlight class="comment">*<sp/>Inputs:</highlight></codeline>
<codeline lineno="342"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>time:<sp/>call<sp/>time<sp/>to<sp/>rest<sp/>until</highlight></codeline>
<codeline lineno="343"><highlight class="comment">*<sp/>Effect:<sp/></highlight></codeline>
<codeline lineno="344"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Waits<sp/>until<sp/>the<sp/>specified<sp/>time<sp/>has<sp/>been<sp/>reached<sp/>(absolute<sp/>time).</highlight></codeline>
<codeline lineno="345"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Other<sp/>&quot;caused&quot;<sp/>calls<sp/>will<sp/>take<sp/>place<sp/>during<sp/>the<sp/>rest<sp/>provided</highlight></codeline>
<codeline lineno="346"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>this<sp/>routine<sp/>is<sp/>called<sp/>from<sp/>&quot;mainscore&quot;<sp/>(see<sp/>m_rest<sp/>description).</highlight></codeline>
<codeline lineno="347"><highlight class="comment">****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348" refid="moxc_8h_1a397e9d20c5b5de16221a5ec7019c9ce0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="moxc_8c_1a397e9d20c5b5de16221a5ec7019c9ce0" kindref="member">m_restuntil</ref>(<ref refid="namespacepyportmidi_1_1midi_1ad2426758f88d23d7208984d5c99ec050" kindref="member">time</ref>)</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><ref refid="midifns_8h_1a3f787491db5dbc75c21b27d54e9ebae6" kindref="member">time_type</ref><sp/><ref refid="namespacepyportmidi_1_1midi_1ad2426758f88d23d7208984d5c99ec050" kindref="member">time</ref>;</highlight></codeline>
<codeline lineno="350"><highlight class="normal">{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>time<sp/>=<sp/><ref refid="timebase_8h_1a6c8b5ab2c3f84eba5805cfa1c404a5d5" kindref="member">virt_to_real</ref>(timebase,<sp/>time);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(time<sp/>&gt;<sp/><ref refid="midifns_8c_1acaa21a4ae35f86d6a7bddf9a8f8228b3" kindref="member">gettime</ref>())<sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="moxc_8c_1ab06fc1a6181085c797a39e253d0db9fb" kindref="member">moxcwait</ref>(time);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal">}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="comment">/****************************************************************************</highlight></codeline>
<codeline lineno="359"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_rest</highlight></codeline>
<codeline lineno="360"><highlight class="comment">*<sp/>Inputs:</highlight></codeline>
<codeline lineno="361"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>time:<sp/>Amount<sp/>of<sp/>time<sp/>to<sp/>rest</highlight></codeline>
<codeline lineno="362"><highlight class="comment">*<sp/>Effect:<sp/></highlight></codeline>
<codeline lineno="363"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Waits<sp/>until<sp/>the<sp/>amount<sp/>of<sp/>time<sp/>specified<sp/>has<sp/>lapsed</highlight></codeline>
<codeline lineno="364"><highlight class="comment">*<sp/>Assumes:</highlight></codeline>
<codeline lineno="365"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Must<sp/>not<sp/>be<sp/>called<sp/>from<sp/>a<sp/>&quot;caused&quot;<sp/>routine.<sp/><sp/>Must<sp/>only<sp/>be<sp/>called</highlight></codeline>
<codeline lineno="366"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>from<sp/>&quot;mainscore&quot;<sp/>or<sp/>a<sp/>routine<sp/>called<sp/>directly<sp/>or<sp/>indirectly<sp/>from</highlight></codeline>
<codeline lineno="367"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;mainscore&quot;<sp/>without<sp/>using<sp/>&quot;cause&quot;.</highlight></codeline>
<codeline lineno="368"><highlight class="comment">****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370" refid="moxc_8h_1ad21bfc14386797716f7d3e316f5df5b4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="moxc_8c_1ad21bfc14386797716f7d3e316f5df5b4" kindref="member">m_rest</ref>(<ref refid="namespacepyportmidi_1_1midi_1ad2426758f88d23d7208984d5c99ec050" kindref="member">time</ref>)</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><ref refid="midifns_8h_1a3f787491db5dbc75c21b27d54e9ebae6" kindref="member">time_type</ref><sp/><ref refid="namespacepyportmidi_1_1midi_1ad2426758f88d23d7208984d5c99ec050" kindref="member">time</ref>;</highlight></codeline>
<codeline lineno="372"><highlight class="normal">{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="moxc_8c_1a397e9d20c5b5de16221a5ec7019c9ce0" kindref="member">m_restuntil</ref>(time<sp/>+<sp/><ref refid="timebase_8h_1af5c38a56e37b43d2582aa0f1a3148e84" kindref="member">real_to_virt</ref>(timebase,<sp/><ref refid="midifns_8c_1acaa21a4ae35f86d6a7bddf9a8f8228b3" kindref="member">gettime</ref>()));<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="374"><highlight class="normal">}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight><highlight class="comment">/****************************************************************************</highlight></codeline>
<codeline lineno="377"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>moxcinit</highlight></codeline>
<codeline lineno="378"><highlight class="comment">*<sp/>Inputs:</highlight></codeline>
<codeline lineno="379"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>argc:<sp/>number<sp/>of<sp/>command<sp/>line<sp/>arguments</highlight></codeline>
<codeline lineno="380"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>char<sp/>*<sp/>argv:<sp/>command<sp/>line<sp/>argument<sp/>array</highlight></codeline>
<codeline lineno="381"><highlight class="comment">*<sp/>Effect:<sp/>initializes<sp/>moxc<sp/>system</highlight></codeline>
<codeline lineno="382"><highlight class="comment">****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384" refid="moxc_8c_1acd226f19dc3476faf2a260c998c8b5a1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="moxc_8c_1acd226f19dc3476faf2a260c998c8b5a1" kindref="member">moxcinit</ref>(<ref refid="cmdline_8c_1aaffeb1bf2056ea44af5b5d0ee4d6ff07" kindref="member">argc</ref>,<sp/><ref refid="cmdline_8c_1ad407d5ba91709bd9b092003858600723" kindref="member">argv</ref>)</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref><sp/><ref refid="cmdline_8c_1aaffeb1bf2056ea44af5b5d0ee4d6ff07" kindref="member">argc</ref>;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/><ref refid="cmdline_8c_1ad407d5ba91709bd9b092003858600723" kindref="member">argv</ref>[];</highlight></codeline>
<codeline lineno="387"><highlight class="normal">{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libnyquist_2nyquist_2cmt_2mem_8c_1ae97acb5b2b0a394fd9600d9743d74f45" kindref="member">meminit</ref>();</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="userio_8c_1a78297812b6a85654a3eccf2594420f10" kindref="member">io_init</ref>();</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMIGA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>pub_port_signal<sp/>=<sp/>AllocSignal(-1L);</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/>pub_port.mp_Node.ln_Type<sp/>=<sp/>NT_MSGPORT;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>pub_port.mp_SigBit<sp/>=<sp/>pub_port_signal;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/>pub_port.mp_SigTask<sp/>=<sp/>FindTask(0L);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>pub_port.mp_Flags<sp/>=<sp/>PA_SIGNAL;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/>pub_port.mp_Node.ln_Name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;CMTcmdport&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>pub_port.mp_MsgList.lh_Head<sp/>=</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Node<sp/>*)&amp;pub_port.mp_MsgList.lh_Tail;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>pub_port.mp_MsgList.lh_TailPred<sp/>=</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>Node<sp/>*)&amp;pub_port.mp_MsgList.lh_Head;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>event_mask<sp/>|=<sp/>(1L<sp/>&lt;&lt;<sp/>pub_port_signal);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>AddPort(&amp;pub_port);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cleanup_8c_1ae97f4c9df0cc462846d117916e0fb9a7" kindref="member">cu_register</ref>((<ref refid="cleanup_8h_1aeae58fae8a0ea3a6c9accf4c2f48cfb5" kindref="member">cu_fn_type</ref>)<sp/><ref refid="moxc_8c_1a6a50d547911a748a6368ee293c9a7912" kindref="member">moxcterm</ref>,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cmdline_8c_1a175699e85d40d019366d25ce1567ca26" kindref="member">cl_syntax</ref>(<ref refid="midifns_8h_1a37d20007db1239faeba62dbf0d4415e0" kindref="member">midifns_syntax</ref>);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cmdline_8c_1a175699e85d40d019366d25ce1567ca26" kindref="member">cl_syntax</ref>(</highlight><highlight class="stringliteral">&quot;debug&lt;s&gt;Enable<sp/>verbose<sp/>debugging;\</highlight></codeline>
<codeline lineno="407"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>moxc&lt;s&gt;Enable<sp/>moxc<sp/>debug<sp/>mode;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="cmdline_8c_1a175699e85d40d019366d25ce1567ca26" kindref="member">cl_syntax</ref>(<ref refid="moxc_8c_1a293be463c12224cab1e365879e589167" kindref="member">app_syntax</ref>);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="cmdline_8c_1a1e728baff89a02e8b0ba8e899c08b6dd" kindref="member">cl_init</ref>(argv,<sp/>argc))<sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>make<sp/>sure<sp/>user<sp/>gets<sp/>to<sp/>read<sp/>the<sp/>error<sp/>message(s):<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="userio_8c_1aa7fe1fd5a722b3baba97b2fb02fa73a1" kindref="member">gprintf</ref>(<ref refid="userio_8h_1abf9c248762203aeb01092b253484d6e0" kindref="member">TRANS</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Type<sp/>anything<sp/>to<sp/>exit...&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/><sp/>DOS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="userio_8c_1a83a0f6eeb6de6f1d5c26ee9e0c11aac3" kindref="member">wait_ascii</ref>();</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="userio_8c_1aebaf796247203ade281e176f9f5b3cb4" kindref="member">ggetchar</ref>();</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="moxc_8c_1ac3e1795766a80ec63b157951b4b9a7d4" kindref="member">debug</ref><sp/>=<sp/><ref refid="cmdline_8c_1a04806515a42e3a0344885f6917793f88" kindref="member">cl_switch</ref>(</highlight><highlight class="stringliteral">&quot;debug&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="moxc_8c_1ab1c805c7e10455131e6a1d1f00e941ba" kindref="member">moxcdebug</ref><sp/>=<sp/><ref refid="cmdline_8c_1a04806515a42e3a0344885f6917793f88" kindref="member">cl_switch</ref>(</highlight><highlight class="stringliteral">&quot;moxc&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>timebase<sp/>=<sp/>default_base<sp/>=<sp/><ref refid="timebase_8c_1ae38d62a98f407019296365494b7b1bdb" kindref="member">timebase_create</ref>(100);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>default_base-&gt;<ref refid="structtimebase__struct_1a0b7fdc52e2a68a22aef8b948a207fd49" kindref="member">rate</ref><sp/>=<sp/>2560L;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="moxc_8c_1ab21b8a451636325431b51f29601ff426" kindref="member">eventtime</ref><sp/>=<sp/>0L;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="moxc_8c_1add069c2640c5ec0f030831212cf1fd6f" kindref="member">next_wakeup</ref><sp/>=<sp/><ref refid="midifns_8h_1ae583bedb01edb77ee6ceb98e847969cb" kindref="member">MAXTIME</ref>;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="midifns_8c_1a566057b7887b3d7c5638302815e7c6ee" kindref="member">musicinit</ref>();</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>POSICIONADOR_3D</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>ptInit();</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="moxc_8c_1ad87aed56dbb3574e571ec88c5a814dd4" kindref="member">moxcdone</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="433"><highlight class="normal">}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="comment">/****************************************************************************</highlight></codeline>
<codeline lineno="437"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>moxcwait</highlight></codeline>
<codeline lineno="438"><highlight class="comment">*<sp/>Input:</highlight></codeline>
<codeline lineno="439"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>-1<sp/>=&gt;<sp/>wait<sp/>for<sp/>next<sp/>keyboard<sp/>or<sp/>midi<sp/>event<sp/>or<sp/>queued<sp/>event</highlight></codeline>
<codeline lineno="440"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/>=&gt;<sp/>don&apos;t<sp/>wait</highlight></codeline>
<codeline lineno="441"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>=&gt;<sp/>wait<sp/>up<sp/>to<sp/>T<sp/>for<sp/>next<sp/>keyboard<sp/>or<sp/>midi<sp/>event<sp/>or<sp/>queued<sp/>event</highlight></codeline>
<codeline lineno="442"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(this<sp/>is<sp/>used<sp/>by<sp/>m_restuntil)</highlight></codeline>
<codeline lineno="443"><highlight class="comment">*<sp/>Assume:<sp/>there<sp/>is<sp/>work<sp/>to<sp/>do<sp/>(npending<sp/>&gt;<sp/>0<sp/>||<sp/>evqueue)<sp/>??</highlight></codeline>
<codeline lineno="444"><highlight class="comment">*<sp/>Effect:<sp/>dispatch<sp/>on<sp/>user<sp/>inputs,<sp/>cause<sp/>calls</highlight></codeline>
<codeline lineno="445"><highlight class="comment">****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447" refid="moxc_8h_1ab06fc1a6181085c797a39e253d0db9fb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="moxc_8c_1ab06fc1a6181085c797a39e253d0db9fb" kindref="member">moxcwait</ref>(dateoftimeout)</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><ref refid="midifns_8h_1a3f787491db5dbc75c21b27d54e9ebae6" kindref="member">time_type</ref><sp/>dateoftimeout;</highlight></codeline>
<codeline lineno="449"><highlight class="normal">{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="midifns_8h_1a3f787491db5dbc75c21b27d54e9ebae6" kindref="member">time_type</ref><sp/>maxtime<sp/>=<sp/>dateoftimeout;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="timebase_8c_1a0a255e110445b85f5eac1a90cd8797df" kindref="member">timebase_queue</ref>)<sp/>{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="timebase_8c_1a0a255e110445b85f5eac1a90cd8797df" kindref="member">timebase_queue</ref>-&gt;<ref refid="structtimebase__struct_1a8fcec62ba28a693e4b2629d330eaf56e" kindref="member">next_time</ref><sp/>&gt;&gt;<sp/>8)<sp/>&lt;<sp/>maxtime)<sp/></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxtime<sp/>=<sp/>(<ref refid="timebase_8c_1a0a255e110445b85f5eac1a90cd8797df" kindref="member">timebase_queue</ref>-&gt;<ref refid="structtimebase__struct_1a8fcec62ba28a693e4b2629d330eaf56e" kindref="member">next_time</ref>)<sp/>&gt;&gt;<sp/>8;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="midifns_8c_1ac0b072b1597a1b45d536ae1671bcd8ce" kindref="member">eventwait</ref>(maxtime);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="moxc_8c_1ae754a0f850e267dd2739e1ee8d0f031c" kindref="member">decode</ref>();</highlight></codeline>
<codeline lineno="458"><highlight class="normal">}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight><highlight class="comment">/****************************************************************************</highlight></codeline>
<codeline lineno="462"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decode</highlight></codeline>
<codeline lineno="463"><highlight class="comment">*<sp/>Effect:<sp/>dispatch<sp/>on<sp/>user<sp/>inputs,<sp/>cause<sp/>calls</highlight></codeline>
<codeline lineno="464"><highlight class="comment">****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466" refid="moxc_8c_1ae754a0f850e267dd2739e1ee8d0f031c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="moxc_8c_1ae754a0f850e267dd2739e1ee8d0f031c" kindref="member">decode</ref>()</highlight></codeline>
<codeline lineno="467"><highlight class="normal">{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>It<sp/>is<sp/>important<sp/>that<sp/>midi_data<sp/>is<sp/>on<sp/>a<sp/>word<sp/>boundary<sp/>because<sp/>we</highlight></codeline>
<codeline lineno="469"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copy<sp/>to<sp/>it<sp/>by<sp/>doing<sp/>a<sp/>word<sp/>transfer.</highlight></codeline>
<codeline lineno="470"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/>byte<sp/>midi_data[4];</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="midifns_8h_1a3f787491db5dbc75c21b27d54e9ebae6" kindref="member">time_type</ref><sp/>now;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/>byte<sp/>code;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMIGA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">cmd_msg<sp/>*<ref refid="sndfile__play_8m_1adfc5ba7e22f5e4a6221c12a70503bef3" kindref="member">cmd</ref>;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>now<sp/>=<sp/><ref refid="midifns_8c_1acaa21a4ae35f86d6a7bddf9a8f8228b3" kindref="member">gettime</ref>();</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>timebase<sp/>=<sp/><ref refid="moxc_8c_1afd87ad47b5a7e451a582be3a8b9451a7" kindref="member">default_base</ref>;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="moxc_8c_1ab21b8a451636325431b51f29601ff426" kindref="member">eventtime</ref><sp/>=<sp/>now;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="moxc_8c_1ac473afd8b92b443dca44674fa889f697" kindref="member">virttime</ref><sp/>=<sp/>0L;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/>gprintf(GDEBUG,<sp/>&quot;decode<sp/>at<sp/>time<sp/>%ld\n&quot;,<sp/>now);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight><highlight class="comment">/**********************************************</highlight></codeline>
<codeline lineno="487"><highlight class="comment">*<sp/>poll<sp/>for<sp/>and<sp/>decode<sp/>midi<sp/>keyboard<sp/>input<sp/></highlight></codeline>
<codeline lineno="488"><highlight class="comment">***********************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="midifns_8c_1a83d792175b33ad59d79d16ce8f25c4da" kindref="member">getbuf</ref>(<ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>,<sp/>midi_data))<sp/>{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>only<sp/>divide<sp/>if<sp/>necessary,<sp/>divides<sp/>take<sp/>100us<sp/>on<sp/>8MHz<sp/>68000:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="moxc_8c_1ac473afd8b92b443dca44674fa889f697" kindref="member">virttime</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="moxc_8c_1ac473afd8b92b443dca44674fa889f697" kindref="member">virttime</ref><sp/>=<sp/><ref refid="timebase_8h_1af5c38a56e37b43d2582aa0f1a3148e84" kindref="member">real_to_virt</ref>(default_base,<sp/>now);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>short-circuit<sp/>midi<sp/>decoding<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="moxc_8c_1a957be7d4a1b738f98e7ff37e5136007c" kindref="member">mididecode</ref>)<sp/>{</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="moxc_8h_1a8665a6cd5dea08771a34510c8e4ac013" kindref="member">midievent</ref>(midi_data);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>code<sp/>=<sp/>midi_data[0]<sp/>&amp;<sp/><ref refid="libnyquist_2nyquist_2cmt_2midicode_8h_1ad0a97b26a50383f240ed1863bd6c966b" kindref="member">MIDI_CODE_MASK</ref>;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(code<sp/>==<sp/><ref refid="libnyquist_2nyquist_2cmt_2midicode_8h_1a84715565b6746f4859214d524b68e523" kindref="member">MIDI_ON_NOTE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(midi_data[2]<sp/>==<sp/>0)<sp/>{<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>velocity<sp/>0<sp/>-&gt;<sp/>note<sp/>off<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="moxc_8h_1ae4a53a20f87f1efe1f6c7bfafd292034" kindref="member">keyup</ref>(1+(midi_data[0]<sp/>&amp;<sp/><ref refid="libnyquist_2nyquist_2cmt_2midicode_8h_1a8e374cd09feb55c6ee27b31727a3c4ab" kindref="member">MIDI_CHN_MASK</ref>),<sp/>midi_data[1]);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="moxc_8h_1af506601c85b6a8aeb7c960c8851c4ac7" kindref="member">keydown</ref>((midi_data[0]<sp/>&amp;<sp/><ref refid="libnyquist_2nyquist_2cmt_2midicode_8h_1a8e374cd09feb55c6ee27b31727a3c4ab" kindref="member">MIDI_CHN_MASK</ref>)+1,</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midi_data[1],<sp/>midi_data[2]);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(code<sp/>==<sp/><ref refid="libnyquist_2nyquist_2cmt_2midicode_8h_1acfcd8fbc10b91d7bf9ac128a19785de7" kindref="member">MIDI_OFF_NOTE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="moxc_8h_1ae4a53a20f87f1efe1f6c7bfafd292034" kindref="member">keyup</ref>((midi_data[0]<sp/>&amp;<sp/><ref refid="libnyquist_2nyquist_2cmt_2midicode_8h_1a8e374cd09feb55c6ee27b31727a3c4ab" kindref="member">MIDI_CHN_MASK</ref>)+1,<sp/>midi_data[1]);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(code<sp/>==<sp/><ref refid="libnyquist_2nyquist_2cmt_2midicode_8h_1a3bbe71db78d44f6f45cdd778fc86ffbb" kindref="member">MIDI_TOUCH</ref>)<sp/>{</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="moxc_8h_1a2478f5f4bdfa44d016b49c985495e0a9" kindref="member">touchchange</ref>((midi_data[0]<sp/>&amp;<sp/><ref refid="libnyquist_2nyquist_2cmt_2midicode_8h_1a8e374cd09feb55c6ee27b31727a3c4ab" kindref="member">MIDI_CHN_MASK</ref>)+1,midi_data[1]);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(code<sp/>==<sp/><ref refid="libnyquist_2nyquist_2cmt_2midicode_8h_1a0585fa061162b26f17693f0add57db6c" kindref="member">MIDI_BEND</ref>)<sp/>{</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="moxc_8h_1af8b5e84a3f2bfdce06dd54a5f2b9e40f" kindref="member">bendchange</ref>((midi_data[0]<sp/>&amp;<sp/><ref refid="libnyquist_2nyquist_2cmt_2midicode_8h_1a8e374cd09feb55c6ee27b31727a3c4ab" kindref="member">MIDI_CHN_MASK</ref>)+1,</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midi_data[1]<sp/>+<sp/>(midi_data[2]<sp/>&lt;&lt;<sp/>7));</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(code<sp/>==<sp/><ref refid="libnyquist_2nyquist_2cmt_2midicode_8h_1a64b08db61b463b1769d8f18fae1ea8e4" kindref="member">MIDI_CTRL</ref><sp/>&amp;&amp;<sp/>midi_data[1]<sp/>==<sp/><ref refid="midifns_8h_1abb9a1904668419d9e83be84a8461d0b5" kindref="member">SUSTAIN</ref>)<sp/>{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(midi_data[2]<sp/>==<sp/>0)<sp/><ref refid="moxc_8h_1a5afda51dd1d8782c17df86bbf7b0a6c8" kindref="member">pedup</ref>((midi_data[0]<sp/>&amp;<sp/><ref refid="libnyquist_2nyquist_2cmt_2midicode_8h_1a8e374cd09feb55c6ee27b31727a3c4ab" kindref="member">MIDI_CHN_MASK</ref>)<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><ref refid="moxc_8h_1ab3260959473124b133e3d7ae6eaf4031" kindref="member">peddown</ref>((midi_data[0]<sp/>&amp;<sp/>MIDI_CHN_MASK)<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(code<sp/>==<sp/><ref refid="libnyquist_2nyquist_2cmt_2midicode_8h_1a64b08db61b463b1769d8f18fae1ea8e4" kindref="member">MIDI_CTRL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="moxc_8h_1a490986a83450c78dc957b8db0d23eb20" kindref="member">ctrlchange</ref>((midi_data[0]<sp/>&amp;<sp/><ref refid="libnyquist_2nyquist_2cmt_2midicode_8h_1a8e374cd09feb55c6ee27b31727a3c4ab" kindref="member">MIDI_CHN_MASK</ref>)<sp/>+<sp/>1,</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midi_data[1],<sp/>midi_data[2]);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(code<sp/>==<sp/><ref refid="libnyquist_2nyquist_2cmt_2midicode_8h_1ac214d76a2221db38b283109496a784b8" kindref="member">MIDI_CH_PROGRAM</ref>)<sp/>{</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="moxc_8h_1afac541f68814f8c4a9841fcd90d4714d" kindref="member">prgmchange</ref>((midi_data[0]<sp/>&amp;<sp/><ref refid="libnyquist_2nyquist_2cmt_2midicode_8h_1a8e374cd09feb55c6ee27b31727a3c4ab" kindref="member">MIDI_CHN_MASK</ref>)<sp/>+<sp/>1,<sp/>midi_data[1]<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>think<sp/>C<sp/>midi<sp/>driver<sp/>doesn&apos;t<sp/>handle<sp/>sysex<sp/>the<sp/>way<sp/>the<sp/>Amiga<sp/>drivers<sp/>do<sp/>(yet)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>MACINTOSH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(code<sp/>==<sp/><ref refid="libnyquist_2nyquist_2cmt_2midicode_8h_1aa2197f6ca200566c0986e737edd211e4" kindref="member">MIDI_SYSEX</ref>)<sp/>{</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="moxc_8h_1a96b7e0ab94d54a56e504fb87024c0005" kindref="member">sysex</ref>();</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight><highlight class="comment">/**********************************************</highlight></codeline>
<codeline lineno="533"><highlight class="comment">*<sp/>poll<sp/>for<sp/>ASCII<sp/>keyboard<sp/>input<sp/></highlight></codeline>
<codeline lineno="534"><highlight class="comment">***********************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="userio_8c_1adecabf14faa4eede4c5a47017c266874" kindref="member">get_ascii</ref>(&amp;k))<sp/>{</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="moxc_8c_1ac473afd8b92b443dca44674fa889f697" kindref="member">virttime</ref><sp/>=<sp/><ref refid="timebase_8h_1af5c38a56e37b43d2582aa0f1a3148e84" kindref="member">real_to_virt</ref>(default_base,<sp/>now);</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="moxc_8h_1a1d362a9f280883e19fe304beba993cdd" kindref="member">asciievent</ref>(k);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>user<sp/>doesn&apos;t<sp/>handle<sp/>abort<sp/>char<sp/>in<sp/>asciievent,</highlight></codeline>
<codeline lineno="539"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>we<sp/>should<sp/>exit<sp/>now<sp/>to<sp/>avoid<sp/>an<sp/>infinite<sp/>loop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="moxc_8c_1af7e5e4672bfeaa2a9b89ce260eccdbce" kindref="member">abort_flag</ref>)<sp/><ref refid="cext_8h_1a70928ac722fa556b729a98eab5d3e06f" kindref="member">EXIT</ref>(1);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>POSICIONADOR_3D</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight><highlight class="comment">/**********************************************</highlight></codeline>
<codeline lineno="545"><highlight class="comment">*<sp/>poll<sp/>for<sp/>posicionador<sp/>tridimensionale<sp/>input</highlight></codeline>
<codeline lineno="546"><highlight class="comment">**********************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pt_value<sp/>pt_data;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ptGetValue(&amp;pt_data))<sp/>{</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>only<sp/>divide<sp/>if<sp/>necessary,<sp/>divides<sp/>take<sp/>100us<sp/>on<sp/>8MHz<sp/>68000:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="moxc_8c_1ac473afd8b92b443dca44674fa889f697" kindref="member">virttime</ref><sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="moxc_8c_1ac473afd8b92b443dca44674fa889f697" kindref="member">virttime</ref><sp/>=<sp/><ref refid="timebase_8h_1af5c38a56e37b43d2582aa0f1a3148e84" kindref="member">real_to_virt</ref>(default_base,<sp/>now);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptevent(&amp;pt_data);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>POSICIONADOR_3D<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMIGA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight><highlight class="comment">/**********************************************</highlight></codeline>
<codeline lineno="560"><highlight class="comment">*<sp/>poll<sp/>for<sp/>proportional<sp/>controller<sp/>port<sp/></highlight></codeline>
<codeline lineno="561"><highlight class="comment">**********************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prop_1_events)<sp/>{</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>events;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Disable();</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>events<sp/>=<sp/>prop_1_events;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prop_1_events<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Enable();</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(events<sp/>&amp;<sp/>BUTTON_1_RIGHT_CHANGE)</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buttonchange(3,<sp/>prop_1_right_button);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(events<sp/>&amp;<sp/>BUTTON_1_LEFT_CHANGE)</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buttonchange(2,<sp/>prop_1_left_button);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(events<sp/>&amp;<sp/>PROP_1_LEFT_CHANGE)</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>propchange(2,<sp/>prop_1_left_data);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(events<sp/>&amp;<sp/>PROP_1_RIGHT_CHANGE)</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>propchange(3,<sp/>prop_1_right_data);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight><highlight class="comment">/**********************************************</highlight></codeline>
<codeline lineno="581"><highlight class="comment">*<sp/>poll<sp/>for<sp/>input<sp/>from<sp/>public<sp/>command<sp/>port</highlight></codeline>
<codeline lineno="582"><highlight class="comment">***********************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(cmd<sp/>=<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>cmd_msg<sp/>*)<sp/>GetMsg(&amp;pub_port))<sp/>{</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structsymb__descr" kindref="compound">symb_descr</ref><sp/>*<ref refid="_export_p_c_m_8cpp_1a717c8108dd6ce1ecc369d9bac2f471f2" kindref="member">desc</ref><sp/>=<sp/>&amp;<ref refid="libnyquist_2nyquist_2cmt_2hash_8h_1aa683f193f615c5c64a288453d3a9b822" kindref="member">HASHENTRY</ref>(<ref refid="cmtcmd_8h_1a9957a66513ce77e74fe2849bea1e82e9" kindref="member">lookup</ref>(cmd-&gt;symbol_name));</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/>gprintf(TRANS,<sp/>&quot;got<sp/>%lx<sp/>(%s)<sp/>from<sp/>pub_port\n&quot;,<sp/>cmd,<sp/>cmd-&gt;symbol_name);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="moxc_8c_1ac473afd8b92b443dca44674fa889f697" kindref="member">virttime</ref><sp/>=<sp/><ref refid="timebase_8h_1af5c38a56e37b43d2582aa0f1a3148e84" kindref="member">real_to_virt</ref>(default_base,<sp/>now);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!desc)<sp/>{</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="userio_8c_1aa7fe1fd5a722b3baba97b2fb02fa73a1" kindref="member">gprintf</ref>(<ref refid="userio_8h_1abf9c248762203aeb01092b253484d6e0" kindref="member">TRANS</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Error,<sp/>symbol<sp/>%s<sp/>undefined.\n&quot;</highlight><highlight class="normal">,<sp/>cmd-&gt;symbol_name);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(desc-&gt;<ref refid="structsymb__descr_1a80ff5ad23246fee7a7b79d95d1ef9060" kindref="member">symb_type</ref><sp/>!=<sp/>cmd-&gt;symb_type)<sp/>{</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="userio_8c_1aa7fe1fd5a722b3baba97b2fb02fa73a1" kindref="member">gprintf</ref>(<ref refid="userio_8h_1abf9c248762203aeb01092b253484d6e0" kindref="member">TRANS</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Error,<sp/>wrong<sp/>type<sp/>for<sp/>symbol<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd-&gt;symbol_name);<sp/></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cmd-&gt;symb_type<sp/>==<sp/><ref refid="cmtcmd_8h_1a877941f865273d5b1c0d6413d218a66d" kindref="member">fn_symb_type</ref>)<sp/>{</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gprintf(TRANS,<sp/>&quot;Calling<sp/>routine\n&quot;);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*(desc-&gt;<ref refid="structsymb__descr_1ae3740fba2c610bdb8d7ed30c6041d883" kindref="member">ptr</ref>.<ref refid="structsymb__descr_1a4c8cf5138321d2ba066a5352109ba785" kindref="member">routine</ref>))(</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)<sp/>cmd-&gt;the_args[0],<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>cmd-&gt;the_args[1],</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)<sp/>cmd-&gt;the_args[2],<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>cmd-&gt;the_args[3],</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)<sp/>cmd-&gt;the_args[4],<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>cmd-&gt;the_args[5],</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)<sp/>cmd-&gt;the_args[6],<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>cmd-&gt;the_args[7]</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cmd-&gt;symb_type<sp/>==<sp/><ref refid="cmtcmd_8h_1a72dd6cf4715e447c0e210e2c38d3ad2e" kindref="member">var_symb_type</ref>)<sp/>{</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(desc-&gt;<ref refid="structsymb__descr_1ae3740fba2c610bdb8d7ed30c6041d883" kindref="member">ptr</ref>.<ref refid="structsymb__descr_1aaff5c0c3bb9701f2605fd1820e76cb17" kindref="member">intptr</ref>)<sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>cmd-&gt;the_args[0];</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cmd-&gt;symb_type<sp/>==<sp/><ref refid="cmtcmd_8h_1aee0cba77198927d3fa977b417c1df0b7" kindref="member">vec_symb_type</ref>)<sp/>{</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cmd-&gt;the_args[0]<sp/>&gt;=<sp/>desc-&gt;<ref refid="structsymb__descr_1a05dbf47e93c973eb1c57e6839270b40b" kindref="member">size</ref>)<sp/>{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="userio_8c_1aa7fe1fd5a722b3baba97b2fb02fa73a1" kindref="member">gprintf</ref>(<ref refid="userio_8h_1abf9c248762203aeb01092b253484d6e0" kindref="member">TRANS</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Error:<sp/>Vector<sp/>%s<sp/>is<sp/>of<sp/>size<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd-&gt;symbol_name,<sp/>desc-&gt;<ref refid="structsymb__descr_1a05dbf47e93c973eb1c57e6839270b40b" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(desc-&gt;<ref refid="structsymb__descr_1ae3740fba2c610bdb8d7ed30c6041d883" kindref="member">ptr</ref>.<ref refid="structsymb__descr_1aaff5c0c3bb9701f2605fd1820e76cb17" kindref="member">intptr</ref>)[cmd-&gt;the_args[0]]<sp/>=<sp/>cmd-&gt;the_args[1];</highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gprintf(TRANS,<sp/>&quot;vec:<sp/>setting<sp/>%lx\n&quot;,</highlight></codeline>
<codeline lineno="610"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(desc-&gt;ptr.intptr)[cmd-&gt;the_args[0]]);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><ref refid="userio_8c_1aa7fe1fd5a722b3baba97b2fb02fa73a1" kindref="member">gprintf</ref>(<ref refid="userio_8h_1abf9c248762203aeb01092b253484d6e0" kindref="member">TRANS</ref>,<sp/></highlight><highlight class="stringliteral">&quot;Symbol<sp/>Type<sp/>Error\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReplyMsg(&amp;(cmd-&gt;msg));</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight><highlight class="comment">/**********************************************</highlight></codeline>
<codeline lineno="617"><highlight class="comment">*<sp/>poll<sp/>for<sp/>next<sp/>call<sp/>in<sp/>queue</highlight></codeline>
<codeline lineno="618"><highlight class="comment">***********************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/>now<sp/>=<sp/>(now<sp/>+<sp/>1)<sp/>&lt;&lt;<sp/>8;<sp/><sp/></highlight><highlight class="comment">/*<sp/>shift<sp/>because<sp/>next_time<sp/>is<sp/>also<sp/>scaled,</highlight></codeline>
<codeline lineno="620"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>add<sp/>256<sp/>because<sp/>next_time<sp/>has<sp/>added<sp/>priority<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="moxc_8c_1ac3e1795766a80ec63b157951b4b9a7d4" kindref="member">debug</ref>)</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="userio_8c_1aa7fe1fd5a722b3baba97b2fb02fa73a1" kindref="member">gprintf</ref>(<ref refid="userio_8h_1abf9c248762203aeb01092b253484d6e0" kindref="member">TRANS</ref>,<sp/></highlight><highlight class="stringliteral">&quot;now<sp/>%ld<sp/>next_time<sp/>%ld\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>now,<sp/>(<ref refid="timebase_8c_1a0a255e110445b85f5eac1a90cd8797df" kindref="member">timebase_queue</ref><sp/>?<sp/><ref refid="timebase_8c_1a0a255e110445b85f5eac1a90cd8797df" kindref="member">timebase_queue</ref>-&gt;<ref refid="structtimebase__struct_1a8fcec62ba28a693e4b2629d330eaf56e" kindref="member">next_time</ref><sp/>:<sp/>1234));</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>give<sp/>pending<sp/>events<sp/>priority,<sp/>but<sp/>every<sp/>100<sp/>events,<sp/>loop<sp/>to<sp/>allow</highlight></codeline>
<codeline lineno="625"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input<sp/>processing<sp/>(user<sp/>may<sp/>want<sp/>to<sp/>give<sp/>a<sp/>&quot;quit&quot;<sp/>command)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0;<sp/></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>&lt;<sp/>100<sp/>&amp;&amp;<sp/>timebase_queue<sp/>&amp;&amp;<sp/>(now<sp/>&gt;<sp/><ref refid="timebase_8c_1a0a255e110445b85f5eac1a90cd8797df" kindref="member">timebase_queue</ref>-&gt;<ref refid="structtimebase__struct_1a8fcec62ba28a693e4b2629d330eaf56e" kindref="member">next_time</ref>);</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k++)<sp/>{</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="moxc_8c_1aeb221a5a25bf25e3501386149119851c" kindref="member">callrun</ref>();</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight><highlight class="comment">/*******************</highlight></codeline>
<codeline lineno="632"><highlight class="comment">*<sp/>flush<sp/>text<sp/>output<sp/></highlight></codeline>
<codeline lineno="633"><highlight class="comment">********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>MACINTOSH_OR_UNIX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="userio_8c_1a8e4da9552213e6a87d7f2e56f361d213" kindref="member">gflush</ref>();</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal">}</highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight><highlight class="comment">/****************************************************************************</highlight></codeline>
<codeline lineno="641"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>quit</highlight></codeline>
<codeline lineno="642"><highlight class="comment">*<sp/>Effect:<sp/>tells<sp/>moxc<sp/>to<sp/>shut<sp/>down</highlight></codeline>
<codeline lineno="643"><highlight class="comment">****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645" refid="moxc_8h_1a0536355d9188bc1f1591f2cf42d0b87d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="moxc_8c_1a2463a3acef2df4c951ce942a3229e44e" kindref="member">quit</ref>()</highlight></codeline>
<codeline lineno="646"><highlight class="normal">{</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="moxc_8c_1ad87aed56dbb3574e571ec88c5a814dd4" kindref="member">moxcdone</ref><sp/>=<sp/><ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="648"><highlight class="normal">}</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>moxcrun<sp/>--<sp/>schedule<sp/>events<sp/>until<sp/>done<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight></codeline>
<codeline lineno="652" refid="moxc_8h_1a950e95dcd7a4c0502900e081f1549ddb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="moxc_8c_1a68c01cfa2e96170b270d070db618287c" kindref="member">moxcrun</ref>()</highlight></codeline>
<codeline lineno="653"><highlight class="normal">{</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="moxc_8c_1ad87aed56dbb3574e571ec88c5a814dd4" kindref="member">moxcdone</ref><sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!<ref refid="moxc_8c_1ad87aed56dbb3574e571ec88c5a814dd4" kindref="member">moxcdone</ref><sp/>&amp;&amp;<sp/>!<ref refid="moxc_8c_1af7e5e4672bfeaa2a9b89ce260eccdbce" kindref="member">abort_flag</ref>)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>test<sp/>for<sp/>finish<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="timebase_8c_1a0a255e110445b85f5eac1a90cd8797df" kindref="member">timebase_queue</ref>)<sp/><ref refid="moxc_8c_1ad87aed56dbb3574e571ec88c5a814dd4" kindref="member">moxcdone</ref><sp/>=<sp/><ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><ref refid="moxc_8c_1ab06fc1a6181085c797a39e253d0db9fb" kindref="member">moxcwait</ref>(<ref refid="midifns_8h_1ae583bedb01edb77ee6ceb98e847969cb" kindref="member">MAXTIME</ref>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>do<sp/>work<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="659"><highlight class="normal">}</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>moxcterm<sp/>--<sp/>clean<sp/>up<sp/>after<sp/>moxcinit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="663" refid="moxc_8c_1a6a50d547911a748a6368ee293c9a7912" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="moxc_8c_1a6a50d547911a748a6368ee293c9a7912" kindref="member">moxcterm</ref>()</highlight></codeline>
<codeline lineno="664"><highlight class="normal">{</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>AMIGA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/>FreeSignal((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>pub_port_signal);</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/>RemPort(&amp;pub_port);</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/cmt/moxc.c"/>
  </compounddef>
</doxygen>
