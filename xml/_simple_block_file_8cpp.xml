<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_simple_block_file_8cpp" kind="file" language="C++">
    <compoundname>SimpleBlockFile.cpp</compoundname>
    <includes local="no">wx/wx.h</includes>
    <includes local="no">wx/filefn.h</includes>
    <includes local="no">wx/ffile.h</includes>
    <includes local="no">wx/utils.h</includes>
    <includes local="no">wx/log.h</includes>
    <includes refid="_prefs_8h" local="yes">../Prefs.h</includes>
    <includes refid="_simple_block_file_8h" local="yes">SimpleBlockFile.h</includes>
    <includes refid="_file_formats_8h" local="yes">../FileFormats.h</includes>
    <includes local="yes">sndfile.h</includes>
    <includes refid="_internat_8h" local="yes">../Internat.h</includes>
    <includes refid="_memory_x_8h" local="yes">../MemoryX.h</includes>
    <incdepgraph>
      <node id="35879">
        <label>wx/filefn.h</label>
      </node>
      <node id="35901">
        <label>wx/hashmap.h</label>
      </node>
      <node id="35877">
        <label>C:/_dev/OpenU/Audacity/audacity/src/blockfile/SimpleBlockFile.cpp</label>
        <link refid="SimpleBlockFile.cpp"/>
        <childnode refid="35878" relation="include">
        </childnode>
        <childnode refid="35879" relation="include">
        </childnode>
        <childnode refid="35880" relation="include">
        </childnode>
        <childnode refid="35881" relation="include">
        </childnode>
        <childnode refid="35882" relation="include">
        </childnode>
        <childnode refid="35883" relation="include">
        </childnode>
        <childnode refid="35887" relation="include">
        </childnode>
        <childnode refid="35902" relation="include">
        </childnode>
        <childnode refid="35903" relation="include">
        </childnode>
        <childnode refid="35904" relation="include">
        </childnode>
        <childnode refid="35906" relation="include">
        </childnode>
      </node>
      <node id="35880">
        <label>wx/ffile.h</label>
      </node>
      <node id="35904">
        <label>../Internat.h</label>
        <link refid="_internat_8h"/>
        <childnode refid="35894" relation="include">
        </childnode>
        <childnode refid="35888" relation="include">
        </childnode>
        <childnode refid="35905" relation="include">
        </childnode>
      </node>
      <node id="35891">
        <label>xml/XMLTagHandler.h</label>
        <link refid="_x_m_l_tag_handler_8h"/>
        <childnode refid="35884" relation="include">
        </childnode>
        <childnode refid="35888" relation="include">
        </childnode>
        <childnode refid="35892" relation="include">
        </childnode>
        <childnode refid="35893" relation="include">
        </childnode>
      </node>
      <node id="35881">
        <label>wx/utils.h</label>
      </node>
      <node id="35886">
        <label>wx/fileconf.h</label>
      </node>
      <node id="35902">
        <label>../FileFormats.h</label>
        <link refid="_file_formats_8h"/>
        <childnode refid="35900" relation="include">
        </childnode>
        <childnode refid="35894" relation="include">
        </childnode>
        <childnode refid="35888" relation="include">
        </childnode>
        <childnode refid="35884" relation="include">
        </childnode>
        <childnode refid="35903" relation="include">
        </childnode>
      </node>
      <node id="35900">
        <label>wx/list.h</label>
      </node>
      <node id="35897">
        <label>wx/defs.h</label>
      </node>
      <node id="35903">
        <label>sndfile.h</label>
      </node>
      <node id="35898">
        <label>audacity/Types.h</label>
        <link refid="include_2audacity_2_types_8h"/>
        <childnode refid="35888" relation="include">
        </childnode>
        <childnode refid="35894" relation="include">
        </childnode>
      </node>
      <node id="35890">
        <label>../BlockFile.h</label>
        <link refid="_block_file_8h"/>
        <childnode refid="35888" relation="include">
        </childnode>
        <childnode refid="35880" relation="include">
        </childnode>
        <childnode refid="35889" relation="include">
        </childnode>
        <childnode refid="35891" relation="include">
        </childnode>
        <childnode refid="35893" relation="include">
        </childnode>
        <childnode refid="35896" relation="include">
        </childnode>
      </node>
      <node id="35889">
        <label>wx/filename.h</label>
      </node>
      <node id="35883">
        <label>../Prefs.h</label>
        <link refid="_prefs_8h"/>
        <childnode refid="35884" relation="include">
        </childnode>
        <childnode refid="35885" relation="include">
        </childnode>
        <childnode refid="35886" relation="include">
        </childnode>
      </node>
      <node id="35884">
        <label>Audacity.h</label>
        <link refid="_audacity_8h"/>
      </node>
      <node id="35895">
        <label>wx/dynarray.h</label>
      </node>
      <node id="35888">
        <label>wx/string.h</label>
      </node>
      <node id="35882">
        <label>wx/log.h</label>
      </node>
      <node id="35899">
        <label>../DirManager.h</label>
        <link refid="_dir_manager_8h"/>
        <childnode refid="35900" relation="include">
        </childnode>
        <childnode refid="35888" relation="include">
        </childnode>
        <childnode refid="35889" relation="include">
        </childnode>
        <childnode refid="35901" relation="include">
        </childnode>
        <childnode refid="35881" relation="include">
        </childnode>
        <childnode refid="35898" relation="include">
        </childnode>
        <childnode refid="35891" relation="include">
        </childnode>
      </node>
      <node id="35894">
        <label>wx/arrstr.h</label>
      </node>
      <node id="35885">
        <label>wx/config.h</label>
      </node>
      <node id="35878">
        <label>wx/wx.h</label>
      </node>
      <node id="35887">
        <label>SimpleBlockFile.h</label>
        <link refid="_simple_block_file_8h"/>
        <childnode refid="35888" relation="include">
        </childnode>
        <childnode refid="35889" relation="include">
        </childnode>
        <childnode refid="35890" relation="include">
        </childnode>
        <childnode refid="35899" relation="include">
        </childnode>
        <childnode refid="35893" relation="include">
        </childnode>
      </node>
      <node id="35906">
        <label>../MemoryX.h</label>
        <link refid="_memory_x_8h"/>
        <childnode refid="35907" relation="include">
        </childnode>
      </node>
      <node id="35905">
        <label>wx/longlong.h</label>
      </node>
      <node id="35892">
        <label>stdio.h</label>
      </node>
      <node id="35896">
        <label>SampleFormat.h</label>
        <link refid="_sample_format_8h"/>
        <childnode refid="35884" relation="include">
        </childnode>
        <childnode refid="35897" relation="include">
        </childnode>
        <childnode refid="35898" relation="include">
        </childnode>
      </node>
      <node id="35907">
        <label>memory</label>
      </node>
      <node id="35893">
        <label>XMLWriter.h</label>
        <link refid="_x_m_l_writer_8h"/>
        <childnode refid="35894" relation="include">
        </childnode>
        <childnode refid="35895" relation="include">
        </childnode>
        <childnode refid="35880" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="_simple_block_file_8cpp_1a4e6aaec2cf14fd26ec0a34fac284d139" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>wxUint32</type>
        <definition>static wxUint32 SwapUintEndianess</definition>
        <argsstring>(wxUint32 in)</argsstring>
        <name>SwapUintEndianess</name>
        <param>
          <type>wxUint32</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/blockfile/SimpleBlockFile.cpp" line="76" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/blockfile/SimpleBlockFile.cpp" bodystart="76" bodyend="86"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Implements <ref refid="class_simple_block_file" kindref="compound">SimpleBlockFile</ref> and <ref refid="structau_header" kindref="compound">auHeader</ref>. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>Audacity:<sp/>A<sp/>Digital<sp/>Audio<sp/>Editor</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>SimpleBlockFile.cpp</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>Joshua<sp/>Haberman</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/>Markus<sp/>Meyer</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment">*******************************************************************/</highlight><highlight class="comment">/****************************************************************/</highlight><highlight class="comment">/****************************************************************/</highlight><highlight class="comment">/*******************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/wx.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/filefn.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/ffile.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/utils.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/log.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Prefs.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_simple_block_file_8h" kindref="compound">SimpleBlockFile.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../FileFormats.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;sndfile.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Internat.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../MemoryX.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>wxUint32<sp/>SwapUintEndianess(wxUint32<sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>)</highlight></codeline>
<codeline lineno="77"><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>wxUint32<sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*p_in<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>&amp;in;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*p_out<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>&amp;out;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>p_out[0]<sp/>=<sp/>p_in[3];</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>p_out[1]<sp/>=<sp/>p_in[2];</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>p_out[2]<sp/>=<sp/>p_in[1];</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/>p_out[3]<sp/>=<sp/>p_in[0];</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="class_simple_block_file_1a10f32728f1bed4cfeca2c2fde88d3395" refkind="member"><highlight class="normal"><ref refid="class_simple_block_file_1a10f32728f1bed4cfeca2c2fde88d3395" kindref="member">SimpleBlockFile::SimpleBlockFile</ref>(wxFileName<sp/>baseFileName,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref><sp/>sampleData,<sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>sampleLen,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792" kindref="member">sampleFormat</ref><sp/><ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref>,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>allowDeferredWrite<sp/></highlight><highlight class="comment">/*<sp/>=<sp/>false<sp/>*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bypassCache<sp/></highlight><highlight class="comment">/*<sp/>=<sp/>false<sp/>*/</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_block_file" kindref="compound">BlockFile</ref>(wxFileName(baseFileName.<ref refid="_mac_file_utils_8c_1a76460f65bf10fe2762d895528387fd78" kindref="member">GetFullPath</ref>()<sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;.au&quot;</highlight><highlight class="normal">)),<sp/>sampleLen)</highlight></codeline>
<codeline lineno="104"><highlight class="normal">{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_simple_block_file_1ad40b5fc5ff95595d2717c0fa0dd75596" kindref="member">mFormat</ref><sp/>=<sp/><ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref>;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_simple_block_file_1aa847bc2ca7232696fbebf79e6a72443b" kindref="member">mCache</ref>.<ref refid="struct_simple_block_file_cache_1a2090e839cbaa60de4f78a735a8c53875" kindref="member">active</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useCache<sp/>=<sp/><ref refid="class_simple_block_file_1a3c7bc7cce33cbbd6b4120ed3005b988f" kindref="member">GetCache</ref>()<sp/>&amp;&amp;<sp/>(!bypassCache);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(allowDeferredWrite<sp/>&amp;&amp;<sp/>useCache)<sp/>&amp;&amp;<sp/>!bypassCache)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bSuccess<sp/>=<sp/><ref refid="class_simple_block_file_1a80703489b7ca1677e8823273f5537c9c" kindref="member">WriteSimpleBlockFile</ref>(sampleData,<sp/>sampleLen,<sp/>format,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxASSERT(bSuccess);<sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Handle<sp/>failure<sp/>here<sp/>by<sp/>alert<sp/>to<sp/>user<sp/>and<sp/>undo<sp/>partial<sp/>op.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxUnusedVar(bSuccess);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(useCache)<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//wxLogDebug(&quot;SimpleBlockFile::SimpleBlockFile():<sp/>Caching<sp/>block<sp/>file<sp/>data.&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_simple_block_file_1aa847bc2ca7232696fbebf79e6a72443b" kindref="member">mCache</ref>.<ref refid="struct_simple_block_file_cache_1a2090e839cbaa60de4f78a735a8c53875" kindref="member">active</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_simple_block_file_1aa847bc2ca7232696fbebf79e6a72443b" kindref="member">mCache</ref>.<ref refid="struct_simple_block_file_cache_1a9e8bec65ced21f444549093313266110" kindref="member">needWrite</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_simple_block_file_1aa847bc2ca7232696fbebf79e6a72443b" kindref="member">mCache</ref>.<ref refid="struct_simple_block_file_cache_1aa4ce205b9532adab61459334240a216c" kindref="member">format</ref><sp/>=<sp/><ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref>;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_simple_block_file_1aa847bc2ca7232696fbebf79e6a72443b" kindref="member">mCache</ref>.<ref refid="struct_simple_block_file_cache_1a1726dd879f6f356eff8165c04dc039d2" kindref="member">sampleData</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[sampleLen<sp/>*<sp/><ref refid="include_2audacity_2_types_8h_1a7ecd88c1f16f362ccc891b8d1f6f69cb" kindref="member">SAMPLE_SIZE</ref>(format)];</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(<ref refid="class_simple_block_file_1aa847bc2ca7232696fbebf79e6a72443b" kindref="member">mCache</ref>.<ref refid="struct_simple_block_file_cache_1a1726dd879f6f356eff8165c04dc039d2" kindref="member">sampleData</ref>,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sampleData,<sp/>sampleLen<sp/>*<sp/><ref refid="include_2audacity_2_types_8h_1a7ecd88c1f16f362ccc891b8d1f6f69cb" kindref="member">SAMPLE_SIZE</ref>(format));</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>summaryData<sp/>=<sp/><ref refid="class_block_file_1a87b1269de50226600c5f52729117be30" kindref="member">BlockFile::CalcSummary</ref>(sampleData,<sp/>sampleLen,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>format);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_simple_block_file_1aa847bc2ca7232696fbebf79e6a72443b" kindref="member">mCache</ref>.<ref refid="struct_simple_block_file_cache_1a4e097d86a1b1b1bada818e5fc6ae7d60" kindref="member">summaryData</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[<ref refid="class_block_file_1a4c81c30a570684d5287ed58acd3da259" kindref="member">mSummaryInfo</ref>.<ref refid="class_summary_info_1a4d7f7e6b04369c78c001cb46390a9d96" kindref="member">totalSummaryBytes</ref>];</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(<ref refid="class_simple_block_file_1aa847bc2ca7232696fbebf79e6a72443b" kindref="member">mCache</ref>.<ref refid="struct_simple_block_file_cache_1a4e097d86a1b1b1bada818e5fc6ae7d60" kindref="member">summaryData</ref>,<sp/>summaryData,</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<ref refid="class_block_file_1a4c81c30a570684d5287ed58acd3da259" kindref="member">mSummaryInfo</ref>.<ref refid="class_summary_info_1a4d7f7e6b04369c78c001cb46390a9d96" kindref="member">totalSummaryBytes</ref>);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="class_simple_block_file_1ac61d2c610ba38629c4e32d12350af339" refkind="member"><highlight class="normal"><ref refid="class_simple_block_file_1a10f32728f1bed4cfeca2c2fde88d3395" kindref="member">SimpleBlockFile::SimpleBlockFile</ref>(wxFileName<sp/>existingFile,<sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>,</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>rms):</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_block_file" kindref="compound">BlockFile</ref>(existingFile,<sp/>len)</highlight></codeline>
<codeline lineno="141"><highlight class="normal">{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>an<sp/>invalid<sp/>format<sp/>to<sp/>force<sp/>GetSpaceUsage()<sp/>to<sp/>read<sp/>it<sp/>from<sp/>the<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_simple_block_file_1ad40b5fc5ff95595d2717c0fa0dd75596" kindref="member">mFormat</ref><sp/>=<sp/>(<ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792" kindref="member">sampleFormat</ref>)<sp/>0;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_block_file_1a733757c3a2c9d2e51beab8acbc86f913" kindref="member">mMin</ref><sp/>=<sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_block_file_1abda14ef73ea31a585b26e289a99ac356" kindref="member">mMax</ref><sp/>=<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_block_file_1a9b863f624b2d76a5ec29390cebed698f" kindref="member">mRMS</ref><sp/>=<sp/>rms;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_simple_block_file_1aa847bc2ca7232696fbebf79e6a72443b" kindref="member">mCache</ref>.<ref refid="struct_simple_block_file_cache_1a2090e839cbaa60de4f78a735a8c53875" kindref="member">active</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="class_simple_block_file_1a31f9eb32ce25d44c16414851e527e32c" refkind="member"><highlight class="normal"><ref refid="class_simple_block_file_1a31f9eb32ce25d44c16414851e527e32c" kindref="member">SimpleBlockFile::~SimpleBlockFile</ref>()</highlight></codeline>
<codeline lineno="153"><highlight class="normal">{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_simple_block_file_1aa847bc2ca7232696fbebf79e6a72443b" kindref="member">mCache</ref>.<ref refid="struct_simple_block_file_cache_1a2090e839cbaa60de4f78a735a8c53875" kindref="member">active</ref>)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/><ref refid="class_simple_block_file_1aa847bc2ca7232696fbebf79e6a72443b" kindref="member">mCache</ref>.<ref refid="struct_simple_block_file_cache_1a1726dd879f6f356eff8165c04dc039d2" kindref="member">sampleData</ref>;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<ref refid="class_simple_block_file_1aa847bc2ca7232696fbebf79e6a72443b" kindref="member">mCache</ref>.<ref refid="struct_simple_block_file_cache_1a4e097d86a1b1b1bada818e5fc6ae7d60" kindref="member">summaryData</ref>;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161" refid="class_simple_block_file_1a80703489b7ca1677e8823273f5537c9c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_simple_block_file_1a80703489b7ca1677e8823273f5537c9c" kindref="member">SimpleBlockFile::WriteSimpleBlockFile</ref>(</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref><sp/>sampleData,</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/>sampleLen,</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792" kindref="member">sampleFormat</ref><sp/><ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref>,</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>summaryData)</highlight></codeline>
<codeline lineno="166"><highlight class="normal">{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/>wxFFile<sp/>file(<ref refid="class_block_file_1ab4d7e450d154ad4ccee1d0f4a26093f0" kindref="member">mFileName</ref>.GetFullPath(),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;wb&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!file.IsOpened()<sp/>){</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Can&apos;t<sp/>do<sp/>anything<sp/>else.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><ref refid="structau_header" kindref="compound">auHeader</ref><sp/>header;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>AU<sp/>files<sp/>can<sp/>be<sp/>either<sp/>big<sp/>or<sp/>little<sp/>endian.<sp/><sp/>Which<sp/>it<sp/>is<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>determined<sp/>implicitly<sp/>by<sp/>the<sp/>byte-order<sp/>of<sp/>the<sp/>magic<sp/>0x2e736e64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(.snd).<sp/><sp/>We<sp/>want<sp/>it<sp/>to<sp/>be<sp/>native-endian,<sp/>so<sp/>we<sp/>write<sp/>the<sp/>magic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>memory<sp/>and<sp/>then<sp/>let<sp/>it<sp/>write<sp/>that<sp/>to<sp/>a<sp/>file<sp/>in<sp/>native</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>endianness</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/>header.<ref refid="structau_header_1a2308c1a7789da6548bf997f029c831e1" kindref="member">magic</ref><sp/>=<sp/>0x2e736e64;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>store<sp/>the<sp/>summary<sp/>data<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>header,<sp/>so<sp/>the<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>offset<sp/>is<sp/>the<sp/>length<sp/>of<sp/>the<sp/>summary<sp/>data<sp/>plus<sp/>the<sp/>length<sp/>of<sp/>the<sp/>header</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/>header.<ref refid="structau_header_1abe11be3f22c3abd4371a9b0e092120b6" kindref="member">dataOffset</ref><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structau_header" kindref="compound">auHeader</ref>)<sp/>+<sp/><ref refid="class_block_file_1a4c81c30a570684d5287ed58acd3da259" kindref="member">mSummaryInfo</ref>.<ref refid="class_summary_info_1a4d7f7e6b04369c78c001cb46390a9d96" kindref="member">totalSummaryBytes</ref>;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dataSize<sp/>is<sp/>optional,<sp/>and<sp/>we<sp/>opt<sp/>out</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/>header.<ref refid="structau_header_1a25d33bd6cd02c40e9bd85a48510a9a6c" kindref="member">dataSize</ref><sp/>=<sp/>0xffffffff;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(format)<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba99d110ae36be71bbf3cb9ad3af4550" kindref="member">int16Sample</ref>:</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>header.<ref refid="structau_header_1ad277236bba519b9f329d7bbba373c30e" kindref="member">encoding</ref><sp/>=<sp/><ref refid="_simple_block_file_8h_1a27c1625aa5fde74a6dec3d424733c579a92436ddba81fed70fd6f83dbc473d396" kindref="member">AU_SAMPLE_FORMAT_16</ref>;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792af7d5dcd7629454f6c6f3d7be44068a5f" kindref="member">int24Sample</ref>:</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>header.<ref refid="structau_header_1ad277236bba519b9f329d7bbba373c30e" kindref="member">encoding</ref><sp/>=<sp/><ref refid="_simple_block_file_8h_1a27c1625aa5fde74a6dec3d424733c579a3ee1ced81b52c1892921d451cbb1a446" kindref="member">AU_SAMPLE_FORMAT_24</ref>;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>:</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>header.<ref refid="structau_header_1ad277236bba519b9f329d7bbba373c30e" kindref="member">encoding</ref><sp/>=<sp/><ref refid="_simple_block_file_8h_1a27c1625aa5fde74a6dec3d424733c579a0d3a61a491afd3e1e8071e8d00e59ab6" kindref="member">AU_SAMPLE_FORMAT_FLOAT</ref>;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>don&apos;t<sp/>fabricate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/>header.<ref refid="structau_header_1a8855c915576fe2514d65d47d6e676f7b" kindref="member">sampleRate</ref><sp/>=<sp/>44100;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>BlockFiles<sp/>are<sp/>always<sp/>mono</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/>header.<ref refid="structau_header_1abbf62d3e4696972c44867867aa180283" kindref="member">channels</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>the<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!summaryData)</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>summaryData<sp/>=<sp/></highlight><highlight class="comment">/*BlockFile::*/</highlight><highlight class="normal"><ref refid="class_block_file_1a87b1269de50226600c5f52729117be30" kindref="member">CalcSummary</ref>(sampleData,<sp/>sampleLen,<sp/>format);<sp/></highlight><highlight class="comment">//mchinen:allowing<sp/>virtual<sp/>override<sp/>of<sp/>calc<sp/>summary<sp/>for<sp/>ODDecodeBlockFile.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nBytesToWrite<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(header);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nBytesWritten<sp/>=<sp/>file.Write(&amp;header,<sp/>nBytesToWrite);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nBytesWritten<sp/>!=<sp/>nBytesToWrite)</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxLogDebug(wxT(</highlight><highlight class="stringliteral">&quot;Wrote<sp/>%lld<sp/>bytes,<sp/>expected<sp/>%lld.&quot;</highlight><highlight class="normal">),<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>nBytesWritten,<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>nBytesToWrite);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/>nBytesToWrite<sp/>=<sp/><ref refid="class_block_file_1a4c81c30a570684d5287ed58acd3da259" kindref="member">mSummaryInfo</ref>.<ref refid="class_summary_info_1a4d7f7e6b04369c78c001cb46390a9d96" kindref="member">totalSummaryBytes</ref>;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/>nBytesWritten<sp/>=<sp/>file.Write(summaryData,<sp/>nBytesToWrite);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nBytesWritten<sp/>!=<sp/>nBytesToWrite)</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxLogDebug(wxT(</highlight><highlight class="stringliteral">&quot;Wrote<sp/>%lld<sp/>bytes,<sp/>expected<sp/>%lld.&quot;</highlight><highlight class="normal">),<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>nBytesWritten,<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>nBytesToWrite);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>format<sp/>==<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792af7d5dcd7629454f6c6f3d7be44068a5f" kindref="member">int24Sample</ref><sp/>)</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>can&apos;t<sp/>write<sp/>the<sp/>buffer<sp/>directly<sp/>to<sp/>disk,<sp/>because<sp/>24-bit<sp/>samples</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>disk<sp/>need<sp/>to<sp/>be<sp/>packed,<sp/>not<sp/>padded<sp/>to<sp/>32<sp/>bits<sp/>like<sp/>they<sp/>are<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*int24sampleData<sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*)sampleData;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>sampleLen;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++<sp/>)</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nBytesToWrite<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nBytesWritten<sp/>=</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#if<sp/>wxBYTE_ORDER<sp/>==<sp/>wxBIG_ENDIAN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file.Write((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;int24sampleData[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>+<sp/>1,<sp/>nBytesToWrite);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file.Write((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;int24sampleData[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>],<sp/>nBytesToWrite);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nBytesWritten<sp/>!=<sp/>nBytesToWrite)</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxLogDebug(wxT(</highlight><highlight class="stringliteral">&quot;Wrote<sp/>%lld<sp/>bytes,<sp/>expected<sp/>%lld.&quot;</highlight><highlight class="normal">),<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>nBytesWritten,<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>nBytesToWrite);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>for<sp/>all<sp/>other<sp/>sample<sp/>formats<sp/>we<sp/>can<sp/>write<sp/>straight<sp/>from<sp/>the<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>disk</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nBytesToWrite<sp/>=<sp/>sampleLen<sp/>*<sp/><ref refid="include_2audacity_2_types_8h_1a7ecd88c1f16f362ccc891b8d1f6f69cb" kindref="member">SAMPLE_SIZE</ref>(format);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>nBytesWritten<sp/>=<sp/>file.Write(sampleData,<sp/>nBytesToWrite);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nBytesWritten<sp/>!=<sp/>nBytesToWrite)</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxLogDebug(wxT(</highlight><highlight class="stringliteral">&quot;Wrote<sp/>%lld<sp/>bytes,<sp/>expected<sp/>%lld.&quot;</highlight><highlight class="normal">),<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>nBytesWritten,<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>nBytesToWrite);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="266"><highlight class="normal">}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268" refid="class_simple_block_file_1a6bc1e4d2f9dcc7783f12447a768850b6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_simple_block_file_1a6bc1e4d2f9dcc7783f12447a768850b6" kindref="member">SimpleBlockFile::FillCache</ref>()</highlight></codeline>
<codeline lineno="269"><highlight class="normal">{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_simple_block_file_1aa847bc2ca7232696fbebf79e6a72443b" kindref="member">mCache</ref>.<ref refid="struct_simple_block_file_cache_1a2090e839cbaa60de4f78a735a8c53875" kindref="member">active</ref>)</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>cache<sp/>is<sp/>already<sp/>filled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>sample<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/>wxFFile<sp/>file(<ref refid="class_block_file_1ab4d7e450d154ad4ccee1d0f4a26093f0" kindref="member">mFileName</ref>.GetFullPath(),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!file.IsOpened())</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>read<sp/>into<sp/>cache<sp/>if<sp/>file<sp/>not<sp/>available</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><ref refid="structau_header" kindref="compound">auHeader</ref><sp/>header;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(file.Read(&amp;header,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(header))<sp/>!=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(header))</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Corrupt<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/>wxUint32<sp/><ref refid="lib_2expat_8h_1a4dfeb87c47b4dde2571b24c1a6798056" kindref="member">encoding</ref>;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(header.<ref refid="structau_header_1a2308c1a7789da6548bf997f029c831e1" kindref="member">magic</ref><sp/>==<sp/>0x2e736e64)</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>encoding<sp/>=<sp/>header.<ref refid="structau_header_1ad277236bba519b9f329d7bbba373c30e" kindref="member">encoding</ref>;<sp/></highlight><highlight class="comment">//<sp/>correct<sp/>endianness</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>encoding<sp/>=<sp/>SwapUintEndianess(header.<ref refid="structau_header_1ad277236bba519b9f329d7bbba373c30e" kindref="member">encoding</ref>);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(encoding)</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_simple_block_file_8h_1a27c1625aa5fde74a6dec3d424733c579a92436ddba81fed70fd6f83dbc473d396" kindref="member">AU_SAMPLE_FORMAT_16</ref>:</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_simple_block_file_1aa847bc2ca7232696fbebf79e6a72443b" kindref="member">mCache</ref>.<ref refid="struct_simple_block_file_cache_1aa4ce205b9532adab61459334240a216c" kindref="member">format</ref><sp/>=<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba99d110ae36be71bbf3cb9ad3af4550" kindref="member">int16Sample</ref>;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_simple_block_file_8h_1a27c1625aa5fde74a6dec3d424733c579a3ee1ced81b52c1892921d451cbb1a446" kindref="member">AU_SAMPLE_FORMAT_24</ref>:</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_simple_block_file_1aa847bc2ca7232696fbebf79e6a72443b" kindref="member">mCache</ref>.<ref refid="struct_simple_block_file_cache_1aa4ce205b9532adab61459334240a216c" kindref="member">format</ref><sp/>=<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792af7d5dcd7629454f6c6f3d7be44068a5f" kindref="member">int24Sample</ref>;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>floatSample<sp/>is<sp/>a<sp/>safe<sp/>default<sp/>(we<sp/>will<sp/>never<sp/>loose<sp/>data)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_simple_block_file_1aa847bc2ca7232696fbebf79e6a72443b" kindref="member">mCache</ref>.<ref refid="struct_simple_block_file_cache_1aa4ce205b9532adab61459334240a216c" kindref="member">format</ref><sp/>=<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/>file.Close();</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>samples<sp/>into<sp/>cache</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_simple_block_file_1aa847bc2ca7232696fbebf79e6a72443b" kindref="member">mCache</ref>.<ref refid="struct_simple_block_file_cache_1a1726dd879f6f356eff8165c04dc039d2" kindref="member">sampleData</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[<ref refid="class_block_file_1a732a85cd5906a03310bd23fc91b83d40" kindref="member">mLen</ref><sp/>*<sp/><ref refid="include_2audacity_2_types_8h_1a7ecd88c1f16f362ccc891b8d1f6f69cb" kindref="member">SAMPLE_SIZE</ref>(<ref refid="class_simple_block_file_1aa847bc2ca7232696fbebf79e6a72443b" kindref="member">mCache</ref>.<ref refid="struct_simple_block_file_cache_1aa4ce205b9532adab61459334240a216c" kindref="member">format</ref>)];</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_simple_block_file_1aa47fae91065e62427058eca80c9e3db0" kindref="member">ReadData</ref>(<ref refid="class_simple_block_file_1aa847bc2ca7232696fbebf79e6a72443b" kindref="member">mCache</ref>.<ref refid="struct_simple_block_file_cache_1a1726dd879f6f356eff8165c04dc039d2" kindref="member">sampleData</ref>,<sp/><ref refid="class_simple_block_file_1aa847bc2ca7232696fbebf79e6a72443b" kindref="member">mCache</ref>.<ref refid="struct_simple_block_file_cache_1aa4ce205b9532adab61459334240a216c" kindref="member">format</ref>,<sp/>0,<sp/><ref refid="class_block_file_1a732a85cd5906a03310bd23fc91b83d40" kindref="member">mLen</ref>)<sp/>!=<sp/><ref refid="class_block_file_1a732a85cd5906a03310bd23fc91b83d40" kindref="member">mLen</ref>)</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Could<sp/>not<sp/>read<sp/>all<sp/>samples</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="class_simple_block_file_1aa847bc2ca7232696fbebf79e6a72443b" kindref="member">mCache</ref>.<ref refid="struct_simple_block_file_cache_1a1726dd879f6f356eff8165c04dc039d2" kindref="member">sampleData</ref>;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>summary<sp/>data<sp/>into<sp/>cache</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_simple_block_file_1aa847bc2ca7232696fbebf79e6a72443b" kindref="member">mCache</ref>.<ref refid="struct_simple_block_file_cache_1a4e097d86a1b1b1bada818e5fc6ae7d60" kindref="member">summaryData</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[<ref refid="class_block_file_1a4c81c30a570684d5287ed58acd3da259" kindref="member">mSummaryInfo</ref>.<ref refid="class_summary_info_1a4d7f7e6b04369c78c001cb46390a9d96" kindref="member">totalSummaryBytes</ref>];</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_simple_block_file_1addcddf2634ca5ec580fa69d0d603d6d0" kindref="member">ReadSummary</ref>(<ref refid="class_simple_block_file_1aa847bc2ca7232696fbebf79e6a72443b" kindref="member">mCache</ref>.<ref refid="struct_simple_block_file_cache_1a4e097d86a1b1b1bada818e5fc6ae7d60" kindref="member">summaryData</ref>))</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memset(<ref refid="class_simple_block_file_1aa847bc2ca7232696fbebf79e6a72443b" kindref="member">mCache</ref>.<ref refid="struct_simple_block_file_cache_1a4e097d86a1b1b1bada818e5fc6ae7d60" kindref="member">summaryData</ref>,<sp/>0,<sp/><ref refid="class_block_file_1a4c81c30a570684d5287ed58acd3da259" kindref="member">mSummaryInfo</ref>.<ref refid="class_summary_info_1a4d7f7e6b04369c78c001cb46390a9d96" kindref="member">totalSummaryBytes</ref>);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Cache<sp/>is<sp/>active<sp/>but<sp/>already<sp/>on<sp/>disk</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_simple_block_file_1aa847bc2ca7232696fbebf79e6a72443b" kindref="member">mCache</ref>.<ref refid="struct_simple_block_file_cache_1a2090e839cbaa60de4f78a735a8c53875" kindref="member">active</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_simple_block_file_1aa847bc2ca7232696fbebf79e6a72443b" kindref="member">mCache</ref>.<ref refid="struct_simple_block_file_cache_1a9e8bec65ced21f444549093313266110" kindref="member">needWrite</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//wxLogDebug(&quot;SimpleBlockFile::FillCache():<sp/>Succesfully<sp/>read<sp/>simple<sp/>block<sp/>file<sp/>into<sp/>cache.&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal">}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="337" refid="class_simple_block_file_1addcddf2634ca5ec580fa69d0d603d6d0" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_simple_block_file_1addcddf2634ca5ec580fa69d0d603d6d0" kindref="member">SimpleBlockFile::ReadSummary</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>)</highlight></codeline>
<codeline lineno="338"><highlight class="normal">{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_simple_block_file_1aa847bc2ca7232696fbebf79e6a72443b" kindref="member">mCache</ref>.<ref refid="struct_simple_block_file_cache_1a2090e839cbaa60de4f78a735a8c53875" kindref="member">active</ref>)</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//wxLogDebug(&quot;SimpleBlockFile::ReadSummary():<sp/>Summary<sp/>is<sp/>already<sp/>in<sp/>cache.&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(data,<sp/><ref refid="class_simple_block_file_1aa847bc2ca7232696fbebf79e6a72443b" kindref="member">mCache</ref>.<ref refid="struct_simple_block_file_cache_1a4e097d86a1b1b1bada818e5fc6ae7d60" kindref="member">summaryData</ref>,<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<ref refid="class_block_file_1a4c81c30a570684d5287ed58acd3da259" kindref="member">mSummaryInfo</ref>.<ref refid="class_summary_info_1a4d7f7e6b04369c78c001cb46390a9d96" kindref="member">totalSummaryBytes</ref>);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//wxLogDebug(&quot;SimpleBlockFile::ReadSummary():<sp/>Reading<sp/>summary<sp/>from<sp/>disk.&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxFFile<sp/>file(<ref refid="class_block_file_1ab4d7e450d154ad4ccee1d0f4a26093f0" kindref="member">mFileName</ref>.GetFullPath(),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_maybe" kindref="compound">Maybe&lt;wxLogNull&gt;</ref><sp/>silence{};</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_block_file_1a670ed2ad2e13a94e3fb7c2ae32785811" kindref="member">mSilentLog</ref>)</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>silence.<ref refid="class_maybe_1ad1a6ede9fc786af6ce70547692489bac" kindref="member">create</ref>();</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!file.IsOpened()){</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(data,<sp/>0,<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<ref refid="class_block_file_1a4c81c30a570684d5287ed58acd3da259" kindref="member">mSummaryInfo</ref>.<ref refid="class_summary_info_1a4d7f7e6b04369c78c001cb46390a9d96" kindref="member">totalSummaryBytes</ref>);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_block_file_1a670ed2ad2e13a94e3fb7c2ae32785811" kindref="member">mSilentLog</ref><sp/>=<sp/><ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_block_file_1a670ed2ad2e13a94e3fb7c2ae32785811" kindref="member">mSilentLog</ref>=<ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>offset<sp/>is<sp/>just<sp/>past<sp/>the<sp/>au<sp/>header</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!file.Seek(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structau_header" kindref="compound">auHeader</ref>))<sp/>)</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>read<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)file.Read(data,<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<ref refid="class_block_file_1a4c81c30a570684d5287ed58acd3da259" kindref="member">mSummaryInfo</ref>.<ref refid="class_summary_info_1a4d7f7e6b04369c78c001cb46390a9d96" kindref="member">totalSummaryBytes</ref>);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_block_file_1abb3580667f6451b2ab0d4cc1a45f7a7a" kindref="member">FixSummary</ref>(data);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(read<sp/>==<sp/><ref refid="class_block_file_1a4c81c30a570684d5287ed58acd3da259" kindref="member">mSummaryInfo</ref>.<ref refid="class_summary_info_1a4d7f7e6b04369c78c001cb46390a9d96" kindref="member">totalSummaryBytes</ref>);</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal">}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="386" refid="class_simple_block_file_1aa47fae91065e62427058eca80c9e3db0" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_simple_block_file_1aa47fae91065e62427058eca80c9e3db0" kindref="member">SimpleBlockFile::ReadData</ref>(<ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref><sp/><ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>,<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792" kindref="member">sampleFormat</ref><sp/><ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref>,</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>,<sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>)</highlight></codeline>
<codeline lineno="388"><highlight class="normal">{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_simple_block_file_1aa847bc2ca7232696fbebf79e6a72443b" kindref="member">mCache</ref>.<ref refid="struct_simple_block_file_cache_1a2090e839cbaa60de4f78a735a8c53875" kindref="member">active</ref>)</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//wxLogDebug(&quot;SimpleBlockFile::ReadData():<sp/>Data<sp/>are<sp/>already<sp/>in<sp/>cache.&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&gt;<sp/><ref refid="class_block_file_1a732a85cd5906a03310bd23fc91b83d40" kindref="member">mLen</ref><sp/>-<sp/>start)</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/><ref refid="class_block_file_1a732a85cd5906a03310bd23fc91b83d40" kindref="member">mLen</ref><sp/>-<sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>;</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_sample_format_8cpp_1a2819d83a15a7623e52e6562b3329471c" kindref="member">CopySamples</ref>(</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref>)(((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<ref refid="class_simple_block_file_1aa847bc2ca7232696fbebf79e6a72443b" kindref="member">mCache</ref>.<ref refid="struct_simple_block_file_cache_1a1726dd879f6f356eff8165c04dc039d2" kindref="member">sampleData</ref>)<sp/>+</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start<sp/>*<sp/><ref refid="include_2audacity_2_types_8h_1a7ecd88c1f16f362ccc891b8d1f6f69cb" kindref="member">SAMPLE_SIZE</ref>(<ref refid="class_simple_block_file_1aa847bc2ca7232696fbebf79e6a72443b" kindref="member">mCache</ref>.<ref refid="struct_simple_block_file_cache_1aa4ce205b9532adab61459334240a216c" kindref="member">format</ref>)),</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_simple_block_file_1aa847bc2ca7232696fbebf79e6a72443b" kindref="member">mCache</ref>.<ref refid="struct_simple_block_file_cache_1aa4ce205b9532adab61459334240a216c" kindref="member">format</ref>,<sp/>data,<sp/>format,<sp/>len);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//wxLogDebug(&quot;SimpleBlockFile::ReadData():<sp/>Reading<sp/>data<sp/>from<sp/>disk.&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_s_f___i_n_f_o" kindref="compound">SF_INFO</ref><sp/><ref refid="lib_2expat_8h_1a20806b446e455c50dc5653b7d43e3de2" kindref="member">info</ref>;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxFile<sp/><ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>will<sp/>be<sp/>closed<sp/>when<sp/>it<sp/>goes<sp/>out<sp/>of<sp/>scope</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac14209bc83d532b06a8cdf9ade6d544a" kindref="member">SNDFILE</ref><sp/>*sf<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_maybe" kindref="compound">Maybe&lt;wxLogNull&gt;</ref><sp/>silence{};</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_block_file_1a670ed2ad2e13a94e3fb7c2ae32785811" kindref="member">mSilentLog</ref>)</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>silence.<ref refid="class_maybe_1ad1a6ede9fc786af6ce70547692489bac" kindref="member">create</ref>();</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(&amp;info,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(info));</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f.Open(<ref refid="class_block_file_1ab4d7e450d154ad4ccee1d0f4a26093f0" kindref="member">mFileName</ref>.GetFullPath()))<sp/>{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Even<sp/>though<sp/>there<sp/>is<sp/>an<sp/>sf_open()<sp/>that<sp/>takes<sp/>a<sp/>filename,<sp/>use<sp/>the<sp/>one<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>takes<sp/>a<sp/>file<sp/>descriptor<sp/>since<sp/>wxWidgets<sp/>can<sp/>open<sp/>a<sp/>file<sp/>with<sp/>a<sp/>Unicode<sp/>name<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>libsndfile<sp/>can&apos;t<sp/>(under<sp/>Windows).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sf<sp/>=<sp/><ref refid="sndfile_8c_1a0480812421818e88cc6032834ec14431" kindref="member">sf_open_fd</ref>(f.fd(),<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a775634eda7917b3f2142895169300799a125531fe9c895237bccd35736370e815" kindref="member">SFM_READ</ref>,<sp/>&amp;<ref refid="lib_2expat_8h_1a20806b446e455c50dc5653b7d43e3de2" kindref="member">info</ref>,<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!sf)<sp/>{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(data,<sp/>0,<sp/><ref refid="include_2audacity_2_types_8h_1a7ecd88c1f16f362ccc891b8d1f6f69cb" kindref="member">SAMPLE_SIZE</ref>(format)*len);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_block_file_1a670ed2ad2e13a94e3fb7c2ae32785811" kindref="member">mSilentLog</ref><sp/>=<sp/><ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_block_file_1a670ed2ad2e13a94e3fb7c2ae32785811" kindref="member">mSilentLog</ref>=<ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sndfile_8c_1a73cc07589d395d7e36a2cecd1510f9f0" kindref="member">sf_seek</ref>(sf,<sp/>start,<sp/>SEEK_SET);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sample_buffer" kindref="compound">SampleBuffer</ref><sp/><ref refid="recplay_8c_1adbbab5cb2248179d231690a1a02ff977" kindref="member">buffer</ref>(len,<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>framesRead<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>both<sp/>the<sp/>src<sp/>and<sp/>dest<sp/>formats<sp/>are<sp/>integer<sp/>formats,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>integers<sp/>from<sp/>the<sp/>file<sp/>(otherwise<sp/>we<sp/>would<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>converting<sp/>to<sp/>float<sp/>and<sp/>back,<sp/>which<sp/>is<sp/>unneccesary)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(format<sp/>==<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba99d110ae36be71bbf3cb9ad3af4550" kindref="member">int16Sample</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_file_formats_8cpp_1a43966662f6cd55d91888b424b8c2372a" kindref="member">sf_subtype_is_integer</ref>(info.<ref refid="struct_s_f___i_n_f_o_1a36a7c3ae9a8229797f19267b4ba07361" kindref="member">format</ref>))<sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesRead<sp/>=<sp/><ref refid="sndfile_8c_1aa82f7bc9ad5058e9910c88c49a389777" kindref="member">sf_readf_short</ref>(sf,<sp/>(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*)data,<sp/>len);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(format<sp/>==<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792af7d5dcd7629454f6c6f3d7be44068a5f" kindref="member">int24Sample</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_file_formats_8cpp_1a43966662f6cd55d91888b424b8c2372a" kindref="member">sf_subtype_is_integer</ref>(info.<ref refid="struct_s_f___i_n_f_o_1a36a7c3ae9a8229797f19267b4ba07361" kindref="member">format</ref>))</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesRead<sp/>=<sp/><ref refid="sndfile_8c_1a230c718b72261f7dc2de027f73c57cd1" kindref="member">sf_readf_int</ref>(sf,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*)data,<sp/>len);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>libsndfile<sp/>gave<sp/>us<sp/>the<sp/>3<sp/>byte<sp/>sample<sp/>in<sp/>the<sp/>3<sp/>most</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>significant<sp/>bytes<sp/>--<sp/>we<sp/>want<sp/>it<sp/>in<sp/>the<sp/>3<sp/>least</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>significant<sp/>bytes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*intPtr<sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*)data;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>framesRead;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++<sp/>)</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intPtr[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>intPtr[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>&gt;&gt;<sp/>8;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Otherwise,<sp/>let<sp/>libsndfile<sp/>handle<sp/>the<sp/>conversion<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>scaling,<sp/>and<sp/>pass<sp/>us<sp/>normalized<sp/>data<sp/>as<sp/>floats.<sp/><sp/>We<sp/>can</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>then<sp/>convert<sp/>to<sp/>whatever<sp/>format<sp/>we<sp/>want.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>framesRead<sp/>=<sp/><ref refid="sndfile_8c_1aee45e707761d55cc2111328451ffc760" kindref="member">sf_readf_float</ref>(sf,<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*)buffer.<ref refid="class_sample_buffer_1a67109e75aa852d6196692e683d248dcd" kindref="member">ptr</ref>(),<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_sample_format_8cpp_1a2819d83a15a7623e52e6562b3329471c" kindref="member">CopySamples</ref>(buffer.<ref refid="class_sample_buffer_1a67109e75aa852d6196692e683d248dcd" kindref="member">ptr</ref>(),<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>,</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref>)data,<sp/>format,<sp/>framesRead);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sndfile_8c_1a276b87553823c937c62492206f0ed81e" kindref="member">sf_close</ref>(sf);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>framesRead;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="470"><highlight class="normal">}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472" refid="class_simple_block_file_1a7bd4085ca1c7b284cbe79bd2353a0f60" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_simple_block_file_1a7bd4085ca1c7b284cbe79bd2353a0f60" kindref="member">SimpleBlockFile::SaveXML</ref>(<ref refid="class_x_m_l_writer" kindref="compound">XMLWriter</ref><sp/>&amp;xmlFile)</highlight></codeline>
<codeline lineno="473"><highlight class="normal">{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a38abb8ecc4a15db0272d43ff8bec1369" kindref="member">StartTag</ref>(wxT(</highlight><highlight class="stringliteral">&quot;simpleblockfile&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a631a2d04a50680a64f0ae48a61d4a4d1" kindref="member">WriteAttr</ref>(wxT(</highlight><highlight class="stringliteral">&quot;filename&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_block_file_1ab4d7e450d154ad4ccee1d0f4a26093f0" kindref="member">mFileName</ref>.GetFullName());</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a631a2d04a50680a64f0ae48a61d4a4d1" kindref="member">WriteAttr</ref>(wxT(</highlight><highlight class="stringliteral">&quot;len&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_block_file_1a732a85cd5906a03310bd23fc91b83d40" kindref="member">mLen</ref>);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a631a2d04a50680a64f0ae48a61d4a4d1" kindref="member">WriteAttr</ref>(wxT(</highlight><highlight class="stringliteral">&quot;min&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_block_file_1a733757c3a2c9d2e51beab8acbc86f913" kindref="member">mMin</ref>);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a631a2d04a50680a64f0ae48a61d4a4d1" kindref="member">WriteAttr</ref>(wxT(</highlight><highlight class="stringliteral">&quot;max&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_block_file_1abda14ef73ea31a585b26e289a99ac356" kindref="member">mMax</ref>);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a631a2d04a50680a64f0ae48a61d4a4d1" kindref="member">WriteAttr</ref>(wxT(</highlight><highlight class="stringliteral">&quot;rms&quot;</highlight><highlight class="normal">),<sp/><ref refid="class_block_file_1a9b863f624b2d76a5ec29390cebed698f" kindref="member">mRMS</ref>);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/>xmlFile.<ref refid="class_x_m_l_writer_1a5c4e63c2c9762b6a04ad4e48bb117678" kindref="member">EndTag</ref>(wxT(</highlight><highlight class="stringliteral">&quot;simpleblockfile&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="483"><highlight class="normal">}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight><highlight class="comment">//<sp/>BuildFromXML<sp/>methods<sp/>should<sp/>always<sp/>return<sp/>a<sp/>BlockFile,<sp/>not<sp/>NULL,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight><highlight class="comment">//<sp/>even<sp/>if<sp/>the<sp/>result<sp/>is<sp/>flawed<sp/>(e.g.,<sp/>refers<sp/>to<sp/>nonexistent<sp/>file),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight><highlight class="comment">//<sp/>as<sp/>testing<sp/>will<sp/>be<sp/>done<sp/>in<sp/>DirManager::ProjectFSCK().</highlight></codeline>
<codeline lineno="489" refid="class_simple_block_file_1a9aba59fe42619754b5976ed85af2a194" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><ref refid="class_block_file" kindref="compound">BlockFile</ref><sp/>*<ref refid="class_simple_block_file_1a9aba59fe42619754b5976ed85af2a194" kindref="member">SimpleBlockFile::BuildFromXML</ref>(<ref refid="class_dir_manager" kindref="compound">DirManager</ref><sp/>&amp;dm,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxChar<sp/>**attrs)</highlight></codeline>
<codeline lineno="490"><highlight class="normal">{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/>wxFileName<sp/>fileName;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref><sp/>=<sp/>0.0f,<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref><sp/>=<sp/>0.0f,<sp/>rms<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dblValue;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>nValue;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(*attrs)</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxChar<sp/>*attr<sp/>=<sp/><sp/>*attrs++;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxChar<sp/>*<ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref><sp/>=<sp/>*attrs++;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!value)</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>strValue<sp/>=<sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wxStricmp(attr,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;filename&quot;</highlight><highlight class="normal">))<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Can&apos;t<sp/>use<sp/>XMLValueChecker::IsGoodFileName<sp/>here,<sp/>but<sp/>do<sp/>part<sp/>of<sp/>its<sp/>test.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_x_m_l_value_checker_1a05d805de92f483d377f1822839dd3700" kindref="member">XMLValueChecker::IsGoodFileString</ref>(strValue)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(strValue.Length()<sp/>+<sp/>1<sp/>+<sp/>dm.<ref refid="class_dir_manager_1a48fbc0b9327fdbcad0486eaba94f27db" kindref="member">GetProjectDataDir</ref>().Length()<sp/>&lt;=<sp/><ref refid="_audacity_8h_1a374d1a54d41c48ed6cb67cb2b912fed2" kindref="member">PLATFORM_MAX_PATH</ref>))</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!dm.<ref refid="class_dir_manager_1a9d9857b644d36aa53b8a670c3589e0ad" kindref="member">AssignFile</ref>(fileName,<sp/>strValue,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>sure<sp/>fileName<sp/>is<sp/>back<sp/>to<sp/>uninitialized<sp/>state<sp/>so<sp/>we<sp/>can<sp/>detect<sp/>problem<sp/>later.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileName.Clear();</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wxStrcmp(attr,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;len&quot;</highlight><highlight class="normal">))<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_x_m_l_value_checker_1adc0cf9db4d3e99dfdc8c82144e129103" kindref="member">XMLValueChecker::IsGoodInt</ref>(strValue)<sp/>&amp;&amp;<sp/>strValue.ToLong(&amp;nValue)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nValue<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>nValue;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_x_m_l_value_checker_1adf2bcfece118875538ca2bdd528b8c23" kindref="member">XMLValueChecker::IsGoodString</ref>(strValue)<sp/>&amp;&amp;<sp/><ref refid="class_internat_1ab79e779c79e9ddf82270cb78e78d638d" kindref="member">Internat::CompatibleToDouble</ref>(strValue,<sp/>&amp;dblValue))</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>double<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wxStricmp(attr,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;min&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min<sp/>=<sp/>dblValue;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wxStricmp(attr,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;max&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref><sp/>=<sp/>dblValue;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!wxStricmp(attr,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;rms&quot;</highlight><highlight class="normal">))<sp/>&amp;&amp;<sp/>(dblValue<sp/>&gt;=<sp/>0.0))</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rms<sp/>=<sp/>dblValue;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_simple_block_file_1a10f32728f1bed4cfeca2c2fde88d3395" kindref="member">SimpleBlockFile</ref>(fileName,<sp/>len,<sp/>min,<sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>,<sp/>rms);</highlight></codeline>
<codeline lineno="530"><highlight class="normal">}</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="535" refid="class_simple_block_file_1afb58bbeb0e3c55dea13ba4db37f8acb4" refkind="member"><highlight class="normal"><ref refid="class_block_file" kindref="compound">BlockFile</ref><sp/>*<ref refid="class_simple_block_file_1afb58bbeb0e3c55dea13ba4db37f8acb4" kindref="member">SimpleBlockFile::Copy</ref>(wxFileName<sp/>newFileName)</highlight></codeline>
<codeline lineno="536"><highlight class="normal">{</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_block_file" kindref="compound">BlockFile</ref><sp/>*newBlockFile<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_simple_block_file_1a10f32728f1bed4cfeca2c2fde88d3395" kindref="member">SimpleBlockFile</ref>(newFileName,<sp/><ref refid="class_block_file_1a732a85cd5906a03310bd23fc91b83d40" kindref="member">mLen</ref>,</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_block_file_1a733757c3a2c9d2e51beab8acbc86f913" kindref="member">mMin</ref>,<sp/><ref refid="class_block_file_1abda14ef73ea31a585b26e289a99ac356" kindref="member">mMax</ref>,<sp/><ref refid="class_block_file_1a9b863f624b2d76a5ec29390cebed698f" kindref="member">mRMS</ref>);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>newBlockFile;</highlight></codeline>
<codeline lineno="541"><highlight class="normal">}</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543" refid="class_simple_block_file_1a22780e266548fb57b029706726f01472" refkind="member"><highlight class="normal">wxLongLong<sp/><ref refid="class_simple_block_file_1a22780e266548fb57b029706726f01472" kindref="member">SimpleBlockFile::GetSpaceUsage</ref>()</highlight></codeline>
<codeline lineno="544"><highlight class="normal">{</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_simple_block_file_1aa847bc2ca7232696fbebf79e6a72443b" kindref="member">mCache</ref>.<ref refid="struct_simple_block_file_cache_1a2090e839cbaa60de4f78a735a8c53875" kindref="member">active</ref><sp/>&amp;&amp;<sp/><ref refid="class_simple_block_file_1aa847bc2ca7232696fbebf79e6a72443b" kindref="member">mCache</ref>.<ref refid="struct_simple_block_file_cache_1a9e8bec65ced21f444549093313266110" kindref="member">needWrite</ref>)</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>don&apos;t<sp/>know<sp/>space<sp/>usage<sp/>yet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>know<sp/>the<sp/>format,<sp/>so<sp/>it<sp/>must<sp/>be<sp/>read<sp/>from<sp/>the<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_simple_block_file_1ad40b5fc5ff95595d2717c0fa0dd75596" kindref="member">mFormat</ref><sp/>==<sp/>(<ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792" kindref="member">sampleFormat</ref>)<sp/>0)</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>sample<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxFFile<sp/>file(<ref refid="class_block_file_1ab4d7e450d154ad4ccee1d0f4a26093f0" kindref="member">mFileName</ref>.GetFullPath(),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!file.IsOpened())</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Don&apos;t<sp/>read<sp/>into<sp/>cache<sp/>if<sp/>file<sp/>not<sp/>available</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structau_header" kindref="compound">auHeader</ref><sp/>header;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(file.Read(&amp;header,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(header))<sp/>!=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(header))</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Corrupt<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxUint32<sp/><ref refid="lib_2expat_8h_1a4dfeb87c47b4dde2571b24c1a6798056" kindref="member">encoding</ref>;</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(header.<ref refid="structau_header_1a2308c1a7789da6548bf997f029c831e1" kindref="member">magic</ref><sp/>==<sp/>0x2e736e64)</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>encoding<sp/>=<sp/>header.<ref refid="structau_header_1ad277236bba519b9f329d7bbba373c30e" kindref="member">encoding</ref>;<sp/></highlight><highlight class="comment">//<sp/>correct<sp/>endianness</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>encoding<sp/>=<sp/>SwapUintEndianess(header.<ref refid="structau_header_1ad277236bba519b9f329d7bbba373c30e" kindref="member">encoding</ref>);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(encoding)</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_simple_block_file_8h_1a27c1625aa5fde74a6dec3d424733c579a92436ddba81fed70fd6f83dbc473d396" kindref="member">AU_SAMPLE_FORMAT_16</ref>:</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_simple_block_file_1ad40b5fc5ff95595d2717c0fa0dd75596" kindref="member">mFormat</ref><sp/>=<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba99d110ae36be71bbf3cb9ad3af4550" kindref="member">int16Sample</ref>;</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="_simple_block_file_8h_1a27c1625aa5fde74a6dec3d424733c579a3ee1ced81b52c1892921d451cbb1a446" kindref="member">AU_SAMPLE_FORMAT_24</ref>:</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_simple_block_file_1ad40b5fc5ff95595d2717c0fa0dd75596" kindref="member">mFormat</ref><sp/>=<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792af7d5dcd7629454f6c6f3d7be44068a5f" kindref="member">int24Sample</ref>;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>floatSample<sp/>is<sp/>a<sp/>safe<sp/>default<sp/>(we<sp/>will<sp/>never<sp/>loose<sp/>data)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_simple_block_file_1ad40b5fc5ff95595d2717c0fa0dd75596" kindref="member">mFormat</ref><sp/>=<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>file.Close();</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structau_header" kindref="compound">auHeader</ref>)<sp/>+<sp/></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_block_file_1a4c81c30a570684d5287ed58acd3da259" kindref="member">mSummaryInfo</ref>.<ref refid="class_summary_info_1a4d7f7e6b04369c78c001cb46390a9d96" kindref="member">totalSummaryBytes</ref><sp/>+</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="class_block_file_1a93fa23bb9606cafba976f2c0b818719c" kindref="member">GetLength</ref>()<sp/>*<sp/><ref refid="_sample_format_8h_1a85f4e26b4239a2569a5cf4a174488023" kindref="member">SAMPLE_SIZE_DISK</ref>(<ref refid="class_simple_block_file_1ad40b5fc5ff95595d2717c0fa0dd75596" kindref="member">mFormat</ref>));</highlight></codeline>
<codeline lineno="597"><highlight class="normal">}</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="599" refid="class_simple_block_file_1ad0ed207e9d4d21558f14b0e0df7cbb72" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_simple_block_file_1ad0ed207e9d4d21558f14b0e0df7cbb72" kindref="member">SimpleBlockFile::Recover</ref>(){</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/>wxFFile<sp/>file(<ref refid="class_block_file_1ab4d7e450d154ad4ccee1d0f4a26093f0" kindref="member">mFileName</ref>.GetFullPath(),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;wb&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!file.IsOpened()<sp/>){</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Can&apos;t<sp/>do<sp/>anything<sp/>else.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><ref refid="structau_header" kindref="compound">auHeader</ref><sp/>header;</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/>header.<ref refid="structau_header_1a2308c1a7789da6548bf997f029c831e1" kindref="member">magic</ref><sp/>=<sp/>0x2e736e64;</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/>header.<ref refid="structau_header_1abe11be3f22c3abd4371a9b0e092120b6" kindref="member">dataOffset</ref><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structau_header" kindref="compound">auHeader</ref>)<sp/>+<sp/><ref refid="class_block_file_1a4c81c30a570684d5287ed58acd3da259" kindref="member">mSummaryInfo</ref>.<ref refid="class_summary_info_1a4d7f7e6b04369c78c001cb46390a9d96" kindref="member">totalSummaryBytes</ref>;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>dataSize<sp/>is<sp/>optional,<sp/>and<sp/>we<sp/>opt<sp/>out</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/>header.<ref refid="structau_header_1a25d33bd6cd02c40e9bd85a48510a9a6c" kindref="member">dataSize</ref><sp/>=<sp/>0xffffffff;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/>header.<ref refid="structau_header_1ad277236bba519b9f329d7bbba373c30e" kindref="member">encoding</ref><sp/>=<sp/><ref refid="_simple_block_file_8h_1a27c1625aa5fde74a6dec3d424733c579a92436ddba81fed70fd6f83dbc473d396" kindref="member">AU_SAMPLE_FORMAT_16</ref>;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/>header.<ref refid="structau_header_1a8855c915576fe2514d65d47d6e676f7b" kindref="member">sampleRate</ref><sp/>=<sp/>44100;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/>header.<ref refid="structau_header_1abbf62d3e4696972c44867867aa180283" kindref="member">channels</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/>file.Write(&amp;header,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(header));</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;<ref refid="class_block_file_1a4c81c30a570684d5287ed58acd3da259" kindref="member">mSummaryInfo</ref>.<ref refid="class_summary_info_1a4d7f7e6b04369c78c001cb46390a9d96" kindref="member">totalSummaryBytes</ref>;i++)</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>file.Write(wxT(</highlight><highlight class="stringliteral">&quot;\0&quot;</highlight><highlight class="normal">),1);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;<ref refid="class_block_file_1a732a85cd5906a03310bd23fc91b83d40" kindref="member">mLen</ref>*2;i++)</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>file.Write(wxT(</highlight><highlight class="stringliteral">&quot;\0&quot;</highlight><highlight class="normal">),1);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal">}</highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight></codeline>
<codeline lineno="627" refid="class_simple_block_file_1a2c6893a7505bab05c0baac204f68ff1d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_simple_block_file_1a2c6893a7505bab05c0baac204f68ff1d" kindref="member">SimpleBlockFile::WriteCacheToDisk</ref>()</highlight></codeline>
<codeline lineno="628"><highlight class="normal">{</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_simple_block_file_1abc2e6b30cab196f8bdd325c586176375" kindref="member">GetNeedWriteCacheToDisk</ref>())</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_simple_block_file_1a80703489b7ca1677e8823273f5537c9c" kindref="member">WriteSimpleBlockFile</ref>(<ref refid="class_simple_block_file_1aa847bc2ca7232696fbebf79e6a72443b" kindref="member">mCache</ref>.<ref refid="struct_simple_block_file_cache_1a1726dd879f6f356eff8165c04dc039d2" kindref="member">sampleData</ref>,<sp/><ref refid="class_block_file_1a732a85cd5906a03310bd23fc91b83d40" kindref="member">mLen</ref>,<sp/><ref refid="class_simple_block_file_1aa847bc2ca7232696fbebf79e6a72443b" kindref="member">mCache</ref>.<ref refid="struct_simple_block_file_cache_1aa4ce205b9532adab61459334240a216c" kindref="member">format</ref>,</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_simple_block_file_1aa847bc2ca7232696fbebf79e6a72443b" kindref="member">mCache</ref>.<ref refid="struct_simple_block_file_cache_1a4e097d86a1b1b1bada818e5fc6ae7d60" kindref="member">summaryData</ref>))</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_simple_block_file_1aa847bc2ca7232696fbebf79e6a72443b" kindref="member">mCache</ref>.<ref refid="struct_simple_block_file_cache_1a9e8bec65ced21f444549093313266110" kindref="member">needWrite</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="635"><highlight class="normal">}</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637" refid="class_simple_block_file_1abc2e6b30cab196f8bdd325c586176375" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_simple_block_file_1abc2e6b30cab196f8bdd325c586176375" kindref="member">SimpleBlockFile::GetNeedWriteCacheToDisk</ref>()</highlight></codeline>
<codeline lineno="638"><highlight class="normal">{</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_simple_block_file_1aa847bc2ca7232696fbebf79e6a72443b" kindref="member">mCache</ref>.<ref refid="struct_simple_block_file_cache_1a2090e839cbaa60de4f78a735a8c53875" kindref="member">active</ref><sp/>&amp;&amp;<sp/><ref refid="class_simple_block_file_1aa847bc2ca7232696fbebf79e6a72443b" kindref="member">mCache</ref>.<ref refid="struct_simple_block_file_cache_1a9e8bec65ced21f444549093313266110" kindref="member">needWrite</ref>;</highlight></codeline>
<codeline lineno="640"><highlight class="normal">}</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642" refid="class_simple_block_file_1a3c7bc7cce33cbbd6b4120ed3005b988f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_simple_block_file_1a3c7bc7cce33cbbd6b4120ed3005b988f" kindref="member">SimpleBlockFile::GetCache</ref>()</highlight></codeline>
<codeline lineno="643"><highlight class="normal">{</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DEPRECATED_AUDIO_CACHE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>See<sp/>http://bugzilla.audacityteam.org/show_bug.cgi?id=545.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>cacheBlockFiles<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(wxT(</highlight><highlight class="stringliteral">&quot;/Directories/CacheBlockFiles&quot;</highlight><highlight class="normal">),<sp/>&amp;cacheBlockFiles);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!cacheBlockFiles)</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lowMem<sp/>=<sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(wxT(</highlight><highlight class="stringliteral">&quot;/Directories/CacheLowMem&quot;</highlight><highlight class="normal">),<sp/>16<ref refid="layer3_8c_1a741dbb4d8e78c3cb69915db7282fcec0" kindref="member">l</ref>);</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lowMem<sp/>&lt;<sp/>16)<sp/>{</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lowMem<sp/>=<sp/>16;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/>lowMem<sp/>&lt;&lt;=<sp/>20;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="_dir_manager_8cpp_1a240a315d6a965fc3aac8d536cf4a9834" kindref="member">GetFreeMemory</ref>()<sp/>&gt;<sp/>lowMem);</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/src/blockfile/SimpleBlockFile.cpp"/>
  </compounddef>
</doxygen>
