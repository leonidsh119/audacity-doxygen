<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_simple_mono_8cpp" kind="file" language="C++">
    <compoundname>SimpleMono.cpp</compoundname>
    <includes refid="_audacity_8h" local="yes">../Audacity.h</includes>
    <includes refid="_simple_mono_8h" local="yes">SimpleMono.h</includes>
    <includes refid="_wave_track_8h" local="yes">../WaveTrack.h</includes>
    <includes local="no">math.h</includes>
    <incdepgraph>
      <node id="44052">
        <label>WaveClip.h</label>
        <link refid="_wave_clip_8h"/>
        <childnode refid="44008" relation="include">
        </childnode>
        <childnode refid="44047" relation="include">
        </childnode>
        <childnode refid="44037" relation="include">
        </childnode>
        <childnode refid="44053" relation="include">
        </childnode>
        <childnode refid="44048" relation="include">
        </childnode>
        <childnode refid="44029" relation="include">
        </childnode>
        <childnode refid="44055" relation="include">
        </childnode>
        <childnode refid="44046" relation="include">
        </childnode>
        <childnode refid="44036" relation="include">
        </childnode>
        <childnode refid="44056" relation="include">
        </childnode>
        <childnode refid="44057" relation="include">
        </childnode>
        <childnode refid="44044" relation="include">
        </childnode>
      </node>
      <node id="44039">
        <label>wx/gauge.h</label>
      </node>
      <node id="44051">
        <label>wx/ffile.h</label>
      </node>
      <node id="44045">
        <label>wx/event.h</label>
      </node>
      <node id="44026">
        <label>wx/cmdline.h</label>
      </node>
      <node id="44022">
        <label>audacity/EffectInterface.h</label>
        <link refid="_effect_interface_8h"/>
        <childnode refid="44020" relation="include">
        </childnode>
        <childnode refid="44023" relation="include">
        </childnode>
        <childnode refid="44019" relation="include">
        </childnode>
        <childnode refid="44024" relation="include">
        </childnode>
        <childnode refid="44028" relation="include">
        </childnode>
      </node>
      <node id="44035">
        <label>../Internat.h</label>
        <link refid="_internat_8h"/>
        <childnode refid="44021" relation="include">
        </childnode>
        <childnode refid="44017" relation="include">
        </childnode>
        <childnode refid="44036" relation="include">
        </childnode>
      </node>
      <node id="44048">
        <label>xml/XMLTagHandler.h</label>
        <link refid="_x_m_l_tag_handler_8h"/>
        <childnode refid="44008" relation="include">
        </childnode>
        <childnode refid="44017" relation="include">
        </childnode>
        <childnode refid="44049" relation="include">
        </childnode>
        <childnode refid="44050" relation="include">
        </childnode>
      </node>
      <node id="44032">
        <label>wx/wxchar.h</label>
      </node>
      <node id="44053">
        <label>ondemand/ODTaskThread.h</label>
        <link refid="_o_d_task_thread_8h"/>
        <childnode refid="44054" relation="include">
        </childnode>
        <childnode refid="44008" relation="include">
        </childnode>
      </node>
      <node id="44019">
        <label>audacity/ConfigInterface.h</label>
        <link refid="_config_interface_8h"/>
        <childnode refid="44020" relation="include">
        </childnode>
      </node>
      <node id="44041">
        <label>wx/utils.h</label>
      </node>
      <node id="44007">
        <label>C:/_dev/OpenU/Audacity/audacity/src/effects/SimpleMono.cpp</label>
        <link refid="SimpleMono.cpp"/>
        <childnode refid="44008" relation="include">
        </childnode>
        <childnode refid="44009" relation="include">
        </childnode>
        <childnode refid="44042" relation="include">
        </childnode>
        <childnode refid="44033" relation="include">
        </childnode>
      </node>
      <node id="44038">
        <label>wx/evtloop.h</label>
      </node>
      <node id="44029">
        <label>../Experimental.h</label>
        <link refid="_experimental_8h"/>
        <childnode refid="44030" relation="include">
        </childnode>
      </node>
      <node id="44046">
        <label>wx/gdicmn.h</label>
      </node>
      <node id="44034">
        <label>../Shuttle.h</label>
        <link refid="_shuttle_8h"/>
      </node>
      <node id="44027">
        <label>wx/fileconf.h</label>
      </node>
      <node id="44058">
        <label>WaveTrackLocation.h</label>
        <link refid="_wave_track_location_8h"/>
      </node>
      <node id="44055">
        <label>RealFFTf.h</label>
        <link refid="_real_f_f_tf_8h"/>
        <childnode refid="44029" relation="include">
        </childnode>
      </node>
      <node id="44040">
        <label>wx/stattext.h</label>
      </node>
      <node id="44023">
        <label>audacity/IdentInterface.h</label>
        <link refid="_ident_interface_8h"/>
        <childnode refid="44020" relation="include">
        </childnode>
      </node>
      <node id="44056">
        <label>wx/list.h</label>
      </node>
      <node id="44030">
        <label>wx/defs.h</label>
      </node>
      <node id="44009">
        <label>SimpleMono.h</label>
        <link refid="_simple_mono_8h"/>
        <childnode refid="44010" relation="include">
        </childnode>
      </node>
      <node id="44016">
        <label>wx/intl.h</label>
      </node>
      <node id="44037">
        <label>../widgets/ProgressDialog.h</label>
        <link refid="_progress_dialog_8h"/>
        <childnode refid="44008" relation="include">
        </childnode>
        <childnode refid="44030" relation="include">
        </childnode>
        <childnode refid="44028" relation="include">
        </childnode>
        <childnode refid="44038" relation="include">
        </childnode>
        <childnode refid="44039" relation="include">
        </childnode>
        <childnode refid="44040" relation="include">
        </childnode>
        <childnode refid="44041" relation="include">
        </childnode>
      </node>
      <node id="44014">
        <label>wx/bmpbuttn.h</label>
      </node>
      <node id="44020">
        <label>audacity/Types.h</label>
        <link refid="include_2audacity_2_types_8h"/>
        <childnode refid="44017" relation="include">
        </childnode>
        <childnode refid="44021" relation="include">
        </childnode>
      </node>
      <node id="44028">
        <label>wx/dialog.h</label>
      </node>
      <node id="44024">
        <label>audacity/EffectAutomationParameters.h</label>
        <link refid="_effect_automation_parameters_8h"/>
        <childnode refid="44025" relation="include">
        </childnode>
        <childnode refid="44026" relation="include">
        </childnode>
        <childnode refid="44027" relation="include">
        </childnode>
        <childnode refid="44016" relation="include">
        </childnode>
      </node>
      <node id="44008">
        <label>../Audacity.h</label>
        <link refid="_audacity_8h"/>
      </node>
      <node id="44044">
        <label>vector</label>
      </node>
      <node id="44010">
        <label>Effect.h</label>
        <link refid="src_2effects_2_effect_8h"/>
        <childnode refid="44008" relation="include">
        </childnode>
        <childnode refid="44011" relation="include">
        </childnode>
        <childnode refid="44013" relation="include">
        </childnode>
        <childnode refid="44014" relation="include">
        </childnode>
        <childnode refid="44015" relation="include">
        </childnode>
        <childnode refid="44016" relation="include">
        </childnode>
        <childnode refid="44017" relation="include">
        </childnode>
        <childnode refid="44018" relation="include">
        </childnode>
        <childnode refid="44019" relation="include">
        </childnode>
        <childnode refid="44022" relation="include">
        </childnode>
        <childnode refid="44029" relation="include">
        </childnode>
        <childnode refid="44031" relation="include">
        </childnode>
        <childnode refid="44034" relation="include">
        </childnode>
        <childnode refid="44035" relation="include">
        </childnode>
        <childnode refid="44037" relation="include">
        </childnode>
      </node>
      <node id="44015">
        <label>wx/dynarray.h</label>
      </node>
      <node id="44017">
        <label>wx/string.h</label>
      </node>
      <node id="44057">
        <label>wx/msgdlg.h</label>
      </node>
      <node id="44033">
        <label>math.h</label>
      </node>
      <node id="44031">
        <label>../SelectedRegion.h</label>
        <link refid="_selected_region_8h"/>
        <childnode refid="44008" relation="include">
        </childnode>
        <childnode refid="44029" relation="include">
        </childnode>
        <childnode refid="44030" relation="include">
        </childnode>
        <childnode refid="44032" relation="include">
        </childnode>
        <childnode refid="44033" relation="include">
        </childnode>
      </node>
      <node id="44021">
        <label>wx/arrstr.h</label>
      </node>
      <node id="44043">
        <label>Track.h</label>
        <link refid="src_2track_8h"/>
        <childnode refid="44008" relation="include">
        </childnode>
        <childnode refid="44011" relation="include">
        </childnode>
        <childnode refid="44044" relation="include">
        </childnode>
        <childnode refid="44015" relation="include">
        </childnode>
        <childnode refid="44045" relation="include">
        </childnode>
        <childnode refid="44046" relation="include">
        </childnode>
        <childnode refid="44036" relation="include">
        </childnode>
        <childnode refid="44017" relation="include">
        </childnode>
        <childnode refid="44029" relation="include">
        </childnode>
        <childnode refid="44047" relation="include">
        </childnode>
        <childnode refid="44048" relation="include">
        </childnode>
      </node>
      <node id="44054">
        <label>wx/thread.h</label>
      </node>
      <node id="44018">
        <label>wx/tglbtn.h</label>
      </node>
      <node id="44011">
        <label>../MemoryX.h</label>
        <link refid="_memory_x_8h"/>
        <childnode refid="44012" relation="include">
        </childnode>
      </node>
      <node id="44013">
        <label>set</label>
      </node>
      <node id="44036">
        <label>wx/longlong.h</label>
      </node>
      <node id="44042">
        <label>../WaveTrack.h</label>
        <link refid="_wave_track_8h"/>
        <childnode refid="44043" relation="include">
        </childnode>
        <childnode refid="44047" relation="include">
        </childnode>
        <childnode refid="44052" relation="include">
        </childnode>
        <childnode refid="44029" relation="include">
        </childnode>
        <childnode refid="44037" relation="include">
        </childnode>
        <childnode refid="44044" relation="include">
        </childnode>
        <childnode refid="44046" relation="include">
        </childnode>
        <childnode refid="44036" relation="include">
        </childnode>
        <childnode refid="44054" relation="include">
        </childnode>
        <childnode refid="44058" relation="include">
        </childnode>
      </node>
      <node id="44049">
        <label>stdio.h</label>
      </node>
      <node id="44047">
        <label>SampleFormat.h</label>
        <link refid="_sample_format_8h"/>
        <childnode refid="44008" relation="include">
        </childnode>
        <childnode refid="44030" relation="include">
        </childnode>
        <childnode refid="44020" relation="include">
        </childnode>
      </node>
      <node id="44025">
        <label>locale.h</label>
      </node>
      <node id="44012">
        <label>memory</label>
      </node>
      <node id="44050">
        <label>XMLWriter.h</label>
        <link refid="_x_m_l_writer_8h"/>
        <childnode refid="44021" relation="include">
        </childnode>
        <childnode refid="44015" relation="include">
        </childnode>
        <childnode refid="44051" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>Audacity:<sp/>A<sp/>Digital<sp/>Audio<sp/>Editor</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>SimpleMono.cpp</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>Dominic<sp/>Mazzoni</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment">*******************************************************************/</highlight><highlight class="comment">/*******************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Audacity.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_simple_mono_8h" kindref="compound">SimpleMono.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../WaveTrack.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="class_effect_simple_mono_1a6eb96b91847f44738f632b52af2e5518" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_effect_simple_mono_1a6eb96b91847f44738f632b52af2e5518" kindref="member">EffectSimpleMono::Process</ref>()</highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Iterate<sp/>over<sp/>each<sp/>track</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/>this-&gt;<ref refid="class_effect_1a039810b41ba1f3e233360caeb48f769d" kindref="member">CopyInputTracks</ref>();<sp/></highlight><highlight class="comment">//<sp/>Set<sp/>up<sp/>mOutputTracks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bGoodResult<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_selected_track_list_of_kind_iterator" kindref="compound">SelectedTrackListOfKindIterator</ref><sp/>iter(<ref refid="class_track_1a4a6604845139575dfc25be299aeb60efab39033be088537a007532668cb6d16a8" kindref="member">Track::Wave</ref>,<sp/><ref refid="class_effect_1a9fc18f5889f07570bf0f5dff7bb0f625" kindref="member">mOutputTracks</ref>);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*<sp/>pOutWaveTrack<sp/>=<sp/>(<ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*)(iter.<ref refid="class_track_list_cond_iterator_1a1b09130ef5d92e19a60db05933d89ad5" kindref="member">First</ref>());</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_effect_simple_mono_1abc00b0896f8d699e243bfe9fb5b5f25f" kindref="member">mCurTrackNum</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(pOutWaveTrack<sp/>!=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Get<sp/>start<sp/>and<sp/>end<sp/>times<sp/>from<sp/>track</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>trackStart<sp/>=<sp/>pOutWaveTrack-&gt;<ref refid="class_wave_track_1acd39f4f01272e112a2d132e48b60678e" kindref="member">GetStartTime</ref>();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>trackEnd<sp/>=<sp/>pOutWaveTrack-&gt;<ref refid="class_wave_track_1a73f81dee4dcb79e0df3bb6a85b866ae1" kindref="member">GetEndTime</ref>();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Set<sp/>the<sp/>current<sp/>bounds<sp/>to<sp/>whichever<sp/>left<sp/>marker<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//greater<sp/>and<sp/>whichever<sp/>right<sp/>marker<sp/>is<sp/>less:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_effect_simple_mono_1a75fecc2a0d112702d8276f59011d95fe" kindref="member">mCurT0</ref><sp/>=<sp/><ref refid="class_effect_1ae83563966df5c0b3aba90dd183b15b53" kindref="member">mT0</ref><sp/>&lt;<sp/>trackStart?<sp/>trackStart:<sp/><ref refid="class_effect_1ae83563966df5c0b3aba90dd183b15b53" kindref="member">mT0</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_effect_simple_mono_1a9e1c996c09d385cb6ee67f2af4d5175b" kindref="member">mCurT1</ref><sp/>=<sp/><ref refid="class_effect_1a7681f0ae7a8245659b002078e78ef146" kindref="member">mT1</ref><sp/>&gt;<sp/>trackEnd?<sp/>trackEnd:<sp/><ref refid="class_effect_1a7681f0ae7a8245659b002078e78ef146" kindref="member">mT1</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Process<sp/>only<sp/>if<sp/>the<sp/>right<sp/>marker<sp/>is<sp/>to<sp/>the<sp/>right<sp/>of<sp/>the<sp/>left<sp/>marker</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_effect_simple_mono_1a9e1c996c09d385cb6ee67f2af4d5175b" kindref="member">mCurT1</ref><sp/>&gt;<sp/><ref refid="class_effect_simple_mono_1a75fecc2a0d112702d8276f59011d95fe" kindref="member">mCurT0</ref>)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Transform<sp/>the<sp/>marker<sp/>timepoints<sp/>to<sp/>samples</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref><sp/>=<sp/>pOutWaveTrack-&gt;<ref refid="class_wave_track_1afe621ba06a0396725da44e937143972f" kindref="member">TimeToLongSamples</ref>(<ref refid="class_effect_simple_mono_1a75fecc2a0d112702d8276f59011d95fe" kindref="member">mCurT0</ref>);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref><sp/>=<sp/>pOutWaveTrack-&gt;<ref refid="class_wave_track_1afe621ba06a0396725da44e937143972f" kindref="member">TimeToLongSamples</ref>(<ref refid="class_effect_simple_mono_1a9e1c996c09d385cb6ee67f2af4d5175b" kindref="member">mCurT1</ref>);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Get<sp/>the<sp/>track<sp/>rate<sp/>and<sp/>samples</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_effect_simple_mono_1aed4b321d5b7f4efd6dc11f1e64989629" kindref="member">mCurRate</ref><sp/>=<sp/>pOutWaveTrack-&gt;<ref refid="class_wave_track_1a18bbe6e1bb4b1016c3a3de835c33b8fa" kindref="member">GetRate</ref>();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_effect_simple_mono_1aa1fcb140a38c6df032988cbb1410123f" kindref="member">mCurChannel</ref><sp/>=<sp/>pOutWaveTrack-&gt;<ref refid="class_track_1a9c988f7695a546bf52ee2dc859db0345" kindref="member">GetChannel</ref>();</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//NewTrackSimpleMono()<sp/>will<sp/>returns<sp/>true<sp/>by<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ProcessOne()<sp/>processes<sp/>a<sp/>single<sp/>track</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_effect_simple_mono_1a3d7a2fab684784cb5d74973a55d611ab" kindref="member">NewTrackSimpleMono</ref>()<sp/>||<sp/>!ProcessOne(pOutWaveTrack,<sp/>start,<sp/>end))</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bGoodResult<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Iterate<sp/>to<sp/>the<sp/>next<sp/>track</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pOutWaveTrack<sp/>=<sp/>(<ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*)(iter.<ref refid="class_track_list_cond_iterator_1a9e3f44333f6cc2d0171315d389fb6582" kindref="member">Next</ref>());</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_effect_simple_mono_1abc00b0896f8d699e243bfe9fb5b5f25f" kindref="member">mCurTrackNum</ref>++;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/>this-&gt;<ref refid="class_effect_1af97713f3d7ca2c647d19e1ec4501d12e" kindref="member">ReplaceProcessedTracks</ref>(bGoodResult);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bGoodResult;</highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">//ProcessOne()<sp/>takes<sp/>a<sp/>track,<sp/>transforms<sp/>it<sp/>to<sp/>bunch<sp/>of<sp/>buffer-blocks,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">//and<sp/>executes<sp/>ProcessSimpleMono<sp/>on<sp/>these<sp/>blocks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>EffectSimpleMono::ProcessOne(<ref refid="class_wave_track" kindref="compound">WaveTrack</ref><sp/>*<sp/>track,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>,<sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="convtest_8m_1afb358f48b1646c750fb9da6c6585be2b" kindref="member">end</ref>)</highlight></codeline>
<codeline lineno="83"><highlight class="normal">{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Get<sp/>the<sp/>length<sp/>of<sp/>the<sp/>buffer<sp/>(as<sp/>double).<sp/>len<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//used<sp/>simple<sp/>to<sp/>calculate<sp/>a<sp/>progress<sp/>meter,<sp/>so<sp/>it<sp/>is<sp/>easier</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//to<sp/>make<sp/>it<sp/>a<sp/>double<sp/>now<sp/>than<sp/>it<sp/>is<sp/>to<sp/>do<sp/>it<sp/>later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref><sp/>=<sp/>(double)(end<sp/>-<sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Initiate<sp/>a<sp/>processing<sp/>buffer.<sp/><sp/>This<sp/>buffer<sp/>will<sp/>(most<sp/>likely)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//be<sp/>shorter<sp/>than<sp/>the<sp/>length<sp/>of<sp/>the<sp/>track<sp/>being<sp/>processed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="structbuffer" kindref="compound">buffer</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[track-&gt;<ref refid="class_wave_track_1a59ca00cf8abf1c28d043effec2866870" kindref="member">GetMaxBlockSize</ref>()];</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Go<sp/>through<sp/>the<sp/>track<sp/>one<sp/>buffer<sp/>at<sp/>a<sp/>time.<sp/>s<sp/>counts<sp/>which</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//sample<sp/>the<sp/>current<sp/>buffer<sp/>starts<sp/>at.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/>s<sp/>=<sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(s<sp/>&lt;<sp/>end)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Get<sp/>a<sp/>block<sp/>of<sp/>samples<sp/>(smaller<sp/>than<sp/>the<sp/>size<sp/>of<sp/>the<sp/>buffer)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref><sp/><ref refid="structblock" kindref="compound">block</ref><sp/>=<sp/>track-&gt;<ref refid="class_wave_track_1afe9a831f943117dc2f818d0d003c4475" kindref="member">GetBestBlockSize</ref>(s);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Adjust<sp/>the<sp/>block<sp/>size<sp/>if<sp/>it<sp/>is<sp/>the<sp/>final<sp/>block<sp/>in<sp/>the<sp/>track</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s<sp/>+<sp/>block<sp/>&gt;<sp/>end)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block<sp/>=<sp/>end<sp/>-<sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Get<sp/>the<sp/>samples<sp/>from<sp/>the<sp/>track<sp/>and<sp/>put<sp/>them<sp/>in<sp/>the<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>track-&gt;<ref refid="class_wave_track_1a989e55726466fa1d8ec9aa4322f1c950" kindref="member">Get</ref>((<ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref>)<sp/>buffer,<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>,<sp/>s,<sp/>block);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Process<sp/>the<sp/>buffer.<sp/><sp/>If<sp/>it<sp/>fails,<sp/>clean<sp/>up<sp/>and<sp/>exit.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_effect_simple_mono_1ad7d019cf756bd33a749bc8079764a293" kindref="member">ProcessSimpleMono</ref>(buffer,<sp/>block))<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<ref refid="recplay_8c_1adbbab5cb2248179d231690a1a02ff977" kindref="member">buffer</ref>;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Return<sp/>false<sp/>because<sp/>the<sp/>effect<sp/>failed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Processing<sp/>succeeded.<sp/>copy<sp/>the<sp/>newly-changed<sp/>samples<sp/>back</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//onto<sp/>the<sp/>track.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>track-&gt;<ref refid="class_wave_track_1aea32b02fe3634c9f6d0a79af3da7c987" kindref="member">Set</ref>((<ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref>)<sp/>buffer,<sp/><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792aba7300a3d7158e88f04d5f81e613dde2" kindref="member">floatSample</ref>,<sp/>s,<sp/>block);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Increment<sp/>s<sp/>one<sp/>blockfull<sp/>of<sp/>samples</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>+=<sp/>block;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Update<sp/>the<sp/>Progress<sp/>meter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_effect_1ab24b2dba2e1279c914b0445a1b6129e1" kindref="member">TrackProgress</ref>(<ref refid="class_effect_simple_mono_1abc00b0896f8d699e243bfe9fb5b5f25f" kindref="member">mCurTrackNum</ref>,<sp/>(s<sp/>-<sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>)<sp/>/<sp/>len))<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<ref refid="recplay_8c_1adbbab5cb2248179d231690a1a02ff977" kindref="member">buffer</ref>;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Clean<sp/>up<sp/>the<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<ref refid="recplay_8c_1adbbab5cb2248179d231690a1a02ff977" kindref="member">buffer</ref>;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Return<sp/>true<sp/>because<sp/>the<sp/>effect<sp/>processing<sp/>succeeded.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">//null<sp/>implementation<sp/>of<sp/>NewTrackSimpleMono</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="class_effect_simple_mono_1a3d7a2fab684784cb5d74973a55d611ab" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_effect_simple_mono_1a3d7a2fab684784cb5d74973a55d611ab" kindref="member">EffectSimpleMono::NewTrackSimpleMono</ref>()</highlight></codeline>
<codeline lineno="139"><highlight class="normal">{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/src/effects/SimpleMono.cpp"/>
  </compounddef>
</doxygen>
