<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_batch_commands_8cpp" kind="file" language="C++">
    <compoundname>BatchCommands.cpp</compoundname>
    <includes refid="_audacity_8h" local="yes">Audacity.h</includes>
    <includes refid="_batch_commands_8h" local="yes">BatchCommands.h</includes>
    <includes local="no">wx/defs.h</includes>
    <includes local="no">wx/dir.h</includes>
    <includes local="no">wx/msgdlg.h</includes>
    <includes local="no">wx/filedlg.h</includes>
    <includes local="no">wx/textfile.h</includes>
    <includes refid="_project_8h" local="yes">Project.h</includes>
    <includes refid="_command_manager_8h" local="yes">commands/CommandManager.h</includes>
    <includes refid="_effect_manager_8h" local="yes">effects/EffectManager.h</includes>
    <includes refid="_file_names_8h" local="yes">FileNames.h</includes>
    <includes refid="_internat_8h" local="yes">Internat.h</includes>
    <includes refid="_plugin_manager_8h" local="yes">PluginManager.h</includes>
    <includes refid="_prefs_8h" local="yes">Prefs.h</includes>
    <includes refid="_shuttle_8h" local="yes">Shuttle.h</includes>
    <includes refid="_export_f_l_a_c_8h" local="yes">export/ExportFLAC.h</includes>
    <includes refid="_export_m_p3_8h" local="yes">export/ExportMP3.h</includes>
    <includes refid="_export_o_g_g_8h" local="yes">export/ExportOGG.h</includes>
    <includes refid="_export_p_c_m_8h" local="yes">export/ExportPCM.h</includes>
    <includes refid="_theme_8h" local="yes">Theme.h</includes>
    <includes refid="_all_theme_resources_8h" local="yes">AllThemeResources.h</includes>
    <includes refid="src_2track_8h" local="yes">Track.h</includes>
    <incdepgraph>
      <node id="34845">
        <label>wx/dir.h</label>
      </node>
      <node id="34826">
        <label>wx/choice.h</label>
      </node>
      <node id="34838">
        <label>wx/hashmap.h</label>
      </node>
      <node id="34898">
        <label>toolbars/SelectionBarListener.h</label>
        <link refid="_selection_bar_listener_8h"/>
      </node>
      <node id="34908">
        <label>export/ExportFLAC.h</label>
        <link refid="_export_f_l_a_c_8h"/>
      </node>
      <node id="34847">
        <label>wx/textfile.h</label>
      </node>
      <node id="34896">
        <label>wx/gauge.h</label>
      </node>
      <node id="34834">
        <label>wx/ffile.h</label>
      </node>
      <node id="34827">
        <label>wx/event.h</label>
      </node>
      <node id="34915">
        <label>wx/font.h</label>
      </node>
      <node id="34885">
        <label>audacity/ModuleInterface.h</label>
        <link refid="_module_interface_8h"/>
        <childnode refid="34841" relation="include">
        </childnode>
        <childnode refid="34877" relation="include">
        </childnode>
        <childnode refid="34886" relation="include">
        </childnode>
      </node>
      <node id="34824">
        <label>../Tags.h</label>
        <link refid="src_2tags_8h"/>
        <childnode refid="34814" relation="include">
        </childnode>
        <childnode refid="34825" relation="include">
        </childnode>
        <childnode refid="34830" relation="include">
        </childnode>
        <childnode refid="34835" relation="include">
        </childnode>
        <childnode refid="34837" relation="include">
        </childnode>
        <childnode refid="34819" relation="include">
        </childnode>
        <childnode refid="34838" relation="include">
        </childnode>
        <childnode refid="34839" relation="include">
        </childnode>
        <childnode refid="34817" relation="include">
        </childnode>
      </node>
      <node id="34903">
        <label>wx/dcclient.h</label>
      </node>
      <node id="34864">
        <label>wx/cmdline.h</label>
      </node>
      <node id="34876">
        <label>audacity/EffectInterface.h</label>
        <link refid="_effect_interface_8h"/>
        <childnode refid="34841" relation="include">
        </childnode>
        <childnode refid="34877" relation="include">
        </childnode>
        <childnode refid="34878" relation="include">
        </childnode>
        <childnode refid="34879" relation="include">
        </childnode>
        <childnode refid="34819" relation="include">
        </childnode>
      </node>
      <node id="34892">
        <label>../Internat.h</label>
        <link refid="_internat_8h"/>
        <childnode refid="34833" relation="include">
        </childnode>
        <childnode refid="34817" relation="include">
        </childnode>
        <childnode refid="34893" relation="include">
        </childnode>
      </node>
      <node id="34830">
        <label>xml/XMLTagHandler.h</label>
        <link refid="_x_m_l_tag_handler_8h"/>
        <childnode refid="34814" relation="include">
        </childnode>
        <childnode refid="34817" relation="include">
        </childnode>
        <childnode refid="34831" relation="include">
        </childnode>
        <childnode refid="34832" relation="include">
        </childnode>
      </node>
      <node id="34858">
        <label>TrackPanelListener.h</label>
        <link refid="_track_panel_listener_8h"/>
      </node>
      <node id="34856">
        <label>wx/wxchar.h</label>
      </node>
      <node id="34916">
        <label>wx/image.h</label>
      </node>
      <node id="34813">
        <label>C:/_dev/OpenU/Audacity/audacity/src/BatchCommands.cpp</label>
        <link refid="BatchCommands.cpp"/>
        <childnode refid="34814" relation="include">
        </childnode>
        <childnode refid="34815" relation="include">
        </childnode>
        <childnode refid="34816" relation="include">
        </childnode>
        <childnode refid="34845" relation="include">
        </childnode>
        <childnode refid="34846" relation="include">
        </childnode>
        <childnode refid="34844" relation="include">
        </childnode>
        <childnode refid="34847" relation="include">
        </childnode>
        <childnode refid="34848" relation="include">
        </childnode>
        <childnode refid="34860" relation="include">
        </childnode>
        <childnode refid="34874" relation="include">
        </childnode>
        <childnode refid="34905" relation="include">
        </childnode>
        <childnode refid="34892" relation="include">
        </childnode>
        <childnode refid="34882" relation="include">
        </childnode>
        <childnode refid="34906" relation="include">
        </childnode>
        <childnode refid="34891" relation="include">
        </childnode>
        <childnode refid="34908" relation="include">
        </childnode>
        <childnode refid="34909" relation="include">
        </childnode>
        <childnode refid="34910" relation="include">
        </childnode>
        <childnode refid="34911" relation="include">
        </childnode>
        <childnode refid="34912" relation="include">
        </childnode>
        <childnode refid="34917" relation="include">
        </childnode>
        <childnode refid="34919" relation="include">
        </childnode>
      </node>
      <node id="34902">
        <label>wx/frame.h</label>
      </node>
      <node id="34872">
        <label>ondemand/ODTaskThread.h</label>
        <link refid="_o_d_task_thread_8h"/>
        <childnode refid="34873" relation="include">
        </childnode>
        <childnode refid="34814" relation="include">
        </childnode>
      </node>
      <node id="34878">
        <label>audacity/ConfigInterface.h</label>
        <link refid="_config_interface_8h"/>
        <childnode refid="34841" relation="include">
        </childnode>
      </node>
      <node id="34852">
        <label>wx/utils.h</label>
      </node>
      <node id="34895">
        <label>wx/evtloop.h</label>
      </node>
      <node id="34849">
        <label>Experimental.h</label>
        <link refid="_experimental_8h"/>
        <childnode refid="34816" relation="include">
        </childnode>
      </node>
      <node id="34870">
        <label>wx/timer.h</label>
      </node>
      <node id="34920">
        <label>wx/gdicmn.h</label>
      </node>
      <node id="34853">
        <label>ViewInfo.h</label>
        <link refid="_view_info_8h"/>
        <childnode refid="34854" relation="include">
        </childnode>
        <childnode refid="34855" relation="include">
        </childnode>
      </node>
      <node id="34891">
        <label>../Shuttle.h</label>
        <link refid="_shuttle_8h"/>
      </node>
      <node id="34881">
        <label>wx/fileconf.h</label>
      </node>
      <node id="34883">
        <label>map</label>
      </node>
      <node id="34918">
        <label>MacroMagic.h</label>
        <link refid="_macro_magic_8h"/>
        <childnode refid="34912" relation="include">
        </childnode>
      </node>
      <node id="34886">
        <label>audacity/PluginInterface.h</label>
        <link refid="_plugin_interface_8h"/>
        <childnode refid="34841" relation="include">
        </childnode>
        <childnode refid="34878" relation="include">
        </childnode>
        <childnode refid="34876" relation="include">
        </childnode>
        <childnode refid="34877" relation="include">
        </childnode>
        <childnode refid="34884" relation="include">
        </childnode>
        <childnode refid="34885" relation="include">
        </childnode>
      </node>
      <node id="34899">
        <label>toolbars/SpectralSelectionBarListener.h</label>
        <link refid="_spectral_selection_bar_listener_8h"/>
        <childnode refid="34814" relation="include">
        </childnode>
      </node>
      <node id="34897">
        <label>wx/stattext.h</label>
      </node>
      <node id="34869">
        <label>wx/socket.h</label>
      </node>
      <node id="34909">
        <label>export/ExportMP3.h</label>
        <link refid="_export_m_p3_8h"/>
      </node>
      <node id="34901">
        <label>wx/generic/dragimgg.h</label>
      </node>
      <node id="34917">
        <label>AllThemeResources.h</label>
        <link refid="_all_theme_resources_8h"/>
        <childnode refid="34849" relation="include">
        </childnode>
        <childnode refid="34918" relation="include">
        </childnode>
      </node>
      <node id="34818">
        <label>export/Export.h</label>
        <link refid="src_2export_2export_8h"/>
        <childnode refid="34819" relation="include">
        </childnode>
        <childnode refid="34820" relation="include">
        </childnode>
        <childnode refid="34821" relation="include">
        </childnode>
        <childnode refid="34822" relation="include">
        </childnode>
        <childnode refid="34823" relation="include">
        </childnode>
        <childnode refid="34824" relation="include">
        </childnode>
        <childnode refid="34840" relation="include">
        </childnode>
        <childnode refid="34842" relation="include">
        </childnode>
      </node>
      <node id="34877">
        <label>audacity/IdentInterface.h</label>
        <link refid="_ident_interface_8h"/>
        <childnode refid="34841" relation="include">
        </childnode>
      </node>
      <node id="34851">
        <label>wx/list.h</label>
      </node>
      <node id="34911">
        <label>export/ExportPCM.h</label>
        <link refid="_export_p_c_m_8h"/>
      </node>
      <node id="34861">
        <label>wx/menu.h</label>
      </node>
      <node id="34816">
        <label>wx/defs.h</label>
      </node>
      <node id="34829">
        <label>wx/window.h</label>
      </node>
      <node id="34866">
        <label>wx/intl.h</label>
      </node>
      <node id="34894">
        <label>../widgets/ProgressDialog.h</label>
        <link refid="_progress_dialog_8h"/>
        <childnode refid="34814" relation="include">
        </childnode>
        <childnode refid="34816" relation="include">
        </childnode>
        <childnode refid="34819" relation="include">
        </childnode>
        <childnode refid="34895" relation="include">
        </childnode>
        <childnode refid="34896" relation="include">
        </childnode>
        <childnode refid="34897" relation="include">
        </childnode>
        <childnode refid="34852" relation="include">
        </childnode>
      </node>
      <node id="34889">
        <label>wx/bmpbuttn.h</label>
      </node>
      <node id="34841">
        <label>audacity/Types.h</label>
        <link refid="include_2audacity_2_types_8h"/>
        <childnode refid="34817" relation="include">
        </childnode>
        <childnode refid="34833" relation="include">
        </childnode>
      </node>
      <node id="34882">
        <label>../PluginManager.h</label>
        <link refid="_plugin_manager_8h"/>
        <childnode refid="34816" relation="include">
        </childnode>
        <childnode refid="34820" relation="include">
        </childnode>
        <childnode refid="34881" relation="include">
        </childnode>
        <childnode refid="34817" relation="include">
        </childnode>
        <childnode refid="34883" relation="include">
        </childnode>
        <childnode refid="34876" relation="include">
        </childnode>
        <childnode refid="34884" relation="include">
        </childnode>
        <childnode refid="34885" relation="include">
        </childnode>
        <childnode refid="34886" relation="include">
        </childnode>
      </node>
      <node id="34819">
        <label>wx/dialog.h</label>
      </node>
      <node id="34821">
        <label>wx/filename.h</label>
      </node>
      <node id="34874">
        <label>effects/EffectManager.h</label>
        <link refid="_effect_manager_8h"/>
        <childnode refid="34849" relation="include">
        </childnode>
        <childnode refid="34826" relation="include">
        </childnode>
        <childnode refid="34819" relation="include">
        </childnode>
        <childnode refid="34827" relation="include">
        </childnode>
        <childnode refid="34875" relation="include">
        </childnode>
        <childnode refid="34817" relation="include">
        </childnode>
        <childnode refid="34876" relation="include">
        </childnode>
        <childnode refid="34882" relation="include">
        </childnode>
        <childnode refid="34887" relation="include">
        </childnode>
      </node>
      <node id="34843">
        <label>wx/filectrl.h</label>
      </node>
      <node id="34914">
        <label>wx/colour.h</label>
      </node>
      <node id="34879">
        <label>audacity/EffectAutomationParameters.h</label>
        <link refid="_effect_automation_parameters_8h"/>
        <childnode refid="34880" relation="include">
        </childnode>
        <childnode refid="34864" relation="include">
        </childnode>
        <childnode refid="34881" relation="include">
        </childnode>
        <childnode refid="34866" relation="include">
        </childnode>
      </node>
      <node id="34906">
        <label>Prefs.h</label>
        <link refid="_prefs_8h"/>
        <childnode refid="34814" relation="include">
        </childnode>
        <childnode refid="34907" relation="include">
        </childnode>
        <childnode refid="34881" relation="include">
        </childnode>
      </node>
      <node id="34860">
        <label>commands/CommandManager.h</label>
        <link refid="_command_manager_8h"/>
        <childnode refid="34849" relation="include">
        </childnode>
        <childnode refid="34835" relation="include">
        </childnode>
        <childnode refid="34854" relation="include">
        </childnode>
        <childnode refid="34817" relation="include">
        </childnode>
        <childnode refid="34820" relation="include">
        </childnode>
        <childnode refid="34861" relation="include">
        </childnode>
        <childnode refid="34838" relation="include">
        </childnode>
        <childnode refid="34862" relation="include">
        </childnode>
        <childnode refid="34830" relation="include">
        </childnode>
        <childnode refid="34841" relation="include">
        </childnode>
      </node>
      <node id="34814">
        <label>Audacity.h</label>
        <link refid="_audacity_8h"/>
      </node>
      <node id="34828">
        <label>wx/grid.h</label>
      </node>
      <node id="34854">
        <label>vector</label>
      </node>
      <node id="34823">
        <label>wx/simplebook.h</label>
      </node>
      <node id="34815">
        <label>BatchCommands.h</label>
        <link refid="_batch_commands_8h"/>
        <childnode refid="34816" relation="include">
        </childnode>
        <childnode refid="34817" relation="include">
        </childnode>
        <childnode refid="34818" relation="include">
        </childnode>
      </node>
      <node id="34887">
        <label>Effect.h</label>
        <link refid="src_2effects_2_effect_8h"/>
        <childnode refid="34814" relation="include">
        </childnode>
        <childnode refid="34835" relation="include">
        </childnode>
        <childnode refid="34888" relation="include">
        </childnode>
        <childnode refid="34889" relation="include">
        </childnode>
        <childnode refid="34820" relation="include">
        </childnode>
        <childnode refid="34866" relation="include">
        </childnode>
        <childnode refid="34817" relation="include">
        </childnode>
        <childnode refid="34890" relation="include">
        </childnode>
        <childnode refid="34878" relation="include">
        </childnode>
        <childnode refid="34876" relation="include">
        </childnode>
        <childnode refid="34849" relation="include">
        </childnode>
        <childnode refid="34855" relation="include">
        </childnode>
        <childnode refid="34891" relation="include">
        </childnode>
        <childnode refid="34892" relation="include">
        </childnode>
        <childnode refid="34894" relation="include">
        </childnode>
      </node>
      <node id="34844">
        <label>wx/filedlg.h</label>
      </node>
      <node id="34820">
        <label>wx/dynarray.h</label>
      </node>
      <node id="34848">
        <label>Project.h</label>
        <link refid="_project_8h"/>
        <childnode refid="34814" relation="include">
        </childnode>
        <childnode refid="34849" relation="include">
        </childnode>
        <childnode refid="34850" relation="include">
        </childnode>
        <childnode refid="34853" relation="include">
        </childnode>
        <childnode refid="34858" relation="include">
        </childnode>
        <childnode refid="34859" relation="include">
        </childnode>
        <childnode refid="34860" relation="include">
        </childnode>
        <childnode refid="34874" relation="include">
        </childnode>
        <childnode refid="34830" relation="include">
        </childnode>
        <childnode refid="34898" relation="include">
        </childnode>
        <childnode refid="34899" relation="include">
        </childnode>
        <childnode refid="34816" relation="include">
        </childnode>
        <childnode refid="34827" relation="include">
        </childnode>
        <childnode refid="34868" relation="include">
        </childnode>
        <childnode refid="34900" relation="include">
        </childnode>
        <childnode refid="34901" relation="include">
        </childnode>
        <childnode refid="34902" relation="include">
        </childnode>
        <childnode refid="34866" relation="include">
        </childnode>
        <childnode refid="34903" relation="include">
        </childnode>
        <childnode refid="34904" relation="include">
        </childnode>
      </node>
      <node id="34837">
        <label>utility</label>
      </node>
      <node id="34884">
        <label>audacity/ImporterInterface.h</label>
        <link refid="_importer_interface_8h"/>
        <childnode refid="34841" relation="include">
        </childnode>
        <childnode refid="34878" relation="include">
        </childnode>
        <childnode refid="34877" relation="include">
        </childnode>
      </node>
      <node id="34912">
        <label>Theme.h</label>
        <link refid="_theme_8h"/>
        <childnode refid="34814" relation="include">
        </childnode>
        <childnode refid="34913" relation="include">
        </childnode>
        <childnode refid="34914" relation="include">
        </childnode>
        <childnode refid="34816" relation="include">
        </childnode>
        <childnode refid="34820" relation="include">
        </childnode>
        <childnode refid="34915" relation="include">
        </childnode>
        <childnode refid="34916" relation="include">
        </childnode>
      </node>
      <node id="34817">
        <label>wx/string.h</label>
      </node>
      <node id="34862">
        <label>../AudacityApp.h</label>
        <link refid="_audacity_app_8h"/>
        <childnode refid="34814" relation="include">
        </childnode>
        <childnode refid="34863" relation="include">
        </childnode>
        <childnode refid="34864" relation="include">
        </childnode>
        <childnode refid="34845" relation="include">
        </childnode>
        <childnode refid="34827" relation="include">
        </childnode>
        <childnode refid="34865" relation="include">
        </childnode>
        <childnode refid="34866" relation="include">
        </childnode>
        <childnode refid="34867" relation="include">
        </childnode>
        <childnode refid="34868" relation="include">
        </childnode>
        <childnode refid="34869" relation="include">
        </childnode>
        <childnode refid="34870" relation="include">
        </childnode>
        <childnode refid="34871" relation="include">
        </childnode>
        <childnode refid="34872" relation="include">
        </childnode>
        <childnode refid="34849" relation="include">
        </childnode>
      </node>
      <node id="34875">
        <label>wx/listbox.h</label>
      </node>
      <node id="34846">
        <label>wx/msgdlg.h</label>
      </node>
      <node id="34868">
        <label>wx/log.h</label>
      </node>
      <node id="34857">
        <label>math.h</label>
      </node>
      <node id="34850">
        <label>DirManager.h</label>
        <link refid="_dir_manager_8h"/>
        <childnode refid="34851" relation="include">
        </childnode>
        <childnode refid="34817" relation="include">
        </childnode>
        <childnode refid="34821" relation="include">
        </childnode>
        <childnode refid="34838" relation="include">
        </childnode>
        <childnode refid="34852" relation="include">
        </childnode>
        <childnode refid="34841" relation="include">
        </childnode>
        <childnode refid="34830" relation="include">
        </childnode>
      </node>
      <node id="34839">
        <label>wx/notebook.h</label>
      </node>
      <node id="34855">
        <label>SelectedRegion.h</label>
        <link refid="_selected_region_8h"/>
        <childnode refid="34814" relation="include">
        </childnode>
        <childnode refid="34849" relation="include">
        </childnode>
        <childnode refid="34816" relation="include">
        </childnode>
        <childnode refid="34856" relation="include">
        </childnode>
        <childnode refid="34857" relation="include">
        </childnode>
      </node>
      <node id="34833">
        <label>wx/arrstr.h</label>
      </node>
      <node id="34907">
        <label>wx/config.h</label>
      </node>
      <node id="34825">
        <label>widgets/Grid.h</label>
        <link refid="_grid_8h"/>
        <childnode refid="34816" relation="include">
        </childnode>
        <childnode refid="34826" relation="include">
        </childnode>
        <childnode refid="34820" relation="include">
        </childnode>
        <childnode refid="34827" relation="include">
        </childnode>
        <childnode refid="34828" relation="include">
        </childnode>
        <childnode refid="34817" relation="include">
        </childnode>
        <childnode refid="34829" relation="include">
        </childnode>
      </node>
      <node id="34867">
        <label>wx/snglinst.h</label>
      </node>
      <node id="34919">
        <label>Track.h</label>
        <link refid="src_2track_8h"/>
        <childnode refid="34814" relation="include">
        </childnode>
        <childnode refid="34835" relation="include">
        </childnode>
        <childnode refid="34854" relation="include">
        </childnode>
        <childnode refid="34820" relation="include">
        </childnode>
        <childnode refid="34827" relation="include">
        </childnode>
        <childnode refid="34920" relation="include">
        </childnode>
        <childnode refid="34893" relation="include">
        </childnode>
        <childnode refid="34817" relation="include">
        </childnode>
        <childnode refid="34849" relation="include">
        </childnode>
        <childnode refid="34840" relation="include">
        </childnode>
        <childnode refid="34830" relation="include">
        </childnode>
      </node>
      <node id="34873">
        <label>wx/thread.h</label>
      </node>
      <node id="34900">
        <label>wx/dragimag.h</label>
      </node>
      <node id="34905">
        <label>FileNames.h</label>
        <link refid="_file_names_8h"/>
        <childnode refid="34817" relation="include">
        </childnode>
        <childnode refid="34814" relation="include">
        </childnode>
      </node>
      <node id="34890">
        <label>wx/tglbtn.h</label>
      </node>
      <node id="34835">
        <label>MemoryX.h</label>
        <link refid="_memory_x_8h"/>
        <childnode refid="34836" relation="include">
        </childnode>
      </node>
      <node id="34871">
        <label>widgets/FileHistory.h</label>
        <link refid="_file_history_8h"/>
        <childnode refid="34816" relation="include">
        </childnode>
        <childnode refid="34826" relation="include">
        </childnode>
        <childnode refid="34820" relation="include">
        </childnode>
        <childnode refid="34827" relation="include">
        </childnode>
        <childnode refid="34828" relation="include">
        </childnode>
        <childnode refid="34817" relation="include">
        </childnode>
        <childnode refid="34829" relation="include">
        </childnode>
      </node>
      <node id="34888">
        <label>set</label>
      </node>
      <node id="34904">
        <label>Menus.h</label>
        <link refid="_menus_8h"/>
        <childnode refid="34849" relation="include">
        </childnode>
      </node>
      <node id="34863">
        <label>wx/app.h</label>
        <link refid="app_8h"/>
      </node>
      <node id="34893">
        <label>wx/longlong.h</label>
      </node>
      <node id="34822">
        <label>wx/panel.h</label>
      </node>
      <node id="34842">
        <label>FileDialog.h</label>
        <link refid="_file_dialog_8h"/>
        <childnode refid="34816" relation="include">
        </childnode>
        <childnode refid="34843" relation="include">
        </childnode>
        <childnode refid="34844" relation="include">
        </childnode>
      </node>
      <node id="34913">
        <label>wx/bitmap.h</label>
      </node>
      <node id="34910">
        <label>export/ExportOGG.h</label>
        <link refid="_export_o_g_g_8h"/>
      </node>
      <node id="34831">
        <label>stdio.h</label>
      </node>
      <node id="34840">
        <label>../SampleFormat.h</label>
        <link refid="_sample_format_8h"/>
        <childnode refid="34814" relation="include">
        </childnode>
        <childnode refid="34816" relation="include">
        </childnode>
        <childnode refid="34841" relation="include">
        </childnode>
      </node>
      <node id="34880">
        <label>locale.h</label>
      </node>
      <node id="34865">
        <label>wx/docview.h</label>
      </node>
      <node id="34836">
        <label>memory</label>
      </node>
      <node id="34832">
        <label>XMLWriter.h</label>
        <link refid="_x_m_l_writer_8h"/>
        <childnode refid="34833" relation="include">
        </childnode>
        <childnode refid="34820" relation="include">
        </childnode>
        <childnode refid="34834" relation="include">
        </childnode>
      </node>
      <node id="34859">
        <label>AudioIOListener.h</label>
        <link refid="_audio_i_o_listener_8h"/>
        <childnode refid="34817" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="_batch_commands_8cpp_1a9c76f8d2ae49513c603deaf6c24aabb3" prot="public" static="no">
        <name>eCommandType</name>
        <enumvalue id="_batch_commands_8cpp_1a9c76f8d2ae49513c603deaf6c24aabb3adaa071753efa33aa6d028e6c377c1d64" prot="public">
          <name>CtEffect</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_batch_commands_8cpp_1a9c76f8d2ae49513c603deaf6c24aabb3ad76daacf354505fc41b34ca517dd758e" prot="public">
          <name>CtMenu</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_batch_commands_8cpp_1a9c76f8d2ae49513c603deaf6c24aabb3a911aa2a786ca7c804edc90540d46ee79" prot="public">
          <name>CtSpecial</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/BatchCommands.cpp" line="51" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/BatchCommands.cpp" bodystart="51" bodyend="51"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_batch_commands_8cpp_1ab770299c445037be5f7563fed993361f" prot="public" static="yes" mutable="no">
        <type>wxString</type>
        <definition>wxString SpecialCommands[]</definition>
        <argsstring>[]</argsstring>
        <name>SpecialCommands</name>
        <initializer>= {
   wxT(&quot;NoAction&quot;),
   
   wxT(&quot;ExportMP3_56k_before&quot;),
   wxT(&quot;ExportMP3_56k_after&quot;),
   wxT(&quot;ExportFLAC&quot;),
   wxT(&quot;ExportMP3&quot;),
   wxT(&quot;ExportOgg&quot;),
   wxT(&quot;ExportWAV&quot;)
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/BatchCommands.cpp" line="56" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/BatchCommands.cpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_batch_commands_8cpp_1a8b43e4c64c08c6734fc1c7fd54500968" prot="public" static="yes" mutable="no">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> wxString</type>
        <definition>const wxString MP3Conversion</definition>
        <argsstring></argsstring>
        <name>MP3Conversion</name>
        <initializer>= wxT(&quot;MP3 Conversion&quot;)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/BatchCommands.cpp" line="68" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/BatchCommands.cpp" bodystart="68" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>Audacity:<sp/>A<sp/>Digital<sp/>Audio<sp/>Editor</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>BatchCommands.cpp</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>Dominic<sp/>Mazzoni</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/>James<sp/>Crook</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment">********************************************************************/</highlight><highlight class="comment">/*******************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_audacity_8h" kindref="compound">Audacity.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_batch_commands_8h" kindref="compound">BatchCommands.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/defs.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/dir.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/msgdlg.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/filedlg.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/textfile.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_project_8h" kindref="compound">Project.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_command_manager_8h" kindref="compound">commands/CommandManager.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_effect_manager_8h" kindref="compound">effects/EffectManager.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_file_names_8h" kindref="compound">FileNames.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_internat_8h" kindref="compound">Internat.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_plugin_manager_8h" kindref="compound">PluginManager.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_prefs_8h" kindref="compound">Prefs.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_shuttle_8h" kindref="compound">Shuttle.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_export_f_l_a_c_8h" kindref="compound">export/ExportFLAC.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_export_m_p3_8h" kindref="compound">export/ExportMP3.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_export_o_g_g_8h" kindref="compound">export/ExportOGG.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_export_p_c_m_8h" kindref="compound">export/ExportPCM.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_theme_8h" kindref="compound">Theme.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_all_theme_resources_8h" kindref="compound">AllThemeResources.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="src_2track_8h" kindref="compound">Track.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/>KLUDGE:<sp/>All<sp/>commands<sp/>should<sp/>be<sp/>on<sp/>the<sp/>same<sp/>footing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/>however,<sp/>for<sp/>historical<sp/>reasons<sp/>we<sp/>distinguish<sp/>between</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>-<sp/>Effects<sp/>(which<sp/>are<sp/>looked<sp/>up<sp/>in<sp/>effects<sp/>lists)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>-<sp/>Menu<sp/>commands<sp/>(which<sp/>are<sp/>held<sp/>in<sp/>command<sp/>manager)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>-<sp/>Specials<sp/>(which<sp/>we<sp/>deal<sp/>with<sp/>specially<sp/>here)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="_batch_commands_8cpp_1a9c76f8d2ae49513c603deaf6c24aabb3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="_batch_commands_8cpp_1a9c76f8d2ae49513c603deaf6c24aabb3" kindref="member">eCommandType</ref><sp/>{<sp/><ref refid="_batch_commands_8cpp_1a9c76f8d2ae49513c603deaf6c24aabb3adaa071753efa33aa6d028e6c377c1d64" kindref="member">CtEffect</ref>,<sp/><ref refid="_batch_commands_8cpp_1a9c76f8d2ae49513c603deaf6c24aabb3ad76daacf354505fc41b34ca517dd758e" kindref="member">CtMenu</ref>,<sp/><ref refid="_batch_commands_8cpp_1a9c76f8d2ae49513c603deaf6c24aabb3a911aa2a786ca7c804edc90540d46ee79" kindref="member">CtSpecial</ref><sp/>};</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TIDY-ME:<sp/>Not<sp/>currently<sp/>translated,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//<sp/>but<sp/>there<sp/>are<sp/>issues<sp/>to<sp/>address<sp/>if<sp/>we<sp/>do.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CLEANSPEECH<sp/>remnant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>wxString<sp/>SpecialCommands[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/>wxT(</highlight><highlight class="stringliteral">&quot;NoAction&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wxT(&quot;Import&quot;),<sp/><sp/><sp/>//<sp/>non-functioning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/>wxT(</highlight><highlight class="stringliteral">&quot;ExportMP3_56k_before&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/>wxT(</highlight><highlight class="stringliteral">&quot;ExportMP3_56k_after&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/>wxT(</highlight><highlight class="stringliteral">&quot;ExportFLAC&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/>wxT(</highlight><highlight class="stringliteral">&quot;ExportMP3&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/>wxT(</highlight><highlight class="stringliteral">&quot;ExportOgg&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/>wxT(</highlight><highlight class="stringliteral">&quot;ExportWAV&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="65"><highlight class="normal">};</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//<sp/>end<sp/>CLEANSPEECH<sp/>remnant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>MP3Conversion<sp/>=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;MP3<sp/>Conversion&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="class_batch_commands_1a79b57eef3a3f8e3386528ebf98c69eb9" refkind="member"><highlight class="normal"><ref refid="class_batch_commands_1a79b57eef3a3f8e3386528ebf98c69eb9" kindref="member">BatchCommands::BatchCommands</ref>()</highlight></codeline>
<codeline lineno="71"><highlight class="normal">{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_batch_commands_1a1abf98081b50014fc9a59918d85ebbc7" kindref="member">ResetChain</ref>();</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/>wxArrayString<sp/>names<sp/>=<sp/><ref refid="class_batch_commands_1acb85a59c30d89d8eee466f8ea3db761f" kindref="member">GetNames</ref>();</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(names.Index(MP3Conversion)<sp/>==<sp/>wxNOT_FOUND)<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_batch_commands_1a6b660475f8a4ebe77a450a42599ab318" kindref="member">AddChain</ref>(MP3Conversion);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_batch_commands_1a3ffdf1db018b0c8756b872aaf4dd9535" kindref="member">RestoreChain</ref>(MP3Conversion);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_batch_commands_1ab5a0615168ba01255b570ad40aacf1b4" kindref="member">WriteChain</ref>(MP3Conversion);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="class_batch_commands_1a6a46fee8fcb062db0249014e2784f58a" refkind="member"><highlight class="normal">wxString<sp/><ref refid="class_batch_commands_1a6a46fee8fcb062db0249014e2784f58a" kindref="member">BatchCommands::GetCommand</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight></codeline>
<codeline lineno="84"><highlight class="normal">{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&lt;<sp/>0<sp/>||<sp/>index<sp/>&gt;=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="class_batch_commands_1a692e3da8d53f0f6e96fff2a762d36030" kindref="member">mCommandChain</ref>.GetCount())<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_batch_commands_1a692e3da8d53f0f6e96fff2a762d36030" kindref="member">mCommandChain</ref>[index];</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="class_batch_commands_1a987f921e9bda595fe4dd4e9669f7cd62" refkind="member"><highlight class="normal">wxString<sp/><ref refid="class_batch_commands_1a987f921e9bda595fe4dd4e9669f7cd62" kindref="member">BatchCommands::GetParams</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight></codeline>
<codeline lineno="93"><highlight class="normal">{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&lt;<sp/>0<sp/>||<sp/>index<sp/>&gt;=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="class_batch_commands_1ac462b94f6422cae948ad4fc809ced592" kindref="member">mParamsChain</ref>.GetCount())<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_batch_commands_1ac462b94f6422cae948ad4fc809ced592" kindref="member">mParamsChain</ref>[index];</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="class_batch_commands_1ac3f57340c9f50d933d6a31d035aed503" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_batch_commands_1ac3f57340c9f50d933d6a31d035aed503" kindref="member">BatchCommands::GetCount</ref>()</highlight></codeline>
<codeline lineno="102"><highlight class="normal">{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="class_batch_commands_1a692e3da8d53f0f6e96fff2a762d36030" kindref="member">mCommandChain</ref>.GetCount();</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="class_batch_commands_1a38404c141631c64eafca84e32e351906" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_batch_commands_1a38404c141631c64eafca84e32e351906" kindref="member">BatchCommands::ReadChain</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;<sp/>chain)</highlight></codeline>
<codeline lineno="107"><highlight class="normal">{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Clear<sp/>any<sp/>previous<sp/>chain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_batch_commands_1a1abf98081b50014fc9a59918d85ebbc7" kindref="member">ResetChain</ref>();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Build<sp/>the<sp/>filename</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/>wxFileName<sp/><ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>(<ref refid="class_file_names_1ac9a7a458bffa8f65ce95bffdef1b8647" kindref="member">FileNames::ChainDir</ref>(),<sp/>chain,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;txt&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>file<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/>wxTextFile<sp/>tf(name.GetFullPath());</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Open<sp/>and<sp/>check</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/>tf.Open();</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tf.IsOpened())<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wxTextFile<sp/>will<sp/>display<sp/>any<sp/>errors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>commands<sp/>from<sp/>the<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lines<sp/>=<sp/>tf.GetLineCount();</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lines<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>lines;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>command<sp/>name<sp/>terminator...ingore<sp/>line<sp/>if<sp/>not<sp/>found</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>splitAt<sp/>=<sp/>tf[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].Find(wxT(</highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(splitAt<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Parse<sp/>and<sp/>clean</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/><ref refid="sndfile__play_8m_1adfc5ba7e22f5e4a6221c12a70503bef3" kindref="member">cmd</ref><sp/>=<sp/>tf[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].Left(splitAt).Strip(wxString::both);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/>parm<sp/>=<sp/>tf[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>].Mid(splitAt<sp/>+<sp/>1).Strip(wxString::trailing);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Backward<sp/>compatibility<sp/>for<sp/>old<sp/>Chain<sp/>scripts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Please<sp/>comment<sp/>the<sp/>version<sp/>of<sp/>audacity<sp/>these<sp/>are<sp/>introduced<sp/>in,<sp/>so</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>old<sp/>ones<sp/>can<sp/>easily<sp/>be<sp/>removed<sp/>once<sp/>users<sp/>have<sp/>had<sp/>a<sp/>chance<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>migrate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cmd<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;SaveMP3_56k_before&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd<sp/>=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;ExportMP3_56k_before&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cmd<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;SaveMP3_56k_after&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd<sp/>=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;ExportMP3_56k_after&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cmd<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;ExportFlac&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd<sp/>=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;ExportFLAC&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cmd<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;ExportMp3&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd<sp/>=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;ExportMP3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cmd<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;ExportWav&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cmd<sp/>=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;ExportWAV&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cmd<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;Compressor&quot;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>(parm.find(wxT(</highlight><highlight class="stringliteral">&quot;DecayTime&quot;</highlight><highlight class="normal">))<sp/>!=<sp/>parm.npos))</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parm.Replace(wxT(</highlight><highlight class="stringliteral">&quot;DecayTime&quot;</highlight><highlight class="normal">),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;ReleaseTime&quot;</highlight><highlight class="normal">),<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2.0.6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>to<sp/>lists</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_batch_commands_1a692e3da8d53f0f6e96fff2a762d36030" kindref="member">mCommandChain</ref>.Add(cmd);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_batch_commands_1ac462b94f6422cae948ad4fc809ced592" kindref="member">mParamsChain</ref>.Add(parm);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Done<sp/>with<sp/>the<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/>tf.Close();</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169" refid="class_batch_commands_1ab5a0615168ba01255b570ad40aacf1b4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_batch_commands_1ab5a0615168ba01255b570ad40aacf1b4" kindref="member">BatchCommands::WriteChain</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;<sp/>chain)</highlight></codeline>
<codeline lineno="170"><highlight class="normal">{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Build<sp/>the<sp/>filename</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/>wxFileName<sp/><ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>(<ref refid="class_file_names_1ac9a7a458bffa8f65ce95bffdef1b8647" kindref="member">FileNames::ChainDir</ref>(),<sp/>chain,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;txt&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>file<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/>wxTextFile<sp/>tf(name.GetFullPath());</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>the<sp/>file<sp/>(Create()<sp/>doesn&apos;t<sp/>leave<sp/>the<sp/>file<sp/>open)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tf.Exists())<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tf.Create();</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Open<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/>tf.Open();</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tf.IsOpened())<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wxTextFile<sp/>will<sp/>display<sp/>any<sp/>errors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>with<sp/>a<sp/>clean<sp/>slate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/>tf.Clear();</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>over<sp/>the<sp/>commands</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lines<sp/>=<sp/><ref refid="class_batch_commands_1a692e3da8d53f0f6e96fff2a762d36030" kindref="member">mCommandChain</ref>.GetCount();</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>lines;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>restore<sp/>deprecated<sp/>commands<sp/>in<sp/>chain<sp/>script</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_batch_commands_1a692e3da8d53f0f6e96fff2a762d36030" kindref="member">mCommandChain</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;ExportMP3_56k_before&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_batch_commands_1a692e3da8d53f0f6e96fff2a762d36030" kindref="member">mCommandChain</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;SaveMP3_56k_before&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_batch_commands_1a692e3da8d53f0f6e96fff2a762d36030" kindref="member">mCommandChain</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;ExportMP3_56k_after&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_batch_commands_1a692e3da8d53f0f6e96fff2a762d36030" kindref="member">mCommandChain</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;SaveMP3_56k_after&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_batch_commands_1a692e3da8d53f0f6e96fff2a762d36030" kindref="member">mCommandChain</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;ExportFLAC&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_batch_commands_1a692e3da8d53f0f6e96fff2a762d36030" kindref="member">mCommandChain</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;ExportFlac&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_batch_commands_1a692e3da8d53f0f6e96fff2a762d36030" kindref="member">mCommandChain</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;ExportMP3&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_batch_commands_1a692e3da8d53f0f6e96fff2a762d36030" kindref="member">mCommandChain</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;ExportMp3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_batch_commands_1a692e3da8d53f0f6e96fff2a762d36030" kindref="member">mCommandChain</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;ExportWAV&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_batch_commands_1a692e3da8d53f0f6e96fff2a762d36030" kindref="member">mCommandChain</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;ExportWav&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tf.AddLine(<ref refid="class_batch_commands_1a692e3da8d53f0f6e96fff2a762d36030" kindref="member">mCommandChain</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">)<sp/>+<sp/><ref refid="class_batch_commands_1ac462b94f6422cae948ad4fc809ced592" kindref="member">mParamsChain</ref>[<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>]);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>the<sp/>chain</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/>tf.Write();</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Done<sp/>with<sp/>the<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/>tf.Close();</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="218"><highlight class="normal">}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220" refid="class_batch_commands_1a6b660475f8a4ebe77a450a42599ab318" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_batch_commands_1a6b660475f8a4ebe77a450a42599ab318" kindref="member">BatchCommands::AddChain</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;<sp/>chain)</highlight></codeline>
<codeline lineno="221"><highlight class="normal">{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Build<sp/>the<sp/>filename</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/>wxFileName<sp/><ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>(<ref refid="class_file_names_1ac9a7a458bffa8f65ce95bffdef1b8647" kindref="member">FileNames::ChainDir</ref>(),<sp/>chain,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;txt&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>file<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/>wxTextFile<sp/>tf(name.GetFullPath());</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>it..Create<sp/>will<sp/>display<sp/>errors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tf.Create();</highlight></codeline>
<codeline lineno="230"><highlight class="normal">}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232" refid="class_batch_commands_1a40b352a2dfe1db417f45913a279c6749" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_batch_commands_1a40b352a2dfe1db417f45913a279c6749" kindref="member">BatchCommands::DeleteChain</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;<sp/>chain)</highlight></codeline>
<codeline lineno="233"><highlight class="normal">{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Build<sp/>the<sp/>filename</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/>wxFileName<sp/><ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>(<ref refid="class_file_names_1ac9a7a458bffa8f65ce95bffdef1b8647" kindref="member">FileNames::ChainDir</ref>(),<sp/>chain,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;txt&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Delete<sp/>it...wxRemoveFile<sp/>will<sp/>display<sp/>errors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="filefn_8cpp_1a147f3601590c8c29a97d1101e03b2b90" kindref="member">wxRemoveFile</ref>(name.GetFullPath());</highlight></codeline>
<codeline lineno="239"><highlight class="normal">}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241" refid="class_batch_commands_1a63c1645505962c962788adbc92e2528e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_batch_commands_1a63c1645505962c962788adbc92e2528e" kindref="member">BatchCommands::RenameChain</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;<sp/>oldchain,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;<sp/>newchain)</highlight></codeline>
<codeline lineno="242"><highlight class="normal">{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Build<sp/>the<sp/>filenames</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/>wxFileName<sp/>oname(<ref refid="class_file_names_1ac9a7a458bffa8f65ce95bffdef1b8647" kindref="member">FileNames::ChainDir</ref>(),<sp/>oldchain,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;txt&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/>wxFileName<sp/>nname(<ref refid="class_file_names_1ac9a7a458bffa8f65ce95bffdef1b8647" kindref="member">FileNames::ChainDir</ref>(),<sp/>newchain,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;txt&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Rename<sp/>it...wxRenameFile<sp/>will<sp/>display<sp/>errors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="filefn_8cpp_1ae58d7952034354a30618f3c180de4bda" kindref="member">wxRenameFile</ref>(oname.GetFullPath(),<sp/>nname.GetFullPath());</highlight></codeline>
<codeline lineno="249"><highlight class="normal">}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251" refid="class_batch_commands_1a930b1e26673644bc0b633b5aa1288438" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_batch_commands_1a930b1e26673644bc0b633b5aa1288438" kindref="member">BatchCommands::SetWavToMp3Chain</ref>()<sp/></highlight><highlight class="comment">//<sp/>a<sp/>function<sp/>per<sp/>default<sp/>chain?<sp/><sp/>This<sp/>is<sp/>flawed<sp/>design!<sp/><sp/>MJS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal">{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_batch_commands_1a1abf98081b50014fc9a59918d85ebbc7" kindref="member">ResetChain</ref>();</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_batch_commands_1ae27c2f991926bcfe1d7c27152d231d4a" kindref="member">AddToChain</ref>(<sp/>wxT(</highlight><highlight class="stringliteral">&quot;Normalize&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_batch_commands_1ae27c2f991926bcfe1d7c27152d231d4a" kindref="member">AddToChain</ref>(<sp/>wxT(</highlight><highlight class="stringliteral">&quot;ExportMP3&quot;</highlight><highlight class="normal">)<sp/>);</highlight></codeline>
<codeline lineno="257"><highlight class="normal">}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Gets<sp/>all<sp/>commands<sp/>that<sp/>are<sp/>valid<sp/>for<sp/>this<sp/>mode.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260" refid="class_batch_commands_1a34090d08dba13e7dfa5db5080e5bd29a" refkind="member"><highlight class="normal">wxArrayString<sp/><ref refid="class_batch_commands_1a34090d08dba13e7dfa5db5080e5bd29a" kindref="member">BatchCommands::GetAllCommands</ref>()</highlight></codeline>
<codeline lineno="261"><highlight class="normal">{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/>wxArrayString<sp/><ref refid="namespacewaflib_1_1_options_1a22160f1b2c16a64ebaa7e03b7ce3a490" kindref="member">commands</ref>;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>command;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/>commands.Clear();</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_audacity_project" kindref="compound">AudacityProject</ref><sp/>*project<sp/>=<sp/><ref refid="_project_8cpp_1a897aa047b58617a9acc187fc882e3bb4" kindref="member">GetActiveProject</ref>();</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!project)</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_options_1a22160f1b2c16a64ebaa7e03b7ce3a490" kindref="member">commands</ref>;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CLEANSPEECH<sp/>remnant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(SpecialCommands)/</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(SpecialCommands[0]);i++)</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>commands.Add(<sp/>SpecialCommands[i]<sp/>);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>end<sp/>CLEANSPEECH<sp/>remnant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_plugin_manager" kindref="compound">PluginManager</ref><sp/>&amp;<sp/>pm<sp/>=<sp/><ref refid="class_plugin_manager_1aeea97bed99a6b179dd87dc6fbf1086f7" kindref="member">PluginManager::Get</ref>();</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_effect_manager" kindref="compound">EffectManager</ref><sp/>&amp;<sp/>em<sp/>=<sp/><ref refid="class_effect_manager_1a6d9acb7546cc925cd8a2e9ceffa4dda0" kindref="member">EffectManager::Get</ref>();</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_plugin_descriptor" kindref="compound">PluginDescriptor</ref><sp/>*plug<sp/>=<sp/>pm.<ref refid="class_plugin_manager_1ac48483b481a43631934346c77ca104fb" kindref="member">GetFirstPlugin</ref>(<ref refid="_plugin_manager_8h_1a54e0db21fd49ff6e0178b6ebe120a6d2ac4eafa24aaa9b42a198f51ef2aba44eb" kindref="member">PluginTypeEffect</ref>);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(plug)</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>command<sp/>=<sp/>em.<ref refid="class_effect_manager_1aa2964e8a3ddadd0be23b293acfe24efe" kindref="member">GetEffectIdentifier</ref>(plug-&gt;<ref refid="class_plugin_descriptor_1ae5a3524df3239aa976c45a376eddbb0f" kindref="member">GetID</ref>());</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!command.IsEmpty())</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>commands.Add(command);</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>plug<sp/>=<sp/>pm.<ref refid="class_plugin_manager_1ac12e525c010e5d218ede9e2d4035e65b" kindref="member">GetNextPlugin</ref>(<ref refid="_plugin_manager_8h_1a54e0db21fd49ff6e0178b6ebe120a6d2ac4eafa24aaa9b42a198f51ef2aba44eb" kindref="member">PluginTypeEffect</ref>);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/>commands.Sort();</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>for<sp/>later<sp/>in<sp/>development:<sp/>include<sp/>the<sp/>menu<sp/>commands.</highlight></codeline>
<codeline lineno="297"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CommandManager<sp/>*<sp/>mManager<sp/>=<sp/>project-&gt;GetCommandManager();</highlight></codeline>
<codeline lineno="298"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxArrayString<sp/>mNames;</highlight></codeline>
<codeline lineno="299"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mNames.Clear();</highlight></codeline>
<codeline lineno="300"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mManager-&gt;GetAllCommandNames(mNames,<sp/>false);</highlight></codeline>
<codeline lineno="301"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(i=0;<sp/>i&lt;mNames.GetCount();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>commands.Add(<sp/>mNames[i]<sp/>);</highlight></codeline>
<codeline lineno="303"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_options_1a22160f1b2c16a64ebaa7e03b7ce3a490" kindref="member">commands</ref>;</highlight></codeline>
<codeline lineno="306"><highlight class="normal">}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309" refid="class_batch_commands_1aa180af1e082818e7b92202d2a0677304" refkind="member"><highlight class="normal">wxString<sp/><ref refid="class_batch_commands_1aa180af1e082818e7b92202d2a0677304" kindref="member">BatchCommands::GetCurrentParamsFor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;<sp/>command)</highlight></codeline>
<codeline lineno="310"><highlight class="normal">{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="include_2audacity_2_types_8h_1abe9b737fcebc2b5bea606246e1eab52e" kindref="member">PluginID</ref><sp/>&amp;<sp/>ID<sp/>=<sp/><ref refid="class_effect_manager_1a6d9acb7546cc925cd8a2e9ceffa4dda0" kindref="member">EffectManager::Get</ref>().<ref refid="class_effect_manager_1a60f2751a059eb7091435a4be52ab6548" kindref="member">GetEffectByIdentifier</ref>(command);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ID.empty())</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wxEmptyString;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>effect<sp/>not<sp/>found.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_effect_manager_1a6d9acb7546cc925cd8a2e9ceffa4dda0" kindref="member">EffectManager::Get</ref>().<ref refid="class_effect_manager_1ae9eae1375bbcf313398409c0b6b2b8d9" kindref="member">GetEffectParameters</ref>(ID);</highlight></codeline>
<codeline lineno="318"><highlight class="normal">}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320" refid="class_batch_commands_1aa0c02a98cc348c0cde14389702285b36" refkind="member"><highlight class="normal">wxString<sp/><ref refid="class_batch_commands_1aa0c02a98cc348c0cde14389702285b36" kindref="member">BatchCommands::PromptForParamsFor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;<sp/>command,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;<sp/><ref refid="_reverb_8cpp_1aacc5617877d2aa4d17c729c1c8ba4eec" kindref="member">params</ref>,<sp/>wxWindow<sp/>*parent)</highlight></codeline>
<codeline lineno="321"><highlight class="normal">{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="include_2audacity_2_types_8h_1abe9b737fcebc2b5bea606246e1eab52e" kindref="member">PluginID</ref><sp/>&amp;<sp/>ID<sp/>=<sp/><ref refid="class_effect_manager_1a6d9acb7546cc925cd8a2e9ceffa4dda0" kindref="member">EffectManager::Get</ref>().<ref refid="class_effect_manager_1a60f2751a059eb7091435a4be52ab6548" kindref="member">GetEffectByIdentifier</ref>(command);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ID.empty())</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wxEmptyString;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>effect<sp/>not<sp/>found</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>res<sp/>=<sp/><ref refid="_reverb_8cpp_1aacc5617877d2aa4d17c729c1c8ba4eec" kindref="member">params</ref>;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_effect_manager_1a6d9acb7546cc925cd8a2e9ceffa4dda0" kindref="member">EffectManager::Get</ref>().<ref refid="class_effect_manager_1a876762a8e2b576f424651edad9145460" kindref="member">SetBatchProcessing</ref>(ID,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_effect_manager_1a6d9acb7546cc925cd8a2e9ceffa4dda0" kindref="member">EffectManager::Get</ref>().SetEffectParameters(ID,<sp/>params))</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_effect_manager_1a6d9acb7546cc925cd8a2e9ceffa4dda0" kindref="member">EffectManager::Get</ref>().PromptUser(ID,<sp/>parent))</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/><ref refid="class_effect_manager_1a6d9acb7546cc925cd8a2e9ceffa4dda0" kindref="member">EffectManager::Get</ref>().<ref refid="class_effect_manager_1ae9eae1375bbcf313398409c0b6b2b8d9" kindref="member">GetEffectParameters</ref>(ID);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_effect_manager_1a6d9acb7546cc925cd8a2e9ceffa4dda0" kindref="member">EffectManager::Get</ref>().<ref refid="class_effect_manager_1a876762a8e2b576f424651edad9145460" kindref="member">SetBatchProcessing</ref>(ID,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="343"><highlight class="normal">}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345" refid="class_batch_commands_1ad2f1108e20edae7aa10fc2b7a9b6f83f" refkind="member"><highlight class="normal">wxString<sp/><ref refid="class_batch_commands_1ad2f1108e20edae7aa10fc2b7a9b6f83f" kindref="member">BatchCommands::PromptForPresetFor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;<sp/>command,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;<sp/><ref refid="_reverb_8cpp_1aacc5617877d2aa4d17c729c1c8ba4eec" kindref="member">params</ref>,<sp/>wxWindow<sp/>*parent)</highlight></codeline>
<codeline lineno="346"><highlight class="normal">{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="include_2audacity_2_types_8h_1abe9b737fcebc2b5bea606246e1eab52e" kindref="member">PluginID</ref><sp/>&amp;<sp/>ID<sp/>=<sp/><ref refid="class_effect_manager_1a6d9acb7546cc925cd8a2e9ceffa4dda0" kindref="member">EffectManager::Get</ref>().<ref refid="class_effect_manager_1a60f2751a059eb7091435a4be52ab6548" kindref="member">GetEffectByIdentifier</ref>(command);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ID.empty())</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wxEmptyString;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>effect<sp/>not<sp/>found.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>preset<sp/>=<sp/><ref refid="class_effect_manager_1a6d9acb7546cc925cd8a2e9ceffa4dda0" kindref="member">EffectManager::Get</ref>().<ref refid="class_effect_manager_1adc7c41b8f952535c7c02dd183fdf370b" kindref="member">GetPreset</ref>(ID,<sp/>params,<sp/>parent);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Preset<sp/>will<sp/>be<sp/>empty<sp/>if<sp/>the<sp/>user<sp/>cancelled<sp/>the<sp/>dialog,<sp/>so<sp/>return<sp/>the<sp/>original</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>parameter<sp/>value.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(preset.IsEmpty())</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_reverb_8cpp_1aacc5617877d2aa4d17c729c1c8ba4eec" kindref="member">params</ref>;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>preset;</highlight></codeline>
<codeline lineno="363"><highlight class="normal">}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365" refid="class_batch_commands_1a8f3f7a2de6661668b050d69e9540543d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_batch_commands_1a8f3f7a2de6661668b050d69e9540543d" kindref="member">BatchCommands::GetEndTime</ref>()</highlight></codeline>
<codeline lineno="366"><highlight class="normal">{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_audacity_project" kindref="compound">AudacityProject</ref><sp/>*project<sp/>=<sp/><ref refid="_project_8cpp_1a897aa047b58617a9acc187fc882e3bb4" kindref="member">GetActiveProject</ref>();</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>project<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>)</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//wxMessageBox(<sp/>wxT(&quot;No<sp/>project<sp/>to<sp/>process!&quot;)<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_list" kindref="compound">TrackList</ref><sp/>*<sp/>tracks<sp/>=<sp/>project-&gt;<ref refid="class_audacity_project_1afaedffb2cf04d79c1ee7ff5f941b3644" kindref="member">GetTracks</ref>();</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>tracks<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>)</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//wxMessageBox(<sp/>wxT(&quot;No<sp/>tracks<sp/>to<sp/>process!&quot;)<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1.0;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>endTime<sp/>=<sp/>tracks-&gt;<ref refid="class_track_list_1a363c0208ea73546e90ca49887cefc5a8" kindref="member">GetEndTime</ref>();</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>endTime;</highlight></codeline>
<codeline lineno="382"><highlight class="normal">}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384" refid="class_batch_commands_1ace953e507ffcf3b5a79df2b3e1a8d8ce" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_batch_commands_1ace953e507ffcf3b5a79df2b3e1a8d8ce" kindref="member">BatchCommands::IsMono</ref>()</highlight></codeline>
<codeline lineno="385"><highlight class="normal">{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_audacity_project" kindref="compound">AudacityProject</ref><sp/>*project<sp/>=<sp/><ref refid="_project_8cpp_1a897aa047b58617a9acc187fc882e3bb4" kindref="member">GetActiveProject</ref>();</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>project<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>)</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//wxMessageBox(<sp/>wxT(&quot;No<sp/>project<sp/>and<sp/>no<sp/>Audio<sp/>to<sp/>process!&quot;)<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_list" kindref="compound">TrackList</ref><sp/>*<sp/>tracks<sp/>=<sp/>project-&gt;<ref refid="class_audacity_project_1afaedffb2cf04d79c1ee7ff5f941b3644" kindref="member">GetTracks</ref>();</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>tracks<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>)</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//wxMessageBox(<sp/>wxT(&quot;No<sp/>tracks<sp/>to<sp/>process!&quot;)<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_list_iterator" kindref="compound">TrackListIterator</ref><sp/>iter(tracks);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref><sp/>=<sp/>iter.<ref refid="class_track_list_iterator_1a81e19731fba5e1b83552aaf36c6f227c" kindref="member">First</ref>();</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>mono<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(t)<sp/>{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t-&gt;<ref refid="class_track_1abe5a26d73a2beddbacd19a39f4286fb2" kindref="member">GetLinked</ref>())<sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mono<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>iter.<ref refid="class_track_list_iterator_1a2f22c9a396a8803881ca6d9784039706" kindref="member">Next</ref>();</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mono;</highlight></codeline>
<codeline lineno="412"><highlight class="normal">}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414" refid="class_batch_commands_1a398aa0ea5189e185f9a74b3572976a7a" refkind="member"><highlight class="normal">wxString<sp/><ref refid="class_batch_commands_1a398aa0ea5189e185f9a74b3572976a7a" kindref="member">BatchCommands::BuildCleanFileName</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;fileName,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;<ref refid="namespacewaflib_1_1_task_gen_1ab4b159e661d17937cf1be8254dedb12f" kindref="member">extension</ref>)</highlight></codeline>
<codeline lineno="415"><highlight class="normal">{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/>wxFileName<sp/>newFileName(fileName);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>justName<sp/>=<sp/>newFileName.GetName();</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>pathName<sp/>=<sp/>newFileName.GetPath(wxPATH_GET_VOLUME<sp/>|<sp/>wxPATH_GET_SEPARATOR);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(justName<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxDateTime<sp/>now<sp/>=<sp/>wxDateTime::Now();</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>year<sp/>=<sp/>now.GetYear();</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxDateTime::Month<sp/>month<sp/>=<sp/>now.GetMonth();</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxString<sp/>monthName<sp/>=<sp/>now.GetMonthName(month);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dom<sp/>=<sp/>now.GetDay();</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hour<sp/>=<sp/>now.GetHour();</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minute<sp/>=<sp/>now.GetMinute();</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>second<sp/>=<sp/>now.GetSecond();</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>justName<sp/>=<sp/>wxString::Format(wxT(</highlight><highlight class="stringliteral">&quot;%d-%s-%02d-%02d-%02d-%02d&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>year,<sp/>monthName.c_str(),<sp/>dom,<sp/>hour,<sp/>minute,<sp/>second);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>SetName(cleanedFileName);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>bool<sp/>isStereo;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>endTime<sp/>=<sp/>project-&gt;mTracks-&gt;GetEndTime();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>double<sp/>startTime<sp/>=<sp/>0.0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//OnSelectAll();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pathName<sp/>=<sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(wxT(</highlight><highlight class="stringliteral">&quot;/DefaultOpenPath&quot;</highlight><highlight class="normal">),<sp/>::<ref refid="filefn_8cpp_1ab0cc6ceca11d23f61cba353c01eeac06" kindref="member">wxGetCwd</ref>());</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::wxMessageBox(wxString::Format(wxT(</highlight><highlight class="stringliteral">&quot;Export<sp/>recording<sp/>to<sp/>%s\n/cleaned/%s%s&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pathName.c_str(),<sp/>justName.c_str(),<sp/>extension.c_str()),</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxT(</highlight><highlight class="stringliteral">&quot;Export<sp/>recording&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxOK<sp/>|<sp/>wxCENTRE);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pathName<sp/>+=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>cleanedName<sp/>=<sp/>pathName;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/>cleanedName<sp/>+=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;cleaned&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>flag<sp/><sp/>=<sp/>::wxFileName::FileExists(cleanedName);</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(flag<sp/>==<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::wxMessageBox(wxT(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>create<sp/>directory<sp/>&apos;cleaned&apos;.<sp/>\nFile<sp/>already<sp/>exists<sp/>that<sp/>is<sp/>not<sp/>a<sp/>directory&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/>::wxFileName::Mkdir(cleanedName,<sp/>0777,<sp/>wxPATH_MKDIR_FULL);<sp/></highlight><highlight class="comment">//<sp/>make<sp/>sure<sp/>it<sp/>exists</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/>cleanedName<sp/>+=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/>cleanedName<sp/>+=<sp/>justName;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/>cleanedName<sp/>+=<sp/><ref refid="namespacewaflib_1_1_task_gen_1ab4b159e661d17937cf1be8254dedb12f" kindref="member">extension</ref>;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><ref refid="_audacity_app_8h_1a1739dbd936ddeaedf4722b5f0b331976" kindref="member">wxGetApp</ref>().<ref refid="class_audacity_app_1aa9461c56195b9a1b8eb931293d0b491f" kindref="member">AddFileToHistory</ref>(cleanedName);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cleanedName;</highlight></codeline>
<codeline lineno="459"><highlight class="normal">}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461" refid="class_batch_commands_1a158934ee3a433102eefb38aa2bf1ed3c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_batch_commands_1a158934ee3a433102eefb38aa2bf1ed3c" kindref="member">BatchCommands::WriteMp3File</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;<sp/>Name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bitrate<sp/>)</highlight></codeline>
<codeline lineno="462"><highlight class="normal">{<sp/><sp/></highlight><highlight class="comment">//check<sp/>if<sp/>current<sp/>project<sp/>is<sp/>mono<sp/>or<sp/>stereo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numChannels<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_batch_commands_1ace953e507ffcf3b5a79df2b3e1a8d8ce" kindref="member">IsMono</ref>())<sp/>{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>numChannels<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>endTime<sp/>=<sp/><ref refid="class_batch_commands_1a8f3f7a2de6661668b050d69e9540543d" kindref="member">GetEndTime</ref>();</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>endTime<sp/>&lt;=<sp/>0.0<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref><sp/>)</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_audacity_project" kindref="compound">AudacityProject</ref><sp/>*project<sp/>=<sp/><ref refid="_project_8cpp_1a897aa047b58617a9acc187fc882e3bb4" kindref="member">GetActiveProject</ref>();</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bitrate<sp/>&lt;=0<sp/>)</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&apos;No&apos;<sp/>bitrate<sp/>given,<sp/>use<sp/>the<sp/>current<sp/>default.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>Mp3Stereo<sp/>to<sp/>control<sp/>if<sp/>export<sp/>is<sp/>to<sp/>a<sp/>stereo<sp/>or<sp/>mono<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_batch_commands_1afcbf772d7e4849302141eccfcf5874ce" kindref="member">mExporter</ref>.<ref refid="class_exporter_1af3ab0fcc1790ee36eaf656049ed20c90" kindref="member">Process</ref>(project,<sp/>numChannels,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;MP3&quot;</highlight><highlight class="normal">),<sp/>Name,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>0.0,<sp/>endTime);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rc;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>prevBitRate<sp/>=<sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(wxT(</highlight><highlight class="stringliteral">&quot;/FileFormats/MP3Bitrate&quot;</highlight><highlight class="normal">),<sp/>128);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Write(wxT(</highlight><highlight class="stringliteral">&quot;/FileFormats/MP3Bitrate&quot;</highlight><highlight class="normal">),<sp/>bitrate);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>Mp3Stereo<sp/>to<sp/>control<sp/>if<sp/>export<sp/>is<sp/>to<sp/>a<sp/>stereo<sp/>or<sp/>mono<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="class_batch_commands_1afcbf772d7e4849302141eccfcf5874ce" kindref="member">mExporter</ref>.<ref refid="class_exporter_1af3ab0fcc1790ee36eaf656049ed20c90" kindref="member">Process</ref>(project,<sp/>numChannels,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;MP3&quot;</highlight><highlight class="normal">),<sp/>Name,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>0.0,<sp/>endTime);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Write(wxT(</highlight><highlight class="stringliteral">&quot;/FileFormats/MP3Bitrate&quot;</highlight><highlight class="normal">),<sp/>prevBitRate);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Flush();</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rc;</highlight></codeline>
<codeline lineno="488"><highlight class="normal">}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TIDY-ME:<sp/>Get<sp/>rid<sp/>of<sp/>special<sp/>commands<sp/>and<sp/>make<sp/>them<sp/>part<sp/>of<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight><highlight class="comment">//<sp/>&apos;menu&apos;<sp/>system<sp/>(but<sp/>not<sp/>showing<sp/>on<sp/>the<sp/>menu)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight><highlight class="comment">//<sp/>=======<sp/>IMPORTANT<sp/>========</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Special<sp/>Commands<sp/>are<sp/>a<sp/>KLUDGE<sp/>whilst<sp/>we<sp/>wait<sp/>for<sp/>a<sp/>better<sp/>system<sp/>to<sp/>handle<sp/>the<sp/>menu</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight><highlight class="comment">//<sp/>commands<sp/>from<sp/>batch<sp/>mode.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Really<sp/>we<sp/>should<sp/>be<sp/>using<sp/>a<sp/>similar<sp/>(or<sp/>same)<sp/>system<sp/>to<sp/>that<sp/>used<sp/>for<sp/>effects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight><highlight class="comment">//<sp/>so<sp/>that<sp/>parameters<sp/>can<sp/>be<sp/>passed<sp/>to<sp/>the<sp/>commands.<sp/><sp/>Many<sp/>of<sp/>the<sp/>menu</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight><highlight class="comment">//<sp/>commands<sp/>take<sp/>a<sp/>selection<sp/>as<sp/>their<sp/>parameter.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight><highlight class="comment">//<sp/>If<sp/>you<sp/>find<sp/>yourself<sp/>adding<sp/>lots<sp/>of<sp/>existing<sp/>commands<sp/>from<sp/>the<sp/>menus<sp/>here,<sp/>STOP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>think<sp/>again.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight><highlight class="comment">//<sp/>=======<sp/>IMPORTANT<sp/>========</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight><highlight class="comment">//<sp/>CLEANSPEECH<sp/>remnant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505" refid="class_batch_commands_1aed7516f5c70712edf5ab97488fc86665" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_batch_commands_1aed7516f5c70712edf5ab97488fc86665" kindref="member">BatchCommands::ApplySpecialCommand</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>WXUNUSED(iCommand),<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;<sp/>command,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;<sp/><ref refid="_reverb_8cpp_1aacc5617877d2aa4d17c729c1c8ba4eec" kindref="member">params</ref>)</highlight></codeline>
<codeline lineno="506"><highlight class="normal">{</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_batch_commands_1a979d4a55092349a3b45a53e248b257a5" kindref="member">ReportAndSkip</ref>(command,<sp/>params))</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_audacity_project" kindref="compound">AudacityProject</ref><sp/>*project<sp/>=<sp/><ref refid="_project_8cpp_1a897aa047b58617a9acc187fc882e3bb4" kindref="member">GetActiveProject</ref>();</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numChannels<sp/>=<sp/>1;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//used<sp/>to<sp/>switch<sp/>between<sp/>mono<sp/>and<sp/>stereo<sp/>export</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_batch_commands_1ace953e507ffcf3b5a79df2b3e1a8d8ce" kindref="member">IsMono</ref>())<sp/>{</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>numChannels<sp/>=<sp/>1;<sp/><sp/></highlight><highlight class="comment">//export<sp/>in<sp/>mono</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>numChannels<sp/>=<sp/>2;<sp/><sp/></highlight><highlight class="comment">//export<sp/>in<sp/>stereo</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/><ref refid="octave__test_8m_1a2ff994e16bf9521154de4cf659a3b689" kindref="member">filename</ref>;</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/><ref refid="namespacewaflib_1_1_task_gen_1ab4b159e661d17937cf1be8254dedb12f" kindref="member">extension</ref>;<sp/></highlight><highlight class="comment">//<sp/>required<sp/>for<sp/>correct<sp/>message</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(command<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;ExportWAV&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>extension<sp/>=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;.wav&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(command<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;ExportOgg&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>extension<sp/>=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;.ogg&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(command<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;ExportFLAC&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>extension<sp/>=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;.flac&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>extension<sp/>=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;.mp3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_batch_commands_1a3149a962faa40188807249b091089c6e" kindref="member">mFileName</ref>.IsEmpty())<sp/>{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>filename<sp/>=<sp/><ref refid="class_batch_commands_1a398aa0ea5189e185f9a74b3572976a7a" kindref="member">BuildCleanFileName</ref>(project-&gt;<ref refid="class_audacity_project_1afdaaff65c6ee9653076b7ca4c54989a7" kindref="member">GetFileName</ref>(),<sp/><ref refid="namespacewaflib_1_1_task_gen_1ab4b159e661d17937cf1be8254dedb12f" kindref="member">extension</ref>);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>filename<sp/>=<sp/><ref refid="class_batch_commands_1a398aa0ea5189e185f9a74b3572976a7a" kindref="member">BuildCleanFileName</ref>(<ref refid="class_batch_commands_1a3149a962faa40188807249b091089c6e" kindref="member">mFileName</ref>,<sp/>extension);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>have<sp/>a<sp/>command<sp/>index,<sp/>but<sp/>we<sp/>don&apos;t<sp/>use<sp/>it!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Make<sp/>this<sp/>special-batch-command<sp/>code<sp/>use<sp/>the<sp/>menu<sp/>item<sp/>code....</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>FIXME:<sp/>No<sp/>error<sp/>reporting<sp/>on<sp/>write<sp/>file<sp/>failure<sp/>in<sp/>batch<sp/>mode.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(command<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;NoAction&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_batch_commands_1a3149a962faa40188807249b091089c6e" kindref="member">mFileName</ref>.IsEmpty()<sp/>&amp;&amp;<sp/>command<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;Import&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>historically<sp/>this<sp/>was<sp/>in<sp/>use,<sp/>now<sp/>ignored<sp/>if<sp/>there</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(command<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;ExportMP3_56k_before&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>filename.Replace(wxT(</highlight><highlight class="stringliteral">&quot;cleaned/&quot;</highlight><highlight class="normal">),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;cleaned/MasterBefore_&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_batch_commands_1a158934ee3a433102eefb38aa2bf1ed3c" kindref="member">WriteMp3File</ref>(filename,<sp/>56);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(command<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;ExportMP3_56k_after&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>filename.Replace(wxT(</highlight><highlight class="stringliteral">&quot;cleaned/&quot;</highlight><highlight class="normal">),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;cleaned/MasterAfter_&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_batch_commands_1a158934ee3a433102eefb38aa2bf1ed3c" kindref="member">WriteMp3File</ref>(filename,<sp/>56);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(command<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;ExportMP3&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_batch_commands_1a158934ee3a433102eefb38aa2bf1ed3c" kindref="member">WriteMp3File</ref>(filename,<sp/>0);<sp/></highlight><highlight class="comment">//<sp/>0<sp/>bitrate<sp/>means<sp/>use<sp/>default/current</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(command<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;ExportWAV&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>filename.Replace(wxT(</highlight><highlight class="stringliteral">&quot;.mp3&quot;</highlight><highlight class="normal">),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;.wav&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>endTime<sp/>=<sp/><ref refid="class_batch_commands_1a8f3f7a2de6661668b050d69e9540543d" kindref="member">GetEndTime</ref>();</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(endTime<sp/>&lt;=<sp/>0.0<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>)<sp/>{</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_batch_commands_1afcbf772d7e4849302141eccfcf5874ce" kindref="member">mExporter</ref>.<ref refid="class_exporter_1af3ab0fcc1790ee36eaf656049ed20c90" kindref="member">Process</ref>(project,<sp/>numChannels,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;WAV&quot;</highlight><highlight class="normal">),<sp/>filename,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>0.0,<sp/>endTime);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(command<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;ExportOgg&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_LIBVORBIS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>filename.Replace(wxT(</highlight><highlight class="stringliteral">&quot;.mp3&quot;</highlight><highlight class="normal">),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;.ogg&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>endTime<sp/>=<sp/><ref refid="class_batch_commands_1a8f3f7a2de6661668b050d69e9540543d" kindref="member">GetEndTime</ref>();</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(endTime<sp/>&lt;=<sp/>0.0<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>)<sp/>{</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_batch_commands_1afcbf772d7e4849302141eccfcf5874ce" kindref="member">mExporter</ref>.<ref refid="class_exporter_1af3ab0fcc1790ee36eaf656049ed20c90" kindref="member">Process</ref>(project,<sp/>numChannels,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;OGG&quot;</highlight><highlight class="normal">),<sp/>filename,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>0.0,<sp/>endTime);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxMessageBox(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Ogg<sp/>Vorbis<sp/>support<sp/>is<sp/>not<sp/>included<sp/>in<sp/>this<sp/>build<sp/>of<sp/>Audacity&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(command<sp/>==<sp/>wxT(</highlight><highlight class="stringliteral">&quot;ExportFLAC&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_LIBFLAC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>filename.Replace(wxT(</highlight><highlight class="stringliteral">&quot;.mp3&quot;</highlight><highlight class="normal">),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;.flac&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>endTime<sp/>=<sp/><ref refid="class_batch_commands_1a8f3f7a2de6661668b050d69e9540543d" kindref="member">GetEndTime</ref>();</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(endTime<sp/>&lt;=<sp/>0.0<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>)<sp/>{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_batch_commands_1afcbf772d7e4849302141eccfcf5874ce" kindref="member">mExporter</ref>.<ref refid="class_exporter_1af3ab0fcc1790ee36eaf656049ed20c90" kindref="member">Process</ref>(project,<sp/>numChannels,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;FLAC&quot;</highlight><highlight class="normal">),<sp/>filename,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>0.0,<sp/>endTime);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxMessageBox(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;FLAC<sp/>support<sp/>is<sp/>not<sp/>included<sp/>in<sp/>this<sp/>build<sp/>of<sp/>Audacity&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/>wxMessageBox(wxString::Format(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Command<sp/>%s<sp/>not<sp/>implemented<sp/>yet&quot;</highlight><highlight class="normal">),command.c_str()));</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="586"><highlight class="normal">}</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight><highlight class="comment">//<sp/>end<sp/>CLEANSPEECH<sp/>remnant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589" refid="class_batch_commands_1a4c89549b21acab81480b8d522da1d3f3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_batch_commands_1a4c89549b21acab81480b8d522da1d3f3" kindref="member">BatchCommands::ApplyEffectCommand</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="include_2audacity_2_types_8h_1abe9b737fcebc2b5bea606246e1eab52e" kindref="member">PluginID</ref><sp/>&amp;<sp/>ID,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;<sp/>command,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;<sp/><ref refid="_reverb_8cpp_1aacc5617877d2aa4d17c729c1c8ba4eec" kindref="member">params</ref>)</highlight></codeline>
<codeline lineno="590"><highlight class="normal">{</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//Possibly<sp/>end<sp/>processing<sp/>here,<sp/>if<sp/>in<sp/>batch-debug</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><ref refid="class_batch_commands_1a979d4a55092349a3b45a53e248b257a5" kindref="member">ReportAndSkip</ref>(command,<sp/>params))</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_audacity_project" kindref="compound">AudacityProject</ref><sp/>*project<sp/>=<sp/><ref refid="_project_8cpp_1a897aa047b58617a9acc187fc882e3bb4" kindref="member">GetActiveProject</ref>();</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//FIXME:<sp/>for<sp/>later<sp/>versions<sp/>may<sp/>want<sp/>to<sp/>not<sp/>select-all<sp/>in<sp/>batch<sp/>mode.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//IF<sp/>nothing<sp/>selected,<sp/>THEN<sp/>select<sp/>everything</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(most<sp/>effects<sp/>require<sp/>that<sp/>you<sp/>have<sp/>something<sp/>selected).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/>project-&gt;<ref refid="class_audacity_project_1a7b496768d6672450bd16bba83c84dbfd" kindref="member">SelectAllIfNone</ref>();</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>res<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_effect_manager_1a6d9acb7546cc925cd8a2e9ceffa4dda0" kindref="member">EffectManager::Get</ref>().<ref refid="class_effect_manager_1a876762a8e2b576f424651edad9145460" kindref="member">SetBatchProcessing</ref>(ID,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>transfer<sp/>the<sp/>parameters<sp/>to<sp/>the<sp/>effect...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_effect_manager_1a6d9acb7546cc925cd8a2e9ceffa4dda0" kindref="member">EffectManager::Get</ref>().SetEffectParameters(ID,<sp/>params))</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>apply<sp/>the<sp/>effect...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>project-&gt;<ref refid="class_audacity_project_1a60b3035ad63ed6f105bdc3c18b3d97be" kindref="member">OnEffect</ref>(ID,<sp/><ref refid="class_audacity_project_1_1_on_effect_flags_1af853a6cb7bcf1ddf06f72337ec82f78a" kindref="member">AudacityProject::OnEffectFlags::kConfigured</ref><sp/>|</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_audacity_project_1_1_on_effect_flags_1a4613e4014b6e6b59bd07701bcac4e44f" kindref="member">AudacityProject::OnEffectFlags::kSkipState</ref><sp/>|</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_audacity_project_1_1_on_effect_flags_1a6cf87127ec3cfda797503acf90ab96f2" kindref="member">AudacityProject::OnEffectFlags::kDontRepeatLast</ref>);</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_effect_manager_1a6d9acb7546cc925cd8a2e9ceffa4dda0" kindref="member">EffectManager::Get</ref>().<ref refid="class_effect_manager_1a876762a8e2b576f424651edad9145460" kindref="member">SetBatchProcessing</ref>(ID,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="618"><highlight class="normal">}</highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620" refid="class_batch_commands_1a40e06fade6de517be1115d6a256b1fcd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_batch_commands_1a40e06fade6de517be1115d6a256b1fcd" kindref="member">BatchCommands::ApplyCommand</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;<sp/>command,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;<sp/><ref refid="_reverb_8cpp_1aacc5617877d2aa4d17c729c1c8ba4eec" kindref="member">params</ref>)</highlight></codeline>
<codeline lineno="621"><highlight class="normal">{</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>for<sp/>a<sp/>special<sp/>command.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>CLEANSPEECH<sp/>remnant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(SpecialCommands)/</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(SpecialCommands[0]);i++)</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>command<sp/>==<sp/>SpecialCommands[i]<sp/>)</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_batch_commands_1aed7516f5c70712edf5ab97488fc86665" kindref="member">ApplySpecialCommand</ref>(<sp/>i,<sp/>command,<sp/>params<sp/>);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>end<sp/>CLEANSPEECH<sp/>remnant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>for<sp/>an<sp/>effect.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="include_2audacity_2_types_8h_1abe9b737fcebc2b5bea606246e1eab52e" kindref="member">PluginID</ref><sp/>&amp;<sp/>ID<sp/>=<sp/><ref refid="class_effect_manager_1a6d9acb7546cc925cd8a2e9ceffa4dda0" kindref="member">EffectManager::Get</ref>().<ref refid="class_effect_manager_1a60f2751a059eb7091435a4be52ab6548" kindref="member">GetEffectByIdentifier</ref>(<sp/>command<sp/>);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ID.empty())</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_batch_commands_1a4c89549b21acab81480b8d522da1d3f3" kindref="member">ApplyEffectCommand</ref>(ID,<sp/>command,<sp/>params);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/>wxMessageBox(</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxString::Format(</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Your<sp/>batch<sp/>command<sp/>of<sp/>%s<sp/>was<sp/>not<sp/>recognized.&quot;</highlight><highlight class="normal">),<sp/>command.c_str()<sp/>));</highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="645"><highlight class="normal">}</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647" refid="class_batch_commands_1a8fbdba411ed6d095065c569e92a8a3dd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_batch_commands_1a8fbdba411ed6d095065c569e92a8a3dd" kindref="member">BatchCommands::ApplyCommandInBatchMode</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;<sp/>command,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;<ref refid="_reverb_8cpp_1aacc5617877d2aa4d17c729c1c8ba4eec" kindref="member">params</ref>)</highlight></codeline>
<codeline lineno="648"><highlight class="normal">{</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_audacity_project" kindref="compound">AudacityProject</ref><sp/>*project<sp/>=<sp/><ref refid="_project_8cpp_1a897aa047b58617a9acc187fc882e3bb4" kindref="member">GetActiveProject</ref>();</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>rc;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>enter<sp/>batch<sp/>mode...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>prevShowMode<sp/>=<sp/>project-&gt;<ref refid="class_audacity_project_1ae0147d873d863aa034d1aca5a70d07e0" kindref="member">GetShowId3Dialog</ref>();</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/>rc<sp/>=<sp/><ref refid="class_batch_commands_1a40e06fade6de517be1115d6a256b1fcd" kindref="member">ApplyCommand</ref>(<sp/>command,<sp/>params<sp/>);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>exit<sp/>batch<sp/>mode...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/>project-&gt;<ref refid="class_audacity_project_1a90a2985f92544aeb4e1a988d37826ef5" kindref="member">SetShowId3Dialog</ref>(prevShowMode);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rc;</highlight></codeline>
<codeline lineno="661"><highlight class="normal">}</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ApplyChain<sp/>returns<sp/>true<sp/>on<sp/>success,<sp/>false<sp/>otherwise.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Any<sp/>error<sp/>reporting<sp/>to<sp/>the<sp/>user<sp/>has<sp/>already<sp/>been<sp/>done.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665" refid="class_batch_commands_1a01e880b30f49467b66c79edf1cd7a81a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_batch_commands_1a01e880b30f49467b66c79edf1cd7a81a" kindref="member">BatchCommands::ApplyChain</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;<sp/><ref refid="octave__test_8m_1a2ff994e16bf9521154de4cf659a3b689" kindref="member">filename</ref>)</highlight></codeline>
<codeline lineno="666"><highlight class="normal">{</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_batch_commands_1a3149a962faa40188807249b091089c6e" kindref="member">mFileName</ref><sp/>=<sp/><ref refid="octave__test_8m_1a2ff994e16bf9521154de4cf659a3b689" kindref="member">filename</ref>;</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>res<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_batch_commands_1ae7ba0db73a71a952c18d601678c9549e" kindref="member">mAbort</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="class_batch_commands_1a692e3da8d53f0f6e96fff2a762d36030" kindref="member">mCommandChain</ref>.GetCount();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_batch_commands_1a8fbdba411ed6d095065c569e92a8a3dd" kindref="member">ApplyCommandInBatchMode</ref>(<ref refid="class_batch_commands_1a692e3da8d53f0f6e96fff2a762d36030" kindref="member">mCommandChain</ref>[i],<sp/><ref refid="class_batch_commands_1ac462b94f6422cae948ad4fc809ced592" kindref="member">mParamsChain</ref>[i])<sp/>||<sp/><ref refid="class_batch_commands_1ae7ba0db73a71a952c18d601678c9549e" kindref="member">mAbort</ref>)<sp/>{</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_batch_commands_1a3149a962faa40188807249b091089c6e" kindref="member">mFileName</ref>.Empty();</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_audacity_project" kindref="compound">AudacityProject</ref><sp/>*proj<sp/>=<sp/><ref refid="_project_8cpp_1a897aa047b58617a9acc187fc882e3bb4" kindref="member">GetActiveProject</ref>();</highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!res)</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(proj)<sp/>{</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Chain<sp/>failed<sp/>or<sp/>was<sp/>cancelled;<sp/>revert<sp/>to<sp/>the<sp/>previous<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>proj-&gt;<ref refid="class_audacity_project_1aa04c5ec89d7df126960103e1f6c0faad" kindref="member">RollbackState</ref>();</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Chain<sp/>was<sp/>successfully<sp/>applied;<sp/>save<sp/>the<sp/>NEW<sp/>project<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/>longDesc,<sp/>shortDesc;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/>wxString<sp/><ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref><sp/>=<sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(wxT(</highlight><highlight class="stringliteral">&quot;/Batch/ActiveChain&quot;</highlight><highlight class="normal">),<sp/>wxEmptyString);</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name.IsEmpty())</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>longDesc<sp/>=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;Applied<sp/>batch<sp/>chain&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>shortDesc<sp/>=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;Apply<sp/>chain&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>longDesc<sp/>=<sp/>wxString::Format(wxT(</highlight><highlight class="stringliteral">&quot;Applied<sp/>batch<sp/>chain<sp/>&apos;%s&apos;&quot;</highlight><highlight class="normal">),<sp/>name.c_str());</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>shortDesc<sp/>=<sp/>wxString::Format(wxT(</highlight><highlight class="stringliteral">&quot;Apply<sp/>&apos;%s&apos;&quot;</highlight><highlight class="normal">),<sp/>name.c_str());</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!proj)</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/>proj-&gt;<ref refid="class_audacity_project_1ae9457cac877fe88c8d3857f92692f101" kindref="member">PushState</ref>(longDesc,<sp/>shortDesc);</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="710"><highlight class="normal">}</highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight><highlight class="comment">//<sp/>AbortBatch()<sp/>allows<sp/>a<sp/>premature<sp/>terminatation<sp/>of<sp/>a<sp/>batch.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="713" refid="class_batch_commands_1a0d89f3144aeca50b5ceeab0e18376fb4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_batch_commands_1a0d89f3144aeca50b5ceeab0e18376fb4" kindref="member">BatchCommands::AbortBatch</ref>()</highlight></codeline>
<codeline lineno="714"><highlight class="normal">{</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_batch_commands_1ae7ba0db73a71a952c18d601678c9549e" kindref="member">mAbort</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="716"><highlight class="normal">}</highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight></codeline>
<codeline lineno="718" refid="class_batch_commands_1ae27c2f991926bcfe1d7c27152d231d4a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_batch_commands_1ae27c2f991926bcfe1d7c27152d231d4a" kindref="member">BatchCommands::AddToChain</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;command,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>before)</highlight></codeline>
<codeline lineno="719"><highlight class="normal">{</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_batch_commands_1ae27c2f991926bcfe1d7c27152d231d4a" kindref="member">AddToChain</ref>(command,<sp/><ref refid="class_batch_commands_1aa180af1e082818e7b92202d2a0677304" kindref="member">GetCurrentParamsFor</ref>(command),<sp/>before);</highlight></codeline>
<codeline lineno="721"><highlight class="normal">}</highlight></codeline>
<codeline lineno="722"><highlight class="normal"></highlight></codeline>
<codeline lineno="723" refid="class_batch_commands_1ac2b2b4c1dfb2736c00e59513e41b24fd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_batch_commands_1ae27c2f991926bcfe1d7c27152d231d4a" kindref="member">BatchCommands::AddToChain</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;command,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;<ref refid="_reverb_8cpp_1aacc5617877d2aa4d17c729c1c8ba4eec" kindref="member">params</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>before)</highlight></codeline>
<codeline lineno="724"><highlight class="normal">{</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(before<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>before<sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)<ref refid="class_batch_commands_1a692e3da8d53f0f6e96fff2a762d36030" kindref="member">mCommandChain</ref>.GetCount();</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_batch_commands_1a692e3da8d53f0f6e96fff2a762d36030" kindref="member">mCommandChain</ref>.Insert(command,<sp/>before);</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_batch_commands_1ac462b94f6422cae948ad4fc809ced592" kindref="member">mParamsChain</ref>.Insert(params,<sp/>before);</highlight></codeline>
<codeline lineno="731"><highlight class="normal">}</highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="733" refid="class_batch_commands_1afa68706c95cde15ea099493ef0b90f69" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_batch_commands_1afa68706c95cde15ea099493ef0b90f69" kindref="member">BatchCommands::DeleteFromChain</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight></codeline>
<codeline lineno="734"><highlight class="normal">{</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&lt;<sp/>0<sp/>||<sp/>index<sp/>&gt;=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="class_batch_commands_1a692e3da8d53f0f6e96fff2a762d36030" kindref="member">mCommandChain</ref>.GetCount())<sp/>{</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_batch_commands_1a692e3da8d53f0f6e96fff2a762d36030" kindref="member">mCommandChain</ref>.RemoveAt(index);</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_batch_commands_1ac462b94f6422cae948ad4fc809ced592" kindref="member">mParamsChain</ref>.RemoveAt(index);</highlight></codeline>
<codeline lineno="741"><highlight class="normal">}</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="743" refid="class_batch_commands_1a1abf98081b50014fc9a59918d85ebbc7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_batch_commands_1a1abf98081b50014fc9a59918d85ebbc7" kindref="member">BatchCommands::ResetChain</ref>()</highlight></codeline>
<codeline lineno="744"><highlight class="normal">{</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_batch_commands_1a692e3da8d53f0f6e96fff2a762d36030" kindref="member">mCommandChain</ref>.Clear();</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_batch_commands_1ac462b94f6422cae948ad4fc809ced592" kindref="member">mParamsChain</ref>.Clear();</highlight></codeline>
<codeline lineno="747"><highlight class="normal">}</highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ReportAndSkip()<sp/>is<sp/>a<sp/>diagnostic<sp/>function<sp/>that<sp/>avoids<sp/>actually</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight><highlight class="comment">//<sp/>applying<sp/>the<sp/>requested<sp/>effect<sp/>if<sp/>in<sp/>batch-debug<sp/>mode.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="751" refid="class_batch_commands_1a979d4a55092349a3b45a53e248b257a5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_batch_commands_1a979d4a55092349a3b45a53e248b257a5" kindref="member">BatchCommands::ReportAndSkip</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;<sp/>command,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;<sp/><ref refid="_reverb_8cpp_1aacc5617877d2aa4d17c729c1c8ba4eec" kindref="member">params</ref>)</highlight></codeline>
<codeline lineno="752"><highlight class="normal">{</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bDebug;</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><ref refid="_prefs_8cpp_1a605d9511ac8da26b177c7362d7f8dc82" kindref="member">gPrefs</ref>-&gt;Read(wxT(</highlight><highlight class="stringliteral">&quot;/Batch/Debug&quot;</highlight><highlight class="normal">),<sp/>&amp;bDebug,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>bDebug<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//TODO:<sp/>Add<sp/>a<sp/>cancel<sp/>button<sp/>to<sp/>these,<sp/>and<sp/>add<sp/>the<sp/>logic<sp/>so<sp/>that<sp/>we<sp/>can<sp/>abort.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>params<sp/>!=<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)<sp/>)</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxMessageBox(<sp/>wxString::Format(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Apply<sp/>%s<sp/>with<sp/>parameter(s)\n\n%s&quot;</highlight><highlight class="normal">),command.c_str(),<sp/>params.c_str()),</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Test<sp/>Mode&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxMessageBox(<sp/>wxString::Format(<ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Apply<sp/>%s&quot;</highlight><highlight class="normal">),command.c_str()),</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="locale__hack_8h_1a32a3cf3d9dd914f5aeeca5423c157934" kindref="member">_</ref>(</highlight><highlight class="stringliteral">&quot;Test<sp/>Mode&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="770"><highlight class="normal">}</highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight></codeline>
<codeline lineno="772" refid="class_batch_commands_1acb85a59c30d89d8eee466f8ea3db761f" refkind="member"><highlight class="normal">wxArrayString<sp/><ref refid="class_batch_commands_1acb85a59c30d89d8eee466f8ea3db761f" kindref="member">BatchCommands::GetNames</ref>()</highlight></codeline>
<codeline lineno="773"><highlight class="normal">{</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/>wxArrayString<sp/>names;</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/>wxArrayString<sp/><ref refid="namespacelv2docgen_1a2be4ec33b98834ddad6dbf8e8779cfb9" kindref="member">files</ref>;</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/>wxDir::GetAllFiles(<ref refid="class_file_names_1ac9a7a458bffa8f65ce95bffdef1b8647" kindref="member">FileNames::ChainDir</ref>(),<sp/>&amp;files,<sp/>wxT(</highlight><highlight class="stringliteral">&quot;*.txt&quot;</highlight><highlight class="normal">),<sp/>wxDIR_FILES);</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>files.GetCount();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxFileName<sp/><ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>(files[i]);</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>names.Add(f.GetName());</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>names;</highlight></codeline>
<codeline lineno="785"><highlight class="normal">}</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="787" refid="class_batch_commands_1a9deac3cd1e20276bee8f318853f7b62a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_batch_commands_1a9deac3cd1e20276bee8f318853f7b62a" kindref="member">BatchCommands::IsFixed</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;<sp/><ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>)</highlight></codeline>
<codeline lineno="788"><highlight class="normal">{</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name<sp/>==<sp/>MP3Conversion)</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="792"><highlight class="normal">}</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="794" refid="class_batch_commands_1a3ffdf1db018b0c8756b872aaf4dd9535" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_batch_commands_1a3ffdf1db018b0c8756b872aaf4dd9535" kindref="member">BatchCommands::RestoreChain</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;<sp/><ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>)</highlight></codeline>
<codeline lineno="795"><highlight class="normal">{</highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TIDY-ME:<sp/>Effects<sp/>change<sp/>their<sp/>name<sp/>with<sp/>localisation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Commands<sp/>(at<sp/>least<sp/>currently)<sp/>don&apos;t.<sp/><sp/>Messy.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(name<sp/>==<sp/>MP3Conversion)</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_batch_commands_1a930b1e26673644bc0b633b5aa1288438" kindref="member">SetWavToMp3Chain</ref>();</highlight></codeline>
<codeline lineno="801"><highlight class="normal">}</highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight></codeline>
<codeline lineno="803" refid="class_batch_commands_1a0c0bbdd039d28b90f260a6b7061ce879" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_batch_commands_1a0c0bbdd039d28b90f260a6b7061ce879" kindref="member">BatchCommands::Split</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;<sp/><ref refid="sndfile__save_8m_1a4b99ff73a8a869319570237b5c57ab03" kindref="member">str</ref>,<sp/>wxString<sp/>&amp;<sp/>command,<sp/>wxString<sp/>&amp;<sp/>param)</highlight></codeline>
<codeline lineno="804"><highlight class="normal">{</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>splitAt;</highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/>command.Empty();</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/>param.Empty();</highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str.IsEmpty())<sp/>{</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/>splitAt<sp/>=<sp/>str.Find(wxT(</highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(splitAt<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/>command<sp/>=<sp/>str.Mid(0,<sp/>splitAt);</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/>param<sp/>=<sp/>str.Mid(splitAt<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="823"><highlight class="normal">}</highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight></codeline>
<codeline lineno="825" refid="class_batch_commands_1ab6b1a17957726bf32d925efbdf0f8a66" refkind="member"><highlight class="normal">wxString<sp/><ref refid="class_batch_commands_1ab6b1a17957726bf32d925efbdf0f8a66" kindref="member">BatchCommands::Join</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;<sp/>command,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;<sp/>param)</highlight></codeline>
<codeline lineno="826"><highlight class="normal">{</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>command<sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>param;</highlight></codeline>
<codeline lineno="828"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/src/BatchCommands.cpp"/>
  </compounddef>
</doxygen>
