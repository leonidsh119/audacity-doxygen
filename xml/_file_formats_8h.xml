<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_file_formats_8h" kind="file" language="C++">
    <compoundname>FileFormats.h</compoundname>
    <includes local="no">wx/list.h</includes>
    <includes local="no">wx/arrstr.h</includes>
    <includes local="no">wx/string.h</includes>
    <includes refid="_audacity_8h" local="yes">Audacity.h</includes>
    <includes local="yes">sndfile.h</includes>
    <includedby refid="_audacity_headers_8h" local="yes">C:/_dev/OpenU/Audacity/audacity/src/AudacityHeaders.h</includedby>
    <includedby refid="_legacy_alias_block_file_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/blockfile/LegacyAliasBlockFile.cpp</includedby>
    <includedby refid="_legacy_block_file_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/blockfile/LegacyBlockFile.cpp</includedby>
    <includedby refid="_o_d_decode_block_file_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/blockfile/ODDecodeBlockFile.cpp</includedby>
    <includedby refid="_o_d_p_c_m_alias_block_file_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/blockfile/ODPCMAliasBlockFile.cpp</includedby>
    <includedby refid="_p_c_m_alias_block_file_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/blockfile/PCMAliasBlockFile.cpp</includedby>
    <includedby refid="_silent_block_file_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/blockfile/SilentBlockFile.cpp</includedby>
    <includedby refid="_simple_block_file_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/blockfile/SimpleBlockFile.cpp</includedby>
    <includedby refid="_export_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/export/Export.cpp</includedby>
    <includedby refid="_export_f_fmpeg_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/export/ExportFFmpeg.cpp</includedby>
    <includedby refid="_export_f_fmpeg_dialogs_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/export/ExportFFmpegDialogs.cpp</includedby>
    <includedby refid="_export_multiple_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/export/ExportMultiple.cpp</includedby>
    <includedby refid="_export_p_c_m_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/export/ExportPCM.cpp</includedby>
    <includedby refid="_file_formats_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/FileFormats.cpp</includedby>
    <includedby refid="_import_l_o_f_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/import/ImportLOF.cpp</includedby>
    <includedby refid="_import_p_c_m_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/import/ImportPCM.cpp</includedby>
    <includedby refid="_import_raw_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/import/ImportRaw.cpp</includedby>
    <includedby refid="_menus_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/src/Menus.cpp</includedby>
    <incdepgraph>
      <node id="46097">
        <label>C:/_dev/OpenU/Audacity/audacity/src/FileFormats.h</label>
        <link refid="FileFormats.h"/>
        <childnode refid="46098" relation="include">
        </childnode>
        <childnode refid="46099" relation="include">
        </childnode>
        <childnode refid="46100" relation="include">
        </childnode>
        <childnode refid="46101" relation="include">
        </childnode>
        <childnode refid="46102" relation="include">
        </childnode>
      </node>
      <node id="46098">
        <label>wx/list.h</label>
      </node>
      <node id="46102">
        <label>sndfile.h</label>
      </node>
      <node id="46101">
        <label>Audacity.h</label>
        <link refid="_audacity_8h"/>
      </node>
      <node id="46100">
        <label>wx/string.h</label>
      </node>
      <node id="46099">
        <label>wx/arrstr.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="46118">
        <label>C:/_dev/OpenU/Audacity/audacity/src/FileFormats.cpp</label>
        <link refid="_file_formats_8cpp"/>
      </node>
      <node id="46112">
        <label>C:/_dev/OpenU/Audacity/audacity/src/blockfile/SimpleBlockFile.cpp</label>
        <link refid="_simple_block_file_8cpp"/>
      </node>
      <node id="46106">
        <label>C:/_dev/OpenU/Audacity/audacity/src/blockfile/LegacyAliasBlockFile.cpp</label>
        <link refid="_legacy_alias_block_file_8cpp"/>
      </node>
      <node id="46114">
        <label>C:/_dev/OpenU/Audacity/audacity/src/export/ExportFFmpeg.cpp</label>
        <link refid="_export_f_fmpeg_8cpp"/>
      </node>
      <node id="46117">
        <label>C:/_dev/OpenU/Audacity/audacity/src/export/ExportPCM.cpp</label>
        <link refid="_export_p_c_m_8cpp"/>
      </node>
      <node id="46120">
        <label>C:/_dev/OpenU/Audacity/audacity/src/import/ImportPCM.cpp</label>
        <link refid="_import_p_c_m_8cpp"/>
      </node>
      <node id="46121">
        <label>C:/_dev/OpenU/Audacity/audacity/src/import/ImportRaw.cpp</label>
        <link refid="_import_raw_8cpp"/>
      </node>
      <node id="46103">
        <label>C:/_dev/OpenU/Audacity/audacity/src/FileFormats.h</label>
        <link refid="FileFormats.h"/>
        <childnode refid="46104" relation="include">
        </childnode>
        <childnode refid="46106" relation="include">
        </childnode>
        <childnode refid="46107" relation="include">
        </childnode>
        <childnode refid="46108" relation="include">
        </childnode>
        <childnode refid="46109" relation="include">
        </childnode>
        <childnode refid="46110" relation="include">
        </childnode>
        <childnode refid="46111" relation="include">
        </childnode>
        <childnode refid="46112" relation="include">
        </childnode>
        <childnode refid="46113" relation="include">
        </childnode>
        <childnode refid="46114" relation="include">
        </childnode>
        <childnode refid="46115" relation="include">
        </childnode>
        <childnode refid="46116" relation="include">
        </childnode>
        <childnode refid="46117" relation="include">
        </childnode>
        <childnode refid="46118" relation="include">
        </childnode>
        <childnode refid="46119" relation="include">
        </childnode>
        <childnode refid="46120" relation="include">
        </childnode>
        <childnode refid="46121" relation="include">
        </childnode>
        <childnode refid="46122" relation="include">
        </childnode>
      </node>
      <node id="46107">
        <label>C:/_dev/OpenU/Audacity/audacity/src/blockfile/LegacyBlockFile.cpp</label>
        <link refid="_legacy_block_file_8cpp"/>
      </node>
      <node id="46113">
        <label>C:/_dev/OpenU/Audacity/audacity/src/export/Export.cpp</label>
        <link refid="_export_8cpp"/>
      </node>
      <node id="46104">
        <label>C:/_dev/OpenU/Audacity/audacity/src/AudacityHeaders.h</label>
        <link refid="_audacity_headers_8h"/>
        <childnode refid="46105" relation="include">
        </childnode>
      </node>
      <node id="46108">
        <label>C:/_dev/OpenU/Audacity/audacity/src/blockfile/ODDecodeBlockFile.cpp</label>
        <link refid="_o_d_decode_block_file_8cpp"/>
      </node>
      <node id="46109">
        <label>C:/_dev/OpenU/Audacity/audacity/src/blockfile/ODPCMAliasBlockFile.cpp</label>
        <link refid="_o_d_p_c_m_alias_block_file_8cpp"/>
      </node>
      <node id="46122">
        <label>C:/_dev/OpenU/Audacity/audacity/src/Menus.cpp</label>
        <link refid="_menus_8cpp"/>
      </node>
      <node id="46110">
        <label>C:/_dev/OpenU/Audacity/audacity/src/blockfile/PCMAliasBlockFile.cpp</label>
        <link refid="_p_c_m_alias_block_file_8cpp"/>
      </node>
      <node id="46119">
        <label>C:/_dev/OpenU/Audacity/audacity/src/import/ImportLOF.cpp</label>
        <link refid="_import_l_o_f_8cpp"/>
      </node>
      <node id="46116">
        <label>C:/_dev/OpenU/Audacity/audacity/src/export/ExportMultiple.cpp</label>
        <link refid="_export_multiple_8cpp"/>
      </node>
      <node id="46111">
        <label>C:/_dev/OpenU/Audacity/audacity/src/blockfile/SilentBlockFile.cpp</label>
        <link refid="_silent_block_file_8cpp"/>
      </node>
      <node id="46115">
        <label>C:/_dev/OpenU/Audacity/audacity/src/export/ExportFFmpegDialogs.cpp</label>
        <link refid="_export_f_fmpeg_dialogs_8cpp"/>
      </node>
      <node id="46105">
        <label>C:/_dev/OpenU/Audacity/audacity/src/AudacityHeaders.cpp</label>
        <link refid="_audacity_headers_8cpp"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="_file_formats_8h_1ad25a29b5fd877826d8e76685f1b88cbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int sf_num_headers</definition>
        <argsstring>()</argsstring>
        <name>sf_num_headers</name>
        <briefdescription>
<para>Get the number of container formats supported by libsndfile. </para>        </briefdescription>
        <detaileddescription>
<para>Uses SFC_GET_FORMAT_MAJOR_COUNT in sf_command interface </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/FileFormats.h" line="26" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/FileFormats.cpp" bodystart="34" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="_file_formats_8h_1ae0827ff9b8db34937ecec6dd93d098d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>wxString</type>
        <definition>wxString sf_header_index_name</definition>
        <argsstring>(int format_num)</argsstring>
        <name>sf_header_index_name</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>format_num</declname>
        </param>
        <briefdescription>
<para>Get the name of a container format from libsndfile. </para>        </briefdescription>
        <detaileddescription>
<para>Uses SFC_GET_FORMAT_MAJOR in the <ref refid="sndfile_8c_1a0999a38427a413a1b0a6caa36c4c5b75" kindref="member">sf_command()</ref> interface. Resulting C string from libsndfile is converted to a wxString <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>format_num</parametername>
</parameternamelist>
<parameterdescription>
<para>The libsndfile format number for the container format required </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/FileFormats.h" line="35" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/FileFormats.cpp" bodystart="44" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="_file_formats_8h_1a6627b39dbb21c37d0dbe58b901c9d323" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>unsigned int sf_header_index_to_type</definition>
        <argsstring>(int format_num)</argsstring>
        <name>sf_header_index_to_type</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>format_num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/FileFormats.h" line="37" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/FileFormats.cpp" bodystart="56" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="_file_formats_8h_1aeae40e1b5225495f63194686e600c4c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int sf_num_encodings</definition>
        <argsstring>()</argsstring>
        <name>sf_num_encodings</name>
        <briefdescription>
<para>Get the number of data encodings libsndfile supports (in any container or none. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/FileFormats.h" line="44" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/FileFormats.cpp" bodystart="72" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="_file_formats_8h_1a8f069cf91a2d563093d92a0cfb24efc0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>wxString</type>
        <definition>wxString sf_encoding_index_name</definition>
        <argsstring>(int encoding_num)</argsstring>
        <name>sf_encoding_index_name</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>encoding_num</declname>
        </param>
        <briefdescription>
<para>Get the string name of the data encoding of the requested format. </para>        </briefdescription>
        <detaileddescription>
<para>uses SFC_GET_FORMAT_SUBTYPE </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/FileFormats.h" line="48" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/FileFormats.cpp" bodystart="81" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="_file_formats_8h_1a6e5a9be995970243408e389a4294c5b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>unsigned int sf_encoding_index_to_subtype</definition>
        <argsstring>(int encoding_num)</argsstring>
        <name>sf_encoding_index_to_subtype</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>encoding_num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/FileFormats.h" line="49" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/FileFormats.cpp" bodystart="92" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="_file_formats_8h_1a8e01d2349304b3816faccd34e218379b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>wxString</type>
        <definition>wxString sf_header_name</definition>
        <argsstring>(int format)</argsstring>
        <name>sf_header_name</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>format</declname>
        </param>
        <briefdescription>
<para>Get the string name of the specified container format. </para>        </briefdescription>
        <detaileddescription>
<para>AND format with SF_FORMAT_TYPEMASK to get only the container format and then use SFC_GET_FORMAT_INFO to get the description <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>the libsndfile format to get the name for (only the container part is used) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/FileFormats.h" line="60" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/FileFormats.cpp" bodystart="108" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="_file_formats_8h_1a63dec5511ff3bad3e2b7e03cd30868b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>wxString</type>
        <definition>wxString sf_header_shortname</definition>
        <argsstring>(int format)</argsstring>
        <name>sf_header_shortname</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>format</declname>
        </param>
        <briefdescription>
<para>Get an abbreviated form of the string name of the specified format. </para>        </briefdescription>
        <detaileddescription>
<para>Do <ref refid="_file_formats_8h_1a8e01d2349304b3816faccd34e218379b" kindref="member">sf_header_name()</ref> then truncate the string at the first space in the name to get just the first word of the format name. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>the libsndfile format to get the name for (only the container part is used) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/FileFormats.h" line="67" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/FileFormats.cpp" bodystart="119" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="_file_formats_8h_1a2f25ea91afdb2f7f0a58dbf96af06d93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>wxString</type>
        <definition>wxString sf_header_extension</definition>
        <argsstring>(int format)</argsstring>
        <name>sf_header_extension</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>format</declname>
        </param>
        <briefdescription>
<para>Get the most common file extension for the given format. </para>        </briefdescription>
        <detaileddescription>
<para>AND the given format with SF_FORMAT_TYPEMASK to get just the container format, then retreive the most common extension using SFC_GET_FORMAT_INFO. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>the libsndfile format to get the name for (only the container part is used) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/FileFormats.h" line="74" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/FileFormats.cpp" bodystart="147" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="_file_formats_8h_1ac77f57d6003752e4e0dae382d943534b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>wxString</type>
        <definition>wxString sf_encoding_name</definition>
        <argsstring>(int encoding_num)</argsstring>
        <name>sf_encoding_name</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>encoding_num</declname>
        </param>
        <briefdescription>
<para>Get the string name of the specified data encoding. </para>        </briefdescription>
        <detaileddescription>
<para>AND encoding_num with SF_FORMAT_SUBMASK to get only the data encoding and then use SFC_GET_FORMAT_INFO to get the description <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>encoding_num</parametername>
</parameternamelist>
<parameterdescription>
<para>the libsndfile encoding to get the name for (only the data encoding is used) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/FileFormats.h" line="81" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/FileFormats.cpp" bodystart="158" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="_file_formats_8h_1abba66d576038758a12e55fdb7be0171f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int sf_num_simple_formats</definition>
        <argsstring>()</argsstring>
        <name>sf_num_simple_formats</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/FileFormats.h" line="87" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/FileFormats.cpp" bodystart="169" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="_file_formats_8h_1a6608819476650df4e863ff413e1faaa1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_s_f___f_o_r_m_a_t___i_n_f_o" kindref="compound">SF_FORMAT_INFO</ref> *</type>
        <definition>SF_FORMAT_INFO* sf_simple_format</definition>
        <argsstring>(int i)</argsstring>
        <name>sf_simple_format</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/FileFormats.h" line="88" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/FileFormats.cpp" bodystart="180" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="_file_formats_8h_1a4894b4d75ca7490835d92bc0c852ba27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool sf_subtype_more_than_16_bits</definition>
        <argsstring>(unsigned int format)</argsstring>
        <name>sf_subtype_more_than_16_bits</name>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/FileFormats.h" line="94" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/FileFormats.cpp" bodystart="191" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="_file_formats_8h_1a43966662f6cd55d91888b424b8c2372a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool sf_subtype_is_integer</definition>
        <argsstring>(unsigned int format)</argsstring>
        <name>sf_subtype_is_integer</name>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>format</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/FileFormats.h" line="95" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/FileFormats.cpp" bodystart="200" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="_file_formats_8h_1afc6e3d1bf25d95a9ed719705bbd10efa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>wxArrayString</type>
        <definition>wxArrayString sf_get_all_extensions</definition>
        <argsstring>()</argsstring>
        <name>sf_get_all_extensions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/FileFormats.h" line="97" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/FileFormats.cpp" bodystart="208" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="_file_formats_8h_1a9b51367ecf6522d291caefabb77c6c4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>wxString</type>
        <definition>wxString sf_normalize_name</definition>
        <argsstring>(const char *name)</argsstring>
        <name>sf_normalize_name</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/FileFormats.h" line="99" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/FileFormats.cpp" bodystart="240" bodyend="251"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>Audacity:<sp/>A<sp/>Digital<sp/>Audio<sp/>Editor</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>FileFormats.h</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>Dominic<sp/>Mazzoni</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment">**********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/list.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/arrstr.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_audacity_8h" kindref="compound">Audacity.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;sndfile.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>enumerating<sp/>headers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_file_formats_8h_1ad25a29b5fd877826d8e76685f1b88cbd" kindref="member">sf_num_headers</ref>();</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal">wxString<sp/><ref refid="_file_formats_8h_1ae0827ff9b8db34937ecec6dd93d098d0" kindref="member">sf_header_index_name</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>format_num);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_file_formats_8h_1a6627b39dbb21c37d0dbe58b901c9d323" kindref="member">sf_header_index_to_type</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>format_num);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/>enumerating<sp/>encodings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="44"><highlight class="comment"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_file_formats_8h_1aeae40e1b5225495f63194686e600c4c7" kindref="member">sf_num_encodings</ref>();</highlight></codeline>
<codeline lineno="48"><highlight class="normal">wxString<sp/><ref refid="_file_formats_8h_1a8f069cf91a2d563093d92a0cfb24efc0" kindref="member">sf_encoding_index_name</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>encoding_num);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_file_formats_8h_1a6e5a9be995970243408e389a4294c5b4" kindref="member">sf_encoding_index_to_subtype</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>encoding_num);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//<sp/>getting<sp/>info<sp/>about<sp/>an<sp/>actual<sp/>SF<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="60"><highlight class="comment"></highlight><highlight class="normal">wxString<sp/><ref refid="_file_formats_8h_1a8e01d2349304b3816faccd34e218379b" kindref="member">sf_header_name</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref>);</highlight></codeline>
<codeline lineno="67"><highlight class="normal">wxString<sp/><ref refid="_file_formats_8h_1a63dec5511ff3bad3e2b7e03cd30868b2" kindref="member">sf_header_shortname</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref>);</highlight></codeline>
<codeline lineno="74"><highlight class="normal">wxString<sp/><ref refid="_file_formats_8h_1a2f25ea91afdb2f7f0a58dbf96af06d93" kindref="member">sf_header_extension</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref>);</highlight></codeline>
<codeline lineno="81"><highlight class="normal">wxString<sp/><ref refid="_file_formats_8h_1ac77f57d6003752e4e0dae382d943534b" kindref="member">sf_encoding_name</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>encoding_num);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">//<sp/>simple<sp/>formats</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_file_formats_8h_1abba66d576038758a12e55fdb7be0171f" kindref="member">sf_num_simple_formats</ref>();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><ref refid="struct_s_f___f_o_r_m_a_t___i_n_f_o" kindref="compound">SF_FORMAT_INFO</ref><sp/>*<ref refid="_file_formats_8h_1a6608819476650df4e863ff413e1faaa1" kindref="member">sf_simple_format</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment">//<sp/>other<sp/>utility<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_file_formats_8h_1a4894b4d75ca7490835d92bc0c852ba27" kindref="member">sf_subtype_more_than_16_bits</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref>);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="_file_formats_8h_1a43966662f6cd55d91888b424b8c2372a" kindref="member">sf_subtype_is_integer</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref>);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal">wxArrayString<sp/><ref refid="_file_formats_8h_1afc6e3d1bf25d95a9ed719705bbd10efa" kindref="member">sf_get_all_extensions</ref>();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal">wxString<sp/><ref refid="_file_formats_8h_1a9b51367ecf6522d291caefabb77c6c4d" kindref="member">sf_normalize_name</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Mac<sp/>OS<sp/>4-char<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__WXMAC__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifdef<sp/>__UNIX__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;CoreServices/CoreServices.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;Types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal">OSType<sp/>sf_header_mactype(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref>);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/src/FileFormats.h"/>
  </compounddef>
</doxygen>
