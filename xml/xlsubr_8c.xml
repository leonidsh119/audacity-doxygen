<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="xlsubr_8c" kind="file" language="C++">
    <compoundname>xlsubr.c</compoundname>
    <includes local="yes">string.h</includes>
    <includes refid="xlisp_8h" local="yes">xlisp.h</includes>
    <incdepgraph>
      <node id="18755">
        <label>stdlib.h</label>
      </node>
      <node id="18758">
        <label>setjmp.h</label>
      </node>
      <node id="18754">
        <label>xlisp.h</label>
        <link refid="xlisp_8h"/>
        <childnode refid="18755" relation="include">
        </childnode>
        <childnode refid="18756" relation="include">
        </childnode>
        <childnode refid="18757" relation="include">
        </childnode>
        <childnode refid="18758" relation="include">
        </childnode>
        <childnode refid="18759" relation="include">
        </childnode>
      </node>
      <node id="18753">
        <label>string.h</label>
      </node>
      <node id="18759">
        <label>xldmem.h</label>
        <link refid="xldmem_8h"/>
      </node>
      <node id="18757">
        <label>ctype.h</label>
      </node>
      <node id="18752">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlsubr.c</label>
        <link refid="xlsubr.c"/>
        <childnode refid="18753" relation="include">
        </childnode>
        <childnode refid="18754" relation="include">
        </childnode>
      </node>
      <node id="18756">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="xlsubr_8c_1ae69ed416b00a1b8b102c8f98e3087711" prot="public" static="no" mutable="no">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL k_test</definition>
        <argsstring></argsstring>
        <name>k_test</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlsubr.c" line="15" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlglob.c" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="xlsubr_8c_1ab69f56b5cfacf0df6caee0440e2a204e" prot="public" static="no" mutable="no">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL k_tnot</definition>
        <argsstring></argsstring>
        <name>k_tnot</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlsubr.c" line="15" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlglob.c" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="xlsubr_8c_1a26b4ecf1847ce29c6b6a9f64a609754b" prot="public" static="no" mutable="no">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL s_eql</definition>
        <argsstring></argsstring>
        <name>s_eql</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlsubr.c" line="15" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlglob.c" bodystart="33" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="xlsubr_8c_1a99a09648dcc509fa9b298dcb77b525a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xlsubr</definition>
        <argsstring>(const char *sname, int type, LVAL(*fcn)(void), int offset)</argsstring>
        <name>xlsubr</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>sname</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref>(*)(<ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref>)</type>
          <declname>fcn</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>offset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlsubr.c" line="18" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlsubr.c" bodystart="18" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="xlsubr_8c_1a6d69d7dafa5e52674042d40262c62728" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int xlgetkeyarg</definition>
        <argsstring>(LVAL key, LVAL *pval)</argsstring>
        <name>xlgetkeyarg</name>
        <param>
          <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref> *</type>
          <declname>pval</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlsubr.c" line="27" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlsubr.c" bodystart="27" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="xlsubr_8c_1af98d7ffa62262ebb6948b70194683547" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int xlgkfixnum</definition>
        <argsstring>(LVAL key, LVAL *pval)</argsstring>
        <name>xlgkfixnum</name>
        <param>
          <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
          <declname>key</declname>
        </param>
        <param>
          <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref> *</type>
          <declname>pval</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlsubr.c" line="41" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlsubr.c" bodystart="41" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="xlsubr_8c_1a2f6a21220b42cad8bc05f9a98be80634" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void xltest</definition>
        <argsstring>(LVAL *pfcn, int *ptresult)</argsstring>
        <name>xltest</name>
        <param>
          <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref> *</type>
          <declname>pfcn</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>ptresult</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlsubr.c" line="52" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlsubr.c" bodystart="52" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="xlsubr_8c_1a54b74e46a255fe68903d162e769469be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xlgetfile</definition>
        <argsstring>(void)</argsstring>
        <name>xlgetfile</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlsubr.c" line="65" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlsubr.c" bodystart="65" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="xlsubr_8c_1a7f2c11030f662441e755e6b235780960" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xlgetfname</definition>
        <argsstring>(void)</argsstring>
        <name>xlgetfname</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlsubr.c" line="82" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlsubr.c" bodystart="82" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="xlsubr_8c_1a66cdfad388260810f69d949e9806a349" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int needsextension</definition>
        <argsstring>(const char *name)</argsstring>
        <name>needsextension</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlsubr.c" line="100" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlsubr.c" bodystart="100" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="xlsubr_8c_1a8140c3a1169f7732815c0fa98a202b88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xlbadtype</definition>
        <argsstring>(LVAL arg)</argsstring>
        <name>xlbadtype</name>
        <param>
          <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlsubr.c" line="122" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlsubr.c" bodystart="122" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="xlsubr_8c_1a8d125043ed43421367e4ebbb6a6f8cfd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xltoofew</definition>
        <argsstring>(void)</argsstring>
        <name>xltoofew</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlsubr.c" line="129" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlsubr.c" bodystart="129" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="xlsubr_8c_1a41189a0f69681fab0e3ed61072cf4955" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL xltoomany</definition>
        <argsstring>(void)</argsstring>
        <name>xltoomany</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlsubr.c" line="136" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlsubr.c" bodystart="136" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="xlsubr_8c_1ab4a096efaa67d377b15f5f0d59af0133" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int eq</definition>
        <argsstring>(LVAL arg1, LVAL arg2)</argsstring>
        <name>eq</name>
        <param>
          <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
          <declname>arg1</declname>
        </param>
        <param>
          <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
          <declname>arg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlsubr.c" line="143" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlsubr.c" bodystart="143" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="xlsubr_8c_1ab83113916053558dbb6dc07511d91841" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int eql</definition>
        <argsstring>(LVAL arg1, LVAL arg2)</argsstring>
        <name>eql</name>
        <param>
          <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
          <declname>arg1</declname>
        </param>
        <param>
          <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
          <declname>arg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlsubr.c" line="149" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlsubr.c" bodystart="149" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="xlsubr_8c_1ac5b0d9495e1d74cc9af3c96c32a67220" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int lval_equal</definition>
        <argsstring>(LVAL arg1, LVAL arg2)</argsstring>
        <name>lval_equal</name>
        <param>
          <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
          <declname>arg1</declname>
        </param>
        <param>
          <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
          <declname>arg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlsubr.c" line="169" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlsubr.c" bodystart="169" bodyend="192"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>xlsubr<sp/>-<sp/>xlisp<sp/>builtin<sp/>function<sp/>support<sp/>routines<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>Copyright<sp/>(c)<sp/>1985,<sp/>by<sp/>David<sp/>Michael<sp/>Betz</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>All<sp/>Rights<sp/>Reserved</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Permission<sp/>is<sp/>granted<sp/>for<sp/>unrestricted<sp/>non-commercial<sp/>use<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>CHANGE<sp/>LOG</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>--------------------------------------------------------------------</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>28Apr03<sp/><sp/>dm<sp/><sp/>eliminate<sp/>some<sp/>compiler<sp/>warnings</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;string.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="xlisp_8h" kindref="compound">xlisp.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>external<sp/>variables<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xlsubr_8c_1ae69ed416b00a1b8b102c8f98e3087711" kindref="member">k_test</ref>,<ref refid="xlsubr_8c_1ab69f56b5cfacf0df6caee0440e2a204e" kindref="member">k_tnot</ref>,<ref refid="xlsubr_8c_1a26b4ecf1847ce29c6b6a9f64a609754b" kindref="member">s_eql</ref>;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xlsubr<sp/>-<sp/>define<sp/>a<sp/>builtin<sp/>function<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="xlsubr_8c_1a99a09648dcc509fa9b298dcb77b525a6" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xlsubr_8c_1a99a09648dcc509fa9b298dcb77b525a6" kindref="member">xlsubr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*sname,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref>,<sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>(*fcn)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">),<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="layer12_8c_1a33d71f23ba2052d17f0b754dc35265b0" kindref="member">offset</ref>)</highlight></codeline>
<codeline lineno="19"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>sym;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>sym<sp/>=<sp/><ref refid="xlisp_8h_1af2f3848a186324b30a549837c5e70eea" kindref="member">xlenter</ref>(sname);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xldmem_8h_1a622b728aa046cc1108bb4f5ce3b1316e" kindref="member">setfunction</ref>(sym,<ref refid="xldmem_8c_1a7f6488a89cab2c91920b72fccc0440e6" kindref="member">cvsubr</ref>(fcn,type,offset));</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(sym);</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xlgetkeyarg<sp/>-<sp/>get<sp/>a<sp/>keyword<sp/>argument<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="xlsubr_8c_1a6d69d7dafa5e52674042d40262c62728" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="xlsubr_8c_1a6d69d7dafa5e52674042d40262c62728" kindref="member">xlgetkeyarg</ref>(<ref refid="structnode" kindref="compound">LVAL</ref><sp/>key,<sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>*pval)</highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>*<ref refid="cmdline_8c_1ad407d5ba91709bd9b092003858600723" kindref="member">argv</ref>=<ref refid="xlglob_8c_1a41a140ea641b5b83e799d2a1472d7921" kindref="member">xlargv</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cmdline_8c_1aaffeb1bf2056ea44af5b5d0ee4d6ff07" kindref="member">argc</ref>=<ref refid="xlglob_8c_1a5a6bb9549241319e47d3021370af59a7" kindref="member">xlargc</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(argv<sp/>=<sp/><ref refid="xlglob_8c_1a41a140ea641b5b83e799d2a1472d7921" kindref="member">xlargv</ref>,<sp/>argc<sp/>=<sp/><ref refid="xlglob_8c_1a5a6bb9549241319e47d3021370af59a7" kindref="member">xlargc</ref>;<sp/>(argc<sp/>-=<sp/>2)<sp/>&gt;=<sp/>0;<sp/>argv<sp/>+=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*argv<sp/>==<sp/>key)<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pval<sp/>=<sp/>*++<ref refid="cmdline_8c_1ad407d5ba91709bd9b092003858600723" kindref="member">argv</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="38"><highlight class="normal">}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xlgkfixnum<sp/>-<sp/>get<sp/>a<sp/>fixnum<sp/>keyword<sp/>argument<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="xlsubr_8c_1af98d7ffa62262ebb6948b70194683547" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="xlsubr_8c_1af98d7ffa62262ebb6948b70194683547" kindref="member">xlgkfixnum</ref>(<ref refid="structnode" kindref="compound">LVAL</ref><sp/>key,<sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>*pval)</highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="xlsubr_8c_1a6d69d7dafa5e52674042d40262c62728" kindref="member">xlgetkeyarg</ref>(key,pval))<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="xlisp_8h_1a98d37fade8fb550adbe9b2ce393c6b46" kindref="member">fixp</ref>(*pval))</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xlsubr_8c_1a8140c3a1169f7732815c0fa98a202b88" kindref="member">xlbadtype</ref>(*pval);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xltest<sp/>-<sp/>get<sp/>the<sp/>:test<sp/>or<sp/>:test-not<sp/>keyword<sp/>argument<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="xlsubr_8c_1a2f6a21220b42cad8bc05f9a98be80634" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="xlsubr_8c_1a2f6a21220b42cad8bc05f9a98be80634" kindref="member">xltest</ref>(<ref refid="structnode" kindref="compound">LVAL</ref><sp/>*pfcn,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*ptresult)</highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="xlsubr_8c_1a6d69d7dafa5e52674042d40262c62728" kindref="member">xlgetkeyarg</ref>(k_test,pfcn))<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>:test<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ptresult<sp/>=<sp/><ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="xlsubr_8c_1a6d69d7dafa5e52674042d40262c62728" kindref="member">xlgetkeyarg</ref>(k_tnot,pfcn))<sp/><sp/></highlight><highlight class="comment">/*<sp/>:test-not<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ptresult<sp/>=<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*pfcn<sp/>=<sp/><ref refid="xldmem_8h_1acbd5e177428f81c1a835252991590185" kindref="member">getfunction</ref>(s_eql);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ptresult<sp/>=<sp/><ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xlgetfile<sp/>-<sp/>get<sp/>a<sp/>file<sp/>or<sp/>stream<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="xlsubr_8c_1a54b74e46a255fe68903d162e769469be" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xlsubr_8c_1a54b74e46a255fe68903d162e769469be" kindref="member">xlgetfile</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="66"><highlight class="normal">{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>arg;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>a<sp/>file<sp/>or<sp/>stream<sp/>(cons)<sp/>or<sp/>nil<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((arg<sp/>=<sp/><ref refid="xlisp_8h_1ade40dbc8f8cc519582b94b2c7dcd1969" kindref="member">xlgetarg</ref>()))<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="xlisp_8h_1a2dfa7673ae1d52790aca5316eac86fd4" kindref="member">streamp</ref>(arg))<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="xldmem_8h_1add3fb93f402f3053f209b7f5a0ed703c" kindref="member">getfile</ref>(arg)<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xldbug_8c_1aaebeabdcebf1b39c984723f1727ddeed" kindref="member">xlfail</ref>(</highlight><highlight class="stringliteral">&quot;file<sp/>not<sp/>open&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="xlisp_8h_1ad9cca1e0a5cd821f4059e7d7becad19c" kindref="member">ustreamp</ref>(arg))</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xldbug_8c_1a2d78bf523301185246193246684786a8" kindref="member">xlerror</ref>(</highlight><highlight class="stringliteral">&quot;bad<sp/>argument<sp/>type&quot;</highlight><highlight class="normal">,arg);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(arg);</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xlgetfname<sp/>-<sp/>get<sp/>a<sp/>filename<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="xlsubr_8c_1a7f2c11030f662441e755e6b235780960" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xlsubr_8c_1a7f2c11030f662441e755e6b235780960" kindref="member">xlgetfname</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="83"><highlight class="normal">{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>next<sp/>argument<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>name<sp/>=<sp/><ref refid="xlisp_8h_1ade40dbc8f8cc519582b94b2c7dcd1969" kindref="member">xlgetarg</ref>();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>filename<sp/>string<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="xlisp_8h_1a5c4e80c8df6800f99b93c39b54cf6079" kindref="member">symbolp</ref>(name))</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/><ref refid="xldmem_8h_1a6a3bfd5f7bc0c6301b107d11866b65a7" kindref="member">getpname</ref>(name);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="xlisp_8h_1a43967124ffef3887dc1e46669eeec027" kindref="member">stringp</ref>(name))</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xldbug_8c_1a2d78bf523301185246193246684786a8" kindref="member">xlerror</ref>(</highlight><highlight class="stringliteral">&quot;bad<sp/>argument<sp/>type&quot;</highlight><highlight class="normal">,name);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>return<sp/>the<sp/>name<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(name);</highlight></codeline>
<codeline lineno="97"><highlight class="normal">}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>needsextension<sp/>-<sp/>check<sp/>if<sp/>a<sp/>filename<sp/>needs<sp/>an<sp/>extension<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="xlsubr_8c_1a66cdfad388260810f69d949e9806a349" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="xlsubr_8c_1a66cdfad388260810f69d949e9806a349" kindref="member">needsextension</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>)</highlight></codeline>
<codeline lineno="101"><highlight class="normal">{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>for<sp/>an<sp/>extension<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(p<sp/>=<sp/>&amp;name[strlen(name)];<sp/>--p<sp/>&gt;=<sp/>&amp;name[0];<sp/>)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*p<sp/>==<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!islower(*p)<sp/>&amp;&amp;<sp/>!isupper(*p)<sp/>&amp;&amp;<sp/>!isdigit(*p))</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>no<sp/>extension<sp/>found<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>);</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>the<sp/>next<sp/>three<sp/>functions<sp/>must<sp/>be<sp/>declared<sp/>as<sp/>LVAL<sp/>because<sp/>they</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/>*<sp/>are<sp/>used<sp/>in<sp/>LVAL<sp/>expressions,<sp/>but<sp/>they<sp/>do<sp/>not<sp/>return<sp/>anything</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/>*<sp/>warning<sp/>4035<sp/>is<sp/>&quot;no<sp/>return<sp/>value&quot;</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>#pragma<sp/>warning(disable:<sp/>4035)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xlbadtype<sp/>-<sp/>report<sp/>a<sp/>&quot;bad<sp/>argument<sp/>type&quot;<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="xlsubr_8c_1a8140c3a1169f7732815c0fa98a202b88" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xlsubr_8c_1a8140c3a1169f7732815c0fa98a202b88" kindref="member">xlbadtype</ref>(<ref refid="structnode" kindref="compound">LVAL</ref><sp/>arg)</highlight></codeline>
<codeline lineno="123"><highlight class="normal">{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xldbug_8c_1a2d78bf523301185246193246684786a8" kindref="member">xlerror</ref>(</highlight><highlight class="stringliteral">&quot;bad<sp/>argument<sp/>type&quot;</highlight><highlight class="normal">,arg);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="macaboutbox_8c_1a263efce0e5cda1d387a1a43f94715445" kindref="member">NIL</ref>;<sp/></highlight><highlight class="comment">/*<sp/>never<sp/>happens<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xltoofew<sp/>-<sp/>report<sp/>a<sp/>&quot;too<sp/>few<sp/>arguments&quot;<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="xlsubr_8c_1a8d125043ed43421367e4ebbb6a6f8cfd" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xlsubr_8c_1a8d125043ed43421367e4ebbb6a6f8cfd" kindref="member">xltoofew</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="130"><highlight class="normal">{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xldbug_8c_1aaebeabdcebf1b39c984723f1727ddeed" kindref="member">xlfail</ref>(</highlight><highlight class="stringliteral">&quot;too<sp/>few<sp/>arguments&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="macaboutbox_8c_1a263efce0e5cda1d387a1a43f94715445" kindref="member">NIL</ref>;<sp/></highlight><highlight class="comment">/*<sp/>never<sp/>happens<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xltoomany<sp/>-<sp/>report<sp/>a<sp/>&quot;too<sp/>many<sp/>arguments&quot;<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="xlsubr_8c_1a41189a0f69681fab0e3ed61072cf4955" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="xlsubr_8c_1a41189a0f69681fab0e3ed61072cf4955" kindref="member">xltoomany</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="137"><highlight class="normal">{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xldbug_8c_1aaebeabdcebf1b39c984723f1727ddeed" kindref="member">xlfail</ref>(</highlight><highlight class="stringliteral">&quot;too<sp/>many<sp/>arguments&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="macaboutbox_8c_1a263efce0e5cda1d387a1a43f94715445" kindref="member">NIL</ref>;<sp/></highlight><highlight class="comment">/*<sp/>never<sp/>happens<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal">}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>eq<sp/>-<sp/>internal<sp/>eq<sp/>function<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="xlsubr_8c_1ab4a096efaa67d377b15f5f0d59af0133" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="xlsubr_8c_1ab4a096efaa67d377b15f5f0d59af0133" kindref="member">eq</ref>(<ref refid="structnode" kindref="compound">LVAL</ref><sp/>arg1,<sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>arg2)</highlight></codeline>
<codeline lineno="144"><highlight class="normal">{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(arg1<sp/>==<sp/>arg2);</highlight></codeline>
<codeline lineno="146"><highlight class="normal">}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>eql<sp/>-<sp/>internal<sp/>eql<sp/>function<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149" refid="xlsubr_8c_1ab83113916053558dbb6dc07511d91841" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="xlsubr_8c_1ab83113916053558dbb6dc07511d91841" kindref="member">eql</ref>(<ref refid="structnode" kindref="compound">LVAL</ref><sp/>arg1,<sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>arg2)</highlight></codeline>
<codeline lineno="150"><highlight class="normal">{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>compare<sp/>the<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arg1<sp/>==<sp/>arg2)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arg1)<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="xldmem_8h_1a0bea87e39e2918e4bc96203b6912afa8" kindref="member">ntype</ref>(arg1))<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="xldmem_8h_1aa560e55d7366513cdfc24788fa003b94" kindref="member">FIXNUM</ref>:</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xlisp_8h_1a98d37fade8fb550adbe9b2ce393c6b46" kindref="member">fixp</ref>(arg2)<sp/>?<sp/><ref refid="xldmem_8h_1abd617d059082a375cb509fd9e7b031c2" kindref="member">getfixnum</ref>(arg1)==<ref refid="xldmem_8h_1abd617d059082a375cb509fd9e7b031c2" kindref="member">getfixnum</ref>(arg2)<sp/>:<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="xldmem_8h_1a020194f6a2217309f363c3acd8c13b18" kindref="member">FLONUM</ref>:</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xlisp_8h_1a54b52cc60cae165ab5fd8e7b9fe00ce5" kindref="member">floatp</ref>(arg2)<sp/>?<sp/><ref refid="xldmem_8h_1a93878740023aeb748ba761c1b586281e" kindref="member">getflonum</ref>(arg1)==<ref refid="xldmem_8h_1a93878740023aeb748ba761c1b586281e" kindref="member">getflonum</ref>(arg2)<sp/>:<sp/>FALSE);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(FALSE);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>lval_equal<sp/>-<sp/>internal<sp/>equal<sp/>function<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169" refid="xlsubr_8c_1ac5b0d9495e1d74cc9af3c96c32a67220" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="xlsubr_8c_1ac5b0d9495e1d74cc9af3c96c32a67220" kindref="member">lval_equal</ref>(<ref refid="structnode" kindref="compound">LVAL</ref><sp/>arg1,<sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>arg2)</highlight></codeline>
<codeline lineno="170"><highlight class="normal">{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>compare<sp/>the<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arg1<sp/>==<sp/>arg2)</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="cext_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(arg1)<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="xldmem_8h_1a0bea87e39e2918e4bc96203b6912afa8" kindref="member">ntype</ref>(arg1))<sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="xldmem_8h_1aa560e55d7366513cdfc24788fa003b94" kindref="member">FIXNUM</ref>:</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xlisp_8h_1a98d37fade8fb550adbe9b2ce393c6b46" kindref="member">fixp</ref>(arg2)<sp/>?<sp/><ref refid="xldmem_8h_1abd617d059082a375cb509fd9e7b031c2" kindref="member">getfixnum</ref>(arg1)==<ref refid="xldmem_8h_1abd617d059082a375cb509fd9e7b031c2" kindref="member">getfixnum</ref>(arg2)<sp/>:<sp/><ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="xldmem_8h_1a020194f6a2217309f363c3acd8c13b18" kindref="member">FLONUM</ref>:</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xlisp_8h_1a54b52cc60cae165ab5fd8e7b9fe00ce5" kindref="member">floatp</ref>(arg2)<sp/>?<sp/><ref refid="xldmem_8h_1a93878740023aeb748ba761c1b586281e" kindref="member">getflonum</ref>(arg1)==<ref refid="xldmem_8h_1a93878740023aeb748ba761c1b586281e" kindref="member">getflonum</ref>(arg2)<sp/>:<sp/>FALSE);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="xldmem_8h_1a0f4d394a3ab4e09bff60f714c66dc5ee" kindref="member">STRING</ref>:</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xlisp_8h_1a43967124ffef3887dc1e46669eeec027" kindref="member">stringp</ref>(arg2)<sp/>?<sp/>strcmp((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/><ref refid="xldmem_8h_1a16885f9275f841afaa18bf10375cf679" kindref="member">getstring</ref>(arg1),</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/><ref refid="xldmem_8h_1a16885f9275f841afaa18bf10375cf679" kindref="member">getstring</ref>(arg2))<sp/>==<sp/>0<sp/>:<sp/>FALSE);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="xldmem_8h_1a2c5a87d7b57acc6199252538679614e4" kindref="member">CONS</ref>:</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="xlisp_8h_1a9cc5b5a0f9172969d39b4b66b7804d81" kindref="member">consp</ref>(arg2)<sp/>?<sp/><ref refid="xlsubr_8c_1ac5b0d9495e1d74cc9af3c96c32a67220" kindref="member">lval_equal</ref>(<ref refid="xldmem_8h_1ae4dfcb6df647ab2faa722e2ea931fef5" kindref="member">car</ref>(arg1),<ref refid="xldmem_8h_1ae4dfcb6df647ab2faa722e2ea931fef5" kindref="member">car</ref>(arg2))</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/><ref refid="xlsubr_8c_1ac5b0d9495e1d74cc9af3c96c32a67220" kindref="member">lval_equal</ref>(<ref refid="xldmem_8h_1a96627e132c289a5c4b3d678b4a6cc9f8" kindref="member">cdr</ref>(arg1),<ref refid="xldmem_8h_1a96627e132c289a5c4b3d678b4a6cc9f8" kindref="member">cdr</ref>(arg2))<sp/>:<sp/>FALSE);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(FALSE);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="cext_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="192"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/xlisp/xlsubr.c"/>
  </compounddef>
</doxygen>
