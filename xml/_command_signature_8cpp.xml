<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_command_signature_8cpp" kind="file" language="C++">
    <compoundname>CommandSignature.cpp</compoundname>
    <includes refid="_command_misc_8h" local="yes">CommandMisc.h</includes>
    <includes refid="_command_signature_8h" local="yes">CommandSignature.h</includes>
    <includes refid="_validators_8h" local="yes">Validators.h</includes>
    <incdepgraph>
      <node id="37023">
        <label>C:/_dev/OpenU/Audacity/audacity/src/commands/CommandSignature.cpp</label>
        <link refid="CommandSignature.cpp"/>
        <childnode refid="37024" relation="include">
        </childnode>
        <childnode refid="37029" relation="include">
        </childnode>
        <childnode refid="37028" relation="include">
        </childnode>
      </node>
      <node id="37024">
        <label>CommandMisc.h</label>
        <link refid="_command_misc_8h"/>
        <childnode refid="37025" relation="include">
        </childnode>
        <childnode refid="37026" relation="include">
        </childnode>
        <childnode refid="37027" relation="include">
        </childnode>
        <childnode refid="37028" relation="include">
        </childnode>
      </node>
      <node id="37027">
        <label>wx/variant.h</label>
      </node>
      <node id="37025">
        <label>map</label>
      </node>
      <node id="37026">
        <label>wx/string.h</label>
      </node>
      <node id="37029">
        <label>CommandSignature.h</label>
        <link refid="_command_signature_8h"/>
        <childnode refid="37024" relation="include">
        </childnode>
      </node>
      <node id="37028">
        <label>Validators.h</label>
        <link refid="_validators_8h"/>
      </node>
    </incdepgraph>
    <briefdescription>
<para>Definitions for <ref refid="class_command_signature" kindref="compound">CommandSignature</ref> class. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/>Audacity<sp/>-<sp/>A<sp/>Digital<sp/>Audio<sp/>Editor</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/>Copyright<sp/>1999-2009<sp/>Audacity<sp/>Team</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/>License:<sp/>wxwidgets</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/>Dan<sp/>Horgan</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment">******************************************************************/</highlight><highlight class="comment">/*******************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_command_misc_8h" kindref="compound">CommandMisc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_command_signature_8h" kindref="compound">CommandSignature.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_validators_8h" kindref="compound">Validators.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="class_command_signature_1aa03cca652a40e6c585fbf3b4abcfc926" refkind="member"><highlight class="normal"><ref refid="class_command_signature_1aa03cca652a40e6c585fbf3b4abcfc926" kindref="member">CommandSignature::~CommandSignature</ref>()</highlight></codeline>
<codeline lineno="21"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Delete<sp/>the<sp/>validators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/>ValidatorMap::iterator<sp/>iter;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(iter<sp/>=<sp/>mValidators.begin();<sp/>iter<sp/>!=<sp/>mValidators.end();<sp/>++iter)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>iter-&gt;second;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal">}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="class_command_signature_1a8a906a6cb0cdc3c732b2a7f196146a49" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_command_signature_1a8a906a6cb0cdc3c732b2a7f196146a49" kindref="member">CommandSignature::AddParameter</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>,</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxVariant<sp/>&amp;dft,</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_validator" kindref="compound">Validator</ref><sp/>*<ref refid="test__lib_f_l_a_c_2format_8c_1a06a21e13831b421c471dde0792924a2d" kindref="member">valid</ref>)</highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/>wxASSERT_MSG(valid-&gt;<ref refid="class_validator_1af3894f81595f2ce9d5c18c875a4a9472" kindref="member">Validate</ref>(dft),</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wxT(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>command<sp/>signature:<sp/>the<sp/>default<sp/>value<sp/>of<sp/>&apos;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>dft.MakeString()</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&apos;<sp/>for<sp/>the<sp/>&apos;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>name</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;&apos;<sp/>parameter<sp/>doesn&apos;t<sp/>satisfy<sp/>the<sp/>provided<sp/>validator.&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;<sp/>It<sp/>should<sp/>be<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>valid-&gt;<ref refid="class_validator_1a5e73a3e1ec8e85c8775e0ec8daff78ec" kindref="member">GetDescription</ref>()</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>wxT(</highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/>mDefaults.insert(std::pair&lt;wxString,<sp/>wxVariant&gt;(name,<sp/>dft));</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/>mValidators.insert(std::pair&lt;wxString,<sp/>Validator*&gt;(name,<sp/>valid));</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="class_command_signature_1a6fc90f8b6129d88bee681510993b8cb8" refkind="member"><highlight class="normal"><ref refid="_command_misc_8h_1ad01459a1b8a985ee81cde47239806288" kindref="member">ParamValueMap</ref><sp/><ref refid="class_command_signature_1a6fc90f8b6129d88bee681510993b8cb8" kindref="member">CommandSignature::GetDefaults</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="48"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mDefaults;</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="class_command_signature_1add826a2917a1c88c75a65c0c74021b88" refkind="member"><highlight class="normal"><ref refid="class_validator" kindref="compound">Validator</ref><sp/>&amp;<ref refid="class_command_signature_1add826a2917a1c88c75a65c0c74021b88" kindref="member">CommandSignature::GetValidator</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>wxString<sp/>&amp;paramName)</highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/>wxASSERT(mValidators.find(paramName)<sp/>!=<sp/>mValidators.end());</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*mValidators[paramName];</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/src/commands/CommandSignature.cpp"/>
  </compounddef>
</doxygen>
