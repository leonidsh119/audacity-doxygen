<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_block_file" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>BlockFile</compoundname>
    <derivedcompoundref refid="class_alias_block_file" prot="public" virt="non-virtual">AliasBlockFile</derivedcompoundref>
    <derivedcompoundref refid="class_legacy_block_file" prot="public" virt="non-virtual">LegacyBlockFile</derivedcompoundref>
    <derivedcompoundref refid="class_silent_block_file" prot="public" virt="non-virtual">SilentBlockFile</derivedcompoundref>
    <derivedcompoundref refid="class_simple_block_file" prot="public" virt="non-virtual">SimpleBlockFile</derivedcompoundref>
    <includes refid="_block_file_8h" local="no">BlockFile.h</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_block_file_1a0db96e19e318fc03ec706babee75be8f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class DirManager</definition>
        <argsstring></argsstring>
        <name>DirManager</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" line="136" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_block_file_1a45d40c2ff4be49563fffa62069e89e7f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class AudacityApp</definition>
        <argsstring></argsstring>
        <name>AudacityApp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" line="137" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_block_file_1a24c4db9b12ac4619d1b2a0966f0e756c" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class ODComputeSummaryTask</definition>
        <argsstring></argsstring>
        <name>ODComputeSummaryTask</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" line="139" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_block_file_1aee4dd21db513d608a0b91918d594fbbe" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class ODDecodeTask</definition>
        <argsstring></argsstring>
        <name>ODDecodeTask</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" line="140" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_block_file_1a1927ec7b2f6462da76274870b38d98c3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class ODPCMAliasBlockFile</definition>
        <argsstring></argsstring>
        <name>ODPCMAliasBlockFile</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" line="141" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" bodystart="141" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_block_file_1a7c526e18908248ae5b35a83a9e38122c" prot="private" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int BlockFile::mLockCount</definition>
        <argsstring></argsstring>
        <name>mLockCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" line="159" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_block_file_1a68870c07abaf98ac9cfef065bcfb8ee4" prot="private" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int BlockFile::mRefCount</definition>
        <argsstring></argsstring>
        <name>mRefCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" line="160" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" bodystart="160" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_block_file_1a8f309107cdfeb72236e97bdecf2a0379" prot="private" static="yes" mutable="no">
        <type>char *</type>
        <definition>char * BlockFile::fullSummary</definition>
        <argsstring></argsstring>
        <name>fullSummary</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" line="162" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" bodystart="162" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_block_file_1ab4d7e450d154ad4ccee1d0f4a26093f0" prot="protected" static="no" mutable="no">
        <type>wxFileName</type>
        <definition>wxFileName BlockFile::mFileName</definition>
        <argsstring></argsstring>
        <name>mFileName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" line="165" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_block_file_1a732a85cd5906a03310bd23fc91b83d40" prot="protected" static="no" mutable="no">
        <type><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref></type>
        <definition>sampleCount BlockFile::mLen</definition>
        <argsstring></argsstring>
        <name>mLen</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" line="166" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_block_file_1a4c81c30a570684d5287ed58acd3da259" prot="protected" static="no" mutable="no">
        <type><ref refid="class_summary_info" kindref="compound">SummaryInfo</ref></type>
        <definition>SummaryInfo BlockFile::mSummaryInfo</definition>
        <argsstring></argsstring>
        <name>mSummaryInfo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" line="167" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_block_file_1a733757c3a2c9d2e51beab8acbc86f913" prot="protected" static="no" mutable="no">
        <type>float</type>
        <definition>float BlockFile::mMin</definition>
        <argsstring></argsstring>
        <name>mMin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" line="168" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_block_file_1abda14ef73ea31a585b26e289a99ac356" prot="protected" static="no" mutable="no">
        <type>float</type>
        <definition>float BlockFile::mMax</definition>
        <argsstring></argsstring>
        <name>mMax</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" line="168" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_block_file_1a9b863f624b2d76a5ec29390cebed698f" prot="protected" static="no" mutable="no">
        <type>float</type>
        <definition>float BlockFile::mRMS</definition>
        <argsstring></argsstring>
        <name>mRMS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" line="168" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_block_file_1a670ed2ad2e13a94e3fb7c2ae32785811" prot="protected" static="no" mutable="no">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool BlockFile::mSilentLog</definition>
        <argsstring></argsstring>
        <name>mSilentLog</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" line="169" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" bodystart="169" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_block_file_1a26e78f672ba0d663668b5aa7e7f7902b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>BlockFile::BlockFile</definition>
        <argsstring>(wxFileName fileName, sampleCount samples)</argsstring>
        <name>BlockFile</name>
        <param>
          <type>wxFileName</type>
          <declname>fileName</declname>
        </param>
        <param>
          <type><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref></type>
          <declname>samples</declname>
        </param>
        <briefdescription>
<para>Construct a <ref refid="class_block_file" kindref="compound">BlockFile</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>Initializes the base <ref refid="class_block_file" kindref="compound">BlockFile</ref> data. The block is initially unlocked and its reference count is 1.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fileName</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the disk file associated with this <ref refid="class_block_file" kindref="compound">BlockFile</ref>. Not all BlockFiles will store their sample data here (for example, AliasBlockFiles read their data from elsewhere), but all BlockFiles will store at least the summary data here.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>samples</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of samples this <ref refid="class_block_file" kindref="compound">BlockFile</ref> contains. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" line="47" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.cpp" bodystart="101" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="class_block_file_1ac6dd550c49ac5c86d7e8c13bbedc76e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>BlockFile::~BlockFile</definition>
        <argsstring>()</argsstring>
        <name>~BlockFile</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" line="48" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.cpp" bodystart="111" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="class_block_file_1ad1355b9c8421a6f1a6b6d8cf3d3f073e" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>virtual int BlockFile::ReadData</definition>
        <argsstring>(samplePtr data, sampleFormat format, sampleCount start, sampleCount len)=0</argsstring>
        <name>ReadData</name>
        <reimplementedby refid="class_silent_block_file_1a80371366894075e0ce8ef5f09b5b09cc">ReadData</reimplementedby>
        <reimplementedby refid="class_p_c_m_alias_block_file_1ae1db29217139e4e04c129b1be9cc6dc7">ReadData</reimplementedby>
        <reimplementedby refid="class_legacy_block_file_1aa58ba2908ad820f6c01a9a838908569f">ReadData</reimplementedby>
        <reimplementedby refid="class_simple_block_file_1aa47fae91065e62427058eca80c9e3db0">ReadData</reimplementedby>
        <reimplementedby refid="class_o_d_decode_block_file_1a505cd171227fd1cd7e21faf9131289b3">ReadData</reimplementedby>
        <reimplementedby refid="class_o_d_p_c_m_alias_block_file_1a52ff6c8c85016d45e39e33eea8956ba7">ReadData</reimplementedby>
        <param>
          <type><ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref></type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792" kindref="member">sampleFormat</ref></type>
          <declname>format</declname>
        </param>
        <param>
          <type><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref></type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Retrieves audio data from this <ref refid="class_block_file" kindref="compound">BlockFile</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" line="55" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_block_file_1aa01d73c1d5f1951e0ff571f498e902c2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>virtual bool BlockFile::GetNeedWriteCacheToDisk</definition>
        <argsstring>()</argsstring>
        <name>GetNeedWriteCacheToDisk</name>
        <reimplementedby refid="class_simple_block_file_1abc2e6b30cab196f8bdd325c586176375">GetNeedWriteCacheToDisk</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" line="61" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" bodystart="61" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="class_block_file_1a037faa0473e04e4c21a3c96fe274b02f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>virtual void BlockFile::WriteCacheToDisk</definition>
        <argsstring>()</argsstring>
        <name>WriteCacheToDisk</name>
        <reimplementedby refid="class_simple_block_file_1a2c6893a7505bab05c0baac204f68ff1d">WriteCacheToDisk</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" line="62" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" bodystart="62" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="class_block_file_1a66f977ae0fc5cf2a58ecc359d8464b98" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>virtual bool BlockFile::GetNeedFillCache</definition>
        <argsstring>()</argsstring>
        <name>GetNeedFillCache</name>
        <reimplementedby refid="class_simple_block_file_1ab7a5974aa345db6e27da33bf535a4c4c">GetNeedFillCache</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" line="65" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" bodystart="65" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="class_block_file_1aa228bcd50e100ba28031dece974b73a8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>virtual void BlockFile::FillCache</definition>
        <argsstring>()</argsstring>
        <name>FillCache</name>
        <reimplementedby refid="class_simple_block_file_1a6bc1e4d2f9dcc7783f12447a768850b6">FillCache</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" line="66" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" bodystart="66" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="class_block_file_1a62527189fe371325e23f3802f20282f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>virtual void BlockFile::SaveXML</definition>
        <argsstring>(XMLWriter &amp;xmlFile)=0</argsstring>
        <name>SaveXML</name>
        <reimplementedby refid="class_legacy_alias_block_file_1a7563524d8ba1b8cb881d702c92d76b35">SaveXML</reimplementedby>
        <reimplementedby refid="class_p_c_m_alias_block_file_1ab20853be8b5afdcb0573ff82e92fbe96">SaveXML</reimplementedby>
        <reimplementedby refid="class_silent_block_file_1a9736f23cb10b2270b12064a9c37524b9">SaveXML</reimplementedby>
        <reimplementedby refid="class_legacy_block_file_1ae420fbdcabbd953d344de725a9894ae9">SaveXML</reimplementedby>
        <reimplementedby refid="class_simple_block_file_1a7bd4085ca1c7b284cbe79bd2353a0f60">SaveXML</reimplementedby>
        <reimplementedby refid="class_o_d_p_c_m_alias_block_file_1a2693e00c383ef58a4febd44eafaf2c6a">SaveXML</reimplementedby>
        <reimplementedby refid="class_o_d_decode_block_file_1af6a1047c0871303b4e5ea39bf2ea5cae">SaveXML</reimplementedby>
        <param>
          <type><ref refid="class_x_m_l_writer" kindref="compound">XMLWriter</ref> &amp;</type>
          <declname>xmlFile</declname>
        </param>
        <briefdescription>
<para>Stores a representation of this file in XML. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_block_file_1a07fa90d9e26b0f5c4bc76716aff0fa87" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>wxFileName</type>
        <definition>wxFileName BlockFile::GetFileName</definition>
        <argsstring>()</argsstring>
        <name>GetFileName</name>
        <reimplementedby refid="class_o_d_p_c_m_alias_block_file_1a6f5c7b27e19ac3f4734fa67cd8425ddd">GetFileName</reimplementedby>
        <reimplementedby refid="class_o_d_decode_block_file_1af09386a4f50fae5d7443d3f0a574c6bd">GetFileName</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets the filename of the disk file associated with this <ref refid="class_block_file" kindref="compound">BlockFile</ref> (can be empty <ndash/> some BlockFiles, like <ref refid="class_silent_block_file" kindref="compound">SilentBlockFile</ref>, correspond to no file on disk)</para><para>Returns the file name of the disk file associated with this <ref refid="class_block_file" kindref="compound">BlockFile</ref>. Not all BlockFiles store their sample data here, but most BlockFiles have at least their summary data here. (some, i.e. SilentBlockFiles, do not correspond to a file on disk and have empty file names) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" line="74" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.cpp" bodystart="122" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="class_block_file_1a3d4e44c3aacfcaa78e23c8868e8c3760" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void BlockFile::SetFileName</definition>
        <argsstring>(wxFileName &amp;name)</argsstring>
        <name>SetFileName</name>
        <reimplementedby refid="class_o_d_p_c_m_alias_block_file_1ab34483f6450bf17d5f3ff0d97adc7915">SetFileName</reimplementedby>
        <reimplementedby refid="class_o_d_decode_block_file_1a399d5106b382c4e57aca85a386191f74">SetFileName</reimplementedby>
        <param>
          <type>wxFileName &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>sets the file name the summary info will be saved in. threadsafe. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" line="75" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.cpp" bodystart="128" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="class_block_file_1a93fa23bb9606cafba976f2c0b818719c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref></type>
        <definition>virtual sampleCount BlockFile::GetLength</definition>
        <argsstring>()</argsstring>
        <name>GetLength</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" line="77" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" bodystart="77" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="class_block_file_1a9a6903a5c87598f8dc92041351a271d8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>virtual void BlockFile::SetLength</definition>
        <argsstring>(const sampleCount newLen)</argsstring>
        <name>SetLength</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref></type>
          <declname>newLen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" line="78" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" bodystart="78" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="class_block_file_1a5380b2450594af576dfd122cad12be1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void BlockFile::Lock</definition>
        <argsstring>()</argsstring>
        <name>Lock</name>
        <reimplementedby refid="class_o_d_p_c_m_alias_block_file_1a7af813c1503fdc98db4cc69a524e5679">Lock</reimplementedby>
        <briefdescription>
<para>Locks this <ref refid="class_block_file" kindref="compound">BlockFile</ref>, to prevent it from being moved. </para>        </briefdescription>
        <detaileddescription>
<para>Marks this <ref refid="class_block_file" kindref="compound">BlockFile</ref> as &quot;locked.&quot; A locked <ref refid="class_block_file" kindref="compound">BlockFile</ref> may not be moved or deleted, only copied. Locking a <ref refid="class_block_file" kindref="compound">BlockFile</ref> prevents it from disappearing if the project is saved in a different location. When doing a &quot;Save As,&quot; Audacity locks all blocks belonging to the already-existing project, to ensure that the existing project remains valid with all the blocks it needs. Audacity also locks the blocks of the last saved version of a project when the project is deleted so that the files aren&apos;t deleted when their refcount hits zero. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" line="81" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.cpp" bodystart="143" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="class_block_file_1addbc143efdfd7f74a7c6beed6023745f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void BlockFile::Unlock</definition>
        <argsstring>()</argsstring>
        <name>Unlock</name>
        <reimplementedby refid="class_o_d_p_c_m_alias_block_file_1a0533a1608bf3986e73e0eccea7fff703">Unlock</reimplementedby>
        <briefdescription>
<para>Unlock this <ref refid="class_block_file" kindref="compound">BlockFile</ref>, allowing it to be moved. </para>        </briefdescription>
        <detaileddescription>
<para>Marks this <ref refid="class_block_file" kindref="compound">BlockFile</ref> as &quot;unlocked.&quot;. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" line="83" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.cpp" bodystart="150" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="class_block_file_1a6f4769dbd80bb4a14e7d28fdad672ded" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool BlockFile::IsLocked</definition>
        <argsstring>()</argsstring>
        <name>IsLocked</name>
        <briefdescription>
<para>Returns TRUE if this <ref refid="class_block_file" kindref="compound">BlockFile</ref> is locked. </para>        </briefdescription>
        <detaileddescription>
<para>Returns true if the block is locked. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" line="85" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.cpp" bodystart="157" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="class_block_file_1ab69b57d79727454d7cea8d1f204791ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void BlockFile::GetMinMax</definition>
        <argsstring>(sampleCount start, sampleCount len, float *outMin, float *outMax, float *outRMS)</argsstring>
        <name>GetMinMax</name>
        <reimplementedby refid="class_o_d_decode_block_file_1accf9f62efe678804afaa8807e020fb2a">GetMinMax</reimplementedby>
        <reimplementedby refid="class_o_d_p_c_m_alias_block_file_1afc0a91ff2adba499ab67c165386c9fed">GetMinMax</reimplementedby>
        <param>
          <type><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref></type>
          <declname>len</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>outMin</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>outMax</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>outRMS</declname>
        </param>
        <briefdescription>
<para>Gets extreme values for the specified region. </para>        </briefdescription>
        <detaileddescription>
<para>Retrieves the minimum, maximum, and maximum RMS of the specified sample data in this block.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in this block where the region should begin </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of samples to include in the region </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>*outMin</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to where the minimum value for this region should be stored </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>*outMax</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to where the maximum value for this region should be stored </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>*outRMS</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to where the maximum RMS value for this region should be stored. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" line="88" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.cpp" bodystart="386" bodyend="411"/>
      </memberdef>
      <memberdef kind="function" id="class_block_file_1abae40b15d56cb0757abfd57ff036634a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void BlockFile::GetMinMax</definition>
        <argsstring>(float *outMin, float *outMax, float *outRMS)</argsstring>
        <name>GetMinMax</name>
        <reimplementedby refid="class_o_d_decode_block_file_1a1f281b587e3fa2e60f6d9eaa302e609e">GetMinMax</reimplementedby>
        <reimplementedby refid="class_o_d_p_c_m_alias_block_file_1ade47540564fbe9ff526e33b49507275c">GetMinMax</reimplementedby>
        <param>
          <type>float *</type>
          <declname>outMin</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>outMax</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>outRMS</declname>
        </param>
        <briefdescription>
<para>Gets extreme values for the entire block. </para>        </briefdescription>
        <detaileddescription>
<para>Retrieves the minimum, maximum, and maximum RMS of this entire block. This is faster than the other GetMinMax function since these values are already computed.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>*outMin</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to where the minimum value for this block should be stored </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>*outMax</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to where the maximum value for this block should be stored </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>*outRMS</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to where the maximum RMS value for this block should be stored. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" line="91" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.cpp" bodystart="423" bodyend="428"/>
      </memberdef>
      <memberdef kind="function" id="class_block_file_1a3f7acc98f1761d78cccbd031314a33ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool BlockFile::Read256</definition>
        <argsstring>(float *buffer, sampleCount start, sampleCount len)</argsstring>
        <name>Read256</name>
        <reimplementedby refid="class_o_d_decode_block_file_1a83cd4407475d246550770848437fffa5">Read256</reimplementedby>
        <reimplementedby refid="class_o_d_p_c_m_alias_block_file_1add9c7cca332ca0b0be4a61c55881369a">Read256</reimplementedby>
        <param>
          <type>float *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref></type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Returns the 256 byte summary data block. </para>        </briefdescription>
        <detaileddescription>
<para>Retrieves a portion of the 256-byte summary buffer from this <ref refid="class_block_file" kindref="compound">BlockFile</ref>. This data provides information about the minimum value, the maximum value, and the maximum RMS value for every group of 256 samples in the file.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>*buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>The area where the summary information will be written. It must be at least len*3 long. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in 256-sample increments </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of 256-sample summary frames to read </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" line="93" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.cpp" bodystart="439" bodyend="467"/>
      </memberdef>
      <memberdef kind="function" id="class_block_file_1acf929dfa98eab1cbd93b7d79394bc141" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool BlockFile::Read64K</definition>
        <argsstring>(float *buffer, sampleCount start, sampleCount len)</argsstring>
        <name>Read64K</name>
        <reimplementedby refid="class_o_d_decode_block_file_1a57b1b6efaee2a4d3023c2c9a6c9edb4c">Read64K</reimplementedby>
        <reimplementedby refid="class_o_d_p_c_m_alias_block_file_1a50e25f64944b108d82c7d1a14901571f">Read64K</reimplementedby>
        <param>
          <type>float *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref></type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Returns the 64K summary data block. </para>        </briefdescription>
        <detaileddescription>
<para>Retrieves a portion of the 64K summary buffer from this <ref refid="class_block_file" kindref="compound">BlockFile</ref>. This data provides information about the minimum value, the maximum value, and the maximum RMS value for every group of 64K samples in the file.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>*buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>The area where the summary information will be written. It must be at least len*3 long. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>start</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in 64K-sample increments </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of 64K-sample summary frames to read </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" line="95" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.cpp" bodystart="478" bodyend="507"/>
      </memberdef>
      <memberdef kind="function" id="class_block_file_1a9969d478c861eae0bdb98b71176906cf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>virtual bool BlockFile::IsAlias</definition>
        <argsstring>()</argsstring>
        <name>IsAlias</name>
        <reimplementedby refid="class_alias_block_file_1a3a5b00b376961bc254bb421e2e7de53d">IsAlias</reimplementedby>
        <briefdescription>
<para>Returns TRUE if this block references another disk file. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" line="98" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" bodystart="98" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="class_block_file_1ada91556581464e844478f51762f50a70" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>virtual bool BlockFile::IsSummaryAvailable</definition>
        <argsstring>()</argsstring>
        <name>IsSummaryAvailable</name>
        <reimplementedby refid="class_o_d_decode_block_file_1a3b9eebb6117547ddfb2eafb06923b871">IsSummaryAvailable</reimplementedby>
        <reimplementedby refid="class_o_d_p_c_m_alias_block_file_1a181b7a8b1214e460d9852095468279e2">IsSummaryAvailable</reimplementedby>
        <briefdescription>
<para>Returns TRUE if this block&apos;s complete summary has been computed and is ready (for OD) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" line="101" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" bodystart="101" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="class_block_file_1a8908840cad2f547172b3a2373f9dd347" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>virtual bool BlockFile::IsDataAvailable</definition>
        <argsstring>()</argsstring>
        <name>IsDataAvailable</name>
        <reimplementedby refid="class_o_d_decode_block_file_1adb995dff9bfdebb4dda458aa469289af">IsDataAvailable</reimplementedby>
        <briefdescription>
<para>Returns TRUE if this block&apos;s complete data is ready to be accessed by Read() </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" line="104" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" bodystart="104" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="class_block_file_1ac7817525642f53db4350e365971fddcc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>virtual bool BlockFile::IsSummaryBeingComputed</definition>
        <argsstring>()</argsstring>
        <name>IsSummaryBeingComputed</name>
        <reimplementedby refid="class_o_d_decode_block_file_1a865340633204112fa48b2040b81becfb">IsSummaryBeingComputed</reimplementedby>
        <reimplementedby refid="class_o_d_p_c_m_alias_block_file_1aee1008f2f2d00561429b783d64bc5b82">IsSummaryBeingComputed</reimplementedby>
        <briefdescription>
<para>Returns TRUE if the summary has not yet been written, but is actively being computed and written to disk. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" line="107" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" bodystart="107" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="class_block_file_1a8f7cc554062ef6d356eb0ab7f3229df5" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="class_block_file" kindref="compound">BlockFile</ref> *</type>
        <definition>virtual BlockFile* BlockFile::Copy</definition>
        <argsstring>(wxFileName newFileName)=0</argsstring>
        <name>Copy</name>
        <reimplementedby refid="class_legacy_alias_block_file_1a9d9a2503627bae02ae06e890ae2c7546">Copy</reimplementedby>
        <reimplementedby refid="class_silent_block_file_1a6a2614cf88c47e75e2742f866826f1d4">Copy</reimplementedby>
        <reimplementedby refid="class_p_c_m_alias_block_file_1a89af149b32993d976a05639292366ebd">Copy</reimplementedby>
        <reimplementedby refid="class_legacy_block_file_1ad756e67912292d3f699d9f4666153df8">Copy</reimplementedby>
        <reimplementedby refid="class_simple_block_file_1afb58bbeb0e3c55dea13ba4db37f8acb4">Copy</reimplementedby>
        <reimplementedby refid="class_o_d_p_c_m_alias_block_file_1ad438dbf015da43581f8b5d218cc83ff2">Copy</reimplementedby>
        <reimplementedby refid="class_o_d_decode_block_file_1a5ea414424dadcc1a7120a48bb535b871">Copy</reimplementedby>
        <param>
          <type>wxFileName</type>
          <declname>newFileName</declname>
        </param>
        <briefdescription>
<para>Create a NEW <ref refid="class_block_file" kindref="compound">BlockFile</ref> identical to this, using the given filename. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" line="110" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_block_file_1a8f1eb8b4aecfb5574b9a0054eb431546" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>wxLongLong</type>
        <definition>virtual wxLongLong BlockFile::GetSpaceUsage</definition>
        <argsstring>()=0</argsstring>
        <name>GetSpaceUsage</name>
        <reimplementedby refid="class_silent_block_file_1a5273837f55e3a5ca86c17a6496015a91">GetSpaceUsage</reimplementedby>
        <reimplementedby refid="class_legacy_block_file_1ac64775a57b6a5d7c870ba5cbe8bf357b">GetSpaceUsage</reimplementedby>
        <reimplementedby refid="class_o_d_decode_block_file_1a0760d0a35b49e1cd54ef24b06baad9a0">GetSpaceUsage</reimplementedby>
        <reimplementedby refid="class_o_d_p_c_m_alias_block_file_1a6a84ebdbd41ecd17ef690f9067b66305">GetSpaceUsage</reimplementedby>
        <reimplementedby refid="class_simple_block_file_1a22780e266548fb57b029706726f01472">GetSpaceUsage</reimplementedby>
        <reimplementedby refid="class_alias_block_file_1afca79ab159bebe787ecbf025fe645249">GetSpaceUsage</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" line="112" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_block_file_1ab57c263f507f60b0072390d4e876ea57" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>virtual void BlockFile::Recover</definition>
        <argsstring>()=0</argsstring>
        <name>Recover</name>
        <reimplementedby refid="class_legacy_alias_block_file_1abc85349ae38891ddebb0db926df9f97f">Recover</reimplementedby>
        <reimplementedby refid="class_p_c_m_alias_block_file_1a9d912e149c49e942d58dbbd363fb33be">Recover</reimplementedby>
        <reimplementedby refid="class_silent_block_file_1afbae18ac108b8555c5bfa42f1b99b4d2">Recover</reimplementedby>
        <reimplementedby refid="class_legacy_block_file_1acb70002f6792fcc5cd15181c8513db2b">Recover</reimplementedby>
        <reimplementedby refid="class_simple_block_file_1ad0ed207e9d4d21558f14b0e0df7cbb72">Recover</reimplementedby>
        <reimplementedby refid="class_o_d_p_c_m_alias_block_file_1a645b0cb82890afcd09f20c5b110c1b10">Recover</reimplementedby>
        <reimplementedby refid="class_o_d_decode_block_file_1a638c05affdeb4eb90753b3729741012d">Recover</reimplementedby>
        <briefdescription>
<para>if the on-disk state disappeared, either recover it (if it was </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" line="118" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_block_file_1a8db50090685c558873cddb71ace1d309" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void BlockFile::SilenceLog</definition>
        <argsstring>()</argsstring>
        <name>SilenceLog</name>
        <briefdescription>
<para>if we&apos;ve detected an on-disk problem, the user opted to </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" line="123" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" bodystart="123" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="class_block_file_1a4eda965a6ab0b7019b3fe1e12c93e969" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>virtual void BlockFile::CloseLock</definition>
        <argsstring>()</argsstring>
        <name>CloseLock</name>
        <reimplementedby refid="class_o_d_p_c_m_alias_block_file_1a24fc4b6e1e0200e23d1ba746d1f666f2">CloseLock</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>when the project closes, it locks the blockfiles. Override this in case it needs special treatment </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" line="127" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" bodystart="127" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="class_block_file_1ab3d2edb6eb43083e2126c15b1c160d83" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>virtual void BlockFile::LockRead</definition>
        <argsstring>()</argsstring>
        <name>LockRead</name>
        <reimplementedby refid="class_o_d_p_c_m_alias_block_file_1a4a88dd841ed537ddccd37d503b2642a6">LockRead</reimplementedby>
        <reimplementedby refid="class_o_d_decode_block_file_1abb091b40dda043da3921d1aada4f91d6">LockRead</reimplementedby>
        <briefdescription>
<para>Prevents a read on other threads. The basic blockfile runs on only one thread, so does nothing. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" line="130" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" bodystart="130" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="class_block_file_1aff31d5108eaf81313f3cde9f93704e2d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>virtual void BlockFile::UnlockRead</definition>
        <argsstring>()</argsstring>
        <name>UnlockRead</name>
        <reimplementedby refid="class_o_d_p_c_m_alias_block_file_1a1165611735ce562282971dada1623f85">UnlockRead</reimplementedby>
        <reimplementedby refid="class_o_d_decode_block_file_1a44f54d9088c6e2a64537e0a68c1a2696">UnlockRead</reimplementedby>
        <briefdescription>
<para>Allows reading on other threads. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" line="132" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" bodystart="132" bodyend="132"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_block_file_1a2850975073dae96a78ac8b8e35ac376d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void BlockFile::Deinit</definition>
        <argsstring>()</argsstring>
        <name>Deinit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" line="50" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.cpp" bodystart="184" bodyend="187"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_block_file_1ad162af7a8f172ffce5ae8a35ae89028d" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void BlockFile::Ref</definition>
        <argsstring>()</argsstring>
        <name>Ref</name>
        <reimplementedby refid="class_o_d_p_c_m_alias_block_file_1a0c4be2afea08f2f2555760922b5771b9">Ref</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Increases the reference count of this block by one. Only <ref refid="class_dir_manager" kindref="compound">DirManager</ref> should call this method. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" line="143" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.cpp" bodystart="164" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="class_block_file_1a687abedb8ba579602476c7a97613466a" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>bool BlockFile::Deref</definition>
        <argsstring>()</argsstring>
        <name>Deref</name>
        <reimplementedby refid="class_o_d_p_c_m_alias_block_file_1ad2cec8e292838b91f1b3e896fd393f0c">Deref</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Decreases the reference count of this block by one. If this causes the count to become zero, deletes the associated disk file and deletes this object </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" line="144" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.cpp" bodystart="173" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="class_block_file_1a33770cb43c1226ba9ff0df507456ac85" prot="private" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>virtual int BlockFile::RefCount</definition>
        <argsstring>()</argsstring>
        <name>RefCount</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" line="145" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" bodystart="145" bodyend="145"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_block_file_1a87b1269de50226600c5f52729117be30" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
        <definition>void * BlockFile::CalcSummary</definition>
        <argsstring>(samplePtr buffer, sampleCount len, sampleFormat format)</argsstring>
        <name>CalcSummary</name>
        <reimplementedby refid="class_o_d_p_c_m_alias_block_file_1a12bb8dca9c683e2634a38187c2db2000">CalcSummary</reimplementedby>
        <reimplementedby refid="class_o_d_decode_block_file_1aa1b2607de0dd0fe2c456221154dc078d">CalcSummary</reimplementedby>
        <param>
          <type><ref refid="include_2audacity_2_types_8h_1aaafb46d1caf7c79262fec96b577215fe" kindref="member">samplePtr</ref></type>
          <declname>buffer</declname>
        </param>
        <param>
          <type><ref refid="include_2audacity_2_types_8h_1afa427e1f521ea5ec12d054e8bd4d0f71" kindref="member">sampleCount</ref></type>
          <declname>len</declname>
        </param>
        <param>
          <type><ref refid="include_2audacity_2_types_8h_1a9938d2e2f6adef23e745cd80ef379792" kindref="member">sampleFormat</ref></type>
          <declname>format</declname>
        </param>
        <briefdescription>
<para>Calculate summary data for the given sample data. </para>        </briefdescription>
        <detaileddescription>
<para>Get a buffer containing a summary block describing this sample data. This must be called by derived classes when they are constructed, to allow them to construct their summary data, after which they should write that data to their disk file.</para><para>This method also has the side effect of setting the mMin, mMax, and mRMS members of this class.</para><para>You must not DELETE the returned buffer; it is static to this method.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>A buffer containing the sample data to be analyzed </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>The length of the sample data </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>format</parametername>
</parameternamelist>
<parameterdescription>
<para>The format of the sample data. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" line="149" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.cpp" bodystart="203" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="class_block_file_1ab9edd6f8cd08f7075b5c878c9a4ea121" prot="protected" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>virtual bool BlockFile::ReadSummary</definition>
        <argsstring>(void *data)=0</argsstring>
        <name>ReadSummary</name>
        <reimplementedby refid="class_silent_block_file_1a2b2a57a9473cb73f6e671ee304fd87d3">ReadSummary</reimplementedby>
        <reimplementedby refid="class_legacy_block_file_1a7648b5ac67a7d9d9634fb956b5e17980">ReadSummary</reimplementedby>
        <reimplementedby refid="class_simple_block_file_1addcddf2634ca5ec580fa69d0d603d6d0">ReadSummary</reimplementedby>
        <reimplementedby refid="class_o_d_decode_block_file_1acc66b00623b395802e3f339df2673239">ReadSummary</reimplementedby>
        <reimplementedby refid="class_o_d_p_c_m_alias_block_file_1abd6dc5b3aaa8b3ba396bb08cf4b29026">ReadSummary</reimplementedby>
        <reimplementedby refid="class_alias_block_file_1a7f30a5da5964e3dfbd35657f3bacbf9b">ReadSummary</reimplementedby>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Read the summary section of the file. Derived classes implement. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" line="152" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_block_file_1abb3580667f6451b2ab0d4cc1a45f7a7a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void BlockFile::FixSummary</definition>
        <argsstring>(void *data)</argsstring>
        <name>FixSummary</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Byte-swap the summary data, in case it was saved by a system on a different platform </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" line="156" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.cpp" bodystart="340" bodyend="373"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A <ref refid="class_block_file" kindref="compound">BlockFile</ref> is a chunk of immutable audio data. </para>    </briefdescription>
    <detaileddescription>
<para>A <ref refid="class_block_file" kindref="compound">BlockFile</ref> represents a chunk of audio data. These chunks are assembled into sequences by the class <ref refid="class_sequence" kindref="compound">Sequence</ref>. These classes are at the heart of how Audacity stores audio data.</para><para><ref refid="class_block_file" kindref="compound">BlockFile</ref> is an abstract base class that can be implemented in many different ways. However it does have a fairly large amount of shared code that deals with the physical file and manipulating the summary data.</para><para><ref refid="class_block_file" kindref="compound">BlockFile</ref> should be thought of as an immutable class. After it is constructed, it is essentially never changed (though there are a few exceptions). Most notably, the audio data and summary data are never altered once it is constructed. This is important to some of the derived classes that are actually aliases to audio data stored in existing files.</para><para>BlockFiles are reference-counted, and deleted when their reference count hits zero. <ref refid="class_dir_manager" kindref="compound">DirManager</ref> is the class responsible for constructing and managing BlockFiles and managing their reference counts. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="1503">
        <label>LegacyBlockFile</label>
        <link refid="class_legacy_block_file"/>
        <childnode refid="1498" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1502">
        <label>ODPCMAliasBlockFile</label>
        <link refid="class_o_d_p_c_m_alias_block_file"/>
        <childnode refid="1500" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1501">
        <label>LegacyAliasBlockFile</label>
        <link refid="class_legacy_alias_block_file"/>
        <childnode refid="1500" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1500">
        <label>PCMAliasBlockFile</label>
        <link refid="class_p_c_m_alias_block_file"/>
        <childnode refid="1499" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1505">
        <label>SimpleBlockFile</label>
        <link refid="class_simple_block_file"/>
        <childnode refid="1498" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1498">
        <label>BlockFile</label>
        <link refid="class_block_file"/>
      </node>
      <node id="1506">
        <label>ODDecodeBlockFile</label>
        <link refid="class_o_d_decode_block_file"/>
        <childnode refid="1505" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1499">
        <label>AliasBlockFile</label>
        <link refid="class_alias_block_file"/>
        <childnode refid="1498" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1504">
        <label>SilentBlockFile</label>
        <link refid="class_silent_block_file"/>
        <childnode refid="1498" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1508">
        <label>SummaryInfo</label>
        <link refid="class_summary_info"/>
      </node>
      <node id="1507">
        <label>BlockFile</label>
        <link refid="class_block_file"/>
        <childnode refid="1508" relation="usage">
          <edgelabel>mSummaryInfo</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" line="41" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/src/BlockFile.h" bodystart="41" bodyend="170"/>
    <listofallmembers>
      <member refid="class_block_file_1a45d40c2ff4be49563fffa62069e89e7f" prot="private" virt="non-virtual"><scope>BlockFile</scope><name>AudacityApp</name></member>
      <member refid="class_block_file_1a26e78f672ba0d663668b5aa7e7f7902b" prot="public" virt="non-virtual"><scope>BlockFile</scope><name>BlockFile</name></member>
      <member refid="class_block_file_1a87b1269de50226600c5f52729117be30" prot="protected" virt="virtual"><scope>BlockFile</scope><name>CalcSummary</name></member>
      <member refid="class_block_file_1a4eda965a6ab0b7019b3fe1e12c93e969" prot="public" virt="virtual"><scope>BlockFile</scope><name>CloseLock</name></member>
      <member refid="class_block_file_1a8f7cc554062ef6d356eb0ab7f3229df5" prot="public" virt="pure-virtual"><scope>BlockFile</scope><name>Copy</name></member>
      <member refid="class_block_file_1a2850975073dae96a78ac8b8e35ac376d" prot="public" virt="non-virtual"><scope>BlockFile</scope><name>Deinit</name></member>
      <member refid="class_block_file_1a687abedb8ba579602476c7a97613466a" prot="private" virt="virtual"><scope>BlockFile</scope><name>Deref</name></member>
      <member refid="class_block_file_1a0db96e19e318fc03ec706babee75be8f" prot="private" virt="non-virtual"><scope>BlockFile</scope><name>DirManager</name></member>
      <member refid="class_block_file_1aa228bcd50e100ba28031dece974b73a8" prot="public" virt="virtual"><scope>BlockFile</scope><name>FillCache</name></member>
      <member refid="class_block_file_1abb3580667f6451b2ab0d4cc1a45f7a7a" prot="protected" virt="virtual"><scope>BlockFile</scope><name>FixSummary</name></member>
      <member refid="class_block_file_1a8f309107cdfeb72236e97bdecf2a0379" prot="private" virt="non-virtual"><scope>BlockFile</scope><name>fullSummary</name></member>
      <member refid="class_block_file_1a07fa90d9e26b0f5c4bc76716aff0fa87" prot="public" virt="virtual"><scope>BlockFile</scope><name>GetFileName</name></member>
      <member refid="class_block_file_1a93fa23bb9606cafba976f2c0b818719c" prot="public" virt="virtual"><scope>BlockFile</scope><name>GetLength</name></member>
      <member refid="class_block_file_1ab69b57d79727454d7cea8d1f204791ba" prot="public" virt="virtual"><scope>BlockFile</scope><name>GetMinMax</name></member>
      <member refid="class_block_file_1abae40b15d56cb0757abfd57ff036634a" prot="public" virt="virtual"><scope>BlockFile</scope><name>GetMinMax</name></member>
      <member refid="class_block_file_1a66f977ae0fc5cf2a58ecc359d8464b98" prot="public" virt="virtual"><scope>BlockFile</scope><name>GetNeedFillCache</name></member>
      <member refid="class_block_file_1aa01d73c1d5f1951e0ff571f498e902c2" prot="public" virt="virtual"><scope>BlockFile</scope><name>GetNeedWriteCacheToDisk</name></member>
      <member refid="class_block_file_1a8f1eb8b4aecfb5574b9a0054eb431546" prot="public" virt="pure-virtual"><scope>BlockFile</scope><name>GetSpaceUsage</name></member>
      <member refid="class_block_file_1a9969d478c861eae0bdb98b71176906cf" prot="public" virt="virtual"><scope>BlockFile</scope><name>IsAlias</name></member>
      <member refid="class_block_file_1a8908840cad2f547172b3a2373f9dd347" prot="public" virt="virtual"><scope>BlockFile</scope><name>IsDataAvailable</name></member>
      <member refid="class_block_file_1a6f4769dbd80bb4a14e7d28fdad672ded" prot="public" virt="virtual"><scope>BlockFile</scope><name>IsLocked</name></member>
      <member refid="class_block_file_1ada91556581464e844478f51762f50a70" prot="public" virt="virtual"><scope>BlockFile</scope><name>IsSummaryAvailable</name></member>
      <member refid="class_block_file_1ac7817525642f53db4350e365971fddcc" prot="public" virt="virtual"><scope>BlockFile</scope><name>IsSummaryBeingComputed</name></member>
      <member refid="class_block_file_1a5380b2450594af576dfd122cad12be1c" prot="public" virt="virtual"><scope>BlockFile</scope><name>Lock</name></member>
      <member refid="class_block_file_1ab3d2edb6eb43083e2126c15b1c160d83" prot="public" virt="virtual"><scope>BlockFile</scope><name>LockRead</name></member>
      <member refid="class_block_file_1ab4d7e450d154ad4ccee1d0f4a26093f0" prot="protected" virt="non-virtual"><scope>BlockFile</scope><name>mFileName</name></member>
      <member refid="class_block_file_1a732a85cd5906a03310bd23fc91b83d40" prot="protected" virt="non-virtual"><scope>BlockFile</scope><name>mLen</name></member>
      <member refid="class_block_file_1a7c526e18908248ae5b35a83a9e38122c" prot="private" virt="non-virtual"><scope>BlockFile</scope><name>mLockCount</name></member>
      <member refid="class_block_file_1abda14ef73ea31a585b26e289a99ac356" prot="protected" virt="non-virtual"><scope>BlockFile</scope><name>mMax</name></member>
      <member refid="class_block_file_1a733757c3a2c9d2e51beab8acbc86f913" prot="protected" virt="non-virtual"><scope>BlockFile</scope><name>mMin</name></member>
      <member refid="class_block_file_1a68870c07abaf98ac9cfef065bcfb8ee4" prot="private" virt="non-virtual"><scope>BlockFile</scope><name>mRefCount</name></member>
      <member refid="class_block_file_1a9b863f624b2d76a5ec29390cebed698f" prot="protected" virt="non-virtual"><scope>BlockFile</scope><name>mRMS</name></member>
      <member refid="class_block_file_1a670ed2ad2e13a94e3fb7c2ae32785811" prot="protected" virt="non-virtual"><scope>BlockFile</scope><name>mSilentLog</name></member>
      <member refid="class_block_file_1a4c81c30a570684d5287ed58acd3da259" prot="protected" virt="non-virtual"><scope>BlockFile</scope><name>mSummaryInfo</name></member>
      <member refid="class_block_file_1a24c4db9b12ac4619d1b2a0966f0e756c" prot="private" virt="non-virtual"><scope>BlockFile</scope><name>ODComputeSummaryTask</name></member>
      <member refid="class_block_file_1aee4dd21db513d608a0b91918d594fbbe" prot="private" virt="non-virtual"><scope>BlockFile</scope><name>ODDecodeTask</name></member>
      <member refid="class_block_file_1a1927ec7b2f6462da76274870b38d98c3" prot="private" virt="non-virtual"><scope>BlockFile</scope><name>ODPCMAliasBlockFile</name></member>
      <member refid="class_block_file_1a3f7acc98f1761d78cccbd031314a33ea" prot="public" virt="virtual"><scope>BlockFile</scope><name>Read256</name></member>
      <member refid="class_block_file_1acf929dfa98eab1cbd93b7d79394bc141" prot="public" virt="virtual"><scope>BlockFile</scope><name>Read64K</name></member>
      <member refid="class_block_file_1ad1355b9c8421a6f1a6b6d8cf3d3f073e" prot="public" virt="pure-virtual"><scope>BlockFile</scope><name>ReadData</name></member>
      <member refid="class_block_file_1ab9edd6f8cd08f7075b5c878c9a4ea121" prot="protected" virt="pure-virtual"><scope>BlockFile</scope><name>ReadSummary</name></member>
      <member refid="class_block_file_1ab57c263f507f60b0072390d4e876ea57" prot="public" virt="pure-virtual"><scope>BlockFile</scope><name>Recover</name></member>
      <member refid="class_block_file_1ad162af7a8f172ffce5ae8a35ae89028d" prot="private" virt="virtual"><scope>BlockFile</scope><name>Ref</name></member>
      <member refid="class_block_file_1a33770cb43c1226ba9ff0df507456ac85" prot="private" virt="virtual"><scope>BlockFile</scope><name>RefCount</name></member>
      <member refid="class_block_file_1a62527189fe371325e23f3802f20282f8" prot="public" virt="pure-virtual"><scope>BlockFile</scope><name>SaveXML</name></member>
      <member refid="class_block_file_1a3d4e44c3aacfcaa78e23c8868e8c3760" prot="public" virt="virtual"><scope>BlockFile</scope><name>SetFileName</name></member>
      <member refid="class_block_file_1a9a6903a5c87598f8dc92041351a271d8" prot="public" virt="virtual"><scope>BlockFile</scope><name>SetLength</name></member>
      <member refid="class_block_file_1a8db50090685c558873cddb71ace1d309" prot="public" virt="non-virtual"><scope>BlockFile</scope><name>SilenceLog</name></member>
      <member refid="class_block_file_1addbc143efdfd7f74a7c6beed6023745f" prot="public" virt="virtual"><scope>BlockFile</scope><name>Unlock</name></member>
      <member refid="class_block_file_1aff31d5108eaf81313f3cde9f93704e2d" prot="public" virt="virtual"><scope>BlockFile</scope><name>UnlockRead</name></member>
      <member refid="class_block_file_1a037faa0473e04e4c21a3c96fe274b02f" prot="public" virt="virtual"><scope>BlockFile</scope><name>WriteCacheToDisk</name></member>
      <member refid="class_block_file_1ac6dd550c49ac5c86d7e8c13bbedc76e6" prot="public" virt="virtual"><scope>BlockFile</scope><name>~BlockFile</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
