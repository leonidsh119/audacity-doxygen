<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_format_classifier_8cpp" kind="file" language="C++">
    <compoundname>FormatClassifier.cpp</compoundname>
    <includes local="no">stdint.h</includes>
    <includes local="no">cmath</includes>
    <includes local="no">cfloat</includes>
    <includes local="no">vector</includes>
    <includes local="no">cstdio</includes>
    <includes local="no">wx/defs.h</includes>
    <includes refid="_multi_format_reader_8h" local="yes">MultiFormatReader.h</includes>
    <includes refid="_spec_power_meter_8h" local="yes">SpecPowerMeter.h</includes>
    <includes local="yes">sndfile.h</includes>
    <includes refid="_format_classifier_8h" local="yes">FormatClassifier.h</includes>
    <incdepgraph>
      <node id="46513">
        <label>stdint.h</label>
      </node>
      <node id="46514">
        <label>cmath</label>
      </node>
      <node id="46515">
        <label>cfloat</label>
      </node>
      <node id="46518">
        <label>wx/defs.h</label>
      </node>
      <node id="46521">
        <label>sndfile.h</label>
      </node>
      <node id="46517">
        <label>cstdio</label>
      </node>
      <node id="46516">
        <label>vector</label>
      </node>
      <node id="46522">
        <label>FormatClassifier.h</label>
        <link refid="_format_classifier_8h"/>
      </node>
      <node id="46520">
        <label>SpecPowerMeter.h</label>
        <link refid="_spec_power_meter_8h"/>
      </node>
      <node id="46512">
        <label>C:/_dev/OpenU/Audacity/audacity/src/import/FormatClassifier.cpp</label>
        <link refid="FormatClassifier.cpp"/>
        <childnode refid="46513" relation="include">
        </childnode>
        <childnode refid="46514" relation="include">
        </childnode>
        <childnode refid="46515" relation="include">
        </childnode>
        <childnode refid="46516" relation="include">
        </childnode>
        <childnode refid="46517" relation="include">
        </childnode>
        <childnode refid="46518" relation="include">
        </childnode>
        <childnode refid="46519" relation="include">
        </childnode>
        <childnode refid="46520" relation="include">
        </childnode>
        <childnode refid="46521" relation="include">
        </childnode>
        <childnode refid="46522" relation="include">
        </childnode>
      </node>
      <node id="46519">
        <label>MultiFormatReader.h</label>
        <link refid="_multi_format_reader_8h"/>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>Audacity:<sp/>A<sp/>Digital<sp/>Audio<sp/>Editor</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>FormatClassifier.cpp</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>Philipp<sp/>Sibler</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment">******************************************************************/</highlight><highlight class="comment">/*******************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cfloat&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdio&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/defs.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_multi_format_reader_8h" kindref="compound">MultiFormatReader.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_spec_power_meter_8h" kindref="compound">SpecPowerMeter.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;sndfile.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_format_classifier_8h" kindref="compound">FormatClassifier.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="class_format_classifier_1abec9c72f9f910f16217e45f516622347" refkind="member"><highlight class="normal"><ref refid="class_format_classifier_1abec9c72f9f910f16217e45f516622347" kindref="member">FormatClassifier::FormatClassifier</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="octave__test_8m_1a2ff994e16bf9521154de4cf659a3b689" kindref="member">filename</ref>)<sp/>:</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/>mReader(filename),</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/>mMeter(cSiglen)</highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_format_classifier_1_1_format_class_t" kindref="compound">FormatClassT</ref><sp/>fClass;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Build<sp/>buffers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/>mSigBuffer<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[cSiglen];</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/>mAuxBuffer<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[cSiglen];<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/>mRawBuffer<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>[cSiglen<sp/>*<sp/>8];</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Define<sp/>the<sp/>classification<sp/>classes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/>fClass.<ref refid="struct_format_classifier_1_1_format_class_t_1ad371fa4756fd4e996f5394b61bac3e7c" kindref="member">endian</ref><sp/>=<sp/><ref refid="class_machine_endianness_1a1d179c9c1da7949f5670f5654e0be09ba63849a8f1aad67b2313babb52a87922a" kindref="member">MachineEndianness::Little</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/>fClass.<ref refid="struct_format_classifier_1_1_format_class_t_1a743513705fe5c9a27547960c6be030ca" kindref="member">format</ref><sp/>=<sp/><ref refid="class_multi_format_reader_1a6669d0a4e5bb7b72224b6769fea22566a72c30f7ddbe3afc7abd8e56e1b402b92" kindref="member">MultiFormatReader::Int8</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/>mClasses.push_back(fClass);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/>fClass.<ref refid="struct_format_classifier_1_1_format_class_t_1a743513705fe5c9a27547960c6be030ca" kindref="member">format</ref><sp/>=<sp/><ref refid="class_multi_format_reader_1a6669d0a4e5bb7b72224b6769fea22566acc7a415ab5d8c16475bd3f546967f046" kindref="member">MultiFormatReader::Int16</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/>mClasses.push_back(fClass);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/>fClass.<ref refid="struct_format_classifier_1_1_format_class_t_1a743513705fe5c9a27547960c6be030ca" kindref="member">format</ref><sp/>=<sp/><ref refid="class_multi_format_reader_1a6669d0a4e5bb7b72224b6769fea22566a98e833af2a8e375bed513cb9cf5819dd" kindref="member">MultiFormatReader::Int32</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/>mClasses.push_back(fClass);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/>fClass.<ref refid="struct_format_classifier_1_1_format_class_t_1a743513705fe5c9a27547960c6be030ca" kindref="member">format</ref><sp/>=<sp/><ref refid="class_multi_format_reader_1a6669d0a4e5bb7b72224b6769fea22566a76b10754067e189b4d75ede3a922e507" kindref="member">MultiFormatReader::Uint8</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/>mClasses.push_back(fClass);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/>fClass.<ref refid="struct_format_classifier_1_1_format_class_t_1a743513705fe5c9a27547960c6be030ca" kindref="member">format</ref><sp/>=<sp/><ref refid="class_multi_format_reader_1a6669d0a4e5bb7b72224b6769fea22566a2eaaacc5845f95643712f0f3fd811f3f" kindref="member">MultiFormatReader::Float</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/>mClasses.push_back(fClass);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/>fClass.<ref refid="struct_format_classifier_1_1_format_class_t_1a743513705fe5c9a27547960c6be030ca" kindref="member">format</ref><sp/>=<sp/><ref refid="class_multi_format_reader_1a6669d0a4e5bb7b72224b6769fea22566aa7474bb98cf05a35905a55aef28e98a3" kindref="member">MultiFormatReader::Double</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/>mClasses.push_back(fClass);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/>fClass.<ref refid="struct_format_classifier_1_1_format_class_t_1ad371fa4756fd4e996f5394b61bac3e7c" kindref="member">endian</ref><sp/>=<sp/><ref refid="class_machine_endianness_1a1d179c9c1da7949f5670f5654e0be09ba08091e348453df47a2cb4be13cb3d3f4" kindref="member">MachineEndianness::Big</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/>fClass.<ref refid="struct_format_classifier_1_1_format_class_t_1a743513705fe5c9a27547960c6be030ca" kindref="member">format</ref><sp/>=<sp/><ref refid="class_multi_format_reader_1a6669d0a4e5bb7b72224b6769fea22566a72c30f7ddbe3afc7abd8e56e1b402b92" kindref="member">MultiFormatReader::Int8</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/>mClasses.push_back(fClass);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/>fClass.<ref refid="struct_format_classifier_1_1_format_class_t_1a743513705fe5c9a27547960c6be030ca" kindref="member">format</ref><sp/>=<sp/><ref refid="class_multi_format_reader_1a6669d0a4e5bb7b72224b6769fea22566acc7a415ab5d8c16475bd3f546967f046" kindref="member">MultiFormatReader::Int16</ref>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/>mClasses.push_back(fClass);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/>fClass.<ref refid="struct_format_classifier_1_1_format_class_t_1a743513705fe5c9a27547960c6be030ca" kindref="member">format</ref><sp/>=<sp/><ref refid="class_multi_format_reader_1a6669d0a4e5bb7b72224b6769fea22566a98e833af2a8e375bed513cb9cf5819dd" kindref="member">MultiFormatReader::Int32</ref>;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/>mClasses.push_back(fClass);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/>fClass.<ref refid="struct_format_classifier_1_1_format_class_t_1a743513705fe5c9a27547960c6be030ca" kindref="member">format</ref><sp/>=<sp/><ref refid="class_multi_format_reader_1a6669d0a4e5bb7b72224b6769fea22566a76b10754067e189b4d75ede3a922e507" kindref="member">MultiFormatReader::Uint8</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/>mClasses.push_back(fClass);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/>fClass.<ref refid="struct_format_classifier_1_1_format_class_t_1a743513705fe5c9a27547960c6be030ca" kindref="member">format</ref><sp/>=<sp/><ref refid="class_multi_format_reader_1a6669d0a4e5bb7b72224b6769fea22566a2eaaacc5845f95643712f0f3fd811f3f" kindref="member">MultiFormatReader::Float</ref>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/>mClasses.push_back(fClass);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/>fClass.<ref refid="struct_format_classifier_1_1_format_class_t_1a743513705fe5c9a27547960c6be030ca" kindref="member">format</ref><sp/>=<sp/><ref refid="class_multi_format_reader_1a6669d0a4e5bb7b72224b6769fea22566aa7474bb98cf05a35905a55aef28e98a3" kindref="member">MultiFormatReader::Double</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/>mClasses.push_back(fClass);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Build<sp/>feature<sp/>vectors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/>mMonoFeat<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[mClasses.size()];</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/>mStereoFeat<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">[mClasses.size()];</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FORMATCLASSIFIER_SIGNAL_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Build<sp/>a<sp/>debug<sp/>writer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>dfile<sp/>[1024];</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/>sprintf(dfile,<sp/></highlight><highlight class="stringliteral">&quot;%s.sig&quot;</highlight><highlight class="normal">,<sp/>filename);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/>mpWriter<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>DebugWriter(dfile);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Run<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/>Run();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FORMATCLASSIFIER_SIGNAL_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>mClasses.size();<sp/>n++)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;Class<sp/>[%i]<sp/>Machine<sp/>[%i]:<sp/>Mono:<sp/>%3.7f<sp/>Stereo:<sp/>%3.7f\n&quot;</highlight><highlight class="normal">,<sp/>mClasses[n].<ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref>,<sp/>mClasses[n].endian,<sp/>mMonoFeat[n],<sp/>mStereoFeat[n]);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal">}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="class_format_classifier_1a018032593215703f29768eea62d3543e" refkind="member"><highlight class="normal"><ref refid="class_format_classifier_1a018032593215703f29768eea62d3543e" kindref="member">FormatClassifier::~FormatClassifier</ref>()</highlight></codeline>
<codeline lineno="98"><highlight class="normal">{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>mSigBuffer;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>mAuxBuffer;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>mRawBuffer;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>mMonoFeat;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>mStereoFeat;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FORMATCLASSIFIER_SIGNAL_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>mpWriter;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="class_format_classifier_1a5c3da894724672438a593b3ce0787f90" refkind="member"><highlight class="normal"><ref refid="struct_format_classifier_1_1_format_class_t" kindref="compound">FormatClassifier::FormatClassT</ref><sp/><ref refid="class_format_classifier_1a5c3da894724672438a593b3ce0787f90" kindref="member">FormatClassifier::GetResultFormat</ref>()</highlight></codeline>
<codeline lineno="112"><highlight class="normal">{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mResultFormat;</highlight></codeline>
<codeline lineno="114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="class_format_classifier_1ad8cb470d13404150beded475d72b0f46" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_format_classifier_1ad8cb470d13404150beded475d72b0f46" kindref="member">FormatClassifier::GetResultFormatLibSndfile</ref>()</highlight></codeline>
<codeline lineno="117"><highlight class="normal">{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref><sp/>=<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea754f6ac6e6b293b1ffcb1d06412fa297" kindref="member">SF_FORMAT_RAW</ref>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(mResultFormat.<ref refid="struct_format_classifier_1_1_format_class_t_1a743513705fe5c9a27547960c6be030ca" kindref="member">format</ref>)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_multi_format_reader_1a6669d0a4e5bb7b72224b6769fea22566a72c30f7ddbe3afc7abd8e56e1b402b92" kindref="member">MultiFormatReader::Int8</ref>:</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>format<sp/>|=<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea8c9b17bb36d115f80ef61dcae7631b26" kindref="member">SF_FORMAT_PCM_S8</ref>;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_multi_format_reader_1a6669d0a4e5bb7b72224b6769fea22566acc7a415ab5d8c16475bd3f546967f046" kindref="member">MultiFormatReader::Int16</ref>:</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>format<sp/>|=<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea63515ce839545c11d35dc8c8c4c5c261" kindref="member">SF_FORMAT_PCM_16</ref>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_multi_format_reader_1a6669d0a4e5bb7b72224b6769fea22566a98e833af2a8e375bed513cb9cf5819dd" kindref="member">MultiFormatReader::Int32</ref>:</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>format<sp/>|=<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea741fa21e06429d59eb548d6f388d16b4" kindref="member">SF_FORMAT_PCM_32</ref>;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_multi_format_reader_1a6669d0a4e5bb7b72224b6769fea22566a76b10754067e189b4d75ede3a922e507" kindref="member">MultiFormatReader::Uint8</ref>:</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>format<sp/>|=<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea3828255dad74fc3ebb02b59afb28caae" kindref="member">SF_FORMAT_PCM_U8</ref>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_multi_format_reader_1a6669d0a4e5bb7b72224b6769fea22566a2eaaacc5845f95643712f0f3fd811f3f" kindref="member">MultiFormatReader::Float</ref>:</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>format<sp/>|=<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea8b19f7e84eb0556faff33623830b489b" kindref="member">SF_FORMAT_FLOAT</ref>;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_multi_format_reader_1a6669d0a4e5bb7b72224b6769fea22566aa7474bb98cf05a35905a55aef28e98a3" kindref="member">MultiFormatReader::Double</ref>:</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>format<sp/>|=<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea7f5de05a45409d1ce72c9a2ecbff1bd3" kindref="member">SF_FORMAT_DOUBLE</ref>;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>format<sp/>|=<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea63515ce839545c11d35dc8c8c4c5c261" kindref="member">SF_FORMAT_PCM_16</ref>;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(mResultFormat.<ref refid="struct_format_classifier_1_1_format_class_t_1ad371fa4756fd4e996f5394b61bac3e7c" kindref="member">endian</ref>)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_machine_endianness_1a1d179c9c1da7949f5670f5654e0be09ba63849a8f1aad67b2313babb52a87922a" kindref="member">MachineEndianness::Little</ref>:</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>format<sp/>|=<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea5e4eee211f84815fdc7932cf26e2cda2" kindref="member">SF_ENDIAN_LITTLE</ref>;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_machine_endianness_1a1d179c9c1da7949f5670f5654e0be09ba08091e348453df47a2cb4be13cb3d3f4" kindref="member">MachineEndianness::Big</ref>:</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>format<sp/>|=<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea0c342389e92c7a1cbbf5267cd25db357" kindref="member">SF_ENDIAN_BIG</ref>;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref>;</highlight></codeline>
<codeline lineno="156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="class_format_classifier_1a25e306cddc659911810dce14ba4e8817" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_format_classifier_1a25e306cddc659911810dce14ba4e8817" kindref="member">FormatClassifier::GetResultChannels</ref>()</highlight></codeline>
<codeline lineno="159"><highlight class="normal">{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mResultChannels;</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FormatClassifier::Run()</highlight></codeline>
<codeline lineno="164"><highlight class="normal">{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calc<sp/>the<sp/>mono<sp/>feature<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>mClasses.size();<sp/>n++)</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>the<sp/>signal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ReadSignal(mClasses[n],<sp/>1);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FORMATCLASSIFIER_SIGNAL_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mpWriter-&gt;WriteSignal(mSigBuffer,<sp/>cSiglen);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>some<sp/>simple<sp/>preprocessing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>DC<sp/>offset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>smean<sp/>=<sp/>Mean(mSigBuffer,<sp/>cSiglen);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Sub(mSigBuffer,<sp/>smean,<sp/>cSiglen);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Normalize<sp/>to<sp/>+-<sp/>1.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Abs(mSigBuffer,<sp/>mAuxBuffer,<sp/>cSiglen);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>smax<sp/>=<sp/>Max(mAuxBuffer,<sp/>cSiglen);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Div(mSigBuffer,<sp/>smax,<sp/>cSiglen);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>actually<sp/>fill<sp/>the<sp/>feature<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Low<sp/>to<sp/>high<sp/>band<sp/>power<sp/>ratio</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>pLo<sp/>=<sp/>mMeter.<ref refid="class_spec_power_meter_1ab483dd11010e89a1c369eec38079163f" kindref="member">CalcPower</ref>(mSigBuffer,<sp/>0.15<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>0.3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>pHi<sp/>=<sp/>mMeter.<ref refid="class_spec_power_meter_1ab483dd11010e89a1c369eec38079163f" kindref="member">CalcPower</ref>(mSigBuffer,<sp/>0.45<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>0.1<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>);<sp/></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mMonoFeat[n]<sp/>=<sp/>pLo<sp/>/<sp/>pHi;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calc<sp/>the<sp/>stereo<sp/>feature<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/>mClasses.size();<sp/>n++)</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>the<sp/>signal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ReadSignal(mClasses[n],<sp/>2);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FORMATCLASSIFIER_SIGNAL_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mpWriter-&gt;WriteSignal(mSigBuffer,<sp/>cSiglen);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>some<sp/>simple<sp/>preprocessing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>DC<sp/>offset</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>smean<sp/>=<sp/>Mean(mSigBuffer,<sp/>cSiglen);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Sub(mSigBuffer,<sp/>smean,<sp/>cSiglen);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Normalize<sp/>to<sp/>+-<sp/>1.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Abs(mSigBuffer,<sp/>mAuxBuffer,<sp/>cSiglen);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>smax<sp/>=<sp/>Max(mAuxBuffer,<sp/>cSiglen);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Div(mSigBuffer,<sp/>smax,<sp/>cSiglen);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Now<sp/>actually<sp/>fill<sp/>the<sp/>feature<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Low<sp/>to<sp/>high<sp/>band<sp/>power<sp/>ratio</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>pLo<sp/>=<sp/>mMeter.<ref refid="class_spec_power_meter_1ab483dd11010e89a1c369eec38079163f" kindref="member">CalcPower</ref>(mSigBuffer,<sp/>0.15<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>0.3<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>pHi<sp/>=<sp/>mMeter.<ref refid="class_spec_power_meter_1ab483dd11010e89a1c369eec38079163f" kindref="member">CalcPower</ref>(mSigBuffer,<sp/>0.45<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/>0.1<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>);<sp/></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mStereoFeat[n]<sp/>=<sp/>pLo<sp/>/<sp/>pHi;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>results</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>midx,<sp/>sidx;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>monoMax<sp/>=<sp/>Max(mMonoFeat,<sp/>mClasses.size(),<sp/>&amp;midx);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>stereoMax<sp/>=<sp/>Max(mStereoFeat,<sp/>mClasses.size(),<sp/>&amp;sidx);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(monoMax<sp/>&gt;<sp/>stereoMax)</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mResultChannels<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mResultFormat<sp/>=<sp/>mClasses[midx];</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mResultChannels<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mResultFormat<sp/>=<sp/>mClasses[sidx];</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal">}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FormatClassifier::ReadSignal(<ref refid="struct_format_classifier_1_1_format_class_t" kindref="compound">FormatClassT</ref><sp/><ref refid="_export_p_c_m_8cpp_1a317afff57d87a89158c2b038d37b2b08" kindref="member">format</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>stride)</highlight></codeline>
<codeline lineno="234"><highlight class="normal">{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>actRead<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/>mReader.<ref refid="class_multi_format_reader_1a6da7661340b10a3c717c496e67909039" kindref="member">Reset</ref>();</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>a<sp/>dummy<sp/>read<sp/>of<sp/>1024<sp/>bytes<sp/>to<sp/>skip<sp/>potential<sp/>header<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/>mReader.<ref refid="class_multi_format_reader_1a5dc5fa8632e6ae51a095da89c32266d6" kindref="member">ReadSamples</ref>(mRawBuffer,<sp/>1024,<sp/><ref refid="class_multi_format_reader_1a6669d0a4e5bb7b72224b6769fea22566a76b10754067e189b4d75ede3a922e507" kindref="member">MultiFormatReader::Uint8</ref>,<sp/><ref refid="class_machine_endianness_1a1d179c9c1da7949f5670f5654e0be09ba63849a8f1aad67b2313babb52a87922a" kindref="member">MachineEndianness::Little</ref>);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>actRead<sp/>=<sp/>mReader.<ref refid="class_multi_format_reader_1a5dc5fa8632e6ae51a095da89c32266d6" kindref="member">ReadSamples</ref>(mRawBuffer,<sp/>cSiglen,<sp/>stride,<sp/>format.<ref refid="struct_format_classifier_1_1_format_class_t_1a743513705fe5c9a27547960c6be030ca" kindref="member">format</ref>,<sp/>format.<ref refid="struct_format_classifier_1_1_format_class_t_1ad371fa4756fd4e996f5394b61bac3e7c" kindref="member">endian</ref>);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ConvertSamples(mRawBuffer,<sp/>mSigBuffer,<sp/>format);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(actRead<sp/>==<sp/>cSiglen)</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ConvertSamples(mRawBuffer,<sp/>mAuxBuffer,<sp/>format);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Integrate<sp/>signals</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Add(mSigBuffer,<sp/>mAuxBuffer,<sp/>cSiglen);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>some<sp/>dummy<sp/>reads<sp/>to<sp/>break<sp/>signal<sp/>coherence</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mReader.<ref refid="class_multi_format_reader_1a5dc5fa8632e6ae51a095da89c32266d6" kindref="member">ReadSamples</ref>(mRawBuffer,<sp/>n<sp/>+<sp/>1,<sp/>stride,<sp/>format.<ref refid="struct_format_classifier_1_1_format_class_t_1a743513705fe5c9a27547960c6be030ca" kindref="member">format</ref>,<sp/>format.<ref refid="struct_format_classifier_1_1_format_class_t_1ad371fa4756fd4e996f5394b61bac3e7c" kindref="member">endian</ref>);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>n++;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((n<sp/>&lt;<sp/>cNumInts)<sp/>&amp;&amp;<sp/>(actRead<sp/>==<sp/>cSiglen));</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal">}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FormatClassifier::ConvertSamples(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>,<sp/><ref refid="struct_format_classifier_1_1_format_class_t" kindref="compound">FormatClassT</ref><sp/>format)</highlight></codeline>
<codeline lineno="272"><highlight class="normal">{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(format.<ref refid="struct_format_classifier_1_1_format_class_t_1a743513705fe5c9a27547960c6be030ca" kindref="member">format</ref>)</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_multi_format_reader_1a6669d0a4e5bb7b72224b6769fea22566a72c30f7ddbe3afc7abd8e56e1b402b92" kindref="member">MultiFormatReader::Int8</ref>:</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ToFloat((<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a27eddd12ef1271a2ea8629e1148e7e63" kindref="member">int8_t</ref>*)<sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>,<sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>,<sp/>cSiglen);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_multi_format_reader_1a6669d0a4e5bb7b72224b6769fea22566acc7a415ab5d8c16475bd3f546967f046" kindref="member">MultiFormatReader::Int16</ref>:</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ToFloat((<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a044293bfeff56852a28ed6c2cfbb2649" kindref="member">int16_t</ref>*)<sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>,<sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>,<sp/>cSiglen);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_multi_format_reader_1a6669d0a4e5bb7b72224b6769fea22566a98e833af2a8e375bed513cb9cf5819dd" kindref="member">MultiFormatReader::Int32</ref>:</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ToFloat((<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a37994e3b11c72957c6f454c6ec96d43d" kindref="member">int32_t</ref>*)<sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>,<sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>,<sp/>cSiglen);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_multi_format_reader_1a6669d0a4e5bb7b72224b6769fea22566a76b10754067e189b4d75ede3a922e507" kindref="member">MultiFormatReader::Uint8</ref>:</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ToFloat((<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*)<sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>,<sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>,<sp/>cSiglen);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_multi_format_reader_1a6669d0a4e5bb7b72224b6769fea22566aca3abac130f3a0441fa66ce090bedf40" kindref="member">MultiFormatReader::Uint16</ref>:</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ToFloat((<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a30af71eaf40c925c9832eb289a48da35" kindref="member">uint16_t</ref>*)<sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>,<sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>,<sp/>cSiglen);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_multi_format_reader_1a6669d0a4e5bb7b72224b6769fea22566a858f7120c77bad5061a1a2cb4e61763c" kindref="member">MultiFormatReader::Uint32</ref>:</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ToFloat((<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref>*)<sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>,<sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>,<sp/>cSiglen);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_multi_format_reader_1a6669d0a4e5bb7b72224b6769fea22566a2eaaacc5845f95643712f0f3fd811f3f" kindref="member">MultiFormatReader::Float</ref>:</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ToFloat((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*)<sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>,<sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>,<sp/>cSiglen);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="class_multi_format_reader_1a6669d0a4e5bb7b72224b6769fea22566aa7474bb98cf05a35905a55aef28e98a3" kindref="member">MultiFormatReader::Double</ref>:</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ToFloat((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*)<sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>,<sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>,<sp/>cSiglen);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FormatClassifier::Add(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>in1,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>in2,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>)</highlight></codeline>
<codeline lineno="303"><highlight class="normal">{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;<sp/>n++)</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>in1[n]<sp/>+=<sp/>in2[n];</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal">}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FormatClassifier::Sub(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>subt,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>)</highlight></codeline>
<codeline lineno="311"><highlight class="normal">{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;<sp/>n++)</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>[n]<sp/>-=<sp/>subt;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal">}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FormatClassifier::Div(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>div,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>)</highlight></codeline>
<codeline lineno="319"><highlight class="normal">{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;<sp/>n++)</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>[n]<sp/>/=<sp/>div;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal">}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FormatClassifier::Abs(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>)</highlight></codeline>
<codeline lineno="328"><highlight class="normal">{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;<sp/>n++)</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>[n]<sp/>&lt;<sp/>0.0<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>)</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>[n]<sp/>=<sp/>-<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>[n];</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>[n]<sp/>=<sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>[n];</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="340"><highlight class="normal">}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>FormatClassifier::Mean(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>)</highlight></codeline>
<codeline lineno="343"><highlight class="normal">{</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>mean<sp/>=<sp/>0.0f;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;<sp/>n++)</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>mean<sp/>+=<sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>[n];</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/>mean<sp/>/=<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mean;</highlight></codeline>
<codeline lineno="354"><highlight class="normal">}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>FormatClassifier::Max(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>)</highlight></codeline>
<codeline lineno="357"><highlight class="normal">{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>dummyidx;</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Max(<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>,<sp/>len,<sp/>&amp;dummyidx);</highlight></codeline>
<codeline lineno="360"><highlight class="normal">}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>FormatClassifier::Max(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">*<sp/>maxidx)</highlight></codeline>
<codeline lineno="363"><highlight class="normal">{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref><sp/>=<sp/>-FLT_MAX;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/>*maxidx<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;<sp/>n++)</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>[n]<sp/>&gt;<sp/>max)</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max<sp/>=<sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>[n];</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*maxidx<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>;</highlight></codeline>
<codeline lineno="377"><highlight class="normal">}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FormatClassifier::ToFloat(<ref refid="xmltchar_8h_1a16a0f7e7053a679c9bf4289b441a2be7" kindref="member">T</ref>*<sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>)</highlight></codeline>
<codeline lineno="380"><highlight class="normal">{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;<sp/>n<sp/>&lt;<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;<sp/>n++)</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>[n]<sp/>=<sp/>(float)<sp/><ref refid="1-single-block_8c_1a18b1d64a94008e3c56953d279b8095e2" kindref="member">in</ref>[n];</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="385"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/src/import/FormatClassifier.cpp"/>
  </compounddef>
</doxygen>
