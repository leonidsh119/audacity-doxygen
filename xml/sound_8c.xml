<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="sound_8c" kind="file" language="C++">
    <compoundname>sound.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes refid="xlisp_8h" local="yes">xlisp.h</includes>
    <includes refid="sound_8h" local="yes">sound.h</includes>
    <includes refid="falloc_8h" local="yes">falloc.h</includes>
    <includes refid="samples_8h" local="yes">samples.h</includes>
    <includes refid="extern_8h" local="yes">extern.h</includes>
    <includes refid="libnyquist_2nyquist_2nyqsrc_2debug_8h" local="yes">debug.h</includes>
    <includes refid="assert_8h" local="yes">assert.h</includes>
    <includes refid="cext_8h" local="yes">cext.h</includes>
    <includes refid="userio_8h" local="yes">userio.h</includes>
    <incdepgraph>
      <node id="13315">
        <label>stdlib.h</label>
      </node>
      <node id="13317">
        <label>setjmp.h</label>
      </node>
      <node id="13327">
        <label>falloc.h</label>
        <link refid="falloc_8h"/>
        <childnode refid="13328" relation="include">
        </childnode>
        <childnode refid="13329" relation="include">
        </childnode>
      </node>
      <node id="13314">
        <label>xlisp.h</label>
        <link refid="xlisp_8h"/>
        <childnode refid="13315" relation="include">
        </childnode>
        <childnode refid="13313" relation="include">
        </childnode>
        <childnode refid="13316" relation="include">
        </childnode>
        <childnode refid="13317" relation="include">
        </childnode>
        <childnode refid="13318" relation="include">
        </childnode>
      </node>
      <node id="13332">
        <label>assert.h</label>
        <link refid="assert_8h"/>
      </node>
      <node id="13326">
        <label>cleanup.h</label>
        <link refid="cleanup_8h"/>
      </node>
      <node id="13325">
        <label>mem.h</label>
        <link refid="libnyquist_2nyquist_2cmt_2mem_8h"/>
      </node>
      <node id="13330">
        <label>samples.h</label>
        <link refid="samples_8h"/>
      </node>
      <node id="13324">
        <label>string.h</label>
      </node>
      <node id="13328">
        <label>cque.h</label>
        <link refid="cque_8h"/>
      </node>
      <node id="13312">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c</label>
        <link refid="sound.c"/>
        <childnode refid="13313" relation="include">
        </childnode>
        <childnode refid="13314" relation="include">
        </childnode>
        <childnode refid="13319" relation="include">
        </childnode>
        <childnode refid="13327" relation="include">
        </childnode>
        <childnode refid="13330" relation="include">
        </childnode>
        <childnode refid="13331" relation="include">
        </childnode>
        <childnode refid="13329" relation="include">
        </childnode>
        <childnode refid="13332" relation="include">
        </childnode>
        <childnode refid="13322" relation="include">
        </childnode>
        <childnode refid="13333" relation="include">
        </childnode>
      </node>
      <node id="13319">
        <label>sound.h</label>
        <link refid="sound_8h"/>
        <childnode refid="13320" relation="include">
        </childnode>
        <childnode refid="13321" relation="include">
        </childnode>
      </node>
      <node id="13320">
        <label>math.h</label>
      </node>
      <node id="13323">
        <label>switches.h</label>
      </node>
      <node id="13333">
        <label>userio.h</label>
        <link refid="userio_8h"/>
      </node>
      <node id="13321">
        <label>stdefs.h</label>
        <link refid="stdefs_8h"/>
        <childnode refid="13322" relation="include">
        </childnode>
      </node>
      <node id="13318">
        <label>xldmem.h</label>
        <link refid="xldmem_8h"/>
      </node>
      <node id="13331">
        <label>extern.h</label>
        <link refid="extern_8h"/>
      </node>
      <node id="13316">
        <label>ctype.h</label>
      </node>
      <node id="13329">
        <label>debug.h</label>
        <link refid="libnyquist_2nyquist_2nyqsrc_2debug_8h"/>
      </node>
      <node id="13313">
        <label>stdio.h</label>
      </node>
      <node id="13322">
        <label>cext.h</label>
        <link refid="cext_8h"/>
        <childnode refid="13323" relation="include">
        </childnode>
        <childnode refid="13313" relation="include">
        </childnode>
        <childnode refid="13324" relation="include">
        </childnode>
        <childnode refid="13320" relation="include">
        </childnode>
        <childnode refid="13325" relation="include">
        </childnode>
        <childnode refid="13326" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="sound_8c_1ad86bc04f7f667b1bdced8a0f06d96861" prot="public" static="no">
        <name>p1</name>
        <initializer>0.0577622650466621</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="1575" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" bodystart="1575" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sound_8c_1a938e6a2861f684cc1f7e2de661446e35" prot="public" static="no">
        <name>p2</name>
        <initializer>2.1011784386926213</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="1576" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" bodystart="1576" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="sound_8c_1a1f39518234123c36f31128f12decb519" prot="public" static="no" mutable="no">
        <type><ref refid="sound_8h_1ab05388854adb60c2855a70276d2ceb65" kindref="member">snd_list_type</ref></type>
        <definition>snd_list_type list_watch</definition>
        <argsstring></argsstring>
        <name>list_watch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="31" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="sound_8c_1abc3f08f3e973edf3f1d9a4d2f5173e16" prot="public" static="no" mutable="no">
        <type>long</type>
        <definition>long table_memory</definition>
        <argsstring></argsstring>
        <name>table_memory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="35" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="sound_8c_1a5917e1ea52952f15fd755fa27432113b" prot="public" static="no" mutable="no">
        <type><ref refid="sound_8h_1a6becaef7eb98c0e45b13f72dadf07b23" kindref="member">sample_block_type</ref></type>
        <definition>sample_block_type zero_block</definition>
        <argsstring></argsstring>
        <name>zero_block</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="37" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="sound_8c_1abb923c4be4a1beafa5f79463091c3925" prot="public" static="no" mutable="no">
        <type><ref refid="sound_8h_1a6becaef7eb98c0e45b13f72dadf07b23" kindref="member">sample_block_type</ref></type>
        <definition>sample_block_type internal_zero_block</definition>
        <argsstring></argsstring>
        <name>internal_zero_block</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="38" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="sound_8c_1aa08a9bd03e22919769a8f33094756c97" prot="public" static="no" mutable="no">
        <type><ref refid="sound_8h_1ab05388854adb60c2855a70276d2ceb65" kindref="member">snd_list_type</ref></type>
        <definition>snd_list_type zero_snd_list</definition>
        <argsstring></argsstring>
        <name>zero_snd_list</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="40" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="sound_8c_1a68c606455466433ef085bd8386841e0d" prot="public" static="no" mutable="no">
        <type><ref refid="xldmem_8h_1a0be3e14d136961c8b18bb2d300e0872f" kindref="member">xtype_desc</ref></type>
        <definition>xtype_desc sound_desc</definition>
        <argsstring></argsstring>
        <name>sound_desc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="42" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="sound_8c_1a5d46b7b169ac8631bca1d7d523817742" prot="public" static="no" mutable="no">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL a_sound</definition>
        <argsstring></argsstring>
        <name>a_sound</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="43" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="sound_8c_1a5d5f7594b5d95d04d4a8ed7d171b247b" prot="public" static="no" mutable="no">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL s_audio_markers</definition>
        <argsstring></argsstring>
        <name>s_audio_markers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="44" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="sound_8c_1ae885833c5fdfbcfe484f29c244f1e484" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double sound_latency</definition>
        <argsstring></argsstring>
        <name>sound_latency</name>
        <initializer>= 0.3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="63" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="sound_8c_1a1cec2b7e0c0b8951727ead5e11ef2a2e" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double sound_srate</definition>
        <argsstring></argsstring>
        <name>sound_srate</name>
        <initializer>= 44100.0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="65" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="sound_8c_1a2ecc6ba52c5cf3f8f8ccb8ab5cdbccc6" prot="public" static="no" mutable="no">
        <type>long</type>
        <definition>long sound_frames</definition>
        <argsstring></argsstring>
        <name>sound_frames</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="66" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="sound_8c_1aee9b72cd7a123231b630e79de4427ef1" prot="public" static="no" mutable="no">
        <type><ref refid="sound_8h_1ab05388854adb60c2855a70276d2ceb65" kindref="member">snd_list_type</ref></type>
        <definition>snd_list_type gcbug_snd_list</definition>
        <argsstring></argsstring>
        <name>gcbug_snd_list</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="136" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="sound_8c_1ac26512fa40eb2c631ecefdab06543616" prot="public" static="no" mutable="no">
        <type>long</type>
        <definition>long blocks_to_watch_len</definition>
        <argsstring></argsstring>
        <name>blocks_to_watch_len</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="137" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="sound_8c_1ac44b91032c872e22a1b55370f55d75d0" prot="public" static="no" mutable="no">
        <type><ref refid="sound_8h_1a6becaef7eb98c0e45b13f72dadf07b23" kindref="member">sample_block_type</ref></type>
        <definition>sample_block_type blocks_to_watch[blocks_to_watch_max]</definition>
        <argsstring>[blocks_to_watch_max]</argsstring>
        <name>blocks_to_watch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="138" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="sound_8c_1a784b9d7348ab348773b9c6e6025be8ec" prot="public" static="no" mutable="no">
        <type><ref refid="sound_8h_1a792cec4ed9d6d636d342d9365ba265ea" kindref="member">sound_type</ref></type>
        <definition>sound_type last_sound</definition>
        <argsstring></argsstring>
        <name>last_sound</name>
        <initializer>= <ref refid="px__mixer_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="259" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" bodystart="259" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="sound_8c_1a79c08354b8acb918288f80bb874a0cb6" prot="public" static="no" mutable="no">
        <type><ref refid="sound_8h_1a792cec4ed9d6d636d342d9365ba265ea" kindref="member">sound_type</ref></type>
        <definition>sound_type printing_this_sound</definition>
        <argsstring></argsstring>
        <name>printing_this_sound</name>
        <initializer>= <ref refid="px__mixer_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="1276" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" bodystart="1276" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="sound_8c_1aceacb3a28605bd5d96c8495753f350c2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void sound_xlfree</definition>
        <argsstring>()</argsstring>
        <name>sound_xlfree</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="46" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sound_8c_1ac50d342234cacc1ea15fcf0b6da48d7b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void sound_xlprint</definition>
        <argsstring>()</argsstring>
        <name>sound_xlprint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="47" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sound_8c_1a76e2c3f201fb5aba83fc2a4e40726039" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void sound_xlsave</definition>
        <argsstring>()</argsstring>
        <name>sound_xlsave</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sound_8c_1a82ba6d26cf90858d90bd1909cbb41560" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned char *</type>
        <definition>static unsigned char* sound_xlrestore</definition>
        <argsstring>()</argsstring>
        <name>sound_xlrestore</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sound_8c_1a0b6093bf05178c52868eab60bb518a16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void sound_print_array</definition>
        <argsstring>(LVAL sa, long n)</argsstring>
        <name>sound_print_array</name>
        <param>
          <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
          <declname>sa</declname>
        </param>
        <param>
          <type>long</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="51" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" bodystart="1348" bodyend="1408"/>
      </memberdef>
      <memberdef kind="function" id="sound_8c_1a4071a7e76648a965b669219193b48378" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void sound_print_sound</definition>
        <argsstring>(sound_type s, long n)</argsstring>
        <name>sound_print_sound</name>
        <param>
          <type><ref refid="sound_8h_1a792cec4ed9d6d636d342d9365ba265ea" kindref="member">sound_type</ref></type>
          <declname>s</declname>
        </param>
        <param>
          <type>long</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="52" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" bodystart="1321" bodyend="1345"/>
      </memberdef>
      <memberdef kind="function" id="sound_8c_1aaf3eda27f937fb462aac04ef96afcafa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void sample_block_unref</definition>
        <argsstring>(sample_block_type sam)</argsstring>
        <name>sample_block_unref</name>
        <param>
          <type><ref refid="sound_8h_1a6becaef7eb98c0e45b13f72dadf07b23" kindref="member">sample_block_type</ref></type>
          <declname>sam</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="53" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" bodystart="571" bodyend="581"/>
      </memberdef>
      <memberdef kind="function" id="sound_8c_1af12940afd0d8629e7bcebf8dd7e4e316" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double snd_set_latency</definition>
        <argsstring>(double latency)</argsstring>
        <name>snd_set_latency</name>
        <param>
          <type>double</type>
          <declname>latency</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="68" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" bodystart="68" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="sound_8c_1a5a66100a15d73003c5140f23d3587064" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long check_terminate_cnt</definition>
        <argsstring>(long tc)</argsstring>
        <name>check_terminate_cnt</name>
        <param>
          <type>long</type>
          <declname>tc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="76" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" bodystart="76" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="sound_8c_1afad086fb55fe728687931d8fe2cfb2be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL snd_badsr</definition>
        <argsstring>(void)</argsstring>
        <name>snd_badsr</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="87" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" bodystart="87" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="sound_8c_1a5ef0b0a7a18bf01ededd557a396f88fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double compute_phase</definition>
        <argsstring>(double phase, double key, long n, double srate, double new_srate, double freq, double *incr_ptr)</argsstring>
        <name>compute_phase</name>
        <param>
          <type>double</type>
          <declname>phase</declname>
        </param>
        <param>
          <type>double</type>
          <declname>key</declname>
        </param>
        <param>
          <type>long</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double</type>
          <declname>srate</declname>
        </param>
        <param>
          <type>double</type>
          <declname>new_srate</declname>
        </param>
        <param>
          <type>double</type>
          <declname>freq</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>incr_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="103" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" bodystart="103" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="sound_8c_1a6598927f73d80244a86bc30ad774edef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void block_watch</definition>
        <argsstring>(long sample_block)</argsstring>
        <name>block_watch</name>
        <param>
          <type>long</type>
          <declname>sample_block</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="140" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" bodystart="140" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="sound_8c_1ada0cc0a7b7657269937860bd7eeb6f73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void fetch_zeros</definition>
        <argsstring>(snd_susp_type susp, snd_list_type snd_list)</argsstring>
        <name>fetch_zeros</name>
        <param>
          <type><ref refid="sound_8h_1ab2d3b7883b72a75324f6636f10c7f903" kindref="member">snd_susp_type</ref></type>
          <declname>susp</declname>
        </param>
        <param>
          <type><ref refid="sound_8h_1ab05388854adb60c2855a70276d2ceb65" kindref="member">snd_list_type</ref></type>
          <declname>snd_list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="162" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" bodystart="162" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="sound_8c_1aea9aaf8eb247ff1883cd4865081e8594" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long sound_nth_block</definition>
        <argsstring>(sound_type snd, long n)</argsstring>
        <name>sound_nth_block</name>
        <param>
          <type><ref refid="sound_8h_1a792cec4ed9d6d636d342d9365ba265ea" kindref="member">sound_type</ref></type>
          <declname>snd</declname>
        </param>
        <param>
          <type>long</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="189" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" bodystart="189" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="sound_8c_1a58f82dfd9acaae997e982fd56e81e11d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8h_1ab05388854adb60c2855a70276d2ceb65" kindref="member">snd_list_type</ref></type>
        <definition>snd_list_type snd_list_create</definition>
        <argsstring>(snd_susp_type susp)</argsstring>
        <name>snd_list_create</name>
        <param>
          <type><ref refid="sound_8h_1ab2d3b7883b72a75324f6636f10c7f903" kindref="member">snd_susp_type</ref></type>
          <declname>susp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="224" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" bodystart="224" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="sound_8c_1a11255fe781080fb7915f6ab9a5afc4ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8h_1a792cec4ed9d6d636d342d9365ba265ea" kindref="member">sound_type</ref></type>
        <definition>sound_type sound_create</definition>
        <argsstring>(snd_susp_type susp, time_type t0, rate_type sr, promoted_sample_type scale)</argsstring>
        <name>sound_create</name>
        <param>
          <type><ref refid="sound_8h_1ab2d3b7883b72a75324f6636f10c7f903" kindref="member">snd_susp_type</ref></type>
          <declname>susp</declname>
        </param>
        <param>
          <type><ref refid="midifns_8h_1a3f787491db5dbc75c21b27d54e9ebae6" kindref="member">time_type</ref></type>
          <declname>t0</declname>
        </param>
        <param>
          <type><ref refid="sound_8h_1a80a6a98ce803ce7a00e744aa2103f9a1" kindref="member">rate_type</ref></type>
          <declname>sr</declname>
        </param>
        <param>
          <type><ref refid="sound_8h_1a5e55d8ac78e61a8ad65e708696e130b5" kindref="member">promoted_sample_type</ref></type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="261" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" bodystart="261" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="sound_8c_1a046a0aeb97b0ea49a76e8c7d031a5c12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void sound_prepend_zeros</definition>
        <argsstring>(sound_type snd, time_type t0)</argsstring>
        <name>sound_prepend_zeros</name>
        <param>
          <type><ref refid="sound_8h_1a792cec4ed9d6d636d342d9365ba265ea" kindref="member">sound_type</ref></type>
          <declname>snd</declname>
        </param>
        <param>
          <type><ref refid="midifns_8h_1a3f787491db5dbc75c21b27d54e9ebae6" kindref="member">time_type</ref></type>
          <declname>t0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="321" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" bodystart="321" bodyend="349"/>
      </memberdef>
      <memberdef kind="function" id="sound_8c_1a4729b4ebf62b73399aa5a0ed49f7c833" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL sound_array_copy</definition>
        <argsstring>(LVAL sa)</argsstring>
        <name>sound_array_copy</name>
        <param>
          <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
          <declname>sa</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="356" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" bodystart="356" bodyend="370"/>
      </memberdef>
      <memberdef kind="function" id="sound_8c_1ad56b2f689f0d4897c4d2c79356d6102d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8h_1a792cec4ed9d6d636d342d9365ba265ea" kindref="member">sound_type</ref></type>
        <definition>sound_type sound_copy</definition>
        <argsstring>(sound_type snd)</argsstring>
        <name>sound_copy</name>
        <param>
          <type><ref refid="sound_8h_1a792cec4ed9d6d636d342d9365ba265ea" kindref="member">sound_type</ref></type>
          <declname>snd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="375" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" bodystart="375" bodyend="389"/>
      </memberdef>
      <memberdef kind="function" id="sound_8c_1a4eb4d75cb8c657caa35914cafade6020" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8h_1a187b856587310160cfd8b383e7377171" kindref="member">table_type</ref></type>
        <definition>table_type sound_to_table</definition>
        <argsstring>(sound_type s)</argsstring>
        <name>sound_to_table</name>
        <param>
          <type><ref refid="sound_8h_1a792cec4ed9d6d636d342d9365ba265ea" kindref="member">sound_type</ref></type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="394" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" bodystart="394" bodyend="448"/>
      </memberdef>
      <memberdef kind="function" id="sound_8c_1a7293d530c4a016760ee147f20838c6c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void table_free</definition>
        <argsstring>(table_type table)</argsstring>
        <name>table_free</name>
        <param>
          <type><ref refid="sound_8h_1a187b856587310160cfd8b383e7377171" kindref="member">table_type</ref></type>
          <declname>table</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="451" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" bodystart="451" bodyend="457"/>
      </memberdef>
      <memberdef kind="function" id="sound_8c_1a841b19f08a0ab27a514b66af9244a1fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void table_unref</definition>
        <argsstring>(table_type table)</argsstring>
        <name>table_unref</name>
        <param>
          <type><ref refid="sound_8h_1a187b856587310160cfd8b383e7377171" kindref="member">table_type</ref></type>
          <declname>table</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="460" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" bodystart="460" bodyend="468"/>
      </memberdef>
      <memberdef kind="function" id="sound_8c_1a6160c7ed8621e6ca60d9c0875cd25f9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void sound_unref</definition>
        <argsstring>(sound_type snd)</argsstring>
        <name>sound_unref</name>
        <param>
          <type><ref refid="sound_8h_1a792cec4ed9d6d636d342d9365ba265ea" kindref="member">sound_type</ref></type>
          <declname>snd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="471" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" bodystart="471" bodyend="482"/>
      </memberdef>
      <memberdef kind="function" id="sound_8c_1ae9bef88dd5f52e534fad5566dc203e50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void snd_list_ref</definition>
        <argsstring>(snd_list_type list)</argsstring>
        <name>snd_list_ref</name>
        <param>
          <type><ref refid="sound_8h_1ab05388854adb60c2855a70276d2ceb65" kindref="member">snd_list_type</ref></type>
          <declname>list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="485" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" bodystart="485" bodyend="488"/>
      </memberdef>
      <memberdef kind="function" id="sound_8c_1a64f075d27a7672293c0c8d657aa51647" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void snd_list_terminate</definition>
        <argsstring>(snd_list_type snd_list)</argsstring>
        <name>snd_list_terminate</name>
        <param>
          <type><ref refid="sound_8h_1ab05388854adb60c2855a70276d2ceb65" kindref="member">snd_list_type</ref></type>
          <declname>snd_list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="491" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" bodystart="491" bodyend="513"/>
      </memberdef>
      <memberdef kind="function" id="sound_8c_1aad7d8d5bb2bb14c5ba0c435f4ea20ebb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void snd_list_unref</definition>
        <argsstring>(snd_list_type list)</argsstring>
        <name>snd_list_unref</name>
        <param>
          <type><ref refid="sound_8h_1ab05388854adb60c2855a70276d2ceb65" kindref="member">snd_list_type</ref></type>
          <declname>list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="516" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" bodystart="516" bodyend="547"/>
      </memberdef>
      <memberdef kind="function" id="sound_8c_1ab93181b97757bda75bf60713d78de728" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void sample_block_ref</definition>
        <argsstring>(sample_block_type sam)</argsstring>
        <name>sample_block_ref</name>
        <param>
          <type><ref refid="sound_8h_1a6becaef7eb98c0e45b13f72dadf07b23" kindref="member">sample_block_type</ref></type>
          <declname>sam</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="550" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" bodystart="550" bodyend="553"/>
      </memberdef>
      <memberdef kind="function" id="sound_8c_1a4e9e9f1d6511386ac6ab3c5ef30688d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void sample_block_test</definition>
        <argsstring>(sample_block_type sam, char *s)</argsstring>
        <name>sample_block_test</name>
        <param>
          <type><ref refid="sound_8h_1a6becaef7eb98c0e45b13f72dadf07b23" kindref="member">sample_block_type</ref></type>
          <declname>sam</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="556" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" bodystart="556" bodyend="568"/>
      </memberdef>
      <memberdef kind="function" id="sound_8c_1abf6be522334f610871aeb5c61583739f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int interp_style</definition>
        <argsstring>(sound_type s, rate_type sr)</argsstring>
        <name>interp_style</name>
        <param>
          <type><ref refid="sound_8h_1a792cec4ed9d6d636d342d9365ba265ea" kindref="member">sound_type</ref></type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="sound_8h_1a80a6a98ce803ce7a00e744aa2103f9a1" kindref="member">rate_type</ref></type>
          <declname>sr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="603" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" bodystart="603" bodyend="616"/>
      </memberdef>
      <memberdef kind="function" id="sound_8c_1a195d558ede8ba8ff5e83731fae551e86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void snd_sort_2</definition>
        <argsstring>(sound_type *s1_ptr, sound_type *s2_ptr, rate_type sr)</argsstring>
        <name>snd_sort_2</name>
        <param>
          <type><ref refid="sound_8h_1a792cec4ed9d6d636d342d9365ba265ea" kindref="member">sound_type</ref> *</type>
          <declname>s1_ptr</declname>
        </param>
        <param>
          <type><ref refid="sound_8h_1a792cec4ed9d6d636d342d9365ba265ea" kindref="member">sound_type</ref> *</type>
          <declname>s2_ptr</declname>
        </param>
        <param>
          <type><ref refid="sound_8h_1a80a6a98ce803ce7a00e744aa2103f9a1" kindref="member">rate_type</ref></type>
          <declname>sr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="633" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" bodystart="633" bodyend="640"/>
      </memberdef>
      <memberdef kind="function" id="sound_8c_1a3dee98e52b0f96799bad3d56bd8506f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double snd_sref</definition>
        <argsstring>(sound_type s, time_type t)</argsstring>
        <name>snd_sref</name>
        <param>
          <type><ref refid="sound_8h_1a792cec4ed9d6d636d342d9365ba265ea" kindref="member">sound_type</ref></type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="midifns_8h_1a3f787491db5dbc75c21b27d54e9ebae6" kindref="member">time_type</ref></type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="645" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" bodystart="645" bodyend="684"/>
      </memberdef>
      <memberdef kind="function" id="sound_8c_1acf80400a1e566e4f89061c18d14088b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double snd_sref_inverse</definition>
        <argsstring>(sound_type s, double val)</argsstring>
        <name>snd_sref_inverse</name>
        <param>
          <type><ref refid="sound_8h_1a792cec4ed9d6d636d342d9365ba265ea" kindref="member">sound_type</ref></type>
          <declname>s</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="689" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" bodystart="689" bodyend="748"/>
      </memberdef>
      <memberdef kind="function" id="sound_8c_1a5f0c2eab45b410b58aac8c5cd07a4d80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="midifns_8h_1a3f787491db5dbc75c21b27d54e9ebae6" kindref="member">time_type</ref></type>
        <definition>time_type snd_stop_time</definition>
        <argsstring>(sound_type s)</argsstring>
        <name>snd_stop_time</name>
        <param>
          <type><ref refid="sound_8h_1a792cec4ed9d6d636d342d9365ba265ea" kindref="member">sound_type</ref></type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="751" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" bodystart="751" bodyend="755"/>
      </memberdef>
      <memberdef kind="function" id="sound_8c_1a6d61dadb67723cfd8eafeaf239ad1ee8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8h_1a792cec4ed9d6d636d342d9365ba265ea" kindref="member">sound_type</ref></type>
        <definition>sound_type snd_xform</definition>
        <argsstring>(sound_type snd, rate_type sr, time_type time, time_type start_time, time_type stop_time, promoted_sample_type scale)</argsstring>
        <name>snd_xform</name>
        <param>
          <type><ref refid="sound_8h_1a792cec4ed9d6d636d342d9365ba265ea" kindref="member">sound_type</ref></type>
          <declname>snd</declname>
        </param>
        <param>
          <type><ref refid="sound_8h_1a80a6a98ce803ce7a00e744aa2103f9a1" kindref="member">rate_type</ref></type>
          <declname>sr</declname>
        </param>
        <param>
          <type><ref refid="midifns_8h_1a3f787491db5dbc75c21b27d54e9ebae6" kindref="member">time_type</ref></type>
          <declname>time</declname>
        </param>
        <param>
          <type><ref refid="midifns_8h_1a3f787491db5dbc75c21b27d54e9ebae6" kindref="member">time_type</ref></type>
          <declname>start_time</declname>
        </param>
        <param>
          <type><ref refid="midifns_8h_1a3f787491db5dbc75c21b27d54e9ebae6" kindref="member">time_type</ref></type>
          <declname>stop_time</declname>
        </param>
        <param>
          <type><ref refid="sound_8h_1a5e55d8ac78e61a8ad65e708696e130b5" kindref="member">promoted_sample_type</ref></type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="785" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" bodystart="785" bodyend="861"/>
      </memberdef>
      <memberdef kind="function" id="sound_8c_1a038ef9017005011361489fcf3b385386" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8h_1a6becaef7eb98c0e45b13f72dadf07b23" kindref="member">sample_block_type</ref></type>
        <definition>sample_block_type SND_flush</definition>
        <argsstring>(sound_type snd, long *cnt)</argsstring>
        <name>SND_flush</name>
        <param>
          <type><ref refid="sound_8h_1a792cec4ed9d6d636d342d9365ba265ea" kindref="member">sound_type</ref></type>
          <declname>snd</declname>
        </param>
        <param>
          <type>long *</type>
          <declname>cnt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="870" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" bodystart="870" bodyend="909"/>
      </memberdef>
      <memberdef kind="function" id="sound_8c_1a40d068145bd61957bcec7ff03fd39a0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8h_1a6becaef7eb98c0e45b13f72dadf07b23" kindref="member">sample_block_type</ref></type>
        <definition>sample_block_type SND_get_zeros</definition>
        <argsstring>(sound_type snd, long *cnt)</argsstring>
        <name>SND_get_zeros</name>
        <param>
          <type><ref refid="sound_8h_1a792cec4ed9d6d636d342d9365ba265ea" kindref="member">sound_type</ref></type>
          <declname>snd</declname>
        </param>
        <param>
          <type>long *</type>
          <declname>cnt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="919" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" bodystart="919" bodyend="940"/>
      </memberdef>
      <memberdef kind="function" id="sound_8c_1a68627cfe01b1c1adbce8408c72c5e992" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void add_s1_s2_nn_fetch</definition>
        <argsstring>()</argsstring>
        <name>add_s1_s2_nn_fetch</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="1043" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sound_8c_1a650fb27c3f53d3ff92c00561020d5684" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8h_1a6becaef7eb98c0e45b13f72dadf07b23" kindref="member">sample_block_type</ref></type>
        <definition>sample_block_type SND_get_first</definition>
        <argsstring>(sound_type snd, long *cnt)</argsstring>
        <name>SND_get_first</name>
        <param>
          <type><ref refid="sound_8h_1a792cec4ed9d6d636d342d9365ba265ea" kindref="member">sound_type</ref></type>
          <declname>snd</declname>
        </param>
        <param>
          <type>long *</type>
          <declname>cnt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="1048" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" bodystart="1048" bodyend="1114"/>
      </memberdef>
      <memberdef kind="function" id="sound_8c_1ac694fd59be7fbed8953aa95ed982df22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8h_1a6becaef7eb98c0e45b13f72dadf07b23" kindref="member">sample_block_type</ref></type>
        <definition>sample_block_type SND_get_next</definition>
        <argsstring>(sound_type snd, long *cnt)</argsstring>
        <name>SND_get_next</name>
        <param>
          <type><ref refid="sound_8h_1a792cec4ed9d6d636d342d9365ba265ea" kindref="member">sound_type</ref></type>
          <declname>snd</declname>
        </param>
        <param>
          <type>long *</type>
          <declname>cnt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="1117" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" bodystart="1117" bodyend="1132"/>
      </memberdef>
      <memberdef kind="function" id="sound_8c_1a2171bf8fcdb76cb137865d9152ee86d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8h_1a6becaef7eb98c0e45b13f72dadf07b23" kindref="member">sample_block_type</ref></type>
        <definition>sample_block_type make_zero_block</definition>
        <argsstring>(void)</argsstring>
        <name>make_zero_block</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="1146" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" bodystart="1146" bodyend="1162"/>
      </memberdef>
      <memberdef kind="function" id="sound_8c_1adbdf257a70eef35f48c655e16e8096c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void min_cnt</definition>
        <argsstring>(long *cnt_ptr, sound_type sound, snd_susp_type susp, long cnt)</argsstring>
        <name>min_cnt</name>
        <param>
          <type>long *</type>
          <declname>cnt_ptr</declname>
        </param>
        <param>
          <type><ref refid="sound_8h_1a792cec4ed9d6d636d342d9365ba265ea" kindref="member">sound_type</ref></type>
          <declname>sound</declname>
        </param>
        <param>
          <type><ref refid="sound_8h_1ab2d3b7883b72a75324f6636f10c7f903" kindref="member">snd_susp_type</ref></type>
          <declname>susp</declname>
        </param>
        <param>
          <type>long</type>
          <declname>cnt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="1178" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" bodystart="1178" bodyend="1188"/>
      </memberdef>
      <memberdef kind="function" id="sound_8c_1a90e396bab2471f72285f290ce7a5cab1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void sound_init</definition>
        <argsstring>(void)</argsstring>
        <name>sound_init</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="1203" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" bodystart="1203" bodyend="1224"/>
      </memberdef>
      <memberdef kind="function" id="sound_8c_1a4fd068d71dfac231af7901a75a449921" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8h_1a792cec4ed9d6d636d342d9365ba265ea" kindref="member">sound_type</ref></type>
        <definition>sound_type sound_scale</definition>
        <argsstring>(double factor, sound_type snd)</argsstring>
        <name>sound_scale</name>
        <param>
          <type>double</type>
          <declname>factor</declname>
        </param>
        <param>
          <type><ref refid="sound_8h_1a792cec4ed9d6d636d342d9365ba265ea" kindref="member">sound_type</ref></type>
          <declname>snd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="1229" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" bodystart="1229" bodyend="1234"/>
      </memberdef>
      <memberdef kind="function" id="sound_8c_1a7d9177f1dae17250734b5e794b6a3693" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void set_logical_stop_time</definition>
        <argsstring>(sound_type sound, time_type when)</argsstring>
        <name>set_logical_stop_time</name>
        <param>
          <type><ref refid="sound_8h_1a792cec4ed9d6d636d342d9365ba265ea" kindref="member">sound_type</ref></type>
          <declname>sound</declname>
        </param>
        <param>
          <type><ref refid="midifns_8h_1a3f787491db5dbc75c21b27d54e9ebae6" kindref="member">time_type</ref></type>
          <declname>when</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="1252" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" bodystart="1252" bodyend="1270"/>
      </memberdef>
      <memberdef kind="function" id="sound_8c_1ae35f5844602719cf66324f4de2a658b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>void</definition>
        <argsstring>((**watch_me)())</argsstring>
        <name>void</name>
        <param>
          <type>(**)()</type>
          <declname>watch_me</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="1277" column="1"/>
      </memberdef>
      <memberdef kind="function" id="sound_8c_1aa40f0efbfefafe4fed7e7e79bfcbb6db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void set_watch</definition>
        <argsstring>(void((**where)()))</argsstring>
        <name>set_watch</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref>((**where)())</type>
          <defname>where</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="1279" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" bodystart="1279" bodyend="1286"/>
      </memberdef>
      <memberdef kind="function" id="sound_8c_1a3a3e0212d60dce365cb9dd0df221cd80" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void sound_print</definition>
        <argsstring>(LVAL snd_expr, long n)</argsstring>
        <name>sound_print</name>
        <param>
          <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
          <declname>snd_expr</declname>
        </param>
        <param>
          <type>long</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="1292" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" bodystart="1292" bodyend="1318"/>
      </memberdef>
      <memberdef kind="function" id="sound_8c_1ac1232bd6c437f8d42c94015001e12539" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void sound_play</definition>
        <argsstring>(LVAL snd_expr)</argsstring>
        <name>sound_play</name>
        <param>
          <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
          <declname>snd_expr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="1426" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" bodystart="1426" bodyend="1468"/>
      </memberdef>
      <memberdef kind="function" id="sound_8c_1aebbcea007dc8d74685f63045b16fc9ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void sound_print_tree</definition>
        <argsstring>(sound_type snd)</argsstring>
        <name>sound_print_tree</name>
        <param>
          <type><ref refid="sound_8h_1a792cec4ed9d6d636d342d9365ba265ea" kindref="member">sound_type</ref></type>
          <declname>snd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="1473" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" bodystart="1473" bodyend="1479"/>
      </memberdef>
      <memberdef kind="function" id="sound_8c_1ad9f5e076a5a83912c647d0164fd9cf98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void indent</definition>
        <argsstring>(int n)</argsstring>
        <name>indent</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="1482" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" bodystart="1482" bodyend="1485"/>
      </memberdef>
      <memberdef kind="function" id="sound_8c_1a1b2ca7c132e90e3ded840d25f8baa088" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void sound_print_tree_1</definition>
        <argsstring>(sound_type snd, int n)</argsstring>
        <name>sound_print_tree_1</name>
        <param>
          <type><ref refid="sound_8h_1a792cec4ed9d6d636d342d9365ba265ea" kindref="member">sound_type</ref></type>
          <declname>snd</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="1488" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" bodystart="1488" bodyend="1541"/>
      </memberdef>
      <memberdef kind="function" id="sound_8c_1acc801867875aabf005a24c2ab032f5d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void mark_audio_time</definition>
        <argsstring>()</argsstring>
        <name>mark_audio_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="1550" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" bodystart="1550" bodyend="1557"/>
      </memberdef>
      <memberdef kind="function" id="sound_8c_1adca6dd4416ad7e867320eca799f922b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double hz_to_step</definition>
        <argsstring>(double hz)</argsstring>
        <name>hz_to_step</name>
        <param>
          <type>double</type>
          <declname>hz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="1579" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" bodystart="1579" bodyend="1582"/>
      </memberdef>
      <memberdef kind="function" id="sound_8c_1aa21f4301ed3b3447d7c7e90a132ac8c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double step_to_hz</definition>
        <argsstring>(double steps)</argsstring>
        <name>step_to_hz</name>
        <param>
          <type>double</type>
          <declname>steps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="1585" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" bodystart="1585" bodyend="1588"/>
      </memberdef>
      <memberdef kind="function" id="sound_8c_1a78e13bc67cf071512afaa9d277895d47" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void sound_xlfree</definition>
        <argsstring>(sound_type s)</argsstring>
        <name>sound_xlfree</name>
        <param>
          <type><ref refid="sound_8h_1a792cec4ed9d6d636d342d9365ba265ea" kindref="member">sound_type</ref></type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="1605" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" bodystart="1605" bodyend="1610"/>
      </memberdef>
      <memberdef kind="function" id="sound_8c_1a09bf7a9d538f25f8aa13f9970058fcbf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void sound_xlprint</definition>
        <argsstring>(LVAL fptr, sound_type s)</argsstring>
        <name>sound_xlprint</name>
        <param>
          <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
          <declname>fptr</declname>
        </param>
        <param>
          <type><ref refid="sound_8h_1a792cec4ed9d6d636d342d9365ba265ea" kindref="member">sound_type</ref></type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="1613" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" bodystart="1613" bodyend="1618"/>
      </memberdef>
      <memberdef kind="function" id="sound_8c_1ac087d5749cadc2dab4f9776860b24f61" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void sound_xlsave</definition>
        <argsstring>(FILE *fp, sound_type s)</argsstring>
        <name>sound_xlsave</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <param>
          <type><ref refid="sound_8h_1a792cec4ed9d6d636d342d9365ba265ea" kindref="member">sound_type</ref></type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="1621" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" bodystart="1621" bodyend="1626"/>
      </memberdef>
      <memberdef kind="function" id="sound_8c_1aeff6641a35e5eebc7c62f744f3e048c5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned char *</type>
        <definition>static unsigned char* sound_xlrestore</definition>
        <argsstring>(FILE *fp)</argsstring>
        <name>sound_xlrestore</name>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="1629" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" bodystart="1629" bodyend="1633"/>
      </memberdef>
      <memberdef kind="function" id="sound_8c_1aacbcd25bfdd21a0dfd009fe0bfbe4ff5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void sound_xlmark</definition>
        <argsstring>(void *a_sound)</argsstring>
        <name>sound_xlmark</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>a_sound</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="1638" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" bodystart="1638" bodyend="1680"/>
      </memberdef>
      <memberdef kind="function" id="sound_8c_1a8f3a59cfbdaa88928f8e44682284723b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void sound_symbols</definition>
        <argsstring>()</argsstring>
        <name>sound_symbols</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="1683" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" bodystart="1683" bodyend="1688"/>
      </memberdef>
      <memberdef kind="function" id="sound_8c_1a648e09ad8e5937bdcec6c10ddaac4738" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="cext_8h_1a7670a4e8a07d9ebb00411948b0bbf86d" kindref="member">boolean</ref></type>
        <definition>boolean soundp</definition>
        <argsstring>(LVAL s)</argsstring>
        <name>soundp</name>
        <param>
          <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="1694" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" bodystart="1694" bodyend="1698"/>
      </memberdef>
      <memberdef kind="function" id="sound_8c_1a1d20fa7c529222cf8d86405a5911ed4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8h_1a792cec4ed9d6d636d342d9365ba265ea" kindref="member">sound_type</ref></type>
        <definition>sound_type sound_zero</definition>
        <argsstring>(time_type t0, rate_type sr)</argsstring>
        <name>sound_zero</name>
        <param>
          <type><ref refid="midifns_8h_1a3f787491db5dbc75c21b27d54e9ebae6" kindref="member">time_type</ref></type>
          <declname>t0</declname>
        </param>
        <param>
          <type><ref refid="sound_8h_1a80a6a98ce803ce7a00e744aa2103f9a1" kindref="member">rate_type</ref></type>
          <declname>sr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="1703" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" bodystart="1703" bodyend="1719"/>
      </memberdef>
      <memberdef kind="function" id="sound_8c_1a6ff362fbe32a9dfef6c14f1adc52f3b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xldmem_8h_1a9a9ec6a5fbca2b40ed8d19faa799be8c" kindref="member">LVAL</ref></type>
        <definition>LVAL cvsound</definition>
        <argsstring>(sound_type s)</argsstring>
        <name>cvsound</name>
        <param>
          <type><ref refid="sound_8h_1a792cec4ed9d6d636d342d9365ba265ea" kindref="member">sound_type</ref></type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" line="1722" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c" bodystart="1722" bodyend="1727"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>sound.c<sp/>--<sp/>nyquist<sp/>sound<sp/>data<sp/>type<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>CHANGE<sp/>LOG</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>--------------------------------------------------------------------</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>28Apr03<sp/><sp/>dm<sp/><sp/>changes<sp/>for<sp/>portability<sp/>and<sp/>fix<sp/>compiler<sp/>warnings</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>define<sp/>size_t:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>UNIX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lib-src_2libvorbis_2macos_2compat_2sys_2_types_8h" kindref="compound">sys/types.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="xlisp_8h" kindref="compound">xlisp.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sound_8h" kindref="compound">sound.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="falloc_8h" kindref="compound">falloc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="samples_8h" kindref="compound">samples.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="extern_8h" kindref="compound">extern.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="libnyquist_2nyquist_2nyqsrc_2debug_8h" kindref="compound">debug.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="assert_8h" kindref="compound">assert.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>OSC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="nyq-osc-server_8h" kindref="compound">nyq-osc-server.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cext_8h" kindref="compound">cext.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="userio_8h" kindref="compound">userio.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>#define<sp/>GC_DEBUG<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>GC_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/><ref refid="libnyquist_2nyquist_2nyqsrc_2debug_8c_1a43baea014de2add49144f93a9a0f98a6" kindref="member">sound_to_watch</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="sound_8h_1a1f39518234123c36f31128f12decb519" refkind="member"><highlight class="normal"><ref refid="structsnd__list__struct" kindref="compound">snd_list_type</ref><sp/><ref refid="sound_8c_1a1f39518234123c36f31128f12decb519" kindref="member">list_watch</ref>;<sp/></highlight><highlight class="comment">//DBY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>#define<sp/>SNAPSHOTS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="sound_8c_1abc3f08f3e973edf3f1d9a4d2f5173e16" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="sound_8c_1abc3f08f3e973edf3f1d9a4d2f5173e16" kindref="member">table_memory</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="sound_8h_1a5917e1ea52952f15fd755fa27432113b" refkind="member"><highlight class="normal"><ref refid="structsample__block__node" kindref="compound">sample_block_type</ref><sp/><ref refid="sound_8c_1a5917e1ea52952f15fd755fa27432113b" kindref="member">zero_block</ref>;</highlight></codeline>
<codeline lineno="38" refid="sound_8h_1abb923c4be4a1beafa5f79463091c3925" refkind="member"><highlight class="normal"><ref refid="structsample__block__node" kindref="compound">sample_block_type</ref><sp/><ref refid="sound_8c_1abb923c4be4a1beafa5f79463091c3925" kindref="member">internal_zero_block</ref>;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="nyx_8c_1aa08a9bd03e22919769a8f33094756c97" refkind="member"><highlight class="normal"><ref refid="structsnd__list__struct" kindref="compound">snd_list_type</ref><sp/><ref refid="sound_8c_1aa08a9bd03e22919769a8f33094756c97" kindref="member">zero_snd_list</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="sound_8c_1a68c606455466433ef085bd8386841e0d" refkind="member"><highlight class="normal"><ref refid="structxtype__desc__struct" kindref="compound">xtype_desc</ref><sp/><ref refid="sound_8c_1a68c606455466433ef085bd8386841e0d" kindref="member">sound_desc</ref>;</highlight></codeline>
<codeline lineno="43" refid="nyx_8c_1a5d46b7b169ac8631bca1d7d523817742" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="sound_8c_1a5d46b7b169ac8631bca1d7d523817742" kindref="member">a_sound</ref>;</highlight></codeline>
<codeline lineno="44" refid="sound_8c_1a5d5f7594b5d95d04d4a8ed7d171b247b" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="sound_8c_1a5d5f7594b5d95d04d4a8ed7d171b247b" kindref="member">s_audio_markers</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sound_xlfree();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sound_xlprint();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sound_xlsave();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*sound_xlrestore();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sound_8c_1a0b6093bf05178c52868eab60bb518a16" kindref="member">sound_print_array</ref>(<ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="lib-src_2libscorealign_2main_8cpp_1a1aa9083626d69f94349750d974f0359a" kindref="member">sa</ref>,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sound_8c_1a4071a7e76648a965b669219193b48378" kindref="member">sound_print_sound</ref>(<ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sound_8c_1aaf3eda27f937fb462aac04ef96afcafa" kindref="member">sample_block_unref</ref>(<ref refid="structsample__block__node" kindref="compound">sample_block_type</ref><sp/>sam);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SNAPSHOTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/>sound_created_flag<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>OSC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nosc_enabled<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="sound_8h_1ae885833c5fdfbcfe484f29c244f1e484" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="sound_8c_1ae885833c5fdfbcfe484f29c244f1e484" kindref="member">sound_latency</ref><sp/>=<sp/>0.3;<sp/></highlight><highlight class="comment">/*<sp/>default<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>these<sp/>are<sp/>used<sp/>so<sp/>get<sp/>times<sp/>for<sp/>*AUDIO-MARKERS*<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="sound_8h_1a1cec2b7e0c0b8951727ead5e11ef2a2e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="sound_8c_1a1cec2b7e0c0b8951727ead5e11ef2a2e" kindref="member">sound_srate</ref><sp/>=<sp/>44100.0;</highlight></codeline>
<codeline lineno="66" refid="sound_8h_1a2ecc6ba52c5cf3f8f8ccb8ab5cdbccc6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="sound_8c_1a2ecc6ba52c5cf3f8f8ccb8ab5cdbccc6" kindref="member">sound_frames</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="sound_8h_1af12940afd0d8629e7bcebf8dd7e4e316" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="sound_8c_1af12940afd0d8629e7bcebf8dd7e4e316" kindref="member">snd_set_latency</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="sysex_8c_1a9c5bf07170b5d91cfb44d4bfd0517128" kindref="member">latency</ref>)</highlight></codeline>
<codeline lineno="69"><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>r<sp/>=<sp/><ref refid="sound_8c_1ae885833c5fdfbcfe484f29c244f1e484" kindref="member">sound_latency</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sound_8c_1ae885833c5fdfbcfe484f29c244f1e484" kindref="member">sound_latency</ref><sp/>=<sp/><ref refid="sysex_8c_1a9c5bf07170b5d91cfb44d4bfd0517128" kindref="member">latency</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="sound_8h_1a5a66100a15d73003c5140f23d3587064" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="sound_8c_1a5a66100a15d73003c5140f23d3587064" kindref="member">check_terminate_cnt</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>tc)</highlight></codeline>
<codeline lineno="77"><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tc<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xldbug_8c_1aaebeabdcebf1b39c984723f1727ddeed" kindref="member">xlfail</ref>(</highlight><highlight class="stringliteral">&quot;duration<sp/>is<sp/>less<sp/>than<sp/>0<sp/>samples&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tc<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>this<sp/>should<sp/>not<sp/>be<sp/>reached<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tc;</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>xlbadsr<sp/>-<sp/>report<sp/>a<sp/>&quot;bad<sp/>combination<sp/>of<sp/>sample<sp/>rates&quot;<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="sound_8h_1afad086fb55fe728687931d8fe2cfb2be" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="sound_8c_1afad086fb55fe728687931d8fe2cfb2be" kindref="member">snd_badsr</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="88"><highlight class="normal">{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xldbug_8c_1aaebeabdcebf1b39c984723f1727ddeed" kindref="member">xlfail</ref>(</highlight><highlight class="stringliteral">&quot;bad<sp/>combination<sp/>of<sp/>sample<sp/>rates&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="macaboutbox_8c_1a263efce0e5cda1d387a1a43f94715445" kindref="member">NIL</ref>;<sp/></highlight><highlight class="comment">/*<sp/>never<sp/>happens<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>compute-phase<sp/>-<sp/><sp/>given<sp/>a<sp/>phase<sp/>in<sp/>radians,<sp/>a<sp/>wavetable<sp/>specified<sp/>as</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>nominal<sp/>pitch<sp/>(in<sp/>half<sp/>steps),<sp/>the<sp/>table<sp/>length,<sp/>and<sp/>the<sp/>sample</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/>*<sp/><sp/>rate,<sp/>compute<sp/>the<sp/>sample<sp/>number<sp/>corresponding<sp/>to<sp/>the<sp/>phase.<sp/><sp/>This</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/>*<sp/><sp/>routine<sp/>makes<sp/>it<sp/>easy<sp/>to<sp/>initialize<sp/>the<sp/>table<sp/>pointer<sp/>at<sp/>the<sp/>beginning</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/>*<sp/><sp/>of<sp/>various<sp/>oscillator<sp/>implementations<sp/>in<sp/>Nyquist.<sp/><sp/>Note<sp/>that<sp/>the<sp/>table</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/>*<sp/><sp/>may<sp/>represent<sp/>several<sp/>periods,<sp/>in<sp/>which<sp/>case<sp/>phase<sp/>360<sp/>is<sp/>not<sp/>the<sp/>same</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/>*<sp/><sp/>as<sp/>0.<sp/><sp/>Also<sp/>note<sp/>that<sp/>the<sp/>phase<sp/>increment<sp/>is<sp/>also<sp/>computed<sp/>and<sp/>returned</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/>*<sp/><sp/>through<sp/>incr_ptr.</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="sound_8h_1a5ef0b0a7a18bf01ededd557a396f88fe" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="sound_8c_1a5ef0b0a7a18bf01ededd557a396f88fe" kindref="member">compute_phase</ref>(phase,<sp/>key,<sp/>n,<sp/>srate,<sp/>new_srate,<sp/>freq,<sp/>incr_ptr)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>double<sp/>phase;<sp/><sp/></highlight><highlight class="comment">/*<sp/>phase<sp/>in<sp/>degrees<sp/>(depends<sp/>on<sp/>ANGLEBASE)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>key;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>semitone<sp/>number<sp/>of<sp/>the<sp/>table<sp/>played<sp/>at<sp/>srate<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>number<sp/>of<sp/>samples<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>srate;<sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>sample<sp/>rate<sp/>of<sp/>the<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>new_srate;<sp/><sp/></highlight><highlight class="comment">/*<sp/>sample<sp/>rate<sp/>of<sp/>the<sp/>result<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>freq;<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>desired<sp/>frequency<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*incr_ptr;<sp/></highlight><highlight class="comment">/*<sp/>the<sp/>sample<sp/>increment<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal">{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="latency_8c_1a486233493fc0e05fe1bdbe7b7e5d0f1e" kindref="member">period</ref><sp/>=<sp/>1.0<sp/>/<sp/><ref refid="sound_8c_1aa21f4301ed3b3447d7c7e90a132ac8c1" kindref="member">step_to_hz</ref>(key);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>convert<sp/>phase<sp/>to<sp/>sample<sp/>units<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>phase<sp/>=<sp/>srate<sp/>*<sp/>period<sp/>*<sp/>(phase<sp/>/<sp/>(double)<sp/><ref refid="sound_8h_1a90f968926a3ccf457746f5082663360a" kindref="member">ANGLEBASE</ref>);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>phase<sp/>is<sp/>now<sp/>in<sp/>sample<sp/>units;<sp/>if<sp/>phase<sp/>is<sp/>less<sp/>than<sp/>zero,<sp/>then<sp/>increase</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>by<sp/>some<sp/>number<sp/>of<sp/>sLength&apos;s<sp/>to<sp/>make<sp/>it<sp/>positive:</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(phase<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phase<sp/>+=<sp/>(((<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)<sp/>((-phase)<sp/>/<sp/>n))<sp/>+<sp/>1)<sp/>*<sp/>n;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>phase<sp/>is<sp/>longer<sp/>than<sp/>the<sp/>sample<sp/>length,<sp/>wrap<sp/>it<sp/>by<sp/>subtracting<sp/>the</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>integer<sp/>part<sp/>of<sp/>the<sp/>division<sp/>by<sp/>sLength:</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(phase<sp/>&gt;<sp/>n)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phase<sp/>-=<sp/>((<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)<sp/>(phase<sp/>/<sp/>n))<sp/>*<sp/>n;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Now<sp/>figure<sp/>the<sp/>phase<sp/>increment:<sp/>to<sp/>reproduce<sp/>original<sp/>pitch</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>required<sp/>incr<sp/>=<sp/>srate<sp/>/<sp/>new_srate.<sp/><sp/>To<sp/>get<sp/>the<sp/>new<sp/>frequency,</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scale<sp/>by<sp/>freq<sp/>/<sp/>nominal_freq<sp/>=<sp/>freq<sp/>*<sp/>period:</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>*incr_ptr<sp/>=<sp/>(srate<sp/>/<sp/>new_srate)<sp/>*<sp/>freq<sp/>*<sp/>period;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>phase;</highlight></codeline>
<codeline lineno="134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GCBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="sound_8c_1aee9b72cd7a123231b630e79de4427ef1" refkind="member"><highlight class="normal"><ref refid="structsnd__list__struct" kindref="compound">snd_list_type</ref><sp/><ref refid="sound_8c_1aee9b72cd7a123231b630e79de4427ef1" kindref="member">gcbug_snd_list</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="137" refid="sound_8h_1ac26512fa40eb2c631ecefdab06543616" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="sound_8c_1ac26512fa40eb2c631ecefdab06543616" kindref="member">blocks_to_watch_len</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="138" refid="sound_8h_1ac44b91032c872e22a1b55370f55d75d0" refkind="member"><highlight class="normal"><ref refid="structsample__block__node" kindref="compound">sample_block_type</ref><sp/><ref refid="sound_8c_1ac44b91032c872e22a1b55370f55d75d0" kindref="member">blocks_to_watch</ref>[<ref refid="sound_8h_1ab92eabb0427be550f8eb164325351ce2" kindref="member">blocks_to_watch_max</ref>];</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140" refid="sound_8h_1a6598927f73d80244a86bc30ad774edef" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sound_8c_1a6598927f73d80244a86bc30ad774edef" kindref="member">block_watch</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>sample_block)</highlight></codeline>
<codeline lineno="141"><highlight class="normal">{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="sound_8c_1ac26512fa40eb2c631ecefdab06543616" kindref="member">blocks_to_watch_len</ref><sp/>&gt;=<sp/><ref refid="sound_8h_1ab92eabb0427be550f8eb164325351ce2" kindref="member">blocks_to_watch_max</ref>)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xlio_8c_1a48c6474ff667334385f7c6e4c350c51d" kindref="member">stdputstr</ref>(</highlight><highlight class="stringliteral">&quot;block_watch<sp/>-<sp/>no<sp/>more<sp/>space<sp/>to<sp/>save<sp/>pointers\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>blocks_to_watch[<ref refid="sound_8c_1ac26512fa40eb2c631ecefdab06543616" kindref="member">blocks_to_watch_len</ref>++]<sp/>=<sp/>(<ref refid="sound_8h_1a6becaef7eb98c0e45b13f72dadf07b23" kindref="member">sample_block_type</ref>)<sp/>sample_block;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unix_2switches_8h_1a3d365a416f619366e3a28a11b450739d" kindref="member">nyquist_printf</ref>(</highlight><highlight class="stringliteral">&quot;block_watch<sp/>-<sp/>added<sp/>%d<sp/>=<sp/>%x\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)sample_block,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)sample_block);</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>fetch_zeros<sp/>--<sp/>the<sp/>fetch<sp/>function<sp/>for<sp/>appended<sp/>zeros<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/>*<sp/>zeros<sp/>are<sp/>appended<sp/>when<sp/>the<sp/>logical<sp/>stop<sp/>time<sp/>exceeds<sp/>the<sp/></highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/>*<sp/>(physical)<sp/>terminate<sp/>time.<sp/><sp/>This<sp/>fetch<sp/>function<sp/>is<sp/>installed</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/>*<sp/>by<sp/>snd_list_terminate().<sp/><sp/>When<sp/>appending<sp/>zeros,<sp/>we<sp/>just<sp/>return</highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/>*<sp/>a<sp/>pointer<sp/>to<sp/>the<sp/>internal_zero_block<sp/>and<sp/>increment<sp/>current<sp/>until</highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/>*<sp/>it<sp/>reaches<sp/>log_stop_cnt.<sp/><sp/>Then<sp/>we<sp/>call<sp/>snd_list_terminate()<sp/>to</highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/>*<sp/>finish<sp/>off<sp/>the<sp/>sound<sp/>list.</highlight></codeline>
<codeline lineno="160"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162" refid="sound_8c_1ada0cc0a7b7657269937860bd7eeb6f73" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sound_8c_1ada0cc0a7b7657269937860bd7eeb6f73" kindref="member">fetch_zeros</ref>(<ref refid="structsnd__susp__struct" kindref="compound">snd_susp_type</ref><sp/>susp,<sp/><ref refid="structsnd__list__struct" kindref="compound">snd_list_type</ref><sp/>snd_list)</highlight></codeline>
<codeline lineno="163"><highlight class="normal">{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref><sp/>=<sp/><ref refid="libflac_2src_2lib_f_l_a_c_2include_2private_2macros_8h_1a74e75242132eaabbc1c512488a135926" kindref="member">MIN</ref>(susp-&gt;<ref refid="structsnd__susp__struct_1a8044ae9d2cfcbccffd2a60c9b6ce16fa" kindref="member">log_stop_cnt</ref><sp/>-<sp/>susp-&gt;<ref refid="structsnd__susp__struct_1a8f9e3b02c2fc0ccbb63d88b97d44c89c" kindref="member">current</ref>,</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sound_8h_1a3871670a207dd661a524b1328410fb0c" kindref="member">max_sample_block_len</ref>);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>nyquist_printf(&quot;fetch_zeros,<sp/>lsc<sp/>%d<sp/>current<sp/>%d<sp/>len<sp/>%d\n&quot;,<sp/></highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;log_stop_cnt,<sp/>susp-&gt;current,<sp/>len);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>[80];</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(error,<sp/></highlight><highlight class="stringliteral">&quot;fetch_zeros<sp/>susp<sp/>%p<sp/>(%s)<sp/>len<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>susp,<sp/>susp-&gt;<ref refid="structsnd__susp__struct_1a4d5fa6ba6ea209e5159d06ea00320041" kindref="member">name</ref>,<sp/>len);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_mac_a_e_8c_1abd437fd481d46806b84e0d172a0f1437" kindref="member">xlabort</ref>(error);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>==<sp/>0)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>we&apos;ve<sp/>reached<sp/>the<sp/>logical<sp/>stop<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>nyquist_printf(&quot;fetch_zeros:<sp/>reached<sp/>the<sp/>logical<sp/>stop<sp/>in<sp/>%s<sp/>cnt<sp/>%d\n&quot;,</highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;name,<sp/>susp-&gt;log_stop_cnt);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sound_8c_1a64f075d27a7672293c0c8d657aa51647" kindref="member">snd_list_terminate</ref>(snd_list);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd_list-&gt;<ref refid="structsnd__list__struct_1a809aedecf6147df4ec4b45404cfab414" kindref="member">block_len</ref><sp/>=<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structsnd__susp__struct_1a8f9e3b02c2fc0ccbb63d88b97d44c89c" kindref="member">current</ref><sp/>+=<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>sound_nth_block<sp/>-<sp/>fetch<sp/>the<sp/>address<sp/>of<sp/>the<sp/>nth<sp/>sample<sp/>block<sp/>of<sp/>a<sp/>sound<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="186"><highlight class="comment"><sp/>*<sp/>NOTE:<sp/>intended<sp/>to<sp/>be<sp/>called<sp/>from<sp/>lisp.<sp/><sp/>Lisp<sp/>can<sp/>then<sp/>call<sp/>block_watch</highlight></codeline>
<codeline lineno="187"><highlight class="comment"><sp/>*<sp/>to<sp/>keep<sp/>an<sp/>eye<sp/>on<sp/>the<sp/>block.</highlight></codeline>
<codeline lineno="188"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189" refid="sound_8h_1aea9aaf8eb247ff1883cd4865081e8594" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="sound_8c_1aea9aaf8eb247ff1883cd4865081e8594" kindref="member">sound_nth_block</ref>(<ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/>snd,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="190"><highlight class="normal">{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsnd__list__struct" kindref="compound">snd_list_type</ref><sp/>snd_list<sp/>=<sp/>snd-&gt;<ref refid="structsound__struct_1abe0c2ecf4e89d7d8e679adb01442fd60" kindref="member">list</ref>;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gcbug_snd_list<sp/>=<sp/>snd_list;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unix_2switches_8h_1a3d365a416f619366e3a28a11b450739d" kindref="member">nyquist_printf</ref>(</highlight><highlight class="stringliteral">&quot;gcbug_snd_list<sp/>=<sp/>0x%p\n&quot;</highlight><highlight class="normal">,<sp/>gcbug_snd_list);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!snd_list-&gt;<ref refid="structsnd__list__struct_1aaf6e754e36ceada326133f729fc4462c" kindref="member">block</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd_list<sp/>=<sp/>snd_list-&gt;<ref refid="structsnd__list__struct_1a7eb4e39c02b1fa81d1000b204f888777" kindref="member">u</ref>.<ref refid="structsnd__list__struct_1a3a9e571a923a7496eabe0d721e497fbf" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(snd_list-&gt;<ref refid="structsnd__list__struct_1aaf6e754e36ceada326133f729fc4462c" kindref="member">block</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>snd_list-&gt;<ref refid="structsnd__list__struct_1aaf6e754e36ceada326133f729fc4462c" kindref="member">block</ref>;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="comment">/****************************************************************************</highlight></codeline>
<codeline lineno="209"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd_list_create</highlight></codeline>
<codeline lineno="210"><highlight class="comment">*<sp/>Inputs:</highlight></codeline>
<codeline lineno="211"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd_susp_type<sp/>susp:<sp/>A<sp/>reference<sp/>to<sp/>the<sp/>suspension</highlight></codeline>
<codeline lineno="212"><highlight class="comment">*<sp/>Result:<sp/>snd_list_type</highlight></codeline>
<codeline lineno="213"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>newly-created<sp/>sound<sp/>list<sp/>type</highlight></codeline>
<codeline lineno="214"><highlight class="comment">*<sp/>Effect:<sp/></highlight></codeline>
<codeline lineno="215"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Allocates<sp/>and<sp/>initializes<sp/>a<sp/>snd_list<sp/>node:</highlight></codeline>
<codeline lineno="216"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block<sp/><sp/><sp/><sp/>refcnt<sp/><sp/>block_len<sp/>susp<sp/><sp/>logically_stopped</highlight></codeline>
<codeline lineno="217"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>+--------+--------+-------+-------+---+</highlight></codeline>
<codeline lineno="218"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|////////|<sp/><sp/><sp/>1<sp/><sp/><sp/><sp/>|<sp/><sp/><sp/>0<sp/><sp/><sp/>|<sp/>susp<sp/><sp/>|<sp/>F<sp/>|</highlight></codeline>
<codeline lineno="219"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>+--------+--------+-------+-------+---+</highlight></codeline>
<codeline lineno="220"><highlight class="comment">****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>snd_list_create<sp/>--<sp/>alloc<sp/>and<sp/>initialize<sp/>a<sp/>snd_list<sp/>node<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224" refid="sound_8h_1a58f82dfd9acaae997e982fd56e81e11d" refkind="member"><highlight class="normal"><ref refid="structsnd__list__struct" kindref="compound">snd_list_type</ref><sp/><ref refid="sound_8c_1a58f82dfd9acaae997e982fd56e81e11d" kindref="member">snd_list_create</ref>(<ref refid="structsnd__susp__struct" kindref="compound">snd_susp_type</ref><sp/>susp)</highlight></codeline>
<codeline lineno="225"><highlight class="normal">{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsnd__list__struct" kindref="compound">snd_list_type</ref><sp/>snd_list;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="falloc_8h_1aad5599de2d7e9f1b7b7bee13b8e8b202" kindref="member">falloc_snd_list</ref>(snd_list,<sp/></highlight><highlight class="stringliteral">&quot;snd_list_create&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_list-&gt;<ref refid="structsnd__list__struct_1aaf6e754e36ceada326133f729fc4462c" kindref="member">block</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>no<sp/>block<sp/>of<sp/>samples<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_list-&gt;<ref refid="structsnd__list__struct_1a7eb4e39c02b1fa81d1000b204f888777" kindref="member">u</ref>.<ref refid="structsnd__list__struct_1a57f7d6b31a871ee6d94757b409f636ee" kindref="member">susp</ref><sp/>=<sp/>susp;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>point<sp/>to<sp/>suspension<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_list-&gt;<ref refid="structsnd__list__struct_1a27044dc0ac840d508156da70b7b8eec5" kindref="member">refcnt</ref><sp/>=<sp/>1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>one<sp/>ref<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_list-&gt;<ref refid="structsnd__list__struct_1a809aedecf6147df4ec4b45404cfab414" kindref="member">block_len</ref><sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>no<sp/>samples<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_list-&gt;<ref refid="structsnd__list__struct_1a09cdf89fd12d89166b27e4c3963420b3" kindref="member">logically_stopped</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight><highlight class="comment">/*<sp/>not<sp/>stopped<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>nyquist_printf(&quot;snd_list_create<sp/>=&gt;<sp/>%p\n&quot;,<sp/>snd_list);*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>snd_list;</highlight></codeline>
<codeline lineno="237"><highlight class="normal">}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="comment">/****************************************************************************</highlight></codeline>
<codeline lineno="241"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sound_create</highlight></codeline>
<codeline lineno="242"><highlight class="comment">*<sp/>Inputs:</highlight></codeline>
<codeline lineno="243"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd_susp_type<sp/>susp:<sp/>The<sp/>suspension<sp/>block<sp/>to<sp/>be<sp/>used<sp/>for<sp/>this<sp/>sound</highlight></codeline>
<codeline lineno="244"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>time_type<sp/>t0:<sp/>The<sp/>initial<sp/>time<sp/>for<sp/>this<sp/>sound</highlight></codeline>
<codeline lineno="245"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>rate_type<sp/>sr:<sp/>The<sp/>sampling<sp/>rate<sp/>for<sp/>this<sp/>sound</highlight></codeline>
<codeline lineno="246"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>sample_type<sp/>scale:<sp/>The<sp/>scaling<sp/>factor<sp/>for<sp/>this<sp/>sound</highlight></codeline>
<codeline lineno="247"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>sample_block_type<sp/>(*proc)(...):<sp/>The<sp/>get_next_sound<sp/>method</highlight></codeline>
<codeline lineno="248"><highlight class="comment">*<sp/>Result:<sp/>sound_type</highlight></codeline>
<codeline lineno="249"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="250"><highlight class="comment">*<sp/>Effect:<sp/></highlight></codeline>
<codeline lineno="251"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Creates<sp/>and<sp/>initializes<sp/>a<sp/>sound<sp/>type</highlight></codeline>
<codeline lineno="252"><highlight class="comment">*<sp/>Notes:</highlight></codeline>
<codeline lineno="253"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>MSDOS<sp/>conditional<sp/>is<sp/>actually<sp/>a<sp/>test<sp/>for<sp/>ANSI<sp/>headers;<sp/>the</highlight></codeline>
<codeline lineno="254"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>presence<sp/>of<sp/>float<sp/>parameters<sp/>means<sp/>that<sp/>an<sp/>ANSI<sp/>prototype<sp/>and</highlight></codeline>
<codeline lineno="255"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>non-ANSI<sp/>header<sp/>are<sp/>incompatible.<sp/><sp/>Better<sp/>solution<sp/>would<sp/>be</highlight></codeline>
<codeline lineno="256"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>ANSIfy<sp/>source.</highlight></codeline>
<codeline lineno="257"><highlight class="comment">****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259" refid="sound_8c_1a784b9d7348ab348773b9c6e6025be8ec" refkind="member"><highlight class="normal"><ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/><ref refid="sound_8c_1a784b9d7348ab348773b9c6e6025be8ec" kindref="member">last_sound</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261" refid="sound_8h_1a11255fe781080fb7915f6ab9a5afc4ae" refkind="member"><highlight class="normal"><ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/><ref refid="sound_8c_1a11255fe781080fb7915f6ab9a5afc4ae" kindref="member">sound_create</ref>(</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><ref refid="structsnd__susp__struct" kindref="compound">snd_susp_type</ref><sp/>susp,</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><ref refid="midifns_8h_1a3f787491db5dbc75c21b27d54e9ebae6" kindref="member">time_type</ref><sp/>t0,</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><ref refid="sound_8h_1a80a6a98ce803ce7a00e744aa2103f9a1" kindref="member">rate_type</ref><sp/>sr,</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><ref refid="sound_8h_1a5e55d8ac78e61a8ad65e708696e130b5" kindref="member">promoted_sample_type</ref><sp/>scale)</highlight></codeline>
<codeline lineno="266"><highlight class="normal">{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/>sound;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="falloc_8h_1aaf3a35c6f02abdd92c00c10e5e798899" kindref="member">falloc_sound</ref>(sound,<sp/></highlight><highlight class="stringliteral">&quot;sound_create&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>sound)<sp/>&amp;<sp/>3)<sp/><ref refid="xlio_8c_1a6b1f25f19d584cce958a129b65cac4e2" kindref="member">errputstr</ref>(</highlight><highlight class="stringliteral">&quot;sound<sp/>not<sp/>word<sp/>aligned\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>last_sound<sp/>=<sp/>sound;<sp/></highlight><highlight class="comment">/*<sp/>debug<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t0<sp/>&lt;<sp/>0)<sp/><ref refid="xldbug_8c_1a2d78bf523301185246193246684786a8" kindref="member">xlerror</ref>(</highlight><highlight class="stringliteral">&quot;attempt<sp/>to<sp/>create<sp/>a<sp/>sound<sp/>with<sp/>negative<sp/>starting<sp/>time&quot;</highlight><highlight class="normal">,<sp/><ref refid="osstuff_8c_1aa49556ecde86e8c9fa35e41225d867d0" kindref="member">s_unbound</ref>);<sp/></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>nyquist_printf(&quot;sound_create<sp/>%p<sp/>gets<sp/>%g\n&quot;,<sp/>sound,<sp/>t0);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>sound-&gt;t0<sp/>=<sp/>sound-&gt;true_t0<sp/>=<sp/>sound-&gt;time<sp/>=<sp/>t0;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>sound-&gt;stop<sp/>=<sp/><ref refid="sound_8h_1ad1d0a187552467e9e920f964abcc2581" kindref="member">MAX_STOP</ref>;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>sound-&gt;sr<sp/>=<sp/>sr;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>sound-&gt;current<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>sound-&gt;scale<sp/>=<sp/>(float)<sp/>scale;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>sound-&gt;list<sp/>=<sp/><ref refid="sound_8c_1a58f82dfd9acaae997e982fd56e81e11d" kindref="member">snd_list_create</ref>(susp);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>sound-&gt;get_next<sp/>=<sp/><ref refid="sound_8c_1a650fb27c3f53d3ff92c00561020d5684" kindref="member">SND_get_first</ref>;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>sound-&gt;logical_stop_cnt<sp/>=<sp/><ref refid="sound_8h_1ac1ae4add974b9cfc6b5aaf8a578f01ab" kindref="member">UNKNOWN</ref>;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>sound-&gt;table<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>sound-&gt;extra<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>nyquist_printf(&quot;sound_create<sp/>susp<sp/>%p<sp/>snd_list<sp/>%p\n&quot;,<sp/>susp,<sp/>sound-&gt;list);</highlight></codeline>
<codeline lineno="284"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nyquist_printf(&quot;sound_create&apos;d<sp/>%p\n&quot;,<sp/>sound);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SNAPSHOTS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>sound_created_flag<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>GC_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sound<sp/>==<sp/>sound_to_watch)<sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unix_2switches_8h_1a3d365a416f619366e3a28a11b450739d" kindref="member">nyquist_printf</ref>(</highlight><highlight class="stringliteral">&quot;Created<sp/>watched<sp/>sound\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libnyquist_2nyquist_2nyqsrc_2debug_8c_1a10b49dfcad54d2d2ddf47f6c403c0c3c" kindref="member">watch_snd_list</ref>(sound-&gt;list);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sound;</highlight></codeline>
<codeline lineno="295"><highlight class="normal">}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>sound_prepend_zeros<sp/>--<sp/>modify<sp/>sound_type<sp/>so<sp/>that<sp/>it<sp/>starts<sp/>at<sp/>t0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="300"><highlight class="comment"><sp/>*<sp/>assumes<sp/>t0<sp/>is<sp/>earlier<sp/>than<sp/>snd-&gt;t0,<sp/>so<sp/>the<sp/>sound<sp/>should<sp/>return<sp/>zeros</highlight></codeline>
<codeline lineno="301"><highlight class="comment"><sp/>*<sp/>until<sp/>snd-&gt;t0<sp/>is<sp/>reached,<sp/>after<sp/>which<sp/>we<sp/>revert<sp/>to<sp/>normal<sp/>computation.</highlight></codeline>
<codeline lineno="302"><highlight class="comment"><sp/>*<sp/>When<sp/>we<sp/>return,<sp/>the<sp/>new<sp/>snd-&gt;t0<sp/>will<sp/>be<sp/>t0,<sp/>meaning<sp/>that<sp/>the<sp/>first</highlight></codeline>
<codeline lineno="303"><highlight class="comment"><sp/>*<sp/>sample<sp/>returned<sp/>will<sp/>be<sp/>at<sp/>time<sp/>t0.</highlight></codeline>
<codeline lineno="304"><highlight class="comment"><sp/>*<sp/>NOTE:<sp/>t0<sp/>may<sp/>not<sp/>be<sp/>an<sp/>exact<sp/>multiple<sp/>of<sp/>samples<sp/>earlier<sp/>than<sp/>snd-&gt;t0,</highlight></codeline>
<codeline lineno="305"><highlight class="comment"><sp/>*<sp/>but<sp/>Nyquist<sp/>allows<sp/>any<sp/>sound<sp/>to<sp/>be<sp/>shifted<sp/>by<sp/>+/-<sp/>0.5<sp/>samples<sp/>in<sp/></highlight></codeline>
<codeline lineno="306"><highlight class="comment"><sp/>*<sp/>order<sp/>to<sp/>achieve<sp/>alignment.<sp/><sp/>Since<sp/>sound_prepend_zeros<sp/>can<sp/>be<sp/>called</highlight></codeline>
<codeline lineno="307"><highlight class="comment"><sp/>*<sp/>many<sp/>times<sp/>on<sp/>the<sp/>same<sp/>sound_type,<sp/>there<sp/>is<sp/>a<sp/>chance<sp/>that<sp/>rounding<sp/></highlight></codeline>
<codeline lineno="308"><highlight class="comment"><sp/>*<sp/>errors<sp/>could<sp/>accumulate.<sp/><sp/>My<sp/>first<sp/>solution<sp/>was<sp/>to<sp/>return<sp/>with<sp/></highlight></codeline>
<codeline lineno="309"><highlight class="comment"><sp/>*<sp/>snd-&gt;t0<sp/>computed<sp/>exactly<sp/>and<sp/>not<sp/>reflecting<sp/>any<sp/>fractional<sp/>sample<sp/></highlight></codeline>
<codeline lineno="310"><highlight class="comment"><sp/>*<sp/>shift<sp/>of<sp/>the<sp/>signal,<sp/>but<sp/>this<sp/>caused<sp/>problems<sp/>for<sp/>the<sp/>caller:<sp/>a<sp/></highlight></codeline>
<codeline lineno="311"><highlight class="comment"><sp/>*<sp/>fractional<sp/>sample<sp/>shift<sp/>at<sp/>a<sp/>low<sp/>sample<sp/>rate<sp/>could<sp/>correspond<sp/>to<sp/></highlight></codeline>
<codeline lineno="312"><highlight class="comment"><sp/>*<sp/>many<sp/>client<sp/>samples,fooling<sp/>the<sp/>client<sp/>into<sp/>thinking<sp/>that<sp/>some<sp/></highlight></codeline>
<codeline lineno="313"><highlight class="comment"><sp/>*<sp/>initial<sp/>samples<sp/>should<sp/>be<sp/>discarded<sp/>(or<sp/>else<sp/>requiring<sp/>the<sp/>client</highlight></codeline>
<codeline lineno="314"><highlight class="comment"><sp/>*<sp/>to<sp/>be<sp/>pretty<sp/>smart).<sp/><sp/>The<sp/>solution<sp/>used<sp/>here<sp/>is<sp/>to<sp/>return<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="315"><highlight class="comment"><sp/>*<sp/>client<sp/>with<sp/>snd-&gt;t0<sp/>exactly<sp/>equal<sp/>to<sp/>t0,<sp/>but<sp/>to<sp/>save<sp/>snd-&gt;true_t0</highlight></codeline>
<codeline lineno="316"><highlight class="comment"><sp/>*<sp/>equal<sp/>to<sp/>the<sp/>time<sp/>of<sp/>the<sp/>first<sp/>sample<sp/>with<sp/>no<sp/>sound<sp/>shifting.<sp/><sp/>This</highlight></codeline>
<codeline lineno="317"><highlight class="comment"><sp/>*<sp/>time<sp/>is<sp/>used<sp/>for<sp/>any<sp/>future<sp/>sound_prepend_zeros<sp/>operations<sp/>so<sp/>that</highlight></codeline>
<codeline lineno="318"><highlight class="comment"><sp/>*<sp/>any<sp/>accumulated<sp/>rounding<sp/>errors<sp/>are<sp/>due<sp/>only<sp/>to<sp/>floating<sp/>point<sp/></highlight></codeline>
<codeline lineno="319"><highlight class="comment"><sp/>*<sp/>precision<sp/>and<sp/>not<sp/>to<sp/>accumulated<sp/>fractional<sp/>sample<sp/>shifts<sp/>of<sp/>snd.</highlight></codeline>
<codeline lineno="320"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321" refid="sound_8h_1a046a0aeb97b0ea49a76e8c7d031a5c12" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sound_8c_1a046a0aeb97b0ea49a76e8c7d031a5c12" kindref="member">sound_prepend_zeros</ref>(<ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/>snd,<sp/><ref refid="midifns_8h_1a3f787491db5dbc75c21b27d54e9ebae6" kindref="member">time_type</ref><sp/>t0)</highlight></codeline>
<codeline lineno="322"><highlight class="normal">{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>first,<sp/>see<sp/>if<sp/>we&apos;re<sp/>already<sp/>prepending<sp/>some<sp/>zeros<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(snd-&gt;<ref refid="structsound__struct_1ab03f6655f85673276f9a8bdc4affd358" kindref="member">get_next</ref><sp/>!=<sp/><ref refid="sound_8c_1a40d068145bd61957bcec7ff03fd39a0c" kindref="member">SND_get_zeros</ref>)<sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nyquist_printf(&quot;sound_prepend_zeros<sp/>1:<sp/>snd-&gt;t0<sp/>%g<sp/>t0<sp/>%g\n&quot;,<sp/>snd-&gt;t0,<sp/><sp/>t0);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>not,<sp/>then<sp/>initialize<sp/>some<sp/>fields<sp/>that<sp/>support<sp/>prepending<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd-&gt;<ref refid="structsound__struct_1a253c4a0814605d956f3fccb616ccbe90" kindref="member">prepend_cnt</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd-&gt;<ref refid="structsound__struct_1a7ec06c0b9e77d0e2ecd993df9f8eb6e3" kindref="member">true_t0</ref><sp/>=<sp/>snd-&gt;<ref refid="structsound__struct_1a397d52ba2da4602200e85f49f62f28ea" kindref="member">t0</ref>;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>save<sp/>old<sp/>get_next<sp/>and<sp/>plug<sp/>in<sp/>special<sp/>get_next<sp/>function<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd-&gt;<ref refid="structsound__struct_1a9c04a2fe9d615fe258d8db15e04adc42" kindref="member">after_prepend</ref><sp/>=<sp/>snd-&gt;<ref refid="structsound__struct_1ab03f6655f85673276f9a8bdc4affd358" kindref="member">get_next</ref>;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd-&gt;<ref refid="structsound__struct_1ab03f6655f85673276f9a8bdc4affd358" kindref="member">get_next</ref><sp/>=<sp/><ref refid="sound_8c_1a40d068145bd61957bcec7ff03fd39a0c" kindref="member">SND_get_zeros</ref>;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>(long)<sp/>(((snd-&gt;<ref refid="structsound__struct_1a7ec06c0b9e77d0e2ecd993df9f8eb6e3" kindref="member">true_t0</ref><sp/>-<sp/>t0)<sp/>*<sp/>snd-&gt;<ref refid="structsound__struct_1aafecd01e13520f7fb83fe8e2ac2cd026" kindref="member">sr</ref>)<sp/>+<sp/>0.5);<sp/></highlight><highlight class="comment">/*<sp/>how<sp/>many<sp/>samples<sp/>to<sp/>prepend<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>add<sp/>to<sp/>prepend_cnt<sp/>so<sp/>first<sp/>sample<sp/>will<sp/>correspond<sp/>to<sp/>new<sp/>t0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>snd-&gt;<ref refid="structsound__struct_1a253c4a0814605d956f3fccb616ccbe90" kindref="member">prepend_cnt</ref><sp/>+=<sp/>n;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>compute<sp/>the<sp/>true<sp/>t0<sp/>which<sp/>corresponds<sp/>to<sp/>the<sp/>time<sp/>of<sp/>first<sp/>sample<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>snd-&gt;<ref refid="structsound__struct_1a7ec06c0b9e77d0e2ecd993df9f8eb6e3" kindref="member">true_t0</ref><sp/>-=<sp/>(n<sp/>/<sp/>snd-&gt;<ref refid="structsound__struct_1aafecd01e13520f7fb83fe8e2ac2cd026" kindref="member">sr</ref>);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>make<sp/>caller<sp/>happy<sp/>by<sp/>claiming<sp/>the<sp/>sound<sp/>now<sp/>starts<sp/>at<sp/>exactly<sp/>t0;</highlight></codeline>
<codeline lineno="345"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>this<sp/>is<sp/>always<sp/>true<sp/>within<sp/>0.5<sp/>samples<sp/>as<sp/>allowed<sp/>by<sp/>Nyquist.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>snd-&gt;<ref refid="structsound__struct_1a397d52ba2da4602200e85f49f62f28ea" kindref="member">t0</ref><sp/>=<sp/>t0;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>nyquist_printf(&quot;sound_prepend_zeros:<sp/>snd<sp/>%p<sp/>true_t0<sp/>%g<sp/>sr<sp/>%g<sp/>n<sp/>%d\n&quot;,<sp/></highlight></codeline>
<codeline lineno="348"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd,<sp/>snd-&gt;true_t0,<sp/>snd-&gt;sr,<sp/>n);*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal">}</highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>sound_array_copy<sp/>--<sp/>copy<sp/>an<sp/>array<sp/>of<sp/>sounds<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="354"><highlight class="comment"><sp/>*<sp/>NOTE:<sp/>be<sp/>sure<sp/>to<sp/>protect<sp/>the<sp/>result<sp/>from<sp/>gc!</highlight></codeline>
<codeline lineno="355"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356" refid="sound_8c_1a4729b4ebf62b73399aa5a0ed49f7c833" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="sound_8c_1a4729b4ebf62b73399aa5a0ed49f7c833" kindref="member">sound_array_copy</ref>(<ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="lib-src_2libscorealign_2main_8cpp_1a1aa9083626d69f94349750d974f0359a" kindref="member">sa</ref>)</highlight></codeline>
<codeline lineno="357"><highlight class="normal">{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/><ref refid="xldmem_8h_1ac8d23305da5cbfcbe968123eec4faa2e" kindref="member">getsize</ref>(sa);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>new_sa<sp/>=<sp/><ref refid="xldmem_8c_1aff7eb5a000567061935089b85eaa3c1a" kindref="member">newvector</ref>(i);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1aca97fe39ef9ee285c1bac237226a7cef" kindref="member">xlprot1</ref>(new_sa);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i--;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xldmem_8h_1a14c2a197abaade2dfe3bd8ec204530ef" kindref="member">setelement</ref>(new_sa,<sp/>i,<sp/></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sound_8c_1a6ff362fbe32a9dfef6c14f1adc52f3b7" kindref="member">cvsound</ref>(<ref refid="sound_8c_1ad56b2f689f0d4897c4d2c79356d6102d" kindref="member">sound_copy</ref>(<ref refid="sound_8h_1aa309e04f7a0ff565a69f56d34fd6f899" kindref="member">getsound</ref>(<ref refid="xldmem_8h_1a4eddccdfe02ec05157ff7e416a28420c" kindref="member">getelement</ref>(sa,<sp/>i)))));</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a8069423ebe9363c35a5801edda92de02" kindref="member">xlpop</ref>();</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>new_sa;</highlight></codeline>
<codeline lineno="370"><highlight class="normal">}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>sound_copy<sp/>-<sp/>copy<sp/>a<sp/>sound<sp/>structure,<sp/>do<sp/>reference<sp/>counts<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight></codeline>
<codeline lineno="375" refid="sound_8h_1ad56b2f689f0d4897c4d2c79356d6102d" refkind="member"><highlight class="normal"><ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/><ref refid="sound_8c_1ad56b2f689f0d4897c4d2c79356d6102d" kindref="member">sound_copy</ref>(<ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/>snd)</highlight></codeline>
<codeline lineno="376"><highlight class="normal">{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/>sndcopy;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="falloc_8h_1aaf3a35c6f02abdd92c00c10e5e798899" kindref="member">falloc_sound</ref>(sndcopy,<sp/></highlight><highlight class="stringliteral">&quot;sound_copy&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>*sndcopy<sp/>=<sp/>*snd;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>the<sp/>whole<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>sndcopy-&gt;<ref refid="structsound__struct_1a932aa99e359ac71885ffa3426b2353cf" kindref="member">extra</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/></highlight><highlight class="comment">/*<sp/>except<sp/>for<sp/>the<sp/>(private)<sp/>extra<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sound_8c_1ae9bef88dd5f52e534fad5566dc203e50" kindref="member">snd_list_ref</ref>(snd-&gt;<ref refid="structsound__struct_1abe0c2ecf4e89d7d8e679adb01442fd60" kindref="member">list</ref>);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>copied<sp/>a<sp/>reference<sp/>so<sp/>fix<sp/>the<sp/>count<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>nyquist_printf(&quot;sound_copy&apos;d<sp/>%p<sp/>to<sp/>%p\n&quot;,<sp/>snd,<sp/>sndcopy);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(snd-&gt;<ref refid="structsound__struct_1a2f2f797cf14f3038124f9db72182452e" kindref="member">table</ref>)<sp/>snd-&gt;<ref refid="structsound__struct_1a2f2f797cf14f3038124f9db72182452e" kindref="member">table</ref>-&gt;<ref refid="structtable__struct_1a492ae650461bb95519dbdf8a968e08f7" kindref="member">refcount</ref>++;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>GC_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sndcopy<sp/>==<sp/>sound_to_watch)<sp/></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;sndcopy-&gt;table<sp/>%x\n&quot;</highlight><highlight class="normal">,<sp/>sndcopy-&gt;<ref refid="structsound__struct_1a2f2f797cf14f3038124f9db72182452e" kindref="member">table</ref>);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sndcopy;</highlight></codeline>
<codeline lineno="389"><highlight class="normal">}</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>convert<sp/>a<sp/>sound<sp/>to<sp/>a<sp/>wavetable,<sp/>set<sp/>length<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394" refid="sound_8h_1a4eb4d75cb8c657caa35914cafade6020" refkind="member"><highlight class="normal"><ref refid="structtable__struct" kindref="compound">table_type</ref><sp/><ref refid="sound_8c_1a4eb4d75cb8c657caa35914cafade6020" kindref="member">sound_to_table</ref>(<ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>)</highlight></codeline>
<codeline lineno="395"><highlight class="normal">{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref><sp/>=<sp/><ref refid="samples_8c_1a0edb76ba3ced0811ae893a8898e3842b" kindref="member">snd_length</ref>(s,<sp/><ref refid="sound_8h_1a780557422820415c974a23d862a97d84" kindref="member">max_table_len</ref>);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>tx<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>table<sp/>index<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>blocklen;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scale_factor<sp/>=<sp/>s-&gt;<ref refid="structsound__struct_1a7531e5d5bc141fa994e5d787bb2dea01" kindref="member">scale</ref>;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/>original_s<sp/>=<sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structtable__struct" kindref="compound">table_type</ref><sp/>table;<sp/></highlight><highlight class="comment">/*<sp/>the<sp/>new<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>table_bytes;<sp/></highlight><highlight class="comment">/*<sp/>how<sp/>big<sp/>is<sp/>the<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;<ref refid="structsound__struct_1a2f2f797cf14f3038124f9db72182452e" kindref="member">table</ref>)<sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s-&gt;<ref refid="structsound__struct_1a2f2f797cf14f3038124f9db72182452e" kindref="member">table</ref>-&gt;<ref refid="structtable__struct_1a492ae650461bb95519dbdf8a968e08f7" kindref="member">refcount</ref>++;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s-&gt;<ref refid="structsound__struct_1a2f2f797cf14f3038124f9db72182452e" kindref="member">table</ref>;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&gt;=<sp/><ref refid="sound_8h_1a780557422820415c974a23d862a97d84" kindref="member">max_table_len</ref>)<sp/>{</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>emsg[100];</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(emsg,<sp/></highlight><highlight class="stringliteral">&quot;maximum<sp/>table<sp/>size<sp/>(%d)<sp/>exceeded&quot;</highlight><highlight class="normal">,<sp/><ref refid="sound_8h_1a780557422820415c974a23d862a97d84" kindref="member">max_table_len</ref>);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xldbug_8c_1a8cb31d28c2a358aaaa88e0f47eb38e48" kindref="member">xlcerror</ref>(</highlight><highlight class="stringliteral">&quot;use<sp/>truncated<sp/>sound<sp/>for<sp/>table&quot;</highlight><highlight class="normal">,<sp/>emsg,<sp/><ref refid="macaboutbox_8c_1a263efce0e5cda1d387a1a43f94715445" kindref="member">NIL</ref>);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_mac_a_e_8c_1abd437fd481d46806b84e0d172a0f1437" kindref="member">xlabort</ref>(</highlight><highlight class="stringliteral">&quot;table<sp/>size<sp/>must<sp/>be<sp/>greater<sp/>than<sp/>0&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/>len++;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>allocate<sp/>extra<sp/>sample<sp/>at<sp/>end<sp/>of<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>=<sp/><ref refid="sound_8c_1ad56b2f689f0d4897c4d2c79356d6102d" kindref="member">sound_copy</ref>(s);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>nyquist_printf(&quot;sound_to_table:<sp/>allocating<sp/>table<sp/>of<sp/>size<sp/>%d\n&quot;,<sp/>len);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>table_bytes<sp/>=<sp/><ref refid="sound_8h_1ae868fc15c26273ad5a8055f27c1b609e" kindref="member">table_size_in_bytes</ref>(len);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>table<sp/>=<sp/>(<ref refid="sound_8h_1a187b856587310160cfd8b383e7377171" kindref="member">table_type</ref>)<sp/>malloc(table_bytes);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!table)<sp/><ref refid="xldbug_8c_1aaebeabdcebf1b39c984723f1727ddeed" kindref="member">xlfail</ref>(</highlight><highlight class="stringliteral">&quot;osc_init<sp/>couldn&apos;t<sp/>allocate<sp/>memory<sp/>for<sp/>table&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sound_8c_1abc3f08f3e973edf3f1d9a4d2f5173e16" kindref="member">table_memory</ref><sp/>+=<sp/>table_bytes;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>table-&gt;<ref refid="structtable__struct_1a11559931dbab7189ae415a901b7d2341" kindref="member">length</ref><sp/>=<sp/>(double)<sp/>(len<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(len<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsample__block__node" kindref="compound">sample_block_type</ref><sp/>sampblock<sp/>=<sp/><ref refid="sound_8h_1ad30a7d8107577d30a6ecbfc322f2220c" kindref="member">sound_get_next</ref>(s,<sp/>&amp;blocklen);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>togo<sp/>=<sp/><ref refid="libflac_2src_2lib_f_l_a_c_2include_2private_2macros_8h_1a74e75242132eaabbc1c512488a135926" kindref="member">MIN</ref>(blocklen,<sp/>len);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sound_8h_1a83d17f7b465d1591f27cd28fc5eb8a03" kindref="member">sample_block_values_type</ref><sp/>sbufp<sp/>=<sp/>sampblock-&gt;<ref refid="structsample__block__node_1a921e4cd2359010f8ed736a116da8867e" kindref="member">samples</ref>;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/>nyquist_printf(&quot;in<sp/>sound_to_table,<sp/>sampblock<sp/>=<sp/>%d\n&quot;,<sp/>sampblock);*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>togo;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table-&gt;<ref refid="structtable__struct_1af21c66b00f0ce30f3f0b0c7d2405c988" kindref="member">samples</ref>[tx++]<sp/>=<sp/>(float)<sp/>(*sbufp++<sp/>*<sp/>scale_factor);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>-=<sp/>togo;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>interpolation,<sp/>duplicate<sp/>first<sp/>sample<sp/>at<sp/>end<sp/>of<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>table-&gt;<ref refid="structtable__struct_1af21c66b00f0ce30f3f0b0c7d2405c988" kindref="member">samples</ref>[tx]<sp/>=<sp/>table-&gt;<ref refid="structtable__struct_1af21c66b00f0ce30f3f0b0c7d2405c988" kindref="member">samples</ref>[0];</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>table-&gt;<ref refid="structtable__struct_1a492ae650461bb95519dbdf8a968e08f7" kindref="member">refcount</ref><sp/>=<sp/>2;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>one<sp/>for<sp/>the<sp/>user,<sp/>one<sp/>from<sp/>original_s<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sound_8c_1a6160c7ed8621e6ca60d9c0875cd25f9f" kindref="member">sound_unref</ref>(s);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/>original_s-&gt;<ref refid="structsound__struct_1a2f2f797cf14f3038124f9db72182452e" kindref="member">table</ref><sp/>=<sp/>table;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>table;</highlight></codeline>
<codeline lineno="448"><highlight class="normal">}</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451" refid="sound_8c_1a7293d530c4a016760ee147f20838c6c1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sound_8c_1a7293d530c4a016760ee147f20838c6c1" kindref="member">table_free</ref>(<ref refid="structtable__struct" kindref="compound">table_type</ref><sp/>table)</highlight></codeline>
<codeline lineno="452"><highlight class="normal">{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref><sp/>=<sp/>(long)<sp/>(table-&gt;<ref refid="structtable__struct_1a11559931dbab7189ae415a901b7d2341" kindref="member">length</ref>)<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>bytes<sp/>=<sp/><ref refid="sound_8h_1ae868fc15c26273ad5a8055f27c1b609e" kindref="member">table_size_in_bytes</ref>(len);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>free(table);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sound_8c_1abc3f08f3e973edf3f1d9a4d2f5173e16" kindref="member">table_memory</ref><sp/>-=<sp/>bytes;</highlight></codeline>
<codeline lineno="457"><highlight class="normal">}</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460" refid="sound_8h_1a841b19f08a0ab27a514b66af9244a1fe" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sound_8c_1a841b19f08a0ab27a514b66af9244a1fe" kindref="member">table_unref</ref>(<ref refid="structtable__struct" kindref="compound">table_type</ref><sp/>table)</highlight></codeline>
<codeline lineno="461"><highlight class="normal">{</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!table)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/>table-&gt;<ref refid="structtable__struct_1a492ae650461bb95519dbdf8a968e08f7" kindref="member">refcount</ref>--;</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(table-&gt;<ref refid="structtable__struct_1a492ae650461bb95519dbdf8a968e08f7" kindref="member">refcount</ref><sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>nyquist_printf(&quot;table<sp/>refcount<sp/>went<sp/>to<sp/>zero\n&quot;);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sound_8c_1a7293d530c4a016760ee147f20838c6c1" kindref="member">table_free</ref>(table);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="468"><highlight class="normal">}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471" refid="sound_8h_1a6160c7ed8621e6ca60d9c0875cd25f9f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sound_8c_1a6160c7ed8621e6ca60d9c0875cd25f9f" kindref="member">sound_unref</ref>(<ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/>snd)</highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>note<sp/>that<sp/>sounds<sp/>do<sp/>not<sp/>have<sp/>ref<sp/>counts,<sp/>so<sp/>sound_unref</highlight></codeline>
<codeline lineno="473"><highlight class="comment"><sp/>*<sp/>always<sp/>frees<sp/>the<sp/>sound<sp/>object</highlight></codeline>
<codeline lineno="474"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal">{</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!snd)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sound_8c_1aad7d8d5bb2bb14c5ba0c435f4ea20ebb" kindref="member">snd_list_unref</ref>(snd-&gt;<ref refid="structsound__struct_1abe0c2ecf4e89d7d8e679adb01442fd60" kindref="member">list</ref>);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sound_8c_1a841b19f08a0ab27a514b66af9244a1fe" kindref="member">table_unref</ref>(snd-&gt;<ref refid="structsound__struct_1a2f2f797cf14f3038124f9db72182452e" kindref="member">table</ref>);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>nyquist_printf(&quot;\t\t\t\t\tfreeing<sp/>sound@%p\n&quot;,<sp/>snd);*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(snd-&gt;<ref refid="structsound__struct_1a932aa99e359ac71885ffa3426b2353cf" kindref="member">extra</ref>)<sp/>free(snd-&gt;<ref refid="structsound__struct_1a932aa99e359ac71885ffa3426b2353cf" kindref="member">extra</ref>);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="falloc_8h_1ae3d687a7449e35331f2ee2fc1a58a62f" kindref="member">ffree_sound</ref>(snd,<sp/></highlight><highlight class="stringliteral">&quot;sound_unref&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="482"><highlight class="normal">}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485" refid="sound_8h_1ae9bef88dd5f52e534fad5566dc203e50" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sound_8c_1ae9bef88dd5f52e534fad5566dc203e50" kindref="member">snd_list_ref</ref>(<ref refid="structsnd__list__struct" kindref="compound">snd_list_type</ref><sp/>list)</highlight></codeline>
<codeline lineno="486"><highlight class="normal">{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>list-&gt;<ref refid="structsnd__list__struct_1a27044dc0ac840d508156da70b7b8eec5" kindref="member">refcnt</ref>++;</highlight></codeline>
<codeline lineno="488"><highlight class="normal">}</highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491" refid="sound_8h_1a64f075d27a7672293c0c8d657aa51647" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sound_8c_1a64f075d27a7672293c0c8d657aa51647" kindref="member">snd_list_terminate</ref>(snd_list)</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><ref refid="structsnd__list__struct" kindref="compound">snd_list_type</ref><sp/>snd_list;</highlight></codeline>
<codeline lineno="493"><highlight class="normal">{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsnd__susp__struct" kindref="compound">snd_susp_type</ref><sp/>susp<sp/>=<sp/>snd_list-&gt;u.next-&gt;u.susp;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>lsc<sp/>=<sp/>susp-&gt;<ref refid="structsnd__susp__struct_1a8044ae9d2cfcbccffd2a60c9b6ce16fa" kindref="member">log_stop_cnt</ref>;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>current<sp/>=<sp/>susp-&gt;<ref refid="structsnd__susp__struct_1a8f9e3b02c2fc0ccbb63d88b97d44c89c" kindref="member">current</ref>;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>unreference<sp/>the<sp/>empty<sp/>sample<sp/>block<sp/>that<sp/>was<sp/>allocated:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sound_8c_1aaf3eda27f937fb462aac04ef96afcafa" kindref="member">sample_block_unref</ref>(snd_list-&gt;block);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>use<sp/>zero_block<sp/>instead<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_list-&gt;block<sp/>=<sp/><ref refid="sound_8c_1a5917e1ea52952f15fd755fa27432113b" kindref="member">zero_block</ref>;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>either<sp/>fetch<sp/>more<sp/>zeros<sp/>or<sp/>terminate<sp/>now<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lsc<sp/>!=<sp/><ref refid="sound_8h_1ac1ae4add974b9cfc6b5aaf8a578f01ab" kindref="member">UNKNOWN</ref><sp/>&amp;&amp;<sp/>lsc<sp/>&gt;<sp/>current)<sp/>{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>nyquist_printf(&quot;snd_list_terminate:<sp/>lsc<sp/>%d<sp/>current<sp/>%d\n&quot;,<sp/></highlight></codeline>
<codeline lineno="504"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lsc,<sp/>current);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structsnd__susp__struct_1addb182d5c03b9b8f864e4fd9871f7722" kindref="member">fetch</ref><sp/>=<sp/><ref refid="sound_8c_1ada0cc0a7b7657269937860bd7eeb6f73" kindref="member">fetch_zeros</ref>;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sound_8c_1ada0cc0a7b7657269937860bd7eeb6f73" kindref="member">fetch_zeros</ref>(susp,<sp/>snd_list);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd_list-&gt;block_len<sp/>=<sp/><ref refid="sound_8h_1a3871670a207dd661a524b1328410fb0c" kindref="member">max_sample_block_len</ref>;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd_list-&gt;logically_stopped<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sound_8c_1aad7d8d5bb2bb14c5ba0c435f4ea20ebb" kindref="member">snd_list_unref</ref>(snd_list-&gt;u.next);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd_list-&gt;u.next<sp/>=<sp/><ref refid="sound_8c_1aa08a9bd03e22919769a8f33094756c97" kindref="member">zero_snd_list</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>be<sp/>zero<sp/>forever<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="513"><highlight class="normal">}</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight></codeline>
<codeline lineno="516" refid="sound_8h_1aad7d8d5bb2bb14c5ba0c435f4ea20ebb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sound_8c_1aad7d8d5bb2bb14c5ba0c435f4ea20ebb" kindref="member">snd_list_unref</ref>(<ref refid="structsnd__list__struct" kindref="compound">snd_list_type</ref><sp/>list)</highlight></codeline>
<codeline lineno="517"><highlight class="normal">{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref><sp/>(*freefunc)();</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(list<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||<sp/>list<sp/>==<sp/>zero_snd_list)<sp/>{</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(list<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unix_2switches_8h_1a3d365a416f619366e3a28a11b450739d" kindref="member">nyquist_printf</ref>(</highlight><highlight class="stringliteral">&quot;why<sp/>did<sp/>snd_list_unref<sp/>get<sp/>%p?\n&quot;</highlight><highlight class="normal">,<sp/>list);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/>list-&gt;<ref refid="structsnd__list__struct_1a27044dc0ac840d508156da70b7b8eec5" kindref="member">refcnt</ref>--;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>nyquist_printf(&quot;snd_list_unref<sp/>&quot;);<sp/>print_snd_list_type(list);<sp/>stdputstr(&quot;\n&quot;);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(list-&gt;<ref refid="structsnd__list__struct_1a27044dc0ac840d508156da70b7b8eec5" kindref="member">refcnt</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(list-&gt;<ref refid="structsnd__list__struct_1aaf6e754e36ceada326133f729fc4462c" kindref="member">block</ref><sp/>&amp;&amp;<sp/>list-&gt;<ref refid="structsnd__list__struct_1aaf6e754e36ceada326133f729fc4462c" kindref="member">block</ref><sp/>!=<sp/>zero_block)<sp/>{</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>there<sp/>is<sp/>a<sp/>next<sp/>snd_list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stdputstr(&quot;[&quot;);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sound_8c_1aaf3eda27f937fb462aac04ef96afcafa" kindref="member">sample_block_unref</ref>(list-&gt;<ref refid="structsnd__list__struct_1aaf6e754e36ceada326133f729fc4462c" kindref="member">block</ref>);</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stdputstr(&quot;]&quot;);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sound_8c_1aad7d8d5bb2bb14c5ba0c435f4ea20ebb" kindref="member">snd_list_unref</ref>(list-&gt;<ref refid="structsnd__list__struct_1a7eb4e39c02b1fa81d1000b204f888777" kindref="member">u</ref>.<ref refid="structsnd__list__struct_1a3a9e571a923a7496eabe0d721e497fbf" kindref="member">next</ref>);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(list-&gt;<ref refid="structsnd__list__struct_1aaf6e754e36ceada326133f729fc4462c" kindref="member">block</ref><sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>the<sp/>next<sp/>thing<sp/>is<sp/>the<sp/>susp<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>free<sp/>suspension<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>nyquist_printf(&quot;freeing<sp/>susp@%p\n&quot;,<sp/>list-&gt;u.susp);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>freefunc<sp/>=<sp/>list-&gt;<ref refid="structsnd__list__struct_1a7eb4e39c02b1fa81d1000b204f888777" kindref="member">u</ref>.<ref refid="structsnd__list__struct_1a57f7d6b31a871ee6d94757b409f636ee" kindref="member">susp</ref>-&gt;<ref refid="structsnd__susp__struct_1a39cc18ad890efb4f088c9d7636e3b5c0" kindref="member">free</ref>;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*freefunc)(list-&gt;<ref refid="structsnd__list__struct_1a7eb4e39c02b1fa81d1000b204f888777" kindref="member">u</ref>.<ref refid="structsnd__list__struct_1a57f7d6b31a871ee6d94757b409f636ee" kindref="member">susp</ref>);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>nyquist_printf(&quot;freeing<sp/>snd_list@%p\n&quot;,<sp/>list);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//DBY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(list<sp/>==<sp/>list_watch)<sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref>(</highlight><highlight class="stringliteral">&quot;freeing<sp/>watched<sp/>snd_list<sp/>%p\n&quot;</highlight><highlight class="normal">,<sp/>list);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//DBY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="falloc_8h_1a794da1cd6568e8738bc0d988adf38b6e" kindref="member">ffree_snd_list</ref>(list,<sp/></highlight><highlight class="stringliteral">&quot;snd_list_unref&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="547"><highlight class="normal">}</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550" refid="sound_8c_1ab93181b97757bda75bf60713d78de728" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sound_8c_1ab93181b97757bda75bf60713d78de728" kindref="member">sample_block_ref</ref>(<ref refid="structsample__block__node" kindref="compound">sample_block_type</ref><sp/>sam)</highlight></codeline>
<codeline lineno="551"><highlight class="normal">{</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/>sam-&gt;<ref refid="structsample__block__node_1aa59f54edaee6c4ab12b5e9eeca2d7699" kindref="member">refcnt</ref>++;</highlight></codeline>
<codeline lineno="553"><highlight class="normal">}</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556" refid="sound_8c_1a4e9e9f1d6511386ac6ab3c5ef30688d7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sound_8c_1a4e9e9f1d6511386ac6ab3c5ef30688d7" kindref="member">sample_block_test</ref>(<ref refid="structsample__block__node" kindref="compound">sample_block_type</ref><sp/>sam,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>)</highlight></codeline>
<codeline lineno="557"><highlight class="normal">{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>see<sp/>if<sp/>this<sp/>block<sp/>is<sp/>being<sp/>watched<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="sound_8c_1ac26512fa40eb2c631ecefdab06543616" kindref="member">blocks_to_watch_len</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((sam<sp/>&gt;<sp/>(blocks_to_watch[i]<sp/>-<sp/>1))<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(sam<sp/>&lt;<sp/>(blocks_to_watch[i]<sp/>+<sp/>1)))<sp/>{</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unix_2switches_8h_1a3d365a416f619366e3a28a11b450739d" kindref="member">nyquist_printf</ref>(</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;WOOPS!<sp/>%s(0x%p)<sp/>refers<sp/>to<sp/>a<sp/>block<sp/>0x%p<sp/>on<sp/>the<sp/>watch<sp/>list!\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s,<sp/>sam,<sp/>blocks_to_watch[i]);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="568"><highlight class="normal">}</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571" refid="sound_8c_1aaf3eda27f937fb462aac04ef96afcafa" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sound_8c_1aaf3eda27f937fb462aac04ef96afcafa" kindref="member">sample_block_unref</ref>(<ref refid="structsample__block__node" kindref="compound">sample_block_type</ref><sp/>sam)</highlight></codeline>
<codeline lineno="572"><highlight class="normal">{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>sam-&gt;<ref refid="structsample__block__node_1aa59f54edaee6c4ab12b5e9eeca2d7699" kindref="member">refcnt</ref>--;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sam-&gt;<ref refid="structsample__block__node_1aa59f54edaee6c4ab12b5e9eeca2d7699" kindref="member">refcnt</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>GCBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sound_8c_1a4e9e9f1d6511386ac6ab3c5ef30688d7" kindref="member">sample_block_test</ref>(sam,<sp/></highlight><highlight class="stringliteral">&quot;sample_block_unref&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/>nyquist_printf(&quot;freeing<sp/>sample<sp/>block<sp/>%p\n&quot;,<sp/>sam);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="falloc_8h_1a4d9aacbd9b154378f51f57e3459a04b1" kindref="member">ffree_sample_block</ref>(sam,<sp/></highlight><highlight class="stringliteral">&quot;sample_block_unref&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="581"><highlight class="normal">}</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight><highlight class="comment">/****************************************************************************</highlight></codeline>
<codeline lineno="586"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>interp_style</highlight></codeline>
<codeline lineno="587"><highlight class="comment">*<sp/>Inputs:</highlight></codeline>
<codeline lineno="588"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>sound_type<sp/>s:<sp/>The<sp/>sound<sp/>we<sp/>are<sp/>using</highlight></codeline>
<codeline lineno="589"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>rate_type<sp/>sr:<sp/>The<sp/>sampling<sp/>rate</highlight></codeline>
<codeline lineno="590"><highlight class="comment">*<sp/>Result:<sp/>int</highlight></codeline>
<codeline lineno="591"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>small<sp/>integer<sp/>which<sp/>is<sp/>one<sp/>of<sp/>the<sp/>symbolic<sp/>values:</highlight></codeline>
<codeline lineno="592"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>values<sp/>are<sp/>ordered,<sp/>smallest<sp/>to<sp/>largest,<sp/>as</highlight></codeline>
<codeline lineno="593"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INTERP_n<sp/>-<sp/>none</highlight></codeline>
<codeline lineno="594"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INTERP_s<sp/>-<sp/>scale</highlight></codeline>
<codeline lineno="595"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INTERP_i<sp/>-<sp/>interpolated</highlight></codeline>
<codeline lineno="596"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INTERP_r<sp/>-<sp/>ramp</highlight></codeline>
<codeline lineno="597"><highlight class="comment">*</highlight></codeline>
<codeline lineno="598"><highlight class="comment">*<sp/>Notes:<sp/></highlight></codeline>
<codeline lineno="599"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>sampling<sp/>rate<sp/>s-&gt;sr<sp/>and<sp/>scale<sp/>factor<sp/>s-&gt;scale<sp/>are<sp/>compared</highlight></codeline>
<codeline lineno="600"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>with<sp/>other<sp/>values<sp/>exactly<sp/>(no<sp/>fuzz).<sp/><sp/></highlight></codeline>
<codeline lineno="601"><highlight class="comment">****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603" refid="sound_8h_1abf6be522334f610871aeb5c61583739f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="sound_8c_1abf6be522334f610871aeb5c61583739f" kindref="member">interp_style</ref>(<ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>,<sp/><ref refid="sound_8h_1a80a6a98ce803ce7a00e744aa2103f9a1" kindref="member">rate_type</ref><sp/>sr)</highlight></codeline>
<codeline lineno="604"><highlight class="normal">{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;<ref refid="structsound__struct_1aafecd01e13520f7fb83fe8e2ac2cd026" kindref="member">sr</ref><sp/>==<sp/>sr)<sp/></highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>same<sp/>sample<sp/>rate<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((s-&gt;<ref refid="structsound__struct_1a7531e5d5bc141fa994e5d787bb2dea01" kindref="member">scale</ref><sp/>==<sp/>1.0)<sp/>?<sp/><ref refid="sound_8h_1aab32a9166170ee04f8d2b6f5784c99e9" kindref="member">INTERP_n</ref><sp/>:<sp/><ref refid="sound_8h_1ad20e50ae4f918538ebdcdf39f5974d1e" kindref="member">INTERP_s</ref>);</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>same<sp/>sample<sp/>rate<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;<ref refid="structsound__struct_1aafecd01e13520f7fb83fe8e2ac2cd026" kindref="member">sr</ref><sp/>*<sp/>10.0<sp/>&gt;<sp/>sr)<sp/></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>10x<sp/>sample<sp/>rate<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="sound_8h_1a09f8f2dbad800ec9232496d2506ae9d1" kindref="member">INTERP_i</ref>;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>10x<sp/>sample<sp/>rate<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="sound_8h_1a8d87c76a55724d04653928f9de296b7d" kindref="member">INTERP_r</ref>;</highlight></codeline>
<codeline lineno="616"><highlight class="normal">}</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight><highlight class="comment">/****************************************************************************</highlight></codeline>
<codeline lineno="620"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd_sort_2</highlight></codeline>
<codeline lineno="621"><highlight class="comment">*<sp/>Inputs:</highlight></codeline>
<codeline lineno="622"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>sound_type<sp/>*<sp/>s1_ptr:</highlight></codeline>
<codeline lineno="623"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>sound_type<sp/>*<sp/>s2_ptr:</highlight></codeline>
<codeline lineno="624"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>rate_type<sp/>sr:</highlight></codeline>
<codeline lineno="625"><highlight class="comment">*<sp/>Result:<sp/>void</highlight></codeline>
<codeline lineno="626"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="627"><highlight class="comment">*<sp/>Effect:<sp/></highlight></codeline>
<codeline lineno="628"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>If<sp/>the<sp/>interp_style<sp/>of<sp/>s1<sp/>dominates<sp/>the<sp/>interp_style<sp/>of<sp/>s2,</highlight></codeline>
<codeline lineno="629"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>sound_types<sp/>input<sp/>are<sp/>interchanged.</highlight></codeline>
<codeline lineno="630"><highlight class="comment">****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>snd_sort_2<sp/>--<sp/>sort<sp/>2<sp/>arguments<sp/>by<sp/>interpolation<sp/>method<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633" refid="sound_8h_1a195d558ede8ba8ff5e83731fae551e86" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sound_8c_1a195d558ede8ba8ff5e83731fae551e86" kindref="member">snd_sort_2</ref>(<ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/>*s1_ptr,<sp/><ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/>*s2_ptr,<sp/><ref refid="sound_8h_1a80a6a98ce803ce7a00e744aa2103f9a1" kindref="member">rate_type</ref><sp/>sr)</highlight></codeline>
<codeline lineno="634"><highlight class="normal">{</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="sound_8c_1abf6be522334f610871aeb5c61583739f" kindref="member">interp_style</ref>(*s1_ptr,<sp/>sr)<sp/>&gt;<sp/><ref refid="sound_8c_1abf6be522334f610871aeb5c61583739f" kindref="member">interp_style</ref>(*s2_ptr,<sp/>sr))<sp/>{</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref><sp/>=<sp/>*s1_ptr;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*s1_ptr<sp/>=<sp/>*s2_ptr;</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*s2_ptr<sp/>=<sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="640"><highlight class="normal">}</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>snd_sref<sp/>--<sp/>access<sp/>a<sp/>sound<sp/>at<sp/>a<sp/>given<sp/>time<sp/>point<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645" refid="sound_8h_1a3dee98e52b0f96799bad3d56bd8506f6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="sound_8c_1a3dee98e52b0f96799bad3d56bd8506f6" kindref="member">snd_sref</ref>(<ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>,<sp/><ref refid="midifns_8h_1a3f787491db5dbc75c21b27d54e9ebae6" kindref="member">time_type</ref><sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>)</highlight></codeline>
<codeline lineno="646"><highlight class="normal">{</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>exact_cnt;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>how<sp/>many<sp/>fractional<sp/>samples<sp/>to<sp/>scan<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cnt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>how<sp/>many<sp/>samples<sp/>to<sp/>flush<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsample__block__node" kindref="compound">sample_block_type</ref><sp/>sampblock<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>blocklen;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sound_8h_1a3a9d1d4a1c153390d2401a6e9f71b32c" kindref="member">sample_type</ref><sp/>x1,<sp/>x2;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>interpolate<sp/>between<sp/>these<sp/>samples<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>changed<sp/>true_t0<sp/>to<sp/>just<sp/>t0<sp/>based<sp/>on<sp/>comment<sp/>that<sp/>true_t0<sp/>is<sp/>only</highlight></codeline>
<codeline lineno="654"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>for<sp/>use<sp/>by<sp/>snd_prepend_zeros<sp/>-RBD</highlight></codeline>
<codeline lineno="655"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/>exact_cnt<sp/>=<sp/>(t<sp/>-<sp/>s-&gt;<ref refid="structsound__struct_1a397d52ba2da4602200e85f49f62f28ea" kindref="member">t0</ref>)<sp/>*<sp/>s-&gt;<ref refid="structsound__struct_1aafecd01e13520f7fb83fe8e2ac2cd026" kindref="member">sr</ref>;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="winfun_8c_1ab24f32995c1d94525943b4568cce20cb" kindref="member">if</ref><sp/>(exact_cnt<sp/>&lt;<sp/>0.0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>=<sp/><ref refid="sound_8c_1ad56b2f689f0d4897c4d2c79356d6102d" kindref="member">sound_copy</ref>(s);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>don&apos;t<sp/>modify<sp/>s,<sp/>create<sp/>new<sp/>reader<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/>cnt<sp/>=<sp/>(long)<sp/>exact_cnt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>rounds<sp/>down<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/>exact_cnt<sp/>-=<sp/>cnt;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>remember<sp/>fractional<sp/>remainder<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>now<sp/>flush<sp/>cnt<sp/>samples<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(cnt<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sampblock<sp/>=<sp/><ref refid="sound_8h_1ad30a7d8107577d30a6ecbfc322f2220c" kindref="member">sound_get_next</ref>(s,<sp/>&amp;blocklen);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cnt<sp/>-=<sp/>blocklen;</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sampblock<sp/>==<sp/>zero_block)<sp/>{</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sound_8c_1a6160c7ed8621e6ca60d9c0875cd25f9f" kindref="member">sound_unref</ref>(s);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>-blocklen<sp/>&lt;=<sp/>cnt<sp/>&lt;=<sp/>-1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>next<sp/>2<sp/>samples<sp/>and<sp/>interpolate<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/>x1<sp/>=<sp/>sampblock-&gt;<ref refid="structsample__block__node_1a921e4cd2359010f8ed736a116da8867e" kindref="member">samples</ref>[blocklen<sp/>+<sp/>cnt];</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cnt<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sampblock<sp/>=<sp/><ref refid="sound_8h_1ad30a7d8107577d30a6ecbfc322f2220c" kindref="member">sound_get_next</ref>(s,<sp/>&amp;blocklen);</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cnt<sp/>-=<sp/>blocklen;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/>x2<sp/>=<sp/>sampblock-&gt;<ref refid="structsample__block__node_1a921e4cd2359010f8ed736a116da8867e" kindref="member">samples</ref>[blocklen<sp/>+<sp/>cnt<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sound_8c_1a6160c7ed8621e6ca60d9c0875cd25f9f" kindref="member">sound_unref</ref>(s);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>free<sp/>the<sp/>reader<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(x1<sp/>+<sp/>exact_cnt<sp/>*<sp/>(x2<sp/>-<sp/>x1))<sp/>*<sp/>s-&gt;<ref refid="structsound__struct_1a7531e5d5bc141fa994e5d787bb2dea01" kindref="member">scale</ref>;</highlight></codeline>
<codeline lineno="684"><highlight class="normal">}</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>snd_sref_inverse<sp/>--<sp/>find<sp/>time<sp/>point<sp/>corresponding<sp/>to<sp/>some<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="689" refid="sound_8h_1acf80400a1e566e4f89061c18d14088b0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="sound_8c_1acf80400a1e566e4f89061c18d14088b0" kindref="member">snd_sref_inverse</ref>(<ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val)</highlight></codeline>
<codeline lineno="690"><highlight class="normal">{</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>exact_cnt;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>how<sp/>many<sp/>fractional<sp/>samples<sp/>to<sp/>scan<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsample__block__node" kindref="compound">sample_block_type</ref><sp/>sampblock;</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>blocklen;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sound_8h_1a3a9d1d4a1c153390d2401a6e9f71b32c" kindref="member">sample_type</ref><sp/>x1,<sp/>x2;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>interpolate<sp/>between<sp/>these<sp/>samples<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xldbug_8c_1a8cb31d28c2a358aaaa88e0f47eb38e48" kindref="member">xlcerror</ref>(</highlight><highlight class="stringliteral">&quot;return<sp/>0&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;negative<sp/>value&quot;</highlight><highlight class="normal">,<sp/><ref refid="xldmem_8c_1a136914cbe882831bbdd74a24b58c4759" kindref="member">cvflonum</ref>(val));</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>=<sp/><ref refid="sound_8c_1ad56b2f689f0d4897c4d2c79356d6102d" kindref="member">sound_copy</ref>(s);<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>don&apos;t<sp/>modify<sp/>s,<sp/>create<sp/>new<sp/>reader<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/>x1<sp/>=<sp/>0.0F;</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>now<sp/>flush<sp/>cnt<sp/>samples<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sampblock<sp/>=<sp/><ref refid="sound_8h_1ad30a7d8107577d30a6ecbfc322f2220c" kindref="member">sound_get_next</ref>(s,<sp/>&amp;blocklen);</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x2<sp/>=<sp/>sampblock-&gt;<ref refid="structsample__block__node_1a921e4cd2359010f8ed736a116da8867e" kindref="member">samples</ref>[blocklen<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x2<sp/>&gt;=<sp/>val)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x1<sp/>=<sp/>x2;</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sampblock<sp/>==<sp/>zero_block)<sp/>{</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xldbug_8c_1a8cb31d28c2a358aaaa88e0f47eb38e48" kindref="member">xlcerror</ref>(</highlight><highlight class="stringliteral">&quot;return<sp/>0&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;too<sp/>large,<sp/>no<sp/>inverse&quot;</highlight><highlight class="normal">,<sp/><ref refid="xldmem_8c_1a136914cbe882831bbdd74a24b58c4759" kindref="member">cvflonum</ref>(val));</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sound_8c_1a6160c7ed8621e6ca60d9c0875cd25f9f" kindref="member">sound_unref</ref>(s);</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>x1<sp/>=<sp/>last<sp/>sample<sp/>of<sp/>previous<sp/>block,</highlight></codeline>
<codeline lineno="717"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sampblock<sp/>contains<sp/>a<sp/>value<sp/>larger<sp/>than<sp/>val</highlight></codeline>
<codeline lineno="718"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blocklen<sp/>is<sp/>the<sp/>length<sp/>of<sp/>sampblock<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>search<sp/>for<sp/>first<sp/>element<sp/>exceeding<sp/>val<sp/>-<sp/>could</highlight></codeline>
<codeline lineno="721"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>use<sp/>binary<sp/>search,<sp/>but<sp/>maximum<sp/>block<sp/>size<sp/>places</highlight></codeline>
<codeline lineno="722"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>an<sp/>upper<sp/>bound<sp/>on<sp/>how<sp/>bad<sp/>this<sp/>can<sp/>get<sp/>and<sp/>we</highlight></codeline>
<codeline lineno="723"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>search<sp/>for<sp/>the<sp/>right<sp/>block<sp/>linearly<sp/>anyway.</highlight></codeline>
<codeline lineno="724"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>blocklen<sp/>&amp;&amp;<sp/>sampblock-&gt;<ref refid="structsample__block__node_1a921e4cd2359010f8ed736a116da8867e" kindref="member">samples</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>&lt;=<sp/>val;<sp/>i++)<sp/>;</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>now<sp/>i<sp/>is<sp/>index<sp/>of<sp/>element<sp/>exceeding<sp/>val<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;<sp/>1)<sp/>x1<sp/>=<sp/>sampblock-&gt;<ref refid="structsample__block__node_1a921e4cd2359010f8ed736a116da8867e" kindref="member">samples</ref>[i<sp/>-<sp/>1];</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/>x2<sp/>=<sp/>sampblock-&gt;<ref refid="structsample__block__node_1a921e4cd2359010f8ed736a116da8867e" kindref="member">samples</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>now<sp/>interpolate<sp/>to<sp/>get<sp/>fractional<sp/>part<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x2<sp/>==<sp/>x1)<sp/>exact_cnt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>exact_cnt<sp/>=<sp/>(val<sp/>-<sp/>x1)<sp/>/<sp/>(x2<sp/>-<sp/>x1);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>and<sp/>add<sp/>the<sp/>sample<sp/>count<sp/>of<sp/>x1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/>exact_cnt<sp/>+=<sp/>(s-&gt;<ref refid="structsound__struct_1a36de08aa7f68cf01c3f197548bc3e00f" kindref="member">current</ref><sp/>-<sp/>blocklen)<sp/>+<sp/>(i<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>negative<sp/>counts<sp/>are<sp/>possible<sp/>because<sp/>the<sp/>first<sp/>x1<sp/>is<sp/>at</highlight></codeline>
<codeline lineno="739"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>sample<sp/>-1,<sp/>so<sp/>force<sp/>the<sp/>location<sp/>to<sp/>be<sp/>at<sp/>least<sp/>0</highlight></codeline>
<codeline lineno="740"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(exact_cnt<sp/>&lt;<sp/>0)<sp/>exact_cnt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>compute<sp/>time<sp/>=<sp/>t0<sp/>+<sp/>count<sp/>/<sp/>samplerate;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/>exact_cnt<sp/>=<sp/>s-&gt;<ref refid="structsound__struct_1a397d52ba2da4602200e85f49f62f28ea" kindref="member">t0</ref><sp/>+<sp/>exact_cnt<sp/>/<sp/>s-&gt;<ref refid="structsound__struct_1aafecd01e13520f7fb83fe8e2ac2cd026" kindref="member">sr</ref>;</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sound_8c_1a6160c7ed8621e6ca60d9c0875cd25f9f" kindref="member">sound_unref</ref>(s);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>free<sp/>the<sp/>reader<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>exact_cnt;</highlight></codeline>
<codeline lineno="748"><highlight class="normal">}</highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight></codeline>
<codeline lineno="751" refid="sound_8h_1ab55e52180944416905fc06a5cb3be9a2" refkind="member"><highlight class="normal"><ref refid="midifns_8h_1a3f787491db5dbc75c21b27d54e9ebae6" kindref="member">time_type</ref><sp/><ref refid="sound_8c_1a5f0c2eab45b410b58aac8c5cd07a4d80" kindref="member">snd_stop_time</ref>(<ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>)</highlight></codeline>
<codeline lineno="752"><highlight class="normal">{</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;<ref refid="structsound__struct_1a95baf30b19741f4b7115900fb648c716" kindref="member">stop</ref><sp/>==<sp/><ref refid="sound_8h_1ad1d0a187552467e9e920f964abcc2581" kindref="member">MAX_STOP</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="sound_8h_1a561d66c52198183cfacf79de5493ed5f" kindref="member">MAX_STOP_TIME</ref>;</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s-&gt;<ref refid="structsound__struct_1a397d52ba2da4602200e85f49f62f28ea" kindref="member">t0</ref><sp/>+<sp/>(s-&gt;<ref refid="structsound__struct_1a95baf30b19741f4b7115900fb648c716" kindref="member">stop</ref><sp/>+<sp/>0.5)<sp/>/<sp/>s-&gt;<ref refid="structsound__struct_1aafecd01e13520f7fb83fe8e2ac2cd026" kindref="member">sr</ref>;</highlight></codeline>
<codeline lineno="755"><highlight class="normal">}</highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>snd_xform<sp/>--<sp/>return<sp/>a<sp/>sound<sp/>with<sp/>transformations<sp/>applied<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="760"><highlight class="comment"><sp/>*<sp/>The<sp/>&quot;logical&quot;<sp/>sound<sp/>starts<sp/>at<sp/>snd-&gt;time<sp/>and<sp/>runs<sp/>until<sp/>some</highlight></codeline>
<codeline lineno="761"><highlight class="comment"><sp/>*<sp/>as<sp/>yet<sp/>unknown<sp/>termination<sp/>time.<sp/><sp/>(There<sp/>is<sp/>also<sp/>a<sp/>possibly</highlight></codeline>
<codeline lineno="762"><highlight class="comment"><sp/>*<sp/>as<sp/>yet<sp/>unknown<sp/>logical<sp/>stop<sp/>time<sp/>that<sp/>is<sp/>irrelevant<sp/>here.)</highlight></codeline>
<codeline lineno="763"><highlight class="comment"><sp/>*<sp/>The<sp/>sound<sp/>is<sp/>clipped<sp/>(zero)<sp/>until<sp/>snd-&gt;t0<sp/>and<sp/>after<sp/>snd-&gt;stop,</highlight></codeline>
<codeline lineno="764"><highlight class="comment"><sp/>*<sp/>the<sp/>latter<sp/>being<sp/>a<sp/>sample<sp/>count,<sp/>not<sp/>a<sp/>time_type.</highlight></codeline>
<codeline lineno="765"><highlight class="comment"><sp/>*<sp/>So,<sp/>the<sp/>&quot;physical&quot;<sp/>sound<sp/>starts<sp/>at<sp/>snd-&gt;t0<sp/>and<sp/>runs<sp/>for<sp/>up<sp/>to</highlight></codeline>
<codeline lineno="766"><highlight class="comment"><sp/>*<sp/>snd-&gt;stop<sp/>samples<sp/>(or<sp/>less<sp/>if<sp/>the<sp/>sound<sp/>terminates<sp/>beforehand).</highlight></codeline>
<codeline lineno="767"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="768"><highlight class="comment"><sp/>*<sp/>The<sp/>snd_xform<sp/>procedure<sp/>operates<sp/>at<sp/>the<sp/>&quot;logical&quot;<sp/>level,<sp/>shifting</highlight></codeline>
<codeline lineno="769"><highlight class="comment"><sp/>*<sp/>the<sp/>sound<sp/>from<sp/>its<sp/>snd-&gt;time<sp/>to<sp/>time.<sp/><sp/>The<sp/>sound<sp/>is<sp/>stretched<sp/>as</highlight></codeline>
<codeline lineno="770"><highlight class="comment"><sp/>*<sp/>a<sp/>result<sp/>of<sp/>setting<sp/>the<sp/>sample<sp/>rate<sp/>to<sp/>sr.<sp/><sp/>It<sp/>is<sp/>then<sp/>(further)<sp/></highlight></codeline>
<codeline lineno="771"><highlight class="comment"><sp/>*<sp/>clipped<sp/>between<sp/>start_time<sp/>and<sp/>stop_time.<sp/><sp/>If<sp/>initial<sp/>samples</highlight></codeline>
<codeline lineno="772"><highlight class="comment"><sp/>*<sp/>are<sp/>clipped,<sp/>the<sp/>sound<sp/>is<sp/>shifted<sp/>again<sp/>so<sp/>that<sp/>it<sp/>still<sp/>starts</highlight></codeline>
<codeline lineno="773"><highlight class="comment"><sp/>*<sp/>at<sp/>time.<sp/><sp/>The<sp/>sound<sp/>is<sp/>then<sp/>scaled<sp/>by<sp/>scale.</highlight></codeline>
<codeline lineno="774"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="775"><highlight class="comment"><sp/>*<sp/>To<sp/>support<sp/>clipping<sp/>of<sp/>initial<sp/>samples,<sp/>the<sp/>&quot;physical&quot;<sp/>start<sp/>time</highlight></codeline>
<codeline lineno="776"><highlight class="comment"><sp/>*<sp/>t0<sp/>is<sp/>set<sp/>to<sp/>when<sp/>the<sp/>first<sp/>unclipped<sp/>sample<sp/>will<sp/>be<sp/>returned,<sp/>but</highlight></codeline>
<codeline lineno="777"><highlight class="comment"><sp/>*<sp/>the<sp/>number<sp/>of<sp/>samples<sp/>to<sp/>clip<sp/>is<sp/>saved<sp/>as<sp/>a<sp/>negative<sp/>count.<sp/><sp/>The</highlight></codeline>
<codeline lineno="778"><highlight class="comment"><sp/>*<sp/>fetch<sp/>routine<sp/>SND_flush<sp/>is<sp/>installed<sp/>to<sp/>flush<sp/>the<sp/>clipped<sp/>samples</highlight></codeline>
<codeline lineno="779"><highlight class="comment"><sp/>*<sp/>at<sp/>the<sp/>time<sp/>of<sp/>the<sp/>first<sp/>fetch.<sp/><sp/>SND_get_first<sp/>is<sp/>then<sp/>installed</highlight></codeline>
<codeline lineno="780"><highlight class="comment"><sp/>*<sp/>for<sp/>future<sp/>fetches.</highlight></codeline>
<codeline lineno="781"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="782"><highlight class="comment"><sp/>*<sp/>An<sp/>empty<sp/>(zero)<sp/>sound<sp/>will<sp/>be<sp/>returned<sp/>if<sp/>all<sp/>samples<sp/>are<sp/>clipped.</highlight></codeline>
<codeline lineno="783"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="784"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="785" refid="sound_8h_1a6d61dadb67723cfd8eafeaf239ad1ee8" refkind="member"><highlight class="normal"><ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/><ref refid="sound_8c_1a6d61dadb67723cfd8eafeaf239ad1ee8" kindref="member">snd_xform</ref>(<ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/>snd,</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sound_8h_1a80a6a98ce803ce7a00e744aa2103f9a1" kindref="member">rate_type</ref><sp/>sr,</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="midifns_8h_1a3f787491db5dbc75c21b27d54e9ebae6" kindref="member">time_type</ref><sp/><ref refid="namespacepyportmidi_1_1midi_1ad2426758f88d23d7208984d5c99ec050" kindref="member">time</ref>,</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="midifns_8h_1a3f787491db5dbc75c21b27d54e9ebae6" kindref="member">time_type</ref><sp/><ref refid="winmain2_8h_1a4c30c8d3d1add32b5fcf4d25497a9aae" kindref="member">start_time</ref>,</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="midifns_8h_1a3f787491db5dbc75c21b27d54e9ebae6" kindref="member">time_type</ref><sp/>stop_time,</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sound_8h_1a5e55d8ac78e61a8ad65e708696e130b5" kindref="member">promoted_sample_type</ref><sp/>scale)</highlight></codeline>
<codeline lineno="791"><highlight class="normal">{</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>start_cnt,<sp/>stop_cnt;<sp/></highlight><highlight class="comment">/*<sp/>clipping<sp/>samples<sp/>(sample<sp/>0<sp/>at<sp/>new<sp/>t0)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>start_cnt<sp/>should<sp/>reflect<sp/>max<sp/>of<sp/>where<sp/>the<sp/>sound<sp/>starts<sp/>(t0)</highlight></codeline>
<codeline lineno="795"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>and<sp/>the<sp/>new<sp/>start_time.</highlight></codeline>
<codeline lineno="796"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(start_time<sp/>==<sp/><ref refid="sound_8h_1ac8e370517a023ce941ae439dbd74a6a1" kindref="member">MIN_START_TIME</ref>)<sp/>{</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_cnt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>new_start_cnt<sp/>=<sp/>((start_time<sp/>-<sp/><ref refid="namespacepyportmidi_1_1midi_1ad2426758f88d23d7208984d5c99ec050" kindref="member">time</ref>)<sp/>*<sp/>sr)<sp/>+<sp/>0.5;</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_cnt<sp/>=<sp/>((new_start_cnt<sp/>&gt;<sp/>0)<sp/>?<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>new_start_cnt<sp/>:<sp/>0);</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>(start_cnt<sp/>&lt;<sp/>-(snd-&gt;current))<sp/>start_cnt<sp/>=<sp/>-(snd-&gt;current);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>stop_cnt<sp/>should<sp/>reflect<sp/>min<sp/>of<sp/>the<sp/>new<sp/>stop_time<sp/>and<sp/>the<sp/>previous</highlight></codeline>
<codeline lineno="806"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>snd-&gt;stop.</highlight></codeline>
<codeline lineno="807"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stop_time<sp/>==<sp/><ref refid="sound_8h_1a561d66c52198183cfacf79de5493ed5f" kindref="member">MAX_STOP_TIME</ref>)<sp/>{</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stop_cnt<sp/>=<sp/><ref refid="sound_8h_1ad1d0a187552467e9e920f964abcc2581" kindref="member">MAX_STOP</ref>;</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>new_stop_cnt<sp/>=<sp/>((stop_time<sp/>-<sp/><ref refid="namespacepyportmidi_1_1midi_1ad2426758f88d23d7208984d5c99ec050" kindref="member">time</ref>)<sp/>*<sp/>sr)<sp/>+<sp/>0.5;</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_stop_cnt<sp/>&lt;<sp/><ref refid="sound_8h_1ad1d0a187552467e9e920f964abcc2581" kindref="member">MAX_STOP</ref>)<sp/>{</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stop_cnt<sp/>=<sp/>(long)<sp/>new_stop_cnt;</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xlio_8c_1a6b1f25f19d584cce958a129b65cac4e2" kindref="member">errputstr</ref>(</highlight><highlight class="stringliteral">&quot;Warning:<sp/>stop<sp/>count<sp/>overflow<sp/>in<sp/>snd_xform\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stop_cnt<sp/>=<sp/><ref refid="sound_8h_1ad1d0a187552467e9e920f964abcc2581" kindref="member">MAX_STOP</ref>;</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stop_cnt<sp/>&gt;<sp/>snd-&gt;<ref refid="structsound__struct_1a95baf30b19741f4b7115900fb648c716" kindref="member">stop</ref>)<sp/>{</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stop_cnt<sp/>=<sp/>snd-&gt;<ref refid="structsound__struct_1a95baf30b19741f4b7115900fb648c716" kindref="member">stop</ref>;</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(stop_cnt<sp/>&lt;<sp/>0<sp/>||<sp/>start_cnt<sp/>&gt;=<sp/>stop_cnt)<sp/>{</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd<sp/>=<sp/><ref refid="sound_8c_1a11255fe781080fb7915f6ab9a5afc4ae" kindref="member">sound_create</ref>(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>time,<sp/>sr,<sp/>1.0);</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>sound_create<sp/>goes<sp/>ahead<sp/>and<sp/>allocates<sp/>a<sp/>snd_list<sp/>node,<sp/>so</highlight></codeline>
<codeline lineno="827"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>we<sp/>need<sp/>to<sp/>free<sp/>it.<sp/><sp/></highlight></codeline>
<codeline lineno="828"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Calling<sp/>snd_list_unref<sp/>here<sp/>seems<sp/>like<sp/>the<sp/>right<sp/>thing,<sp/>but<sp/></highlight></codeline>
<codeline lineno="829"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>it<sp/>assumes<sp/>too<sp/>much<sp/>structure<sp/>is<sp/>in<sp/>place.<sp/><sp/>ffree_snd_list</highlight></codeline>
<codeline lineno="830"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>is<sp/>simpler<sp/>and<sp/>more<sp/>direct:</highlight></codeline>
<codeline lineno="831"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="falloc_8h_1a794da1cd6568e8738bc0d988adf38b6e" kindref="member">ffree_snd_list</ref>(snd-&gt;<ref refid="structsound__struct_1abe0c2ecf4e89d7d8e679adb01442fd60" kindref="member">list</ref>,<sp/></highlight><highlight class="stringliteral">&quot;snd_xform&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd-&gt;<ref refid="structsound__struct_1abe0c2ecf4e89d7d8e679adb01442fd60" kindref="member">list</ref><sp/>=<sp/><ref refid="sound_8c_1aa08a9bd03e22919769a8f33094756c97" kindref="member">zero_snd_list</ref>;</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unix_2switches_8h_1a3d365a416f619366e3a28a11b450739d" kindref="member">nyquist_printf</ref>(</highlight><highlight class="stringliteral">&quot;snd_xform:<sp/>(stop_time<sp/>&lt;<sp/>t0<sp/>or<sp/>start<sp/>&gt;=<sp/>stop)<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;-&gt;<sp/>zero<sp/>sound<sp/>=<sp/>%p\n&quot;</highlight><highlight class="normal">,<sp/>snd);</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd<sp/>=<sp/><ref refid="sound_8c_1ad56b2f689f0d4897c4d2c79356d6102d" kindref="member">sound_copy</ref>(snd);</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd-&gt;<ref refid="structsound__struct_1a397d52ba2da4602200e85f49f62f28ea" kindref="member">t0</ref><sp/>=<sp/><ref refid="namespacepyportmidi_1_1midi_1ad2426758f88d23d7208984d5c99ec050" kindref="member">time</ref>;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(start_cnt)<sp/>{</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd-&gt;<ref refid="structsound__struct_1a36de08aa7f68cf01c3f197548bc3e00f" kindref="member">current</ref><sp/>-=<sp/>start_cnt;<sp/></highlight><highlight class="comment">/*<sp/>indicate<sp/>flush<sp/>with<sp/>negative<sp/>num.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>following<sp/>code<sp/>assumes<sp/>that<sp/>SND_get_first<sp/>is<sp/>the</highlight></codeline>
<codeline lineno="843"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>routine<sp/>to<sp/>be<sp/>called<sp/>to<sp/>get<sp/>the<sp/>first<sp/>samples<sp/>from<sp/>this<sp/></highlight></codeline>
<codeline lineno="844"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sound.<sp/><sp/>We&apos;re<sp/>going<sp/>to<sp/>replace<sp/>it<sp/>with<sp/>SND_flush.<sp/><sp/>First,</highlight></codeline>
<codeline lineno="845"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>make<sp/>sure<sp/>that<sp/>the<sp/>assumption<sp/>is<sp/>correct:</highlight></codeline>
<codeline lineno="846"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((snd-&gt;<ref refid="structsound__struct_1ab03f6655f85673276f9a8bdc4affd358" kindref="member">get_next</ref><sp/>!=<sp/><ref refid="sound_8c_1a650fb27c3f53d3ff92c00561020d5684" kindref="member">SND_get_first</ref>)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(snd-&gt;<ref refid="structsound__struct_1ab03f6655f85673276f9a8bdc4affd358" kindref="member">get_next</ref><sp/>!=<sp/><ref refid="sound_8c_1a038ef9017005011361489fcf3b385386" kindref="member">SND_flush</ref>))<sp/>{</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xlio_8c_1a6b1f25f19d584cce958a129b65cac4e2" kindref="member">errputstr</ref>(</highlight><highlight class="stringliteral">&quot;snd_xform:<sp/>SND_get_first<sp/>expected\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="cext_8h_1a70928ac722fa556b729a98eab5d3e06f" kindref="member">EXIT</ref>(1);</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>this<sp/>will<sp/>flush<sp/>-current<sp/>samples<sp/>and<sp/>revert<sp/>to<sp/>SND_get_first<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd-&gt;<ref refid="structsound__struct_1ab03f6655f85673276f9a8bdc4affd358" kindref="member">get_next</ref><sp/>=<sp/><ref refid="sound_8c_1a038ef9017005011361489fcf3b385386" kindref="member">SND_flush</ref>;</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stop_cnt<sp/>-=<sp/>start_cnt;</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd-&gt;<ref refid="structsound__struct_1a95baf30b19741f4b7115900fb648c716" kindref="member">stop</ref><sp/>=<sp/>stop_cnt;</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd-&gt;<ref refid="structsound__struct_1aafecd01e13520f7fb83fe8e2ac2cd026" kindref="member">sr</ref><sp/>=<sp/>sr;</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd-&gt;<ref refid="structsound__struct_1a7531e5d5bc141fa994e5d787bb2dea01" kindref="member">scale</ref><sp/>*=<sp/>(float)<sp/>scale;</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>snd;</highlight></codeline>
<codeline lineno="861"><highlight class="normal">}</highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>SND_flush<sp/>--<sp/>the<sp/>get_next<sp/>function<sp/>for<sp/>flushing<sp/>clipped<sp/>samples<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="866"><highlight class="comment"><sp/>*<sp/>this<sp/>only<sp/>gets<sp/>called<sp/>once:<sp/>it<sp/>flushes<sp/>-current<sp/>samples<sp/>(a<sp/></highlight></codeline>
<codeline lineno="867"><highlight class="comment"><sp/>*<sp/>non-real-time<sp/>operation)<sp/>and<sp/>installs<sp/>SND_get_next<sp/>to<sp/>return</highlight></codeline>
<codeline lineno="868"><highlight class="comment"><sp/>*<sp/>blocks<sp/>normally<sp/>from<sp/>then<sp/>on.</highlight></codeline>
<codeline lineno="869"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="870" refid="sound_8h_1a038ef9017005011361489fcf3b385386" refkind="member"><highlight class="normal"><ref refid="structsample__block__node" kindref="compound">sample_block_type</ref><sp/><ref refid="sound_8c_1a038ef9017005011361489fcf3b385386" kindref="member">SND_flush</ref>(<ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/>snd,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*<sp/>cnt)</highlight></codeline>
<codeline lineno="871"><highlight class="normal">{</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>mycnt;</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsample__block__node" kindref="compound">sample_block_type</ref><sp/><ref refid="structblock" kindref="compound">block</ref><sp/>=<sp/><ref refid="sound_8c_1a650fb27c3f53d3ff92c00561020d5684" kindref="member">SND_get_first</ref>(snd,<sp/>&amp;mycnt);</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>changed<sp/>from<sp/>&lt;<sp/>to<sp/>&lt;=<sp/>because<sp/>we<sp/>want<sp/>to<sp/>read<sp/>at<sp/>least<sp/>the<sp/>first<sp/>sample<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(snd-&gt;<ref refid="structsound__struct_1a36de08aa7f68cf01c3f197548bc3e00f" kindref="member">current</ref><sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>block<sp/>=<sp/><ref refid="sound_8c_1ac694fd59be7fbed8953aa95ed982df22" kindref="member">SND_get_next</ref>(snd,<sp/>&amp;mycnt);</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>at<sp/>this<sp/>point,<sp/>we&apos;ve<sp/>read<sp/>to<sp/>and<sp/>including<sp/>the<sp/>block<sp/>with</highlight></codeline>
<codeline lineno="879"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>first<sp/>samples<sp/>we<sp/>want<sp/>to<sp/>return.<sp/><sp/>If<sp/>the<sp/>block<sp/>boundary</highlight></codeline>
<codeline lineno="880"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>is<sp/>in<sp/>the<sp/>right<sp/>place,<sp/>we<sp/>can<sp/>do<sp/>a<sp/>minimal<sp/>fixup<sp/>and<sp/>return:</highlight></codeline>
<codeline lineno="881"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(snd-&gt;<ref refid="structsound__struct_1a36de08aa7f68cf01c3f197548bc3e00f" kindref="member">current</ref><sp/>==<sp/>snd-&gt;<ref refid="structsound__struct_1abe0c2ecf4e89d7d8e679adb01442fd60" kindref="member">list</ref>-&gt;<ref refid="structsnd__list__struct_1a809aedecf6147df4ec4b45404cfab414" kindref="member">block_len</ref>)<sp/>{</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*cnt<sp/>=<sp/>snd-&gt;<ref refid="structsound__struct_1a36de08aa7f68cf01c3f197548bc3e00f" kindref="member">current</ref>;<sp/></highlight><highlight class="comment">/*<sp/>==<sp/>snd-&gt;list-&gt;block_len<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>snd-&gt;get_next<sp/>=<sp/>SND_get_next;<sp/>--<sp/>done<sp/>by<sp/>SND_get_first<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>block;</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>snd-&gt;current<sp/>&lt;<sp/>snd-&gt;list-&gt;block_len<sp/>*/</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sound_8h_1a83d17f7b465d1591f27cd28fc5eb8a03" kindref="member">sample_block_values_type</ref><sp/>from_ptr;</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>have<sp/>to<sp/>return<sp/>a<sp/>partial<sp/>block<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>NOTE:<sp/>if<sp/>we<sp/>had<sp/>been<sp/>smart,<sp/>we<sp/>would<sp/>have<sp/>had<sp/>SND_get_next</highlight></codeline>
<codeline lineno="891"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>return<sp/>a<sp/>pointer<sp/>to<sp/>samples<sp/>rather<sp/>than<sp/>a<sp/>pointer<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="892"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>block,<sp/>which<sp/>has<sp/>a<sp/>reference<sp/>count.<sp/><sp/>Since<sp/>the<sp/>caller</highlight></codeline>
<codeline lineno="893"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>expects<sp/>a<sp/>pointer<sp/>to<sp/>a<sp/>reference<sp/>count,<sp/>we<sp/>have<sp/>to<sp/>copy</highlight></codeline>
<codeline lineno="894"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>snd-&gt;current<sp/>samples<sp/>to<sp/>a<sp/>new<sp/>block</highlight></codeline>
<codeline lineno="895"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsnd__list__struct" kindref="compound">snd_list_type</ref><sp/>snd_list<sp/>=<sp/><ref refid="sound_8c_1a58f82dfd9acaae997e982fd56e81e11d" kindref="member">snd_list_create</ref>((<ref refid="structsnd__susp__struct" kindref="compound">snd_susp_type</ref>)<sp/>snd-&gt;<ref refid="structsound__struct_1abe0c2ecf4e89d7d8e679adb01442fd60" kindref="member">list</ref>-&gt;<ref refid="structsnd__list__struct_1a7eb4e39c02b1fa81d1000b204f888777" kindref="member">u</ref>.<ref refid="structsnd__list__struct_1a3a9e571a923a7496eabe0d721e497fbf" kindref="member">next</ref>);</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd_list-&gt;<ref refid="structsnd__list__struct_1a7eb4e39c02b1fa81d1000b204f888777" kindref="member">u</ref>.<ref refid="structsnd__list__struct_1a3a9e571a923a7496eabe0d721e497fbf" kindref="member">next</ref>-&gt;<ref refid="structsnd__list__struct_1a27044dc0ac840d508156da70b7b8eec5" kindref="member">refcnt</ref>++;</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="falloc_8h_1aed8e636a68eb95ea3c7dc90189e78b43" kindref="member">falloc_sample_block</ref>(snd_list-&gt;<ref refid="structsnd__list__struct_1aaf6e754e36ceada326133f729fc4462c" kindref="member">block</ref>,<sp/></highlight><highlight class="stringliteral">&quot;SND_flush&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>now<sp/>copy<sp/>samples<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>from_ptr<sp/>=<sp/>block-&gt;<ref refid="structsample__block__node_1a921e4cd2359010f8ed736a116da8867e" kindref="member">samples</ref><sp/>+<sp/>snd-&gt;<ref refid="structsound__struct_1abe0c2ecf4e89d7d8e679adb01442fd60" kindref="member">list</ref>-&gt;<ref refid="structsnd__list__struct_1a809aedecf6147df4ec4b45404cfab414" kindref="member">block_len</ref><sp/>-<sp/>snd-&gt;<ref refid="structsound__struct_1a36de08aa7f68cf01c3f197548bc3e00f" kindref="member">current</ref>;</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>snd-&gt;<ref refid="structsound__struct_1a36de08aa7f68cf01c3f197548bc3e00f" kindref="member">current</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd_list-&gt;<ref refid="structsnd__list__struct_1aaf6e754e36ceada326133f729fc4462c" kindref="member">block</ref>-&gt;<ref refid="structsample__block__node_1a921e4cd2359010f8ed736a116da8867e" kindref="member">samples</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>from_ptr[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sound_8c_1aad7d8d5bb2bb14c5ba0c435f4ea20ebb" kindref="member">snd_list_unref</ref>(snd-&gt;<ref refid="structsound__struct_1abe0c2ecf4e89d7d8e679adb01442fd60" kindref="member">list</ref>);</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd-&gt;<ref refid="structsound__struct_1abe0c2ecf4e89d7d8e679adb01442fd60" kindref="member">list</ref><sp/>=<sp/>snd_list;</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*cnt<sp/>=<sp/>snd-&gt;<ref refid="structsound__struct_1a36de08aa7f68cf01c3f197548bc3e00f" kindref="member">current</ref>;</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>snd_list-&gt;<ref refid="structsnd__list__struct_1aaf6e754e36ceada326133f729fc4462c" kindref="member">block</ref>;</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="909"><highlight class="normal">}</highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>SND_get_zeros<sp/>--<sp/>the<sp/>get_next<sp/>function<sp/>for<sp/>prepended<sp/>zeros<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="914"><highlight class="comment"><sp/>*<sp/>when<sp/>prepending<sp/>zeros,<sp/>we<sp/>just<sp/>return<sp/>a<sp/>pointer<sp/>to<sp/>the<sp/>internal_zero_block</highlight></codeline>
<codeline lineno="915"><highlight class="comment"><sp/>*<sp/>and<sp/>decrement<sp/>the<sp/>prepend_cnt<sp/>until<sp/>it<sp/>goes<sp/>to<sp/>zero.<sp/><sp/>Then<sp/>we<sp/>revert<sp/>to<sp/></highlight></codeline>
<codeline lineno="916"><highlight class="comment"><sp/>*<sp/>the<sp/>normal<sp/>(original)<sp/>get_next<sp/>function.</highlight></codeline>
<codeline lineno="917"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="918"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="919" refid="sound_8h_1a40d068145bd61957bcec7ff03fd39a0c" refkind="member"><highlight class="normal"><ref refid="structsample__block__node" kindref="compound">sample_block_type</ref><sp/><ref refid="sound_8c_1a40d068145bd61957bcec7ff03fd39a0c" kindref="member">SND_get_zeros</ref>(<ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/>snd,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*<sp/>cnt)</highlight></codeline>
<codeline lineno="920"><highlight class="normal">{</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref><sp/>=<sp/><ref refid="libflac_2src_2lib_f_l_a_c_2include_2private_2macros_8h_1a74e75242132eaabbc1c512488a135926" kindref="member">MIN</ref>(snd-&gt;<ref refid="structsound__struct_1a253c4a0814605d956f3fccb616ccbe90" kindref="member">prepend_cnt</ref>,<sp/><ref refid="sound_8h_1a3871670a207dd661a524b1328410fb0c" kindref="member">max_sample_block_len</ref>);</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>stdputstr(&quot;SND_get_zeros:<sp/>&quot;);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref>[80];</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(error,<sp/></highlight><highlight class="stringliteral">&quot;SND_get_zeros<sp/>snd<sp/>%p<sp/>len<sp/>%d&quot;</highlight><highlight class="normal">,<sp/>snd,<sp/>len);</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_mac_a_e_8c_1abd437fd481d46806b84e0d172a0f1437" kindref="member">xlabort</ref>(error);</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>==<sp/>0)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>we&apos;ve<sp/>finished<sp/>prepending<sp/>zeros<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd-&gt;<ref refid="structsound__struct_1ab03f6655f85673276f9a8bdc4affd358" kindref="member">get_next</ref><sp/>=<sp/>snd-&gt;<ref refid="structsound__struct_1a9c04a2fe9d615fe258d8db15e04adc42" kindref="member">after_prepend</ref>;</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>stdputstr(&quot;done,<sp/>calling<sp/>sound_get_next\n&quot;);<sp/>fflush(stdout);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="sound_8h_1ad30a7d8107577d30a6ecbfc322f2220c" kindref="member">sound_get_next</ref>(snd,<sp/>cnt);</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*cnt<sp/>=<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd-&gt;<ref refid="structsound__struct_1a36de08aa7f68cf01c3f197548bc3e00f" kindref="member">current</ref><sp/>+=<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd-&gt;<ref refid="structsound__struct_1a253c4a0814605d956f3fccb616ccbe90" kindref="member">prepend_cnt</ref><sp/>-=<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;</highlight></codeline>
<codeline lineno="936"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nyquist_printf(&quot;returning<sp/>internal_zero_block@%p\n&quot;,<sp/>internal_zero_block);</highlight></codeline>
<codeline lineno="937"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fflush(stdout);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="sound_8c_1abb923c4be4a1beafa5f79463091c3925" kindref="member">internal_zero_block</ref>;</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="940"><highlight class="normal">}</highlight></codeline>
<codeline lineno="941"><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"></highlight><highlight class="comment">/****************************************************************************</highlight></codeline>
<codeline lineno="944"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SND_get_next</highlight></codeline>
<codeline lineno="945"><highlight class="comment">*<sp/>Inputs:</highlight></codeline>
<codeline lineno="946"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>sound_type<sp/>snd:<sp/>The<sp/>iterator<sp/>whose<sp/>next<sp/>block<sp/>is<sp/>to<sp/>be<sp/>computed</highlight></codeline>
<codeline lineno="947"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>*<sp/>cnt:<sp/>Place<sp/>to<sp/>put<sp/>count<sp/>of<sp/>samples<sp/>returned</highlight></codeline>
<codeline lineno="948"><highlight class="comment">*<sp/>Result:<sp/>snd_list_type</highlight></codeline>
<codeline lineno="949"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Pointer<sp/>to<sp/>the<sp/>sample<sp/>block<sp/>computed<sp/>---------------------------+</highlight></codeline>
<codeline lineno="950"><highlight class="comment">*<sp/>Effect:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="951"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>force<sp/>suspension<sp/>to<sp/>compute<sp/>next<sp/>block<sp/>of<sp/>samples<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="952"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="953"><highlight class="comment">*<sp/><sp/>Here&apos;s<sp/>the<sp/>protocol<sp/>for<sp/>using<sp/>this<sp/>and<sp/>related<sp/>functions:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="954"><highlight class="comment">*<sp/><sp/>Every<sp/>client<sp/>(sample<sp/>reader)<sp/>has<sp/>a<sp/>private<sp/>sound_type<sp/>(an<sp/>iterator),<sp/>|</highlight></codeline>
<codeline lineno="955"><highlight class="comment">*<sp/><sp/>and<sp/>the<sp/>sound_type&apos;s<sp/>&apos;list&apos;<sp/>field<sp/>points<sp/>to<sp/>a<sp/>header<sp/>(of<sp/>type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="956"><highlight class="comment">*<sp/><sp/>snd_list_type).<sp/><sp/>The<sp/>header<sp/>in<sp/>turn<sp/>points<sp/>to<sp/>a<sp/>block<sp/>of<sp/>samples.<sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="957"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="958"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+---------------------------------------+</highlight></codeline>
<codeline lineno="959"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="960"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="961"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sample_block_type</highlight></codeline>
<codeline lineno="962"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(snd)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>V<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+---+--+--+--+--+--+--+-...-+--+</highlight></codeline>
<codeline lineno="963"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>sound_type:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd_list_type<sp/>+--&gt;|ref|<sp/><sp/>|<sp/><sp/>|<sp/><sp/>|<sp/><sp/>|//|//|<sp/><sp/><sp/><sp/><sp/>|//|</highlight></codeline>
<codeline lineno="964"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>+---------+<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+----------+<sp/><sp/>|<sp/><sp/><sp/>+---+--+--+--+--+--+--+-...-+--+</highlight></codeline>
<codeline lineno="965"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>list<sp/><sp/><sp/><sp/>+-------&gt;|<sp/>block<sp/><sp/><sp/><sp/>+--+<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>^</highlight></codeline>
<codeline lineno="966"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>+---------+<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+----------+<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:</highlight></codeline>
<codeline lineno="967"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>t0<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>block_len|....................:</highlight></codeline>
<codeline lineno="968"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>+---------+<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+----------+</highlight></codeline>
<codeline lineno="969"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/>sr<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>refcnt<sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="970"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>+---------+<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+-+--------+</highlight></codeline>
<codeline lineno="971"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>current<sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>next<sp/><sp/><sp/>+----&gt;...<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Note:<sp/>the<sp/>union<sp/>u</highlight></codeline>
<codeline lineno="972"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>+---------+<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|u|........|<sp/>snd_list_type<sp/><sp/><sp/><sp/>points<sp/>to<sp/>only<sp/>one</highlight></codeline>
<codeline lineno="973"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>rate<sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>|<sp/>susp<sp/><sp/><sp/>+----&gt;...<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>the<sp/>indicated</highlight></codeline>
<codeline lineno="974"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>+---------+<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+-+--------+<sp/>susp_type<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>types</highlight></codeline>
<codeline lineno="975"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>scalse<sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|log_stop<sp/><sp/>|</highlight></codeline>
<codeline lineno="976"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>+---------+<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+----------+</highlight></codeline>
<codeline lineno="977"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>lsc<sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="978"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>+---------+</highlight></codeline>
<codeline lineno="979"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|get_next<sp/>+-----&gt;<sp/>SND_get_next()</highlight></codeline>
<codeline lineno="980"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>+---------+</highlight></codeline>
<codeline lineno="981"><highlight class="comment">*</highlight></codeline>
<codeline lineno="982"><highlight class="comment">*<sp/><sp/>The<sp/>sound_type<sp/>keeps<sp/>track<sp/>of<sp/>where<sp/>the<sp/>next<sp/>sample<sp/>block<sp/>will<sp/></highlight></codeline>
<codeline lineno="983"><highlight class="comment">*<sp/><sp/>come<sp/>from.<sp/><sp/>The<sp/>field<sp/>&apos;current&apos;<sp/>is<sp/>the<sp/>number<sp/>of<sp/>the<sp/>first<sp/>sample<sp/>of</highlight></codeline>
<codeline lineno="984"><highlight class="comment">*<sp/><sp/>the<sp/>next<sp/>block<sp/>to<sp/>be<sp/>returned,<sp/>where<sp/>sample<sp/>numbers<sp/>start</highlight></codeline>
<codeline lineno="985"><highlight class="comment">*<sp/><sp/>at<sp/>zero.<sp/><sp/>The<sp/>normal<sp/>fetch<sp/>procedure<sp/>is<sp/>this<sp/>one,<sp/>although<sp/>special</highlight></codeline>
<codeline lineno="986"><highlight class="comment">*<sp/><sp/>cases<sp/>may<sp/>generate<sp/>special<sp/>block<sp/>generators,<sp/>e.g.,<sp/>CONST<sp/>does<sp/>not<sp/>need</highlight></codeline>
<codeline lineno="987"><highlight class="comment">*<sp/><sp/>to<sp/>allocate<sp/>and<sp/>refill<sp/>a<sp/>block<sp/>and<sp/>can<sp/>reuse<sp/>the<sp/>same<sp/>block<sp/>over<sp/>and</highlight></codeline>
<codeline lineno="988"><highlight class="comment">*<sp/><sp/>over<sp/>again,<sp/>so<sp/>it<sp/>may<sp/>have<sp/>its<sp/>own<sp/>fetch<sp/>procedure.<sp/><sp/>This<sp/>is<sp/>the</highlight></codeline>
<codeline lineno="989"><highlight class="comment">*<sp/><sp/>general<sp/>fetch<sp/>procedure,<sp/>which<sp/>assumes<sp/>that<sp/>the<sp/>generator<sp/>function</highlight></codeline>
<codeline lineno="990"><highlight class="comment">*<sp/><sp/>actually<sp/>produces<sp/>a<sp/>slightly<sp/>different<sp/>value<sp/>for<sp/>each<sp/>sample.</highlight></codeline>
<codeline lineno="991"><highlight class="comment">*</highlight></codeline>
<codeline lineno="992"><highlight class="comment">*<sp/><sp/>The<sp/>distinguishing<sp/>characteristic<sp/>of<sp/>whether<sp/>the<sp/>&apos;u&apos;<sp/>field<sp/>is<sp/>to<sp/>be</highlight></codeline>
<codeline lineno="993"><highlight class="comment">*<sp/><sp/>interpreted<sp/>as<sp/>&apos;next&apos;,<sp/>a<sp/>link<sp/>to<sp/>the<sp/>next<sp/>list<sp/>element,<sp/>or<sp/>&apos;susp&apos;,<sp/>a</highlight></codeline>
<codeline lineno="994"><highlight class="comment">*<sp/><sp/>reference<sp/>to<sp/>the<sp/>suspension<sp/>for<sp/>generating<sp/>a<sp/>new<sp/>sample<sp/>block,<sp/>is</highlight></codeline>
<codeline lineno="995"><highlight class="comment">*<sp/><sp/>whether<sp/>the<sp/>&apos;block&apos;<sp/>parameter<sp/>is<sp/>NULL<sp/>or<sp/>not.<sp/><sp/>If<sp/>it<sp/>is<sp/>NULL,<sp/>then</highlight></codeline>
<codeline lineno="996"><highlight class="comment">*<sp/><sp/>u.susp<sp/>tells<sp/>how<sp/>to<sp/>generate<sp/>the<sp/>block;<sp/>if<sp/>it<sp/>is<sp/>not<sp/>NULL,<sp/>u.next<sp/>is</highlight></codeline>
<codeline lineno="997"><highlight class="comment">*<sp/><sp/>a<sp/>pointer<sp/>to<sp/>the<sp/>next<sp/>sound<sp/>block<sp/>in<sp/>the<sp/>list.</highlight></codeline>
<codeline lineno="998"><highlight class="comment">*</highlight></codeline>
<codeline lineno="999"><highlight class="comment">*<sp/><sp/>When<sp/>the<sp/>&apos;block&apos;<sp/>pointer<sp/>is<sp/>NULL,<sp/>we<sp/>create<sp/>a<sp/>block<sp/>of<sp/>samples,<sp/>and</highlight></codeline>
<codeline lineno="1000"><highlight class="comment">*<sp/><sp/>create<sp/>a<sp/>new<sp/>sound<sp/>list<sp/>element<sp/>which<sp/>follows<sp/>it<sp/>which<sp/>has<sp/>a<sp/>NULL</highlight></codeline>
<codeline lineno="1001"><highlight class="comment">*<sp/><sp/>&apos;block&apos;<sp/>pointer;<sp/>the<sp/>&apos;u&apos;<sp/>field<sp/>of<sp/>the<sp/>current<sp/>list<sp/>element<sp/>is<sp/>now</highlight></codeline>
<codeline lineno="1002"><highlight class="comment">*<sp/><sp/>interpreted<sp/>as<sp/>&apos;u.next&apos;.</highlight></codeline>
<codeline lineno="1003"><highlight class="comment">*</highlight></codeline>
<codeline lineno="1004"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>client<sp/>calls<sp/>SND_get_next<sp/>to<sp/>get<sp/>a<sp/>pointer<sp/>to<sp/>a<sp/>block<sp/>of<sp/>samples.</highlight></codeline>
<codeline lineno="1005"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>count<sp/>of<sp/>samples<sp/>generated<sp/>is<sp/>returned<sp/>via<sp/>a<sp/>ref<sp/>parameter,<sp/>and</highlight></codeline>
<codeline lineno="1006"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/>SND_get_next<sp/>will<sp/>not<sp/>be<sp/>called<sp/>again<sp/>until<sp/>this<sp/>set<sp/>is<sp/>exhausted.</highlight></codeline>
<codeline lineno="1007"><highlight class="comment">*</highlight></codeline>
<codeline lineno="1008"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>next<sp/>time<sp/>SND_get_next<sp/>is<sp/>called,<sp/>it<sp/>knows<sp/>that<sp/>the<sp/>sample<sp/>block</highlight></codeline>
<codeline lineno="1009"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/>has<sp/>been<sp/>exhausted.<sp/><sp/>It<sp/>releases<sp/>its<sp/>reference<sp/>to<sp/>the<sp/>block<sp/>(and<sp/>if</highlight></codeline>
<codeline lineno="1010"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/>that<sp/>was<sp/>the<sp/>last<sp/>reference,<sp/>frees<sp/>the<sp/>block<sp/>to<sp/>the<sp/>block<sp/>allocation</highlight></codeline>
<codeline lineno="1011"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/>pool),<sp/>allocates<sp/>a<sp/>new<sp/>block<sp/>from<sp/>the<sp/>block<sp/>pool,<sp/>and<sp/>proceeds<sp/>to</highlight></codeline>
<codeline lineno="1012"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/>fill<sp/>it<sp/>with<sp/>samples.</highlight></codeline>
<codeline lineno="1013"><highlight class="comment">*</highlight></codeline>
<codeline lineno="1014"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/>Note<sp/>that<sp/>as<sp/>an<sp/>optimization,<sp/>if<sp/>the<sp/>refcnt<sp/>field<sp/>goes<sp/>to<sp/>0<sp/>it</highlight></codeline>
<codeline lineno="1015"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/>could<sp/>immediately<sp/>re-use<sp/>the<sp/>block<sp/>without<sp/>freeing<sp/>back<sp/>to<sp/>the<sp/>block</highlight></codeline>
<codeline lineno="1016"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/>pool<sp/>and<sp/>reallocating<sp/>it.</highlight></codeline>
<codeline lineno="1017"><highlight class="comment">*</highlight></codeline>
<codeline lineno="1018"><highlight class="comment">*<sp/><sp/>Because<sp/>of<sp/>the<sp/>way<sp/>we<sp/>handle<sp/>sound<sp/>sample<sp/>blocks,<sp/>the<sp/>sound<sp/>sample<sp/>blocks</highlight></codeline>
<codeline lineno="1019"><highlight class="comment">*<sp/><sp/>themselves<sp/>are<sp/>ref-counted,<sp/>so<sp/>freeing<sp/>the<sp/>snd_list_type<sp/>may<sp/>not<sp/>free</highlight></codeline>
<codeline lineno="1020"><highlight class="comment">*<sp/><sp/>the<sp/>sample<sp/>block<sp/>it<sp/>references.<sp/><sp/>At<sp/>the<sp/>level<sp/>of<sp/>this<sp/>procedure,<sp/>that</highlight></codeline>
<codeline lineno="1021"><highlight class="comment">*<sp/><sp/>is<sp/>transparently<sp/>handled<sp/>by<sp/>the<sp/>snd_list_unref<sp/>function.</highlight></codeline>
<codeline lineno="1022"><highlight class="comment">*</highlight></codeline>
<codeline lineno="1023"><highlight class="comment">*<sp/><sp/>Logical<sp/>stop:</highlight></codeline>
<codeline lineno="1024"><highlight class="comment">*</highlight></codeline>
<codeline lineno="1025"><highlight class="comment">*<sp/><sp/>Logical<sp/>stop<sp/>is<sp/>handled<sp/>by<sp/>several<sp/>mechanisms.<sp/><sp/>The<sp/>/intrinsic/<sp/>logical</highlight></codeline>
<codeline lineno="1026"><highlight class="comment">*<sp/><sp/>stop<sp/>is<sp/>an<sp/>immutable<sp/>property<sp/>of<sp/>the<sp/>signal,<sp/>and<sp/>is<sp/>determined<sp/>by<sp/>the</highlight></codeline>
<codeline lineno="1027"><highlight class="comment">*<sp/><sp/>specification<sp/>in<sp/>the<sp/>algorithm<sp/>description<sp/>file.<sp/><sp/>When<sp/>it<sp/>is<sp/>encountered,</highlight></codeline>
<codeline lineno="1028"><highlight class="comment">*<sp/><sp/>the<sp/>&apos;logically_stopped&apos;<sp/>flag<sp/>of<sp/>the<sp/>snd_list_node<sp/>is<sp/>set.</highlight></codeline>
<codeline lineno="1029"><highlight class="comment">*<sp/><sp/>The<sp/>generators<sp/>guarantee<sp/>that<sp/>the<sp/>first<sp/>time<sp/>this<sp/>is<sp/>encountered,<sp/>it</highlight></codeline>
<codeline lineno="1030"><highlight class="comment">*<sp/><sp/>will<sp/>always<sp/>be<sp/>constructed<sp/>so<sp/>that<sp/>the<sp/>first<sp/>sample<sp/>of<sp/>the<sp/>block<sp/>it</highlight></codeline>
<codeline lineno="1031"><highlight class="comment">*<sp/><sp/>references<sp/>is<sp/>the<sp/>logical<sp/>stop<sp/>time.</highlight></codeline>
<codeline lineno="1032"><highlight class="comment">*</highlight></codeline>
<codeline lineno="1033"><highlight class="comment">*<sp/><sp/>In<sp/>addition,<sp/>the<sp/>client<sp/>may<sp/>have<sp/>set<sp/>the<sp/>/explicit<sp/>logical<sp/>stop<sp/>time/<sp/>of</highlight></codeline>
<codeline lineno="1034"><highlight class="comment">*<sp/><sp/>the<sp/>iterator<sp/>(e.g.,<sp/>in<sp/>nyquist,<sp/>the<sp/>(set-logical-stop<sp/>sound<sp/>time)<sp/>call<sp/>copies</highlight></codeline>
<codeline lineno="1035"><highlight class="comment">*<sp/><sp/>the<sp/>sound,<sp/>altering<sp/>its<sp/>logical<sp/>stop).<sp/><sp/>The<sp/>logical<sp/>stop<sp/>time,<sp/>when<sp/>set</highlight></codeline>
<codeline lineno="1036"><highlight class="comment">*<sp/><sp/>in<sp/>this<sp/>way,<sp/>causes<sp/>the<sp/>logical_stop_cnt<sp/>(&apos;lsc&apos;<sp/>in<sp/>the<sp/>above<sp/>diagram)</highlight></codeline>
<codeline lineno="1037"><highlight class="comment">*<sp/><sp/>to<sp/>be<sp/>set<sp/>to<sp/>the<sp/>count<sp/>of<sp/>the<sp/>last<sp/>sample<sp/>to<sp/>be<sp/>generated<sp/>before<sp/>the</highlight></codeline>
<codeline lineno="1038"><highlight class="comment">*<sp/><sp/>&lt;logical<sp/>stop<sp/>time.<sp/><sp/>This<sp/>will<sp/>guarantee<sp/>that<sp/>the<sp/>sound<sp/>will<sp/>indicate<sp/>that</highlight></codeline>
<codeline lineno="1039"><highlight class="comment">*<sp/><sp/>it<sp/>has<sp/>reached<sp/>its<sp/>logical<sp/>stop<sp/>time<sp/>when<sp/>the<sp/>indicated<sp/>sample<sp/>is<sp/></highlight></codeline>
<codeline lineno="1040"><highlight class="comment">*<sp/><sp/>generated.</highlight></codeline>
<codeline lineno="1041"><highlight class="comment">****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1042"><highlight class="normal"></highlight></codeline>
<codeline lineno="1043"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sound_8c_1a68627cfe01b1c1adbce8408c72c5e992" kindref="member">add_s1_s2_nn_fetch</ref>();<sp/></highlight><highlight class="comment">/*<sp/>for<sp/>debugging<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1044"><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>SND_get_first<sp/>--<sp/>the<sp/>standard<sp/>fn<sp/>to<sp/>get<sp/>a<sp/>block,<sp/>after<sp/>returning<sp/></highlight></codeline>
<codeline lineno="1046"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>the<sp/>first<sp/>block,<sp/>plug<sp/>in<sp/>SND_get_next<sp/>for<sp/>successive<sp/>blocks</highlight></codeline>
<codeline lineno="1047"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1048" refid="sound_8h_1a650fb27c3f53d3ff92c00561020d5684" refkind="member"><highlight class="normal"><ref refid="structsample__block__node" kindref="compound">sample_block_type</ref><sp/><ref refid="sound_8c_1a650fb27c3f53d3ff92c00561020d5684" kindref="member">SND_get_first</ref>(<ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/>snd,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*<sp/>cnt)</highlight></codeline>
<codeline lineno="1049"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="structsnd__list__struct" kindref="compound">snd_list_type</ref><sp/>snd_list<sp/>=<sp/>snd-&gt;<ref refid="structsound__struct_1abe0c2ecf4e89d7d8e679adb01442fd60" kindref="member">list</ref>;</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1052"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>If<sp/>there<sp/>is<sp/>not<sp/>a<sp/>block<sp/>of<sp/>samples,<sp/>we<sp/>need<sp/>to<sp/>generate<sp/>one.</highlight></codeline>
<codeline lineno="1053"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(snd_list-&gt;<ref refid="structsnd__list__struct_1aaf6e754e36ceada326133f729fc4462c" kindref="member">block</ref><sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1056"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Call<sp/>the<sp/>&apos;fetch&apos;<sp/>method<sp/>for<sp/>this<sp/>sound_type<sp/>to<sp/>generate<sp/></highlight></codeline>
<codeline lineno="1057"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>a<sp/>new<sp/>block<sp/>of<sp/>samples.</highlight></codeline>
<codeline lineno="1058"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsnd__susp__struct" kindref="compound">snd_susp_type</ref><sp/>susp<sp/>=<sp/>snd_list-&gt;<ref refid="structsnd__list__struct_1a7eb4e39c02b1fa81d1000b204f888777" kindref="member">u</ref>.<ref refid="structsnd__list__struct_1a57f7d6b31a871ee6d94757b409f636ee" kindref="member">susp</ref>;</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"></highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd_list-&gt;<ref refid="structsnd__list__struct_1a7eb4e39c02b1fa81d1000b204f888777" kindref="member">u</ref>.<ref refid="structsnd__list__struct_1a3a9e571a923a7496eabe0d721e497fbf" kindref="member">next</ref><sp/>=<sp/><ref refid="sound_8c_1a58f82dfd9acaae997e982fd56e81e11d" kindref="member">snd_list_create</ref>(susp);</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd_list-&gt;<ref refid="structsnd__list__struct_1aaf6e754e36ceada326133f729fc4462c" kindref="member">block</ref><sp/>=<sp/><ref refid="sound_8c_1abb923c4be4a1beafa5f79463091c3925" kindref="member">internal_zero_block</ref>;</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>nyquist_printf(&quot;SND_get_first:<sp/>susp-&gt;fetch<sp/>%p\n&quot;,</highlight></codeline>
<codeline lineno="1064"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;fetch);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(susp-&gt;<ref refid="structsnd__susp__struct_1a8044ae9d2cfcbccffd2a60c9b6ce16fa" kindref="member">log_stop_cnt</ref><sp/>==<sp/><ref refid="sound_8h_1ac1ae4add974b9cfc6b5aaf8a578f01ab" kindref="member">UNKNOWN</ref><sp/>||<sp/>susp-&gt;<ref refid="structsnd__susp__struct_1a8044ae9d2cfcbccffd2a60c9b6ce16fa" kindref="member">log_stop_cnt</ref><sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*(susp-&gt;<ref refid="structsnd__susp__struct_1addb182d5c03b9b8f864e4fd9871f7722" kindref="member">fetch</ref>))(susp,<sp/>snd_list);</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>GC_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libnyquist_2nyquist_2nyqsrc_2debug_8c_1a67456b2eaf14a2c3ab34512d23774d5b" kindref="member">snd_list_debug</ref>(snd_list,<sp/></highlight><highlight class="stringliteral">&quot;SND_get_first&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>nyquist_printf(&quot;SND_get_first:<sp/>snd_list<sp/>%p,<sp/>block<sp/>%p,<sp/>length<sp/>%d\n&quot;,</highlight></codeline>
<codeline lineno="1071"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd_list,<sp/>snd_list-&gt;block,<sp/>snd_list-&gt;block_len);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((snd-&gt;<ref refid="structsound__struct_1a51e65ef2c1784b5bc543a84ec90d5022" kindref="member">logical_stop_cnt</ref><sp/>==<sp/><ref refid="sound_8h_1ac1ae4add974b9cfc6b5aaf8a578f01ab" kindref="member">UNKNOWN</ref>)<sp/>&amp;&amp;<sp/>snd_list-&gt;<ref refid="structsnd__list__struct_1a09cdf89fd12d89166b27e4c3963420b3" kindref="member">logically_stopped</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>nyquist_printf(&quot;SND_get_first/next:<sp/>snd<sp/>%p<sp/>logically<sp/>stopped<sp/>at<sp/>%d\n&quot;,</highlight></codeline>
<codeline lineno="1075"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd,<sp/>snd-&gt;current);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd-&gt;<ref refid="structsound__struct_1a51e65ef2c1784b5bc543a84ec90d5022" kindref="member">logical_stop_cnt</ref><sp/>=<sp/>snd-&gt;<ref refid="structsound__struct_1a36de08aa7f68cf01c3f197548bc3e00f" kindref="member">current</ref>;</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>see<sp/>if<sp/>clipping<sp/>needs<sp/>to<sp/>be<sp/>applied<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(snd-&gt;<ref refid="structsound__struct_1a36de08aa7f68cf01c3f197548bc3e00f" kindref="member">current</ref><sp/>+<sp/>snd_list-&gt;<ref refid="structsnd__list__struct_1a809aedecf6147df4ec4b45404cfab414" kindref="member">block_len</ref><sp/>&gt;<sp/>snd-&gt;<ref refid="structsound__struct_1a95baf30b19741f4b7115900fb648c716" kindref="member">stop</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>need<sp/>to<sp/>clip:<sp/>is<sp/>clip<sp/>on<sp/>a<sp/>block<sp/>boundary?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(snd-&gt;<ref refid="structsound__struct_1a36de08aa7f68cf01c3f197548bc3e00f" kindref="member">current</ref><sp/>==<sp/>snd-&gt;<ref refid="structsound__struct_1a95baf30b19741f4b7115900fb648c716" kindref="member">stop</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>block<sp/>boundary:<sp/>replace<sp/>with<sp/>zero<sp/>sound<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd-&gt;<ref refid="structsound__struct_1abe0c2ecf4e89d7d8e679adb01442fd60" kindref="member">list</ref><sp/>=<sp/><ref refid="sound_8c_1aa08a9bd03e22919769a8f33094756c97" kindref="member">zero_snd_list</ref>;</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sound_8c_1aad7d8d5bb2bb14c5ba0c435f4ea20ebb" kindref="member">snd_list_unref</ref>(snd_list);</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>not<sp/>a<sp/>block<sp/>boundary:<sp/>build<sp/>new<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd-&gt;<ref refid="structsound__struct_1abe0c2ecf4e89d7d8e679adb01442fd60" kindref="member">list</ref><sp/>=<sp/><ref refid="sound_8c_1a58f82dfd9acaae997e982fd56e81e11d" kindref="member">snd_list_create</ref>((<ref refid="structsnd__susp__struct" kindref="compound">snd_susp_type</ref>)<sp/>zero_snd_list);</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd-&gt;<ref refid="structsound__struct_1abe0c2ecf4e89d7d8e679adb01442fd60" kindref="member">list</ref>-&gt;<ref refid="structsnd__list__struct_1a809aedecf6147df4ec4b45404cfab414" kindref="member">block_len</ref><sp/>=<sp/>(short)<sp/>(snd-&gt;<ref refid="structsound__struct_1a95baf30b19741f4b7115900fb648c716" kindref="member">stop</ref><sp/>-<sp/>snd-&gt;<ref refid="structsound__struct_1a36de08aa7f68cf01c3f197548bc3e00f" kindref="member">current</ref>);</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd-&gt;<ref refid="structsound__struct_1abe0c2ecf4e89d7d8e679adb01442fd60" kindref="member">list</ref>-&gt;<ref refid="structsnd__list__struct_1aaf6e754e36ceada326133f729fc4462c" kindref="member">block</ref><sp/>=<sp/>snd_list-&gt;<ref refid="structsnd__list__struct_1aaf6e754e36ceada326133f729fc4462c" kindref="member">block</ref>;</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd-&gt;<ref refid="structsound__struct_1abe0c2ecf4e89d7d8e679adb01442fd60" kindref="member">list</ref>-&gt;<ref refid="structsnd__list__struct_1aaf6e754e36ceada326133f729fc4462c" kindref="member">block</ref>-&gt;<ref refid="structsample__block__node_1aa59f54edaee6c4ab12b5e9eeca2d7699" kindref="member">refcnt</ref>++;</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sound_8c_1aad7d8d5bb2bb14c5ba0c435f4ea20ebb" kindref="member">snd_list_unref</ref>(snd_list);</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd_list<sp/>=<sp/>snd-&gt;<ref refid="structsound__struct_1abe0c2ecf4e89d7d8e679adb01442fd60" kindref="member">list</ref>;<sp/></highlight><highlight class="comment">/*<sp/>used<sp/>below<sp/>to<sp/>return<sp/>block<sp/>ptr<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"></highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/>*cnt<sp/>=<sp/>snd_list-&gt;<ref refid="structsnd__list__struct_1a809aedecf6147df4ec4b45404cfab414" kindref="member">block_len</ref>;</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>this<sp/>should<sp/>never<sp/>happen<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*cnt<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xlio_8c_1a48c6474ff667334385f7c6e4c350c51d" kindref="member">stdputstr</ref>(</highlight><highlight class="stringliteral">&quot;SND_get_first<sp/>returned<sp/>0<sp/>samples\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>DEBUG_MEM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libnyquist_2nyquist_2nyqsrc_2debug_8h_1a91737c2185a902d19a2a0f2f31a4ca46" kindref="member">dbg_mem_print</ref>(</highlight><highlight class="stringliteral">&quot;snd_list<sp/>info:&quot;</highlight><highlight class="normal">,<sp/>snd_list);</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libnyquist_2nyquist_2nyqsrc_2debug_8h_1a91737c2185a902d19a2a0f2f31a4ca46" kindref="member">dbg_mem_print</ref>(</highlight><highlight class="stringliteral">&quot;block<sp/>info:&quot;</highlight><highlight class="normal">,<sp/>snd_list-&gt;<ref refid="structsnd__list__struct_1aaf6e754e36ceada326133f729fc4462c" kindref="member">block</ref>);</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sound_8c_1aebbcea007dc8d74685f63045b16fc9ae" kindref="member">sound_print_tree</ref>(snd);</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xlio_8c_1a48c6474ff667334385f7c6e4c350c51d" kindref="member">stdputstr</ref>(</highlight><highlight class="stringliteral">&quot;It<sp/>is<sp/>possible<sp/>that<sp/>you<sp/>created<sp/>a<sp/>recursive<sp/>sound\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xlio_8c_1a48c6474ff667334385f7c6e4c350c51d" kindref="member">stdputstr</ref>(</highlight><highlight class="stringliteral">&quot;using<sp/>something<sp/>like:<sp/>(SETF<sp/>X<sp/>(SEQ<sp/>(SOUND<sp/>X)<sp/>...))\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xlio_8c_1a48c6474ff667334385f7c6e4c350c51d" kindref="member">stdputstr</ref>(</highlight><highlight class="stringliteral">&quot;Nyquist<sp/>aborts<sp/>from<sp/>non-recoverable<sp/>error\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>abort();</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/>snd-&gt;<ref refid="structsound__struct_1a36de08aa7f68cf01c3f197548bc3e00f" kindref="member">current</ref><sp/>+=<sp/>snd_list-&gt;<ref refid="structsnd__list__struct_1a809aedecf6147df4ec4b45404cfab414" kindref="member">block_len</ref>;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>count<sp/>how<sp/>many<sp/>we<sp/>read<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/>snd-&gt;<ref refid="structsound__struct_1ab03f6655f85673276f9a8bdc4affd358" kindref="member">get_next</ref><sp/>=<sp/><ref refid="sound_8c_1ac694fd59be7fbed8953aa95ed982df22" kindref="member">SND_get_next</ref>;</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>snd_list-&gt;<ref refid="structsnd__list__struct_1aaf6e754e36ceada326133f729fc4462c" kindref="member">block</ref>;</highlight></codeline>
<codeline lineno="1114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"></highlight></codeline>
<codeline lineno="1116"><highlight class="normal"></highlight></codeline>
<codeline lineno="1117" refid="sound_8h_1ac694fd59be7fbed8953aa95ed982df22" refkind="member"><highlight class="normal"><ref refid="structsample__block__node" kindref="compound">sample_block_type</ref><sp/><ref refid="sound_8c_1ac694fd59be7fbed8953aa95ed982df22" kindref="member">SND_get_next</ref>(<ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/>snd,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*<sp/>cnt)</highlight></codeline>
<codeline lineno="1118"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="structsnd__list__struct" kindref="compound">snd_list_type</ref><sp/>snd_list<sp/>=<sp/>snd-&gt;<ref refid="structsound__struct_1abe0c2ecf4e89d7d8e679adb01442fd60" kindref="member">list</ref>;</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1121"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>SND_get_next<sp/>is<sp/>installed<sp/>by<sp/>SND_get_first,<sp/>so<sp/>we<sp/>know</highlight></codeline>
<codeline lineno="1122"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>when<sp/>we<sp/>are<sp/>called<sp/>that<sp/>we<sp/>are<sp/>done<sp/>with<sp/>the<sp/>current<sp/>block</highlight></codeline>
<codeline lineno="1123"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>of<sp/>samples,<sp/>so<sp/>free<sp/>it<sp/>now.</highlight></codeline>
<codeline lineno="1124"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsnd__list__struct" kindref="compound">snd_list_type</ref><sp/>cur<sp/>=<sp/>snd_list;</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/>snd-&gt;<ref refid="structsound__struct_1abe0c2ecf4e89d7d8e679adb01442fd60" kindref="member">list</ref><sp/>=<sp/>snd_list<sp/>=<sp/>cur-&gt;<ref refid="structsnd__list__struct_1a7eb4e39c02b1fa81d1000b204f888777" kindref="member">u</ref>.<ref refid="structsnd__list__struct_1a3a9e571a923a7496eabe0d721e497fbf" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sound_8c_1ae9bef88dd5f52e534fad5566dc203e50" kindref="member">snd_list_ref</ref>(snd_list);</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sound_8c_1aad7d8d5bb2bb14c5ba0c435f4ea20ebb" kindref="member">snd_list_unref</ref>(cur);<sp/><sp/></highlight><highlight class="comment">/*<sp/>release<sp/>the<sp/>reference<sp/>to<sp/>the<sp/>current<sp/>block<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1129"><highlight class="normal"></highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>now<sp/>that<sp/>we&apos;ve<sp/>deallocated,<sp/>we<sp/>can<sp/>use<sp/>SND_get_first<sp/>to<sp/>finish<sp/>the<sp/>job<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="sound_8c_1a650fb27c3f53d3ff92c00561020d5684" kindref="member">SND_get_first</ref>(snd,<sp/>cnt);</highlight></codeline>
<codeline lineno="1132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"></highlight></codeline>
<codeline lineno="1134"><highlight class="normal"></highlight></codeline>
<codeline lineno="1135"><highlight class="normal"></highlight></codeline>
<codeline lineno="1136"><highlight class="normal"></highlight><highlight class="comment">/****************************************************************************</highlight></codeline>
<codeline lineno="1137"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>make_zero_block</highlight></codeline>
<codeline lineno="1138"><highlight class="comment">*<sp/>Inputs:</highlight></codeline>
<codeline lineno="1139"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1140"><highlight class="comment">*<sp/>Result:<sp/></highlight></codeline>
<codeline lineno="1141"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1142"><highlight class="comment">*<sp/>Effect:<sp/></highlight></codeline>
<codeline lineno="1143"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1144"><highlight class="comment">****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1145"><highlight class="normal"></highlight></codeline>
<codeline lineno="1146" refid="sound_8c_1a2171bf8fcdb76cb137865d9152ee86d1" refkind="member"><highlight class="normal"><ref refid="structsample__block__node" kindref="compound">sample_block_type</ref><sp/><ref refid="sound_8c_1a2171bf8fcdb76cb137865d9152ee86d1" kindref="member">make_zero_block</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="structsample__block__node" kindref="compound">sample_block_type</ref><sp/>zb;</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"></highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="falloc_8h_1aed8e636a68eb95ea3c7dc90189e78b43" kindref="member">falloc_sample_block</ref>(zb,<sp/></highlight><highlight class="stringliteral">&quot;make_zero_block&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>leave<sp/>room<sp/>for<sp/>lots<sp/>more<sp/>references<sp/>before<sp/>overflow,<sp/></highlight></codeline>
<codeline lineno="1153"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>but<sp/>set<sp/>the<sp/>count<sp/>high<sp/>so<sp/>that<sp/>even<sp/>a<sp/>large<sp/>number<sp/>of</highlight></codeline>
<codeline lineno="1154"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dereferences<sp/>will<sp/>not<sp/>lead<sp/>to<sp/>a<sp/>deallocation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>zb-&gt;<ref refid="structsample__block__node_1aa59f54edaee6c4ab12b5e9eeca2d7699" kindref="member">refcnt</ref><sp/>=<sp/>0x6FFFFFFF;</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"></highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="sound_8h_1a3871670a207dd661a524b1328410fb0c" kindref="member">max_sample_block_len</ref>;<sp/>i++)<sp/></highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>fill<sp/>with<sp/>zeros<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zb-&gt;<ref refid="structsample__block__node_1a921e4cd2359010f8ed736a116da8867e" kindref="member">samples</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>0.0F;</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>fill<sp/>with<sp/>zeros<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>zb;</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"></highlight></codeline>
<codeline lineno="1165"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>min_cnt<sp/>--<sp/>help<sp/>compute<sp/>the<sp/>logical<sp/>stop<sp/>or<sp/>terminate<sp/>as<sp/>minimum<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1166"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1167"><highlight class="comment"><sp/>*<sp/>take<sp/>the<sp/>sound<sp/>(which<sp/>has<sp/>just<sp/>logically<sp/>stopped<sp/>or<sp/>terminated<sp/>at</highlight></codeline>
<codeline lineno="1168"><highlight class="comment"><sp/>*<sp/>current<sp/>sample)<sp/>and</highlight></codeline>
<codeline lineno="1169"><highlight class="comment"><sp/>*<sp/>convert<sp/>the<sp/>stop<sp/>sample<sp/>into<sp/>the<sp/>equivalent<sp/>sample<sp/>count<sp/>as<sp/>produced<sp/>by</highlight></codeline>
<codeline lineno="1170"><highlight class="comment"><sp/>*<sp/>susp<sp/>(which<sp/>may<sp/>have<sp/>a<sp/>different<sp/>sample<sp/>rate).<sp/><sp/>If<sp/>the<sp/>count<sp/>is<sp/>less<sp/>than</highlight></codeline>
<codeline lineno="1171"><highlight class="comment"><sp/>*<sp/>the<sp/>current<sp/>*cnt_ptr,<sp/>overwrite<sp/>cnt_ptr<sp/>with<sp/>a<sp/>new<sp/>minimum.<sp/><sp/>By<sp/>calling</highlight></codeline>
<codeline lineno="1172"><highlight class="comment"><sp/>*<sp/>this<sp/>when<sp/>each<sp/>of<sp/>S1,<sp/>S2,<sp/>...<sp/>Sn<sp/>reach<sp/>their<sp/>logical<sp/>stop<sp/>or<sp/>termiate</highlight></codeline>
<codeline lineno="1173"><highlight class="comment"><sp/>*<sp/>points,<sp/>*cnt_ptr<sp/>will<sp/>end<sp/>up<sp/>with<sp/>the<sp/>minimum<sp/>stop<sp/>count,<sp/>which<sp/>is<sp/>what</highlight></codeline>
<codeline lineno="1174"><highlight class="comment"><sp/>*<sp/>we<sp/>want.<sp/><sp/>NOTE:<sp/>the<sp/>logical<sp/>stop<sp/>time<sp/>and<sp/>terminate<sp/>for<sp/>signal<sp/>addition<sp/></highlight></codeline>
<codeline lineno="1175"><highlight class="comment"><sp/>*<sp/>should<sp/>be<sp/>the<sp/>MAX<sp/>of<sp/>logical<sp/>stop<sp/>times<sp/>of<sp/>arguments,<sp/>so<sp/>this<sp/>routine<sp/></highlight></codeline>
<codeline lineno="1176"><highlight class="comment"><sp/>*<sp/>would<sp/>not<sp/>be<sp/>used.</highlight></codeline>
<codeline lineno="1177"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1178" refid="sound_8h_1adbdf257a70eef35f48c655e16e8096c0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sound_8c_1adbdf257a70eef35f48c655e16e8096c0" kindref="member">min_cnt</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*cnt_ptr,<sp/><ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/>sound,<sp/><ref refid="structsnd__susp__struct" kindref="compound">snd_susp_type</ref><sp/>susp,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>cnt)</highlight></codeline>
<codeline lineno="1179"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref><sp/>=<sp/>(long)<sp/>((((sound-&gt;<ref refid="structsound__struct_1a36de08aa7f68cf01c3f197548bc3e00f" kindref="member">current</ref><sp/>-<sp/>cnt)<sp/>/<sp/>sound-&gt;<ref refid="structsound__struct_1aafecd01e13520f7fb83fe8e2ac2cd026" kindref="member">sr</ref><sp/>+<sp/>sound-&gt;<ref refid="structsound__struct_1a397d52ba2da4602200e85f49f62f28ea" kindref="member">t0</ref>)<sp/>-<sp/>susp-&gt;<ref refid="structsnd__susp__struct_1a5e783b62d30b458070fb80dc0e112594" kindref="member">t0</ref>)<sp/>*</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structsnd__susp__struct_1a89e4d9a7c1f50a9a0b4bca5ec1c253be" kindref="member">sr</ref><sp/>+<sp/>0.5);</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>*cnt_ptr<sp/>is<sp/>uninitialized,<sp/>just<sp/>plug<sp/>in<sp/>c,<sp/>otherwise<sp/>compute<sp/>min<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*cnt_ptr<sp/>==<sp/><ref refid="sound_8h_1ac1ae4add974b9cfc6b5aaf8a578f01ab" kindref="member">UNKNOWN</ref>)<sp/>||<sp/>(*cnt_ptr<sp/>&gt;<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>))<sp/>{</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nyquist_printf(&quot;min_cnt<sp/>%p:<sp/>new<sp/>count<sp/>is<sp/>%d\n&quot;,<sp/>susp,<sp/>c);*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1185"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(c<sp/>==<sp/>0)<sp/>sound_print_tree(printing_this_sound);*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*cnt_ptr<sp/>=<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>;</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"></highlight></codeline>
<codeline lineno="1190"><highlight class="normal"></highlight></codeline>
<codeline lineno="1191"><highlight class="normal"></highlight></codeline>
<codeline lineno="1192"><highlight class="normal"></highlight><highlight class="comment">/****************************************************************************</highlight></codeline>
<codeline lineno="1193"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sound_init</highlight></codeline>
<codeline lineno="1194"><highlight class="comment">*<sp/>Result:<sp/>void</highlight></codeline>
<codeline lineno="1195"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1196"><highlight class="comment">*<sp/>Effect:<sp/></highlight></codeline>
<codeline lineno="1197"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Module<sp/>initialization</highlight></codeline>
<codeline lineno="1198"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Allocates<sp/>the<sp/>&apos;zero<sp/>block&apos;,<sp/>the<sp/>infinitely<sp/>linked<sp/>block<sp/>of</highlight></codeline>
<codeline lineno="1199"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0-valued<sp/>sounds.<sp/><sp/>This<sp/>is<sp/>referenced<sp/>by<sp/>a<sp/>list<sp/>element<sp/>which</highlight></codeline>
<codeline lineno="1200"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>refers<sp/>to<sp/>itself.</highlight></codeline>
<codeline lineno="1201"><highlight class="comment">****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1202"><highlight class="normal"></highlight></codeline>
<codeline lineno="1203" refid="sound_8h_1a90e396bab2471f72285f290ce7a5cab1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sound_8c_1a90e396bab2471f72285f290ce7a5cab1" kindref="member">sound_init</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1204"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/>zero_block<sp/>=<sp/><ref refid="sound_8c_1a2171bf8fcdb76cb137865d9152ee86d1" kindref="member">make_zero_block</ref>();</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/>internal_zero_block<sp/>=<sp/><ref refid="sound_8c_1a2171bf8fcdb76cb137865d9152ee86d1" kindref="member">make_zero_block</ref>();</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"></highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="falloc_8h_1aad5599de2d7e9f1b7b7bee13b8e8b202" kindref="member">falloc_snd_list</ref>(zero_snd_list,<sp/></highlight><highlight class="stringliteral">&quot;sound_init&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"></highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/>zero_snd_list-&gt;<ref refid="structsnd__list__struct_1aaf6e754e36ceada326133f729fc4462c" kindref="member">block</ref><sp/>=<sp/><ref refid="sound_8c_1a5917e1ea52952f15fd755fa27432113b" kindref="member">zero_block</ref>;</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/>zero_snd_list-&gt;<ref refid="structsnd__list__struct_1a7eb4e39c02b1fa81d1000b204f888777" kindref="member">u</ref>.<ref refid="structsnd__list__struct_1a3a9e571a923a7496eabe0d721e497fbf" kindref="member">next</ref><sp/>=<sp/><ref refid="sound_8c_1aa08a9bd03e22919769a8f33094756c97" kindref="member">zero_snd_list</ref>;</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/>zero_snd_list-&gt;<ref refid="structsnd__list__struct_1a27044dc0ac840d508156da70b7b8eec5" kindref="member">refcnt</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/>zero_snd_list-&gt;<ref refid="structsnd__list__struct_1a809aedecf6147df4ec4b45404cfab414" kindref="member">block_len</ref><sp/>=<sp/><ref refid="sound_8h_1a3871670a207dd661a524b1328410fb0c" kindref="member">max_sample_block_len</ref>;</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/>zero_snd_list-&gt;<ref refid="structsnd__list__struct_1a09cdf89fd12d89166b27e4c3963420b3" kindref="member">logically_stopped</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>GC_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>;</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xlio_8c_1a48c6474ff667334385f7c6e4c350c51d" kindref="member">stdputstr</ref>(</highlight><highlight class="stringliteral">&quot;sound_to_watch:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>scanf(</highlight><highlight class="stringliteral">&quot;%p&quot;</highlight><highlight class="normal">,<sp/>&amp;s);</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libnyquist_2nyquist_2nyqsrc_2debug_8c_1a77ad68a525a0a49eb21e5dece1e4d809" kindref="member">watch_sound</ref>((<ref refid="structsound__struct" kindref="compound">sound_type</ref>)<sp/>s);</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/>sound_desc<sp/>=<sp/><ref refid="extern_8c_1a1bd70852ca0b14b29e26634a49680b3e" kindref="member">create_desc</ref>(</highlight><highlight class="stringliteral">&quot;SOUND&quot;</highlight><highlight class="normal">,<sp/>sound_xlfree,<sp/>sound_xlprint,</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sound_xlsave,<sp/>sound_xlrestore,<sp/><ref refid="sound_8c_1aacbcd25bfdd21a0dfd009fe0bfbe4ff5" kindref="member">sound_xlmark</ref>);</highlight></codeline>
<codeline lineno="1224"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>sound_scale<sp/>--<sp/>copy<sp/>and<sp/>change<sp/>scale<sp/>factor<sp/>of<sp/>a<sp/>sound<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"></highlight></codeline>
<codeline lineno="1229" refid="sound_8h_1a4fd068d71dfac231af7901a75a449921" refkind="member"><highlight class="normal"><ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/><ref refid="sound_8c_1a4fd068d71dfac231af7901a75a449921" kindref="member">sound_scale</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>factor,<sp/><ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/>snd)</highlight></codeline>
<codeline lineno="1230"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/>sndcopy<sp/>=<sp/><ref refid="sound_8c_1ad56b2f689f0d4897c4d2c79356d6102d" kindref="member">sound_copy</ref>(snd);</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/>sndcopy-&gt;<ref refid="structsound__struct_1a7531e5d5bc141fa994e5d787bb2dea01" kindref="member">scale</ref><sp/>*=<sp/>(float)<sp/>factor;</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sndcopy;</highlight></codeline>
<codeline lineno="1234"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"></highlight></codeline>
<codeline lineno="1236"><highlight class="normal"></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"></highlight></codeline>
<codeline lineno="1238"><highlight class="normal"></highlight></codeline>
<codeline lineno="1239"><highlight class="normal"></highlight><highlight class="comment">/****************************************************************************</highlight></codeline>
<codeline lineno="1240"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set_logical_stop_time</highlight></codeline>
<codeline lineno="1241"><highlight class="comment">*<sp/>Inputs:</highlight></codeline>
<codeline lineno="1242"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>sound_type<sp/>sound:<sp/>The<sp/>sound<sp/>for<sp/>which<sp/>the<sp/>logical<sp/>stop<sp/>time<sp/>is</highlight></codeline>
<codeline lineno="1243"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>being<sp/>set</highlight></codeline>
<codeline lineno="1244"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>time_type<sp/><sp/>when:<sp/><sp/>The<sp/>logical<sp/>stop<sp/>time,<sp/>expressed<sp/>as<sp/>an<sp/>absolute</highlight></codeline>
<codeline lineno="1245"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time.</highlight></codeline>
<codeline lineno="1246"><highlight class="comment">*<sp/>Result:<sp/>void</highlight></codeline>
<codeline lineno="1247"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1248"><highlight class="comment">*<sp/>Effect:<sp/></highlight></codeline>
<codeline lineno="1249"><highlight class="comment">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Converts<sp/>the<sp/>time<sp/>&apos;when&apos;<sp/>into<sp/>a<sp/>count<sp/>of<sp/>samples.</highlight></codeline>
<codeline lineno="1250"><highlight class="comment">****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1251"><highlight class="normal"></highlight></codeline>
<codeline lineno="1252" refid="sound_8h_1a7d9177f1dae17250734b5e794b6a3693" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sound_8c_1a7d9177f1dae17250734b5e794b6a3693" kindref="member">set_logical_stop_time</ref>(<ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/>sound,<sp/><ref refid="midifns_8h_1a3f787491db5dbc75c21b27d54e9ebae6" kindref="member">time_type</ref><sp/>when)</highlight></codeline>
<codeline lineno="1253"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1255"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;when&apos;<sp/>is<sp/>an<sp/>absolute<sp/>time.<sp/><sp/>The<sp/>number<sp/>of<sp/>samples<sp/>to</highlight></codeline>
<codeline lineno="1256"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>be<sp/>generated<sp/>is<sp/>the<sp/>number<sp/>of<sp/>samples<sp/>between<sp/>&apos;t0&apos;<sp/>and</highlight></codeline>
<codeline lineno="1257"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;when&apos;.</highlight></codeline>
<codeline lineno="1258"><highlight class="comment"></highlight></codeline>
<codeline lineno="1259"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-----------+---+---+---+---+---+---+---+---+---+</highlight></codeline>
<codeline lineno="1260"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="1261"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>when</highlight></codeline>
<codeline lineno="1262"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>(long)<sp/>((when<sp/>-<sp/>sound-&gt;<ref refid="structsound__struct_1a397d52ba2da4602200e85f49f62f28ea" kindref="member">t0</ref>)<sp/>*<sp/>sound-&gt;<ref refid="structsound__struct_1aafecd01e13520f7fb83fe8e2ac2cd026" kindref="member">sr</ref><sp/>+<sp/>0.5);</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xldbug_8c_1a8cb31d28c2a358aaaa88e0f47eb38e48" kindref="member">xlcerror</ref>(</highlight><highlight class="stringliteral">&quot;retain<sp/>the<sp/>current<sp/>logical<sp/>stop&quot;</highlight><highlight class="normal">,<sp/></highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;logical<sp/>stop<sp/>sample<sp/>count<sp/>is<sp/>negative&quot;</highlight><highlight class="normal">,<sp/><ref refid="macaboutbox_8c_1a263efce0e5cda1d387a1a43f94715445" kindref="member">NIL</ref>);</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sound-&gt;<ref refid="structsound__struct_1a51e65ef2c1784b5bc543a84ec90d5022" kindref="member">logical_stop_cnt</ref><sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1270"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"></highlight></codeline>
<codeline lineno="1272"><highlight class="normal"></highlight></codeline>
<codeline lineno="1273"><highlight class="normal"></highlight></codeline>
<codeline lineno="1274"><highlight class="normal"></highlight></codeline>
<codeline lineno="1275"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>for<sp/>debugging<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1276" refid="sound_8h_1a79c08354b8acb918288f80bb874a0cb6" refkind="member"><highlight class="normal"><ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/><ref refid="sound_8c_1a79c08354b8acb918288f80bb874a0cb6" kindref="member">printing_this_sound</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref><sp/>((**watch_me)())<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"></highlight></codeline>
<codeline lineno="1279" refid="sound_8c_1aa40f0efbfefafe4fed7e7e79bfcbb6db" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sound_8c_1aa40f0efbfefafe4fed7e7e79bfcbb6db" kindref="member">set_watch</ref>(where)</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref><sp/>((**where)());</highlight></codeline>
<codeline lineno="1281"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(watch_me<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>watch_me<sp/>=<sp/>where;</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unix_2switches_8h_1a3d365a416f619366e3a28a11b450739d" kindref="member">nyquist_printf</ref>(</highlight><highlight class="stringliteral">&quot;set_watch:<sp/>watch_me<sp/>=<sp/>%p\n&quot;</highlight><highlight class="normal">,<sp/>watch_me);</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1286"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"></highlight></codeline>
<codeline lineno="1288"><highlight class="normal"></highlight></codeline>
<codeline lineno="1289"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1290"><highlight class="comment"><sp/>*<sp/>additional<sp/>routines</highlight></codeline>
<codeline lineno="1291"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1292" refid="sound_8h_1a3a3e0212d60dce365cb9dd0df221cd80" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sound_8c_1a3a3e0212d60dce365cb9dd0df221cd80" kindref="member">sound_print</ref>(snd_expr,<sp/>n)</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>snd_expr;</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="1295"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>result;</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"></highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a1479676ad1c6de6f93ba2044c0685617" kindref="member">xlsave1</ref>(result);</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="xleval_8c_1a4e85c1af4b4cbfa71b83b42ebefb0a01" kindref="member">xleval</ref>(snd_expr);</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="xlisp_8h_1affd2148db1b3832bd3d27a6b1007b7ef" kindref="member">vectorp</ref>(result))<sp/>{</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>make<sp/>sure<sp/>all<sp/>elements<sp/>are<sp/>of<sp/>type<sp/>a_sound<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/><ref refid="xldmem_8h_1ac8d23305da5cbfcbe968123eec4faa2e" kindref="member">getsize</ref>(result);</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i--;</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="extern_8c_1a1676cd2b77ed1a51590fd74279b96312" kindref="member">exttypep</ref>(<ref refid="xldmem_8h_1a4eddccdfe02ec05157ff7e416a28420c" kindref="member">getelement</ref>(result,<sp/>i),<sp/>a_sound))<sp/>{</highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xldbug_8c_1a2d78bf523301185246193246684786a8" kindref="member">xlerror</ref>(</highlight><highlight class="stringliteral">&quot;sound_print:<sp/>array<sp/>has<sp/>non-sound<sp/>element&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result);</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sound_8c_1a0b6093bf05178c52868eab60bb518a16" kindref="member">sound_print_array</ref>(result,<sp/>n);</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="extern_8c_1a1676cd2b77ed1a51590fd74279b96312" kindref="member">exttypep</ref>(result,<sp/>a_sound))<sp/>{</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sound_8c_1a4071a7e76648a965b669219193b48378" kindref="member">sound_print_sound</ref>(<ref refid="sound_8h_1aa309e04f7a0ff565a69f56d34fd6f899" kindref="member">getsound</ref>(result),<sp/>n);</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xldbug_8c_1a2d78bf523301185246193246684786a8" kindref="member">xlerror</ref>(</highlight><highlight class="stringliteral">&quot;sound_print:<sp/>expression<sp/>did<sp/>not<sp/>return<sp/>a<sp/>sound&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result);</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a8069423ebe9363c35a5801edda92de02" kindref="member">xlpop</ref>();</highlight></codeline>
<codeline lineno="1318"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"></highlight></codeline>
<codeline lineno="1320"><highlight class="normal"></highlight></codeline>
<codeline lineno="1321" refid="sound_8c_1a4071a7e76648a965b669219193b48378" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sound_8c_1a4071a7e76648a965b669219193b48378" kindref="member">sound_print_sound</ref>(<ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="1322"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ntotal<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>blocklen;</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsample__block__node" kindref="compound">sample_block_type</ref><sp/>sampblock;</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"></highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>debugging<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/>printing_this_sound<sp/>=<sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>;</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"></highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unix_2switches_8h_1a3d365a416f619366e3a28a11b450739d" kindref="member">nyquist_printf</ref>(</highlight><highlight class="stringliteral">&quot;sound_print:<sp/>start<sp/>at<sp/>time<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>s-&gt;<ref refid="structsound__struct_1a397d52ba2da4602200e85f49f62f28ea" kindref="member">t0</ref>);</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"></highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(ntotal<sp/>&lt;<sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(s-&gt;<ref refid="structsound__struct_1a51e65ef2c1784b5bc543a84ec90d5022" kindref="member">logical_stop_cnt</ref><sp/>!=<sp/><ref refid="sound_8h_1ac1ae4add974b9cfc6b5aaf8a578f01ab" kindref="member">UNKNOWN</ref>)</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unix_2switches_8h_1a3d365a416f619366e3a28a11b450739d" kindref="member">nyquist_printf</ref>(</highlight><highlight class="stringliteral">&quot;LST=%d<sp/>&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)s-&gt;<ref refid="structsound__struct_1a51e65ef2c1784b5bc543a84ec90d5022" kindref="member">logical_stop_cnt</ref>);</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sound_8c_1aebbcea007dc8d74685f63045b16fc9ae" kindref="member">sound_print_tree</ref>(s);</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sampblock<sp/>=<sp/><ref refid="sound_8h_1ad30a7d8107577d30a6ecbfc322f2220c" kindref="member">sound_get_next</ref>(s,<sp/>&amp;blocklen);</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sampblock<sp/>==<sp/>zero_block<sp/>||<sp/>blocklen<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libnyquist_2nyquist_2nyqsrc_2debug_8c_1abf6d585b57e49e76eee63aa89fac7b9d" kindref="member">print_sample_block_type</ref>(</highlight><highlight class="stringliteral">&quot;sound_print&quot;</highlight><highlight class="normal">,<sp/>sampblock,</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libflac_2src_2lib_f_l_a_c_2include_2private_2macros_8h_1a74e75242132eaabbc1c512488a135926" kindref="member">MIN</ref>(blocklen,<sp/>n<sp/>-<sp/>ntotal));</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ntotal<sp/>+=<sp/>blocklen;</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unix_2switches_8h_1a3d365a416f619366e3a28a11b450739d" kindref="member">nyquist_printf</ref>(</highlight><highlight class="stringliteral">&quot;total<sp/>samples:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>ntotal);</highlight></codeline>
<codeline lineno="1345"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"></highlight></codeline>
<codeline lineno="1347"><highlight class="normal"></highlight></codeline>
<codeline lineno="1348" refid="sound_8c_1a0b6093bf05178c52868eab60bb518a16" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sound_8c_1a0b6093bf05178c52868eab60bb518a16" kindref="member">sound_print_array</ref>(<ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="lib-src_2libscorealign_2main_8cpp_1a1aa9083626d69f94349750d974f0359a" kindref="member">sa</ref>,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="1349"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>blocklen;</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>upper<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsample__block__node" kindref="compound">sample_block_type</ref><sp/>sampblock;</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="midifns_8h_1a3f787491db5dbc75c21b27d54e9ebae6" kindref="member">time_type</ref><sp/>t0,<sp/>tmax;</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"></highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/>len<sp/>=<sp/><ref refid="xldmem_8h_1ac8d23305da5cbfcbe968123eec4faa2e" kindref="member">getsize</ref>(sa);</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(len<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xlio_8c_1a48c6474ff667334385f7c6e4c350c51d" kindref="member">stdputstr</ref>(</highlight><highlight class="stringliteral">&quot;sound_print:<sp/>0<sp/>channels!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"></highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>take<sp/>care<sp/>of<sp/>prepending<sp/>zeros<sp/>if<sp/>necessary<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/>t0<sp/>=<sp/>tmax<sp/>=<sp/>(<ref refid="sound_8h_1aa309e04f7a0ff565a69f56d34fd6f899" kindref="member">getsound</ref>(<ref refid="xldmem_8h_1a4eddccdfe02ec05157ff7e416a28420c" kindref="member">getelement</ref>(sa,<sp/>0)))-&gt;t0;</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref><sp/>=<sp/><ref refid="sound_8h_1aa309e04f7a0ff565a69f56d34fd6f899" kindref="member">getsound</ref>(<ref refid="xldmem_8h_1a4eddccdfe02ec05157ff7e416a28420c" kindref="member">getelement</ref>(sa,<sp/>i));</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t0<sp/>=<sp/><ref refid="libflac_2src_2lib_f_l_a_c_2include_2private_2macros_8h_1a74e75242132eaabbc1c512488a135926" kindref="member">MIN</ref>(s-&gt;<ref refid="structsound__struct_1a397d52ba2da4602200e85f49f62f28ea" kindref="member">t0</ref>,<sp/>t0);</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmax<sp/>=<sp/><ref refid="libflac_2src_2lib_f_l_a_c_2include_2private_2macros_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(s-&gt;<ref refid="structsound__struct_1a397d52ba2da4602200e85f49f62f28ea" kindref="member">t0</ref>,<sp/>tmax);</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"></highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>necessary,<sp/>prepend<sp/>zeros<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t0<sp/>!=<sp/>tmax)<sp/>{</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xlio_8c_1a48c6474ff667334385f7c6e4c350c51d" kindref="member">stdputstr</ref>(</highlight><highlight class="stringliteral">&quot;prepending<sp/>zeros<sp/>to<sp/>channels:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref><sp/>=<sp/><ref refid="sound_8h_1aa309e04f7a0ff565a69f56d34fd6f899" kindref="member">getsound</ref>(<ref refid="xldmem_8h_1a4eddccdfe02ec05157ff7e416a28420c" kindref="member">getelement</ref>(sa,<sp/>i));</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t0<sp/>&lt;<sp/>s-&gt;t0)<sp/>{</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unix_2switches_8h_1a3d365a416f619366e3a28a11b450739d" kindref="member">nyquist_printf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>%d<sp/>&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)i);</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sound_8c_1a046a0aeb97b0ea49a76e8c7d031a5c12" kindref="member">sound_prepend_zeros</ref>(s,<sp/>t0);</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xlio_8c_1a48c6474ff667334385f7c6e4c350c51d" kindref="member">stdputstr</ref>(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"></highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unix_2switches_8h_1a3d365a416f619366e3a28a11b450739d" kindref="member">nyquist_printf</ref>(</highlight><highlight class="stringliteral">&quot;sound_print:<sp/>start<sp/>at<sp/>time<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>t0);</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"></highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(upper<sp/>&lt;<sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="midiclock_8c_1a5f689029e53f12e337967312e0a17717" kindref="member">done</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref><sp/>=<sp/><ref refid="sound_8h_1aa309e04f7a0ff565a69f56d34fd6f899" kindref="member">getsound</ref>(<ref refid="xldmem_8h_1a4eddccdfe02ec05157ff7e416a28420c" kindref="member">getelement</ref>(sa,<sp/>i));</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>current<sp/>=<sp/>-1;<sp/><sp/></highlight><highlight class="comment">/*<sp/>always<sp/>get<sp/>first<sp/>block<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(current<sp/>&lt;<sp/>upper)<sp/>{</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sampblock<sp/>=<sp/><ref refid="sound_8h_1ad30a7d8107577d30a6ecbfc322f2220c" kindref="member">sound_get_next</ref>(s,<sp/>&amp;blocklen);</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sampblock<sp/>!=<sp/>zero_block<sp/>&amp;&amp;<sp/>blocklen<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>done<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current<sp/>=<sp/>s-&gt;<ref refid="structsound__struct_1a36de08aa7f68cf01c3f197548bc3e00f" kindref="member">current</ref><sp/>-<sp/>blocklen;</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unix_2switches_8h_1a3d365a416f619366e3a28a11b450739d" kindref="member">nyquist_printf</ref>(</highlight><highlight class="stringliteral">&quot;chan<sp/>%d<sp/>current<sp/>%d:\n&quot;</highlight><highlight class="normal">,<sp/>i,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)current);</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libnyquist_2nyquist_2nyqsrc_2debug_8c_1abf6d585b57e49e76eee63aa89fac7b9d" kindref="member">print_sample_block_type</ref>(</highlight><highlight class="stringliteral">&quot;sound_print&quot;</highlight><highlight class="normal">,<sp/>sampblock,</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="libflac_2src_2lib_f_l_a_c_2include_2private_2macros_8h_1a74e75242132eaabbc1c512488a135926" kindref="member">MIN</ref>(blocklen,<sp/>n<sp/>-<sp/>current));</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current<sp/>=<sp/>s-&gt;<ref refid="structsound__struct_1a36de08aa7f68cf01c3f197548bc3e00f" kindref="member">current</ref>;</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>upper<sp/>=<sp/><ref refid="libflac_2src_2lib_f_l_a_c_2include_2private_2macros_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(upper,<sp/>current);</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(done)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unix_2switches_8h_1a3d365a416f619366e3a28a11b450739d" kindref="member">nyquist_printf</ref>(</highlight><highlight class="stringliteral">&quot;total:<sp/>%d<sp/>samples<sp/>x<sp/>%d<sp/>channels\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)upper,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)len);</highlight></codeline>
<codeline lineno="1408"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"></highlight></codeline>
<codeline lineno="1410"><highlight class="normal"></highlight></codeline>
<codeline lineno="1411"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>sound_play<sp/>--<sp/>compute<sp/>sound,<sp/>do<sp/>not<sp/>retain<sp/>samples<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1412"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1413"><highlight class="comment"><sp/>*<sp/>NOTE:<sp/>we<sp/>want<sp/>the<sp/>capability<sp/>of<sp/>computing<sp/>a<sp/>sound<sp/>without</highlight></codeline>
<codeline lineno="1414"><highlight class="comment"><sp/>*<sp/>retaining<sp/>samples.<sp/><sp/>This<sp/>requires<sp/>that<sp/>no<sp/>references<sp/>to</highlight></codeline>
<codeline lineno="1415"><highlight class="comment"><sp/>*<sp/>the<sp/>sound<sp/>exist,<sp/>but<sp/>if<sp/>the<sp/>sound<sp/>is<sp/>passed<sp/>as<sp/>an<sp/>argument,</highlight></codeline>
<codeline lineno="1416"><highlight class="comment"><sp/>*<sp/>the<sp/>argument<sp/>stack<sp/>will<sp/>have<sp/>a<sp/>reference.<sp/><sp/>So,<sp/>we<sp/>pass<sp/>in</highlight></codeline>
<codeline lineno="1417"><highlight class="comment"><sp/>*<sp/>an<sp/>expression<sp/>that<sp/>evaluates<sp/>to<sp/>the<sp/>sound<sp/>we<sp/>want.<sp/><sp/>The</highlight></codeline>
<codeline lineno="1418"><highlight class="comment"><sp/>*<sp/>expression<sp/>is<sp/>eval&apos;d,<sp/>the<sp/>result<sp/>copied<sp/>(in<sp/>case<sp/>the</highlight></codeline>
<codeline lineno="1419"><highlight class="comment"><sp/>*<sp/>expression<sp/>was<sp/>a<sp/>sound<sp/>or<sp/>a<sp/>global<sp/>variable<sp/>and<sp/>we<sp/>really</highlight></codeline>
<codeline lineno="1420"><highlight class="comment"><sp/>*<sp/>want<sp/>to<sp/>preserve<sp/>the<sp/>sound),<sp/>and<sp/>then<sp/>a<sp/>GC<sp/>is<sp/>run<sp/>to<sp/></highlight></codeline>
<codeline lineno="1421"><highlight class="comment"><sp/>*<sp/>get<sp/>rid<sp/>of<sp/>the<sp/>original<sp/>if<sp/>there<sp/>really<sp/>are<sp/>no<sp/>other<sp/></highlight></codeline>
<codeline lineno="1422"><highlight class="comment"><sp/>*<sp/>references.<sp/><sp/>Finally,<sp/>the<sp/>copy<sp/>is<sp/>used<sp/>to<sp/>play<sp/>the</highlight></codeline>
<codeline lineno="1423"><highlight class="comment"><sp/>*<sp/>sounds.</highlight></codeline>
<codeline lineno="1424"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1425"><highlight class="normal"></highlight></codeline>
<codeline lineno="1426" refid="sound_8h_1ac1232bd6c437f8d42c94015001e12539" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sound_8c_1ac1232bd6c437f8d42c94015001e12539" kindref="member">sound_play</ref>(snd_expr)</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>snd_expr;</highlight></codeline>
<codeline lineno="1428"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ntotal;</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>blocklen;</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsample__block__node" kindref="compound">sample_block_type</ref><sp/>sampblock;</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>result;</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>;</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"></highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a1479676ad1c6de6f93ba2044c0685617" kindref="member">xlsave1</ref>(result);</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="xleval_8c_1a4e85c1af4b4cbfa71b83b42ebefb0a01" kindref="member">xleval</ref>(snd_expr);</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="extern_8c_1a1676cd2b77ed1a51590fd74279b96312" kindref="member">exttypep</ref>(result,<sp/>a_sound))<sp/>{</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xldbug_8c_1a2d78bf523301185246193246684786a8" kindref="member">xlerror</ref>(</highlight><highlight class="stringliteral">&quot;sound_play:<sp/>expression<sp/>did<sp/>not<sp/>return<sp/>a<sp/>sound&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result);</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"></highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/>ntotal<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>=<sp/><ref refid="sound_8h_1aa309e04f7a0ff565a69f56d34fd6f899" kindref="member">getsound</ref>(result);</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>snd_expr<sp/>was<sp/>simply<sp/>a<sp/>symbol,<sp/>then<sp/>s<sp/>now<sp/>points<sp/>to</highlight></codeline>
<codeline lineno="1445"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>shared<sp/>sound_node.<sp/><sp/>If<sp/>we<sp/>read<sp/>samples<sp/>from<sp/>it,<sp/>then</highlight></codeline>
<codeline lineno="1446"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>sound<sp/>bound<sp/>to<sp/>the<sp/>symbol<sp/>will<sp/>be<sp/>destroyed,<sp/>so</highlight></codeline>
<codeline lineno="1447"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copy<sp/>it<sp/>first.<sp/><sp/>If<sp/>snd_expr<sp/>was<sp/>a<sp/>real<sp/>expression<sp/>that</highlight></codeline>
<codeline lineno="1448"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>computed<sp/>a<sp/>new<sp/>value,<sp/>then<sp/>the<sp/>next<sp/>garbage<sp/>collection</highlight></codeline>
<codeline lineno="1449"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>will<sp/>reclaim<sp/>the<sp/>sound_node.<sp/><sp/>We<sp/>need<sp/>to<sp/>explicitly<sp/></highlight></codeline>
<codeline lineno="1450"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free<sp/>the<sp/>copy<sp/>since<sp/>the<sp/>garbage<sp/>collector<sp/>cannot<sp/>find</highlight></codeline>
<codeline lineno="1451"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it.</highlight></codeline>
<codeline lineno="1452"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/>s<sp/>=<sp/><ref refid="sound_8c_1ad56b2f689f0d4897c4d2c79356d6102d" kindref="member">sound_copy</ref>(s);</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)<sp/>{</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>OSC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nosc_enabled)<sp/><ref refid="nyq-osc-server_8h_1ac5bcfe551b6988e4dafd87b089b28eff" kindref="member">nosc_poll</ref>();</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sampblock<sp/>=<sp/><ref refid="sound_8h_1ad30a7d8107577d30a6ecbfc322f2220c" kindref="member">sound_get_next</ref>(s,<sp/>&amp;blocklen);</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sampblock<sp/>==<sp/>zero_block<sp/>||<sp/>blocklen<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>print_sample_block_type(&quot;sound_play&quot;,<sp/>sampblock,<sp/>blocklen);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ntotal<sp/>+=<sp/>blocklen;</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unix_2switches_8h_1a3d365a416f619366e3a28a11b450739d" kindref="member">nyquist_printf</ref>(</highlight><highlight class="stringliteral">&quot;total<sp/>samples:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>ntotal);</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sound_8c_1a6160c7ed8621e6ca60d9c0875cd25f9f" kindref="member">sound_unref</ref>(s);</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1a8069423ebe9363c35a5801edda92de02" kindref="member">xlpop</ref>();</highlight></codeline>
<codeline lineno="1468"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"></highlight></codeline>
<codeline lineno="1470"><highlight class="normal"></highlight></codeline>
<codeline lineno="1471"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>sound_print_tree<sp/>--<sp/>print<sp/>a<sp/>tree<sp/>version<sp/>of<sp/>sound<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1472"><highlight class="normal"></highlight></codeline>
<codeline lineno="1473" refid="sound_8h_1aebbcea007dc8d74685f63045b16fc9ae" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sound_8c_1aebbcea007dc8d74685f63045b16fc9ae" kindref="member">sound_print_tree</ref>(snd)</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/>snd;</highlight></codeline>
<codeline lineno="1475"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>nyquist_printf(&quot;sample_block_free<sp/>%p\n&quot;,<sp/>sample_block_free);*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unix_2switches_8h_1a3d365a416f619366e3a28a11b450739d" kindref="member">nyquist_printf</ref>(</highlight><highlight class="stringliteral">&quot;SOUND<sp/>PRINT<sp/>TREE<sp/>of<sp/>%p\n&quot;</highlight><highlight class="normal">,<sp/>snd);</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sound_8c_1a1b2ca7c132e90e3ded840d25f8baa088" kindref="member">sound_print_tree_1</ref>(snd,<sp/>0);</highlight></codeline>
<codeline lineno="1479"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"></highlight></codeline>
<codeline lineno="1481"><highlight class="normal"></highlight></codeline>
<codeline lineno="1482" refid="sound_8h_1ad9f5e076a5a83912c647d0164fd9cf98" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sound_8c_1ad9f5e076a5a83912c647d0164fd9cf98" kindref="member">indent</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="1483"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(n--<sp/>&gt;<sp/>0)<sp/><ref refid="xlio_8c_1a48c6474ff667334385f7c6e4c350c51d" kindref="member">stdputstr</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1485"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"></highlight></codeline>
<codeline lineno="1487"><highlight class="normal"></highlight></codeline>
<codeline lineno="1488" refid="sound_8h_1a1b2ca7c132e90e3ded840d25f8baa088" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sound_8c_1a1b2ca7c132e90e3ded840d25f8baa088" kindref="member">sound_print_tree_1</ref>(snd,<sp/>n)</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/>snd;</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="1491"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsnd__list__struct" kindref="compound">snd_list_type</ref><sp/>snd_list;</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&gt;<sp/>100)<sp/>{</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xlio_8c_1a48c6474ff667334385f7c6e4c350c51d" kindref="member">stdputstr</ref>(</highlight><highlight class="stringliteral">&quot;...<sp/>(skipping<sp/>remainder<sp/>of<sp/>sound)\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!snd)<sp/>{</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xlio_8c_1a48c6474ff667334385f7c6e4c350c51d" kindref="member">stdputstr</ref>(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unix_2switches_8h_1a3d365a416f619366e3a28a11b450739d" kindref="member">nyquist_printf</ref>(</highlight><highlight class="stringliteral">&quot;sound_type@%p(%s@%p)t0<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%g<sp/>stop<sp/>%d<sp/>sr<sp/>%g<sp/>lsc<sp/>%d<sp/>scale<sp/>%g<sp/>pc<sp/>%d&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd,<sp/></highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(snd-&gt;get_next<sp/>==<sp/><ref refid="sound_8c_1ac694fd59be7fbed8953aa95ed982df22" kindref="member">SND_get_next</ref><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;SND_get_next&quot;</highlight><highlight class="normal"><sp/>:</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(snd-&gt;get_next<sp/>==<sp/><ref refid="sound_8c_1a650fb27c3f53d3ff92c00561020d5684" kindref="member">SND_get_first</ref><sp/>?<sp/></highlight><highlight class="stringliteral">&quot;SND_get_first&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;?&quot;</highlight><highlight class="normal">)),</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd-&gt;get_next,<sp/>snd-&gt;t0,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)snd-&gt;stop,<sp/>snd-&gt;sr,<sp/></highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)snd-&gt;logical_stop_cnt,<sp/>snd-&gt;scale,</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)snd-&gt;prepend_cnt);</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_list<sp/>=<sp/>snd-&gt;list;</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unix_2switches_8h_1a3d365a416f619366e3a28a11b450739d" kindref="member">nyquist_printf</ref>(</highlight><highlight class="stringliteral">&quot;-&gt;snd_list@%p&quot;</highlight><highlight class="normal">,<sp/>snd_list);</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(snd_list<sp/>==<sp/>zero_snd_list)<sp/>{</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xlio_8c_1a48c6474ff667334385f7c6e4c350c51d" kindref="member">stdputstr</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>=<sp/>zero_snd_list\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(snd_list<sp/>==<sp/>zero_snd_list)<sp/>{</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;<sp/>1)<sp/><ref refid="unix_2switches_8h_1a3d365a416f619366e3a28a11b450739d" kindref="member">nyquist_printf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>(skipping<sp/>%d)<sp/>&quot;</highlight><highlight class="normal">,<sp/>i-1);</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xlio_8c_1a48c6474ff667334385f7c6e4c350c51d" kindref="member">stdputstr</ref>(</highlight><highlight class="stringliteral">&quot;-&gt;zero_snd_list\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!snd_list-&gt;<ref refid="structsnd__list__struct_1aaf6e754e36ceada326133f729fc4462c" kindref="member">block</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;<sp/>0)<sp/><ref refid="unix_2switches_8h_1a3d365a416f619366e3a28a11b450739d" kindref="member">nyquist_printf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>(skipping<sp/>%d)<sp/>&quot;</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xlio_8c_1a48c6474ff667334385f7c6e4c350c51d" kindref="member">stdputstr</ref>(</highlight><highlight class="stringliteral">&quot;-&gt;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sound_8c_1ad9f5e076a5a83912c647d0164fd9cf98" kindref="member">indent</ref>(n<sp/>+<sp/>2);</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"></highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unix_2switches_8h_1a3d365a416f619366e3a28a11b450739d" kindref="member">nyquist_printf</ref>(</highlight><highlight class="stringliteral">&quot;susp@%p(%s)toss_cnt<sp/>%d<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;current<sp/>%d<sp/>lsc<sp/>%d<sp/>sr<sp/>%g<sp/>t0<sp/>%g<sp/>%p\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd_list-&gt;<ref refid="structsnd__list__struct_1a7eb4e39c02b1fa81d1000b204f888777" kindref="member">u</ref>.<ref refid="structsnd__list__struct_1a57f7d6b31a871ee6d94757b409f636ee" kindref="member">susp</ref>,<sp/>snd_list-&gt;<ref refid="structsnd__list__struct_1a7eb4e39c02b1fa81d1000b204f888777" kindref="member">u</ref>.<ref refid="structsnd__list__struct_1a57f7d6b31a871ee6d94757b409f636ee" kindref="member">susp</ref>-&gt;<ref refid="structsnd__susp__struct_1a4d5fa6ba6ea209e5159d06ea00320041" kindref="member">name</ref>,</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)snd_list-&gt;<ref refid="structsnd__list__struct_1a7eb4e39c02b1fa81d1000b204f888777" kindref="member">u</ref>.<ref refid="structsnd__list__struct_1a57f7d6b31a871ee6d94757b409f636ee" kindref="member">susp</ref>-&gt;<ref refid="structsnd__susp__struct_1afc2b723720dc47ea6889620660684494" kindref="member">toss_cnt</ref>,</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)snd_list-&gt;<ref refid="structsnd__list__struct_1a7eb4e39c02b1fa81d1000b204f888777" kindref="member">u</ref>.<ref refid="structsnd__list__struct_1a57f7d6b31a871ee6d94757b409f636ee" kindref="member">susp</ref>-&gt;<ref refid="structsnd__susp__struct_1a8f9e3b02c2fc0ccbb63d88b97d44c89c" kindref="member">current</ref>,</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)snd_list-&gt;<ref refid="structsnd__list__struct_1a7eb4e39c02b1fa81d1000b204f888777" kindref="member">u</ref>.<ref refid="structsnd__list__struct_1a57f7d6b31a871ee6d94757b409f636ee" kindref="member">susp</ref>-&gt;<ref refid="structsnd__susp__struct_1a8044ae9d2cfcbccffd2a60c9b6ce16fa" kindref="member">log_stop_cnt</ref>,</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd_list-&gt;<ref refid="structsnd__list__struct_1a7eb4e39c02b1fa81d1000b204f888777" kindref="member">u</ref>.<ref refid="structsnd__list__struct_1a57f7d6b31a871ee6d94757b409f636ee" kindref="member">susp</ref>-&gt;<ref refid="structsnd__susp__struct_1a89e4d9a7c1f50a9a0b4bca5ec1c253be" kindref="member">sr</ref>,</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd_list-&gt;<ref refid="structsnd__list__struct_1a7eb4e39c02b1fa81d1000b204f888777" kindref="member">u</ref>.<ref refid="structsnd__list__struct_1a57f7d6b31a871ee6d94757b409f636ee" kindref="member">susp</ref>-&gt;<ref refid="structsnd__susp__struct_1a5e783b62d30b458070fb80dc0e112594" kindref="member">t0</ref>,<sp/>snd_list);</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stdputstr(&quot;HI<sp/>THERE<sp/>AGAIN\n&quot;);*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sound_8h_1a0d632a71d6148e97ea2e0152e2453245" kindref="member">susp_print_tree</ref>(snd_list-&gt;<ref refid="structsnd__list__struct_1a7eb4e39c02b1fa81d1000b204f888777" kindref="member">u</ref>.<ref refid="structsnd__list__struct_1a57f7d6b31a871ee6d94757b409f636ee" kindref="member">susp</ref>,<sp/>n<sp/>+<sp/>4);</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd_list<sp/>=<sp/>snd_list-&gt;<ref refid="structsnd__list__struct_1a7eb4e39c02b1fa81d1000b204f888777" kindref="member">u</ref>.<ref refid="structsnd__list__struct_1a3a9e571a923a7496eabe0d721e497fbf" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1541"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"></highlight></codeline>
<codeline lineno="1543"><highlight class="normal"></highlight></codeline>
<codeline lineno="1544"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>mark_audio_time<sp/>--<sp/>record<sp/>the<sp/>current<sp/>playback<sp/>time</highlight></codeline>
<codeline lineno="1545"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1546"><highlight class="comment"><sp/>*<sp/>The<sp/>global<sp/>variable<sp/>*audio-markers*<sp/>is<sp/>treated<sp/>as<sp/>a<sp/>list.</highlight></codeline>
<codeline lineno="1547"><highlight class="comment"><sp/>*<sp/>When<sp/>the<sp/>user<sp/>types<sp/>^Q,<sp/>this<sp/>function<sp/>pushes<sp/>the<sp/>current</highlight></codeline>
<codeline lineno="1548"><highlight class="comment"><sp/>*<sp/>playback<sp/>time<sp/>onto<sp/>the<sp/>list</highlight></codeline>
<codeline lineno="1549"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1550" refid="sound_8h_1ab4047729924110f82626d3832c83f73c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sound_8c_1acc801867875aabf005a24c2ab032f5d2" kindref="member">mark_audio_time</ref>()</highlight></codeline>
<codeline lineno="1551"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>playback_time<sp/>=<sp/><ref refid="sound_8c_1a2ecc6ba52c5cf3f8f8ccb8ab5cdbccc6" kindref="member">sound_frames</ref><sp/>/<sp/><ref refid="sound_8c_1a1cec2b7e0c0b8951727ead5e11ef2a2e" kindref="member">sound_srate</ref><sp/>-<sp/><ref refid="sound_8c_1ae885833c5fdfbcfe484f29c244f1e484" kindref="member">sound_latency</ref>;</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">LVAL</ref><sp/>time_node<sp/>=<sp/><ref refid="xldmem_8c_1a136914cbe882831bbdd74a24b58c4759" kindref="member">cvflonum</ref>(playback_time);</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xldmem_8h_1a33a12513106306e76f1f5d03f63a93b7" kindref="member">setvalue</ref>(s_audio_markers,<sp/><ref refid="xldmem_8c_1a6020b108cda9dc1cb27b748db6afef0a" kindref="member">cons</ref>(time_node,<sp/><ref refid="xldmem_8h_1af0fb697ae6fccf70ca9cc23a58dabd22" kindref="member">getvalue</ref>(s_audio_markers)));</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="userio_8c_1aa7fe1fd5a722b3baba97b2fb02fa73a1" kindref="member">gprintf</ref>(<ref refid="userio_8h_1abf9c248762203aeb01092b253484d6e0" kindref="member">TRANS</ref>,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>%g<sp/>&quot;</highlight><highlight class="normal">,<sp/>playback_time);<sp/></highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1a0491ca59ff11d37e0e71589ce262a30c" kindref="member">fflush</ref>(<ref refid="namespacewaflib_1_1ansiterm_1acf95a6e21629de2ca2b5716f5089f3f0" kindref="member">stdout</ref>);</highlight></codeline>
<codeline lineno="1557"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"></highlight></codeline>
<codeline lineno="1559"><highlight class="normal"></highlight></codeline>
<codeline lineno="1560"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>compute<sp/>constants<sp/>p1<sp/>and<sp/>p2:</highlight></codeline>
<codeline lineno="1561"><highlight class="comment"><sp/><sp/>pitchconvert(0)<sp/>*<sp/>2<sp/>=<sp/>pitchconvert(12)<sp/><sp/>-<sp/>octaves</highlight></codeline>
<codeline lineno="1562"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exp(p2)<sp/>*<sp/>2<sp/>=<sp/>exp(12<sp/>*<sp/>p1<sp/>+<sp/>p2)</highlight></codeline>
<codeline lineno="1563"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2<sp/>=<sp/>exp(12<sp/>*<sp/>p1)</highlight></codeline>
<codeline lineno="1564"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log(2)<sp/>=<sp/>12<sp/>*<sp/>p1</highlight></codeline>
<codeline lineno="1565"><highlight class="comment"></highlight></codeline>
<codeline lineno="1566"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p1<sp/>=<sp/>log(2.0)/12;</highlight></codeline>
<codeline lineno="1567"><highlight class="comment"></highlight></codeline>
<codeline lineno="1568"><highlight class="comment"><sp/><sp/>pitchconvert(69)<sp/>gives<sp/>440Hz</highlight></codeline>
<codeline lineno="1569"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exp(69<sp/>*<sp/>p1<sp/>+<sp/>p2)<sp/>=<sp/>440</highlight></codeline>
<codeline lineno="1570"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>69<sp/>*<sp/>p1<sp/>+<sp/>p2<sp/>=<sp/>log(440)</highlight></codeline>
<codeline lineno="1571"><highlight class="comment"></highlight></codeline>
<codeline lineno="1572"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p2<sp/>=<sp/>log(440.0)<sp/>-<sp/>(69<sp/>*<sp/>p1);</highlight></codeline>
<codeline lineno="1573"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1574"><highlight class="normal"></highlight></codeline>
<codeline lineno="1575" refid="sound_8c_1ad86bc04f7f667b1bdced8a0f06d96861" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>p1<sp/>0.0577622650466621</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1576" refid="sound_8c_1a938e6a2861f684cc1f7e2de661446e35" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>p2<sp/>2.1011784386926213</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1577"><highlight class="normal"></highlight></codeline>
<codeline lineno="1578"><highlight class="normal"></highlight></codeline>
<codeline lineno="1579" refid="sound_8h_1a11d189f0e512a5779c0c20394d888d7d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="sound_8c_1adca6dd4416ad7e867320eca799f922b5" kindref="member">hz_to_step</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>hz)</highlight></codeline>
<codeline lineno="1580"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(log(hz)<sp/>-<sp/><ref refid="sound_8c_1a938e6a2861f684cc1f7e2de661446e35" kindref="member">p2</ref>)<sp/>/<sp/><ref refid="sound_8c_1ad86bc04f7f667b1bdced8a0f06d96861" kindref="member">p1</ref>;</highlight></codeline>
<codeline lineno="1582"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"></highlight></codeline>
<codeline lineno="1584"><highlight class="normal"></highlight></codeline>
<codeline lineno="1585" refid="sound_8h_1a9e8db2ce8bb5d700b3e1b23b246f2eda" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="sound_8c_1aa21f4301ed3b3447d7c7e90a132ac8c1" kindref="member">step_to_hz</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>steps)</highlight></codeline>
<codeline lineno="1586"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>exp(steps<sp/>*<sp/><ref refid="sound_8c_1ad86bc04f7f667b1bdced8a0f06d96861" kindref="member">p1</ref><sp/>+<sp/><ref refid="sound_8c_1a938e6a2861f684cc1f7e2de661446e35" kindref="member">p2</ref>);</highlight></codeline>
<codeline lineno="1588"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"></highlight></codeline>
<codeline lineno="1590"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1591"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_MSC_VER<sp/>&lt;<sp/>1800</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1592"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RECIP_LOG_2<sp/>1.44269504088895364453</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1593"><highlight class="normal"></highlight></codeline>
<codeline lineno="1594"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>log2(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacewaflib_1_1_utils_1a15fc4f04cecad81fba9772c4e43d40f7" kindref="member">x</ref>)</highlight></codeline>
<codeline lineno="1595"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>log(x)<sp/>*<sp/>RECIP_LOG_2;</highlight></codeline>
<codeline lineno="1597"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1599"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1600"><highlight class="normal"></highlight></codeline>
<codeline lineno="1601"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1602"><highlight class="comment"><sp/>*<sp/>from<sp/>old<sp/>stuff...</highlight></codeline>
<codeline lineno="1603"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1604"><highlight class="normal"></highlight></codeline>
<codeline lineno="1605"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sound_xlfree(<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>)</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>;</highlight></codeline>
<codeline lineno="1607"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>nyquist_printf(&quot;sound_xlfree(%p)\n&quot;,<sp/>s);*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sound_8c_1a6160c7ed8621e6ca60d9c0875cd25f9f" kindref="member">sound_unref</ref>(s);</highlight></codeline>
<codeline lineno="1610"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"></highlight></codeline>
<codeline lineno="1612"><highlight class="normal"></highlight></codeline>
<codeline lineno="1613"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sound_xlprint(<ref refid="structnode" kindref="compound">LVAL</ref><sp/>fptr,<sp/><ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/>s)</highlight></codeline>
<codeline lineno="1614"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>type<sp/>cast<sp/>from<sp/>s<sp/>to<sp/>LVAL<sp/>is<sp/>OK<sp/>because</highlight></codeline>
<codeline lineno="1616"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>putatm<sp/>does<sp/>not<sp/>dereference<sp/>the<sp/>3rd<sp/>parameter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlisp_8h_1abd5324bec4c05a027a0fd06b87a7ea89" kindref="member">putatm</ref>(fptr,<sp/></highlight><highlight class="stringliteral">&quot;Sound&quot;</highlight><highlight class="normal">,<sp/>(<ref refid="structnode" kindref="compound">LVAL</ref>)<sp/>s);</highlight></codeline>
<codeline lineno="1618"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"></highlight></codeline>
<codeline lineno="1620"><highlight class="normal"></highlight></codeline>
<codeline lineno="1621"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>sound_xlsave(fp,<sp/>s)</highlight></codeline>
<codeline lineno="1622"><highlight class="normal">FILE<sp/>*fp;</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>;</highlight></codeline>
<codeline lineno="1624"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlio_8c_1a48c6474ff667334385f7c6e4c350c51d" kindref="member">stdputstr</ref>(</highlight><highlight class="stringliteral">&quot;sound_save<sp/>called\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1626"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"></highlight></codeline>
<codeline lineno="1628"><highlight class="normal"></highlight></codeline>
<codeline lineno="1629"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*sound_xlrestore(FILE<sp/>*fp)</highlight></codeline>
<codeline lineno="1630"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><ref refid="xlio_8c_1a48c6474ff667334385f7c6e4c350c51d" kindref="member">stdputstr</ref>(</highlight><highlight class="stringliteral">&quot;sound_restore<sp/>called\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1633"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"></highlight></codeline>
<codeline lineno="1635"><highlight class="normal"></highlight></codeline>
<codeline lineno="1636"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>sound_xlmark<sp/>--<sp/>mark<sp/>LVAL<sp/>nodes<sp/>reachable<sp/>from<sp/>this<sp/>sound<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1637"><highlight class="normal"></highlight></codeline>
<codeline lineno="1638" refid="sound_8h_1aacbcd25bfdd21a0dfd009fe0bfbe4ff5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sound_8c_1aacbcd25bfdd21a0dfd009fe0bfbe4ff5" kindref="member">sound_xlmark</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*a_sound)</highlight></codeline>
<codeline lineno="1639"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/>s<sp/>=<sp/>(<ref refid="sound_8h_1a792cec4ed9d6d636d342d9365ba265ea" kindref="member">sound_type</ref>)<sp/>a_sound;</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsnd__list__struct" kindref="compound">snd_list_type</ref><sp/>snd_list;</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="namespacemw2html_1a1883350fdf7ae46dbc49d9efc4dace3b" kindref="member">counter</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>TRACESNDGC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="unix_2switches_8h_1a3d365a416f619366e3a28a11b450739d" kindref="member">nyquist_printf</ref>(</highlight><highlight class="stringliteral">&quot;sound_xlmark(%p)\n&quot;</highlight><highlight class="normal">,<sp/>s);</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!s)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">/*<sp/>pointers<sp/>to<sp/>sounds<sp/>are<sp/>sometimes<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_list<sp/>=<sp/>s-&gt;<ref refid="structsound__struct_1abe0c2ecf4e89d7d8e679adb01442fd60" kindref="member">list</ref>;</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(snd_list-&gt;<ref refid="structsnd__list__struct_1aaf6e754e36ceada326133f729fc4462c" kindref="member">block</ref><sp/>!=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(snd_list<sp/>==<sp/>zero_snd_list)<sp/>{</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>TRACESNDGC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xlio_8c_1a48c6474ff667334385f7c6e4c350c51d" kindref="member">stdputstr</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>terminates<sp/>at<sp/>zero_snd_list\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(counter<sp/>&gt;<sp/>1000000)<sp/>{</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xlio_8c_1a48c6474ff667334385f7c6e4c350c51d" kindref="member">stdputstr</ref>(</highlight><highlight class="stringliteral">&quot;You<sp/>created<sp/>a<sp/>recursive<sp/>sound!<sp/>This<sp/>is<sp/>a<sp/>Nyquist<sp/>bug.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xlio_8c_1a48c6474ff667334385f7c6e4c350c51d" kindref="member">stdputstr</ref>(</highlight><highlight class="stringliteral">&quot;The<sp/>only<sp/>known<sp/>way<sp/>to<sp/>do<sp/>this<sp/>is<sp/>by<sp/>a<sp/>SETF<sp/>on<sp/>a\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xlio_8c_1a48c6474ff667334385f7c6e4c350c51d" kindref="member">stdputstr</ref>(</highlight><highlight class="stringliteral">&quot;local<sp/>variable<sp/>or<sp/>parameter<sp/>that<sp/>is<sp/>being<sp/>passed<sp/>to<sp/>SEQ\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xlio_8c_1a48c6474ff667334385f7c6e4c350c51d" kindref="member">stdputstr</ref>(</highlight><highlight class="stringliteral">&quot;or<sp/>SEQREP.<sp/>The<sp/>garbage<sp/>collector<sp/>assumes<sp/>that<sp/>sounds<sp/>are\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xlio_8c_1a48c6474ff667334385f7c6e4c350c51d" kindref="member">stdputstr</ref>(</highlight><highlight class="stringliteral">&quot;not<sp/>recursive<sp/>or<sp/>circular,<sp/>and<sp/>follows<sp/>sounds<sp/>to<sp/>their\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xlio_8c_1a48c6474ff667334385f7c6e4c350c51d" kindref="member">stdputstr</ref>(</highlight><highlight class="stringliteral">&quot;end.<sp/>After<sp/>following<sp/>a<sp/>million<sp/>nodes,<sp/>I&apos;m<sp/>pretty<sp/>sure\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xlio_8c_1a48c6474ff667334385f7c6e4c350c51d" kindref="member">stdputstr</ref>(</highlight><highlight class="stringliteral">&quot;that<sp/>there<sp/>is<sp/>a<sp/>cycle<sp/>here,<sp/>but<sp/>since<sp/>this<sp/>is<sp/>a<sp/>bug,\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xlio_8c_1a48c6474ff667334385f7c6e4c350c51d" kindref="member">stdputstr</ref>(</highlight><highlight class="stringliteral">&quot;I<sp/>cannot<sp/>promise<sp/>to<sp/>recover.<sp/>Prepare<sp/>to<sp/>crash.<sp/>If<sp/>you\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="xlio_8c_1a48c6474ff667334385f7c6e4c350c51d" kindref="member">stdputstr</ref>(</highlight><highlight class="stringliteral">&quot;cannot<sp/>locate<sp/>the<sp/>cause<sp/>of<sp/>this,<sp/>contact<sp/>the<sp/>author<sp/>-RBD.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd_list<sp/>=<sp/>snd_list-&gt;<ref refid="structsnd__list__struct_1a7eb4e39c02b1fa81d1000b204f888777" kindref="member">u</ref>.<ref refid="structsnd__list__struct_1a3a9e571a923a7496eabe0d721e497fbf" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>counter++;</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(snd_list-&gt;<ref refid="structsnd__list__struct_1a7eb4e39c02b1fa81d1000b204f888777" kindref="member">u</ref>.<ref refid="structsnd__list__struct_1a57f7d6b31a871ee6d94757b409f636ee" kindref="member">susp</ref>-&gt;<ref refid="structsnd__susp__struct_1a077478e200df3bc42489892597f15d47" kindref="member">mark</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>TRACESNDGC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unix_2switches_8h_1a3d365a416f619366e3a28a11b450739d" kindref="member">nyquist_printf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>found<sp/>susp<sp/>(%s)<sp/>at<sp/>%p<sp/>with<sp/>mark<sp/>method\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd_list-&gt;<ref refid="structsnd__list__struct_1a7eb4e39c02b1fa81d1000b204f888777" kindref="member">u</ref>.<ref refid="structsnd__list__struct_1a57f7d6b31a871ee6d94757b409f636ee" kindref="member">susp</ref>-&gt;<ref refid="structsnd__susp__struct_1a4d5fa6ba6ea209e5159d06ea00320041" kindref="member">name</ref>,<sp/>snd_list-&gt;<ref refid="structsnd__list__struct_1a7eb4e39c02b1fa81d1000b204f888777" kindref="member">u</ref>.<ref refid="structsnd__list__struct_1a57f7d6b31a871ee6d94757b409f636ee" kindref="member">susp</ref>);</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*(snd_list-&gt;<ref refid="structsnd__list__struct_1a7eb4e39c02b1fa81d1000b204f888777" kindref="member">u</ref>.<ref refid="structsnd__list__struct_1a57f7d6b31a871ee6d94757b409f636ee" kindref="member">susp</ref>-&gt;<ref refid="structsnd__susp__struct_1a077478e200df3bc42489892597f15d47" kindref="member">mark</ref>))(snd_list-&gt;<ref refid="structsnd__list__struct_1a7eb4e39c02b1fa81d1000b204f888777" kindref="member">u</ref>.<ref refid="structsnd__list__struct_1a57f7d6b31a871ee6d94757b409f636ee" kindref="member">susp</ref>);</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>TRACESNDGC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="unix_2switches_8h_1a3d365a416f619366e3a28a11b450739d" kindref="member">nyquist_printf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>no<sp/>mark<sp/>method<sp/>on<sp/>susp<sp/>%p<sp/>(%s)\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd_list-&gt;<ref refid="structsnd__list__struct_1a7eb4e39c02b1fa81d1000b204f888777" kindref="member">u</ref>.<ref refid="structsnd__list__struct_1a57f7d6b31a871ee6d94757b409f636ee" kindref="member">susp</ref>,<sp/>snd_list-&gt;<ref refid="structsnd__list__struct_1a7eb4e39c02b1fa81d1000b204f888777" kindref="member">u</ref>.<ref refid="structsnd__list__struct_1a57f7d6b31a871ee6d94757b409f636ee" kindref="member">susp</ref>-&gt;<ref refid="structsnd__susp__struct_1a4d5fa6ba6ea209e5159d06ea00320041" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1680"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"></highlight></codeline>
<codeline lineno="1682"><highlight class="normal"></highlight></codeline>
<codeline lineno="1683" refid="sound_8h_1a3514c58594b751ba2bcfc26c06275553" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="sound_8c_1a8f3a59cfbdaa88928f8e44682284723b" kindref="member">sound_symbols</ref>()</highlight></codeline>
<codeline lineno="1684"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/>a_sound<sp/>=<sp/><ref refid="xlisp_8h_1af2f3848a186324b30a549837c5e70eea" kindref="member">xlenter</ref>(</highlight><highlight class="stringliteral">&quot;SOUND&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/>s_audio_markers<sp/>=<sp/><ref refid="xlisp_8h_1af2f3848a186324b30a549837c5e70eea" kindref="member">xlenter</ref>(</highlight><highlight class="stringliteral">&quot;*AUDIO-MARKERS*&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><ref refid="xldmem_8h_1a33a12513106306e76f1f5d03f63a93b7" kindref="member">setvalue</ref>(s_audio_markers,<sp/><ref refid="macaboutbox_8c_1a263efce0e5cda1d387a1a43f94715445" kindref="member">NIL</ref>);</highlight></codeline>
<codeline lineno="1688"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"></highlight></codeline>
<codeline lineno="1690"><highlight class="normal"></highlight></codeline>
<codeline lineno="1691"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>SOUND<sp/>Type:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1692"><highlight class="normal"></highlight></codeline>
<codeline lineno="1693"><highlight class="normal"></highlight></codeline>
<codeline lineno="1694" refid="sound_8h_1a7cdcd35c1d3b6069f031625b6c243a07" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="sound_8c_1a648e09ad8e5937bdcec6c10ddaac4738" kindref="member">soundp</ref>(s)</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/>s;</highlight></codeline>
<codeline lineno="1696"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="extern_8c_1a1676cd2b77ed1a51590fd74279b96312" kindref="member">exttypep</ref>(s,<sp/>a_sound));</highlight></codeline>
<codeline lineno="1698"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"></highlight></codeline>
<codeline lineno="1700"><highlight class="normal"></highlight></codeline>
<codeline lineno="1701"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>sound_zero<sp/>-<sp/>create<sp/>and<sp/>return<sp/>a<sp/>zero<sp/>that<sp/>terminates<sp/>now<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1702"><highlight class="normal"></highlight></codeline>
<codeline lineno="1703" refid="sound_8h_1a1d20fa7c529222cf8d86405a5911ed4f" refkind="member"><highlight class="normal"><ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/><ref refid="sound_8c_1a1d20fa7c529222cf8d86405a5911ed4f" kindref="member">sound_zero</ref>(<ref refid="midifns_8h_1a3f787491db5dbc75c21b27d54e9ebae6" kindref="member">time_type</ref><sp/>t0,<ref refid="sound_8h_1a80a6a98ce803ce7a00e744aa2103f9a1" kindref="member">rate_type</ref><sp/>sr)</highlight></codeline>
<codeline lineno="1704"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/>sound;</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="falloc_8h_1aaf3a35c6f02abdd92c00c10e5e798899" kindref="member">falloc_sound</ref>(sound,<sp/></highlight><highlight class="stringliteral">&quot;sound_zero&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"></highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/>sound-&gt;<ref refid="structsound__struct_1ab03f6655f85673276f9a8bdc4affd358" kindref="member">get_next</ref><sp/>=<sp/><ref refid="sound_8c_1a650fb27c3f53d3ff92c00561020d5684" kindref="member">SND_get_first</ref>;</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/>sound-&gt;<ref refid="structsound__struct_1abe0c2ecf4e89d7d8e679adb01442fd60" kindref="member">list</ref><sp/>=<sp/><ref refid="sound_8c_1aa08a9bd03e22919769a8f33094756c97" kindref="member">zero_snd_list</ref>;</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/>sound-&gt;<ref refid="structsound__struct_1a51e65ef2c1784b5bc543a84ec90d5022" kindref="member">logical_stop_cnt</ref><sp/>=<sp/>sound-&gt;<ref refid="structsound__struct_1a36de08aa7f68cf01c3f197548bc3e00f" kindref="member">current</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/>sound-&gt;<ref refid="structsound__struct_1a7ec06c0b9e77d0e2ecd993df9f8eb6e3" kindref="member">true_t0</ref><sp/>=<sp/>sound-&gt;<ref refid="structsound__struct_1a397d52ba2da4602200e85f49f62f28ea" kindref="member">t0</ref><sp/>=<sp/>sound-&gt;<ref refid="structsound__struct_1a39c436490de5c9d9020a3c13cfdabcd2" kindref="member">time</ref><sp/>=<sp/>t0;</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/>sound-&gt;<ref refid="structsound__struct_1a95baf30b19741f4b7115900fb648c716" kindref="member">stop</ref><sp/>=<sp/><ref refid="sound_8h_1ad1d0a187552467e9e920f964abcc2581" kindref="member">MAX_STOP</ref>;</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/>sound-&gt;<ref refid="structsound__struct_1aafecd01e13520f7fb83fe8e2ac2cd026" kindref="member">sr</ref><sp/>=<sp/>sr;</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/><sp/>sound-&gt;<ref refid="structsound__struct_1a7531e5d5bc141fa994e5d787bb2dea01" kindref="member">scale</ref><sp/>=<sp/>1.0F;</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/>sound-&gt;<ref refid="structsound__struct_1a2f2f797cf14f3038124f9db72182452e" kindref="member">table</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/>sound-&gt;<ref refid="structsound__struct_1a932aa99e359ac71885ffa3426b2353cf" kindref="member">extra</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"></highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sound;</highlight></codeline>
<codeline lineno="1719"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"></highlight></codeline>
<codeline lineno="1721"><highlight class="normal"></highlight></codeline>
<codeline lineno="1722" refid="sound_8h_1a5ef66a3a385434b3df225302d92fc1c2" refkind="member"><highlight class="normal"><ref refid="structnode" kindref="compound">LVAL</ref><sp/><ref refid="sound_8c_1a6ff362fbe32a9dfef6c14f1adc52f3b7" kindref="member">cvsound</ref>(s)</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/>s;</highlight></codeline>
<codeline lineno="1724"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/>nyquist_printf(&quot;cvsound(%p)\n&quot;,<sp/>s);*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="extern_8c_1a56975b0d43047809420a006ca3f631d1" kindref="member">cvextern</ref>(sound_desc,<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>s));</highlight></codeline>
<codeline lineno="1727"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/sound.c"/>
  </compounddef>
</doxygen>
