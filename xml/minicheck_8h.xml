<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="minicheck_8h" kind="file" language="C++">
    <compoundname>minicheck.h</compoundname>
    <includedby refid="chardata_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/expat/tests/chardata.c</includedby>
    <includedby refid="minicheck_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/expat/tests/minicheck.c</includedby>
    <includedby refid="runtests_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/expat/tests/runtests.c</includedby>
    <invincdepgraph>
      <node id="2795">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/expat/tests/runtests.c</label>
        <link refid="runtests_8c"/>
        <childnode refid="2796" relation="include">
        </childnode>
      </node>
      <node id="2796">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/expat/tests/runtestspp.cpp</label>
        <link refid="runtestspp_8cpp"/>
      </node>
      <node id="2793">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/expat/tests/chardata.c</label>
        <link refid="chardata_8c"/>
      </node>
      <node id="2794">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/expat/tests/minicheck.c</label>
        <link refid="minicheck_8c"/>
      </node>
      <node id="2792">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/expat/tests/minicheck.h</label>
        <link refid="minicheck.h"/>
        <childnode refid="2793" relation="include">
        </childnode>
        <childnode refid="2794" relation="include">
        </childnode>
        <childnode refid="2795" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_s_runner" prot="public">SRunner</innerclass>
    <innerclass refid="struct_suite" prot="public">Suite</innerclass>
    <innerclass refid="struct_t_case" prot="public">TCase</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="minicheck_8h_1a4cd9623f873365b717ac58dd2b81e849" prot="public" static="no">
        <name>CK_NOFORK</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/expat/tests/minicheck.h" line="14" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/expat/tests/minicheck.h" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="minicheck_8h_1a20f4c2eeb624e3a8bcc521ad3145fd84" prot="public" static="no">
        <name>CK_FORK</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/expat/tests/minicheck.h" line="15" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/expat/tests/minicheck.h" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="minicheck_8h_1a93b3d36342344b0641574e160ee805f7" prot="public" static="no">
        <name>CK_SILENT</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/expat/tests/minicheck.h" line="17" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/expat/tests/minicheck.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="minicheck_8h_1a65ebf41bbde04f807dda3557b9725be2" prot="public" static="no">
        <name>CK_NORMAL</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/expat/tests/minicheck.h" line="18" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/expat/tests/minicheck.h" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="minicheck_8h_1a3f2f47a724c6832a8c17c360cc65c67c" prot="public" static="no">
        <name>CK_VERBOSE</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/expat/tests/minicheck.h" line="19" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/expat/tests/minicheck.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="minicheck_8h_1af900cc49e987251d3c63d24792901f22" prot="public" static="no">
        <name>START_TEST</name>
        <param><defname>testname</defname></param>
        <initializer>static <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> testname(<ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref>) { \
    <ref refid="minicheck_8h_1a595b10dcf11647011724765e78e64bb6" kindref="member">_check_set_test_info</ref>(__func__, __FILE__, __LINE__);   \
    {</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/expat/tests/minicheck.h" line="29" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/expat/tests/minicheck.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="minicheck_8h_1aefcd1ca1799d2395f7bbe3c50bcc8ff8" prot="public" static="no">
        <name>END_TEST</name>
        <initializer>} }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/expat/tests/minicheck.h" line="32" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/expat/tests/minicheck.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="minicheck_8h_1a05ec25e11ffdcaea9c4627c906388dd1" prot="public" static="no">
        <name>fail</name>
        <param><defname>msg</defname></param>
        <initializer><ref refid="minicheck_8h_1a1fe3a194cf0178701ad3325f52f46902" kindref="member">_fail_unless</ref>(0, __FILE__, __LINE__, msg)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/expat/tests/minicheck.h" line="34" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/expat/tests/minicheck.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="minicheck_8h_1af6dd219406a27a8d84abbc86206bc324" prot="public" static="no">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref>(*</type>
        <definition>typedef void(* tcase_setup_function) (void)</definition>
        <argsstring>)(void)</argsstring>
        <name>tcase_setup_function</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/expat/tests/minicheck.h" line="36" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/expat/tests/minicheck.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="minicheck_8h_1ad27f883682f83ad17500cf2c3b97453d" prot="public" static="no">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref>(*</type>
        <definition>typedef void(* tcase_teardown_function) (void)</definition>
        <argsstring>)(void)</argsstring>
        <name>tcase_teardown_function</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/expat/tests/minicheck.h" line="37" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/expat/tests/minicheck.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="minicheck_8h_1a384507a3dd67f42525c072669f5ef124" prot="public" static="no">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref>(*</type>
        <definition>typedef void(* tcase_test_function) (void)</definition>
        <argsstring>)(void)</argsstring>
        <name>tcase_test_function</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/expat/tests/minicheck.h" line="38" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/expat/tests/minicheck.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="minicheck_8h_1ada3ee3ad7a218b780bc5a97d3a94e679" prot="public" static="no">
        <type>struct <ref refid="struct_s_runner" kindref="compound">SRunner</ref></type>
        <definition>typedef struct SRunner SRunner</definition>
        <argsstring></argsstring>
        <name>SRunner</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/expat/tests/minicheck.h" line="38" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/expat/tests/minicheck.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="minicheck_8h_1a4653c8984fd7e6f6846b47531492a71e" prot="public" static="no">
        <type>struct <ref refid="struct_suite" kindref="compound">Suite</ref></type>
        <definition>typedef struct Suite Suite</definition>
        <argsstring></argsstring>
        <name>Suite</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/expat/tests/minicheck.h" line="38" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/expat/tests/minicheck.h" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="minicheck_8h_1a88675116cdf77209f1812df0c9fc04a1" prot="public" static="no">
        <type>struct <ref refid="struct_t_case" kindref="compound">TCase</ref></type>
        <definition>typedef struct TCase TCase</definition>
        <argsstring></argsstring>
        <name>TCase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/expat/tests/minicheck.h" line="38" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/expat/tests/minicheck.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="minicheck_8h_1a595b10dcf11647011724765e78e64bb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void _check_set_test_info</definition>
        <argsstring>(char const *function, char const *filename, int lineno)</argsstring>
        <name>_check_set_test_info</name>
        <param>
          <type>char <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> *</type>
          <declname>function</declname>
        </param>
        <param>
          <type>char <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> *</type>
          <declname>filename</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>lineno</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/expat/tests/minicheck.h" line="67" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/expat/tests/minicheck.c" bodystart="92" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="minicheck_8h_1a1fe3a194cf0178701ad3325f52f46902" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void _fail_unless</definition>
        <argsstring>(int condition, const char *file, int line, char *msg)</argsstring>
        <name>_fail_unless</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>condition</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>line</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/expat/tests/minicheck.h" line="75" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/expat/tests/minicheck.c" bodystart="159" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="minicheck_8h_1ac0364145d15035af36b5352d8ca4f812" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_suite" kindref="compound">Suite</ref> *</type>
        <definition>Suite* suite_create</definition>
        <argsstring>(char *name)</argsstring>
        <name>suite_create</name>
        <param>
          <type>char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/expat/tests/minicheck.h" line="76" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/expat/tests/minicheck.c" bodystart="16" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="minicheck_8h_1ad4e14093705c7e3a3ae748b870e66749" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_t_case" kindref="compound">TCase</ref> *</type>
        <definition>TCase* tcase_create</definition>
        <argsstring>(char *name)</argsstring>
        <name>tcase_create</name>
        <param>
          <type>char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/expat/tests/minicheck.h" line="77" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/expat/tests/minicheck.c" bodystart="26" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="minicheck_8h_1a66648bfc9417afedcd6d2c8b52887f74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void suite_add_tcase</definition>
        <argsstring>(Suite *suite, TCase *tc)</argsstring>
        <name>suite_add_tcase</name>
        <param>
          <type><ref refid="struct_suite" kindref="compound">Suite</ref> *</type>
          <declname>suite</declname>
        </param>
        <param>
          <type><ref refid="struct_t_case" kindref="compound">TCase</ref> *</type>
          <declname>tc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/expat/tests/minicheck.h" line="78" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/expat/tests/minicheck.c" bodystart="36" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="minicheck_8h_1a79a637b92a05ef87ef0193b20185c744" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void tcase_add_checked_fixture</definition>
        <argsstring>(TCase *, tcase_setup_function, tcase_teardown_function)</argsstring>
        <name>tcase_add_checked_fixture</name>
        <param>
          <type><ref refid="struct_t_case" kindref="compound">TCase</ref> *</type>
        </param>
        <param>
          <type><ref refid="minicheck_8h_1af6dd219406a27a8d84abbc86206bc324" kindref="member">tcase_setup_function</ref></type>
        </param>
        <param>
          <type><ref refid="minicheck_8h_1ad27f883682f83ad17500cf2c3b97453d" kindref="member">tcase_teardown_function</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/expat/tests/minicheck.h" line="79" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/expat/tests/minicheck.c" bodystart="47" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="minicheck_8h_1a1d4a4f4bb800e34ceee3ac87b64d9739" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void tcase_add_test</definition>
        <argsstring>(TCase *tc, tcase_test_function test)</argsstring>
        <name>tcase_add_test</name>
        <param>
          <type><ref refid="struct_t_case" kindref="compound">TCase</ref> *</type>
          <declname>tc</declname>
        </param>
        <param>
          <type><ref refid="minicheck_8h_1a384507a3dd67f42525c072669f5ef124" kindref="member">tcase_test_function</ref></type>
          <declname>test</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/expat/tests/minicheck.h" line="82" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/expat/tests/minicheck.c" bodystart="57" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="minicheck_8h_1a8a9a377dae5bd20d542ae6ff85417566" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_s_runner" kindref="compound">SRunner</ref> *</type>
        <definition>SRunner* srunner_create</definition>
        <argsstring>(Suite *suite)</argsstring>
        <name>srunner_create</name>
        <param>
          <type><ref refid="struct_suite" kindref="compound">Suite</ref> *</type>
          <declname>suite</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/expat/tests/minicheck.h" line="83" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/expat/tests/minicheck.c" bodystart="76" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="minicheck_8h_1aaec9e4aebe95779618aacd4882ca8546" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void srunner_run_all</definition>
        <argsstring>(SRunner *runner, int verbosity)</argsstring>
        <name>srunner_run_all</name>
        <param>
          <type><ref refid="struct_s_runner" kindref="compound">SRunner</ref> *</type>
          <declname>runner</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>verbosity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/expat/tests/minicheck.h" line="84" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/expat/tests/minicheck.c" bodystart="111" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="minicheck_8h_1ae3c6140d0c4d0d3e88fc64dcef082f74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int srunner_ntests_failed</definition>
        <argsstring>(SRunner *runner)</argsstring>
        <name>srunner_ntests_failed</name>
        <param>
          <type><ref refid="struct_s_runner" kindref="compound">SRunner</ref> *</type>
          <declname>runner</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/expat/tests/minicheck.h" line="85" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/expat/tests/minicheck.c" bodystart="171" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="minicheck_8h_1af346d71f2d70a17cfa401e4a85ad7793" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void srunner_free</definition>
        <argsstring>(SRunner *runner)</argsstring>
        <name>srunner_free</name>
        <param>
          <type><ref refid="struct_s_runner" kindref="compound">SRunner</ref> *</type>
          <declname>runner</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/expat/tests/minicheck.h" line="86" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/expat/tests/minicheck.c" bodystart="178" bodyend="182"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>Miniature<sp/>re-implementation<sp/>of<sp/>the<sp/>&quot;check&quot;<sp/>library.</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>This<sp/>is<sp/>intended<sp/>to<sp/>support<sp/>just<sp/>enough<sp/>of<sp/>check<sp/>to<sp/>run<sp/>the<sp/>Expat</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>tests.<sp/><sp/>This<sp/>interface<sp/>is<sp/>based<sp/>entirely<sp/>on<sp/>the<sp/>portion<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>check<sp/>library<sp/>being<sp/>used.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>This<sp/>is<sp/>*source*<sp/>compatible,<sp/>but<sp/>not<sp/>necessary<sp/>*link*<sp/>compatible.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="minicheck_8h_1a4cd9623f873365b717ac58dd2b81e849" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CK_NOFORK<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="minicheck_8h_1a20f4c2eeb624e3a8bcc521ad3145fd84" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CK_FORK<sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="minicheck_8h_1a93b3d36342344b0641574e160ee805f7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CK_SILENT<sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="minicheck_8h_1a65ebf41bbde04f807dda3557b9725be2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CK_NORMAL<sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="minicheck_8h_1a3f2f47a724c6832a8c17c360cc65c67c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CK_VERBOSE<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Workaround<sp/>for<sp/>Microsoft&apos;s<sp/>compiler<sp/>and<sp/>Tru64<sp/>Unix<sp/>systems<sp/>where<sp/>the</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/><sp/><sp/>C<sp/>compiler<sp/>has<sp/>a<sp/>working<sp/>__func__,<sp/>but<sp/>the<sp/>C++<sp/>compiler<sp/>only<sp/>has<sp/>a<sp/></highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/><sp/><sp/>working<sp/>__FUNCTION__.<sp/><sp/>This<sp/>could<sp/>be<sp/>fixed<sp/>in<sp/>configure.in,<sp/>but<sp/>it&apos;s</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/><sp/><sp/>not<sp/>worth<sp/>it<sp/>right<sp/>now.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>(_MSC_VER)<sp/>||<sp/>(defined(__osf__)<sp/>&amp;&amp;<sp/>defined(__cplusplus))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__func__<sp/>__FUNCTION__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="minicheck_8h_1af900cc49e987251d3c63d24792901f22" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>START_TEST(testname)<sp/>static<sp/>void<sp/>testname(void)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>_check_set_test_info(__func__,<sp/>__FILE__,<sp/>__LINE__);<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="minicheck_8h_1aefcd1ca1799d2395f7bbe3c50bcc8ff8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>END_TEST<sp/>}<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="minicheck_8h_1a05ec25e11ffdcaea9c4627c906388dd1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>fail(msg)<sp/><sp/>_fail_unless(0,<sp/>__FILE__,<sp/>__LINE__,<sp/>msg)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="minicheck_8h_1af6dd219406a27a8d84abbc86206bc324" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a3980d15795c6349fecd06c1b035c1ae9" kindref="member">void</ref><sp/>(*<ref refid="minicheck_8h_1af6dd219406a27a8d84abbc86206bc324" kindref="member">tcase_setup_function</ref>)(<ref refid="lib_2expat_8h_1a3980d15795c6349fecd06c1b035c1ae9" kindref="member">void</ref>);</highlight></codeline>
<codeline lineno="37" refid="minicheck_8h_1ad27f883682f83ad17500cf2c3b97453d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a3980d15795c6349fecd06c1b035c1ae9" kindref="member">void</ref><sp/>(*<ref refid="minicheck_8h_1ad27f883682f83ad17500cf2c3b97453d" kindref="member">tcase_teardown_function</ref>)(<ref refid="lib_2expat_8h_1a3980d15795c6349fecd06c1b035c1ae9" kindref="member">void</ref>);</highlight></codeline>
<codeline lineno="38" refid="minicheck_8h_1a384507a3dd67f42525c072669f5ef124" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a3980d15795c6349fecd06c1b035c1ae9" kindref="member">void</ref><sp/>(*<ref refid="minicheck_8h_1a384507a3dd67f42525c072669f5ef124" kindref="member">tcase_test_function</ref>)(<ref refid="lib_2expat_8h_1a3980d15795c6349fecd06c1b035c1ae9" kindref="member">void</ref>);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="minicheck_8h_1ada3ee3ad7a218b780bc5a97d3a94e679" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_s_runner" kindref="compound">SRunner</ref><sp/><ref refid="struct_s_runner" kindref="compound">SRunner</ref>;</highlight></codeline>
<codeline lineno="41" refid="minicheck_8h_1a4653c8984fd7e6f6846b47531492a71e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_suite" kindref="compound">Suite</ref><sp/><ref refid="struct_suite" kindref="compound">Suite</ref>;</highlight></codeline>
<codeline lineno="42" refid="minicheck_8h_1a88675116cdf77209f1812df0c9fc04a1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_t_case" kindref="compound">TCase</ref><sp/><ref refid="struct_t_case" kindref="compound">TCase</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="struct_s_runner" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_s_runner" kindref="compound">SRunner</ref><sp/>{</highlight></codeline>
<codeline lineno="45" refid="struct_s_runner_1a25e6f4691d777f9b136b917f299fd6fe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_suite" kindref="compound">Suite</ref><sp/>*<ref refid="struct_s_runner_1a25e6f4691d777f9b136b917f299fd6fe" kindref="member">suite</ref>;</highlight></codeline>
<codeline lineno="46" refid="struct_s_runner_1a0b60b601fb3ce9011b974fba73aaef75" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_s_runner_1a0b60b601fb3ce9011b974fba73aaef75" kindref="member">nchecks</ref>;</highlight></codeline>
<codeline lineno="47" refid="struct_s_runner_1a944e13c4dd33236d98012ad9a3222eb2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_s_runner_1a944e13c4dd33236d98012ad9a3222eb2" kindref="member">nfailures</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal">};</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="struct_suite" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_suite" kindref="compound">Suite</ref><sp/>{</highlight></codeline>
<codeline lineno="51" refid="struct_suite_1a440288d83bbf5b214d14f4379162f388" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="struct_suite_1a440288d83bbf5b214d14f4379162f388" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="52" refid="struct_suite_1ab72ccee796b21f574ddbeb114b19e050" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_t_case" kindref="compound">TCase</ref><sp/>*<ref refid="struct_suite_1ab72ccee796b21f574ddbeb114b19e050" kindref="member">tests</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal">};</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="struct_t_case" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_t_case" kindref="compound">TCase</ref><sp/>{</highlight></codeline>
<codeline lineno="56" refid="struct_t_case_1a112c9a3b3e73275738a789d5f6758c8e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="struct_t_case_1a112c9a3b3e73275738a789d5f6758c8e" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="57" refid="struct_t_case_1aa9b64bff7661f76f093240b74ad1dbe8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="minicheck_8h_1af6dd219406a27a8d84abbc86206bc324" kindref="member">tcase_setup_function</ref><sp/><ref refid="struct_t_case_1aa9b64bff7661f76f093240b74ad1dbe8" kindref="member">setup</ref>;</highlight></codeline>
<codeline lineno="58" refid="struct_t_case_1ad4f1e0d9f95b5a4ea4edee3f5952da3e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="minicheck_8h_1ad27f883682f83ad17500cf2c3b97453d" kindref="member">tcase_teardown_function</ref><sp/><ref refid="struct_t_case_1ad4f1e0d9f95b5a4ea4edee3f5952da3e" kindref="member">teardown</ref>;</highlight></codeline>
<codeline lineno="59" refid="struct_t_case_1a002f38ddf6c5d8f3b6fe72cc1cc2384f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="minicheck_8h_1a384507a3dd67f42525c072669f5ef124" kindref="member">tcase_test_function</ref><sp/>*<ref refid="struct_t_case_1a002f38ddf6c5d8f3b6fe72cc1cc2384f" kindref="member">tests</ref>;</highlight></codeline>
<codeline lineno="60" refid="struct_t_case_1a9077ace853866e23d4c0d3ef01832994" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_t_case_1a9077ace853866e23d4c0d3ef01832994" kindref="member">ntests</ref>;</highlight></codeline>
<codeline lineno="61" refid="struct_t_case_1a92481912b4d610eac7f45f563bf9e4d9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_t_case_1a92481912b4d610eac7f45f563bf9e4d9" kindref="member">allocated</ref>;</highlight></codeline>
<codeline lineno="62" refid="struct_t_case_1a8d56f03bc84c7dab23e390902e7992e8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_t_case" kindref="compound">TCase</ref><sp/>*<ref refid="struct_t_case_1a8d56f03bc84c7dab23e390902e7992e8" kindref="member">next_tcase</ref>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal">};</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Internal<sp/>helper.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="minicheck_8h_1a595b10dcf11647011724765e78e64bb6" kindref="member">_check_set_test_info</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">function</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*<ref refid="octave__test_8m_1a2ff994e16bf9521154de4cf659a3b689" kindref="member">filename</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="seqread_8c_1a33da238465b6abf419d74a21401282f7" kindref="member">lineno</ref>);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/>*<sp/>Prototypes<sp/>for<sp/>the<sp/>actual<sp/>implementation.</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="minicheck_8h_1a1fe3a194cf0178701ad3325f52f46902" kindref="member">_fail_unless</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>condition,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="seqread_8c_1aad9ebcdde542d8b2075615388ff15a9c" kindref="member">line</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*msg);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><ref refid="struct_suite" kindref="compound">Suite</ref><sp/>*<ref refid="minicheck_8h_1ac0364145d15035af36b5352d8ca4f812" kindref="member">suite_create</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><ref refid="struct_t_case" kindref="compound">TCase</ref><sp/>*<ref refid="minicheck_8h_1ad4e14093705c7e3a3ae748b870e66749" kindref="member">tcase_create</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1a1b49b495b59f9e73205b69ad1a2965b0" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="minicheck_8h_1a66648bfc9417afedcd6d2c8b52887f74" kindref="member">suite_add_tcase</ref>(<ref refid="struct_suite" kindref="compound">Suite</ref><sp/>*<ref refid="struct_s_runner_1a25e6f4691d777f9b136b917f299fd6fe" kindref="member">suite</ref>,<sp/><ref refid="struct_t_case" kindref="compound">TCase</ref><sp/>*tc);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="minicheck_8h_1a79a637b92a05ef87ef0193b20185c744" kindref="member">tcase_add_checked_fixture</ref>(<ref refid="struct_t_case" kindref="compound">TCase</ref><sp/>*,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="minicheck_8h_1af6dd219406a27a8d84abbc86206bc324" kindref="member">tcase_setup_function</ref>,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="minicheck_8h_1ad27f883682f83ad17500cf2c3b97453d" kindref="member">tcase_teardown_function</ref>);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="minicheck_8h_1a1d4a4f4bb800e34ceee3ac87b64d9739" kindref="member">tcase_add_test</ref>(<ref refid="struct_t_case" kindref="compound">TCase</ref><sp/>*tc,<sp/><ref refid="minicheck_8h_1a384507a3dd67f42525c072669f5ef124" kindref="member">tcase_test_function</ref><sp/><ref refid="patest__multi__sine_8c_1a4e1a7dd05b97e23b3dd1aed354405b63" kindref="member">test</ref>);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><ref refid="struct_s_runner" kindref="compound">SRunner</ref><sp/>*<ref refid="minicheck_8h_1a8a9a377dae5bd20d542ae6ff85417566" kindref="member">srunner_create</ref>(<ref refid="struct_suite" kindref="compound">Suite</ref><sp/>*<ref refid="struct_s_runner_1a25e6f4691d777f9b136b917f299fd6fe" kindref="member">suite</ref>);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="minicheck_8h_1aaec9e4aebe95779618aacd4882ca8546" kindref="member">srunner_run_all</ref>(<ref refid="struct_s_runner" kindref="compound">SRunner</ref><sp/>*runner,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>verbosity);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="minicheck_8h_1ae3c6140d0c4d0d3e88fc64dcef082f74" kindref="member">srunner_ntests_failed</ref>(<ref refid="struct_s_runner" kindref="compound">SRunner</ref><sp/>*runner);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="minicheck_8h_1af346d71f2d70a17cfa401e4a85ad7793" kindref="member">srunner_free</ref>(<ref refid="struct_s_runner" kindref="compound">SRunner</ref><sp/>*runner);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/expat/tests/minicheck.h"/>
  </compounddef>
</doxygen>
