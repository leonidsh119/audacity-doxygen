<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="src_2track_8cpp" kind="file" language="C++">
    <compoundname>Track.cpp</compoundname>
    <includes refid="float_8h" local="no">float.h</includes>
    <includes local="no">wx/file.h</includes>
    <includes local="no">wx/textfile.h</includes>
    <includes local="no">wx/log.h</includes>
    <includes refid="src_2track_8h" local="yes">Track.h</includes>
    <includes refid="_wave_track_8h" local="yes">WaveTrack.h</includes>
    <includes refid="_note_track_8h" local="yes">NoteTrack.h</includes>
    <includes refid="_project_8h" local="yes">Project.h</includes>
    <includes refid="_dir_manager_8h" local="yes">DirManager.h</includes>
    <includes refid="_experimental_8h" local="yes">Experimental.h</includes>
    <incdepgraph>
      <node id="31874">
        <label>wx/dir.h</label>
      </node>
      <node id="31881">
        <label>wx/choice.h</label>
      </node>
      <node id="31844">
        <label>WaveClip.h</label>
        <link refid="_wave_clip_8h"/>
        <childnode refid="31825" relation="include">
        </childnode>
        <childnode refid="31836" relation="include">
        </childnode>
        <childnode refid="31845" relation="include">
        </childnode>
        <childnode refid="31851" relation="include">
        </childnode>
        <childnode refid="31839" relation="include">
        </childnode>
        <childnode refid="31834" relation="include">
        </childnode>
        <childnode refid="31853" relation="include">
        </childnode>
        <childnode refid="31831" relation="include">
        </childnode>
        <childnode refid="31832" relation="include">
        </childnode>
        <childnode refid="31854" relation="include">
        </childnode>
        <childnode refid="31855" relation="include">
        </childnode>
        <childnode refid="31828" relation="include">
        </childnode>
      </node>
      <node id="31858">
        <label>effects/TimeWarper.h</label>
        <link refid="_time_warper_8h"/>
      </node>
      <node id="31862">
        <label>wx/hashmap.h</label>
      </node>
      <node id="31903">
        <label>toolbars/SelectionBarListener.h</label>
        <link refid="_selection_bar_listener_8h"/>
      </node>
      <node id="31822">
        <label>wx/textfile.h</label>
      </node>
      <node id="31857">
        <label>NoteTrack.h</label>
        <link refid="_note_track_8h"/>
        <childnode refid="31833" relation="include">
        </childnode>
        <childnode refid="31825" relation="include">
        </childnode>
        <childnode refid="31834" relation="include">
        </childnode>
        <childnode refid="31824" relation="include">
        </childnode>
        <childnode refid="31858" relation="include">
        </childnode>
      </node>
      <node id="31848">
        <label>wx/gauge.h</label>
      </node>
      <node id="31842">
        <label>wx/ffile.h</label>
      </node>
      <node id="31830">
        <label>wx/event.h</label>
      </node>
      <node id="31895">
        <label>audacity/ModuleInterface.h</label>
        <link refid="_module_interface_8h"/>
        <childnode refid="31837" relation="include">
        </childnode>
        <childnode refid="31887" relation="include">
        </childnode>
        <childnode refid="31896" relation="include">
        </childnode>
      </node>
      <node id="31908">
        <label>wx/dcclient.h</label>
      </node>
      <node id="31873">
        <label>wx/cmdline.h</label>
      </node>
      <node id="31819">
        <label>FLAC/ordinals.h</label>
        <link refid="ordinals_8h"/>
        <childnode refid="31820" relation="include">
        </childnode>
      </node>
      <node id="31886">
        <label>audacity/EffectInterface.h</label>
        <link refid="_effect_interface_8h"/>
        <childnode refid="31837" relation="include">
        </childnode>
        <childnode refid="31887" relation="include">
        </childnode>
        <childnode refid="31888" relation="include">
        </childnode>
        <childnode refid="31889" relation="include">
        </childnode>
        <childnode refid="31846" relation="include">
        </childnode>
      </node>
      <node id="31902">
        <label>../Internat.h</label>
        <link refid="_internat_8h"/>
        <childnode refid="31838" relation="include">
        </childnode>
        <childnode refid="31833" relation="include">
        </childnode>
        <childnode refid="31832" relation="include">
        </childnode>
      </node>
      <node id="31839">
        <label>xml/XMLTagHandler.h</label>
        <link refid="_x_m_l_tag_handler_8h"/>
        <childnode refid="31825" relation="include">
        </childnode>
        <childnode refid="31833" relation="include">
        </childnode>
        <childnode refid="31840" relation="include">
        </childnode>
        <childnode refid="31841" relation="include">
        </childnode>
      </node>
      <node id="31820">
        <label>stdint.h</label>
      </node>
      <node id="31867">
        <label>TrackPanelListener.h</label>
        <link refid="_track_panel_listener_8h"/>
      </node>
      <node id="31865">
        <label>wx/wxchar.h</label>
      </node>
      <node id="31907">
        <label>wx/frame.h</label>
      </node>
      <node id="31851">
        <label>ondemand/ODTaskThread.h</label>
        <link refid="_o_d_task_thread_8h"/>
        <childnode refid="31852" relation="include">
        </childnode>
        <childnode refid="31825" relation="include">
        </childnode>
      </node>
      <node id="31888">
        <label>audacity/ConfigInterface.h</label>
        <link refid="_config_interface_8h"/>
        <childnode refid="31837" relation="include">
        </childnode>
      </node>
      <node id="31850">
        <label>wx/utils.h</label>
      </node>
      <node id="31847">
        <label>wx/evtloop.h</label>
      </node>
      <node id="31834">
        <label>Experimental.h</label>
        <link refid="_experimental_8h"/>
        <childnode refid="31835" relation="include">
        </childnode>
      </node>
      <node id="31879">
        <label>wx/timer.h</label>
      </node>
      <node id="31831">
        <label>wx/gdicmn.h</label>
      </node>
      <node id="31863">
        <label>ViewInfo.h</label>
        <link refid="_view_info_8h"/>
        <childnode refid="31828" relation="include">
        </childnode>
        <childnode refid="31864" relation="include">
        </childnode>
      </node>
      <node id="31901">
        <label>../Shuttle.h</label>
        <link refid="_shuttle_8h"/>
      </node>
      <node id="31891">
        <label>wx/fileconf.h</label>
      </node>
      <node id="31893">
        <label>map</label>
      </node>
      <node id="31856">
        <label>WaveTrackLocation.h</label>
        <link refid="_wave_track_location_8h"/>
      </node>
      <node id="31896">
        <label>audacity/PluginInterface.h</label>
        <link refid="_plugin_interface_8h"/>
        <childnode refid="31837" relation="include">
        </childnode>
        <childnode refid="31888" relation="include">
        </childnode>
        <childnode refid="31886" relation="include">
        </childnode>
        <childnode refid="31887" relation="include">
        </childnode>
        <childnode refid="31894" relation="include">
        </childnode>
        <childnode refid="31895" relation="include">
        </childnode>
      </node>
      <node id="31853">
        <label>RealFFTf.h</label>
        <link refid="_real_f_f_tf_8h"/>
        <childnode refid="31834" relation="include">
        </childnode>
      </node>
      <node id="31904">
        <label>toolbars/SpectralSelectionBarListener.h</label>
        <link refid="_spectral_selection_bar_listener_8h"/>
        <childnode refid="31825" relation="include">
        </childnode>
      </node>
      <node id="31849">
        <label>wx/stattext.h</label>
      </node>
      <node id="31878">
        <label>wx/socket.h</label>
      </node>
      <node id="31906">
        <label>wx/generic/dragimgg.h</label>
      </node>
      <node id="31887">
        <label>audacity/IdentInterface.h</label>
        <link refid="_ident_interface_8h"/>
        <childnode refid="31837" relation="include">
        </childnode>
      </node>
      <node id="31854">
        <label>wx/list.h</label>
      </node>
      <node id="31870">
        <label>wx/menu.h</label>
      </node>
      <node id="31835">
        <label>wx/defs.h</label>
      </node>
      <node id="31883">
        <label>wx/window.h</label>
      </node>
      <node id="31876">
        <label>wx/intl.h</label>
      </node>
      <node id="31845">
        <label>widgets/ProgressDialog.h</label>
        <link refid="_progress_dialog_8h"/>
        <childnode refid="31825" relation="include">
        </childnode>
        <childnode refid="31835" relation="include">
        </childnode>
        <childnode refid="31846" relation="include">
        </childnode>
        <childnode refid="31847" relation="include">
        </childnode>
        <childnode refid="31848" relation="include">
        </childnode>
        <childnode refid="31849" relation="include">
        </childnode>
        <childnode refid="31850" relation="include">
        </childnode>
      </node>
      <node id="31899">
        <label>wx/bmpbuttn.h</label>
      </node>
      <node id="31837">
        <label>audacity/Types.h</label>
        <link refid="include_2audacity_2_types_8h"/>
        <childnode refid="31833" relation="include">
        </childnode>
        <childnode refid="31838" relation="include">
        </childnode>
      </node>
      <node id="31892">
        <label>../PluginManager.h</label>
        <link refid="_plugin_manager_8h"/>
        <childnode refid="31835" relation="include">
        </childnode>
        <childnode refid="31829" relation="include">
        </childnode>
        <childnode refid="31891" relation="include">
        </childnode>
        <childnode refid="31833" relation="include">
        </childnode>
        <childnode refid="31893" relation="include">
        </childnode>
        <childnode refid="31886" relation="include">
        </childnode>
        <childnode refid="31894" relation="include">
        </childnode>
        <childnode refid="31895" relation="include">
        </childnode>
        <childnode refid="31896" relation="include">
        </childnode>
      </node>
      <node id="31846">
        <label>wx/dialog.h</label>
      </node>
      <node id="31861">
        <label>wx/filename.h</label>
      </node>
      <node id="31884">
        <label>effects/EffectManager.h</label>
        <link refid="_effect_manager_8h"/>
        <childnode refid="31834" relation="include">
        </childnode>
        <childnode refid="31881" relation="include">
        </childnode>
        <childnode refid="31846" relation="include">
        </childnode>
        <childnode refid="31830" relation="include">
        </childnode>
        <childnode refid="31885" relation="include">
        </childnode>
        <childnode refid="31833" relation="include">
        </childnode>
        <childnode refid="31886" relation="include">
        </childnode>
        <childnode refid="31892" relation="include">
        </childnode>
        <childnode refid="31897" relation="include">
        </childnode>
      </node>
      <node id="31889">
        <label>audacity/EffectAutomationParameters.h</label>
        <link refid="_effect_automation_parameters_8h"/>
        <childnode refid="31890" relation="include">
        </childnode>
        <childnode refid="31873" relation="include">
        </childnode>
        <childnode refid="31891" relation="include">
        </childnode>
        <childnode refid="31876" relation="include">
        </childnode>
      </node>
      <node id="31869">
        <label>commands/CommandManager.h</label>
        <link refid="_command_manager_8h"/>
        <childnode refid="31834" relation="include">
        </childnode>
        <childnode refid="31826" relation="include">
        </childnode>
        <childnode refid="31828" relation="include">
        </childnode>
        <childnode refid="31833" relation="include">
        </childnode>
        <childnode refid="31829" relation="include">
        </childnode>
        <childnode refid="31870" relation="include">
        </childnode>
        <childnode refid="31862" relation="include">
        </childnode>
        <childnode refid="31871" relation="include">
        </childnode>
        <childnode refid="31839" relation="include">
        </childnode>
        <childnode refid="31837" relation="include">
        </childnode>
      </node>
      <node id="31825">
        <label>Audacity.h</label>
        <link refid="_audacity_8h"/>
      </node>
      <node id="31882">
        <label>wx/grid.h</label>
      </node>
      <node id="31818">
        <label>float.h</label>
        <link refid="float_8h"/>
        <childnode refid="31819" relation="include">
        </childnode>
      </node>
      <node id="31828">
        <label>vector</label>
      </node>
      <node id="31897">
        <label>Effect.h</label>
        <link refid="src_2effects_2_effect_8h"/>
        <childnode refid="31825" relation="include">
        </childnode>
        <childnode refid="31826" relation="include">
        </childnode>
        <childnode refid="31898" relation="include">
        </childnode>
        <childnode refid="31899" relation="include">
        </childnode>
        <childnode refid="31829" relation="include">
        </childnode>
        <childnode refid="31876" relation="include">
        </childnode>
        <childnode refid="31833" relation="include">
        </childnode>
        <childnode refid="31900" relation="include">
        </childnode>
        <childnode refid="31888" relation="include">
        </childnode>
        <childnode refid="31886" relation="include">
        </childnode>
        <childnode refid="31834" relation="include">
        </childnode>
        <childnode refid="31864" relation="include">
        </childnode>
        <childnode refid="31901" relation="include">
        </childnode>
        <childnode refid="31902" relation="include">
        </childnode>
        <childnode refid="31845" relation="include">
        </childnode>
      </node>
      <node id="31829">
        <label>wx/dynarray.h</label>
      </node>
      <node id="31859">
        <label>Project.h</label>
        <link refid="_project_8h"/>
        <childnode refid="31825" relation="include">
        </childnode>
        <childnode refid="31834" relation="include">
        </childnode>
        <childnode refid="31860" relation="include">
        </childnode>
        <childnode refid="31863" relation="include">
        </childnode>
        <childnode refid="31867" relation="include">
        </childnode>
        <childnode refid="31868" relation="include">
        </childnode>
        <childnode refid="31869" relation="include">
        </childnode>
        <childnode refid="31884" relation="include">
        </childnode>
        <childnode refid="31839" relation="include">
        </childnode>
        <childnode refid="31903" relation="include">
        </childnode>
        <childnode refid="31904" relation="include">
        </childnode>
        <childnode refid="31835" relation="include">
        </childnode>
        <childnode refid="31830" relation="include">
        </childnode>
        <childnode refid="31823" relation="include">
        </childnode>
        <childnode refid="31905" relation="include">
        </childnode>
        <childnode refid="31906" relation="include">
        </childnode>
        <childnode refid="31907" relation="include">
        </childnode>
        <childnode refid="31876" relation="include">
        </childnode>
        <childnode refid="31908" relation="include">
        </childnode>
        <childnode refid="31909" relation="include">
        </childnode>
      </node>
      <node id="31894">
        <label>audacity/ImporterInterface.h</label>
        <link refid="_importer_interface_8h"/>
        <childnode refid="31837" relation="include">
        </childnode>
        <childnode refid="31888" relation="include">
        </childnode>
        <childnode refid="31887" relation="include">
        </childnode>
      </node>
      <node id="31817">
        <label>C:/_dev/OpenU/Audacity/audacity/src/Track.cpp</label>
        <link refid="src/track.cpp"/>
        <childnode refid="31818" relation="include">
        </childnode>
        <childnode refid="31821" relation="include">
        </childnode>
        <childnode refid="31822" relation="include">
        </childnode>
        <childnode refid="31823" relation="include">
        </childnode>
        <childnode refid="31824" relation="include">
        </childnode>
        <childnode refid="31843" relation="include">
        </childnode>
        <childnode refid="31857" relation="include">
        </childnode>
        <childnode refid="31859" relation="include">
        </childnode>
        <childnode refid="31860" relation="include">
        </childnode>
        <childnode refid="31834" relation="include">
        </childnode>
      </node>
      <node id="31833">
        <label>wx/string.h</label>
      </node>
      <node id="31871">
        <label>../AudacityApp.h</label>
        <link refid="_audacity_app_8h"/>
        <childnode refid="31825" relation="include">
        </childnode>
        <childnode refid="31872" relation="include">
        </childnode>
        <childnode refid="31873" relation="include">
        </childnode>
        <childnode refid="31874" relation="include">
        </childnode>
        <childnode refid="31830" relation="include">
        </childnode>
        <childnode refid="31875" relation="include">
        </childnode>
        <childnode refid="31876" relation="include">
        </childnode>
        <childnode refid="31877" relation="include">
        </childnode>
        <childnode refid="31823" relation="include">
        </childnode>
        <childnode refid="31878" relation="include">
        </childnode>
        <childnode refid="31879" relation="include">
        </childnode>
        <childnode refid="31880" relation="include">
        </childnode>
        <childnode refid="31851" relation="include">
        </childnode>
        <childnode refid="31834" relation="include">
        </childnode>
      </node>
      <node id="31885">
        <label>wx/listbox.h</label>
      </node>
      <node id="31855">
        <label>wx/msgdlg.h</label>
      </node>
      <node id="31823">
        <label>wx/log.h</label>
      </node>
      <node id="31866">
        <label>math.h</label>
      </node>
      <node id="31860">
        <label>DirManager.h</label>
        <link refid="_dir_manager_8h"/>
        <childnode refid="31854" relation="include">
        </childnode>
        <childnode refid="31833" relation="include">
        </childnode>
        <childnode refid="31861" relation="include">
        </childnode>
        <childnode refid="31862" relation="include">
        </childnode>
        <childnode refid="31850" relation="include">
        </childnode>
        <childnode refid="31837" relation="include">
        </childnode>
        <childnode refid="31839" relation="include">
        </childnode>
      </node>
      <node id="31864">
        <label>SelectedRegion.h</label>
        <link refid="_selected_region_8h"/>
        <childnode refid="31825" relation="include">
        </childnode>
        <childnode refid="31834" relation="include">
        </childnode>
        <childnode refid="31835" relation="include">
        </childnode>
        <childnode refid="31865" relation="include">
        </childnode>
        <childnode refid="31866" relation="include">
        </childnode>
      </node>
      <node id="31838">
        <label>wx/arrstr.h</label>
      </node>
      <node id="31877">
        <label>wx/snglinst.h</label>
      </node>
      <node id="31824">
        <label>Track.h</label>
        <link refid="src_2track_8h"/>
        <childnode refid="31825" relation="include">
        </childnode>
        <childnode refid="31826" relation="include">
        </childnode>
        <childnode refid="31828" relation="include">
        </childnode>
        <childnode refid="31829" relation="include">
        </childnode>
        <childnode refid="31830" relation="include">
        </childnode>
        <childnode refid="31831" relation="include">
        </childnode>
        <childnode refid="31832" relation="include">
        </childnode>
        <childnode refid="31833" relation="include">
        </childnode>
        <childnode refid="31834" relation="include">
        </childnode>
        <childnode refid="31836" relation="include">
        </childnode>
        <childnode refid="31839" relation="include">
        </childnode>
      </node>
      <node id="31852">
        <label>wx/thread.h</label>
      </node>
      <node id="31821">
        <label>wx/file.h</label>
      </node>
      <node id="31905">
        <label>wx/dragimag.h</label>
      </node>
      <node id="31900">
        <label>wx/tglbtn.h</label>
      </node>
      <node id="31826">
        <label>MemoryX.h</label>
        <link refid="_memory_x_8h"/>
        <childnode refid="31827" relation="include">
        </childnode>
      </node>
      <node id="31880">
        <label>widgets/FileHistory.h</label>
        <link refid="_file_history_8h"/>
        <childnode refid="31835" relation="include">
        </childnode>
        <childnode refid="31881" relation="include">
        </childnode>
        <childnode refid="31829" relation="include">
        </childnode>
        <childnode refid="31830" relation="include">
        </childnode>
        <childnode refid="31882" relation="include">
        </childnode>
        <childnode refid="31833" relation="include">
        </childnode>
        <childnode refid="31883" relation="include">
        </childnode>
      </node>
      <node id="31898">
        <label>set</label>
      </node>
      <node id="31909">
        <label>Menus.h</label>
        <link refid="_menus_8h"/>
        <childnode refid="31834" relation="include">
        </childnode>
      </node>
      <node id="31872">
        <label>wx/app.h</label>
        <link refid="app_8h"/>
      </node>
      <node id="31832">
        <label>wx/longlong.h</label>
      </node>
      <node id="31843">
        <label>WaveTrack.h</label>
        <link refid="_wave_track_8h"/>
        <childnode refid="31824" relation="include">
        </childnode>
        <childnode refid="31836" relation="include">
        </childnode>
        <childnode refid="31844" relation="include">
        </childnode>
        <childnode refid="31834" relation="include">
        </childnode>
        <childnode refid="31845" relation="include">
        </childnode>
        <childnode refid="31828" relation="include">
        </childnode>
        <childnode refid="31831" relation="include">
        </childnode>
        <childnode refid="31832" relation="include">
        </childnode>
        <childnode refid="31852" relation="include">
        </childnode>
        <childnode refid="31856" relation="include">
        </childnode>
      </node>
      <node id="31840">
        <label>stdio.h</label>
      </node>
      <node id="31836">
        <label>SampleFormat.h</label>
        <link refid="_sample_format_8h"/>
        <childnode refid="31825" relation="include">
        </childnode>
        <childnode refid="31835" relation="include">
        </childnode>
        <childnode refid="31837" relation="include">
        </childnode>
      </node>
      <node id="31890">
        <label>locale.h</label>
      </node>
      <node id="31875">
        <label>wx/docview.h</label>
      </node>
      <node id="31827">
        <label>memory</label>
      </node>
      <node id="31841">
        <label>XMLWriter.h</label>
        <link refid="_x_m_l_writer_8h"/>
        <childnode refid="31838" relation="include">
        </childnode>
        <childnode refid="31829" relation="include">
        </childnode>
        <childnode refid="31842" relation="include">
        </childnode>
      </node>
      <node id="31868">
        <label>AudioIOListener.h</label>
        <link refid="_audio_i_o_listener_8h"/>
        <childnode refid="31833" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="src_2track_8cpp_1ad9bbb9d2388aa508eb837c698a1f011c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DEFINE_EVENT_TYPE</definition>
        <argsstring>(EVT_TRACKLIST_RESIZED)</argsstring>
        <name>DEFINE_EVENT_TYPE</name>
        <param>
          <type>EVT_TRACKLIST_RESIZED</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Track.cpp" line="705" column="1"/>
      </memberdef>
      <memberdef kind="function" id="src_2track_8cpp_1a828e65b8ba3ace2d5ce3b27e8305e3e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>DEFINE_EVENT_TYPE</definition>
        <argsstring>(EVT_TRACKLIST_UPDATED)</argsstring>
        <name>DEFINE_EVENT_TYPE</name>
        <param>
          <type>EVT_TRACKLIST_UPDATED</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/src/Track.cpp" line="706" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/**********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/>Audacity:<sp/>A<sp/>Digital<sp/>Audio<sp/>Editor</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>Track.cpp</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/>Dominic<sp/>Mazzoni</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment">*******************************************************************/</highlight><highlight class="comment">/*******************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="float_8h" kindref="compound">float.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/file.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/textfile.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/log.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="src_2track_8h" kindref="compound">Track.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_wave_track_8h" kindref="compound">WaveTrack.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_note_track_8h" kindref="compound">NoteTrack.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_project_8h" kindref="compound">Project.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_dir_manager_8h" kindref="compound">DirManager.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_experimental_8h" kindref="compound">Experimental.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_MSC_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//Disable<sp/>truncation<sp/>warnings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>warning(<sp/>disable<sp/>:<sp/>4786<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__WXDEBUG__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>we<sp/>are<sp/>in<sp/>a<sp/>debug<sp/>build<sp/>of<sp/>audacity</highlight></codeline>
<codeline lineno="39"><highlight class="comment"></highlight><highlight class="comment">//<sp/><sp/><sp/>#define<sp/>DEBUG_TLI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="class_track_1a108c752f54d215d88076e1feaf55f65c" refkind="member"><highlight class="normal"><ref refid="class_track_1a108c752f54d215d88076e1feaf55f65c" kindref="member">Track::Track</ref>(<ref refid="class_dir_manager" kindref="compound">DirManager</ref><sp/>*<sp/>projDirManager)</highlight></codeline>
<codeline lineno="43"><highlight class="normal">:<sp/><sp/>vrulerSize(36,0),</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/>mDirManager(projDirManager)</highlight></codeline>
<codeline lineno="45"><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_1ac8edb91d41baf41462a0e1ee9a6c52a0" kindref="member">mDirManager</ref>-&gt;<ref refid="class_dir_manager_1a0021fa0d115f9751ba352812e8e23b16" kindref="member">Ref</ref>();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_1aee09798f96d0ead19b1061b858548dc5" kindref="member">mList</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_1a405067641c56a9f23eef63ad646db8f9" kindref="member">mNode</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_1a673c205a3e39989f31d2e2e9d6addb5a" kindref="member">mSelected</ref><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_1aaaa8f25fed1beb509a3ada2ca81608b0" kindref="member">mLinked</ref><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_1a633f85ffde8eda30576b00ee4115570c" kindref="member">mMute</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_1ab21eed7b5982622ba28451c5f76d3156" kindref="member">mSolo</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_1a2735771116264155d95db58912964a52" kindref="member">mY</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_1ac696598792865dc8f0d6e555ec6e1ee1" kindref="member">mHeight</ref><sp/>=<sp/>150;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_1ada3ccc3db7f1c8f6249260335b12d1b4" kindref="member">mIndex</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_OUTPUT_DISPLAY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/>mYv<sp/>=<sp/><ref refid="class_track_1ac696598792865dc8f0d6e555ec6e1ee1" kindref="member">mHeight</ref>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/>mHeightv<sp/>=<sp/><ref refid="class_track_1ac696598792865dc8f0d6e555ec6e1ee1" kindref="member">mHeight</ref>;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/>mPerY<sp/>=<sp/>0.5;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/>mVirtualStereo<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_1ab767c29441016ba672a1f105389190ff" kindref="member">mMinimized</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_1a561704af11450071df74b62498a54d1a" kindref="member">mOffset</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_1a95b5b00485210991a838286a6c0c3e96" kindref="member">mChannel</ref><sp/>=<sp/><ref refid="class_track_1af7ac66dc1b976cffbaee1e01206d362fad1d594e80888976c85f7a4a258dc2f19" kindref="member">MonoChannel</ref>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="class_track_1a5e133fa07f696db6d2bbdc440ce3a010" refkind="member"><highlight class="normal"><ref refid="class_track_1a108c752f54d215d88076e1feaf55f65c" kindref="member">Track::Track</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>&amp;orig)</highlight></codeline>
<codeline lineno="73"><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_1ac8edb91d41baf41462a0e1ee9a6c52a0" kindref="member">mDirManager</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_1aee09798f96d0ead19b1061b858548dc5" kindref="member">mList</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_1a405067641c56a9f23eef63ad646db8f9" kindref="member">mNode</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_1a2735771116264155d95db58912964a52" kindref="member">mY</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_1ada3ccc3db7f1c8f6249260335b12d1b4" kindref="member">mIndex</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_OUTPUT_DISPLAY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/>mPerY<sp/>=<sp/>0.5;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_1a947a448d4a6e9c7f2a6e4f36fb017ba5" kindref="member">Init</ref>(orig);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_1a561704af11450071df74b62498a54d1a" kindref="member">mOffset</ref><sp/>=<sp/>orig.<ref refid="class_track_1a561704af11450071df74b62498a54d1a" kindref="member">mOffset</ref>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copy<sp/>all<sp/>the<sp/>track<sp/>properties<sp/>except<sp/>the<sp/>actual<sp/>contents</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="class_track_1a947a448d4a6e9c7f2a6e4f36fb017ba5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_track_1a947a448d4a6e9c7f2a6e4f36fb017ba5" kindref="member">Track::Init</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>&amp;orig)</highlight></codeline>
<codeline lineno="89"><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_1a711d329605d3dbda2a57d68294dc7470" kindref="member">mDefaultName</ref><sp/>=<sp/>orig.<ref refid="class_track_1a711d329605d3dbda2a57d68294dc7470" kindref="member">mDefaultName</ref>;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_1a885c04ed00a08ddaa6a3b2d72c55b384" kindref="member">mName</ref><sp/>=<sp/>orig.<ref refid="class_track_1a885c04ed00a08ddaa6a3b2d72c55b384" kindref="member">mName</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_track_1ac8edb91d41baf41462a0e1ee9a6c52a0" kindref="member">mDirManager</ref><sp/>!=<sp/>orig.<ref refid="class_track_1ac8edb91d41baf41462a0e1ee9a6c52a0" kindref="member">mDirManager</ref>)<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_track_1ac8edb91d41baf41462a0e1ee9a6c52a0" kindref="member">mDirManager</ref>)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track_1ac8edb91d41baf41462a0e1ee9a6c52a0" kindref="member">mDirManager</ref>-&gt;<ref refid="class_dir_manager_1a496ce0b8a108560c43a912cecc2cbec9" kindref="member">Deref</ref>();<sp/></highlight><highlight class="comment">//<sp/>MM:<sp/>unreference<sp/>old<sp/>DirManager</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>MM:<sp/>Assign<sp/>and<sp/>ref<sp/>NEW<sp/>DirManager</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track_1ac8edb91d41baf41462a0e1ee9a6c52a0" kindref="member">mDirManager</ref><sp/>=<sp/>orig.<ref refid="class_track_1ac8edb91d41baf41462a0e1ee9a6c52a0" kindref="member">mDirManager</ref>;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track_1ac8edb91d41baf41462a0e1ee9a6c52a0" kindref="member">mDirManager</ref>-&gt;<ref refid="class_dir_manager_1a0021fa0d115f9751ba352812e8e23b16" kindref="member">Ref</ref>();</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_1a673c205a3e39989f31d2e2e9d6addb5a" kindref="member">mSelected</ref><sp/>=<sp/>orig.<ref refid="class_track_1a673c205a3e39989f31d2e2e9d6addb5a" kindref="member">mSelected</ref>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_1aaaa8f25fed1beb509a3ada2ca81608b0" kindref="member">mLinked</ref><sp/>=<sp/>orig.<ref refid="class_track_1aaaa8f25fed1beb509a3ada2ca81608b0" kindref="member">mLinked</ref>;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_1a633f85ffde8eda30576b00ee4115570c" kindref="member">mMute</ref><sp/>=<sp/>orig.<ref refid="class_track_1a633f85ffde8eda30576b00ee4115570c" kindref="member">mMute</ref>;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_1ab21eed7b5982622ba28451c5f76d3156" kindref="member">mSolo</ref><sp/>=<sp/>orig.<ref refid="class_track_1ab21eed7b5982622ba28451c5f76d3156" kindref="member">mSolo</ref>;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_1ac696598792865dc8f0d6e555ec6e1ee1" kindref="member">mHeight</ref><sp/>=<sp/>orig.<ref refid="class_track_1ac696598792865dc8f0d6e555ec6e1ee1" kindref="member">mHeight</ref>;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_1ab767c29441016ba672a1f105389190ff" kindref="member">mMinimized</ref><sp/>=<sp/>orig.<ref refid="class_track_1ab767c29441016ba672a1f105389190ff" kindref="member">mMinimized</ref>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_1a95b5b00485210991a838286a6c0c3e96" kindref="member">mChannel</ref><sp/>=<sp/>orig.<ref refid="class_track_1a95b5b00485210991a838286a6c0c3e96" kindref="member">mChannel</ref>;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_OUTPUT_DISPLAY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/>mVirtualStereo<sp/>=<sp/>orig.mVirtualStereo;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/>mHeightv<sp/>=<sp/>orig.mHeightv;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/>mYv<sp/>=<sp/>orig.mYv;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="class_track_1a194ddc15cc66ade28b85d2417dc1694a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_track_1a194ddc15cc66ade28b85d2417dc1694a" kindref="member">Track::SetSelected</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>)</highlight></codeline>
<codeline lineno="118"><highlight class="normal">{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_1a673c205a3e39989f31d2e2e9d6addb5a" kindref="member">mSelected</ref><sp/>=<sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>;</highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122" refid="class_track_1a0345783930c487b7b511f8419f068aa5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_track_1a0345783930c487b7b511f8419f068aa5" kindref="member">Track::Merge</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>&amp;orig)</highlight></codeline>
<codeline lineno="123"><highlight class="normal">{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_1a673c205a3e39989f31d2e2e9d6addb5a" kindref="member">mSelected</ref><sp/>=<sp/>orig.<ref refid="class_track_1a673c205a3e39989f31d2e2e9d6addb5a" kindref="member">mSelected</ref>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_1a633f85ffde8eda30576b00ee4115570c" kindref="member">mMute</ref><sp/>=<sp/>orig.<ref refid="class_track_1a633f85ffde8eda30576b00ee4115570c" kindref="member">mMute</ref>;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_1ab21eed7b5982622ba28451c5f76d3156" kindref="member">mSolo</ref><sp/>=<sp/>orig.<ref refid="class_track_1ab21eed7b5982622ba28451c5f76d3156" kindref="member">mSolo</ref>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="class_track_1a416e75e66accc8eb9e3fafc3e8555216" refkind="member"><highlight class="normal"><ref refid="class_track_1a416e75e66accc8eb9e3fafc3e8555216" kindref="member">Track::~Track</ref>()</highlight></codeline>
<codeline lineno="130"><highlight class="normal">{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_1ac8edb91d41baf41462a0e1ee9a6c52a0" kindref="member">mDirManager</ref>-&gt;<ref refid="class_dir_manager_1a496ce0b8a108560c43a912cecc2cbec9" kindref="member">Deref</ref>();</highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="class_track_1a4439c1f48c56aee62e09b2ea7c0a2124" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_track_list_node" kindref="compound">TrackListNode</ref><sp/>*<ref refid="class_track_1a4439c1f48c56aee62e09b2ea7c0a2124" kindref="member">Track::GetNode</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="136"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_track_1a405067641c56a9f23eef63ad646db8f9" kindref="member">mNode</ref>;</highlight></codeline>
<codeline lineno="138"><highlight class="normal">}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>track<sp/>can<sp/>only<sp/>live<sp/>on<sp/>one<sp/>list<sp/>at<sp/>a<sp/>time,<sp/>so<sp/>if<sp/>you&apos;re<sp/>moving<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="comment">//<sp/>track<sp/>from<sp/>one<sp/>list<sp/>to<sp/>another,<sp/>you<sp/>must<sp/>call<sp/>SetOwner()<sp/>with<sp/>NULL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="comment">//<sp/>pointers<sp/>first<sp/>and<sp/>then<sp/>with<sp/>the<sp/>real<sp/>pointers.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="class_track_1abea3b67734ed3ac7f9873fa7fdb86c82" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_track_1abea3b67734ed3ac7f9873fa7fdb86c82" kindref="member">Track::SetOwner</ref>(<ref refid="class_track_list" kindref="compound">TrackList</ref><sp/>*list,<sp/><ref refid="struct_track_list_node" kindref="compound">TrackListNode</ref><sp/>*<ref refid="structnode" kindref="compound">node</ref>)</highlight></codeline>
<codeline lineno="144"><highlight class="normal">{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Try<sp/>to<sp/>detect<sp/>offenders<sp/>while<sp/>in<sp/>development.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/>wxASSERT(list<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||<sp/><ref refid="class_track_1aee09798f96d0ead19b1061b858548dc5" kindref="member">mList</ref><sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/>wxASSERT(node<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||<sp/><ref refid="class_track_1a405067641c56a9f23eef63ad646db8f9" kindref="member">mNode</ref><sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/>wxASSERT((list<sp/>!=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>node<sp/>!=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>||<sp/>(list<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>node<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>));</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_1aee09798f96d0ead19b1061b858548dc5" kindref="member">mList</ref><sp/>=<sp/>list;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_1a405067641c56a9f23eef63ad646db8f9" kindref="member">mNode</ref><sp/>=<sp/>node;</highlight></codeline>
<codeline lineno="152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154" refid="class_track_1aa39728150b3da63f63b35b5974f8839a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_track_1aa39728150b3da63f63b35b5974f8839a" kindref="member">Track::GetMinimizedHeight</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="155"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_track_1afafc93348a2d442bf956fa072d3d769b" kindref="member">GetLink</ref>())<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>20;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>40;</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163" refid="class_track_1a1e60222eef94930890417a8cf178153a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_track_1a1e60222eef94930890417a8cf178153a" kindref="member">Track::GetIndex</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="164"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_track_1ada3ccc3db7f1c8f6249260335b12d1b4" kindref="member">mIndex</ref>;</highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168" refid="class_track_1a8e7b7fa7741477db3d54de3a10460587" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_track_1a8e7b7fa7741477db3d54de3a10460587" kindref="member">Track::SetIndex</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight></codeline>
<codeline lineno="169"><highlight class="normal">{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_1ada3ccc3db7f1c8f6249260335b12d1b4" kindref="member">mIndex</ref><sp/>=<sp/>index;</highlight></codeline>
<codeline lineno="171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_OUTPUT_DISPLAY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_track_1adefbd93c6cbde70d082a64729cfc74d8" kindref="member">Track::GetY</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>vStereo)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="175"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vStereo<sp/>&amp;&amp;<sp/><ref refid="class_track_1a95b5b00485210991a838286a6c0c3e96" kindref="member">mChannel</ref><sp/>==<sp/><ref refid="class_track_1af7ac66dc1b976cffbaee1e01206d362fad1d594e80888976c85f7a4a258dc2f19" kindref="member">Track::MonoChannel</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mYv;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_track_1a2735771116264155d95db58912964a52" kindref="member">mY</ref>;</highlight></codeline>
<codeline lineno="178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_track_1a5527bdbc39489fa70b4d89d7c7118690" kindref="member">Track::SetY</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>vStereo)</highlight></codeline>
<codeline lineno="181"><highlight class="normal">{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vStereo<sp/>&amp;&amp;<sp/><ref refid="class_track_1a95b5b00485210991a838286a6c0c3e96" kindref="member">mChannel</ref><sp/>==<sp/><ref refid="class_track_1af7ac66dc1b976cffbaee1e01206d362fad1d594e80888976c85f7a4a258dc2f19" kindref="member">Track::MonoChannel</ref>)<sp/>mYv<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><ref refid="class_track_1a2735771116264155d95db58912964a52" kindref="member">mY</ref><sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="184"><highlight class="normal">}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_track_1aa88d6a8dabe0be72aa34bdebdc41d07b" kindref="member">Track::GetHeight</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>vStereo)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="187"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_track_1ab767c29441016ba672a1f105389190ff" kindref="member">mMinimized</ref>)<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_track_1aa39728150b3da63f63b35b5974f8839a" kindref="member">GetMinimizedHeight</ref>();</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vStereo<sp/>&amp;&amp;<sp/><ref refid="class_track_1a95b5b00485210991a838286a6c0c3e96" kindref="member">mChannel</ref><sp/>==<sp/><ref refid="class_track_1af7ac66dc1b976cffbaee1e01206d362fad1d594e80888976c85f7a4a258dc2f19" kindref="member">Track::MonoChannel</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mHeightv;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_track_1ac696598792865dc8f0d6e555ec6e1ee1" kindref="member">mHeight</ref>;</highlight></codeline>
<codeline lineno="194"><highlight class="normal">}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_track_1a6c03f9842f6f294e69773ab33d794d6e" kindref="member">Track::SetHeight</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>vStereo)</highlight></codeline>
<codeline lineno="197"><highlight class="normal">{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(vStereo<sp/>&amp;&amp;<sp/><ref refid="class_track_1a95b5b00485210991a838286a6c0c3e96" kindref="member">mChannel</ref><sp/>==<sp/><ref refid="class_track_1af7ac66dc1b976cffbaee1e01206d362fad1d594e80888976c85f7a4a258dc2f19" kindref="member">Track::MonoChannel</ref>)<sp/>mHeightv<sp/>=<sp/>h;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><ref refid="class_track_1ac696598792865dc8f0d6e555ec6e1ee1" kindref="member">mHeight</ref><sp/>=<sp/>h;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_1aee09798f96d0ead19b1061b858548dc5" kindref="member">mList</ref>-&gt;RecalcPositions(<ref refid="class_track_1a405067641c56a9f23eef63ad646db8f9" kindref="member">mNode</ref>);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_1aee09798f96d0ead19b1061b858548dc5" kindref="member">mList</ref>-&gt;ResizedEvent(<ref refid="class_track_1a405067641c56a9f23eef63ad646db8f9" kindref="member">mNode</ref>);</highlight></codeline>
<codeline lineno="204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/>//<sp/>EXPERIMENTAL_OUTPUT_DISPLAY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208" refid="class_track_1adefbd93c6cbde70d082a64729cfc74d8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_track_1adefbd93c6cbde70d082a64729cfc74d8" kindref="member">Track::GetY</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="209"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_track_1a2735771116264155d95db58912964a52" kindref="member">mY</ref>;</highlight></codeline>
<codeline lineno="211"><highlight class="normal">}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213" refid="class_track_1a5527bdbc39489fa70b4d89d7c7118690" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_track_1a5527bdbc39489fa70b4d89d7c7118690" kindref="member">Track::SetY</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="214"><highlight class="normal">{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_1a2735771116264155d95db58912964a52" kindref="member">mY</ref><sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="216"><highlight class="normal">}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218" refid="class_track_1aa88d6a8dabe0be72aa34bdebdc41d07b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_track_1aa88d6a8dabe0be72aa34bdebdc41d07b" kindref="member">Track::GetHeight</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="219"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_track_1ab767c29441016ba672a1f105389190ff" kindref="member">mMinimized</ref>)<sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_track_1aa39728150b3da63f63b35b5974f8839a" kindref="member">GetMinimizedHeight</ref>();</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_track_1ac696598792865dc8f0d6e555ec6e1ee1" kindref="member">mHeight</ref>;</highlight></codeline>
<codeline lineno="225"><highlight class="normal">}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227" refid="class_track_1a6c03f9842f6f294e69773ab33d794d6e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_track_1a6c03f9842f6f294e69773ab33d794d6e" kindref="member">Track::SetHeight</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h)</highlight></codeline>
<codeline lineno="228"><highlight class="normal">{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_1ac696598792865dc8f0d6e555ec6e1ee1" kindref="member">mHeight</ref><sp/>=<sp/>h;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_1aee09798f96d0ead19b1061b858548dc5" kindref="member">mList</ref>-&gt;RecalcPositions(<ref refid="class_track_1a405067641c56a9f23eef63ad646db8f9" kindref="member">mNode</ref>);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_1aee09798f96d0ead19b1061b858548dc5" kindref="member">mList</ref>-&gt;ResizedEvent(<ref refid="class_track_1a405067641c56a9f23eef63ad646db8f9" kindref="member">mNode</ref>);</highlight></codeline>
<codeline lineno="232"><highlight class="normal">}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>EXPERIMENTAL_OUTPUT_DISPLAY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235" refid="class_track_1ac31a25492781bb0cc61e5f544f59b3d5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_track_1ac31a25492781bb0cc61e5f544f59b3d5" kindref="member">Track::GetMinimized</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="236"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_track_1ab767c29441016ba672a1f105389190ff" kindref="member">mMinimized</ref>;</highlight></codeline>
<codeline lineno="238"><highlight class="normal">}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240" refid="class_track_1a7542cc50308134d4f060af0363654234" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_track_1a7542cc50308134d4f060af0363654234" kindref="member">Track::SetMinimized</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isMinimized)</highlight></codeline>
<codeline lineno="241"><highlight class="normal">{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_1ab767c29441016ba672a1f105389190ff" kindref="member">mMinimized</ref><sp/>=<sp/>isMinimized;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_1aee09798f96d0ead19b1061b858548dc5" kindref="member">mList</ref>-&gt;RecalcPositions(<ref refid="class_track_1a405067641c56a9f23eef63ad646db8f9" kindref="member">mNode</ref>);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_1aee09798f96d0ead19b1061b858548dc5" kindref="member">mList</ref>-&gt;ResizedEvent(<ref refid="class_track_1a405067641c56a9f23eef63ad646db8f9" kindref="member">mNode</ref>);</highlight></codeline>
<codeline lineno="245"><highlight class="normal">}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247" refid="class_track_1a23dc5f6265d0383f860d099f44e7d74c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_track_1a23dc5f6265d0383f860d099f44e7d74c" kindref="member">Track::SetLinked</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="layer3_8c_1a741dbb4d8e78c3cb69915db7282fcec0" kindref="member">l</ref>)</highlight></codeline>
<codeline lineno="248"><highlight class="normal">{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_1aaaa8f25fed1beb509a3ada2ca81608b0" kindref="member">mLinked</ref><sp/>=<sp/><ref refid="layer3_8c_1a741dbb4d8e78c3cb69915db7282fcec0" kindref="member">l</ref>;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_1aee09798f96d0ead19b1061b858548dc5" kindref="member">mList</ref>-&gt;RecalcPositions(<ref refid="class_track_1a405067641c56a9f23eef63ad646db8f9" kindref="member">mNode</ref>);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_1aee09798f96d0ead19b1061b858548dc5" kindref="member">mList</ref>-&gt;ResizedEvent(<ref refid="class_track_1a405067641c56a9f23eef63ad646db8f9" kindref="member">mNode</ref>);</highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254" refid="class_track_1afafc93348a2d442bf956fa072d3d769b" refkind="member"><highlight class="normal"><ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="class_track_1afafc93348a2d442bf956fa072d3d769b" kindref="member">Track::GetLink</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="255"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_track_1a405067641c56a9f23eef63ad646db8f9" kindref="member">mNode</ref>)<sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_track_1a405067641c56a9f23eef63ad646db8f9" kindref="member">mNode</ref>-&gt;<ref refid="struct_track_list_node_1a8a36ff5edca955b4906da6cb632f4a23" kindref="member">next</ref><sp/>&amp;&amp;<sp/><ref refid="class_track_1aaaa8f25fed1beb509a3ada2ca81608b0" kindref="member">mLinked</ref>)<sp/>{</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_track_1a405067641c56a9f23eef63ad646db8f9" kindref="member">mNode</ref>-&gt;<ref refid="struct_track_list_node_1a8a36ff5edca955b4906da6cb632f4a23" kindref="member">next</ref>-&gt;<ref refid="struct_track_list_node_1a26289d63f33d878f15946ad938f7d73a" kindref="member">t</ref>;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="class_track_1a405067641c56a9f23eef63ad646db8f9" kindref="member">mNode</ref>-&gt;<ref refid="struct_track_list_node_1a64fd2e1b6e421a0ff6438d828074e4c5" kindref="member">prev</ref><sp/>&amp;&amp;<sp/><ref refid="class_track_1a405067641c56a9f23eef63ad646db8f9" kindref="member">mNode</ref>-&gt;<ref refid="struct_track_list_node_1a64fd2e1b6e421a0ff6438d828074e4c5" kindref="member">prev</ref>-&gt;<ref refid="struct_track_list_node_1a26289d63f33d878f15946ad938f7d73a" kindref="member">t</ref>-&gt;<ref refid="class_track_1abe5a26d73a2beddbacd19a39f4286fb2" kindref="member">GetLinked</ref>())<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_track_1a405067641c56a9f23eef63ad646db8f9" kindref="member">mNode</ref>-&gt;<ref refid="struct_track_list_node_1a64fd2e1b6e421a0ff6438d828074e4c5" kindref="member">prev</ref>-&gt;<ref refid="struct_track_list_node_1a26289d63f33d878f15946ad938f7d73a" kindref="member">t</ref>;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="267"><highlight class="normal">}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_OUTPUT_DISPLAY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Track::ReorderList(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>resize)</highlight></codeline>
<codeline lineno="271"><highlight class="normal">{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_track_1aee09798f96d0ead19b1061b858548dc5" kindref="member">mList</ref>-&gt;RecalcPositions(<ref refid="class_track_1a405067641c56a9f23eef63ad646db8f9" kindref="member">mNode</ref>);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(resize)</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track_1aee09798f96d0ead19b1061b858548dc5" kindref="member">mList</ref>-&gt;ResizedEvent(<ref refid="class_track_1a405067641c56a9f23eef63ad646db8f9" kindref="member">mNode</ref>);</highlight></codeline>
<codeline lineno="275"><highlight class="normal">}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278" refid="class_track_1a4b9d8ec8baa8ce94f9b9b999e324a59f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_track_1a4b9d8ec8baa8ce94f9b9b999e324a59f" kindref="member">Track::IsSyncLockSelected</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="279"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_SYNC_LOCK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_audacity_project" kindref="compound">AudacityProject</ref><sp/>*<ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref><sp/>=<sp/><ref refid="_project_8cpp_1a897aa047b58617a9acc187fc882e3bb4" kindref="member">GetActiveProject</ref>();</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!p<sp/>||<sp/>!p-&gt;<ref refid="class_audacity_project_1aa24fdad451943202139086ff4c4f48bc" kindref="member">IsSyncLocked</ref>())</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_sync_locked_tracks_iterator" kindref="compound">SyncLockedTracksIterator</ref><sp/>git(<ref refid="class_track_1aee09798f96d0ead19b1061b858548dc5" kindref="member">mList</ref>);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref><sp/>=<sp/>git.<ref refid="class_sync_locked_tracks_iterator_1aa53e5be7c38eca13ad9030c8e497164c" kindref="member">StartWith</ref>(const_cast&lt;Track*&gt;(</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!t)<sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Not<sp/>in<sp/>a<sp/>sync-locked<sp/>group.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((this-&gt;<ref refid="class_track_1ad71d0460cf42bcde59dcf600af7ef6b7" kindref="member">GetKind</ref>()<sp/>==<sp/><ref refid="class_track_1a4a6604845139575dfc25be299aeb60efab39033be088537a007532668cb6d16a8" kindref="member">Track::Wave</ref>)<sp/>||<sp/>(this-&gt;<ref refid="class_track_1ad71d0460cf42bcde59dcf600af7ef6b7" kindref="member">GetKind</ref>()<sp/>==<sp/><ref refid="class_track_1a4a6604845139575dfc25be299aeb60efaaa103f3467e47ffcb1aa408d53f7bf6e" kindref="member">Track::Label</ref>))<sp/>&amp;&amp;<sp/><ref refid="class_track_1ac01a2b30ea7a2574d724bae023427905" kindref="member">GetSelected</ref>();</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>;<sp/>t<sp/>=<sp/>git.<ref refid="class_sync_locked_tracks_iterator_1a09ddbd2c99421aa60ec63c1ec0ce3f51" kindref="member">Next</ref>())<sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t-&gt;<ref refid="class_track_1ac01a2b30ea7a2574d724bae023427905" kindref="member">GetSelected</ref>())</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="300"><highlight class="normal">}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302" refid="class_track_1a8d065b881a5fe83b2d938b62f9eba89e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_track_1a8d065b881a5fe83b2d938b62f9eba89e" kindref="member">Track::SyncLockAdjust</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>oldT1,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>newT1)</highlight></codeline>
<codeline lineno="303"><highlight class="normal">{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newT1<sp/>&gt;<sp/>oldT1)<sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Insert<sp/>space<sp/>within<sp/>the<sp/>track</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(oldT1<sp/>&gt;<sp/><ref refid="class_track_1a94b9fd13ee5b04493ed1024715e9c62b" kindref="member">GetEndTime</ref>())</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*tmp;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="class_track_1a87915537991939aa4271435995628bac" kindref="member">Cut</ref>(oldT1,<sp/><ref refid="class_track_1a94b9fd13ee5b04493ed1024715e9c62b" kindref="member">GetEndTime</ref>(),<sp/>&amp;tmp);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ret)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="class_track_1abea1b02917a4dc8ad75331e14f7ea651" kindref="member">Paste</ref>(newT1,<sp/>tmp);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxASSERT(ret);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>tmp;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newT1<sp/>&lt;<sp/>oldT1)<sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>from<sp/>the<sp/>track</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_track_1a725fa0a27976e10fd01859baa2f29ff7" kindref="member">Clear</ref>(newT1,<sp/>oldT1);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>fall-through:<sp/>no<sp/>change</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="329"><highlight class="normal">}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TrackListIterator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332" refid="class_track_list_iterator_1a3a0cac4ea272daeaea4bf9dbef05743c" refkind="member"><highlight class="normal"><ref refid="class_track_list_iterator_1a3a0cac4ea272daeaea4bf9dbef05743c" kindref="member">TrackListIterator::TrackListIterator</ref>(<ref refid="class_track_list" kindref="compound">TrackList</ref><sp/>*<sp/>val)</highlight></codeline>
<codeline lineno="333"><highlight class="normal">{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><ref refid="layer3_8c_1a741dbb4d8e78c3cb69915db7282fcec0" kindref="member">l</ref><sp/>=<sp/>val;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/>cur<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="336"><highlight class="normal">}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338" refid="class_track_list_iterator_1a4eea44fac9add00ff978213df1652441" refkind="member"><highlight class="normal"><ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="class_track_list_iterator_1a4eea44fac9add00ff978213df1652441" kindref="member">TrackListIterator::StartWith</ref>(<ref refid="class_track" kindref="compound">Track</ref><sp/>*<sp/>val)</highlight></codeline>
<codeline lineno="339"><highlight class="normal">{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>First();</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="layer3_8c_1a741dbb4d8e78c3cb69915db7282fcec0" kindref="member">l</ref><sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/>cur<sp/>=<sp/>(<ref refid="struct_track_list_node" kindref="compound">TrackListNode</ref><sp/>*)<sp/>val-&gt;<ref refid="class_track_1a4439c1f48c56aee62e09b2ea7c0a2124" kindref="member">GetNode</ref>();</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cur)<sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cur-&gt;<ref refid="struct_track_list_node_1a26289d63f33d878f15946ad938f7d73a" kindref="member">t</ref>;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="355"><highlight class="normal">}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357" refid="class_track_list_iterator_1a81e19731fba5e1b83552aaf36c6f227c" refkind="member"><highlight class="normal"><ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="class_track_list_iterator_1a81e19731fba5e1b83552aaf36c6f227c" kindref="member">TrackListIterator::First</ref>(<ref refid="class_track_list" kindref="compound">TrackList</ref><sp/>*<sp/>val)</highlight></codeline>
<codeline lineno="358"><highlight class="normal">{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(val<sp/>!=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="layer3_8c_1a741dbb4d8e78c3cb69915db7282fcec0" kindref="member">l</ref><sp/>=<sp/>val;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="layer3_8c_1a741dbb4d8e78c3cb69915db7282fcec0" kindref="member">l</ref><sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/>cur<sp/>=<sp/><ref refid="layer3_8c_1a741dbb4d8e78c3cb69915db7282fcec0" kindref="member">l</ref>-&gt;head;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cur)<sp/>{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cur-&gt;t;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="374"><highlight class="normal">}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376" refid="class_track_list_iterator_1a071f2a9fd59d6e84718bf43881ca564b" refkind="member"><highlight class="normal"><ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="class_track_list_iterator_1a071f2a9fd59d6e84718bf43881ca564b" kindref="member">TrackListIterator::Last</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>skiplinked)</highlight></codeline>
<codeline lineno="377"><highlight class="normal">{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="layer3_8c_1a741dbb4d8e78c3cb69915db7282fcec0" kindref="member">l</ref><sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/>cur<sp/>=<sp/><ref refid="layer3_8c_1a741dbb4d8e78c3cb69915db7282fcec0" kindref="member">l</ref>-&gt;tail;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>With<sp/>skiplinked<sp/>set,<sp/>we<sp/>won&apos;t<sp/>return<sp/>the<sp/>second<sp/>channel<sp/>of<sp/>a<sp/>linked<sp/>pair</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(skiplinked<sp/>&amp;&amp;<sp/>cur<sp/>&amp;&amp;<sp/>cur-&gt;t<sp/>&amp;&amp;<sp/>cur-&gt;t-&gt;GetLink()<sp/>&amp;&amp;<sp/>!cur-&gt;t-&gt;GetLinked())</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cur<sp/>=<sp/>cur-&gt;prev;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cur)<sp/>{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cur-&gt;t;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="395"><highlight class="normal">}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397" refid="class_track_list_iterator_1a2f22c9a396a8803881ca6d9784039706" refkind="member"><highlight class="normal"><ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="class_track_list_iterator_1a2f22c9a396a8803881ca6d9784039706" kindref="member">TrackListIterator::Next</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>skipLinked)</highlight></codeline>
<codeline lineno="398"><highlight class="normal">{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifdef<sp/>DEBUG_TLI<sp/>//<sp/>if<sp/>we<sp/>are<sp/>debugging<sp/>this<sp/>bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/>wxASSERT_MSG((!cur<sp/>||<sp/>(*l).Contains((*cur).t)),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;cur<sp/>invalid<sp/>at<sp/>start<sp/>of<sp/>Next().<sp/>List<sp/>changed<sp/>since<sp/>iterator<sp/>created?&quot;</highlight><highlight class="normal">));<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>that<sp/>cur<sp/>is<sp/>in<sp/>the<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(skipLinked<sp/>&amp;&amp;<sp/>cur<sp/>&amp;&amp;<sp/>cur-&gt;t-&gt;GetLinked())<sp/>{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cur<sp/>=<sp/>cur-&gt;next;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifdef<sp/>DEBUG_TLI<sp/>//<sp/>if<sp/>we<sp/>are<sp/>debugging<sp/>this<sp/>bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/>wxASSERT_MSG((!cur<sp/>||<sp/>(*l).Contains((*cur).t)),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;cur<sp/>invalid<sp/>after<sp/>skipping<sp/>linked<sp/>tracks.&quot;</highlight><highlight class="normal">));<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>that<sp/>cur<sp/>is<sp/>in<sp/>the<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cur)<sp/>{</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cur<sp/>=<sp/>cur-&gt;next;</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifdef<sp/>DEBUG_TLI<sp/>//<sp/>if<sp/>we<sp/>are<sp/>debugging<sp/>this<sp/>bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/>wxASSERT_MSG((!cur<sp/>||<sp/>(*l).Contains((*cur).t)),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;cur<sp/>invalid<sp/>after<sp/>moving<sp/>to<sp/>next<sp/>track.&quot;</highlight><highlight class="normal">));<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>that<sp/>cur<sp/>is<sp/>in<sp/>the<sp/>list<sp/>if<sp/>it<sp/>is<sp/>not<sp/>null</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cur)<sp/>{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cur-&gt;t;</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="424"><highlight class="normal">}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426" refid="class_track_list_iterator_1aab7ae71449d30b13cffcfb89ced52510" refkind="member"><highlight class="normal"><ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="class_track_list_iterator_1aab7ae71449d30b13cffcfb89ced52510" kindref="member">TrackListIterator::Prev</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>skiplinked)</highlight></codeline>
<codeline lineno="427"><highlight class="normal">{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cur)</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cur<sp/>=<sp/>cur-&gt;prev;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(skiplinked<sp/>&amp;&amp;<sp/>cur<sp/>&amp;&amp;<sp/>cur-&gt;prev<sp/>&amp;&amp;<sp/>cur-&gt;prev-&gt;t-&gt;GetLinked())</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cur<sp/>=<sp/>cur-&gt;prev;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cur<sp/>?<sp/>cur-&gt;t<sp/>:<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="435"><highlight class="normal">}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437" refid="class_track_list_iterator_1a2234083955b85d521c9758153561ef62" refkind="member"><highlight class="normal"><ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="class_track_list_iterator_1a2234083955b85d521c9758153561ef62" kindref="member">TrackListIterator::RemoveCurrent</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>deletetrack)</highlight></codeline>
<codeline lineno="438"><highlight class="normal">{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_track_list_node" kindref="compound">TrackListNode</ref><sp/>*<ref refid="record_8c_1a9b790a854eb0e06cd42c8d28a30db97d" kindref="member">next</ref><sp/>=<sp/>cur-&gt;next;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><ref refid="layer3_8c_1a741dbb4d8e78c3cb69915db7282fcec0" kindref="member">l</ref>-&gt;Remove(cur-&gt;t,<sp/>deletetrack);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/>cur<sp/>=<sp/><ref refid="record_8c_1a9b790a854eb0e06cd42c8d28a30db97d" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#ifdef<sp/>DEBUG_TLI<sp/>//<sp/>if<sp/>we<sp/>are<sp/>debugging<sp/>this<sp/>bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/>wxASSERT_MSG((!cur<sp/>||<sp/>(*l).Contains((*cur).t)),<sp/>wxT(</highlight><highlight class="stringliteral">&quot;cur<sp/>invalid<sp/>after<sp/>deletion<sp/>of<sp/>track.&quot;</highlight><highlight class="normal">));<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>that<sp/>cur<sp/>is<sp/>in<sp/>the<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cur)<sp/>{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cur-&gt;t;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="454"><highlight class="normal">}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456" refid="class_track_list_iterator_1a3552e37ffec627af01ca3c3abac19251" refkind="member"><highlight class="normal"><ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="class_track_list_iterator_1a3552e37ffec627af01ca3c3abac19251" kindref="member">TrackListIterator::ReplaceCurrent</ref>(<ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>)</highlight></codeline>
<codeline lineno="457"><highlight class="normal">{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cur)<sp/>{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>cur-&gt;t;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="class_track_1abea3b67734ed3ac7f9873fa7fdb86c82" kindref="member">SetOwner</ref>(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cur-&gt;t<sp/>=<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t-&gt;<ref refid="class_track_1abea3b67734ed3ac7f9873fa7fdb86c82" kindref="member">SetOwner</ref>(<ref refid="layer3_8c_1a741dbb4d8e78c3cb69915db7282fcec0" kindref="member">l</ref>,<sp/>cur);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="layer3_8c_1a741dbb4d8e78c3cb69915db7282fcec0" kindref="member">l</ref>-&gt;RecalcPositions(cur);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="layer3_8c_1a741dbb4d8e78c3cb69915db7282fcec0" kindref="member">l</ref>-&gt;UpdatedEvent(cur);</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="layer3_8c_1a741dbb4d8e78c3cb69915db7282fcec0" kindref="member">l</ref>-&gt;ResizedEvent(cur);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="472"><highlight class="normal">}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TrackListCondIterator<sp/>(base<sp/>class<sp/>for<sp/>iterators<sp/>that<sp/>iterate<sp/>over<sp/>all<sp/>tracks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight><highlight class="comment">//<sp/>that<sp/>meet<sp/>a<sp/>condition)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479" refid="class_track_list_cond_iterator_1a76bdf28da57b0da798563d6dfb3c347e" refkind="member"><highlight class="normal"><ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="class_track_list_cond_iterator_1a76bdf28da57b0da798563d6dfb3c347e" kindref="member">TrackListCondIterator::StartWith</ref>(<ref refid="class_track" kindref="compound">Track</ref><sp/>*val)</highlight></codeline>
<codeline lineno="480"><highlight class="normal">{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref><sp/>=<sp/><ref refid="class_track_list_iterator_1a4eea44fac9add00ff978213df1652441" kindref="member">TrackListIterator::StartWith</ref>(val);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t<sp/>&amp;&amp;<sp/>!this-&gt;Condition(t))</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>;</highlight></codeline>
<codeline lineno="487"><highlight class="normal">}</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489" refid="class_track_list_cond_iterator_1a1b09130ef5d92e19a60db05933d89ad5" refkind="member"><highlight class="normal"><ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="class_track_list_cond_iterator_1a1b09130ef5d92e19a60db05933d89ad5" kindref="member">TrackListCondIterator::First</ref>(<ref refid="class_track_list" kindref="compound">TrackList</ref><sp/>*val)</highlight></codeline>
<codeline lineno="490"><highlight class="normal">{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref><sp/>=<sp/><ref refid="class_track_list_iterator_1a81e19731fba5e1b83552aaf36c6f227c" kindref="member">TrackListIterator::First</ref>(val);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(t<sp/>&amp;&amp;<sp/>!this-&gt;Condition(t))<sp/>{</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/><ref refid="class_track_list_iterator_1a2f22c9a396a8803881ca6d9784039706" kindref="member">TrackListIterator::Next</ref>();</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>;</highlight></codeline>
<codeline lineno="498"><highlight class="normal">}</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500" refid="class_track_list_cond_iterator_1a9e3f44333f6cc2d0171315d389fb6582" refkind="member"><highlight class="normal"><ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="class_track_list_cond_iterator_1a9e3f44333f6cc2d0171315d389fb6582" kindref="member">TrackListCondIterator::Next</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>skiplinked)</highlight></codeline>
<codeline lineno="501"><highlight class="normal">{</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref><sp/>=<sp/><ref refid="class_track_list_iterator_1a2f22c9a396a8803881ca6d9784039706" kindref="member">TrackListIterator::Next</ref>(skiplinked))<sp/>{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;Condition(<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>))<sp/>{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="509"><highlight class="normal">}</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511" refid="class_track_list_cond_iterator_1a7eb9773d921f02cb3af1f674ca89b6a8" refkind="member"><highlight class="normal"><ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="class_track_list_cond_iterator_1a7eb9773d921f02cb3af1f674ca89b6a8" kindref="member">TrackListCondIterator::Prev</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>skiplinked)</highlight></codeline>
<codeline lineno="512"><highlight class="normal">{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref><sp/>=<sp/><ref refid="class_track_list_iterator_1aab7ae71449d30b13cffcfb89ced52510" kindref="member">TrackListIterator::Prev</ref>(skiplinked))</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;Condition(<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>))<sp/>{</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="521"><highlight class="normal">}</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight></codeline>
<codeline lineno="523" refid="class_track_list_cond_iterator_1abf53bb5c398f4fde2ee09fd13a37322e" refkind="member"><highlight class="normal"><ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="class_track_list_cond_iterator_1abf53bb5c398f4fde2ee09fd13a37322e" kindref="member">TrackListCondIterator::Last</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>skiplinked)</highlight></codeline>
<codeline lineno="524"><highlight class="normal">{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref><sp/>=<sp/><ref refid="class_track_list_iterator_1a071f2a9fd59d6e84718bf43881ca564b" kindref="member">TrackListIterator::Last</ref>(skiplinked);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(t<sp/>&amp;&amp;<sp/>!this-&gt;Condition(t))<sp/>{</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/><ref refid="class_track_list_iterator_1aab7ae71449d30b13cffcfb89ced52510" kindref="member">TrackListIterator::Prev</ref>(skiplinked);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>;</highlight></codeline>
<codeline lineno="532"><highlight class="normal">}</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TrackListOfKindIterator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535" refid="class_track_list_of_kind_iterator_1ac507219655f0b11df5a5706d282d732e" refkind="member"><highlight class="normal"><ref refid="class_track_list_of_kind_iterator_1ac507219655f0b11df5a5706d282d732e" kindref="member">TrackListOfKindIterator::TrackListOfKindIterator</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>kind,<sp/><ref refid="class_track_list" kindref="compound">TrackList</ref><sp/>*<sp/>val)</highlight></codeline>
<codeline lineno="536"><highlight class="normal">:<sp/><sp/><ref refid="class_track_list_cond_iterator" kindref="compound">TrackListCondIterator</ref>(val)</highlight></codeline>
<codeline lineno="537"><highlight class="normal">{</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/>this-&gt;kind<sp/>=<sp/>kind;</highlight></codeline>
<codeline lineno="539"><highlight class="normal">}</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541" refid="class_track_list_of_kind_iterator_1a492ca22360cbf4b245046b997ae852be" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_track_list_of_kind_iterator_1a492ca22360cbf4b245046b997ae852be" kindref="member">TrackListOfKindIterator::Condition</ref>(<ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>)</highlight></codeline>
<codeline lineno="542"><highlight class="normal">{</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kind<sp/>==<sp/><ref refid="class_track_1a4a6604845139575dfc25be299aeb60efaa2633d5555a8b46b60c277da23d207f4" kindref="member">Track::All</ref><sp/>||<sp/>t-&gt;<ref refid="class_track_1ad71d0460cf42bcde59dcf600af7ef6b7" kindref="member">GetKind</ref>()<sp/>==<sp/>kind;</highlight></codeline>
<codeline lineno="544"><highlight class="normal">}</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight><highlight class="comment">//SelectedTrackListOfKindIterator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547" refid="class_selected_track_list_of_kind_iterator_1ab307749fb203b297f07a9e10bccc750f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_selected_track_list_of_kind_iterator_1ab307749fb203b297f07a9e10bccc750f" kindref="member">SelectedTrackListOfKindIterator::Condition</ref>(<ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>)</highlight></codeline>
<codeline lineno="548"><highlight class="normal">{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_track_list_of_kind_iterator_1a492ca22360cbf4b245046b997ae852be" kindref="member">TrackListOfKindIterator::Condition</ref>(t)<sp/>&amp;&amp;<sp/>t-&gt;<ref refid="class_track_1ac01a2b30ea7a2574d724bae023427905" kindref="member">GetSelected</ref>();</highlight></codeline>
<codeline lineno="550"><highlight class="normal">}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight><highlight class="comment">//<sp/>VisibleTrackIterator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Based<sp/>on<sp/>TrackListIterator<sp/>returns<sp/>only<sp/>the<sp/>currently<sp/>visible<sp/>tracks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556" refid="class_visible_track_iterator_1aabf991905ca308ed58ae83b12c5d7638" refkind="member"><highlight class="normal"><ref refid="class_visible_track_iterator_1aabf991905ca308ed58ae83b12c5d7638" kindref="member">VisibleTrackIterator::VisibleTrackIterator</ref>(<ref refid="class_audacity_project" kindref="compound">AudacityProject</ref><sp/>*project)</highlight></codeline>
<codeline lineno="557"><highlight class="normal">:<sp/><sp/><ref refid="class_track_list_cond_iterator" kindref="compound">TrackListCondIterator</ref>(project-&gt;GetTracks())</highlight></codeline>
<codeline lineno="558"><highlight class="normal">{</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/>mProject<sp/>=<sp/>project;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/>mPanelRect.SetTop(mProject-&gt;<ref refid="class_audacity_project_1aefe314298c89d89d301515e586d3c2fc" kindref="member">mViewInfo</ref>.<ref refid="class_zoom_info_1ae96b54cadf85fe96e933a6af9edbd660" kindref="member">vpos</ref>);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/>mPanelRect.SetSize(mProject-&gt;<ref refid="class_audacity_project_1add7d5b485b447d38c81ce5765c46f892" kindref="member">GetTPTracksUsableArea</ref>());</highlight></codeline>
<codeline lineno="562"><highlight class="normal">}</highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="564" refid="class_visible_track_iterator_1a4c99d48b35e8449ad6b2b44bd7a7ab1e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_visible_track_iterator_1a4c99d48b35e8449ad6b2b44bd7a7ab1e" kindref="member">VisibleTrackIterator::Condition</ref>(<ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>)</highlight></codeline>
<codeline lineno="565"><highlight class="normal">{</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/>wxRect<sp/>r(0,<sp/>t-&gt;<ref refid="class_track_1adefbd93c6cbde70d082a64729cfc74d8" kindref="member">GetY</ref>(),<sp/>1,<sp/>t-&gt;<ref refid="class_track_1aa88d6a8dabe0be72aa34bdebdc41d07b" kindref="member">GetHeight</ref>());</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r.Intersects(mPanelRect);</highlight></codeline>
<codeline lineno="568"><highlight class="normal">}</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SyncLockedTracksIterator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Based<sp/>on<sp/>TrackListIterator<sp/>returns<sp/>only<sp/>tracks<sp/>belonging<sp/>to<sp/>the<sp/>group</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>which<sp/>the<sp/>starting<sp/>track<sp/>is<sp/>a<sp/>member.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575" refid="class_sync_locked_tracks_iterator_1a28cce8be57b5391496f39f6dbb487d0f" refkind="member"><highlight class="normal"><ref refid="class_sync_locked_tracks_iterator_1a28cce8be57b5391496f39f6dbb487d0f" kindref="member">SyncLockedTracksIterator::SyncLockedTracksIterator</ref>(<ref refid="class_track_list" kindref="compound">TrackList</ref><sp/>*<sp/>val)</highlight></codeline>
<codeline lineno="576"><highlight class="normal">:<sp/><sp/><ref refid="class_track_list_iterator" kindref="compound">TrackListIterator</ref>(val),</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/>mInLabelSection(<ref refid="ordinals_8h_1a65e9886d74aaee76545e83dd09011727" kindref="member">false</ref>)</highlight></codeline>
<codeline lineno="578"><highlight class="normal">{</highlight></codeline>
<codeline lineno="579"><highlight class="normal">}</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581" refid="class_sync_locked_tracks_iterator_1aa53e5be7c38eca13ad9030c8e497164c" refkind="member"><highlight class="normal"><ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="class_sync_locked_tracks_iterator_1aa53e5be7c38eca13ad9030c8e497164c" kindref="member">SyncLockedTracksIterator::StartWith</ref>(<ref refid="class_track" kindref="compound">Track</ref><sp/>*<sp/><ref refid="xleval_8c_1a3a669d2cc56c116777f0d573d8194e48" kindref="member">member</ref>)</highlight></codeline>
<codeline lineno="582"><highlight class="normal">{</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>A<sp/>sync-locked<sp/>group<sp/>consists<sp/>of<sp/>any<sp/>positive<sp/>number<sp/>of<sp/>wave<sp/>tracks<sp/>followed<sp/>by<sp/>any</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>non-negative<sp/>number<sp/>of<sp/>label<sp/>tracks.<sp/>Step<sp/>back<sp/>through<sp/>any<sp/>label<sp/>tracks,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>then<sp/>through<sp/>the<sp/>wave<sp/>tracks<sp/>above<sp/>them.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(member<sp/>&amp;&amp;<sp/>member-&gt;<ref refid="class_track_1ad71d0460cf42bcde59dcf600af7ef6b7" kindref="member">GetKind</ref>()<sp/>==<sp/><ref refid="class_track_1a4a6604845139575dfc25be299aeb60efaaa103f3467e47ffcb1aa408d53f7bf6e" kindref="member">Track::Label</ref>)<sp/>{</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>member<sp/>=<sp/><ref refid="class_track_list_iterator_1a3175cf862ae1927e1daf02b7d524bff9" kindref="member">l</ref>-&gt;<ref refid="class_track_list_1a9d755b371600e0d2fd109974de7e035b" kindref="member">GetPrev</ref>(member);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(member<sp/>&amp;&amp;<sp/>(member-&gt;<ref refid="class_track_1ad71d0460cf42bcde59dcf600af7ef6b7" kindref="member">GetKind</ref>()<sp/>==<sp/><ref refid="class_track_1a4a6604845139575dfc25be299aeb60efab39033be088537a007532668cb6d16a8" kindref="member">Track::Wave</ref></highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_MIDI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>member-&gt;<ref refid="class_track_1ad71d0460cf42bcde59dcf600af7ef6b7" kindref="member">GetKind</ref>()<sp/>==<sp/>Track::Note</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>))<sp/>{</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/><ref refid="xleval_8c_1a3a669d2cc56c116777f0d573d8194e48" kindref="member">member</ref>;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>member<sp/>=<sp/><ref refid="class_track_list_iterator_1a3175cf862ae1927e1daf02b7d524bff9" kindref="member">l</ref>-&gt;<ref refid="class_track_list_1a9d755b371600e0d2fd109974de7e035b" kindref="member">GetPrev</ref>(member);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>it<sp/>current<sp/>(if<sp/>t<sp/>is<sp/>still<sp/>NULL<sp/>there<sp/>are<sp/>no<sp/>wave<sp/>tracks,<sp/>so<sp/>we&apos;re</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>not<sp/>in<sp/>a<sp/>sync-locked<sp/>group).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t)</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track_list_iterator_1a318ea42b1c2621226a11e1d005ce51ad" kindref="member">cur</ref><sp/>=<sp/>(<ref refid="struct_track_list_node" kindref="compound">TrackListNode</ref><sp/>*)<sp/>t-&gt;<ref refid="class_track_1a4439c1f48c56aee62e09b2ea7c0a2124" kindref="member">GetNode</ref>();</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/>mInLabelSection<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>;</highlight></codeline>
<codeline lineno="610"><highlight class="normal">}</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612" refid="class_sync_locked_tracks_iterator_1a09ddbd2c99421aa60ec63c1ec0ce3f51" refkind="member"><highlight class="normal"><ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="class_sync_locked_tracks_iterator_1a09ddbd2c99421aa60ec63c1ec0ce3f51" kindref="member">SyncLockedTracksIterator::Next</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>skiplinked)</highlight></codeline>
<codeline lineno="613"><highlight class="normal">{</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref><sp/>=<sp/><ref refid="class_track_list_iterator_1a2f22c9a396a8803881ca6d9784039706" kindref="member">TrackListIterator::Next</ref>(skiplinked);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ways<sp/>to<sp/>end<sp/>a<sp/>sync-locked<sp/>group</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>End<sp/>of<sp/>tracks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!t)</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>the<sp/>label<sp/>section,<sp/>encounter<sp/>a<sp/>non-label<sp/>track</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mInLabelSection<sp/>&amp;&amp;<sp/>t-&gt;<ref refid="class_track_1ad71d0460cf42bcde59dcf600af7ef6b7" kindref="member">GetKind</ref>()<sp/>!=<sp/><ref refid="class_track_1a4a6604845139575dfc25be299aeb60efaaa103f3467e47ffcb1aa408d53f7bf6e" kindref="member">Track::Label</ref>)<sp/>{</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track_list_iterator_1a318ea42b1c2621226a11e1d005ce51ad" kindref="member">cur</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>code<sp/>block<sp/>stops<sp/>a<sp/>group<sp/>when<sp/>a<sp/>NoteTrack<sp/>is<sp/>encountered</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>USE_MIDI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Encounter<sp/>a<sp/>non-wave<sp/>non-label<sp/>track</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t-&gt;<ref refid="class_track_1ad71d0460cf42bcde59dcf600af7ef6b7" kindref="member">GetKind</ref>()<sp/>!=<sp/><ref refid="class_track_1a4a6604845139575dfc25be299aeb60efab39033be088537a007532668cb6d16a8" kindref="member">Track::Wave</ref><sp/>&amp;&amp;<sp/>t-&gt;<ref refid="class_track_1ad71d0460cf42bcde59dcf600af7ef6b7" kindref="member">GetKind</ref>()<sp/>!=<sp/><ref refid="class_track_1a4a6604845139575dfc25be299aeb60efaaa103f3467e47ffcb1aa408d53f7bf6e" kindref="member">Track::Label</ref>)<sp/>{</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track_list_iterator_1a318ea42b1c2621226a11e1d005ce51ad" kindref="member">cur</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Otherwise,<sp/>check<sp/>if<sp/>we&apos;re<sp/>in<sp/>the<sp/>label<sp/>section</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/>mInLabelSection<sp/>=<sp/>(t-&gt;<ref refid="class_track_1ad71d0460cf42bcde59dcf600af7ef6b7" kindref="member">GetKind</ref>()<sp/>==<sp/><ref refid="class_track_1a4a6604845139575dfc25be299aeb60efaaa103f3467e47ffcb1aa408d53f7bf6e" kindref="member">Track::Label</ref>);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>;</highlight></codeline>
<codeline lineno="641"><highlight class="normal">}</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="643" refid="class_sync_locked_tracks_iterator_1a24604c1290e8ede5c306ead1b5054ea0" refkind="member"><highlight class="normal"><ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="class_sync_locked_tracks_iterator_1a24604c1290e8ede5c306ead1b5054ea0" kindref="member">SyncLockedTracksIterator::Prev</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>skiplinked)</highlight></codeline>
<codeline lineno="644"><highlight class="normal">{</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref><sp/>=<sp/><ref refid="class_track_list_iterator_1aab7ae71449d30b13cffcfb89ced52510" kindref="member">TrackListIterator::Prev</ref>(skiplinked);</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Ways<sp/>to<sp/>end<sp/>a<sp/>sync-locked<sp/>group<sp/>in<sp/>reverse</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Beginning<sp/>of<sp/>tracks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!t)</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>wave<sp/>section,<sp/>encounter<sp/>a<sp/>label<sp/>track</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!mInLabelSection<sp/>&amp;&amp;<sp/>t-&gt;<ref refid="class_track_1ad71d0460cf42bcde59dcf600af7ef6b7" kindref="member">GetKind</ref>()<sp/>==<sp/><ref refid="class_track_1a4a6604845139575dfc25be299aeb60efaaa103f3467e47ffcb1aa408d53f7bf6e" kindref="member">Track::Label</ref>)<sp/>{</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track_list_iterator_1a318ea42b1c2621226a11e1d005ce51ad" kindref="member">cur</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>USE_MIDI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Encounter<sp/>a<sp/>non-wave<sp/>non-label<sp/>track</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t-&gt;<ref refid="class_track_1ad71d0460cf42bcde59dcf600af7ef6b7" kindref="member">GetKind</ref>()<sp/>!=<sp/><ref refid="class_track_1a4a6604845139575dfc25be299aeb60efab39033be088537a007532668cb6d16a8" kindref="member">Track::Wave</ref><sp/>&amp;&amp;<sp/>t-&gt;<ref refid="class_track_1ad71d0460cf42bcde59dcf600af7ef6b7" kindref="member">GetKind</ref>()<sp/>!=<sp/><ref refid="class_track_1a4a6604845139575dfc25be299aeb60efaaa103f3467e47ffcb1aa408d53f7bf6e" kindref="member">Track::Label</ref>)<sp/>{</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track_list_iterator_1a318ea42b1c2621226a11e1d005ce51ad" kindref="member">cur</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Otherwise,<sp/>check<sp/>if<sp/>we&apos;re<sp/>in<sp/>the<sp/>label<sp/>section</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/>mInLabelSection<sp/>=<sp/>(t-&gt;<ref refid="class_track_1ad71d0460cf42bcde59dcf600af7ef6b7" kindref="member">GetKind</ref>()<sp/>==<sp/><ref refid="class_track_1a4a6604845139575dfc25be299aeb60efaaa103f3467e47ffcb1aa408d53f7bf6e" kindref="member">Track::Label</ref>);</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>;</highlight></codeline>
<codeline lineno="671"><highlight class="normal">}</highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight></codeline>
<codeline lineno="673" refid="class_sync_locked_tracks_iterator_1ac9ce3caff468dfc78feaa008bdcb9783" refkind="member"><highlight class="normal"><ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="class_sync_locked_tracks_iterator_1ac9ce3caff468dfc78feaa008bdcb9783" kindref="member">SyncLockedTracksIterator::Last</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>skiplinked)</highlight></codeline>
<codeline lineno="674"><highlight class="normal">{</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="class_track_list_iterator_1a318ea42b1c2621226a11e1d005ce51ad" kindref="member">cur</ref>)</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref><sp/>=<sp/><ref refid="class_track_list_iterator_1a318ea42b1c2621226a11e1d005ce51ad" kindref="member">cur</ref>-&gt;<ref refid="struct_track_list_node_1a26289d63f33d878f15946ad938f7d73a" kindref="member">t</ref>;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="class_track_list_iterator_1a3175cf862ae1927e1daf02b7d524bff9" kindref="member">l</ref>-&gt;<ref refid="class_track_list_1afb3f6443fda8c1ca54df19e43ad769dd" kindref="member">GetNext</ref>(t))<sp/>{</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>this<sp/>is<sp/>the<sp/>last<sp/>track<sp/>in<sp/>the<sp/>sync-locked<sp/>group.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nextKind<sp/>=<sp/><ref refid="class_track_list_iterator_1a3175cf862ae1927e1daf02b7d524bff9" kindref="member">l</ref>-&gt;<ref refid="class_track_list_1afb3f6443fda8c1ca54df19e43ad769dd" kindref="member">GetNext</ref>(t)-&gt;<ref refid="class_track_1ad71d0460cf42bcde59dcf600af7ef6b7" kindref="member">GetKind</ref>();</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mInLabelSection<sp/>&amp;&amp;<sp/>nextKind<sp/>!=<sp/><ref refid="class_track_1a4a6604845139575dfc25be299aeb60efaaa103f3467e47ffcb1aa408d53f7bf6e" kindref="member">Track::Label</ref>)</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nextKind<sp/>!=<sp/><ref refid="class_track_1a4a6604845139575dfc25be299aeb60efaaa103f3467e47ffcb1aa408d53f7bf6e" kindref="member">Track::Label</ref><sp/>&amp;&amp;<sp/>nextKind<sp/>!=<sp/><ref refid="class_track_1a4a6604845139575dfc25be299aeb60efab39033be088537a007532668cb6d16a8" kindref="member">Track::Wave</ref></highlight></codeline>
<codeline lineno="686"><highlight class="normal">#ifdef<sp/><ref refid="mac_2config_2i386_2src_2configunix_8h_1abe42f070a2d262c97b548828a01615d1" kindref="member">USE_MIDI</ref></highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>nextKind<sp/>!=<sp/>Track::Note</highlight></codeline>
<codeline lineno="688"><highlight class="normal">#<ref refid="sndfile__play_8m_1a74c64864f5283ae06d4a981642a59af9" kindref="member">endif</ref></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/><ref refid="class_sync_locked_tracks_iterator_1a09ddbd2c99421aa60ec63c1ec0ce3f51" kindref="member">Next</ref>(skiplinked);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>;</highlight></codeline>
<codeline lineno="696"><highlight class="normal">}</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TrackList</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>TrackList<sp/>sends<sp/>itself<sp/>events<sp/>whenever<sp/>an<sp/>update<sp/>occurs<sp/>to<sp/>the<sp/>list<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight><highlight class="comment">//<sp/>is<sp/>managing.<sp/><sp/>Any<sp/>other<sp/>classes<sp/>that<sp/>may<sp/>be<sp/>interested<sp/>in<sp/>get<sp/>these<sp/>updates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight><highlight class="comment">//<sp/>should<sp/>use<sp/>TrackList::Connect()<sp/>and<sp/>TrackList::Disconnect().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><ref refid="src_2track_8cpp_1ad9bbb9d2388aa508eb837c698a1f011c" kindref="member">DEFINE_EVENT_TYPE</ref>(EVT_TRACKLIST_RESIZED);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><ref refid="src_2track_8cpp_1ad9bbb9d2388aa508eb837c698a1f011c" kindref="member">DEFINE_EVENT_TYPE</ref>(EVT_TRACKLIST_UPDATED);</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="708" refid="class_track_list_1a36c59978bc76cbf1de77e277087dfceb" refkind="member"><highlight class="normal"><ref refid="class_track_list_1a36c59978bc76cbf1de77e277087dfceb" kindref="member">TrackList::TrackList</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>destructorDeletesTracks)</highlight></codeline>
<codeline lineno="709"><highlight class="normal">:<sp/><sp/>wxEvtHandler()</highlight></codeline>
<codeline lineno="710"><highlight class="normal">,<sp/>mDestructorDeletesTracks(destructorDeletesTracks)</highlight></codeline>
<codeline lineno="711"><highlight class="normal">{</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/>head<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/>tail<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="714"><highlight class="normal">}</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="716" refid="class_track_list_1ae3b076cf308eb2d5db54f6bb2d91bb55" refkind="member"><highlight class="normal"><ref refid="class_track_list_1a36c59978bc76cbf1de77e277087dfceb" kindref="member">TrackList::TrackList</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_track_list" kindref="compound">TrackList</ref><sp/>&amp;that)</highlight></codeline>
<codeline lineno="717"><highlight class="normal">{</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/>DoAssign(that);</highlight></codeline>
<codeline lineno="719"><highlight class="normal">}</highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight></codeline>
<codeline lineno="721" refid="class_track_list_1a6de22801840ee9c260fc29713a1d54e7" refkind="member"><highlight class="normal"><ref refid="class_track_list" kindref="compound">TrackList</ref>&amp;<sp/><ref refid="class_track_list_1a6de22801840ee9c260fc29713a1d54e7" kindref="member">TrackList::operator= </ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_track_list" kindref="compound">TrackList</ref><sp/>&amp;that)</highlight></codeline>
<codeline lineno="722"><highlight class="normal">{</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>!=<sp/>&amp;that)<sp/>{</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_track_list_1ac3ab1489f0aed1b7a7a9609b86ba75c2" kindref="member">Clear</ref>(mDestructorDeletesTracks);</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>DoAssign(that);</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="728"><highlight class="normal">}</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730" refid="class_track_list_1a25030eac934787bfdca1a79c42a1fd00" refkind="member"><highlight class="normal"><ref refid="class_track_list_1a36c59978bc76cbf1de77e277087dfceb" kindref="member">TrackList::TrackList</ref>(<ref refid="class_track_list" kindref="compound">TrackList</ref><sp/>&amp;&amp;that)</highlight></codeline>
<codeline lineno="731"><highlight class="normal">{</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_list_1a7d02a7f59211a43dba6d804f40be75c7" kindref="member">Swap</ref>(that);</highlight></codeline>
<codeline lineno="733"><highlight class="normal">}</highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight></codeline>
<codeline lineno="735" refid="class_track_list_1aec1e6d0d3566a07dbf6d02d78513158f" refkind="member"><highlight class="normal"><ref refid="class_track_list" kindref="compound">TrackList</ref><sp/>&amp;<ref refid="class_track_list_1a6de22801840ee9c260fc29713a1d54e7" kindref="member">TrackList::operator= </ref>(<ref refid="class_track_list" kindref="compound">TrackList</ref><sp/>&amp;&amp;that)</highlight></codeline>
<codeline lineno="736"><highlight class="normal">{</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>!=<sp/>&amp;that)<sp/>{</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="class_track_list_1ac3ab1489f0aed1b7a7a9609b86ba75c2" kindref="member">Clear</ref>(mDestructorDeletesTracks);</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track_list_1a7d02a7f59211a43dba6d804f40be75c7" kindref="member">Swap</ref>(that);</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="742"><highlight class="normal">}</highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TrackList::DoAssign(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_track_list" kindref="compound">TrackList</ref><sp/>&amp;that)</highlight></codeline>
<codeline lineno="745"><highlight class="normal">{</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/>mDestructorDeletesTracks<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_list_const_iterator" kindref="compound">TrackListConstIterator</ref><sp/><ref refid="conv2dtest_8m_1a4b223b47b1bd746a69ed8ac37c4b16db" kindref="member">it</ref>(&amp;that);</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*track<sp/>=<sp/>it.<ref refid="class_track_list_const_iterator_1a293ba71ab85b8390b9f60929cb7ff799" kindref="member">First</ref>();<sp/>track;<sp/>track<sp/>=<sp/>it.<ref refid="class_track_list_const_iterator_1ac89a3b2236c0cb6ef0a63d7e8622b6af" kindref="member">Next</ref>())</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track_list_1a58714973bb20a5a2cff2c839db9d3117" kindref="member">Add</ref>(track-&gt;Duplicate());</highlight></codeline>
<codeline lineno="750"><highlight class="normal">}</highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight></codeline>
<codeline lineno="752" refid="class_track_list_1a7d02a7f59211a43dba6d804f40be75c7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_track_list_1a7d02a7f59211a43dba6d804f40be75c7" kindref="member">TrackList::Swap</ref>(<ref refid="class_track_list" kindref="compound">TrackList</ref><sp/>&amp;that)</highlight></codeline>
<codeline lineno="753"><highlight class="normal">{</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/>std::swap(mDestructorDeletesTracks,<sp/>that.mDestructorDeletesTracks);</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/>std::swap(head,<sp/>that.head);</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/>std::swap(tail,<sp/>that.tail);</highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track_list_iterator" kindref="compound">TrackListIterator</ref><sp/>iter(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref><sp/>=<sp/>iter.<ref refid="class_track_list_iterator_1a81e19731fba5e1b83552aaf36c6f227c" kindref="member">First</ref>();<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>;<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref><sp/>=<sp/>iter.<ref refid="class_track_list_iterator_1a2f22c9a396a8803881ca6d9784039706" kindref="member">Next</ref>())<sp/>{</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>-&gt;SetOwner(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>-&gt;SetOwner(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>iter.<ref refid="class_track_list_iterator_1a318ea42b1c2621226a11e1d005ce51ad" kindref="member">cur</ref>);</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track_list_iterator" kindref="compound">TrackListIterator</ref><sp/>iter(&amp;that);</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref><sp/>=<sp/>iter.<ref refid="class_track_list_iterator_1a81e19731fba5e1b83552aaf36c6f227c" kindref="member">First</ref>();<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>;<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref><sp/>=<sp/>iter.<ref refid="class_track_list_iterator_1a2f22c9a396a8803881ca6d9784039706" kindref="member">Next</ref>())<sp/>{</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>-&gt;SetOwner(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>-&gt;SetOwner(&amp;that,<sp/>iter.<ref refid="class_track_list_iterator_1a318ea42b1c2621226a11e1d005ce51ad" kindref="member">cur</ref>);</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="773"><highlight class="normal">}</highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="775" refid="class_track_list_1ae16147edd4a2f022b3c0d1dfbac2eab0" refkind="member"><highlight class="normal"><ref refid="class_track_list_1ae16147edd4a2f022b3c0d1dfbac2eab0" kindref="member">TrackList::~TrackList</ref>()</highlight></codeline>
<codeline lineno="776"><highlight class="normal">{</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_list_1ac3ab1489f0aed1b7a7a9609b86ba75c2" kindref="member">Clear</ref>(mDestructorDeletesTracks);</highlight></codeline>
<codeline lineno="778"><highlight class="normal">}</highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TrackList::RecalcPositions(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_track_list_node" kindref="compound">TrackListNode</ref><sp/>*<ref refid="structnode" kindref="compound">node</ref>)</highlight></codeline>
<codeline lineno="781"><highlight class="normal">{</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>;</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!node)<sp/>{</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_OUTPUT_DISPLAY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cnt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;<ref refid="struct_track_list_node_1a64fd2e1b6e421a0ff6438d828074e4c5" kindref="member">prev</ref>)<sp/>{</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>node-&gt;<ref refid="struct_track_list_node_1a64fd2e1b6e421a0ff6438d828074e4c5" kindref="member">prev</ref>-&gt;<ref refid="struct_track_list_node_1a26289d63f33d878f15946ad938f7d73a" kindref="member">t</ref>;</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>t-&gt;<ref refid="class_track_1a1e60222eef94930890417a8cf178153a" kindref="member">GetIndex</ref>()<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(MONO_WAVE_PAN(t))</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>t-&gt;<ref refid="class_track_1adefbd93c6cbde70d082a64729cfc74d8" kindref="member">GetY</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>+<sp/>t-&gt;<ref refid="class_track_1aa88d6a8dabe0be72aa34bdebdc41d07b" kindref="member">GetHeight</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>t-&gt;<ref refid="class_track_1adefbd93c6cbde70d082a64729cfc74d8" kindref="member">GetY</ref>()<sp/>+<sp/>t-&gt;<ref refid="class_track_1aa88d6a8dabe0be72aa34bdebdc41d07b" kindref="member">GetHeight</ref>();</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_track_list_node" kindref="compound">TrackListNode</ref><sp/>*n<sp/>=<sp/>node;<sp/>n;<sp/>n<sp/>=<sp/>n-&gt;<ref refid="struct_track_list_node_1a8a36ff5edca955b4906da6cb632f4a23" kindref="member">next</ref>)<sp/>{</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>n-&gt;t;</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(MONO_WAVE_PAN(t))</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cnt++;</highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(cnt<sp/>!=<sp/>2){</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t-&gt;<ref refid="class_track_1a8e7b7fa7741477db3d54de3a10460587" kindref="member">SetIndex</ref>(i++);</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t-&gt;<ref refid="class_track_1a5527bdbc39489fa70b4d89d7c7118690" kindref="member">SetY</ref>(y);</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>+=<sp/>t-&gt;<ref refid="class_track_1aa88d6a8dabe0be72aa34bdebdc41d07b" kindref="member">GetHeight</ref>();</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(cnt<sp/>!=<sp/>0){</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t-&gt;<ref refid="class_track_1a5527bdbc39489fa70b4d89d7c7118690" kindref="member">SetY</ref>(y,</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>+=<sp/>t-&gt;<ref refid="class_track_1aa88d6a8dabe0be72aa34bdebdc41d07b" kindref="member">GetHeight</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cnt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/>//<sp/>EXPERIMENTAL_OUTPUT_DISPLAY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;<ref refid="struct_track_list_node_1a64fd2e1b6e421a0ff6438d828074e4c5" kindref="member">prev</ref>)<sp/>{</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>node-&gt;<ref refid="struct_track_list_node_1a64fd2e1b6e421a0ff6438d828074e4c5" kindref="member">prev</ref>-&gt;<ref refid="struct_track_list_node_1a26289d63f33d878f15946ad938f7d73a" kindref="member">t</ref>;</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>t-&gt;<ref refid="class_track_1a1e60222eef94930890417a8cf178153a" kindref="member">GetIndex</ref>()<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>t-&gt;<ref refid="class_track_1adefbd93c6cbde70d082a64729cfc74d8" kindref="member">GetY</ref>()<sp/>+<sp/>t-&gt;<ref refid="class_track_1aa88d6a8dabe0be72aa34bdebdc41d07b" kindref="member">GetHeight</ref>();</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_track_list_node" kindref="compound">TrackListNode</ref><sp/>*n<sp/>=<sp/>node;<sp/>n;<sp/>n<sp/>=<sp/>n-&gt;<ref refid="struct_track_list_node_1a8a36ff5edca955b4906da6cb632f4a23" kindref="member">next</ref>)<sp/>{</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t<sp/>=<sp/>n-&gt;t;</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t-&gt;<ref refid="class_track_1a8e7b7fa7741477db3d54de3a10460587" kindref="member">SetIndex</ref>(i++);</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t-&gt;<ref refid="class_track_1a5527bdbc39489fa70b4d89d7c7118690" kindref="member">SetY</ref>(y);</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>+=<sp/>t-&gt;<ref refid="class_track_1aa88d6a8dabe0be72aa34bdebdc41d07b" kindref="member">GetHeight</ref>();</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>EXPERIMENTAL_OUTPUT_DISPLAY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal">}</highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TrackList::UpdatedEvent(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_track_list_node" kindref="compound">TrackListNode</ref><sp/>*node)</highlight></codeline>
<codeline lineno="834"><highlight class="normal">{</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/>wxCommandEvent<sp/><ref refid="namespacelv2docgen_1a4405dc5a2509537b9ff3b4de10bc28d6" kindref="member">e</ref>(EVT_TRACKLIST_UPDATED);</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node)<sp/>{</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>e.SetClientData(node-&gt;<ref refid="struct_track_list_node_1a26289d63f33d878f15946ad938f7d73a" kindref="member">t</ref>);</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>e.SetClientData(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/>ProcessEvent(e);</highlight></codeline>
<codeline lineno="843"><highlight class="normal">}</highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TrackList::ResizedEvent(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_track_list_node" kindref="compound">TrackListNode</ref><sp/>*node)</highlight></codeline>
<codeline lineno="846"><highlight class="normal">{</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node)<sp/>{</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>wxCommandEvent<sp/><ref refid="namespacelv2docgen_1a4405dc5a2509537b9ff3b4de10bc28d6" kindref="member">e</ref>(EVT_TRACKLIST_RESIZED);</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>e.SetClientData(node-&gt;<ref refid="struct_track_list_node_1a26289d63f33d878f15946ad938f7d73a" kindref="member">t</ref>);</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ProcessEvent(e);</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="852"><highlight class="normal">}</highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight></codeline>
<codeline lineno="854" refid="class_track_list_1a58714973bb20a5a2cff2c839db9d3117" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_track_list_1a58714973bb20a5a2cff2c839db9d3117" kindref="member">TrackList::Add</ref>(<ref refid="class_track" kindref="compound">Track</ref><sp/>*<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>)</highlight></codeline>
<codeline lineno="855"><highlight class="normal">{</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_track_list_node" kindref="compound">TrackListNode</ref><sp/>*n<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_track_list_node" kindref="compound">TrackListNode</ref>;</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/>t-&gt;<ref refid="class_track_1abea3b67734ed3ac7f9873fa7fdb86c82" kindref="member">SetOwner</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>n);</highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/>n-&gt;<ref refid="struct_track_list_node_1a26289d63f33d878f15946ad938f7d73a" kindref="member">t</ref><sp/>=<sp/>(<ref refid="class_track" kindref="compound">Track</ref><sp/>*)<sp/>t;</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/>n-&gt;<ref refid="struct_track_list_node_1a64fd2e1b6e421a0ff6438d828074e4c5" kindref="member">prev</ref><sp/>=<sp/>tail;</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/>n-&gt;<ref refid="struct_track_list_node_1a8a36ff5edca955b4906da6cb632f4a23" kindref="member">next</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tail)<sp/>{</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tail-&gt;<ref refid="struct_track_list_node_1a8a36ff5edca955b4906da6cb632f4a23" kindref="member">next</ref><sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/>tail<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!head)<sp/>{</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>head<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/>RecalcPositions(n);</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/>UpdatedEvent(n);</highlight></codeline>
<codeline lineno="874"><highlight class="normal">}</highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight></codeline>
<codeline lineno="876" refid="class_track_list_1a5d69082a9b198430c88a35866cfeac9f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_track_list_1a5d69082a9b198430c88a35866cfeac9f" kindref="member">TrackList::AddToHead</ref>(<ref refid="class_track" kindref="compound">Track</ref><sp/>*<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>)</highlight></codeline>
<codeline lineno="877"><highlight class="normal">{</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_track_list_node" kindref="compound">TrackListNode</ref><sp/>*n<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_track_list_node" kindref="compound">TrackListNode</ref>;</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/>t-&gt;<ref refid="class_track_1abea3b67734ed3ac7f9873fa7fdb86c82" kindref="member">SetOwner</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>n);</highlight></codeline>
<codeline lineno="880"><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/>n-&gt;<ref refid="struct_track_list_node_1a26289d63f33d878f15946ad938f7d73a" kindref="member">t</ref><sp/>=<sp/>(<ref refid="class_track" kindref="compound">Track</ref><sp/>*)<sp/>t;</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/>n-&gt;<ref refid="struct_track_list_node_1a64fd2e1b6e421a0ff6438d828074e4c5" kindref="member">prev</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/>n-&gt;<ref refid="struct_track_list_node_1a8a36ff5edca955b4906da6cb632f4a23" kindref="member">next</ref><sp/>=<sp/>head;</highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(head)<sp/>{</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>head-&gt;<ref refid="struct_track_list_node_1a64fd2e1b6e421a0ff6438d828074e4c5" kindref="member">prev</ref><sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/>head<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tail)<sp/>{</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>tail<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="893"><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/>RecalcPositions(head);</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/>UpdatedEvent(n);</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/>ResizedEvent(n);</highlight></codeline>
<codeline lineno="897"><highlight class="normal">}</highlight></codeline>
<codeline lineno="898"><highlight class="normal"></highlight></codeline>
<codeline lineno="899" refid="class_track_list_1acab8df6b84a02731cda269fcd27ce99c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_track_list_1acab8df6b84a02731cda269fcd27ce99c" kindref="member">TrackList::Replace</ref>(<ref refid="class_track" kindref="compound">Track</ref><sp/>*<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>,<sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*<sp/>with,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>deletetrack)</highlight></codeline>
<codeline lineno="900"><highlight class="normal">{</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t<sp/>&amp;&amp;<sp/>with)<sp/>{</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_track_list_node" kindref="compound">TrackListNode</ref><sp/>*node<sp/>=</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><ref refid="struct_track_list_node" kindref="compound">TrackListNode</ref><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(t-&gt;<ref refid="class_track_1a4439c1f48c56aee62e09b2ea7c0a2124" kindref="member">GetNode</ref>());</highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t-&gt;<ref refid="class_track_1abea3b67734ed3ac7f9873fa7fdb86c82" kindref="member">SetOwner</ref>(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(deletetrack)<sp/>{</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>;</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="909"><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="struct_track_list_node_1a26289d63f33d878f15946ad938f7d73a" kindref="member">t</ref><sp/>=<sp/>with;</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>with-&gt;<ref refid="class_track_1abea3b67734ed3ac7f9873fa7fdb86c82" kindref="member">SetOwner</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>node);</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>RecalcPositions(node);</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>UpdatedEvent(node);</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ResizedEvent(node);</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="916"><highlight class="normal">}</highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight></codeline>
<codeline lineno="918" refid="class_track_list_1ae73a887a39f20f0429c46b26e2de0919" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_track_list_1ae73a887a39f20f0429c46b26e2de0919" kindref="member">TrackList::Remove</ref>(<ref refid="class_track" kindref="compound">Track</ref><sp/>*<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>deletetrack)</highlight></codeline>
<codeline lineno="919"><highlight class="normal">{</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t)<sp/>{</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_track_list_node" kindref="compound">TrackListNode</ref><sp/>*node<sp/>=<sp/>(<ref refid="struct_track_list_node" kindref="compound">TrackListNode</ref><sp/>*)<sp/>t-&gt;<ref refid="class_track_1a4439c1f48c56aee62e09b2ea7c0a2124" kindref="member">GetNode</ref>();</highlight></codeline>
<codeline lineno="922"><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>t-&gt;<ref refid="class_track_1abea3b67734ed3ac7f9873fa7fdb86c82" kindref="member">SetOwner</ref>(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(deletetrack)<sp/>{</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>;</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="927"><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node)<sp/>{</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;<ref refid="struct_track_list_node_1a64fd2e1b6e421a0ff6438d828074e4c5" kindref="member">prev</ref>)<sp/>{</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="struct_track_list_node_1a64fd2e1b6e421a0ff6438d828074e4c5" kindref="member">prev</ref>-&gt;<ref refid="struct_track_list_node_1a8a36ff5edca955b4906da6cb632f4a23" kindref="member">next</ref><sp/>=<sp/>node-&gt;<ref refid="struct_track_list_node_1a8a36ff5edca955b4906da6cb632f4a23" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>head<sp/>=<sp/>node-&gt;<ref refid="struct_track_list_node_1a8a36ff5edca955b4906da6cb632f4a23" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="935"><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;<ref refid="struct_track_list_node_1a8a36ff5edca955b4906da6cb632f4a23" kindref="member">next</ref>)<sp/>{</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="struct_track_list_node_1a8a36ff5edca955b4906da6cb632f4a23" kindref="member">next</ref>-&gt;<ref refid="struct_track_list_node_1a64fd2e1b6e421a0ff6438d828074e4c5" kindref="member">prev</ref><sp/>=<sp/>node-&gt;<ref refid="struct_track_list_node_1a64fd2e1b6e421a0ff6438d828074e4c5" kindref="member">prev</ref>;</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RecalcPositions(node-&gt;<ref refid="struct_track_list_node_1a8a36ff5edca955b4906da6cb632f4a23" kindref="member">next</ref>);</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tail<sp/>=<sp/>node-&gt;<ref refid="struct_track_list_node_1a64fd2e1b6e421a0ff6438d828074e4c5" kindref="member">prev</ref>;</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="943"><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UpdatedEvent(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ResizedEvent(node-&gt;<ref refid="struct_track_list_node_1a8a36ff5edca955b4906da6cb632f4a23" kindref="member">next</ref>);</highlight></codeline>
<codeline lineno="946"><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>node;</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="950"><highlight class="normal">}</highlight></codeline>
<codeline lineno="951"><highlight class="normal"></highlight></codeline>
<codeline lineno="952" refid="class_track_list_1ac3ab1489f0aed1b7a7a9609b86ba75c2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_track_list_1ac3ab1489f0aed1b7a7a9609b86ba75c2" kindref="member">TrackList::Clear</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>deleteTracks<sp/></highlight><highlight class="comment">/*<sp/>=<sp/>false<sp/>*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="953"><highlight class="normal">{</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(head)<sp/>{</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_track_list_node" kindref="compound">TrackListNode</ref><sp/>*temp<sp/>=<sp/>head;</highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>head-&gt;<ref refid="struct_track_list_node_1a26289d63f33d878f15946ad938f7d73a" kindref="member">t</ref>-&gt;<ref refid="class_track_1abea3b67734ed3ac7f9873fa7fdb86c82" kindref="member">SetOwner</ref>(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(deleteTracks)<sp/>{</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>head-&gt;<ref refid="struct_track_list_node_1a26289d63f33d878f15946ad938f7d73a" kindref="member">t</ref>;</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="961"><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>head<sp/>=<sp/>head-&gt;<ref refid="struct_track_list_node_1a8a36ff5edca955b4906da6cb632f4a23" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>temp;</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/>tail<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="966"><highlight class="normal"></highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/>UpdatedEvent(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="968"><highlight class="normal">}</highlight></codeline>
<codeline lineno="969"><highlight class="normal"></highlight></codeline>
<codeline lineno="970" refid="class_track_list_1acdf335b82b04d4ac66d035a2b839d45d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_track_list_1acdf335b82b04d4ac66d035a2b839d45d" kindref="member">TrackList::Select</ref>(<ref refid="class_track" kindref="compound">Track</ref><sp/>*<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>selected<sp/></highlight><highlight class="comment">/*<sp/>=<sp/>true<sp/>*/</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="971"><highlight class="normal">{</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t)<sp/>{</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_track_list_node" kindref="compound">TrackListNode</ref><sp/>*node<sp/>=<sp/>t-&gt;<ref refid="class_track_1a4439c1f48c56aee62e09b2ea7c0a2124" kindref="member">GetNode</ref>();</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node)<sp/>{</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t-&gt;<ref refid="class_track_1a194ddc15cc66ade28b85d2417dc1694a" kindref="member">SetSelected</ref>(selected);</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t-&gt;<ref refid="class_track_1abe5a26d73a2beddbacd19a39f4286fb2" kindref="member">GetLinked</ref>()<sp/>&amp;&amp;<sp/>node-&gt;<ref refid="struct_track_list_node_1a8a36ff5edca955b4906da6cb632f4a23" kindref="member">next</ref>)<sp/>{</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="struct_track_list_node_1a8a36ff5edca955b4906da6cb632f4a23" kindref="member">next</ref>-&gt;<ref refid="struct_track_list_node_1a26289d63f33d878f15946ad938f7d73a" kindref="member">t</ref>-&gt;<ref refid="class_track_1a194ddc15cc66ade28b85d2417dc1694a" kindref="member">SetSelected</ref>(selected);</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node-&gt;<ref refid="struct_track_list_node_1a64fd2e1b6e421a0ff6438d828074e4c5" kindref="member">prev</ref><sp/>&amp;&amp;<sp/>node-&gt;<ref refid="struct_track_list_node_1a64fd2e1b6e421a0ff6438d828074e4c5" kindref="member">prev</ref>-&gt;<ref refid="struct_track_list_node_1a26289d63f33d878f15946ad938f7d73a" kindref="member">t</ref>-&gt;<ref refid="class_track_1abe5a26d73a2beddbacd19a39f4286fb2" kindref="member">GetLinked</ref>())<sp/>{</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node-&gt;<ref refid="struct_track_list_node_1a64fd2e1b6e421a0ff6438d828074e4c5" kindref="member">prev</ref>-&gt;<ref refid="struct_track_list_node_1a26289d63f33d878f15946ad938f7d73a" kindref="member">t</ref>-&gt;<ref refid="class_track_1a194ddc15cc66ade28b85d2417dc1694a" kindref="member">SetSelected</ref>(selected);</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="984"><highlight class="normal">}</highlight></codeline>
<codeline lineno="985"><highlight class="normal"></highlight></codeline>
<codeline lineno="986" refid="class_track_list_1af0d4ee927f537edcb4b191c68952d729" refkind="member"><highlight class="normal"><ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="class_track_list_1af0d4ee927f537edcb4b191c68952d729" kindref="member">TrackList::GetLink</ref>(<ref refid="class_track" kindref="compound">Track</ref><sp/>*<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="987"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t)<sp/>{</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>t-&gt;<ref refid="class_track_1afafc93348a2d442bf956fa072d3d769b" kindref="member">GetLink</ref>();</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="991"><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="993"><highlight class="normal">}</highlight></codeline>
<codeline lineno="994"><highlight class="normal"></highlight></codeline>
<codeline lineno="996" refid="class_track_list_1afb3f6443fda8c1ca54df19e43ad769dd" refkind="member"><highlight class="normal"><ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="class_track_list_1afb3f6443fda8c1ca54df19e43ad769dd" kindref="member">TrackList::GetNext</ref>(<ref refid="class_track" kindref="compound">Track</ref><sp/>*<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>linked)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="997"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t)<sp/>{</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_track_list_node" kindref="compound">TrackListNode</ref><sp/>*node<sp/>=<sp/>t-&gt;<ref refid="class_track_1a4439c1f48c56aee62e09b2ea7c0a2124" kindref="member">GetNode</ref>();</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node)<sp/>{</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(linked<sp/>&amp;&amp;<sp/>t-&gt;<ref refid="class_track_1abe5a26d73a2beddbacd19a39f4286fb2" kindref="member">GetLinked</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/>=<sp/>node-&gt;<ref refid="struct_track_list_node_1a8a36ff5edca955b4906da6cb632f4a23" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node)<sp/>{</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/>=<sp/>node-&gt;<ref refid="struct_track_list_node_1a8a36ff5edca955b4906da6cb632f4a23" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node)<sp/>{</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>node-&gt;<ref refid="struct_track_list_node_1a26289d63f33d878f15946ad938f7d73a" kindref="member">t</ref>;</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"></highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1016"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"></highlight></codeline>
<codeline lineno="1018" refid="class_track_list_1a9d755b371600e0d2fd109974de7e035b" refkind="member"><highlight class="normal"><ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="class_track_list_1a9d755b371600e0d2fd109974de7e035b" kindref="member">TrackList::GetPrev</ref>(<ref refid="class_track" kindref="compound">Track</ref><sp/>*<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>linked)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1019"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t)<sp/>{</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_track_list_node" kindref="compound">TrackListNode</ref><sp/>*node<sp/>=<sp/>t-&gt;<ref refid="class_track_1a4439c1f48c56aee62e09b2ea7c0a2124" kindref="member">GetNode</ref>();</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node)<sp/>{</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(linked)<sp/>{</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Input<sp/>track<sp/>second<sp/>in<sp/>team?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!t-&gt;<ref refid="class_track_1abe5a26d73a2beddbacd19a39f4286fb2" kindref="member">GetLinked</ref>()<sp/>&amp;&amp;<sp/>t-&gt;<ref refid="class_track_1afafc93348a2d442bf956fa072d3d769b" kindref="member">GetLink</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Make<sp/>it<sp/>the<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/>=<sp/>node-&gt;<ref refid="struct_track_list_node_1a64fd2e1b6e421a0ff6438d828074e4c5" kindref="member">prev</ref>;</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>previous<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/>=<sp/>node-&gt;<ref refid="struct_track_list_node_1a64fd2e1b6e421a0ff6438d828074e4c5" kindref="member">prev</ref>;</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Bump<sp/>back<sp/>to<sp/>start<sp/>of<sp/>team</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node<sp/>&amp;&amp;<sp/>node-&gt;<ref refid="struct_track_list_node_1a26289d63f33d878f15946ad938f7d73a" kindref="member">t</ref>-&gt;<ref refid="class_track_1afafc93348a2d442bf956fa072d3d769b" kindref="member">GetLink</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/>=<sp/>node-&gt;<ref refid="struct_track_list_node_1a64fd2e1b6e421a0ff6438d828074e4c5" kindref="member">prev</ref>;</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/>=<sp/>node-&gt;<ref refid="struct_track_list_node_1a64fd2e1b6e421a0ff6438d828074e4c5" kindref="member">prev</ref>;</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"></highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node)<sp/>{</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>node-&gt;<ref refid="struct_track_list_node_1a26289d63f33d878f15946ad938f7d73a" kindref="member">t</ref>;</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"></highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1049"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"></highlight></codeline>
<codeline lineno="1053" refid="class_track_list_1a634a051be14fccff264b33de20f84111" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_track_list_1a634a051be14fccff264b33de20f84111" kindref="member">TrackList::GetGroupHeight</ref>(<ref refid="class_track" kindref="compound">Track</ref><sp/>*<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1054"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height<sp/>=<sp/>t-&gt;<ref refid="class_track_1aa88d6a8dabe0be72aa34bdebdc41d07b" kindref="member">GetHeight</ref>();</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"></highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/>t<sp/>=<sp/>t-&gt;<ref refid="class_track_1afafc93348a2d442bf956fa072d3d769b" kindref="member">GetLink</ref>();</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t)<sp/>{</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>height<sp/>+=<sp/>t-&gt;<ref refid="class_track_1aa88d6a8dabe0be72aa34bdebdc41d07b" kindref="member">GetHeight</ref>();</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_OUTPUT_DISPLAY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(MONO_WAVE_PAN(t)){</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>height<sp/>+=<sp/>t-&gt;<ref refid="class_track_1aa88d6a8dabe0be72aa34bdebdc41d07b" kindref="member">GetHeight</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>height;</highlight></codeline>
<codeline lineno="1067"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"></highlight></codeline>
<codeline lineno="1069" refid="class_track_list_1af6d4ee91fb21d3b75eaa172709a2ac54" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_track_list_1af6d4ee91fb21d3b75eaa172709a2ac54" kindref="member">TrackList::CanMoveUp</ref>(<ref refid="class_track" kindref="compound">Track</ref><sp/>*<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1070"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_track_list_1a9d755b371600e0d2fd109974de7e035b" kindref="member">GetPrev</ref>(t,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>!=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1072"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"></highlight></codeline>
<codeline lineno="1074" refid="class_track_list_1a2dfa623e6bd746734b80b2fd4832ba3c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_track_list_1a2dfa623e6bd746734b80b2fd4832ba3c" kindref="member">TrackList::CanMoveDown</ref>(<ref refid="class_track" kindref="compound">Track</ref><sp/>*<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1075"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_track_list_1afb3f6443fda8c1ca54df19e43ad769dd" kindref="member">GetNext</ref>(t,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>!=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1077"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Precondition:<sp/>if<sp/>either<sp/>of<sp/>s1<sp/>or<sp/>s2<sp/>are<sp/>&quot;linked&quot;,<sp/>then</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"></highlight><highlight class="comment">//<sp/>s1<sp/>and<sp/>s2<sp/>must<sp/>each<sp/>be<sp/>the<sp/>FIRST<sp/>node<sp/>of<sp/>the<sp/>linked<sp/>pair.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1081"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1082"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>used<sp/>when<sp/>you<sp/>want<sp/>to<sp/>swap<sp/>the<sp/>track<sp/>or<sp/>pair<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="normal"></highlight><highlight class="comment">//<sp/>tracks<sp/>in<sp/>s1<sp/>with<sp/>the<sp/>track<sp/>or<sp/>pair<sp/>of<sp/>tracks<sp/>in<sp/>s2.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>complication<sp/>is<sp/>that<sp/>the<sp/>tracks<sp/>are<sp/>stored<sp/>in<sp/>a<sp/>single</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1085"><highlight class="normal"></highlight><highlight class="comment">//<sp/>linked<sp/>list,<sp/>and<sp/>pairs<sp/>of<sp/>tracks<sp/>are<sp/>marked<sp/>only<sp/>by<sp/>a<sp/>flag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1086"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>one<sp/>of<sp/>the<sp/>tracks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1087"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TrackList::SwapNodes(<ref refid="struct_track_list_node" kindref="compound">TrackListNode</ref><sp/>*<sp/>s1,<sp/><ref refid="struct_track_list_node" kindref="compound">TrackListNode</ref><sp/>*<sp/>s2)</highlight></codeline>
<codeline lineno="1088"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*link;</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="namespacewaflib_1_1_task_gen_1a34bb2baa863bf0c5ab4742e22e6bc556" kindref="member">source</ref>[4];</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_track_list_node" kindref="compound">TrackListNode</ref><sp/>*<ref refid="lib_2expat_8h_1a15a257516a87decb971420e718853137" kindref="member">target</ref>[4];</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"></highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>a<sp/>null<sp/>pointer<sp/>is<sp/>passed<sp/>in,<sp/>we<sp/>want<sp/>to<sp/>know<sp/>about<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/>wxASSERT(s1);</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/>wxASSERT(s2);</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"></highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Deal<sp/>with<sp/>firat<sp/>track<sp/>in<sp/>each<sp/>team</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/>link<sp/>=<sp/>s1-&gt;<ref refid="struct_track_list_node_1a26289d63f33d878f15946ad938f7d73a" kindref="member">t</ref>-&gt;<ref refid="class_track_1afafc93348a2d442bf956fa072d3d769b" kindref="member">GetLink</ref>();</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!s1-&gt;<ref refid="struct_track_list_node_1a26289d63f33d878f15946ad938f7d73a" kindref="member">t</ref>-&gt;<ref refid="class_track_1abe5a26d73a2beddbacd19a39f4286fb2" kindref="member">GetLinked</ref>()<sp/>&amp;&amp;<sp/>link)<sp/>{</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s1<sp/>=<sp/>(<ref refid="struct_track_list_node" kindref="compound">TrackListNode</ref><sp/>*)<sp/>link-&gt;<ref refid="class_track_1a4439c1f48c56aee62e09b2ea7c0a2124" kindref="member">GetNode</ref>();</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"></highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/>link<sp/>=<sp/>s2-&gt;<ref refid="struct_track_list_node_1a26289d63f33d878f15946ad938f7d73a" kindref="member">t</ref>-&gt;<ref refid="class_track_1afafc93348a2d442bf956fa072d3d769b" kindref="member">GetLink</ref>();</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!s2-&gt;<ref refid="struct_track_list_node_1a26289d63f33d878f15946ad938f7d73a" kindref="member">t</ref>-&gt;<ref refid="class_track_1abe5a26d73a2beddbacd19a39f4286fb2" kindref="member">GetLinked</ref>()<sp/>&amp;&amp;<sp/>link)<sp/>{</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>s2<sp/>=<sp/>(<ref refid="struct_track_list_node" kindref="compound">TrackListNode</ref><sp/>*)<sp/>link-&gt;<ref refid="class_track_1a4439c1f48c56aee62e09b2ea7c0a2124" kindref="member">GetNode</ref>();</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/>target[0]<sp/>=<sp/>s1;</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/>source[0]<sp/>=<sp/>target[0]-&gt;<ref refid="struct_track_list_node_1a26289d63f33d878f15946ad938f7d73a" kindref="member">t</ref>;</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(source[0]-&gt;GetLinked())<sp/>{</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>target[1]<sp/>=<sp/>target[0]-&gt;<ref refid="struct_track_list_node_1a8a36ff5edca955b4906da6cb632f4a23" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>source[1]<sp/>=<sp/>target[1]-&gt;<ref refid="struct_track_list_node_1a26289d63f33d878f15946ad938f7d73a" kindref="member">t</ref>;</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>target[1]<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>source[1]<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"></highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/>target[2]<sp/>=<sp/>s2;</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/>source[2]<sp/>=<sp/>target[2]-&gt;<ref refid="struct_track_list_node_1a26289d63f33d878f15946ad938f7d73a" kindref="member">t</ref>;</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(source[2]-&gt;GetLinked())<sp/>{</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>target[3]<sp/>=<sp/>target[2]-&gt;<ref refid="struct_track_list_node_1a8a36ff5edca955b4906da6cb632f4a23" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>source[3]<sp/>=<sp/>target[3]-&gt;<ref refid="struct_track_list_node_1a26289d63f33d878f15946ad938f7d73a" kindref="member">t</ref>;</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>target[3]<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>source[3]<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"></highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref><sp/>=<sp/>0;<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref><sp/>&lt;<sp/>4;<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>++)<sp/>{</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(target[<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>])<sp/>{</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target[<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>]-&gt;<ref refid="struct_track_list_node_1a26289d63f33d878f15946ad938f7d73a" kindref="member">t</ref><sp/>=<sp/>source[<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>];</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target[<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>]-&gt;<ref refid="struct_track_list_node_1a26289d63f33d878f15946ad938f7d73a" kindref="member">t</ref>-&gt;<ref refid="class_track_1abea3b67734ed3ac7f9873fa7fdb86c82" kindref="member">SetOwner</ref>(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target[<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>]-&gt;<ref refid="struct_track_list_node_1a26289d63f33d878f15946ad938f7d73a" kindref="member">t</ref>-&gt;<ref refid="class_track_1abea3b67734ed3ac7f9873fa7fdb86c82" kindref="member">SetOwner</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>target[t]);</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"></highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>(s<sp/>+<sp/>1)<sp/>%<sp/>4;</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!source[s])<sp/>{</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>=<sp/>(s<sp/>+<sp/>1)<sp/>%<sp/>4;</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"></highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/>RecalcPositions(s1);</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/>UpdatedEvent(s1);</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/>ResizedEvent(s1);</highlight></codeline>
<codeline lineno="1147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"></highlight></codeline>
<codeline lineno="1149" refid="class_track_list_1a02d9dbf3328954ce21a814f04c4b129f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_track_list_1a02d9dbf3328954ce21a814f04c4b129f" kindref="member">TrackList::MoveUp</ref>(<ref refid="class_track" kindref="compound">Track</ref><sp/>*<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>)</highlight></codeline>
<codeline lineno="1150"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t)<sp/>{</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref><sp/>=<sp/><ref refid="class_track_list_1a9d755b371600e0d2fd109974de7e035b" kindref="member">GetPrev</ref>(t,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p)<sp/>{</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SwapNodes((<ref refid="struct_track_list_node" kindref="compound">TrackListNode</ref><sp/>*)p-&gt;<ref refid="class_track_1a4439c1f48c56aee62e09b2ea7c0a2124" kindref="member">GetNode</ref>(),<sp/>(<ref refid="struct_track_list_node" kindref="compound">TrackListNode</ref><sp/>*)t-&gt;<ref refid="class_track_1a4439c1f48c56aee62e09b2ea7c0a2124" kindref="member">GetNode</ref>());</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"></highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1160"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"></highlight></codeline>
<codeline lineno="1162" refid="class_track_list_1a6b11b5ce24b188110bdda7e5eb616ce0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_track_list_1a6b11b5ce24b188110bdda7e5eb616ce0" kindref="member">TrackList::MoveDown</ref>(<ref refid="class_track" kindref="compound">Track</ref><sp/>*<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>)</highlight></codeline>
<codeline lineno="1163"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t)<sp/>{</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*n<sp/>=<sp/><ref refid="class_track_list_1afb3f6443fda8c1ca54df19e43ad769dd" kindref="member">GetNext</ref>(t,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n)<sp/>{</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SwapNodes((<ref refid="struct_track_list_node" kindref="compound">TrackListNode</ref><sp/>*)t-&gt;<ref refid="class_track_1a4439c1f48c56aee62e09b2ea7c0a2124" kindref="member">GetNode</ref>(),<sp/>(<ref refid="struct_track_list_node" kindref="compound">TrackListNode</ref><sp/>*)n-&gt;<ref refid="class_track_1a4439c1f48c56aee62e09b2ea7c0a2124" kindref="member">GetNode</ref>());</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"></highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1173"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"></highlight></codeline>
<codeline lineno="1175" refid="class_track_list_1aefa8c55074ae7681638b282cb4d11d0c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_track_list_1aefa8c55074ae7681638b282cb4d11d0c" kindref="member">TrackList::Contains</ref>(<ref refid="class_track" kindref="compound">Track</ref><sp/>*<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1176"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_track_list_node" kindref="compound">TrackListNode</ref><sp/>*<ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref><sp/>=<sp/>head;</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(p)<sp/>{</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;<ref refid="struct_track_list_node_1a26289d63f33d878f15946ad938f7d73a" kindref="member">t</ref><sp/>==<sp/>t)<sp/>{</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>p-&gt;<ref refid="struct_track_list_node_1a8a36ff5edca955b4906da6cb632f4a23" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"></highlight></codeline>
<codeline lineno="1187" refid="class_track_list_1a493bcaaad93c4b0c3468d6b33737eaa0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_track_list_1a493bcaaad93c4b0c3468d6b33737eaa0" kindref="member">TrackList::IsEmpty</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1188"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(head<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1190"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"></highlight></codeline>
<codeline lineno="1192" refid="class_track_list_1a5546954aed4d89c852d592c6f911a8cb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_track_list_1a5546954aed4d89c852d592c6f911a8cb" kindref="member">TrackList::GetCount</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1193"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cnt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"></highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tail)<sp/>{</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cnt<sp/>=<sp/>tail-&gt;<ref refid="struct_track_list_node_1a26289d63f33d878f15946ad938f7d73a" kindref="member">t</ref>-&gt;<ref refid="class_track_1a1e60222eef94930890417a8cf178153a" kindref="member">GetIndex</ref>()<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"></highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cnt;</highlight></codeline>
<codeline lineno="1201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"></highlight></codeline>
<codeline lineno="1203" refid="class_track_list_1acc012ca74a69fc509a016915c637bdc4" refkind="member"><highlight class="normal"><ref refid="class_time_track" kindref="compound">TimeTrack</ref><sp/>*<ref refid="class_track_list_1acc012ca74a69fc509a016915c637bdc4" kindref="member">TrackList::GetTimeTrack</ref>()</highlight></codeline>
<codeline lineno="1204"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_track_list_node" kindref="compound">TrackListNode</ref><sp/>*<ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref><sp/>=<sp/>head;</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(p)<sp/>{</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;<ref refid="struct_track_list_node_1a26289d63f33d878f15946ad938f7d73a" kindref="member">t</ref>-&gt;<ref refid="class_track_1ad71d0460cf42bcde59dcf600af7ef6b7" kindref="member">GetKind</ref>()<sp/>==<sp/><ref refid="class_track_1a4a6604845139575dfc25be299aeb60efa2348e03ba06177fe4dbcf87e27d82e33" kindref="member">Track::Time</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="class_time_track" kindref="compound">TimeTrack</ref><sp/>*)p-&gt;<ref refid="struct_track_list_node_1a26289d63f33d878f15946ad938f7d73a" kindref="member">t</ref>;</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>p-&gt;<ref refid="struct_track_list_node_1a8a36ff5edca955b4906da6cb632f4a23" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1213"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"></highlight></codeline>
<codeline lineno="1215" refid="class_track_list_1ade2739a070258ca02ac06fa9219a0cb2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_time_track" kindref="compound">TimeTrack</ref><sp/>*<ref refid="class_track_list_1acc012ca74a69fc509a016915c637bdc4" kindref="member">TrackList::GetTimeTrack</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1216"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const_cast&lt;</highlight><highlight class="normal"><ref refid="class_track_list" kindref="compound">TrackList</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(</highlight><highlight class="keyword">this</highlight><highlight class="normal">)-&gt;<ref refid="class_track_list_1acc012ca74a69fc509a016915c637bdc4" kindref="member">GetTimeTrack</ref>();</highlight></codeline>
<codeline lineno="1218"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"></highlight></codeline>
<codeline lineno="1220" refid="class_track_list_1a930e71d165e9f7d6a0a5ee853fe7c45d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_track_list_1a930e71d165e9f7d6a0a5ee853fe7c45d" kindref="member">TrackList::GetNumExportChannels</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>selectionOnly)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1221"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>counters<sp/>for<sp/>tracks<sp/>panned<sp/>different<sp/>places<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numLeft<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numRight<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numMono<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>track<sp/>iteration<sp/>kit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*tr;</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><ref refid="class_track_list_const_iterator" kindref="compound">TrackListConstIterator</ref><sp/>iter;</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"></highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(tr<sp/>=<sp/>iter.<ref refid="class_track_list_const_iterator_1a293ba71ab85b8390b9f60929cb7ff799" kindref="member">First</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>tr<sp/>!=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/>tr<sp/>=<sp/>iter.<ref refid="class_track_list_const_iterator_1ac89a3b2236c0cb6ef0a63d7e8622b6af" kindref="member">Next</ref>())<sp/>{</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"></highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Want<sp/>only<sp/>unmuted<sp/>wave<sp/>tracks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((tr-&gt;<ref refid="class_track_1ad71d0460cf42bcde59dcf600af7ef6b7" kindref="member">GetKind</ref>()<sp/>!=<sp/><ref refid="class_track_1a4a6604845139575dfc25be299aeb60efab39033be088537a007532668cb6d16a8" kindref="member">Track::Wave</ref>)<sp/>||<sp/>tr-&gt;<ref refid="class_track_1aebabe796d0b3222ef7d23ae13a62769b" kindref="member">GetMute</ref>())</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"></highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>do<sp/>we<sp/>only<sp/>want<sp/>selected<sp/>ones?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(selectionOnly<sp/>&amp;&amp;<sp/>!(tr-&gt;<ref refid="class_track_1ac01a2b30ea7a2574d724bae023427905" kindref="member">GetSelected</ref>()))<sp/>{</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//want<sp/>selected<sp/>but<sp/>this<sp/>one<sp/>is<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"></highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Found<sp/>a<sp/>left<sp/>channel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tr-&gt;<ref refid="class_track_1a9c988f7695a546bf52ee2dc859db0345" kindref="member">GetChannel</ref>()<sp/>==<sp/><ref refid="class_track_1af7ac66dc1b976cffbaee1e01206d362fa4cc8a2bb7bc243eab53ba2abd757d9da" kindref="member">Track::LeftChannel</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numLeft++;</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"></highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Found<sp/>a<sp/>right<sp/>channel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tr-&gt;<ref refid="class_track_1a9c988f7695a546bf52ee2dc859db0345" kindref="member">GetChannel</ref>()<sp/>==<sp/><ref refid="class_track_1af7ac66dc1b976cffbaee1e01206d362faa9c6ea023df4504361ffa1a31238c87e" kindref="member">Track::RightChannel</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numRight++;</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"></highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Found<sp/>a<sp/>mono<sp/>channel,<sp/>but<sp/>it<sp/>may<sp/>be<sp/>panned</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tr-&gt;<ref refid="class_track_1a9c988f7695a546bf52ee2dc859db0345" kindref="member">GetChannel</ref>()<sp/>==<sp/><ref refid="class_track_1af7ac66dc1b976cffbaee1e01206d362fad1d594e80888976c85f7a4a258dc2f19" kindref="member">Track::MonoChannel</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>pan<sp/>=<sp/>((<ref refid="class_wave_track" kindref="compound">WaveTrack</ref>*)tr)-&gt;GetPan();</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"></highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Figure<sp/>out<sp/>what<sp/>kind<sp/>of<sp/>channel<sp/>it<sp/>should<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pan<sp/>==<sp/>-1.0)<sp/>{<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>panned<sp/>hard<sp/>left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numLeft++;</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pan<sp/>==<sp/>1.0)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>panned<sp/>hard<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numRight++;</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pan<sp/>==<sp/>0)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>panned<sp/>dead<sp/>center</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numMono++;</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>panned<sp/>somewhere<sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numLeft++;</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numRight++;</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"></highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>there<sp/>is<sp/>stereo<sp/>content,<sp/>report<sp/>2,<sp/>else<sp/>report<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numRight<sp/>&gt;<sp/>0<sp/>||<sp/>numLeft<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>2;</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"></highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1279"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Array&gt;</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/>Array<sp/>GetWaveTracks(<ref refid="struct_track_list_node" kindref="compound">TrackListNode</ref><sp/>*<ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>selectionOnly,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>includeMuted)</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Array<sp/>waveTrackArray;</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"></highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(p)<sp/>{</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;<ref refid="struct_track_list_node_1a26289d63f33d878f15946ad938f7d73a" kindref="member">t</ref>-&gt;<ref refid="class_track_1ad71d0460cf42bcde59dcf600af7ef6b7" kindref="member">GetKind</ref>()<sp/>==<sp/><ref refid="class_track_1a4a6604845139575dfc25be299aeb60efab39033be088537a007532668cb6d16a8" kindref="member">Track::Wave</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(includeMuted<sp/>||<sp/>!p-&gt;<ref refid="struct_track_list_node_1a26289d63f33d878f15946ad938f7d73a" kindref="member">t</ref>-&gt;<ref refid="class_track_1aebabe796d0b3222ef7d23ae13a62769b" kindref="member">GetMute</ref>())<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p-&gt;<ref refid="struct_track_list_node_1a26289d63f33d878f15946ad938f7d73a" kindref="member">t</ref>-&gt;<ref refid="class_track_1ac01a2b30ea7a2574d724bae023427905" kindref="member">GetSelected</ref>()<sp/>||<sp/>!selectionOnly))<sp/>{</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>waveTrackArray.push_back(static_cast&lt;WaveTrack*&gt;(p-&gt;<ref refid="struct_track_list_node_1a26289d63f33d878f15946ad938f7d73a" kindref="member">t</ref>));</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"></highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>p-&gt;<ref refid="struct_track_list_node_1a8a36ff5edca955b4906da6cb632f4a23" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"></highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>waveTrackArray;</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1299"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"></highlight></codeline>
<codeline lineno="1301" refid="class_track_list_1a2ea32387dc5e91cd28174dddc3736600" refkind="member"><highlight class="normal"><ref refid="class_wave_track_array" kindref="compound">WaveTrackArray</ref><sp/><ref refid="class_track_list_1a2ea32387dc5e91cd28174dddc3736600" kindref="member">TrackList::GetWaveTrackArray</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>selectionOnly,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>includeMuted)</highlight></codeline>
<codeline lineno="1302"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetWaveTracks&lt;WaveTrackArray&gt;(head,<sp/>selectionOnly,<sp/>includeMuted);</highlight></codeline>
<codeline lineno="1304"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"></highlight></codeline>
<codeline lineno="1306" refid="class_track_list_1a91c5f50a0294ba72528f1396fc0f922f" refkind="member"><highlight class="normal"><ref refid="class_wave_track_const_array" kindref="compound">WaveTrackConstArray</ref><sp/><ref refid="class_track_list_1a91c5f50a0294ba72528f1396fc0f922f" kindref="member">TrackList::GetWaveTrackConstArray</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>selectionOnly,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>includeMuted)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1307"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GetWaveTracks&lt;WaveTrackConstArray&gt;(head,<sp/>selectionOnly,<sp/>includeMuted);</highlight></codeline>
<codeline lineno="1309"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"></highlight></codeline>
<codeline lineno="1311"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(USE_MIDI)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1312"><highlight class="normal">NoteTrackArray<sp/>TrackList::GetNoteTrackArray(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>selectionOnly)</highlight></codeline>
<codeline lineno="1313"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/>NoteTrackArray<sp/>noteTrackArray;</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"></highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><ref refid="struct_track_list_node" kindref="compound">TrackListNode</ref><sp/>*<ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref><sp/>=<sp/>head;</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(p)<sp/>{</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;<ref refid="struct_track_list_node_1a26289d63f33d878f15946ad938f7d73a" kindref="member">t</ref>-&gt;<ref refid="class_track_1ad71d0460cf42bcde59dcf600af7ef6b7" kindref="member">GetKind</ref>()<sp/>==<sp/>Track::Note<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(p-&gt;<ref refid="struct_track_list_node_1a26289d63f33d878f15946ad938f7d73a" kindref="member">t</ref>-&gt;<ref refid="class_track_1ac01a2b30ea7a2574d724bae023427905" kindref="member">GetSelected</ref>()<sp/>||<sp/>!selectionOnly))<sp/>{</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>noteTrackArray.Add((<ref refid="class_note_track" kindref="compound">NoteTrack</ref>*)p-&gt;<ref refid="struct_track_list_node_1a26289d63f33d878f15946ad938f7d73a" kindref="member">t</ref>);</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"></highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>p-&gt;<ref refid="struct_track_list_node_1a8a36ff5edca955b4906da6cb632f4a23" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"></highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>noteTrackArray;</highlight></codeline>
<codeline lineno="1327"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1329"><highlight class="normal"></highlight></codeline>
<codeline lineno="1330" refid="class_track_list_1a75f5271a032be1258bbed94444fe6207" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_track_list_1a75f5271a032be1258bbed94444fe6207" kindref="member">TrackList::GetHeight</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1331"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"></highlight></codeline>
<codeline lineno="1334"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>EXPERIMENTAL_OUTPUT_DISPLAY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tail)<sp/>{</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref><sp/>=<sp/>tail-&gt;<ref refid="struct_track_list_node_1a26289d63f33d878f15946ad938f7d73a" kindref="member">t</ref>;</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(MONO_WAVE_PAN(t))</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>height<sp/>=<sp/>t-&gt;<ref refid="class_track_1adefbd93c6cbde70d082a64729cfc74d8" kindref="member">GetY</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>+<sp/>t-&gt;<ref refid="class_track_1aa88d6a8dabe0be72aa34bdebdc41d07b" kindref="member">GetHeight</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>height<sp/>=<sp/>t-&gt;<ref refid="class_track_1adefbd93c6cbde70d082a64729cfc74d8" kindref="member">GetY</ref>()<sp/>+<sp/>t-&gt;<ref refid="class_track_1aa88d6a8dabe0be72aa34bdebdc41d07b" kindref="member">GetHeight</ref>();</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tail)<sp/>{</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_track" kindref="compound">Track</ref><sp/>*<ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref><sp/>=<sp/>tail-&gt;<ref refid="struct_track_list_node_1a26289d63f33d878f15946ad938f7d73a" kindref="member">t</ref>;</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>height<sp/>=<sp/>t-&gt;<ref refid="class_track_1adefbd93c6cbde70d082a64729cfc74d8" kindref="member">GetY</ref>()<sp/>+<sp/>t-&gt;<ref refid="class_track_1aa88d6a8dabe0be72aa34bdebdc41d07b" kindref="member">GetHeight</ref>();</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>height;</highlight></codeline>
<codeline lineno="1349"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1350"><highlight class="normal"></highlight></codeline>
<codeline lineno="1351" refid="class_track_list_1ad7f4a421501db5f9ad4268f7ce8755f8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_track_list_1ad7f4a421501db5f9ad4268f7ce8755f8" kindref="member">TrackList::GetMinOffset</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1352"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_track_list_node" kindref="compound">TrackListNode</ref><sp/>*node<sp/>=<sp/>head;</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!node)<sp/>{</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"></highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref><sp/>=<sp/>node-&gt;<ref refid="struct_track_list_node_1a26289d63f33d878f15946ad938f7d73a" kindref="member">t</ref>-&gt;<ref refid="class_track_1a7dd93b99ae92788d10c3010127002e6e" kindref="member">GetOffset</ref>();</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"></highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((node<sp/>=<sp/>node-&gt;<ref refid="struct_track_list_node_1a8a36ff5edca955b4906da6cb632f4a23" kindref="member">next</ref>)!=<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="layer3_8c_1a741dbb4d8e78c3cb69915db7282fcec0" kindref="member">l</ref><sp/>=<sp/>node-&gt;<ref refid="struct_track_list_node_1a26289d63f33d878f15946ad938f7d73a" kindref="member">t</ref>-&gt;<ref refid="class_track_1a7dd93b99ae92788d10c3010127002e6e" kindref="member">GetOffset</ref>();</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(l<sp/>&lt;<sp/>len)<sp/>{</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/><ref refid="layer3_8c_1a741dbb4d8e78c3cb69915db7282fcec0" kindref="member">l</ref>;</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"></highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>;</highlight></codeline>
<codeline lineno="1368"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"></highlight></codeline>
<codeline lineno="1370" refid="class_track_list_1af5e21bb6b08a8ccc2e14e1aec3ad80e2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_track_list_1af5e21bb6b08a8ccc2e14e1aec3ad80e2" kindref="member">TrackList::GetStartTime</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1371"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_track_list_node" kindref="compound">TrackListNode</ref><sp/>*node<sp/>=<sp/>head;</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!node)<sp/>{</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"></highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref><sp/>=<sp/>node-&gt;<ref refid="struct_track_list_node_1a26289d63f33d878f15946ad938f7d73a" kindref="member">t</ref>-&gt;<ref refid="class_track_1a764ce3c8ef7dd892b8cf64022a946cd5" kindref="member">GetStartTime</ref>();</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"></highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((node<sp/>=<sp/>node-&gt;<ref refid="struct_track_list_node_1a8a36ff5edca955b4906da6cb632f4a23" kindref="member">next</ref>)!=<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="layer3_8c_1a741dbb4d8e78c3cb69915db7282fcec0" kindref="member">l</ref><sp/>=<sp/>node-&gt;<ref refid="struct_track_list_node_1a26289d63f33d878f15946ad938f7d73a" kindref="member">t</ref>-&gt;<ref refid="class_track_1a764ce3c8ef7dd892b8cf64022a946cd5" kindref="member">GetStartTime</ref>();</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(l<sp/>&lt;<sp/>min)<sp/>{</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min<sp/>=<sp/><ref refid="layer3_8c_1a741dbb4d8e78c3cb69915db7282fcec0" kindref="member">l</ref>;</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"></highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref>;</highlight></codeline>
<codeline lineno="1387"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"></highlight></codeline>
<codeline lineno="1389" refid="class_track_list_1a363c0208ea73546e90ca49887cefc5a8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_track_list_1a363c0208ea73546e90ca49887cefc5a8" kindref="member">TrackList::GetEndTime</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1390"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_track_list_node" kindref="compound">TrackListNode</ref><sp/>*node<sp/>=<sp/>head;</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!node)<sp/>{</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"></highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref><sp/>=<sp/>node-&gt;<ref refid="struct_track_list_node_1a26289d63f33d878f15946ad938f7d73a" kindref="member">t</ref>-&gt;<ref refid="class_track_1a94b9fd13ee5b04493ed1024715e9c62b" kindref="member">GetEndTime</ref>();</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"></highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((node<sp/>=<sp/>node-&gt;<ref refid="struct_track_list_node_1a8a36ff5edca955b4906da6cb632f4a23" kindref="member">next</ref>)!=<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="layer3_8c_1a741dbb4d8e78c3cb69915db7282fcec0" kindref="member">l</ref><sp/>=<sp/>node-&gt;<ref refid="struct_track_list_node_1a26289d63f33d878f15946ad938f7d73a" kindref="member">t</ref>-&gt;<ref refid="class_track_1a94b9fd13ee5b04493ed1024715e9c62b" kindref="member">GetEndTime</ref>();</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(l<sp/>&gt;<sp/>max)<sp/>{</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max<sp/>=<sp/><ref refid="layer3_8c_1a741dbb4d8e78c3cb69915db7282fcec0" kindref="member">l</ref>;</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"></highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref>;</highlight></codeline>
<codeline lineno="1406"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/src/Track.cpp"/>
  </compounddef>
</doxygen>
