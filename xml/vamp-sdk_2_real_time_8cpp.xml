<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="vamp-sdk_2_real_time_8cpp" kind="file" language="C++">
    <compoundname>RealTime.cpp</compoundname>
    <includes local="no">iostream</includes>
    <includes local="no">strstream</includes>
    <includes refid="win_2_projects_2libsndfile_2sys_2time_8h" local="no">sys/time.h</includes>
    <includes refid="vamp-sdk_2_real_time_8h" local="no">vamp-sdk/RealTime.h</includes>
    <includedby refid="vamp-hostsdk_2_real_time_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/src/vamp-hostsdk/RealTime.cpp</includedby>
    <incdepgraph>
      <node id="21826">
        <label>strstream</label>
      </node>
      <node id="21829">
        <label>string</label>
      </node>
      <node id="21830">
        <label>plugguard.h</label>
        <link refid="plugguard_8h"/>
      </node>
      <node id="21824">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/src/vamp-sdk/RealTime.cpp</label>
        <link refid="vamp-sdk/RealTime.cpp"/>
        <childnode refid="21825" relation="include">
        </childnode>
        <childnode refid="21826" relation="include">
        </childnode>
        <childnode refid="21827" relation="include">
        </childnode>
        <childnode refid="21828" relation="include">
        </childnode>
      </node>
      <node id="21828">
        <label>vamp-sdk/RealTime.h</label>
        <link refid="vamp-sdk_2_real_time_8h"/>
        <childnode refid="21825" relation="include">
        </childnode>
        <childnode refid="21829" relation="include">
        </childnode>
        <childnode refid="21830" relation="include">
        </childnode>
      </node>
      <node id="21825">
        <label>iostream</label>
      </node>
      <node id="21827">
        <label>sys/time.h</label>
        <link refid="win_2_projects_2libsndfile_2sys_2time_8h"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="21831">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/src/vamp-sdk/RealTime.cpp</label>
        <link refid="vamp-sdk/RealTime.cpp"/>
        <childnode refid="21832" relation="include">
        </childnode>
      </node>
      <node id="21832">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/src/vamp-hostsdk/RealTime.cpp</label>
        <link refid="vamp-hostsdk_2_real_time_8cpp"/>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespace_vamp">Vamp</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="vamp-sdk_2_real_time_8cpp_1af265757a67f4d68101c17dbc0ce1294e" prot="public" static="no">
        <name>stringstream</name>
        <initializer>strstream</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/src/vamp-sdk/RealTime.cpp" line="48" column="10" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/src/vamp-sdk/RealTime.cpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="vamp-sdk_2_real_time_8cpp_1af05eba65a3d4d0547dba7e69e440db2c" prot="public" static="no">
        <name>ONE_BILLION</name>
        <initializer>1000000000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/src/vamp-sdk/RealTime.cpp" line="75" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/src/vamp-sdk/RealTime.cpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>-*-<sp/>c-basic-offset:<sp/>4<sp/>indent-tabs-mode:<sp/>nil<sp/>-*-<sp/><sp/>vi:set<sp/>ts=8<sp/>sts=4<sp/>sw=4:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/><sp/><sp/>Vamp</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/><sp/>An<sp/>API<sp/>for<sp/>audio<sp/>analysis<sp/>and<sp/>feature<sp/>extraction<sp/>plugins.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"></highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/><sp/><sp/>Centre<sp/>for<sp/>Digital<sp/>Music,<sp/>Queen<sp/>Mary,<sp/>University<sp/>of<sp/>London.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/><sp/><sp/>Copyright<sp/>2006<sp/>Chris<sp/>Cannam.</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/></highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/><sp/><sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/><sp/><sp/>obtaining<sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/><sp/><sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/><sp/><sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/>copy,</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/><sp/><sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/><sp/><sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/><sp/><sp/><sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="18"><highlight class="comment"></highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/><sp/><sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/><sp/><sp/><sp/>included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="21"><highlight class="comment"></highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/><sp/><sp/><sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/><sp/><sp/><sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/><sp/><sp/><sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/><sp/><sp/><sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/><sp/><sp/><sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/><sp/><sp/><sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/><sp/><sp/><sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="29"><highlight class="comment"></highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/><sp/><sp/><sp/>Except<sp/>as<sp/>contained<sp/>in<sp/>this<sp/>notice,<sp/>the<sp/>names<sp/>of<sp/>the<sp/>Centre<sp/>for</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/><sp/><sp/><sp/>Digital<sp/>Music;<sp/>Queen<sp/>Mary,<sp/>University<sp/>of<sp/>London;<sp/>and<sp/>Chris<sp/>Cannam</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/><sp/><sp/><sp/>shall<sp/>not<sp/>be<sp/>used<sp/>in<sp/>advertising<sp/>or<sp/>otherwise<sp/>to<sp/>promote<sp/>the<sp/>sale,</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/><sp/><sp/><sp/>use<sp/>or<sp/>other<sp/>dealings<sp/>in<sp/>this<sp/>Software<sp/>without<sp/>prior<sp/>written</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/><sp/><sp/><sp/>authorization.</highlight></codeline>
<codeline lineno="35"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/><sp/><sp/>This<sp/>is<sp/>a<sp/>modified<sp/>version<sp/>of<sp/>a<sp/>source<sp/>file<sp/>from<sp/>the<sp/></highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/><sp/><sp/>Rosegarden<sp/>MIDI<sp/>and<sp/>audio<sp/>sequencer<sp/>and<sp/>notation<sp/>editor.</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/><sp/><sp/>This<sp/>file<sp/>copyright<sp/>2000-2006<sp/>Chris<sp/>Cannam.</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/><sp/><sp/>Relicensed<sp/>by<sp/>the<sp/>author<sp/>as<sp/>detailed<sp/>above.</highlight></codeline>
<codeline lineno="42"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(__GNUC__<sp/>&lt;<sp/>3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;strstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="vamp-sdk_2_real_time_8cpp_1af265757a67f4d68101c17dbc0ce1294e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>stringstream<sp/>strstream</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::cerr;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::endl;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="win_2_projects_2libsndfile_2sys_2time_8h" kindref="compound">sys/time.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="vamp-sdk_2_real_time_8h" kindref="compound">vamp-sdk/RealTime.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><ref refid="hostguard_8h_1a1a2724ea453971288d3218e4eab3072c" kindref="member">_VAMP_SDK_PLUGSPACE_BEGIN</ref>(RealTime.cpp)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal">namespace<sp/><ref refid="namespace_vamp" kindref="compound">Vamp</ref><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>RealTime<sp/>consists<sp/>of<sp/>two<sp/>ints<sp/>that<sp/>must<sp/>be<sp/>at<sp/>least<sp/>32<sp/>bits<sp/>each.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/>A<sp/>signed<sp/>32-bit<sp/>int<sp/>can<sp/>store<sp/>values<sp/>exceeding<sp/>+/-<sp/>2<sp/>billion.<sp/><sp/>This</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">//<sp/>means<sp/>we<sp/>can<sp/>safely<sp/>use<sp/>our<sp/>lower<sp/>int<sp/>for<sp/>nanoseconds,<sp/>as<sp/>there<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">//<sp/>1<sp/>billion<sp/>nanoseconds<sp/>in<sp/>a<sp/>second<sp/>and<sp/>we<sp/>need<sp/>to<sp/>handle<sp/>double<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">//<sp/>because<sp/>of<sp/>the<sp/>implementations<sp/>of<sp/>addition<sp/>etc<sp/>that<sp/>we<sp/>use.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>maximum<sp/>valid<sp/>RealTime<sp/>on<sp/>a<sp/>32-bit<sp/>system<sp/>is<sp/>somewhere<sp/>around</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">//<sp/>68<sp/>years:<sp/>999999999<sp/>nanoseconds<sp/>longer<sp/>than<sp/>the<sp/>classic<sp/>Unix<sp/>epoch.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="vamp-sdk_2_real_time_8cpp_1af05eba65a3d4d0547dba7e69e440db2c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ONE_BILLION<sp/>1000000000</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="struct_vamp_1_1_real_time_1a75b2f0af2f9c49e649f8d30b452b049d" refkind="member"><highlight class="normal">RealTime::RealTime(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)<sp/>:</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>sec(s),<sp/>nsec(n)</highlight></codeline>
<codeline lineno="79"><highlight class="normal">{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_vamp_1_1_real_time_1ab4d81983384a9f57ce064e6c343f2267" kindref="member">sec</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="struct_vamp_1_1_real_time_1a2078835bef7bb92514a65b6051cfc6c8" kindref="member">nsec</ref><sp/>&lt;=<sp/>-<ref refid="vamp-sdk_2_real_time_8cpp_1af05eba65a3d4d0547dba7e69e440db2c" kindref="member">ONE_BILLION</ref>)<sp/>{<sp/><ref refid="struct_vamp_1_1_real_time_1a2078835bef7bb92514a65b6051cfc6c8" kindref="member">nsec</ref><sp/>+=<sp/><ref refid="vamp-sdk_2_real_time_8cpp_1af05eba65a3d4d0547dba7e69e440db2c" kindref="member">ONE_BILLION</ref>;<sp/>--<ref refid="struct_vamp_1_1_real_time_1ab4d81983384a9f57ce064e6c343f2267" kindref="member">sec</ref>;<sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="struct_vamp_1_1_real_time_1a2078835bef7bb92514a65b6051cfc6c8" kindref="member">nsec</ref><sp/>&gt;=<sp/><sp/><ref refid="vamp-sdk_2_real_time_8cpp_1af05eba65a3d4d0547dba7e69e440db2c" kindref="member">ONE_BILLION</ref>)<sp/>{<sp/><ref refid="struct_vamp_1_1_real_time_1a2078835bef7bb92514a65b6051cfc6c8" kindref="member">nsec</ref><sp/>-=<sp/><ref refid="vamp-sdk_2_real_time_8cpp_1af05eba65a3d4d0547dba7e69e440db2c" kindref="member">ONE_BILLION</ref>;<sp/>++<ref refid="struct_vamp_1_1_real_time_1ab4d81983384a9f57ce064e6c343f2267" kindref="member">sec</ref>;<sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_vamp_1_1_real_time_1ab4d81983384a9f57ce064e6c343f2267" kindref="member">sec</ref><sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="struct_vamp_1_1_real_time_1a2078835bef7bb92514a65b6051cfc6c8" kindref="member">nsec</ref><sp/>&lt;=<sp/>-<ref refid="vamp-sdk_2_real_time_8cpp_1af05eba65a3d4d0547dba7e69e440db2c" kindref="member">ONE_BILLION</ref>)<sp/>{<sp/><ref refid="struct_vamp_1_1_real_time_1a2078835bef7bb92514a65b6051cfc6c8" kindref="member">nsec</ref><sp/>+=<sp/><ref refid="vamp-sdk_2_real_time_8cpp_1af05eba65a3d4d0547dba7e69e440db2c" kindref="member">ONE_BILLION</ref>;<sp/>--<ref refid="struct_vamp_1_1_real_time_1ab4d81983384a9f57ce064e6c343f2267" kindref="member">sec</ref>;<sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="struct_vamp_1_1_real_time_1a2078835bef7bb92514a65b6051cfc6c8" kindref="member">nsec</ref><sp/>&gt;<sp/>0)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="struct_vamp_1_1_real_time_1a2078835bef7bb92514a65b6051cfc6c8" kindref="member">nsec</ref><sp/>-=<sp/><ref refid="vamp-sdk_2_real_time_8cpp_1af05eba65a3d4d0547dba7e69e440db2c" kindref="member">ONE_BILLION</ref>;<sp/>++<ref refid="struct_vamp_1_1_real_time_1ab4d81983384a9f57ce064e6c343f2267" kindref="member">sec</ref>;<sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="struct_vamp_1_1_real_time_1a2078835bef7bb92514a65b6051cfc6c8" kindref="member">nsec</ref><sp/>&gt;=<sp/><sp/><ref refid="vamp-sdk_2_real_time_8cpp_1af05eba65a3d4d0547dba7e69e440db2c" kindref="member">ONE_BILLION</ref>)<sp/>{<sp/><ref refid="struct_vamp_1_1_real_time_1a2078835bef7bb92514a65b6051cfc6c8" kindref="member">nsec</ref><sp/>-=<sp/><ref refid="vamp-sdk_2_real_time_8cpp_1af05eba65a3d4d0547dba7e69e440db2c" kindref="member">ONE_BILLION</ref>;<sp/>++<ref refid="struct_vamp_1_1_real_time_1ab4d81983384a9f57ce064e6c343f2267" kindref="member">sec</ref>;<sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="struct_vamp_1_1_real_time_1a2078835bef7bb92514a65b6051cfc6c8" kindref="member">nsec</ref><sp/>&lt;<sp/>0)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><ref refid="struct_vamp_1_1_real_time_1a2078835bef7bb92514a65b6051cfc6c8" kindref="member">nsec</ref><sp/>+=<sp/><ref refid="vamp-sdk_2_real_time_8cpp_1af05eba65a3d4d0547dba7e69e440db2c" kindref="member">ONE_BILLION</ref>;<sp/>--<ref refid="struct_vamp_1_1_real_time_1ab4d81983384a9f57ce064e6c343f2267" kindref="member">sec</ref>;<sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><ref refid="struct_vamp_1_1_real_time" kindref="compound">RealTime</ref></highlight></codeline>
<codeline lineno="93" refid="struct_vamp_1_1_real_time_1a754901a59483036097d8111b8c02f4f3" refkind="member"><highlight class="normal"><ref refid="struct_vamp_1_1_real_time_1a754901a59483036097d8111b8c02f4f3" kindref="member">RealTime::fromSeconds</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="struct_vamp_1_1_real_time_1ab4d81983384a9f57ce064e6c343f2267" kindref="member">sec</ref>)</highlight></codeline>
<codeline lineno="94"><highlight class="normal">{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_vamp_1_1_real_time_1ad703be11b7beb07af08ddf133aa2ae79" kindref="member">RealTime</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(sec),<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">((sec<sp/>-<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(sec))<sp/>*<sp/><ref refid="vamp-sdk_2_real_time_8cpp_1af05eba65a3d4d0547dba7e69e440db2c" kindref="member">ONE_BILLION</ref><sp/>+<sp/>0.5));</highlight></codeline>
<codeline lineno="96"><highlight class="normal">}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><ref refid="struct_vamp_1_1_real_time" kindref="compound">RealTime</ref></highlight></codeline>
<codeline lineno="99" refid="struct_vamp_1_1_real_time_1a512ca91f967c1d7923456f426926a9f6" refkind="member"><highlight class="normal"><ref refid="struct_vamp_1_1_real_time_1a512ca91f967c1d7923456f426926a9f6" kindref="member">RealTime::fromMilliseconds</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_vamp_1_1_real_time_1a76e22815db51ae180c38021110da9947" kindref="member">msec</ref>)</highlight></codeline>
<codeline lineno="100"><highlight class="normal">{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_vamp_1_1_real_time_1ad703be11b7beb07af08ddf133aa2ae79" kindref="member">RealTime</ref>(msec<sp/>/<sp/>1000,<sp/>(msec<sp/>%<sp/>1000)<sp/>*<sp/>1000000);</highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><ref refid="struct_vamp_1_1_real_time" kindref="compound">RealTime</ref></highlight></codeline>
<codeline lineno="106" refid="struct_vamp_1_1_real_time_1affdd22eee09b38335d3133c0e9a8f7b3" refkind="member"><highlight class="normal"><ref refid="struct_vamp_1_1_real_time_1affdd22eee09b38335d3133c0e9a8f7b3" kindref="member">RealTime::fromTimeval</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timeval<sp/>&amp;tv)</highlight></codeline>
<codeline lineno="107"><highlight class="normal">{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_vamp_1_1_real_time_1ad703be11b7beb07af08ddf133aa2ae79" kindref="member">RealTime</ref>(tv.tv_sec,<sp/>tv.tv_usec<sp/>*<sp/>1000);</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="namespace_vamp_1a84f347b339c111e035f4f0d6ed37f4e0" refkind="member"><highlight class="normal">std::ostream<sp/>&amp;<ref refid="namespace_vamp_1a84f347b339c111e035f4f0d6ed37f4e0" kindref="member">operator&lt;&lt;</ref>(std::ostream<sp/>&amp;<ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vamp_1_1_real_time" kindref="compound">RealTime</ref><sp/>&amp;rt)</highlight></codeline>
<codeline lineno="113"><highlight class="normal">{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rt<sp/>&lt;<sp/><ref refid="struct_vamp_1_1_real_time_1abe453371597710148b0fd19bb452f8a9" kindref="member">RealTime::zeroTime</ref>)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref><sp/>=<sp/>(rt.<ref refid="struct_vamp_1_1_real_time_1ab4d81983384a9f57ce064e6c343f2267" kindref="member">sec</ref><sp/>&lt;<sp/>0<sp/>?<sp/>-rt.<ref refid="struct_vamp_1_1_real_time_1ab4d81983384a9f57ce064e6c343f2267" kindref="member">sec</ref><sp/>:<sp/>rt.<ref refid="struct_vamp_1_1_real_time_1ab4d81983384a9f57ce064e6c343f2267" kindref="member">sec</ref>);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>(rt.<ref refid="struct_vamp_1_1_real_time_1a2078835bef7bb92514a65b6051cfc6c8" kindref="member">nsec</ref><sp/>&lt;<sp/>0<sp/>?<sp/>-rt.<ref refid="struct_vamp_1_1_real_time_1a2078835bef7bb92514a65b6051cfc6c8" kindref="member">nsec</ref><sp/>:<sp/>rt.<ref refid="struct_vamp_1_1_real_time_1a2078835bef7bb92514a65b6051cfc6c8" kindref="member">nsec</ref>);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>s<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nn(n);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nn<sp/>==<sp/>0)<sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;00000000&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(nn<sp/>&lt;<sp/>(<ref refid="vamp-sdk_2_real_time_8cpp_1af05eba65a3d4d0547dba7e69e440db2c" kindref="member">ONE_BILLION</ref><sp/>/<sp/>10))<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>nn<sp/>*=<sp/>10;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>n<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;R&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>;</highlight></codeline>
<codeline lineno="134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">std::string</ref></highlight></codeline>
<codeline lineno="137" refid="struct_vamp_1_1_real_time_1ad44476618183bd736996a87292d03c07" refkind="member"><highlight class="normal"><ref refid="struct_vamp_1_1_real_time_1ad44476618183bd736996a87292d03c07" kindref="member">RealTime::toString</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="138"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="vamp-sdk_2_real_time_8cpp_1af265757a67f4d68101c17dbc0ce1294e" kindref="member">std::stringstream</ref><sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(__GNUC__<sp/>&lt;<sp/>3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>std::ends;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">std::string</ref><sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref><sp/>=<sp/>out.str();</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>remove<sp/>trailing<sp/>R</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s.substr(0,<sp/>s.length()<sp/>-<sp/>1);</highlight></codeline>
<codeline lineno="150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">std::string</ref></highlight></codeline>
<codeline lineno="153" refid="struct_vamp_1_1_real_time_1ad75b927afadfa422ae512d169ccda0aa" refkind="member"><highlight class="normal"><ref refid="struct_vamp_1_1_real_time_1ad75b927afadfa422ae512d169ccda0aa" kindref="member">RealTime::toText</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>fixedDp)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="154"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>&lt;<sp/><ref refid="struct_vamp_1_1_real_time_1abe453371597710148b0fd19bb452f8a9" kindref="member">RealTime::zeroTime</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;-&quot;</highlight><highlight class="normal"><sp/>+<sp/>(-*</highlight><highlight class="keyword">this</highlight><highlight class="normal">).<ref refid="struct_vamp_1_1_real_time_1ad75b927afadfa422ae512d169ccda0aa" kindref="member">toText</ref>();</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="vamp-sdk_2_real_time_8cpp_1af265757a67f4d68101c17dbc0ce1294e" kindref="member">std::stringstream</ref><sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_vamp_1_1_real_time_1ab4d81983384a9f57ce064e6c343f2267" kindref="member">sec</ref><sp/>&gt;=<sp/>3600)<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>(<ref refid="struct_vamp_1_1_real_time_1ab4d81983384a9f57ce064e6c343f2267" kindref="member">sec</ref><sp/>/<sp/>3600)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_vamp_1_1_real_time_1ab4d81983384a9f57ce064e6c343f2267" kindref="member">sec</ref><sp/>&gt;=<sp/>60)<sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>(<ref refid="struct_vamp_1_1_real_time_1ab4d81983384a9f57ce064e6c343f2267" kindref="member">sec</ref><sp/>%<sp/>3600)<sp/>/<sp/>60<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;:&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="struct_vamp_1_1_real_time_1ab4d81983384a9f57ce064e6c343f2267" kindref="member">sec</ref><sp/>&gt;=<sp/>10)<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>((<ref refid="struct_vamp_1_1_real_time_1ab4d81983384a9f57ce064e6c343f2267" kindref="member">sec</ref><sp/>%<sp/>60)<sp/>/<sp/>10);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>(<ref refid="struct_vamp_1_1_real_time_1ab4d81983384a9f57ce064e6c343f2267" kindref="member">sec</ref><sp/>%<sp/>10);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ms<sp/>=<sp/><ref refid="struct_vamp_1_1_real_time_1a76e22815db51ae180c38021110da9947" kindref="member">msec</ref>();</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ms<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>(ms<sp/>/<sp/>100);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>ms<sp/>=<sp/>ms<sp/>%<sp/>100;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ms<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>(ms<sp/>/<sp/>10);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ms<sp/>=<sp/>ms<sp/>%<sp/>10;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fixedDp)<sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ms<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>ms;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fixedDp)<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fixedDp)<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.000&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(__GNUC__<sp/>&lt;<sp/>3)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>&lt;&lt;<sp/>std::ends;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="test__lib_f_l_a_c_2format_8c_1ab02026ad0de9fb6c1b4233deb0a00c75" kindref="member">std::string</ref><sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref><sp/>=<sp/>out.str();</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>;</highlight></codeline>
<codeline lineno="201"><highlight class="normal">}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><ref refid="struct_vamp_1_1_real_time" kindref="compound">RealTime</ref></highlight></codeline>
<codeline lineno="205" refid="struct_vamp_1_1_real_time_1ac88cda961da5cb728d823b29c5456c06" refkind="member"><highlight class="normal"><ref refid="struct_vamp_1_1_real_time_1ac88cda961da5cb728d823b29c5456c06" kindref="member">RealTime::operator/</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="poly-fir_8h_1a2530554172d8629149ec56816eeaa947" kindref="member">d</ref>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="206"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>secdiv<sp/>=<sp/><ref refid="struct_vamp_1_1_real_time_1ab4d81983384a9f57ce064e6c343f2267" kindref="member">sec</ref><sp/>/<sp/><ref refid="poly-fir_8h_1a2530554172d8629149ec56816eeaa947" kindref="member">d</ref>;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>secrem<sp/>=<sp/><ref refid="struct_vamp_1_1_real_time_1ab4d81983384a9f57ce064e6c343f2267" kindref="member">sec</ref><sp/>%<sp/><ref refid="poly-fir_8h_1a2530554172d8629149ec56816eeaa947" kindref="member">d</ref>;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>nsecdiv<sp/>=<sp/>(double(<ref refid="struct_vamp_1_1_real_time_1a2078835bef7bb92514a65b6051cfc6c8" kindref="member">nsec</ref>)<sp/>+<sp/><ref refid="vamp-sdk_2_real_time_8cpp_1af05eba65a3d4d0547dba7e69e440db2c" kindref="member">ONE_BILLION</ref><sp/>*<sp/>double(secrem))<sp/>/<sp/>d;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="struct_vamp_1_1_real_time_1ad703be11b7beb07af08ddf133aa2ae79" kindref="member">RealTime</ref>(secdiv,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">(nsecdiv<sp/>+<sp/>0.5));</highlight></codeline>
<codeline lineno="213"><highlight class="normal">}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="216" refid="struct_vamp_1_1_real_time_1aa6e50a94c81a1448ec1d61421ccf6e3f" refkind="member"><highlight class="normal"><ref refid="struct_vamp_1_1_real_time_1ac88cda961da5cb728d823b29c5456c06" kindref="member">RealTime::operator/</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vamp_1_1_real_time" kindref="compound">RealTime</ref><sp/>&amp;r)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="217"><highlight class="keyword"></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>lTotal<sp/>=<sp/>double(<ref refid="struct_vamp_1_1_real_time_1ab4d81983384a9f57ce064e6c343f2267" kindref="member">sec</ref>)<sp/>*<sp/><ref refid="vamp-sdk_2_real_time_8cpp_1af05eba65a3d4d0547dba7e69e440db2c" kindref="member">ONE_BILLION</ref><sp/>+<sp/>double(<ref refid="struct_vamp_1_1_real_time_1a2078835bef7bb92514a65b6051cfc6c8" kindref="member">nsec</ref>);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rTotal<sp/>=<sp/>double(r.<ref refid="struct_vamp_1_1_real_time_1ab4d81983384a9f57ce064e6c343f2267" kindref="member">sec</ref>)<sp/>*<sp/><ref refid="vamp-sdk_2_real_time_8cpp_1af05eba65a3d4d0547dba7e69e440db2c" kindref="member">ONE_BILLION</ref><sp/>+<sp/>double(r.<ref refid="struct_vamp_1_1_real_time_1a2078835bef7bb92514a65b6051cfc6c8" kindref="member">nsec</ref>);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rTotal<sp/>==<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0.0;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lTotal/rTotal;</highlight></codeline>
<codeline lineno="223"><highlight class="normal">}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226" refid="struct_vamp_1_1_real_time_1a1c32b50b1511cdca17cd6c1c3c05d9b5" refkind="member"><highlight class="normal"><ref refid="struct_vamp_1_1_real_time_1a1c32b50b1511cdca17cd6c1c3c05d9b5" kindref="member">RealTime::realTime2Frame</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vamp_1_1_real_time" kindref="compound">RealTime</ref><sp/>&amp;<ref refid="namespacepyportmidi_1_1midi_1ad2426758f88d23d7208984d5c99ec050" kindref="member">time</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacepatest__suggested__vs__streaminfo__latency_1a14f2ecd6f756d329f6df4096833062d0" kindref="member">sampleRate</ref>)</highlight></codeline>
<codeline lineno="227"><highlight class="normal">{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(time<sp/>&lt;<sp/><ref refid="struct_vamp_1_1_real_time_1abe453371597710148b0fd19bb452f8a9" kindref="member">zeroTime</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="struct_vamp_1_1_real_time_1a1c32b50b1511cdca17cd6c1c3c05d9b5" kindref="member">realTime2Frame</ref>(-time,<sp/>sampleRate);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref><sp/>=<sp/>time.<ref refid="struct_vamp_1_1_real_time_1ab4d81983384a9f57ce064e6c343f2267" kindref="member">sec</ref><sp/>+<sp/>double(time.<ref refid="struct_vamp_1_1_real_time_1a2078835bef7bb92514a65b6051cfc6c8" kindref="member">nsec</ref><sp/>+<sp/>1)<sp/>/<sp/>1000000000.0;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>long(s<sp/>*<sp/>sampleRate);</highlight></codeline>
<codeline lineno="231"><highlight class="normal">}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><ref refid="struct_vamp_1_1_real_time" kindref="compound">RealTime</ref></highlight></codeline>
<codeline lineno="234" refid="struct_vamp_1_1_real_time_1a3a5ecc8888b559aad3b7d96911786b3a" refkind="member"><highlight class="normal"><ref refid="struct_vamp_1_1_real_time_1a3a5ecc8888b559aad3b7d96911786b3a" kindref="member">RealTime::frame2RealTime</ref>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>frame,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacepatest__suggested__vs__streaminfo__latency_1a14f2ecd6f756d329f6df4096833062d0" kindref="member">sampleRate</ref>)</highlight></codeline>
<codeline lineno="235"><highlight class="normal">{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(frame<sp/>&lt;<sp/>0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-<ref refid="struct_vamp_1_1_real_time_1a3a5ecc8888b559aad3b7d96911786b3a" kindref="member">frame2RealTime</ref>(-frame,<sp/>sampleRate);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_vamp_1_1_real_time" kindref="compound">RealTime</ref><sp/>rt;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>rt.<ref refid="struct_vamp_1_1_real_time_1ab4d81983384a9f57ce064e6c343f2267" kindref="member">sec</ref><sp/>=<sp/>frame<sp/>/<sp/>long(sampleRate);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>frame<sp/>-=<sp/>rt.<ref refid="struct_vamp_1_1_real_time_1ab4d81983384a9f57ce064e6c343f2267" kindref="member">sec</ref><sp/>*<sp/>long(sampleRate);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>rt.<ref refid="struct_vamp_1_1_real_time_1a2078835bef7bb92514a65b6051cfc6c8" kindref="member">nsec</ref><sp/>=<sp/>(<ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref>)(((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">(frame)<sp/>*<sp/>1000000.0)<sp/>/<sp/>sampleRate)<sp/>*<sp/>1000.0);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rt;</highlight></codeline>
<codeline lineno="243"><highlight class="normal">}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_vamp_1_1_real_time" kindref="compound">RealTime</ref><sp/><ref refid="struct_vamp_1_1_real_time_1abe453371597710148b0fd19bb452f8a9" kindref="member">RealTime::zeroTime</ref>(0,0);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal">}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><ref refid="hostguard_8h_1ac879bb1077ecc6132ea3581ef9033753" kindref="member">_VAMP_SDK_PLUGSPACE_END</ref>(<ref refid="struct_vamp_1_1_real_time" kindref="compound">RealTime</ref>.cpp)</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvamp/src/vamp-sdk/RealTime.cpp"/>
  </compounddef>
</doxygen>
