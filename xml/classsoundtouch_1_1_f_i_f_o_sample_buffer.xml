<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classsoundtouch_1_1_f_i_f_o_sample_buffer" kind="class" language="C++" prot="public">
    <compoundname>soundtouch::FIFOSampleBuffer</compoundname>
    <basecompoundref refid="classsoundtouch_1_1_f_i_f_o_sample_pipe" prot="public" virt="non-virtual">soundtouch::FIFOSamplePipe</basecompoundref>
    <includes refid="_f_i_f_o_sample_buffer_8h" local="no">FIFOSampleBuffer.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classsoundtouch_1_1_f_i_f_o_sample_buffer_1ac7c3793de262b28046a6c87451dbc134" prot="private" static="no" mutable="no">
        <type><ref refid="namespacesoundtouch_1a97cfd29a7abb4d4b2a72f803d5b5850c" kindref="member">SAMPLETYPE</ref> *</type>
        <definition>SAMPLETYPE* soundtouch::FIFOSampleBuffer::buffer</definition>
        <argsstring></argsstring>
        <name>buffer</name>
        <briefdescription>
<para><ref refid="struct_sample" kindref="compound">Sample</ref> buffer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/soundtouch/include/FIFOSampleBuffer.h" line="63" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/soundtouch/include/FIFOSampleBuffer.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsoundtouch_1_1_f_i_f_o_sample_buffer_1a788326ab357e791875b8e36f09fff101" prot="private" static="no" mutable="no">
        <type><ref refid="namespacesoundtouch_1a97cfd29a7abb4d4b2a72f803d5b5850c" kindref="member">SAMPLETYPE</ref> *</type>
        <definition>SAMPLETYPE* soundtouch::FIFOSampleBuffer::bufferUnaligned</definition>
        <argsstring></argsstring>
        <name>bufferUnaligned</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/soundtouch/include/FIFOSampleBuffer.h" line="67" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/soundtouch/include/FIFOSampleBuffer.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsoundtouch_1_1_f_i_f_o_sample_buffer_1a68b7992dab3c0d30a87449a57fbf4d75" prot="private" static="no" mutable="no">
        <type><ref refid="_s_t_types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
        <definition>uint soundtouch::FIFOSampleBuffer::sizeInBytes</definition>
        <argsstring></argsstring>
        <name>sizeInBytes</name>
        <briefdescription>
<para><ref refid="struct_sample" kindref="compound">Sample</ref> buffer size in bytes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/soundtouch/include/FIFOSampleBuffer.h" line="70" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/soundtouch/include/FIFOSampleBuffer.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsoundtouch_1_1_f_i_f_o_sample_buffer_1a50e5fac250e6b9d40d790ae72b8aec0a" prot="private" static="no" mutable="no">
        <type><ref refid="_s_t_types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
        <definition>uint soundtouch::FIFOSampleBuffer::samplesInBuffer</definition>
        <argsstring></argsstring>
        <name>samplesInBuffer</name>
        <briefdescription>
<para>How many samples are currently in buffer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/soundtouch/include/FIFOSampleBuffer.h" line="73" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/soundtouch/include/FIFOSampleBuffer.h" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsoundtouch_1_1_f_i_f_o_sample_buffer_1a822e2a0c7dab8c76435c31e546e5beec" prot="private" static="no" mutable="no">
        <type><ref refid="_s_t_types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
        <definition>uint soundtouch::FIFOSampleBuffer::channels</definition>
        <argsstring></argsstring>
        <name>channels</name>
        <briefdescription>
<para>Channels, 1=mono, 2=stereo. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/soundtouch/include/FIFOSampleBuffer.h" line="76" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/soundtouch/include/FIFOSampleBuffer.h" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsoundtouch_1_1_f_i_f_o_sample_buffer_1a584c14583ddff26f09db22b53206aa45" prot="private" static="no" mutable="no">
        <type><ref refid="_s_t_types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
        <definition>uint soundtouch::FIFOSampleBuffer::bufferPos</definition>
        <argsstring></argsstring>
        <name>bufferPos</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Current position pointer to the buffer. This pointer is increased when samples are removed from the pipe so that it&apos;s necessary to actually rewind buffer (move data) only new data when is put to the pipe. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/soundtouch/include/FIFOSampleBuffer.h" line="81" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/soundtouch/include/FIFOSampleBuffer.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classsoundtouch_1_1_f_i_f_o_sample_buffer_1ad78ac8ad4b417368acb1d01d045ea1fd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void FIFOSampleBuffer::rewind</definition>
        <argsstring>()</argsstring>
        <name>rewind</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Rewind the buffer by moving data from position pointed by &apos;bufferPos&apos; to real beginning of the buffer. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/soundtouch/include/FIFOSampleBuffer.h" line="85" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/soundtouch/source/SoundTouch/FIFOSampleBuffer.cpp" bodystart="93" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="classsoundtouch_1_1_f_i_f_o_sample_buffer_1a1815baf43d98a469c3bc42bd433b5fd3" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void FIFOSampleBuffer::ensureCapacity</definition>
        <argsstring>(uint capacityRequirement)</argsstring>
        <name>ensureCapacity</name>
        <param>
          <type><ref refid="_s_t_types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
          <declname>capacityRequirement</declname>
        </param>
        <briefdescription>
<para>Ensures that the buffer has capacity for at least this many samples. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/soundtouch/include/FIFOSampleBuffer.h" line="88" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/soundtouch/source/SoundTouch/FIFOSampleBuffer.cpp" bodystart="165" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="classsoundtouch_1_1_f_i_f_o_sample_buffer_1a9d48b8429dedfc01b58ec65ae72f0464" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_s_t_types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
        <definition>uint FIFOSampleBuffer::getCapacity</definition>
        <argsstring>() const </argsstring>
        <name>getCapacity</name>
        <briefdescription>
<para>Returns current capacity. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/soundtouch/include/FIFOSampleBuffer.h" line="91" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/soundtouch/source/SoundTouch/FIFOSampleBuffer.cpp" bodystart="199" bodyend="202"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsoundtouch_1_1_f_i_f_o_sample_buffer_1a5b227717b07215a1fb7a5125f2418dde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FIFOSampleBuffer::FIFOSampleBuffer</definition>
        <argsstring>(int numChannels=2   )</argsstring>
        <name>FIFOSampleBuffer</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>numChannels</declname>
          <defval>2</defval>
          <briefdescription><para>Number of channels, 1=mono, 2=stereo. Default is stereo. </para></briefdescription>
        </param>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/soundtouch/include/FIFOSampleBuffer.h" line="96" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/soundtouch/source/SoundTouch/FIFOSampleBuffer.cpp" bodystart="56" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classsoundtouch_1_1_f_i_f_o_sample_buffer_1adc9e09731283269276d3b00d68cb45e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>FIFOSampleBuffer::~FIFOSampleBuffer</definition>
        <argsstring>()</argsstring>
        <name>~FIFOSampleBuffer</name>
        <briefdescription>
<para>destructor </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/soundtouch/include/FIFOSampleBuffer.h" line="101" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/soundtouch/source/SoundTouch/FIFOSampleBuffer.cpp" bodystart="70" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classsoundtouch_1_1_f_i_f_o_sample_buffer_1ac5342c9dbb7863c54500501d74c6a2d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespacesoundtouch_1a97cfd29a7abb4d4b2a72f803d5b5850c" kindref="member">SAMPLETYPE</ref> *</type>
        <definition>SAMPLETYPE * FIFOSampleBuffer::ptrBegin</definition>
        <argsstring>()</argsstring>
        <name>ptrBegin</name>
        <reimplements refid="classsoundtouch_1_1_f_i_f_o_sample_pipe_1a0bd71a22866c112456222a38306df12c">ptrBegin</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a pointer to the beginning of the output samples. This function is provided for accessing the output samples directly. Please be careful for not to corrupt the book-keeping!</para><para>When using this function to output samples, also remember to &apos;remove&apos; the output samples from the buffer by calling the &apos;receiveSamples(numSamples)&apos; function </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/soundtouch/include/FIFOSampleBuffer.h" line="110" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/soundtouch/source/SoundTouch/FIFOSampleBuffer.cpp" bodystart="154" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="classsoundtouch_1_1_f_i_f_o_sample_buffer_1a03d285e2148ec382caefd4d399ccb720" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespacesoundtouch_1a97cfd29a7abb4d4b2a72f803d5b5850c" kindref="member">SAMPLETYPE</ref> *</type>
        <definition>SAMPLETYPE * FIFOSampleBuffer::ptrEnd</definition>
        <argsstring>(uint slackCapacity)</argsstring>
        <name>ptrEnd</name>
        <param>
          <type><ref refid="_s_t_types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
          <declname>slackCapacity</declname>
          <briefdescription><para>How much free capacity (in samples) there <emphasis>at least</emphasis> should be so that the caller can succesfully insert the desired samples to the buffer. If necessary, the function grows the buffer size to comply with this requirement. </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a pointer to the end of the used part of the sample buffer (i.e. where the new samples are to be inserted). This function may be used for inserting new samples into the sample buffer directly. Please be careful not corrupt the book-keeping!</para><para>When using this function as means for inserting new samples, also remember to increase the sample count afterwards, by calling the &apos;putSamples(numSamples)&apos; function. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/soundtouch/include/FIFOSampleBuffer.h" line="120" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/soundtouch/source/SoundTouch/FIFOSampleBuffer.cpp" bodystart="140" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="classsoundtouch_1_1_f_i_f_o_sample_buffer_1a94f2865cbc6f487b936dd69424410e97" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void FIFOSampleBuffer::putSamples</definition>
        <argsstring>(const SAMPLETYPE *samples, uint numSamples)</argsstring>
        <name>putSamples</name>
        <reimplements refid="classsoundtouch_1_1_f_i_f_o_sample_pipe_1a23601da7b73a0b353fc0014433341cfb">putSamples</reimplements>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="namespacesoundtouch_1a97cfd29a7abb4d4b2a72f803d5b5850c" kindref="member">SAMPLETYPE</ref> *</type>
          <declname>samples</declname>
          <briefdescription><para>Pointer to samples. </para></briefdescription>
        </param>
        <param>
          <type><ref refid="_s_t_types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
          <declname>numSamples</declname>
          <briefdescription><para>Number of samples to insert. </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds &apos;numSamples&apos; pcs of samples from the &apos;samples&apos; memory position to the sample buffer. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/soundtouch/include/FIFOSampleBuffer.h" line="129" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/soundtouch/source/SoundTouch/FIFOSampleBuffer.cpp" bodystart="105" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="classsoundtouch_1_1_f_i_f_o_sample_buffer_1afda08dabb67d6015e9cfb8a7045a6b5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void FIFOSampleBuffer::putSamples</definition>
        <argsstring>(uint numSamples)</argsstring>
        <name>putSamples</name>
        <param>
          <type><ref refid="_s_t_types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
          <declname>numSamples</declname>
          <briefdescription><para>Number of samples been inserted. </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adjusts the book-keeping to increase number of samples in the buffer without copying any actual samples.</para><para>This function is used to update the number of samples in the sample buffer when accessing the buffer directly with &apos;ptrEnd&apos; function. Please be careful though! </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/soundtouch/include/FIFOSampleBuffer.h" line="139" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/soundtouch/source/SoundTouch/FIFOSampleBuffer.cpp" bodystart="118" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classsoundtouch_1_1_f_i_f_o_sample_buffer_1a9bec369673be4b4d328befe0afd9f137" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="_s_t_types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
        <definition>uint FIFOSampleBuffer::receiveSamples</definition>
        <argsstring>(SAMPLETYPE *output, uint maxSamples)</argsstring>
        <name>receiveSamples</name>
        <reimplements refid="classsoundtouch_1_1_f_i_f_o_sample_pipe_1a734e46ab148959a737c12266db6236fa">receiveSamples</reimplements>
        <param>
          <type><ref refid="namespacesoundtouch_1a97cfd29a7abb4d4b2a72f803d5b5850c" kindref="member">SAMPLETYPE</ref> *</type>
          <declname>output</declname>
          <briefdescription><para>Buffer where to copy output samples. </para></briefdescription>
        </param>
        <param>
          <type><ref refid="_s_t_types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
          <declname>maxSamples</declname>
          <briefdescription><para>How many samples to receive at max. </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Output samples from beginning of the sample buffer. Copies requested samples to output buffer and removes them from the sample buffer. If there are less than &apos;numsample&apos; samples in the buffer, returns all that available.</para><para><simplesect kind="return"><para>Number of samples returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/soundtouch/include/FIFOSampleBuffer.h" line="147" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/soundtouch/source/SoundTouch/FIFOSampleBuffer.cpp" bodystart="217" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="classsoundtouch_1_1_f_i_f_o_sample_buffer_1a1956c4d63018ed733d70125337265372" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="_s_t_types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
        <definition>uint FIFOSampleBuffer::receiveSamples</definition>
        <argsstring>(uint maxSamples)</argsstring>
        <name>receiveSamples</name>
        <reimplements refid="classsoundtouch_1_1_f_i_f_o_sample_pipe_1ab9b4815e415d46fe6bf56f5cdcb646b2">receiveSamples</reimplements>
        <param>
          <type><ref refid="_s_t_types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
          <declname>maxSamples</declname>
          <briefdescription><para>Remove this many samples from the beginning of pipe. </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adjusts book-keeping so that given number of samples are removed from beginning of the sample buffer without copying them anywhere.</para><para>Used to reduce the number of samples in the buffer when accessing the sample buffer directly with &apos;ptrBegin&apos; function. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/soundtouch/include/FIFOSampleBuffer.h" line="156" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/soundtouch/source/SoundTouch/FIFOSampleBuffer.cpp" bodystart="231" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="classsoundtouch_1_1_f_i_f_o_sample_buffer_1a6b6b914d52e4e5d952f160e9c3b54d66" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="_s_t_types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
        <definition>uint FIFOSampleBuffer::numSamples</definition>
        <argsstring>() const </argsstring>
        <name>numSamples</name>
        <reimplements refid="classsoundtouch_1_1_f_i_f_o_sample_pipe_1aa151eb183932d9bad454a72d18f3a1ee">numSamples</reimplements>
        <briefdescription>
<para>Returns number of samples currently available. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/soundtouch/include/FIFOSampleBuffer.h" line="160" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/soundtouch/source/SoundTouch/FIFOSampleBuffer.cpp" bodystart="206" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="classsoundtouch_1_1_f_i_f_o_sample_buffer_1a8e9630f4f9c41ef1be3f44d546be0e87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void FIFOSampleBuffer::setChannels</definition>
        <argsstring>(int numChannels)</argsstring>
        <name>setChannels</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>numChannels</declname>
        </param>
        <briefdescription>
<para>Sets number of channels, 1 = mono, 2 = stereo. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/soundtouch/include/FIFOSampleBuffer.h" line="163" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/soundtouch/source/SoundTouch/FIFOSampleBuffer.cpp" bodystart="79" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classsoundtouch_1_1_f_i_f_o_sample_buffer_1a6e42894951c896ed0e71bd90ccdf9147" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int FIFOSampleBuffer::isEmpty</definition>
        <argsstring>() const </argsstring>
        <name>isEmpty</name>
        <reimplements refid="classsoundtouch_1_1_f_i_f_o_sample_pipe_1a7a88f5de024f532b65bf7c5a61e936ca">isEmpty</reimplements>
        <briefdescription>
<para>Returns nonzero if there aren&apos;t any samples available for outputting. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/soundtouch/include/FIFOSampleBuffer.h" line="166" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/soundtouch/source/SoundTouch/FIFOSampleBuffer.cpp" bodystart="250" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="classsoundtouch_1_1_f_i_f_o_sample_buffer_1a2b211a51e213f86e2e5a03d0715da7b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void FIFOSampleBuffer::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <reimplements refid="classsoundtouch_1_1_f_i_f_o_sample_pipe_1af442e965ba0bbb6118f2853fa0789aaf">clear</reimplements>
        <briefdescription>
<para>Clears all the samples. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/soundtouch/include/FIFOSampleBuffer.h" line="169" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/soundtouch/source/SoundTouch/FIFOSampleBuffer.cpp" bodystart="257" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="classsoundtouch_1_1_f_i_f_o_sample_buffer_1a3f32f4db9c4268c9be61a32acd715f5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="_s_t_types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
        <definition>uint FIFOSampleBuffer::adjustAmountOfSamples</definition>
        <argsstring>(uint numSamples)</argsstring>
        <name>adjustAmountOfSamples</name>
        <reimplements refid="classsoundtouch_1_1_f_i_f_o_sample_pipe_1a6c89c8a5781edec08b594ecd499ef662">adjustAmountOfSamples</reimplements>
        <param>
          <type><ref refid="_s_t_types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
          <declname>numSamples</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>allow trimming (downwards) amount of samples in pipeline. Returns adjusted amount of samples </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/soundtouch/include/FIFOSampleBuffer.h" line="173" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/soundtouch/source/SoundTouch/FIFOSampleBuffer.cpp" bodystart="266" bodyend="273"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><ref refid="struct_sample" kindref="compound">Sample</ref> buffer working in FIFO (first-in-first-out) principle. The class takes care of storage size adjustment and data moving during input/output operations.</para><para>Notice that in case of stereo audio, one sample is considered to consist of both channel data. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="4273">
        <label>soundtouch::FIFOSampleBuffer</label>
        <link refid="classsoundtouch_1_1_f_i_f_o_sample_buffer"/>
        <childnode refid="4274" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4274">
        <label>soundtouch::FIFOSamplePipe</label>
        <link refid="classsoundtouch_1_1_f_i_f_o_sample_pipe"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4275">
        <label>soundtouch::FIFOSampleBuffer</label>
        <link refid="classsoundtouch_1_1_f_i_f_o_sample_buffer"/>
        <childnode refid="4276" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4276">
        <label>soundtouch::FIFOSamplePipe</label>
        <link refid="classsoundtouch_1_1_f_i_f_o_sample_pipe"/>
      </node>
    </collaborationgraph>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/soundtouch/include/FIFOSampleBuffer.h" line="60" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/soundtouch/include/FIFOSampleBuffer.h" bodystart="59" bodyend="174"/>
    <listofallmembers>
      <member refid="classsoundtouch_1_1_f_i_f_o_sample_buffer_1a3f32f4db9c4268c9be61a32acd715f5f" prot="public" virt="virtual"><scope>soundtouch::FIFOSampleBuffer</scope><name>adjustAmountOfSamples</name></member>
      <member refid="classsoundtouch_1_1_f_i_f_o_sample_buffer_1ac7c3793de262b28046a6c87451dbc134" prot="private" virt="non-virtual"><scope>soundtouch::FIFOSampleBuffer</scope><name>buffer</name></member>
      <member refid="classsoundtouch_1_1_f_i_f_o_sample_buffer_1a584c14583ddff26f09db22b53206aa45" prot="private" virt="non-virtual"><scope>soundtouch::FIFOSampleBuffer</scope><name>bufferPos</name></member>
      <member refid="classsoundtouch_1_1_f_i_f_o_sample_buffer_1a788326ab357e791875b8e36f09fff101" prot="private" virt="non-virtual"><scope>soundtouch::FIFOSampleBuffer</scope><name>bufferUnaligned</name></member>
      <member refid="classsoundtouch_1_1_f_i_f_o_sample_buffer_1a822e2a0c7dab8c76435c31e546e5beec" prot="private" virt="non-virtual"><scope>soundtouch::FIFOSampleBuffer</scope><name>channels</name></member>
      <member refid="classsoundtouch_1_1_f_i_f_o_sample_buffer_1a2b211a51e213f86e2e5a03d0715da7b5" prot="public" virt="virtual"><scope>soundtouch::FIFOSampleBuffer</scope><name>clear</name></member>
      <member refid="classsoundtouch_1_1_f_i_f_o_sample_buffer_1a1815baf43d98a469c3bc42bd433b5fd3" prot="private" virt="non-virtual"><scope>soundtouch::FIFOSampleBuffer</scope><name>ensureCapacity</name></member>
      <member refid="classsoundtouch_1_1_f_i_f_o_sample_buffer_1a5b227717b07215a1fb7a5125f2418dde" prot="public" virt="non-virtual"><scope>soundtouch::FIFOSampleBuffer</scope><name>FIFOSampleBuffer</name></member>
      <member refid="classsoundtouch_1_1_f_i_f_o_sample_buffer_1a9d48b8429dedfc01b58ec65ae72f0464" prot="private" virt="non-virtual"><scope>soundtouch::FIFOSampleBuffer</scope><name>getCapacity</name></member>
      <member refid="classsoundtouch_1_1_f_i_f_o_sample_buffer_1a6e42894951c896ed0e71bd90ccdf9147" prot="public" virt="virtual"><scope>soundtouch::FIFOSampleBuffer</scope><name>isEmpty</name></member>
      <member refid="classsoundtouch_1_1_f_i_f_o_sample_pipe_1a081941881e2c75dc5cb8a6f214e7242e" prot="public" virt="non-virtual"><scope>soundtouch::FIFOSampleBuffer</scope><name>moveSamples</name></member>
      <member refid="classsoundtouch_1_1_f_i_f_o_sample_buffer_1a6b6b914d52e4e5d952f160e9c3b54d66" prot="public" virt="virtual"><scope>soundtouch::FIFOSampleBuffer</scope><name>numSamples</name></member>
      <member refid="classsoundtouch_1_1_f_i_f_o_sample_buffer_1ac5342c9dbb7863c54500501d74c6a2d4" prot="public" virt="virtual"><scope>soundtouch::FIFOSampleBuffer</scope><name>ptrBegin</name></member>
      <member refid="classsoundtouch_1_1_f_i_f_o_sample_buffer_1a03d285e2148ec382caefd4d399ccb720" prot="public" virt="non-virtual"><scope>soundtouch::FIFOSampleBuffer</scope><name>ptrEnd</name></member>
      <member refid="classsoundtouch_1_1_f_i_f_o_sample_buffer_1a94f2865cbc6f487b936dd69424410e97" prot="public" virt="virtual"><scope>soundtouch::FIFOSampleBuffer</scope><name>putSamples</name></member>
      <member refid="classsoundtouch_1_1_f_i_f_o_sample_buffer_1afda08dabb67d6015e9cfb8a7045a6b5c" prot="public" virt="virtual"><scope>soundtouch::FIFOSampleBuffer</scope><name>putSamples</name></member>
      <member refid="classsoundtouch_1_1_f_i_f_o_sample_buffer_1a9bec369673be4b4d328befe0afd9f137" prot="public" virt="virtual"><scope>soundtouch::FIFOSampleBuffer</scope><name>receiveSamples</name></member>
      <member refid="classsoundtouch_1_1_f_i_f_o_sample_buffer_1a1956c4d63018ed733d70125337265372" prot="public" virt="virtual"><scope>soundtouch::FIFOSampleBuffer</scope><name>receiveSamples</name></member>
      <member refid="classsoundtouch_1_1_f_i_f_o_sample_buffer_1ad78ac8ad4b417368acb1d01d045ea1fd" prot="private" virt="non-virtual"><scope>soundtouch::FIFOSampleBuffer</scope><name>rewind</name></member>
      <member refid="classsoundtouch_1_1_f_i_f_o_sample_buffer_1a50e5fac250e6b9d40d790ae72b8aec0a" prot="private" virt="non-virtual"><scope>soundtouch::FIFOSampleBuffer</scope><name>samplesInBuffer</name></member>
      <member refid="classsoundtouch_1_1_f_i_f_o_sample_buffer_1a8e9630f4f9c41ef1be3f44d546be0e87" prot="public" virt="non-virtual"><scope>soundtouch::FIFOSampleBuffer</scope><name>setChannels</name></member>
      <member refid="classsoundtouch_1_1_f_i_f_o_sample_buffer_1a68b7992dab3c0d30a87449a57fbf4d75" prot="private" virt="non-virtual"><scope>soundtouch::FIFOSampleBuffer</scope><name>sizeInBytes</name></member>
      <member refid="classsoundtouch_1_1_f_i_f_o_sample_buffer_1adc9e09731283269276d3b00d68cb45e3" prot="public" virt="non-virtual"><scope>soundtouch::FIFOSampleBuffer</scope><name>~FIFOSampleBuffer</name></member>
      <member refid="classsoundtouch_1_1_f_i_f_o_sample_pipe_1a3525d161e1b4c3faaccc2a7f0a39f7a5" prot="public" virt="virtual"><scope>soundtouch::FIFOSampleBuffer</scope><name>~FIFOSamplePipe</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
