<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="query_8c" kind="file" language="C++">
    <compoundname>query.c</compoundname>
    <includes refid="assert_8h" local="no">assert.h</includes>
    <includes local="no">limits.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes refid="lilv__internal_8h" local="yes">lilv_internal.h</includes>
    <incdepgraph>
      <node id="24618">
        <label>lilv_internal.h</label>
        <link refid="lilv__internal_8h"/>
        <childnode refid="24619" relation="include">
        </childnode>
        <childnode refid="24620" relation="include">
        </childnode>
        <childnode refid="24616" relation="include">
        </childnode>
        <childnode refid="24621" relation="include">
        </childnode>
        <childnode refid="24623" relation="include">
        </childnode>
        <childnode refid="24624" relation="include">
        </childnode>
        <childnode refid="24628" relation="include">
        </childnode>
        <childnode refid="24629" relation="include">
        </childnode>
        <childnode refid="24631" relation="include">
        </childnode>
        <childnode refid="24632" relation="include">
        </childnode>
      </node>
      <node id="24627">
        <label>stdbool.h</label>
      </node>
      <node id="24625">
        <label>stdarg.h</label>
      </node>
      <node id="24630">
        <label>zix/common.h</label>
      </node>
      <node id="24622">
        <label>FLAC/ordinals.h</label>
        <link refid="ordinals_8h"/>
        <childnode refid="24620" relation="include">
        </childnode>
      </node>
      <node id="24620">
        <label>stdint.h</label>
      </node>
      <node id="24616">
        <label>stdlib.h</label>
      </node>
      <node id="24624">
        <label>serd/serd.h</label>
        <link refid="serd_8h"/>
        <childnode refid="24625" relation="include">
        </childnode>
        <childnode refid="24619" relation="include">
        </childnode>
        <childnode refid="24620" relation="include">
        </childnode>
        <childnode refid="24626" relation="include">
        </childnode>
        <childnode refid="24627" relation="include">
        </childnode>
      </node>
      <node id="24619">
        <label>stddef.h</label>
      </node>
      <node id="24614">
        <label>assert.h</label>
        <link refid="assert_8h"/>
      </node>
      <node id="24615">
        <label>limits.h</label>
      </node>
      <node id="24628">
        <label>sord/sord.h</label>
        <link refid="sord_8h"/>
        <childnode refid="24619" relation="include">
        </childnode>
        <childnode refid="24620" relation="include">
        </childnode>
        <childnode refid="24626" relation="include">
        </childnode>
        <childnode refid="24624" relation="include">
        </childnode>
        <childnode refid="24627" relation="include">
        </childnode>
      </node>
      <node id="24634">
        <label>lv2/lv2plug.in/ns/ext/urid/urid.h</label>
        <link refid="urid_8h"/>
        <childnode refid="24620" relation="include">
        </childnode>
      </node>
      <node id="24617">
        <label>string.h</label>
      </node>
      <node id="24621">
        <label>float.h</label>
        <link refid="float_8h"/>
        <childnode refid="24622" relation="include">
        </childnode>
      </node>
      <node id="24613">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/query.c</label>
        <link refid="query.c"/>
        <childnode refid="24614" relation="include">
        </childnode>
        <childnode refid="24615" relation="include">
        </childnode>
        <childnode refid="24616" relation="include">
        </childnode>
        <childnode refid="24617" relation="include">
        </childnode>
        <childnode refid="24618" relation="include">
        </childnode>
      </node>
      <node id="24632">
        <label>lilv/lilv.h</label>
        <link refid="lilv_8h"/>
        <childnode refid="24625" relation="include">
        </childnode>
        <childnode refid="24619" relation="include">
        </childnode>
        <childnode refid="24620" relation="include">
        </childnode>
        <childnode refid="24626" relation="include">
        </childnode>
        <childnode refid="24633" relation="include">
        </childnode>
        <childnode refid="24634" relation="include">
        </childnode>
        <childnode refid="24627" relation="include">
        </childnode>
      </node>
      <node id="24631">
        <label>lilv_config.h</label>
      </node>
      <node id="24633">
        <label>lv2/lv2plug.in/ns/lv2core/lv2.h</label>
        <link refid="lv2_8h"/>
        <childnode refid="24620" relation="include">
        </childnode>
      </node>
      <node id="24626">
        <label>stdio.h</label>
      </node>
      <node id="24629">
        <label>zix/tree.h</label>
        <link refid="lilv_2src_2zix_2tree_8h"/>
        <childnode refid="24619" relation="include">
        </childnode>
        <childnode refid="24630" relation="include">
        </childnode>
      </node>
      <node id="24623">
        <label>dlfcn.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="query_8c_1adff34a9f1e73251ae91d76076c09a6dd" prot="public" static="no">
        <name>LilvLangMatch</name>
        <enumvalue id="query_8c_1adff34a9f1e73251ae91d76076c09a6dda00781a470fdedb9c87fab3c17084fd75" prot="public">
          <name>LILV_LANG_MATCH_NONE</name>
          <briefdescription>
<para>Language does not match at all. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="query_8c_1adff34a9f1e73251ae91d76076c09a6dda807433a21fd8acb0e2ab1677e5b19876" prot="public">
          <name>LILV_LANG_MATCH_PARTIAL</name>
          <briefdescription>
<para>Partial (language, but not country) match. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="query_8c_1adff34a9f1e73251ae91d76076c09a6ddaa632a2b59b12d8de23d1e5c30e7805c5" prot="public">
          <name>LILV_LANG_MATCH_EXACT</name>
          <briefdescription>
<para>Exact (language and country) match. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/query.c" line="24" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/query.c" bodystart="24" bodyend="28"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="query_8c_1a349c49897f9ff5869b2caf4bc53ab983" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="query_8c_1adff34a9f1e73251ae91d76076c09a6dd" kindref="member">LilvLangMatch</ref></type>
        <definition>static LilvLangMatch lilv_lang_matches</definition>
        <argsstring>(const char *a, const char *b)</argsstring>
        <name>lilv_lang_matches</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/query.c" line="31" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/query.c" bodystart="31" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="query_8c_1ae475659ed64d38bccebad00a1c9c3844" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lilv_8h_1a256c2c4443307f320de24bb31198df83" kindref="member">LilvNodes</ref> *</type>
        <definition>static LilvNodes* lilv_nodes_from_stream_objects_i18n</definition>
        <argsstring>(LilvWorld *world, SordIter *stream, SordQuadIndex field)</argsstring>
        <name>lilv_nodes_from_stream_objects_i18n</name>
        <param>
          <type><ref refid="lilv_8h_1a91c1745aa6ffca2b6b87c56df6c5ab86" kindref="member">LilvWorld</ref> *</type>
          <declname>world</declname>
        </param>
        <param>
          <type><ref refid="group__sord_1ga59314650e0ab9b1cdeebc0bf7a0419fa" kindref="member">SordIter</ref> *</type>
          <declname>stream</declname>
        </param>
        <param>
          <type><ref refid="group__sord_1gad8ed181fe76f9085ba4188988527c633" kindref="member">SordQuadIndex</ref></type>
          <declname>field</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/query.c" line="50" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/query.c" bodystart="50" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="query_8c_1a3a2315b27ea535e7584327d2dd3baa7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lilv_8h_1a256c2c4443307f320de24bb31198df83" kindref="member">LilvNodes</ref> *</type>
        <definition>LilvNodes* lilv_nodes_from_stream_objects</definition>
        <argsstring>(LilvWorld *world, SordIter *stream, SordQuadIndex field)</argsstring>
        <name>lilv_nodes_from_stream_objects</name>
        <param>
          <type><ref refid="lilv_8h_1a91c1745aa6ffca2b6b87c56df6c5ab86" kindref="member">LilvWorld</ref> *</type>
          <declname>world</declname>
        </param>
        <param>
          <type><ref refid="group__sord_1ga59314650e0ab9b1cdeebc0bf7a0419fa" kindref="member">SordIter</ref> *</type>
          <declname>stream</declname>
        </param>
        <param>
          <type><ref refid="group__sord_1gad8ed181fe76f9085ba4188988527c633" kindref="member">SordQuadIndex</ref></type>
          <declname>field</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/query.c" line="119" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/query.c" bodystart="119" bodyend="140"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/>Copyright<sp/>2007-2014<sp/>David<sp/>Robillard<sp/>&lt;http://drobilla.net&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/>Permission<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>and/or<sp/>distribute<sp/>this<sp/>software<sp/>for<sp/>any</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>purpose<sp/>with<sp/>or<sp/>without<sp/>fee<sp/>is<sp/>hereby<sp/>granted,<sp/>provided<sp/>that<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>appear<sp/>in<sp/>all<sp/>copies.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"></highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>THE<sp/>AUTHOR<sp/>DISCLAIMS<sp/>ALL<sp/>WARRANTIES</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/>WITH<sp/>REGARD<sp/>TO<sp/>THIS<sp/>SOFTWARE<sp/>INCLUDING<sp/>ALL<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/>ANY<sp/>SPECIAL,<sp/>DIRECT,<sp/>INDIRECT,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>OR<sp/>ANY<sp/>DAMAGES</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/>WHATSOEVER<sp/>RESULTING<sp/>FROM<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA<sp/>OR<sp/>PROFITS,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>NEGLIGENCE<sp/>OR<sp/>OTHER<sp/>TORTIOUS<sp/>ACTION,<sp/>ARISING<sp/>OUT<sp/>OF</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>USE<sp/>OR<sp/>PERFORMANCE<sp/>OF<sp/>THIS<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="15"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="assert_8h" kindref="compound">assert.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lilv__internal_8h" kindref="compound">lilv_internal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="query_8c_1adff34a9f1e73251ae91d76076c09a6dd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="25" refid="query_8c_1adff34a9f1e73251ae91d76076c09a6dda00781a470fdedb9c87fab3c17084fd75" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="query_8c_1adff34a9f1e73251ae91d76076c09a6dda00781a470fdedb9c87fab3c17084fd75" kindref="member">LILV_LANG_MATCH_NONE</ref>,<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="26" refid="query_8c_1adff34a9f1e73251ae91d76076c09a6dda807433a21fd8acb0e2ab1677e5b19876" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="query_8c_1adff34a9f1e73251ae91d76076c09a6dda807433a21fd8acb0e2ab1677e5b19876" kindref="member">LILV_LANG_MATCH_PARTIAL</ref>,<sp/><sp/></highlight></codeline>
<codeline lineno="27" refid="query_8c_1adff34a9f1e73251ae91d76076c09a6ddaa632a2b59b12d8de23d1e5c30e7805c5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="query_8c_1adff34a9f1e73251ae91d76076c09a6ddaa632a2b59b12d8de23d1e5c30e7805c5" kindref="member">LILV_LANG_MATCH_EXACT</ref><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="28"><highlight class="normal">}<sp/><ref refid="query_8c_1adff34a9f1e73251ae91d76076c09a6dd" kindref="member">LilvLangMatch</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="query_8c_1adff34a9f1e73251ae91d76076c09a6dd" kindref="member">LilvLangMatch</ref></highlight></codeline>
<codeline lineno="31"><highlight class="normal">lilv_lang_matches(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>)</highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(a,<sp/>b))<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="query_8c_1adff34a9f1e73251ae91d76076c09a6ddaa632a2b59b12d8de23d1e5c30e7805c5" kindref="member">LILV_LANG_MATCH_EXACT</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/>a_dash<sp/><sp/><sp/><sp/><sp/>=<sp/>strchr(a,<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>a_lang_len<sp/>=<sp/>a_dash<sp/>?<sp/>(size_t)(a_dash<sp/>-<sp/>a)<sp/>:<sp/>strlen(a);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/>b_dash<sp/><sp/><sp/><sp/><sp/>=<sp/>strchr(b,<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>b_lang_len<sp/>=<sp/>b_dash<sp/>?<sp/>(size_t)(b_dash<sp/>-<sp/>b)<sp/>:<sp/>strlen(b);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a_lang_len<sp/>==<sp/>b_lang_len<sp/>&amp;&amp;<sp/>!strncmp(a,<sp/>b,<sp/>a_lang_len))<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="query_8c_1adff34a9f1e73251ae91d76076c09a6dda807433a21fd8acb0e2ab1677e5b19876" kindref="member">LILV_LANG_MATCH_PARTIAL</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="query_8c_1adff34a9f1e73251ae91d76076c09a6dda00781a470fdedb9c87fab3c17084fd75" kindref="member">LILV_LANG_MATCH_NONE</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="lilv_8h_1a256c2c4443307f320de24bb31198df83" kindref="member">LilvNodes</ref>*</highlight></codeline>
<codeline lineno="50"><highlight class="normal">lilv_nodes_from_stream_objects_i18n(<ref refid="struct_lilv_world_impl" kindref="compound">LilvWorld</ref>*<sp/><sp/><sp/><sp/><ref refid="namespacelv2__list_1a39bc711f56fd3393bf9013f08a1e5719" kindref="member">world</ref>,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_sord_iter_impl" kindref="compound">SordIter</ref>*<sp/><sp/><sp/><sp/><sp/>stream,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sord_1gad8ed181fe76f9085ba4188988527c633" kindref="member">SordQuadIndex</ref><sp/>field)</highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilv_8h_1a256c2c4443307f320de24bb31198df83" kindref="member">LilvNodes</ref>*<sp/><sp/><sp/><sp/><sp/><sp/>values<sp/><sp/>=<sp/><ref refid="collections_8c_1ad85dc561f7c943b545dafd49755a8a5c" kindref="member">lilv_nodes_new</ref>();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/>nolang<sp/><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>Untranslated<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/>partial<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>Partial<sp/>language<sp/>match</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>syslang<sp/>=<sp/><ref refid="lilv__internal_8h_1a12427bd70ec5b47239f00cd2b6a493b7" kindref="member">lilv_get_lang</ref>();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilv__internal_8h_1a6956468cfb2a38060d841422d84b72a2" kindref="member">FOREACH_MATCH</ref>(stream)<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref><sp/>=<sp/><ref refid="group__sord_1ga34db8db692181aca9ffc5506861f95cd" kindref="member">sord_iter_get_node</ref>(stream,<sp/>field);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__sord_1ga34de2b7b44fbd614e7831c9c1b6d114e" kindref="member">sord_node_get_type</ref>(value)<sp/>==<sp/><ref refid="group__sord_1gga69e82f5abb700cfbde0c9ee8d3574154a9d48171e6a7a4b4533af3539052d6dfd" kindref="member">SORD_LITERAL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><ref refid="namespacewaflib_1_1_tools_1_1qt4_1a1410657c327d97e1b283cb08a32121f4" kindref="member">lang</ref><sp/>=<sp/><ref refid="group__sord_1ga0f0d52d14ece45c5b8b4c28e0d885798" kindref="member">sord_node_get_language</ref>(value);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="query_8c_1adff34a9f1e73251ae91d76076c09a6dd" kindref="member">LilvLangMatch</ref><sp/>lm<sp/><sp/><sp/>=<sp/><ref refid="query_8c_1adff34a9f1e73251ae91d76076c09a6dda00781a470fdedb9c87fab3c17084fd75" kindref="member">LILV_LANG_MATCH_NONE</ref>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lang)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lm<sp/>=<sp/>(syslang)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>lilv_lang_matches(lang,<sp/>syslang)</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="query_8c_1adff34a9f1e73251ae91d76076c09a6dda807433a21fd8acb0e2ab1677e5b19876" kindref="member">LILV_LANG_MATCH_PARTIAL</ref>;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nolang<sp/>=<sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!syslang)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lm<sp/>=<sp/><ref refid="query_8c_1adff34a9f1e73251ae91d76076c09a6ddaa632a2b59b12d8de23d1e5c30e7805c5" kindref="member">LILV_LANG_MATCH_EXACT</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lm<sp/>==<sp/><ref refid="query_8c_1adff34a9f1e73251ae91d76076c09a6ddaa632a2b59b12d8de23d1e5c30e7805c5" kindref="member">LILV_LANG_MATCH_EXACT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Exact<sp/>language<sp/>match,<sp/>add<sp/>to<sp/>results</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__zix_1gabbf32f6bf3dd802fd36af7ac17cee87c" kindref="member">zix_tree_insert</ref>((<ref refid="struct_zix_tree_impl" kindref="compound">ZixTree</ref>*)values,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lilv__internal_8h_1ab85cc3ce5e142d7141219b15353ee671" kindref="member">lilv_node_new_from_node</ref>(world,<sp/>value),</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lm<sp/>==<sp/><ref refid="query_8c_1adff34a9f1e73251ae91d76076c09a6dda807433a21fd8acb0e2ab1677e5b19876" kindref="member">LILV_LANG_MATCH_PARTIAL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Partial<sp/>language<sp/>match,<sp/>save<sp/>in<sp/>case<sp/>we<sp/>find<sp/>no<sp/>exact</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>partial<sp/>=<sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__zix_1gabbf32f6bf3dd802fd36af7ac17cee87c" kindref="member">zix_tree_insert</ref>((<ref refid="struct_zix_tree_impl" kindref="compound">ZixTree</ref>*)values,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lilv__internal_8h_1ab85cc3ce5e142d7141219b15353ee671" kindref="member">lilv_node_new_from_node</ref>(world,<sp/>value),</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sord_1ga6450c3214e90ffffc47f756e66d66037" kindref="member">sord_iter_free</ref>(stream);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>free(syslang);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__lilv_1gae7ca543182019e98be1770f30ca3c340" kindref="member">lilv_nodes_size</ref>(values)<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>values;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/>best<sp/>=<sp/>nolang;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(syslang<sp/>&amp;&amp;<sp/>partial)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Partial<sp/>language<sp/>match<sp/>for<sp/>system<sp/>language</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best<sp/>=<sp/>partial;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!best)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>languages<sp/>matches<sp/>at<sp/>all,<sp/>and<sp/>no<sp/>untranslated<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Use<sp/>any<sp/>value,<sp/>if<sp/>possible</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best<sp/>=<sp/>partial;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(best)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__zix_1gabbf32f6bf3dd802fd36af7ac17cee87c" kindref="member">zix_tree_insert</ref>(</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="struct_zix_tree_impl" kindref="compound">ZixTree</ref>*)values,<sp/><ref refid="lilv__internal_8h_1ab85cc3ce5e142d7141219b15353ee671" kindref="member">lilv_node_new_from_node</ref>(world,<sp/>best),<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>No<sp/>matches<sp/>whatsoever</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lilv_1gac355adeca3dc54366899b6f1ef3b0fc3" kindref="member">lilv_nodes_free</ref>(values);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>values<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>values;</highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><ref refid="lilv_8h_1a256c2c4443307f320de24bb31198df83" kindref="member">LilvNodes</ref>*</highlight></codeline>
<codeline lineno="119" refid="query_8c_1a3a2315b27ea535e7584327d2dd3baa7a" refkind="member"><highlight class="normal"><ref refid="query_8c_1a3a2315b27ea535e7584327d2dd3baa7a" kindref="member">lilv_nodes_from_stream_objects</ref>(<ref refid="struct_lilv_world_impl" kindref="compound">LilvWorld</ref>*<sp/><sp/><sp/><sp/>world,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_sord_iter_impl" kindref="compound">SordIter</ref>*<sp/><sp/><sp/><sp/><sp/>stream,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sord_1gad8ed181fe76f9085ba4188988527c633" kindref="member">SordQuadIndex</ref><sp/>field)</highlight></codeline>
<codeline lineno="122"><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__sord_1ga287f3764973d96c2f1df566abf569f5e" kindref="member">sord_iter_end</ref>(stream))<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sord_1ga6450c3214e90ffffc47f756e66d66037" kindref="member">sord_iter_free</ref>(stream);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(world-&gt;<ref refid="struct_lilv_world_impl_1a68aa436a49d51467895f85e6c1f4c2be" kindref="member">opt</ref>.<ref refid="struct_lilv_options_1a9f186f30aa1f207befab6836fca11814" kindref="member">filter_language</ref>)<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lilv_nodes_from_stream_objects_i18n(world,<sp/>stream,<sp/>field);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lilv_8h_1a256c2c4443307f320de24bb31198df83" kindref="member">LilvNodes</ref>*<sp/>values<sp/>=<sp/><ref refid="collections_8c_1ad85dc561f7c943b545dafd49755a8a5c" kindref="member">lilv_nodes_new</ref>();</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lilv__internal_8h_1a6956468cfb2a38060d841422d84b72a2" kindref="member">FOREACH_MATCH</ref>(stream)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref><sp/>=<sp/><ref refid="group__sord_1ga34db8db692181aca9ffc5506861f95cd" kindref="member">sord_iter_get_node</ref>(stream,<sp/>field);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structnode" kindref="compound">node</ref><sp/><sp/>=<sp/><ref refid="lilv__internal_8h_1ab85cc3ce5e142d7141219b15353ee671" kindref="member">lilv_node_new_from_node</ref>(world,<sp/>value);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node)<sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__zix_1gabbf32f6bf3dd802fd36af7ac17cee87c" kindref="member">zix_tree_insert</ref>((<ref refid="struct_zix_tree_impl" kindref="compound">ZixTree</ref>*)values,<sp/>node,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sord_1ga6450c3214e90ffffc47f756e66d66037" kindref="member">sord_iter_free</ref>(stream);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>values;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/query.c"/>
  </compounddef>
</doxygen>
