<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="sndfile-deinterleave_8c" kind="file" language="C++">
    <compoundname>sndfile-deinterleave.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">sndfile.h</includes>
    <includes refid="libsndfile_2programs_2common_8h" local="yes">common.h</includes>
    <incdepgraph>
      <node id="19342">
        <label>stdlib.h</label>
      </node>
      <node id="19344">
        <label>sndfile.h</label>
      </node>
      <node id="19343">
        <label>string.h</label>
      </node>
      <node id="19340">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/programs/sndfile-deinterleave.c</label>
        <link refid="sndfile-deinterleave.c"/>
        <childnode refid="19341" relation="include">
        </childnode>
        <childnode refid="19342" relation="include">
        </childnode>
        <childnode refid="19343" relation="include">
        </childnode>
        <childnode refid="19344" relation="include">
        </childnode>
        <childnode refid="19345" relation="include">
        </childnode>
      </node>
      <node id="19345">
        <label>common.h</label>
        <link refid="libsndfile_2programs_2common_8h"/>
      </node>
      <node id="19341">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="struct_s_t_a_t_e" prot="public">STATE</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="sndfile-deinterleave_8c_1a46130dc86f2322714bba26960b64e7bb" prot="public" static="no">
        <name>BUFFER_LEN</name>
        <initializer>4096</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/programs/sndfile-deinterleave.c" line="40" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/programs/sndfile-deinterleave.c" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sndfile-deinterleave_8c_1ac69ee46f4a51ed14f0d68628c2dec71d" prot="public" static="no">
        <name>MAX_CHANNELS</name>
        <initializer>16</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/programs/sndfile-deinterleave.c" line="41" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/programs/sndfile-deinterleave.c" bodystart="41" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="sndfile-deinterleave_8c_1a32be881e63eb65d7293c4029a428cd04" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void usage_exit</definition>
        <argsstring>(void)</argsstring>
        <name>usage_exit</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/programs/sndfile-deinterleave.c" line="61" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/programs/sndfile-deinterleave.c" bodystart="148" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="sndfile-deinterleave_8c_1a67031dc32107d92ad7bef590fbb79069" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void deinterleave_int</definition>
        <argsstring>(STATE *state)</argsstring>
        <name>deinterleave_int</name>
        <param>
          <type><ref refid="struct_s_t_a_t_e" kindref="compound">STATE</ref> *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/programs/sndfile-deinterleave.c" line="63" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/programs/sndfile-deinterleave.c" bodystart="161" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="sndfile-deinterleave_8c_1a1219a915b74a8a587a4c564e17394101" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void deinterleave_double</definition>
        <argsstring>(STATE *state)</argsstring>
        <name>deinterleave_double</name>
        <param>
          <type><ref refid="struct_s_t_a_t_e" kindref="compound">STATE</ref> *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/programs/sndfile-deinterleave.c" line="64" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/programs/sndfile-deinterleave.c" bodystart="179" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="sndfile-deinterleave_8c_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/programs/sndfile-deinterleave.c" line="67" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/programs/sndfile-deinterleave.c" bodystart="67" bodyend="142"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">**<sp/>Copyright<sp/>(C)<sp/>2009-2011<sp/>Erik<sp/>de<sp/>Castro<sp/>Lopo<sp/>&lt;erikd@mega-nerd.com&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment">**</highlight></codeline>
<codeline lineno="4"><highlight class="comment">**<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="5"><highlight class="comment">**</highlight></codeline>
<codeline lineno="6"><highlight class="comment">**<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="7"><highlight class="comment">**<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions<sp/>are</highlight></codeline>
<codeline lineno="8"><highlight class="comment">**<sp/>met:</highlight></codeline>
<codeline lineno="9"><highlight class="comment">**</highlight></codeline>
<codeline lineno="10"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="11"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="12"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/>*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="13"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in</highlight></codeline>
<codeline lineno="14"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the</highlight></codeline>
<codeline lineno="15"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/>distribution.</highlight></codeline>
<codeline lineno="16"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/>*<sp/>Neither<sp/>the<sp/>author<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>any<sp/>contributors<sp/>may<sp/>be<sp/>used</highlight></codeline>
<codeline lineno="17"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products<sp/>derived<sp/>from<sp/>this<sp/>software<sp/>without</highlight></codeline>
<codeline lineno="18"><highlight class="comment">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="19"><highlight class="comment">**</highlight></codeline>
<codeline lineno="20"><highlight class="comment">**<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS</highlight></codeline>
<codeline lineno="21"><highlight class="comment">**<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED</highlight></codeline>
<codeline lineno="22"><highlight class="comment">**<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR</highlight></codeline>
<codeline lineno="23"><highlight class="comment">**<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT<sp/>OWNER<sp/>OR</highlight></codeline>
<codeline lineno="24"><highlight class="comment">**<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,</highlight></codeline>
<codeline lineno="25"><highlight class="comment">**<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,</highlight></codeline>
<codeline lineno="26"><highlight class="comment">**<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;</highlight></codeline>
<codeline lineno="27"><highlight class="comment">**<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,</highlight></codeline>
<codeline lineno="28"><highlight class="comment">**<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR</highlight></codeline>
<codeline lineno="29"><highlight class="comment">**<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF</highlight></codeline>
<codeline lineno="30"><highlight class="comment">**<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="31"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sndfile.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="libsndfile_2programs_2common_8h" kindref="compound">common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="sndfile-deinterleave_8c_1a46130dc86f2322714bba26960b64e7bb" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BUFFER_LEN<sp/><sp/>4096</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="sndfile-deinterleave_8c_1ac69ee46f4a51ed14f0d68628c2dec71d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX_CHANNELS<sp/><sp/><sp/><sp/>16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="struct_s_t_a_t_e" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="struct_s_t_a_t_e_1a643e9bb7ddce734acf826199a7d5e3d7" refkind="member"><highlight class="normal">{<sp/><sp/><sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac14209bc83d532b06a8cdf9ade6d544a" kindref="member">SNDFILE</ref><sp/>*<sp/><ref refid="struct_s_t_a_t_e_1a643e9bb7ddce734acf826199a7d5e3d7" kindref="member">infile</ref><sp/>;</highlight></codeline>
<codeline lineno="46" refid="struct_s_t_a_t_e_1a8161c6dc82d05b454ebaa8715579d880" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac14209bc83d532b06a8cdf9ade6d544a" kindref="member">SNDFILE</ref><sp/>*<sp/>outfile<sp/>[<ref refid="sndfile-deinterleave_8c_1ac69ee46f4a51ed14f0d68628c2dec71d" kindref="member">MAX_CHANNELS</ref>]<sp/>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="struct_s_t_a_t_e_1ac94f445895e6b5da656238c83324c319" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><ref refid="poly-fir_8h_1a2530554172d8629149ec56816eeaa947" kindref="member">d</ref><sp/>[<ref refid="sndfile-deinterleave_8c_1ac69ee46f4a51ed14f0d68628c2dec71d" kindref="member">MAX_CHANNELS</ref><sp/>*<sp/><ref refid="sndfile-deinterleave_8c_1a46130dc86f2322714bba26960b64e7bb" kindref="member">BUFFER_LEN</ref>]<sp/>;</highlight></codeline>
<codeline lineno="50" refid="struct_s_t_a_t_e_1ae54a2980cada12bc913f4e7490303a7d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>[<ref refid="sndfile-deinterleave_8c_1ac69ee46f4a51ed14f0d68628c2dec71d" kindref="member">MAX_CHANNELS</ref><sp/>*<sp/><ref refid="sndfile-deinterleave_8c_1a46130dc86f2322714bba26960b64e7bb" kindref="member">BUFFER_LEN</ref>]<sp/>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>din<sp/>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><ref refid="poly-fir_8h_1a2530554172d8629149ec56816eeaa947" kindref="member">d</ref><sp/>[<ref refid="sndfile-deinterleave_8c_1a46130dc86f2322714bba26960b64e7bb" kindref="member">BUFFER_LEN</ref>]<sp/>;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>[<ref refid="sndfile-deinterleave_8c_1a46130dc86f2322714bba26960b64e7bb" kindref="member">BUFFER_LEN</ref>]<sp/>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>dout<sp/>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="struct_s_t_a_t_e_1ace13238ed4ee205fca8a96a3c1aa9297" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_s_t_a_t_e_1ace13238ed4ee205fca8a96a3c1aa9297" kindref="member">channels</ref><sp/>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}<sp/><ref refid="struct_s_t_a_t_e" kindref="compound">STATE</ref><sp/>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>usage_exit<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>deinterleave_int<sp/>(<ref refid="struct_s_t_a_t_e" kindref="compound">STATE</ref><sp/>*<sp/>state)<sp/>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>deinterleave_double<sp/>(<ref refid="struct_s_t_a_t_e" kindref="compound">STATE</ref><sp/>*<sp/>state)<sp/>;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="sndfile-deinterleave_8c_1a3c04138a5bfe5d72780bb7e82a18e627" refkind="member"><highlight class="normal"><ref refid="sndfile-deinterleave_8c_1a3c04138a5bfe5d72780bb7e82a18e627" kindref="member">main</ref><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cmdline_8c_1aaffeb1bf2056ea44af5b5d0ee4d6ff07" kindref="member">argc</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**<ref refid="cmdline_8c_1ad407d5ba91709bd9b092003858600723" kindref="member">argv</ref>)</highlight></codeline>
<codeline lineno="68"><highlight class="normal">{<sp/><sp/><sp/><ref refid="struct_s_t_a_t_e" kindref="compound">STATE</ref><sp/>state<sp/>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_s_f___i_n_f_o" kindref="compound">SF_INFO</ref><sp/><ref refid="frontend_8c_1a6993a4314b1f21cc6aa5614009106c94" kindref="member">sfinfo</ref><sp/>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>pathname<sp/>[512],<sp/>ext<sp/>[32],<sp/>*cptr<sp/>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ch,<sp/>double_split<sp/>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argc<sp/>!=<sp/>2)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argc<sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>puts<sp/>(</highlight><highlight class="stringliteral">&quot;\nError<sp/>:<sp/>need<sp/>a<sp/>single<sp/>input<sp/>file.\n&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>usage_exit<sp/>()<sp/>;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>memset<sp/>(&amp;state,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(state))<sp/>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>memset<sp/>(&amp;sfinfo,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(sfinfo))<sp/>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((state.<ref refid="struct_s_t_a_t_e_1a643e9bb7ddce734acf826199a7d5e3d7" kindref="member">infile</ref><sp/>=<sp/><ref refid="sndfile_8c_1a61bb810d2581bc860cd8884e22d6c7d2" kindref="member">sf_open</ref><sp/>(argv<sp/>[1],<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a775634eda7917b3f2142895169300799a125531fe9c895237bccd35736370e815" kindref="member">SFM_READ</ref>,<sp/>&amp;sfinfo))<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\nError<sp/>:<sp/>Not<sp/>able<sp/>to<sp/>open<sp/>input<sp/>file<sp/>&apos;%s&apos;\n%s\n&quot;</highlight><highlight class="normal">,<sp/>argv<sp/>[1],<sp/><ref refid="sndfile_8c_1a219fb20afbf20adbfa32c4a60721d8c0" kindref="member">sf_strerror</ref><sp/>(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>))<sp/>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit<sp/>(1)<sp/>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sfinfo.<ref refid="struct_s_f___i_n_f_o_1aad5220b31d2672bf83d3cf4cea0b2826" kindref="member">channels</ref><sp/>&lt;<sp/>2)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;\nError<sp/>:<sp/>Input<sp/>file<sp/>&apos;%s&apos;<sp/>only<sp/>has<sp/>one<sp/>channel.\n&quot;</highlight><highlight class="normal">,<sp/>argv<sp/>[1])<sp/>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit<sp/>(1)<sp/>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>state.<ref refid="struct_s_t_a_t_e_1ace13238ed4ee205fca8a96a3c1aa9297" kindref="member">channels</ref><sp/>=<sp/>sfinfo.<ref refid="struct_s_f___i_n_f_o_1aad5220b31d2672bf83d3cf4cea0b2826" kindref="member">channels</ref><sp/>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>sfinfo.<ref refid="struct_s_f___i_n_f_o_1aad5220b31d2672bf83d3cf4cea0b2826" kindref="member">channels</ref><sp/>=<sp/>1<sp/>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="win_2msvc_2switches_8h_1aa367b75c5aed883fef5befbdf04835a4" kindref="member">snprintf</ref><sp/>(pathname,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(pathname),<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>argv<sp/>[1])<sp/>;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((cptr<sp/>=<sp/>strrchr<sp/>(pathname,<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">))<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ext<sp/>[0]<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><ref refid="win_2msvc_2switches_8h_1aa367b75c5aed883fef5befbdf04835a4" kindref="member">snprintf</ref><sp/>(ext,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(ext),<sp/></highlight><highlight class="stringliteral">&quot;%s&quot;</highlight><highlight class="normal">,<sp/>cptr)<sp/>;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cptr<sp/>[0]<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Input<sp/>file<sp/>:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>pathname)<sp/>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>puts<sp/>(</highlight><highlight class="stringliteral">&quot;Output<sp/>files<sp/>:&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ch<sp/>=<sp/>0<sp/>;<sp/>ch<sp/>&lt;<sp/>state.<ref refid="struct_s_t_a_t_e_1ace13238ed4ee205fca8a96a3c1aa9297" kindref="member">channels</ref><sp/>;<sp/>ch++)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="octave__test_8m_1a2ff994e16bf9521154de4cf659a3b689" kindref="member">filename</ref><sp/>[520]<sp/>;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="win_2msvc_2switches_8h_1aa367b75c5aed883fef5befbdf04835a4" kindref="member">snprintf</ref><sp/>(filename,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>(filename),<sp/></highlight><highlight class="stringliteral">&quot;%s_%02d%s&quot;</highlight><highlight class="normal">,<sp/>pathname,<sp/>ch,<sp/>ext)<sp/>;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((state.<ref refid="struct_s_t_a_t_e_1a8161c6dc82d05b454ebaa8715579d880" kindref="member">outfile</ref><sp/>[ch]<sp/>=<sp/><ref refid="sndfile_8c_1a61bb810d2581bc860cd8884e22d6c7d2" kindref="member">sf_open</ref><sp/>(filename,<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1a775634eda7917b3f2142895169300799a449991ce14cb1b9715cf444ffdb9e4a0" kindref="member">SFM_WRITE</ref>,<sp/>&amp;sfinfo))<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Not<sp/>able<sp/>to<sp/>open<sp/>output<sp/>file<sp/>&apos;%s&apos;\n%s\n&quot;</highlight><highlight class="normal">,<sp/>filename,<sp/><ref refid="sndfile_8c_1a219fb20afbf20adbfa32c4a60721d8c0" kindref="member">sf_strerror</ref><sp/>(<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>))<sp/>;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit<sp/>(1)<sp/>;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>filename)<sp/>;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(sfinfo.<ref refid="struct_s_f___i_n_f_o_1a36a7c3ae9a8229797f19267b4ba07361" kindref="member">format</ref><sp/>&amp;<sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2feae792e42fc6619187743f7741e7044240" kindref="member">SF_FORMAT_SUBMASK</ref>)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea8b19f7e84eb0556faff33623830b489b" kindref="member">SF_FORMAT_FLOAT</ref><sp/>:</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea7f5de05a45409d1ce72c9a2ecbff1bd3" kindref="member">SF_FORMAT_DOUBLE</ref><sp/>:</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="mac_2config_2i386_2lib-src_2libsndfile_2src_2sndfile_8h_1ac6bea760bc75e449a80b8cc28bf9a2fea029114057a7956f3c94ae18d269faf61" kindref="member">SF_FORMAT_VORBIS</ref><sp/>:</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>double_split<sp/>=<sp/>1<sp/>;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break<sp/>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal"><sp/>:</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>double_split<sp/>=<sp/>0<sp/>;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break<sp/>;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(double_split)</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deinterleave_double<sp/>(&amp;state)<sp/>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deinterleave_int<sp/>(&amp;state)<sp/>;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sndfile_8c_1a276b87553823c937c62492206f0ed81e" kindref="member">sf_close</ref><sp/>(state.<ref refid="struct_s_t_a_t_e_1a643e9bb7ddce734acf826199a7d5e3d7" kindref="member">infile</ref>)<sp/>;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ch<sp/>=<sp/>0<sp/>;<sp/>ch<sp/>&lt;<sp/><ref refid="sndfile-deinterleave_8c_1ac69ee46f4a51ed14f0d68628c2dec71d" kindref="member">MAX_CHANNELS</ref><sp/>;<sp/>ch++)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state.<ref refid="struct_s_t_a_t_e_1a8161c6dc82d05b454ebaa8715579d880" kindref="member">outfile</ref><sp/>[ch]<sp/>!=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sndfile_8c_1a276b87553823c937c62492206f0ed81e" kindref="member">sf_close</ref><sp/>(state.<ref refid="struct_s_t_a_t_e_1a8161c6dc82d05b454ebaa8715579d880" kindref="member">outfile</ref><sp/>[ch])<sp/>;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0<sp/>;</highlight></codeline>
<codeline lineno="142"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>main<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="comment">/*------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="145"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal">usage_exit<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="149"><highlight class="normal">{<sp/><sp/><sp/>puts<sp/>(</highlight><highlight class="stringliteral">&quot;\nUsage<sp/>:<sp/>sndfile-deinterleave<sp/>&lt;filename&gt;\n&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>puts<sp/>(</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Split<sp/>a<sp/>mutli-channel<sp/>file<sp/>into<sp/>a<sp/>set<sp/>of<sp/>mono<sp/>files.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;If<sp/>the<sp/>input<sp/>file<sp/>is<sp/>named<sp/>&apos;a.wav&apos;,<sp/>the<sp/>output<sp/>files<sp/>will<sp/>be<sp/>named\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;a_00.wav,<sp/>a_01.wav<sp/>and<sp/>so<sp/>on.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="octave__test_8m_1ac6d0e62c65e5715b13a5fcb381118888" kindref="member">printf</ref><sp/>(</highlight><highlight class="stringliteral">&quot;Using<sp/>%s.\n\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="sndfile_8c_1ade7019ecbee148f88a3e943c6c019105" kindref="member">sf_version_string</ref><sp/>())<sp/>;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>exit<sp/>(0)<sp/>;</highlight></codeline>
<codeline lineno="158"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>usage_exit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal">deinterleave_int<sp/>(<ref refid="struct_s_t_a_t_e" kindref="compound">STATE</ref><sp/>*<sp/>state)</highlight></codeline>
<codeline lineno="162"><highlight class="normal">{<sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>read_len<sp/>;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ch,<sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref><sp/>;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>read_len<sp/>=<sp/><ref refid="sndfile_8c_1a230c718b72261f7dc2de027f73c57cd1" kindref="member">sf_readf_int</ref><sp/>(state-&gt;<ref refid="struct_s_t_a_t_e_1a643e9bb7ddce734acf826199a7d5e3d7" kindref="member">infile</ref>,<sp/>state-&gt;<ref refid="struct_s_t_a_t_e_1a8a7a2ae7a005b9fb0f70284042892f8f" kindref="member">din</ref>.<ref refid="struct_s_t_a_t_e_1ae54a2980cada12bc913f4e7490303a7d" kindref="member">i</ref>,<sp/><ref refid="sndfile-deinterleave_8c_1a46130dc86f2322714bba26960b64e7bb" kindref="member">BUFFER_LEN</ref>)<sp/>;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ch<sp/>=<sp/>0<sp/>;<sp/>ch<sp/>&lt;<sp/>state-&gt;<ref refid="struct_s_t_a_t_e_1ace13238ed4ee205fca8a96a3c1aa9297" kindref="member">channels</ref><sp/>;<sp/>ch<sp/>++)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0<sp/>;<sp/>k<sp/>&lt;<sp/>read_len<sp/>;<sp/>k++)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="struct_s_t_a_t_e_1a4679c3589c8635c0f7ed3fad181ed908" kindref="member">dout</ref>.<ref refid="struct_s_t_a_t_e_1ae54a2980cada12bc913f4e7490303a7d" kindref="member">i</ref><sp/>[k]<sp/>=<sp/>state-&gt;<ref refid="struct_s_t_a_t_e_1a8a7a2ae7a005b9fb0f70284042892f8f" kindref="member">din</ref>.<ref refid="struct_s_t_a_t_e_1ae54a2980cada12bc913f4e7490303a7d" kindref="member">i</ref><sp/>[k<sp/>*<sp/>state-&gt;<ref refid="struct_s_t_a_t_e_1ace13238ed4ee205fca8a96a3c1aa9297" kindref="member">channels</ref><sp/>+<sp/>ch]<sp/>;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sndfile_8c_1adfc59c046505b3d506ed0da6e1376f63" kindref="member">sf_write_int</ref><sp/>(state-&gt;<ref refid="struct_s_t_a_t_e_1a8161c6dc82d05b454ebaa8715579d880" kindref="member">outfile</ref><sp/>[ch],<sp/>state-&gt;<ref refid="struct_s_t_a_t_e_1a4679c3589c8635c0f7ed3fad181ed908" kindref="member">dout</ref>.<ref refid="struct_s_t_a_t_e_1ae54a2980cada12bc913f4e7490303a7d" kindref="member">i</ref>,<sp/>read_len)<sp/>;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(read_len<sp/>&gt;<sp/>0)<sp/>;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>deinterleave_int<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal">deinterleave_double<sp/>(<ref refid="struct_s_t_a_t_e" kindref="compound">STATE</ref><sp/>*<sp/>state)</highlight></codeline>
<codeline lineno="180"><highlight class="normal">{<sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>read_len<sp/>;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ch,<sp/><ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref><sp/>;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>read_len<sp/>=<sp/><ref refid="sndfile_8c_1a9a34a23af2ac862cb91ada1ed7eb79c8" kindref="member">sf_readf_double</ref><sp/>(state-&gt;<ref refid="struct_s_t_a_t_e_1a643e9bb7ddce734acf826199a7d5e3d7" kindref="member">infile</ref>,<sp/>state-&gt;<ref refid="struct_s_t_a_t_e_1a8a7a2ae7a005b9fb0f70284042892f8f" kindref="member">din</ref>.<ref refid="struct_s_t_a_t_e_1ac94f445895e6b5da656238c83324c319" kindref="member">d</ref>,<sp/><ref refid="sndfile-deinterleave_8c_1a46130dc86f2322714bba26960b64e7bb" kindref="member">BUFFER_LEN</ref>)<sp/>;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(ch<sp/>=<sp/>0<sp/>;<sp/>ch<sp/>&lt;<sp/>state-&gt;<ref refid="struct_s_t_a_t_e_1ace13238ed4ee205fca8a96a3c1aa9297" kindref="member">channels</ref><sp/>;<sp/>ch<sp/>++)</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(k<sp/>=<sp/>0<sp/>;<sp/>k<sp/>&lt;<sp/>read_len<sp/>;<sp/>k++)</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state-&gt;<ref refid="struct_s_t_a_t_e_1a4679c3589c8635c0f7ed3fad181ed908" kindref="member">dout</ref>.<ref refid="struct_s_t_a_t_e_1ac94f445895e6b5da656238c83324c319" kindref="member">d</ref><sp/>[k]<sp/>=<sp/>state-&gt;<ref refid="struct_s_t_a_t_e_1a8a7a2ae7a005b9fb0f70284042892f8f" kindref="member">din</ref>.<ref refid="struct_s_t_a_t_e_1ac94f445895e6b5da656238c83324c319" kindref="member">d</ref><sp/>[k<sp/>*<sp/>state-&gt;<ref refid="struct_s_t_a_t_e_1ace13238ed4ee205fca8a96a3c1aa9297" kindref="member">channels</ref><sp/>+<sp/>ch]<sp/>;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sndfile_8c_1a45580dcb4de2f9db0d3cd521a0810cc0" kindref="member">sf_write_double</ref><sp/>(state-&gt;<ref refid="struct_s_t_a_t_e_1a8161c6dc82d05b454ebaa8715579d880" kindref="member">outfile</ref><sp/>[ch],<sp/>state-&gt;<ref refid="struct_s_t_a_t_e_1a4679c3589c8635c0f7ed3fad181ed908" kindref="member">dout</ref>.<ref refid="struct_s_t_a_t_e_1ac94f445895e6b5da656238c83324c319" kindref="member">d</ref>,<sp/>read_len)<sp/>;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(read_len<sp/>&gt;<sp/>0)<sp/>;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>deinterleave_double<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/programs/sndfile-deinterleave.c"/>
  </compounddef>
</doxygen>
