<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="lv2_2lilv_2src_2plugin_8c" kind="file" language="C++">
    <compoundname>plugin.c</compoundname>
    <includes refid="assert_8h" local="no">assert.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">stdarg.h</includes>
    <includes local="no">stdint.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="yes">lilv_config.h</includes>
    <includes refid="lilv__internal_8h" local="yes">lilv_internal.h</includes>
    <includes refid="ui_8h" local="yes">lv2/lv2plug.in/ns/extensions/ui/ui.h</includes>
    <incdepgraph>
      <node id="9306">
        <label>lilv_internal.h</label>
        <link refid="lilv__internal_8h"/>
        <childnode refid="9307" relation="include">
        </childnode>
        <childnode refid="9301" relation="include">
        </childnode>
        <childnode refid="9303" relation="include">
        </childnode>
        <childnode refid="9308" relation="include">
        </childnode>
        <childnode refid="9310" relation="include">
        </childnode>
        <childnode refid="9311" relation="include">
        </childnode>
        <childnode refid="9313" relation="include">
        </childnode>
        <childnode refid="9314" relation="include">
        </childnode>
        <childnode refid="9305" relation="include">
        </childnode>
        <childnode refid="9316" relation="include">
        </childnode>
      </node>
      <node id="9312">
        <label>stdbool.h</label>
      </node>
      <node id="9300">
        <label>stdarg.h</label>
      </node>
      <node id="9319">
        <label>lv2/lv2plug.in/ns/extensions/ui/ui.h</label>
        <link refid="ui_8h"/>
        <childnode refid="9301" relation="include">
        </childnode>
        <childnode refid="9317" relation="include">
        </childnode>
        <childnode refid="9312" relation="include">
        </childnode>
      </node>
      <node id="9315">
        <label>zix/common.h</label>
      </node>
      <node id="9309">
        <label>FLAC/ordinals.h</label>
        <link refid="ordinals_8h"/>
        <childnode refid="9301" relation="include">
        </childnode>
      </node>
      <node id="9301">
        <label>stdint.h</label>
      </node>
      <node id="9303">
        <label>stdlib.h</label>
      </node>
      <node id="9297">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c</label>
        <link refid="lv2/lilv/src/plugin.c"/>
        <childnode refid="9298" relation="include">
        </childnode>
        <childnode refid="9299" relation="include">
        </childnode>
        <childnode refid="9300" relation="include">
        </childnode>
        <childnode refid="9301" relation="include">
        </childnode>
        <childnode refid="9302" relation="include">
        </childnode>
        <childnode refid="9303" relation="include">
        </childnode>
        <childnode refid="9304" relation="include">
        </childnode>
        <childnode refid="9305" relation="include">
        </childnode>
        <childnode refid="9306" relation="include">
        </childnode>
        <childnode refid="9319" relation="include">
        </childnode>
      </node>
      <node id="9311">
        <label>serd/serd.h</label>
        <link refid="serd_8h"/>
        <childnode refid="9300" relation="include">
        </childnode>
        <childnode refid="9307" relation="include">
        </childnode>
        <childnode refid="9301" relation="include">
        </childnode>
        <childnode refid="9302" relation="include">
        </childnode>
        <childnode refid="9312" relation="include">
        </childnode>
      </node>
      <node id="9307">
        <label>stddef.h</label>
      </node>
      <node id="9298">
        <label>assert.h</label>
        <link refid="assert_8h"/>
      </node>
      <node id="9313">
        <label>sord/sord.h</label>
        <link refid="sord_8h"/>
        <childnode refid="9307" relation="include">
        </childnode>
        <childnode refid="9301" relation="include">
        </childnode>
        <childnode refid="9302" relation="include">
        </childnode>
        <childnode refid="9311" relation="include">
        </childnode>
        <childnode refid="9312" relation="include">
        </childnode>
      </node>
      <node id="9318">
        <label>lv2/lv2plug.in/ns/ext/urid/urid.h</label>
        <link refid="urid_8h"/>
        <childnode refid="9301" relation="include">
        </childnode>
      </node>
      <node id="9304">
        <label>string.h</label>
      </node>
      <node id="9308">
        <label>float.h</label>
        <link refid="float_8h"/>
        <childnode refid="9309" relation="include">
        </childnode>
      </node>
      <node id="9299">
        <label>math.h</label>
      </node>
      <node id="9316">
        <label>lilv/lilv.h</label>
        <link refid="lilv_8h"/>
        <childnode refid="9300" relation="include">
        </childnode>
        <childnode refid="9307" relation="include">
        </childnode>
        <childnode refid="9301" relation="include">
        </childnode>
        <childnode refid="9302" relation="include">
        </childnode>
        <childnode refid="9317" relation="include">
        </childnode>
        <childnode refid="9318" relation="include">
        </childnode>
        <childnode refid="9312" relation="include">
        </childnode>
      </node>
      <node id="9305">
        <label>lilv_config.h</label>
      </node>
      <node id="9317">
        <label>lv2/lv2plug.in/ns/lv2core/lv2.h</label>
        <link refid="lv2_8h"/>
        <childnode refid="9301" relation="include">
        </childnode>
      </node>
      <node id="9302">
        <label>stdio.h</label>
      </node>
      <node id="9314">
        <label>zix/tree.h</label>
        <link refid="lilv_2src_2zix_2tree_8h"/>
        <childnode refid="9307" relation="include">
        </childnode>
        <childnode refid="9315" relation="include">
        </childnode>
      </node>
      <node id="9310">
        <label>dlfcn.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="lv2_2lilv_2src_2plugin_8c_1aeb7e7a856ab7a794b05b6b63ef36ea3e" prot="public" static="no">
        <name>__STDC_LIMIT_MACROS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" line="17" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lv2_2lilv_2src_2plugin_8c_1a3d8bbfa3c0bf8537d68d439b4227250d" prot="public" static="no">
        <name>NS_DOAP</name>
        <initializer>(<ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*)&quot;http://usefulinc.com/<ref refid="xmltok_8c_1ab6aec1346fb6c7b2733f0f73c9536ad2" kindref="member">ns</ref>/doap#&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" line="32" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lv2_2lilv_2src_2plugin_8c_1a7b66076ac2df641192b1c2a32c3733a3" prot="public" static="no">
        <name>NS_FOAF</name>
        <initializer>(<ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*)&quot;http://xmlns.com/foaf/0.1/&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" line="33" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lv2_2lilv_2src_2plugin_8c_1a0fa8d3bb0cc514136f489b0723cdb9d6" prot="public" static="no">
        <name>USTR</name>
        <param><defname>s</defname></param>
        <initializer>((<ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*)<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" line="993" column="9"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="lv2_2lilv_2src_2plugin_8c_1ab12c4efeb84c41f410a373e4feae2e08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lilv_8h_1a94e36303167a78a0c392f881136b461b" kindref="member">LilvPlugin</ref> *</type>
        <definition>LilvPlugin* lilv_plugin_new</definition>
        <argsstring>(LilvWorld *world, LilvNode *uri, LilvNode *bundle_uri)</argsstring>
        <name>lilv_plugin_new</name>
        <param>
          <type><ref refid="lilv_8h_1a91c1745aa6ffca2b6b87c56df6c5ab86" kindref="member">LilvWorld</ref> *</type>
          <declname>world</declname>
        </param>
        <param>
          <type><ref refid="lilv_8h_1ae183dca3dca5368d34dbd863a405437b" kindref="member">LilvNode</ref> *</type>
          <declname>uri</declname>
        </param>
        <param>
          <type><ref refid="lilv_8h_1ae183dca3dca5368d34dbd863a405437b" kindref="member">LilvNode</ref> *</type>
          <declname>bundle_uri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Ownership of <computeroutput>uri</computeroutput> is taken </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" line="37" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" bodystart="37" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="lv2_2lilv_2src_2plugin_8c_1a90973f3f72ab552162d780b455312fef" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void lilv_plugin_free_ports</definition>
        <argsstring>(LilvPlugin *p)</argsstring>
        <name>lilv_plugin_free_ports</name>
        <param>
          <type><ref refid="lilv_8h_1a94e36303167a78a0c392f881136b461b" kindref="member">LilvPlugin</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" line="59" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" bodystart="59" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="lv2_2lilv_2src_2plugin_8c_1afb03987a5e77f7b2fcd9c9feb6720d8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void lilv_plugin_free</definition>
        <argsstring>(LilvPlugin *p)</argsstring>
        <name>lilv_plugin_free</name>
        <param>
          <type><ref refid="lilv_8h_1a94e36303167a78a0c392f881136b461b" kindref="member">LilvPlugin</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" line="72" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" bodystart="72" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="lv2_2lilv_2src_2plugin_8c_1a2a479f2fed75620b996017a30ffd2056" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lilv_8h_1ae183dca3dca5368d34dbd863a405437b" kindref="member">LilvNode</ref> *</type>
        <definition>static LilvNode* lilv_plugin_get_one</definition>
        <argsstring>(const LilvPlugin *p, const SordNode *subject, const SordNode *predicate)</argsstring>
        <name>lilv_plugin_get_one</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1a94e36303167a78a0c392f881136b461b" kindref="member">LilvPlugin</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="group__sord_1ga804ac7d56d9fdea50f2d1e7278b1f82b" kindref="member">SordNode</ref> *</type>
          <declname>subject</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="group__sord_1ga804ac7d56d9fdea50f2d1e7278b1f82b" kindref="member">SordNode</ref> *</type>
          <declname>predicate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" line="107" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" bodystart="107" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="lv2_2lilv_2src_2plugin_8c_1aa4727d157ee7d9a0f4fa3323d5d6ad9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lilv_8h_1ae183dca3dca5368d34dbd863a405437b" kindref="member">LilvNode</ref> *</type>
        <definition>LilvNode* lilv_plugin_get_unique</definition>
        <argsstring>(const LilvPlugin *p, const SordNode *subject, const SordNode *predicate)</argsstring>
        <name>lilv_plugin_get_unique</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1a94e36303167a78a0c392f881136b461b" kindref="member">LilvPlugin</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="group__sord_1ga804ac7d56d9fdea50f2d1e7278b1f82b" kindref="member">SordNode</ref> *</type>
          <declname>subject</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="group__sord_1ga804ac7d56d9fdea50f2d1e7278b1f82b" kindref="member">SordNode</ref> *</type>
          <declname>predicate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" line="122" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" bodystart="122" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="lv2_2lilv_2src_2plugin_8c_1a49b2b8b1e08392e2e1db1baacbcfe4bb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void lilv_plugin_load</definition>
        <argsstring>(LilvPlugin *p)</argsstring>
        <name>lilv_plugin_load</name>
        <param>
          <type><ref refid="lilv_8h_1a94e36303167a78a0c392f881136b461b" kindref="member">LilvPlugin</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" line="136" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" bodystart="136" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="lv2_2lilv_2src_2plugin_8c_1a5948e0fc1c5ee9a8f9922e84804f49f4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>static bool is_symbol</definition>
        <argsstring>(const char *str)</argsstring>
        <name>is_symbol</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" line="208" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" bodystart="208" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="lv2_2lilv_2src_2plugin_8c_1a16cf0aaa87264b38af9e1160f15410b7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void lilv_plugin_load_ports_if_necessary</definition>
        <argsstring>(const LilvPlugin *const_p)</argsstring>
        <name>lilv_plugin_load_ports_if_necessary</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1a94e36303167a78a0c392f881136b461b" kindref="member">LilvPlugin</ref> *</type>
          <declname>const_p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" line="222" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" bodystart="222" bodyend="318"/>
      </memberdef>
      <memberdef kind="function" id="lv2_2lilv_2src_2plugin_8c_1a13b6764a993ba40c647b16bda85569f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void lilv_plugin_load_if_necessary</definition>
        <argsstring>(const LilvPlugin *p)</argsstring>
        <name>lilv_plugin_load_if_necessary</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1a94e36303167a78a0c392f881136b461b" kindref="member">LilvPlugin</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" line="321" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" bodystart="321" bodyend="325"/>
      </memberdef>
      <memberdef kind="function" id="group__lilv_1gaa462f4594d361e5a79e56f70c1f04d02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref> <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1ae183dca3dca5368d34dbd863a405437b" kindref="member">LilvNode</ref> *</type>
        <definition>LILV_API const LilvNode* lilv_plugin_get_uri</definition>
        <argsstring>(const LilvPlugin *p)</argsstring>
        <name>lilv_plugin_get_uri</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1a94e36303167a78a0c392f881136b461b" kindref="member">LilvPlugin</ref> *</type>
          <declname>plugin</declname>
          <defname>p</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the URI of <computeroutput>plugin</computeroutput>. Any serialization that refers to plugins should refer to them by this. Hosts SHOULD NOT save any filesystem paths, plugin indexes, etc. in saved files; save only the URI.</para><para>The URI is a globally unique identifier for one specific plugin. Two plugins with the same URI are compatible in port signature, and should be guaranteed to work in a compatible and consistent way. If a plugin is upgraded in an incompatible way (eg if it has different ports), it MUST have a different URI than it&apos;s predecessor.</para><para><simplesect kind="return"><para>A shared URI value which must not be modified or freed. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" line="328" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" bodystart="328" bodyend="331"/>
      </memberdef>
      <memberdef kind="function" id="group__lilv_1ga6b8302af0054d9942cc928a4229b6585" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref> <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1ae183dca3dca5368d34dbd863a405437b" kindref="member">LilvNode</ref> *</type>
        <definition>LILV_API const LilvNode* lilv_plugin_get_bundle_uri</definition>
        <argsstring>(const LilvPlugin *p)</argsstring>
        <name>lilv_plugin_get_bundle_uri</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1a94e36303167a78a0c392f881136b461b" kindref="member">LilvPlugin</ref> *</type>
          <declname>plugin</declname>
          <defname>p</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the (resolvable) URI of the plugin&apos;s &quot;main&quot; bundle. This returns the URI of the bundle where the plugin itself was found. Note that the data for a plugin may be spread over many bundles, that is, lilv_plugin_get_data_uris may return <ref refid="struct_u_r_is" kindref="compound">URIs</ref> which are not within this bundle.</para><para>Typical hosts should not need to use this function. Note this always returns a fully qualified URI. If you want a local filesystem path, use lilv_uri_to_path. <simplesect kind="return"><para>a shared string which must not be modified or freed. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" line="334" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" bodystart="334" bodyend="337"/>
      </memberdef>
      <memberdef kind="function" id="group__lilv_1gab122361bb7e48347a72adcf38c539280" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref> <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1ae183dca3dca5368d34dbd863a405437b" kindref="member">LilvNode</ref> *</type>
        <definition>LILV_API const LilvNode* lilv_plugin_get_library_uri</definition>
        <argsstring>(const LilvPlugin *const_p)</argsstring>
        <name>lilv_plugin_get_library_uri</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1a94e36303167a78a0c392f881136b461b" kindref="member">LilvPlugin</ref> *</type>
          <declname>plugin</declname>
          <defname>const_p</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the (resolvable) URI of the shared library for <computeroutput>plugin</computeroutput>. Note this always returns a fully qualified URI. If you want a local filesystem path, use lilv_uri_to_path. <simplesect kind="return"><para>a shared string which must not be modified or freed. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" line="340" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" bodystart="340" bodyend="364"/>
      </memberdef>
      <memberdef kind="function" id="group__lilv_1ga080436cfbf3b213ac7bdd4ac271abbed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref> <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1a256c2c4443307f320de24bb31198df83" kindref="member">LilvNodes</ref> *</type>
        <definition>LILV_API const LilvNodes* lilv_plugin_get_data_uris</definition>
        <argsstring>(const LilvPlugin *p)</argsstring>
        <name>lilv_plugin_get_data_uris</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1a94e36303167a78a0c392f881136b461b" kindref="member">LilvPlugin</ref> *</type>
          <declname>plugin</declname>
          <defname>p</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the (resolvable) <ref refid="struct_u_r_is" kindref="compound">URIs</ref> of the RDF data files that define a plugin. Typical hosts should not need to use this function. Note this always returns fully qualified <ref refid="struct_u_r_is" kindref="compound">URIs</ref>. If you want local filesystem paths, use lilv_uri_to_path. <simplesect kind="return"><para>a list of complete URLs eg. &quot;file:///foo/ABundle.lv2/aplug.ttl&quot;, which is shared and must not be modified or freed. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" line="367" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" bodystart="367" bodyend="370"/>
      </memberdef>
      <memberdef kind="function" id="group__lilv_1ga87106089cfc5122c4d5323cb20634ee8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref> <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1a94da06d43a4f980af280b9d8bf4ae1f0" kindref="member">LilvPluginClass</ref> *</type>
        <definition>LILV_API const LilvPluginClass* lilv_plugin_get_class</definition>
        <argsstring>(const LilvPlugin *const_p)</argsstring>
        <name>lilv_plugin_get_class</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1a94e36303167a78a0c392f881136b461b" kindref="member">LilvPlugin</ref> *</type>
          <declname>plugin</declname>
          <defname>const_p</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the class this plugin belongs to (e.g. Filters). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" line="373" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" bodystart="373" bodyend="409"/>
      </memberdef>
      <memberdef kind="function" id="lv2_2lilv_2src_2plugin_8c_1ad18430f6eab075ca8326a9246afb5f23" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lilv_8h_1a256c2c4443307f320de24bb31198df83" kindref="member">LilvNodes</ref> *</type>
        <definition>static LilvNodes* lilv_plugin_get_value_internal</definition>
        <argsstring>(const LilvPlugin *p, const SordNode *predicate)</argsstring>
        <name>lilv_plugin_get_value_internal</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1a94e36303167a78a0c392f881136b461b" kindref="member">LilvPlugin</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="group__sord_1ga804ac7d56d9fdea50f2d1e7278b1f82b" kindref="member">SordNode</ref> *</type>
          <declname>predicate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" line="412" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" bodystart="412" bodyend="418"/>
      </memberdef>
      <memberdef kind="function" id="group__lilv_1gaa05e5c23836908ffa2d9fc45c0985078" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref> <ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>LILV_API bool lilv_plugin_verify</definition>
        <argsstring>(const LilvPlugin *plugin)</argsstring>
        <name>lilv_plugin_verify</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1a94e36303167a78a0c392f881136b461b" kindref="member">LilvPlugin</ref> *</type>
          <declname>plugin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if <computeroutput>plugin</computeroutput> is valid. This is not a rigorous validator, but can be used to reject some malformed plugins that could cause bugs (e.g. plugins with missing required fields).</para><para>Note that normal hosts do NOT need to use this - lilv does not load invalid plugins into plugin lists. This is included for plugin testing utilities, etc. <simplesect kind="return"><para>true iff <computeroutput>plugin</computeroutput> is valid. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" line="421" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" bodystart="421" bodyend="447"/>
      </memberdef>
      <memberdef kind="function" id="group__lilv_1gaf0cdf34bbb28cdee19d15d689782a6e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref> <ref refid="lilv_8h_1ae183dca3dca5368d34dbd863a405437b" kindref="member">LilvNode</ref> *</type>
        <definition>LILV_API LilvNode* lilv_plugin_get_name</definition>
        <argsstring>(const LilvPlugin *plugin)</argsstring>
        <name>lilv_plugin_get_name</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1a94e36303167a78a0c392f881136b461b" kindref="member">LilvPlugin</ref> *</type>
          <declname>plugin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the name of <computeroutput>plugin</computeroutput>. This returns the name (doap:name) of the plugin. The name may be translated according to the current locale, this value MUST NOT be used as a plugin identifier (use the URI for that). Returned value must be freed by the caller. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" line="450" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" bodystart="450" bodyend="468"/>
      </memberdef>
      <memberdef kind="function" id="group__lilv_1gab88f74ed5c9ab2a7a7d72e2546362f72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref> <ref refid="lilv_8h_1a256c2c4443307f320de24bb31198df83" kindref="member">LilvNodes</ref> *</type>
        <definition>LILV_API LilvNodes* lilv_plugin_get_value</definition>
        <argsstring>(const LilvPlugin *p, const LilvNode *predicate)</argsstring>
        <name>lilv_plugin_get_value</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1a94e36303167a78a0c392f881136b461b" kindref="member">LilvPlugin</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1ae183dca3dca5368d34dbd863a405437b" kindref="member">LilvNode</ref> *</type>
          <declname>predicate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a value associated with the plugin in a plugin&apos;s data files. <computeroutput>predicate</computeroutput> must be either a URI or a QName.</para><para>Returns the ?object of all triples found of the form:</para><para><computeroutput>&lt;plugin-uri&gt; predicate ?object</computeroutput></para><para>May return NULL if the property was not found, or if object(s) is not sensibly represented as a LilvNodes (e.g. blank nodes). Return value must be freed by caller with <ref refid="group__lilv_1gac355adeca3dc54366899b6f1ef3b0fc3" kindref="member">lilv_nodes_free()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" line="471" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" bodystart="471" bodyend="476"/>
      </memberdef>
      <memberdef kind="function" id="group__lilv_1gafcd5012a82daecb65b476d9b3152de96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref></type>
        <definition>LILV_API uint32_t lilv_plugin_get_num_ports</definition>
        <argsstring>(const LilvPlugin *p)</argsstring>
        <name>lilv_plugin_get_num_ports</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1a94e36303167a78a0c392f881136b461b" kindref="member">LilvPlugin</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the number of ports on this plugin. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" line="479" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" bodystart="479" bodyend="483"/>
      </memberdef>
      <memberdef kind="function" id="group__lilv_1gadd6aa2c341f27f2774da6606492400ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>LILV_API void lilv_plugin_get_port_ranges_float</definition>
        <argsstring>(const LilvPlugin *p, float *min_values, float *max_values, float *def_values)</argsstring>
        <name>lilv_plugin_get_port_ranges_float</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1a94e36303167a78a0c392f881136b461b" kindref="member">LilvPlugin</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>min_values</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>max_values</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>def_values</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the port ranges (minimum, maximum and default values) for all ports. <computeroutput>min_values</computeroutput>, <computeroutput>max_values</computeroutput> and <computeroutput>def_values</computeroutput> must either point to an array of N floats, where N is the value returned by <ref refid="group__lilv_1gafcd5012a82daecb65b476d9b3152de96" kindref="member">lilv_plugin_get_num_ports()</ref> for this plugin, or NULL. The elements of the array will be set to the the minimum, maximum and default values of the ports on this plugin, with array index corresponding to port index. If a port doesn&apos;t have a minimum, maximum or default value, or the port&apos;s type is not float, the corresponding array element will be set to NAN.</para><para>This is a convenience method for the common case of getting the range of all float ports on a plugin, and may be significantly faster than repeated calls to lilv_port_get_range. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" line="486" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" bodystart="486" bodyend="530"/>
      </memberdef>
      <memberdef kind="function" id="group__lilv_1gae8594e96160882afb331b833e0c2f1e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref></type>
        <definition>LILV_API uint32_t lilv_plugin_get_num_ports_of_class_va</definition>
        <argsstring>(const LilvPlugin *p, const LilvNode *class_1, va_list args)</argsstring>
        <name>lilv_plugin_get_num_ports_of_class_va</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1a94e36303167a78a0c392f881136b461b" kindref="member">LilvPlugin</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1ae183dca3dca5368d34dbd863a405437b" kindref="member">LilvNode</ref> *</type>
          <declname>class_1</declname>
        </param>
        <param>
          <type>va_list</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Variant of <ref refid="group__lilv_1ga3b8af621a8ac146dc83631ca0602cfa6" kindref="member">lilv_plugin_get_num_ports_of_class()</ref> that takes a va_list.</para><para>This function calls va_arg() on <computeroutput>args</computeroutput> but does not call va_end(). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" line="533" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" bodystart="533" bodyend="570"/>
      </memberdef>
      <memberdef kind="function" id="group__lilv_1ga3b8af621a8ac146dc83631ca0602cfa6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref></type>
        <definition>LILV_API uint32_t lilv_plugin_get_num_ports_of_class</definition>
        <argsstring>(const LilvPlugin *p, const LilvNode *class_1,...)</argsstring>
        <name>lilv_plugin_get_num_ports_of_class</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1a94e36303167a78a0c392f881136b461b" kindref="member">LilvPlugin</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1ae183dca3dca5368d34dbd863a405437b" kindref="member">LilvNode</ref> *</type>
          <declname>class_1</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the number of ports on this plugin that are members of some class(es). Note that this is a varargs function so ports fitting any type &apos;profile&apos; desired can be found quickly. REMEMBER TO TERMINATE THE PARAMETER LIST OF THIS FUNCTION WITH NULL OR VERY NASTY THINGS WILL HAPPEN. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" line="573" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" bodystart="573" bodyend="583"/>
      </memberdef>
      <memberdef kind="function" id="group__lilv_1ga19c0b4fb6120f413074b7062842736a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref> <ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>LILV_API bool lilv_plugin_has_latency</definition>
        <argsstring>(const LilvPlugin *p)</argsstring>
        <name>lilv_plugin_has_latency</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1a94e36303167a78a0c392f881136b461b" kindref="member">LilvPlugin</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return whether or not the plugin introduces (and reports) latency. The index of the latency port can be found with lilv_plugin_get_latency_port() ONLY if this function returns true. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" line="586" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" bodystart="586" bodyend="619"/>
      </memberdef>
      <memberdef kind="function" id="lv2_2lilv_2src_2plugin_8c_1a0b20344d3ad6b3adb17e24c73205026d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1a772dad64b72690372c1f78314012bda5" kindref="member">LilvPort</ref> *</type>
        <definition>static const LilvPort* lilv_plugin_get_port_by_property</definition>
        <argsstring>(const LilvPlugin *plugin, const SordNode *port_property)</argsstring>
        <name>lilv_plugin_get_port_by_property</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1a94e36303167a78a0c392f881136b461b" kindref="member">LilvPlugin</ref> *</type>
          <declname>plugin</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="group__sord_1ga804ac7d56d9fdea50f2d1e7278b1f82b" kindref="member">SordNode</ref> *</type>
          <declname>port_property</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" line="622" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" bodystart="622" bodyend="643"/>
      </memberdef>
      <memberdef kind="function" id="group__lilv_1ga66f7b3acd4721a91084abaa489cc8f12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref> <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1a772dad64b72690372c1f78314012bda5" kindref="member">LilvPort</ref> *</type>
        <definition>LILV_API const LilvPort* lilv_plugin_get_port_by_designation</definition>
        <argsstring>(const LilvPlugin *plugin, const LilvNode *port_class, const LilvNode *designation)</argsstring>
        <name>lilv_plugin_get_port_by_designation</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1a94e36303167a78a0c392f881136b461b" kindref="member">LilvPlugin</ref> *</type>
          <declname>plugin</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1ae183dca3dca5368d34dbd863a405437b" kindref="member">LilvNode</ref> *</type>
          <declname>port_class</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1ae183dca3dca5368d34dbd863a405437b" kindref="member">LilvNode</ref> *</type>
          <declname>designation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a port on <computeroutput>plugin</computeroutput> by its lv2:designation.</para><para>The designation of a port describes the meaning, assignment, allocation or role of the port, e.g. &quot;left channel&quot; or &quot;gain&quot;. If found, the port with matching <computeroutput>port_class</computeroutput> and <computeroutput>designation</computeroutput> is be returned, otherwise NULL is returned. The <computeroutput>port_class</computeroutput> can be used to distinguish the input and output ports for a particular designation. If <computeroutput>port_class</computeroutput> is NULL, any port with the given designation will be returned. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" line="646" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" bodystart="646" bodyend="670"/>
      </memberdef>
      <memberdef kind="function" id="group__lilv_1ga434a3733a0818c9c7211870c75ba0cff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref></type>
        <definition>LILV_API uint32_t lilv_plugin_get_latency_port_index</definition>
        <argsstring>(const LilvPlugin *p)</argsstring>
        <name>lilv_plugin_get_latency_port_index</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1a94e36303167a78a0c392f881136b461b" kindref="member">LilvPlugin</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the index of the plugin&apos;s latency port. It is a fatal error to call this on a plugin without checking if the port exists by first calling lilv_plugin_has_latency.</para><para>Any plugin that introduces unwanted latency that should be compensated for (by hosts with the ability/need) MUST provide this port, which is a control rate output port that reports the latency for each cycle in frames. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" line="673" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" bodystart="673" bodyend="686"/>
      </memberdef>
      <memberdef kind="function" id="group__lilv_1ga573736542caf84ee945bf74b4aade20c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref> <ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>LILV_API bool lilv_plugin_has_feature</definition>
        <argsstring>(const LilvPlugin *p, const LilvNode *feature)</argsstring>
        <name>lilv_plugin_has_feature</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1a94e36303167a78a0c392f881136b461b" kindref="member">LilvPlugin</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1ae183dca3dca5368d34dbd863a405437b" kindref="member">LilvNode</ref> *</type>
          <declname>feature_uri</declname>
          <defname>feature</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return whether a feature is supported by a plugin. This will return true if the feature is an optional or required feature of the plugin. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" line="689" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" bodystart="689" bodyend="704"/>
      </memberdef>
      <memberdef kind="function" id="group__lilv_1ga11955be6f9ed180466f37034aad6c747" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref> <ref refid="lilv_8h_1a256c2c4443307f320de24bb31198df83" kindref="member">LilvNodes</ref> *</type>
        <definition>LILV_API LilvNodes* lilv_plugin_get_supported_features</definition>
        <argsstring>(const LilvPlugin *p)</argsstring>
        <name>lilv_plugin_get_supported_features</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1a94e36303167a78a0c392f881136b461b" kindref="member">LilvPlugin</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the LV2 Features supported (required or optionally) by a plugin. A feature is &quot;supported&quot; by a plugin if it is required OR optional.</para><para>Since required features have special rules the host must obey, this function probably shouldn&apos;t be used by normal hosts. Using lilv_plugin_get_optional_features and lilv_plugin_get_required_features separately is best in most cases.</para><para>Returned value must be freed by caller with <ref refid="group__lilv_1gac355adeca3dc54366899b6f1ef3b0fc3" kindref="member">lilv_nodes_free()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" line="707" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" bodystart="707" bodyend="715"/>
      </memberdef>
      <memberdef kind="function" id="group__lilv_1ga611acd071c9d8980fa9b4e74449f534d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref> <ref refid="lilv_8h_1a256c2c4443307f320de24bb31198df83" kindref="member">LilvNodes</ref> *</type>
        <definition>LILV_API LilvNodes* lilv_plugin_get_optional_features</definition>
        <argsstring>(const LilvPlugin *p)</argsstring>
        <name>lilv_plugin_get_optional_features</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1a94e36303167a78a0c392f881136b461b" kindref="member">LilvPlugin</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the LV2 Features optionally supported by a plugin. Hosts MAY ignore optional plugin features for whatever reasons. Plugins MUST operate (at least somewhat) if they are instantiated without being passed optional features.</para><para>Return value must be freed by caller with <ref refid="group__lilv_1gac355adeca3dc54366899b6f1ef3b0fc3" kindref="member">lilv_nodes_free()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" line="718" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" bodystart="718" bodyend="725"/>
      </memberdef>
      <memberdef kind="function" id="group__lilv_1ga731529456ac40ec2b673e8fe139a26e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref> <ref refid="lilv_8h_1a256c2c4443307f320de24bb31198df83" kindref="member">LilvNodes</ref> *</type>
        <definition>LILV_API LilvNodes* lilv_plugin_get_required_features</definition>
        <argsstring>(const LilvPlugin *p)</argsstring>
        <name>lilv_plugin_get_required_features</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1a94e36303167a78a0c392f881136b461b" kindref="member">LilvPlugin</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the LV2 Features required by a plugin. If a feature is required by a plugin, hosts MUST NOT use the plugin if they do not understand (or are unable to support) that feature.</para><para>All values returned here MUST be passed to the plugin&apos;s instantiate method (along with data, if necessary, as defined by the feature specification) or plugin instantiation will fail.</para><para>Return value must be freed by caller with <ref refid="group__lilv_1gac355adeca3dc54366899b6f1ef3b0fc3" kindref="member">lilv_nodes_free()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" line="728" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" bodystart="728" bodyend="735"/>
      </memberdef>
      <memberdef kind="function" id="group__lilv_1ga45572544f69e24cb76eb6245374f40fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref> <ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>LILV_API bool lilv_plugin_has_extension_data</definition>
        <argsstring>(const LilvPlugin *p, const LilvNode *uri)</argsstring>
        <name>lilv_plugin_has_extension_data</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1a94e36303167a78a0c392f881136b461b" kindref="member">LilvPlugin</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1ae183dca3dca5368d34dbd863a405437b" kindref="member">LilvNode</ref> *</type>
          <declname>uri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return whether or not a plugin provides a specific extension data. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" line="738" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" bodystart="738" bodyend="753"/>
      </memberdef>
      <memberdef kind="function" id="group__lilv_1gab440c12bac6611b38fc1b8cd4fefeb54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref> <ref refid="lilv_8h_1a256c2c4443307f320de24bb31198df83" kindref="member">LilvNodes</ref> *</type>
        <definition>LILV_API LilvNodes* lilv_plugin_get_extension_data</definition>
        <argsstring>(const LilvPlugin *p)</argsstring>
        <name>lilv_plugin_get_extension_data</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1a94e36303167a78a0c392f881136b461b" kindref="member">LilvPlugin</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a sequence of all extension data provided by a plugin. This can be used to find which <ref refid="struct_u_r_is" kindref="compound">URIs</ref> lilv_instance_get_extension_data() will return a value for without instantiating the plugin. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" line="756" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" bodystart="756" bodyend="759"/>
      </memberdef>
      <memberdef kind="function" id="group__lilv_1ga445ad016b3e71765a12aab39f9f9a6ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref> <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1a772dad64b72690372c1f78314012bda5" kindref="member">LilvPort</ref> *</type>
        <definition>LILV_API const LilvPort* lilv_plugin_get_port_by_index</definition>
        <argsstring>(const LilvPlugin *p, uint32_t index)</argsstring>
        <name>lilv_plugin_get_port_by_index</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1a94e36303167a78a0c392f881136b461b" kindref="member">LilvPlugin</ref> *</type>
          <declname>plugin</declname>
          <defname>p</defname>
        </param>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a port on <computeroutput>plugin</computeroutput> by <computeroutput>index</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" line="762" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" bodystart="762" bodyend="770"/>
      </memberdef>
      <memberdef kind="function" id="group__lilv_1ga53d4023368ee05ef2f8ddcc2a49082d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref> <ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1a772dad64b72690372c1f78314012bda5" kindref="member">LilvPort</ref> *</type>
        <definition>LILV_API const LilvPort* lilv_plugin_get_port_by_symbol</definition>
        <argsstring>(const LilvPlugin *p, const LilvNode *symbol)</argsstring>
        <name>lilv_plugin_get_port_by_symbol</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1a94e36303167a78a0c392f881136b461b" kindref="member">LilvPlugin</ref> *</type>
          <declname>plugin</declname>
          <defname>p</defname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1ae183dca3dca5368d34dbd863a405437b" kindref="member">LilvNode</ref> *</type>
          <declname>symbol</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get a port on <computeroutput>plugin</computeroutput> by <computeroutput>symbol</computeroutput>. Note this function is slower than lilv_plugin_get_port_by_index, especially on plugins with a very large number of ports. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" line="773" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" bodystart="773" bodyend="784"/>
      </memberdef>
      <memberdef kind="function" id="group__lilv_1ga72e18ca0c04b2f6b73910309d4ed7527" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref> <ref refid="lilv_8h_1ae183dca3dca5368d34dbd863a405437b" kindref="member">LilvNode</ref> *</type>
        <definition>LILV_API LilvNode* lilv_plugin_get_project</definition>
        <argsstring>(const LilvPlugin *p)</argsstring>
        <name>lilv_plugin_get_project</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1a94e36303167a78a0c392f881136b461b" kindref="member">LilvPlugin</ref> *</type>
          <declname>plugin</declname>
          <defname>p</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the project the plugin is a part of.</para><para>More information about the project can be read via <ref refid="group__lilv_1ga1545945352d9baf925fe9f19d1881244" kindref="member">lilv_world_find_nodes()</ref>, typically using properties from DOAP (e.g. doap:name). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" line="787" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" bodystart="787" bodyend="810"/>
      </memberdef>
      <memberdef kind="function" id="lv2_2lilv_2src_2plugin_8c_1a9aa974daf8809ba9607cde43c63ecea0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="group__sord_1ga804ac7d56d9fdea50f2d1e7278b1f82b" kindref="member">SordNode</ref> *</type>
        <definition>static const SordNode* lilv_plugin_get_author</definition>
        <argsstring>(const LilvPlugin *p)</argsstring>
        <name>lilv_plugin_get_author</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1a94e36303167a78a0c392f881136b461b" kindref="member">LilvPlugin</ref> *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" line="813" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" bodystart="813" bodyend="855"/>
      </memberdef>
      <memberdef kind="function" id="group__lilv_1ga48685f055adfb693ac7a46a7ea380567" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref> <ref refid="lilv_8h_1ae183dca3dca5368d34dbd863a405437b" kindref="member">LilvNode</ref> *</type>
        <definition>LILV_API LilvNode* lilv_plugin_get_author_name</definition>
        <argsstring>(const LilvPlugin *plugin)</argsstring>
        <name>lilv_plugin_get_author_name</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1a94e36303167a78a0c392f881136b461b" kindref="member">LilvPlugin</ref> *</type>
          <declname>plugin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the full name of the plugin&apos;s author. Returns NULL if author name is not present. Returned value must be freed by caller. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" line="858" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" bodystart="858" bodyend="869"/>
      </memberdef>
      <memberdef kind="function" id="group__lilv_1ga284e297b4b0701f09b595e90d4c2b901" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref> <ref refid="lilv_8h_1ae183dca3dca5368d34dbd863a405437b" kindref="member">LilvNode</ref> *</type>
        <definition>LILV_API LilvNode* lilv_plugin_get_author_email</definition>
        <argsstring>(const LilvPlugin *plugin)</argsstring>
        <name>lilv_plugin_get_author_email</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1a94e36303167a78a0c392f881136b461b" kindref="member">LilvPlugin</ref> *</type>
          <declname>plugin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the email address of the plugin&apos;s author. Returns NULL if author email address is not present. Returned value must be freed by caller. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" line="872" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" bodystart="872" bodyend="883"/>
      </memberdef>
      <memberdef kind="function" id="group__lilv_1ga0786d4642a8e15c74019f05a71381524" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref> <ref refid="lilv_8h_1ae183dca3dca5368d34dbd863a405437b" kindref="member">LilvNode</ref> *</type>
        <definition>LILV_API LilvNode* lilv_plugin_get_author_homepage</definition>
        <argsstring>(const LilvPlugin *plugin)</argsstring>
        <name>lilv_plugin_get_author_homepage</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1a94e36303167a78a0c392f881136b461b" kindref="member">LilvPlugin</ref> *</type>
          <declname>plugin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the address of the plugin author&apos;s home page. Returns NULL if author homepage is not present. Returned value must be freed by caller. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" line="886" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" bodystart="886" bodyend="897"/>
      </memberdef>
      <memberdef kind="function" id="group__lilv_1gad4bff1e2e6b3db77cc2a5c43704d6cf3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref> <ref refid="mac_2config_2i386_2lib-src_2libsoxr_2soxr-config_8h_1abb452686968e48b67397da5f97445f5b" kindref="member">bool</ref></type>
        <definition>LILV_API bool lilv_plugin_is_replaced</definition>
        <argsstring>(const LilvPlugin *plugin)</argsstring>
        <name>lilv_plugin_is_replaced</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1a94e36303167a78a0c392f881136b461b" kindref="member">LilvPlugin</ref> *</type>
          <declname>plugin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return true iff <computeroutput>plugin</computeroutput> has been replaced by another plugin.</para><para>The plugin will still be usable, but hosts should hide them from their user interfaces to prevent users from using deprecated plugins. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" line="900" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" bodystart="900" bodyend="903"/>
      </memberdef>
      <memberdef kind="function" id="group__lilv_1ga420636169dd115cf90b2e136309bbca0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref> <ref refid="lilv_8h_1af0d073c97d807e531f174ce2ee1b5492" kindref="member">LilvUIs</ref> *</type>
        <definition>LILV_API LilvUIs* lilv_plugin_get_uis</definition>
        <argsstring>(const LilvPlugin *p)</argsstring>
        <name>lilv_plugin_get_uis</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1a94e36303167a78a0c392f881136b461b" kindref="member">LilvPlugin</ref> *</type>
          <declname>plugin</declname>
          <defname>p</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get all UIs for <computeroutput>plugin</computeroutput>. Returned value must be freed by caller using <ref refid="group__lilv_1ga938f9a32ad1d4c9f8e83d21802764ba2" kindref="member">lilv_uis_free()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" line="906" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" bodystart="906" bodyend="955"/>
      </memberdef>
      <memberdef kind="function" id="group__lilv_1ga6070a384fbd949ec78ae7a8e323139f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref> <ref refid="lilv_8h_1a256c2c4443307f320de24bb31198df83" kindref="member">LilvNodes</ref> *</type>
        <definition>LILV_API LilvNodes* lilv_plugin_get_related</definition>
        <argsstring>(const LilvPlugin *plugin, const LilvNode *type)</argsstring>
        <name>lilv_plugin_get_related</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1a94e36303167a78a0c392f881136b461b" kindref="member">LilvPlugin</ref> *</type>
          <declname>plugin</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1ae183dca3dca5368d34dbd863a405437b" kindref="member">LilvNode</ref> *</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the resources related to <computeroutput>plugin</computeroutput> with lv2:appliesTo.</para><para>Some plugin-related resources are not linked directly to the plugin with rdfs:seeAlso and thus will not be automatically loaded along with the plugin data (usually for performance reasons). All such resources of the given <computeroutput>type</computeroutput> related to <computeroutput>plugin</computeroutput> can be accessed with this function.</para><para>If <computeroutput>type</computeroutput> is NULL, all such resources will be returned, regardless of type.</para><para>To actually load the data for each returned resource, use lilv_world_load_resource. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" line="958" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" bodystart="958" bodyend="986"/>
      </memberdef>
      <memberdef kind="function" id="lv2_2lilv_2src_2plugin_8c_1a3fe31eb5e2beecd0e339ba2d85735dc4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__serd_1gaea4226dd80abea7afa05986f195d4755" kindref="member">SerdEnv</ref> *</type>
        <definition>static SerdEnv* new_lv2_env</definition>
        <argsstring>(const SerdNode *base)</argsstring>
        <name>new_lv2_env</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_serd_node" kindref="compound">SerdNode</ref> *</type>
          <declname>base</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" line="989" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" bodystart="989" bodyend="1003"/>
      </memberdef>
      <memberdef kind="function" id="lv2_2lilv_2src_2plugin_8c_1a920be09c94e73e927ec07d7884c4d4aa" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void maybe_write_prefixes</definition>
        <argsstring>(SerdWriter *writer, SerdEnv *env, FILE *file)</argsstring>
        <name>maybe_write_prefixes</name>
        <param>
          <type><ref refid="group__serd_1gaaaa09490e19dff0180251f1e2524e6f0" kindref="member">SerdWriter</ref> *</type>
          <declname>writer</declname>
        </param>
        <param>
          <type><ref refid="group__serd_1gaea4226dd80abea7afa05986f195d4755" kindref="member">SerdEnv</ref> *</type>
          <declname>env</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" line="1006" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" bodystart="1006" bodyend="1015"/>
      </memberdef>
      <memberdef kind="function" id="group__lilv_1gab1c58f561dd59b2688a3d50fb7c51d55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>LILV_API void lilv_plugin_write_description</definition>
        <argsstring>(LilvWorld *world, const LilvPlugin *plugin, const LilvNode *base_uri, FILE *plugin_file)</argsstring>
        <name>lilv_plugin_write_description</name>
        <param>
          <type><ref refid="lilv_8h_1a91c1745aa6ffca2b6b87c56df6c5ab86" kindref="member">LilvWorld</ref> *</type>
          <declname>world</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1a94e36303167a78a0c392f881136b461b" kindref="member">LilvPlugin</ref> *</type>
          <declname>plugin</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1ae183dca3dca5368d34dbd863a405437b" kindref="member">LilvNode</ref> *</type>
          <declname>base_uri</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>plugin_file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write the Turtle description of <computeroutput>plugin</computeroutput> to <computeroutput>plugin_file</computeroutput>.</para><para>This function is particularly useful for porting plugins in conjunction with an LV2 bridge such as NASPRO. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" line="1018" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" bodystart="1018" bodyend="1054"/>
      </memberdef>
      <memberdef kind="function" id="group__lilv_1ga240e433315f29cf81de98904910d501d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>LILV_API void lilv_plugin_write_manifest_entry</definition>
        <argsstring>(LilvWorld *world, const LilvPlugin *plugin, const LilvNode *base_uri, FILE *manifest_file, const char *plugin_file_path)</argsstring>
        <name>lilv_plugin_write_manifest_entry</name>
        <param>
          <type><ref refid="lilv_8h_1a91c1745aa6ffca2b6b87c56df6c5ab86" kindref="member">LilvWorld</ref> *</type>
          <declname>world</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1a94e36303167a78a0c392f881136b461b" kindref="member">LilvPlugin</ref> *</type>
          <declname>plugin</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1ae183dca3dca5368d34dbd863a405437b" kindref="member">LilvNode</ref> *</type>
          <declname>base_uri</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>manifest_file</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
          <declname>plugin_file_path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write a manifest entry for <computeroutput>plugin</computeroutput> to <computeroutput>manifest_file</computeroutput>.</para><para>This function is intended for use with <ref refid="group__lilv_1gab1c58f561dd59b2688a3d50fb7c51d55" kindref="member">lilv_plugin_write_description()</ref> to write a complete description of a plugin to a bundle. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" line="1057" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c" bodystart="1057" bodyend="1095"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/>Copyright<sp/>2007-2014<sp/>David<sp/>Robillard<sp/>&lt;http://drobilla.net&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/>Permission<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>and/or<sp/>distribute<sp/>this<sp/>software<sp/>for<sp/>any</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>purpose<sp/>with<sp/>or<sp/>without<sp/>fee<sp/>is<sp/>hereby<sp/>granted,<sp/>provided<sp/>that<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>appear<sp/>in<sp/>all<sp/>copies.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"></highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>THE<sp/>AUTHOR<sp/>DISCLAIMS<sp/>ALL<sp/>WARRANTIES</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/>WITH<sp/>REGARD<sp/>TO<sp/>THIS<sp/>SOFTWARE<sp/>INCLUDING<sp/>ALL<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/>ANY<sp/>SPECIAL,<sp/>DIRECT,<sp/>INDIRECT,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>OR<sp/>ANY<sp/>DAMAGES</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/>WHATSOEVER<sp/>RESULTING<sp/>FROM<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA<sp/>OR<sp/>PROFITS,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>NEGLIGENCE<sp/>OR<sp/>OTHER<sp/>TORTIOUS<sp/>ACTION,<sp/>ARISING<sp/>OUT<sp/>OF</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>USE<sp/>OR<sp/>PERFORMANCE<sp/>OF<sp/>THIS<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="15"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="lv2_2lilv_2src_2plugin_8c_1aeb7e7a856ab7a794b05b6b63ef36ea3e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__STDC_LIMIT_MACROS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="assert_8h" kindref="compound">assert.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdarg.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;lilv_config.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lilv__internal_8h" kindref="compound">lilv_internal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="ui_8h" kindref="compound">lv2/lv2plug.in/ns/extensions/ui/ui.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="lv2_2lilv_2src_2plugin_8c_1a3d8bbfa3c0bf8537d68d439b4227250d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NS_DOAP<sp/>(const<sp/>uint8_t*)&quot;http://usefulinc.com/ns/doap#&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="lv2_2lilv_2src_2plugin_8c_1a7b66076ac2df641192b1c2a32c3733a3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NS_FOAF<sp/>(const<sp/>uint8_t*)&quot;http://xmlns.com/foaf/0.1/&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><ref refid="struct_lilv_plugin_impl" kindref="compound">LilvPlugin</ref>*</highlight></codeline>
<codeline lineno="37" refid="lv2_2lilv_2src_2plugin_8c_1ab12c4efeb84c41f410a373e4feae2e08" refkind="member"><highlight class="normal"><ref refid="lv2_2lilv_2src_2plugin_8c_1ab12c4efeb84c41f410a373e4feae2e08" kindref="member">lilv_plugin_new</ref>(<ref refid="struct_lilv_world_impl" kindref="compound">LilvWorld</ref>*<sp/><ref refid="namespacelv2__list_1a39bc711f56fd3393bf9013f08a1e5719" kindref="member">world</ref>,<sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*<sp/><ref refid="lib_2expat_8h_1a5a9fdd6c2606370ad12f24c078ac6585" kindref="member">uri</ref>,<sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*<sp/>bundle_uri)</highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="libid3tag_2global_8h_1af576bf8ffa22a44e53018c67095ffbf0" kindref="member">assert</ref>(bundle_uri);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lilv_plugin_impl" kindref="compound">LilvPlugin</ref>*<sp/><ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref><sp/>=<sp/>(<ref refid="struct_lilv_plugin_impl" kindref="compound">LilvPlugin</ref>*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_lilv_plugin_impl" kindref="compound">LilvPlugin</ref>));</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>plugin-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="namespacelv2__list_1a39bc711f56fd3393bf9013f08a1e5719" kindref="member">world</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>plugin-&gt;<ref refid="struct_lilv_plugin_impl_1ab292523dd2e272ac3bedee38d750c955" kindref="member">plugin_uri</ref><sp/><sp/><sp/>=<sp/><ref refid="lib_2expat_8h_1a5a9fdd6c2606370ad12f24c078ac6585" kindref="member">uri</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>plugin-&gt;<ref refid="struct_lilv_plugin_impl_1af4f6c03ce7414bd8697e4f2291f15c37" kindref="member">bundle_uri</ref><sp/><sp/><sp/>=<sp/>bundle_uri;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>plugin-&gt;<ref refid="struct_lilv_plugin_impl_1a0fb4f626dd8a102784b312cf5f5acbb4" kindref="member">binary_uri</ref><sp/><sp/><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>LILV_DYN_MANIFEST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>plugin-&gt;dynmanifest<sp/><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>plugin-&gt;<ref refid="struct_lilv_plugin_impl_1a5bbafc02157de0f52dcd7bb92a23a547" kindref="member">plugin_class</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>plugin-&gt;<ref refid="struct_lilv_plugin_impl_1aa551d1d561ff02752bcc09f8b788a8d4" kindref="member">data_uris</ref><sp/><sp/><sp/><sp/>=<sp/><ref refid="collections_8c_1ad85dc561f7c943b545dafd49755a8a5c" kindref="member">lilv_nodes_new</ref>();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>plugin-&gt;<ref refid="struct_lilv_plugin_impl_1ab047415ad765783ae57fbe31cdf9249e" kindref="member">ports</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>plugin-&gt;<ref refid="struct_lilv_plugin_impl_1ac0b1c43adf9e1d65c27a9a603d62615e" kindref="member">num_ports</ref><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>plugin-&gt;<ref refid="struct_lilv_plugin_impl_1a690daad491d8dc3d446fd4d796ef807e" kindref="member">loaded</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>plugin-&gt;<ref refid="struct_lilv_plugin_impl_1aa1c8afaa2542c54f9dfd821d118fe7d4" kindref="member">replaced</ref><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal">lilv_plugin_free_ports(<ref refid="struct_lilv_plugin_impl" kindref="compound">LilvPlugin</ref>*<sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>)</highlight></codeline>
<codeline lineno="60"><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;<ref refid="struct_lilv_plugin_impl_1ab047415ad765783ae57fbe31cdf9249e" kindref="member">ports</ref>)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ac0b1c43adf9e1d65c27a9a603d62615e" kindref="member">num_ports</ref>;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lilv__internal_8h_1ad00d48d36999bf792611b589c1f938bc" kindref="member">lilv_port_free</ref>(p,<sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ab047415ad765783ae57fbe31cdf9249e" kindref="member">ports</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(p-&gt;<ref refid="struct_lilv_plugin_impl_1ab047415ad765783ae57fbe31cdf9249e" kindref="member">ports</ref>);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ac0b1c43adf9e1d65c27a9a603d62615e" kindref="member">num_ports</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ab047415ad765783ae57fbe31cdf9249e" kindref="member">ports</ref><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="lv2_2lilv_2src_2plugin_8c_1afb03987a5e77f7b2fcd9c9feb6720d8e" refkind="member"><highlight class="normal"><ref refid="lv2_2lilv_2src_2plugin_8c_1afb03987a5e77f7b2fcd9c9feb6720d8e" kindref="member">lilv_plugin_free</ref>(<ref refid="struct_lilv_plugin_impl" kindref="compound">LilvPlugin</ref>*<sp/>p)</highlight></codeline>
<codeline lineno="73"><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>LILV_DYN_MANIFEST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;dynmanifest<sp/>&amp;&amp;<sp/>--p-&gt;dynmanifest-&gt;refs<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref><sp/>(*CloseFunc)(<ref refid="dynmanifest_8h_1a4365dba8ea5db98d88316c6e2a0ceccb" kindref="member">LV2_Dyn_Manifest_Handle</ref>);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CloseFunc<sp/>close_func<sp/>=<sp/>(CloseFunc)lilv_dlfunc(p-&gt;dynmanifest-&gt;lib,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;lv2_dyn_manifest_close&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(close_func)<sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close_func(p-&gt;dynmanifest-&gt;handle);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dlclose(p-&gt;dynmanifest-&gt;lib);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lilv_1gaf4677b15cf1df3ef833f7ef4b6a7511e" kindref="member">lilv_node_free</ref>(p-&gt;dynmanifest-&gt;bundle);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(p-&gt;dynmanifest);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__lilv_1gaf4677b15cf1df3ef833f7ef4b6a7511e" kindref="member">lilv_node_free</ref>(p-&gt;<ref refid="struct_lilv_plugin_impl_1ab292523dd2e272ac3bedee38d750c955" kindref="member">plugin_uri</ref>);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ab292523dd2e272ac3bedee38d750c955" kindref="member">plugin_uri</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__lilv_1gaf4677b15cf1df3ef833f7ef4b6a7511e" kindref="member">lilv_node_free</ref>(p-&gt;<ref refid="struct_lilv_plugin_impl_1af4f6c03ce7414bd8697e4f2291f15c37" kindref="member">bundle_uri</ref>);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1af4f6c03ce7414bd8697e4f2291f15c37" kindref="member">bundle_uri</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__lilv_1gaf4677b15cf1df3ef833f7ef4b6a7511e" kindref="member">lilv_node_free</ref>(p-&gt;<ref refid="struct_lilv_plugin_impl_1a0fb4f626dd8a102784b312cf5f5acbb4" kindref="member">binary_uri</ref>);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1a0fb4f626dd8a102784b312cf5f5acbb4" kindref="member">binary_uri</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>lilv_plugin_free_ports(p);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__lilv_1gac355adeca3dc54366899b6f1ef3b0fc3" kindref="member">lilv_nodes_free</ref>(p-&gt;<ref refid="struct_lilv_plugin_impl_1aa551d1d561ff02752bcc09f8b788a8d4" kindref="member">data_uris</ref>);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1aa551d1d561ff02752bcc09f8b788a8d4" kindref="member">data_uris</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>free(p);</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*</highlight></codeline>
<codeline lineno="107"><highlight class="normal">lilv_plugin_get_one(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_plugin_impl" kindref="compound">LilvPlugin</ref>*<sp/>p,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/><sp/><sp/>subject,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/><sp/><sp/><ref refid="xlmath_8c_1a767c5fa064d0a1e1f8b447769f1a890b" kindref="member">predicate</ref>)</highlight></codeline>
<codeline lineno="110"><highlight class="normal">{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*<sp/>ret<sp/><sp/><sp/><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_sord_iter_impl" kindref="compound">SordIter</ref>*<sp/>stream<sp/>=<sp/><ref refid="lilv__internal_8h_1a1c426e96d5bb76a0fdda6a7afe19a49a" kindref="member">lilv_world_query_internal</ref>(</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>,<sp/>subject,<sp/>predicate,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__sord_1ga287f3764973d96c2f1df566abf569f5e" kindref="member">sord_iter_end</ref>(stream))<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="lilv__internal_8h_1ab85cc3ce5e142d7141219b15353ee671" kindref="member">lilv_node_new_from_node</ref>(p-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>,<sp/><ref refid="group__sord_1ga34db8db692181aca9ffc5506861f95cd" kindref="member">sord_iter_get_node</ref>(stream,<sp/><ref refid="group__sord_1ggad8ed181fe76f9085ba4188988527c633a42de0f7687921dc2cd840a122636ff13" kindref="member">SORD_OBJECT</ref>));</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sord_1ga6450c3214e90ffffc47f756e66d66037" kindref="member">sord_iter_free</ref>(stream);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*</highlight></codeline>
<codeline lineno="122" refid="lv2_2lilv_2src_2plugin_8c_1aa4727d157ee7d9a0f4fa3323d5d6ad9f" refkind="member"><highlight class="normal"><ref refid="lv2_2lilv_2src_2plugin_8c_1aa4727d157ee7d9a0f4fa3323d5d6ad9f" kindref="member">lilv_plugin_get_unique</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_plugin_impl" kindref="compound">LilvPlugin</ref>*<sp/>p,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/><sp/><sp/>subject,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/><sp/><sp/>predicate)</highlight></codeline>
<codeline lineno="125"><highlight class="normal">{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*<sp/>ret<sp/>=<sp/>lilv_plugin_get_one(p,<sp/>subject,<sp/>predicate);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ret)<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lilv__internal_8h_1acc82b20fe084dcdaae2eb95863d320b8" kindref="member">LILV_ERRORF</ref>(</highlight><highlight class="stringliteral">&quot;Multiple<sp/>values<sp/>found<sp/>for<sp/>(%s<sp/>%s<sp/>...)<sp/>property\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sord_1gaaac09d1114d46785f01bed6e48728c18" kindref="member">sord_node_get_string</ref>(subject),</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sord_1gaaac09d1114d46785f01bed6e48728c18" kindref="member">sord_node_get_string</ref>(predicate));</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal">lilv_plugin_load(<ref refid="struct_lilv_plugin_impl" kindref="compound">LilvPlugin</ref>*<sp/>p)</highlight></codeline>
<codeline lineno="137"><highlight class="normal">{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle_uri_node<sp/><sp/>=<sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1af4f6c03ce7414bd8697e4f2291f15c37" kindref="member">bundle_uri</ref>-&gt;<ref refid="struct_lilv_node_impl_1a10b31ad2e47d09fcb23089c5706e84c0" kindref="member">node</ref>;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/>bundle_uri_snode<sp/>=<sp/><ref refid="group__sord_1ga497e0859abcc9e6e39c5bcbfcc7c9f70" kindref="member">sord_node_to_serd_node</ref>(bundle_uri_node);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_serd_env_impl" kindref="compound">SerdEnv</ref>*<sp/><sp/><sp/><sp/>env<sp/><sp/><sp/><sp/>=<sp/><ref refid="group__serd_1ga64ffdd637dad39a2483e727125c2c285" kindref="member">serd_env_new</ref>(bundle_uri_snode);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_serd_reader_impl" kindref="compound">SerdReader</ref>*<sp/>reader<sp/>=<sp/><ref refid="group__sord_1gad18f6cefc887a7fdcd4a0a02f9c382e6" kindref="member">sord_new_reader</ref>(p-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>-&gt;<ref refid="struct_lilv_world_impl_1a02f0eae0ade595968f72e721607b1e17" kindref="member">model</ref>,<sp/>env,<sp/><ref refid="group__serd_1gga42683406fcfa9046b28dd951cefd3391a4acfee57d17213dcb55e94c55a4fd78e" kindref="member">SERD_TURTLE</ref>,</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bundle_uri_node);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_sord_iter_impl" kindref="compound">SordIter</ref>*<sp/>prototypes<sp/>=<sp/><ref refid="group__sord_1ga2e4c3af6cfb6ef748e9f934669c06312" kindref="member">sord_search</ref>(p-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>-&gt;<ref refid="struct_lilv_world_impl_1a02f0eae0ade595968f72e721607b1e17" kindref="member">model</ref>,</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ab292523dd2e272ac3bedee38d750c955" kindref="member">plugin_uri</ref>-&gt;<ref refid="struct_lilv_node_impl_1a10b31ad2e47d09fcb23089c5706e84c0" kindref="member">node</ref>,</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>-&gt;<ref refid="struct_lilv_world_impl_1a24b83785b1723099aabccb42c697954e" kindref="member">uris</ref>.<ref refid="struct_lilv_world_impl_1a4a2d3038c512a7c599819a2ed7586020" kindref="member">lv2_prototype</ref>,</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilv__internal_8h_1a6956468cfb2a38060d841422d84b72a2" kindref="member">FOREACH_MATCH</ref>(prototypes)<sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/><ref refid="octave__test_8m_1aaccc9105df5383111407fd5b41255e23" kindref="member">t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="group__sord_1ga34db8db692181aca9ffc5506861f95cd" kindref="member">sord_iter_get_node</ref>(prototypes,<sp/><ref refid="group__sord_1ggad8ed181fe76f9085ba4188988527c633a42de0f7687921dc2cd840a122636ff13" kindref="member">SORD_OBJECT</ref>);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>prototype<sp/>=<sp/><ref refid="lilv__internal_8h_1ab85cc3ce5e142d7141219b15353ee671" kindref="member">lilv_node_new_from_node</ref>(p-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>,<sp/>t);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lilv_1ga2cc5fde69222a790f8aae81547156220" kindref="member">lilv_world_load_resource</ref>(p-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>,<sp/>prototype);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_sord_iter_impl" kindref="compound">SordIter</ref>*<sp/>statements<sp/>=<sp/><ref refid="group__sord_1ga2e4c3af6cfb6ef748e9f934669c06312" kindref="member">sord_search</ref>(</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>-&gt;<ref refid="struct_lilv_world_impl_1a02f0eae0ade595968f72e721607b1e17" kindref="member">model</ref>,<sp/>prototype-&gt;<ref refid="struct_lilv_node_impl_1a10b31ad2e47d09fcb23089c5706e84c0" kindref="member">node</ref>,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lilv__internal_8h_1a6956468cfb2a38060d841422d84b72a2" kindref="member">FOREACH_MATCH</ref>(statements)<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sord_1gac79773a042527877d00158c75a41bab2" kindref="member">SordQuad</ref><sp/>quad;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sord_1ga87ae8158572802b02a1d3f81fb20e54a" kindref="member">sord_iter_get</ref>(statements,<sp/>quad);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>quad[0]<sp/>=<sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ab292523dd2e272ac3bedee38d750c955" kindref="member">plugin_uri</ref>-&gt;<ref refid="struct_lilv_node_impl_1a10b31ad2e47d09fcb23089c5706e84c0" kindref="member">node</ref>;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sord_1gaf302459de8a5474600b6f3e0eb4ea3b4" kindref="member">sord_add</ref>(p-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>-&gt;<ref refid="struct_lilv_world_impl_1a02f0eae0ade595968f72e721607b1e17" kindref="member">model</ref>,<sp/>quad);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sord_1ga6450c3214e90ffffc47f756e66d66037" kindref="member">sord_iter_free</ref>(statements);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lilv_1gaf4677b15cf1df3ef833f7ef4b6a7511e" kindref="member">lilv_node_free</ref>(prototype);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sord_1ga6450c3214e90ffffc47f756e66d66037" kindref="member">sord_iter_free</ref>(prototypes);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Parse<sp/>all<sp/>the<sp/>plugin&apos;s<sp/>data<sp/>files<sp/>into<sp/>RDF<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__lilv_1gad4848f8348d22d0cfa659ba7ed6ea1b5" kindref="member">LILV_FOREACH</ref>(nodes,<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1aa551d1d561ff02752bcc09f8b788a8d4" kindref="member">data_uris</ref>)<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*<sp/>data_uri<sp/>=<sp/><ref refid="group__lilv_1ga09442229b233f19305f8c04f9e46158c" kindref="member">lilv_nodes_get</ref>(p-&gt;<ref refid="struct_lilv_plugin_impl_1aa551d1d561ff02752bcc09f8b788a8d4" kindref="member">data_uris</ref>,<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__serd_1gaddd2dd19cd0a36ce4ea39ade113eab62" kindref="member">serd_env_set_base_uri</ref>(env,<sp/><ref refid="group__sord_1ga497e0859abcc9e6e39c5bcbfcc7c9f70" kindref="member">sord_node_to_serd_node</ref>(data_uri-&gt;<ref refid="struct_lilv_node_impl_1a10b31ad2e47d09fcb23089c5706e84c0" kindref="member">node</ref>));</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lilv__internal_8h_1a487c9092d6cf436f54c6033d6679789e" kindref="member">lilv_world_load_file</ref>(p-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>,<sp/>reader,<sp/>data_uri);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>LILV_DYN_MANIFEST</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="dynmanifest_8h_1a4365dba8ea5db98d88316c6e2a0ceccb" kindref="member">LV2_Dyn_Manifest_Handle</ref>;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>and<sp/>parse<sp/>dynamic<sp/>manifest<sp/>data,<sp/>if<sp/>this<sp/>is<sp/>a<sp/>library</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;dynmanifest)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a14bb8924daea0b48c7803f281f66e390" kindref="member">int</ref><sp/>(*GetDataFunc)(LV2_Dyn_Manifest_Handle<sp/>handle,</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fp,</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib_2expat_8h_1a5a9fdd6c2606370ad12f24c078ac6585" kindref="member">uri</ref>);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GetDataFunc<sp/>get_data_func<sp/>=<sp/>(GetDataFunc)lilv_dlfunc(</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;dynmanifest-&gt;lib,<sp/></highlight><highlight class="stringliteral">&quot;lv2_dyn_manifest_get_data&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(get_data_func)<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/>bundle<sp/>=<sp/>p-&gt;dynmanifest-&gt;bundle-&gt;node;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__serd_1gaddd2dd19cd0a36ce4ea39ade113eab62" kindref="member">serd_env_set_base_uri</ref>(env,<sp/><ref refid="group__sord_1ga497e0859abcc9e6e39c5bcbfcc7c9f70" kindref="member">sord_node_to_serd_node</ref>(bundle));</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE*<sp/>fd<sp/>=<sp/>tmpfile();</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>get_data_func(p-&gt;dynmanifest-&gt;handle,<sp/>fd,</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lilv_1ga1291c27ac72d962f3522d8ee7fbe3db0" kindref="member">lilv_node_as_string</ref>(p-&gt;<ref refid="struct_lilv_plugin_impl_1ab292523dd2e272ac3bedee38d750c955" kindref="member">plugin_uri</ref>));</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rewind(fd);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__serd_1ga18b1d46abcd156310e0b18221aa80e31" kindref="member">serd_reader_add_blank_prefix</ref>(</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader,<sp/><ref refid="lilv__internal_8h_1a9c04f403a9f9ded77ed2500550241eac" kindref="member">lilv_world_blank_node_prefix</ref>(p-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>));</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__serd_1ga001d19e0eac46f43a011f6266a7b3d59" kindref="member">serd_reader_read_file_handle</ref>(</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reader,<sp/>fd,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*)</highlight><highlight class="stringliteral">&quot;(dyn-manifest)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conv2dtest_8m_1ae93e9d524fd1ef618af3d5070a8126eb" kindref="member">fclose</ref>(fd);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__serd_1ga26a4070db2f9ef59c94adeaa9dac6752" kindref="member">serd_reader_free</ref>(reader);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__serd_1ga09d49846b7fc7dbd9a4c0fdc1e84e915" kindref="member">serd_env_free</ref>(env);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1a690daad491d8dc3d446fd4d796ef807e" kindref="member">loaded</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="205"><highlight class="normal">}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal">is_symbol(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="sndfile__save_8m_1a4b99ff73a8a869319570237b5c57ab03" kindref="member">str</ref>)</highlight></codeline>
<codeline lineno="209"><highlight class="normal">{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref><sp/>=<sp/>str;<sp/>*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>;<sp/>++<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>)<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!((*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref><sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref><sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;z&apos;</highlight><highlight class="normal">)<sp/>||</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref><sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;A&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref><sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;Z&apos;</highlight><highlight class="normal">)<sp/>||</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref><sp/>&gt;<sp/>str<sp/>&amp;&amp;<sp/>*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref><sp/>&gt;=<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref><sp/>&lt;=<sp/></highlight><highlight class="charliteral">&apos;9&apos;</highlight><highlight class="normal">)<sp/>||</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref><sp/>==<sp/></highlight><highlight class="charliteral">&apos;_&apos;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="219"><highlight class="normal">}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal">lilv_plugin_load_ports_if_necessary(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_plugin_impl" kindref="compound">LilvPlugin</ref>*<sp/>const_p)</highlight></codeline>
<codeline lineno="223"><highlight class="normal">{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lilv_plugin_impl" kindref="compound">LilvPlugin</ref>*<sp/>p<sp/>=<sp/>(<ref refid="struct_lilv_plugin_impl" kindref="compound">LilvPlugin</ref>*)const_p;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!p-&gt;<ref refid="struct_lilv_plugin_impl_1a690daad491d8dc3d446fd4d796ef807e" kindref="member">loaded</ref>)</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lilv_plugin_load(p);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!p-&gt;<ref refid="struct_lilv_plugin_impl_1ab047415ad765783ae57fbe31cdf9249e" kindref="member">ports</ref>)<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ab047415ad765783ae57fbe31cdf9249e" kindref="member">ports</ref><sp/>=<sp/>(<ref refid="struct_lilv_port_impl" kindref="compound">LilvPort</ref>**)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_lilv_port_impl" kindref="compound">LilvPort</ref>*));</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ab047415ad765783ae57fbe31cdf9249e" kindref="member">ports</ref>[0]<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_sord_iter_impl" kindref="compound">SordIter</ref>*<sp/>ports<sp/>=<sp/><ref refid="lilv__internal_8h_1a1c426e96d5bb76a0fdda6a7afe19a49a" kindref="member">lilv_world_query_internal</ref>(</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>,</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ab292523dd2e272ac3bedee38d750c955" kindref="member">plugin_uri</ref>-&gt;<ref refid="struct_lilv_node_impl_1a10b31ad2e47d09fcb23089c5706e84c0" kindref="member">node</ref>,</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>-&gt;<ref refid="struct_lilv_world_impl_1a24b83785b1723099aabccb42c697954e" kindref="member">uris</ref>.<ref refid="struct_lilv_world_impl_1a4a93b004a615480d9b7fc95d96a70fee" kindref="member">lv2_port</ref>,</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lilv__internal_8h_1a6956468cfb2a38060d841422d84b72a2" kindref="member">FOREACH_MATCH</ref>(ports)<sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/>port<sp/>=<sp/><ref refid="group__sord_1ga34db8db692181aca9ffc5506861f95cd" kindref="member">sord_iter_get_node</ref>(ports,<sp/><ref refid="group__sord_1ggad8ed181fe76f9085ba4188988527c633a42de0f7687921dc2cd840a122636ff13" kindref="member">SORD_OBJECT</ref>);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*<sp/>index<sp/>=<sp/><ref refid="lv2_2lilv_2src_2plugin_8c_1aa4727d157ee7d9a0f4fa3323d5d6ad9f" kindref="member">lilv_plugin_get_unique</ref>(</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p,<sp/>port,<sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>-&gt;<ref refid="struct_lilv_world_impl_1a24b83785b1723099aabccb42c697954e" kindref="member">uris</ref>.<ref refid="struct_lilv_world_impl_1a6137fc3520f9c5cd64159778cea3cce7" kindref="member">lv2_index</ref>);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*<sp/>symbol<sp/>=<sp/><ref refid="lv2_2lilv_2src_2plugin_8c_1aa4727d157ee7d9a0f4fa3323d5d6ad9f" kindref="member">lilv_plugin_get_unique</ref>(</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p,<sp/>port,<sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>-&gt;<ref refid="struct_lilv_world_impl_1a24b83785b1723099aabccb42c697954e" kindref="member">uris</ref>.<ref refid="struct_lilv_world_impl_1a6dc1e99491e637a1188ee3d3d2aa6fad" kindref="member">lv2_symbol</ref>);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="sndfile__load_8m_1a3a81ee160b23b01b04b7c08b35123218" kindref="member">error</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__lilv_1ga0c32acb39dedf93c651e1468e36a0e19" kindref="member">lilv_node_is_string</ref>(symbol)<sp/>||</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!is_symbol((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<ref refid="group__sord_1gaaac09d1114d46785f01bed6e48728c18" kindref="member">sord_node_get_string</ref>(symbol-&gt;<ref refid="struct_lilv_node_impl_1a10b31ad2e47d09fcb23089c5706e84c0" kindref="member">node</ref>)))<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lilv__internal_8h_1acc82b20fe084dcdaae2eb95863d320b8" kindref="member">LILV_ERRORF</ref>(</highlight><highlight class="stringliteral">&quot;Plugin<sp/>&lt;%s&gt;<sp/>port<sp/>symbol<sp/>`%s&apos;<sp/>is<sp/>invalid\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lilv_1ga4f0ffa007aa11aaf30ba37c1ac1513fd" kindref="member">lilv_node_as_uri</ref>(p-&gt;<ref refid="struct_lilv_plugin_impl_1ab292523dd2e272ac3bedee38d750c955" kindref="member">plugin_uri</ref>),</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lilv_1ga1291c27ac72d962f3522d8ee7fbe3db0" kindref="member">lilv_node_as_string</ref>(symbol));</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="midiclock_8c_1a5f689029e53f12e337967312e0a17717" kindref="member">done</ref>;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__lilv_1gaf0c597c61514221bc976b30142aaa517" kindref="member">lilv_node_is_int</ref>(index))<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lilv__internal_8h_1acc82b20fe084dcdaae2eb95863d320b8" kindref="member">LILV_ERRORF</ref>(</highlight><highlight class="stringliteral">&quot;Plugin<sp/>&lt;%s&gt;<sp/>port<sp/>index<sp/>is<sp/>not<sp/>an<sp/>integer\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lilv_1ga4f0ffa007aa11aaf30ba37c1ac1513fd" kindref="member">lilv_node_as_uri</ref>(p-&gt;<ref refid="struct_lilv_plugin_impl_1ab292523dd2e272ac3bedee38d750c955" kindref="member">plugin_uri</ref>));</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/><ref refid="midiclock_8c_1a5f689029e53f12e337967312e0a17717" kindref="member">done</ref>;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref><sp/><sp/>this_index<sp/>=<sp/><ref refid="group__lilv_1ga375054e13a92d8317e341a84ee48fb53" kindref="member">lilv_node_as_int</ref>(index);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_lilv_port_impl" kindref="compound">LilvPort</ref>*<sp/>this_port<sp/><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;<ref refid="struct_lilv_plugin_impl_1ac0b1c43adf9e1d65c27a9a603d62615e" kindref="member">num_ports</ref><sp/>&gt;<sp/>this_index)<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this_port<sp/>=<sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ab047415ad765783ae57fbe31cdf9249e" kindref="member">ports</ref>[this_index];</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ab047415ad765783ae57fbe31cdf9249e" kindref="member">ports</ref><sp/>=<sp/>(<ref refid="struct_lilv_port_impl" kindref="compound">LilvPort</ref>**)realloc(</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ab047415ad765783ae57fbe31cdf9249e" kindref="member">ports</ref>,<sp/>(this_index<sp/>+<sp/>1)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_lilv_port_impl" kindref="compound">LilvPort</ref>*));</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(p-&gt;<ref refid="struct_lilv_plugin_impl_1ab047415ad765783ae57fbe31cdf9249e" kindref="member">ports</ref><sp/>+<sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ac0b1c43adf9e1d65c27a9a603d62615e" kindref="member">num_ports</ref>,<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(this_index<sp/>-<sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ac0b1c43adf9e1d65c27a9a603d62615e" kindref="member">num_ports</ref>)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_lilv_port_impl" kindref="compound">LilvPort</ref>*));</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ac0b1c43adf9e1d65c27a9a603d62615e" kindref="member">num_ports</ref><sp/>=<sp/>this_index<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Havn&apos;t<sp/>seen<sp/>this<sp/>port<sp/>yet,<sp/>add<sp/>it<sp/>to<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!this_port)<sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this_port<sp/>=<sp/><ref refid="lilv__internal_8h_1a46ee3bdcb6259a63d52568a6538e19b5" kindref="member">lilv_port_new</ref>(p-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>,</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>port,</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this_index,</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lilv_1ga1291c27ac72d962f3522d8ee7fbe3db0" kindref="member">lilv_node_as_string</ref>(symbol));</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ab047415ad765783ae57fbe31cdf9249e" kindref="member">ports</ref>[this_index]<sp/>=<sp/>this_port;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_sord_iter_impl" kindref="compound">SordIter</ref>*<sp/>types<sp/>=<sp/><ref refid="lilv__internal_8h_1a1c426e96d5bb76a0fdda6a7afe19a49a" kindref="member">lilv_world_query_internal</ref>(</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>,<sp/>port,<sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>-&gt;<ref refid="struct_lilv_world_impl_1a24b83785b1723099aabccb42c697954e" kindref="member">uris</ref>.<ref refid="struct_lilv_world_impl_1aca23d16c84c357ca521a95eb447d5a59" kindref="member">rdf_a</ref>,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lilv__internal_8h_1a6956468cfb2a38060d841422d84b72a2" kindref="member">FOREACH_MATCH</ref>(types)<sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/><ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref><sp/>=<sp/><ref refid="group__sord_1ga34db8db692181aca9ffc5506861f95cd" kindref="member">sord_iter_get_node</ref>(types,<sp/><ref refid="group__sord_1ggad8ed181fe76f9085ba4188988527c633a42de0f7687921dc2cd840a122636ff13" kindref="member">SORD_OBJECT</ref>);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__sord_1ga34de2b7b44fbd614e7831c9c1b6d114e" kindref="member">sord_node_get_type</ref>(type)<sp/>==<sp/><ref refid="group__sord_1gga69e82f5abb700cfbde0c9ee8d3574154a7335bbadcb5084cedd7957d7d772aaa5" kindref="member">SORD_URI</ref>)<sp/>{</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__zix_1gabbf32f6bf3dd802fd36af7ac17cee87c" kindref="member">zix_tree_insert</ref>(</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="struct_zix_tree_impl" kindref="compound">ZixTree</ref>*)this_port-&gt;<ref refid="struct_lilv_port_impl_1a090b8ea7e0a258563472d7ed8fe6e193" kindref="member">classes</ref>,</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lilv__internal_8h_1ab85cc3ce5e142d7141219b15353ee671" kindref="member">lilv_node_new_from_node</ref>(p-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>,<sp/>type),<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lilv__internal_8h_1aacf7dafbc25cce690952a646f27ce0c3" kindref="member">LILV_WARNF</ref>(</highlight><highlight class="stringliteral">&quot;Plugin<sp/>&lt;%s&gt;<sp/>port<sp/>type<sp/>is<sp/>not<sp/>a<sp/>URI\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lilv_1ga4f0ffa007aa11aaf30ba37c1ac1513fd" kindref="member">lilv_node_as_uri</ref>(p-&gt;<ref refid="struct_lilv_plugin_impl_1ab292523dd2e272ac3bedee38d750c955" kindref="member">plugin_uri</ref>));</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sord_1ga6450c3214e90ffffc47f756e66d66037" kindref="member">sord_iter_free</ref>(types);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="midiclock_8c_1a5f689029e53f12e337967312e0a17717" kindref="member">done</ref>:</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lilv_1gaf4677b15cf1df3ef833f7ef4b6a7511e" kindref="member">lilv_node_free</ref>(symbol);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lilv_1gaf4677b15cf1df3ef833f7ef4b6a7511e" kindref="member">lilv_node_free</ref>(index);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>Invalid<sp/>plugin</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lilv_plugin_free_ports(p);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sord_1ga6450c3214e90ffffc47f756e66d66037" kindref="member">sord_iter_free</ref>(ports);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>sanity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ac0b1c43adf9e1d65c27a9a603d62615e" kindref="member">num_ports</ref>;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!p-&gt;<ref refid="struct_lilv_plugin_impl_1ab047415ad765783ae57fbe31cdf9249e" kindref="member">ports</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>])<sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lilv__internal_8h_1acc82b20fe084dcdaae2eb95863d320b8" kindref="member">LILV_ERRORF</ref>(</highlight><highlight class="stringliteral">&quot;Plugin<sp/>&lt;%s&gt;<sp/>is<sp/>missing<sp/>port<sp/>%d/%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lilv_1ga4f0ffa007aa11aaf30ba37c1ac1513fd" kindref="member">lilv_node_as_uri</ref>(p-&gt;<ref refid="struct_lilv_plugin_impl_1ab292523dd2e272ac3bedee38d750c955" kindref="member">plugin_uri</ref>),<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ac0b1c43adf9e1d65c27a9a603d62615e" kindref="member">num_ports</ref>);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lilv_plugin_free_ports(p);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="318"><highlight class="normal">}</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321" refid="lv2_2lilv_2src_2plugin_8c_1a13b6764a993ba40c647b16bda85569f9" refkind="member"><highlight class="normal"><ref refid="lv2_2lilv_2src_2plugin_8c_1a13b6764a993ba40c647b16bda85569f9" kindref="member">lilv_plugin_load_if_necessary</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_plugin_impl" kindref="compound">LilvPlugin</ref>*<sp/>p)</highlight></codeline>
<codeline lineno="322"><highlight class="normal">{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!p-&gt;<ref refid="struct_lilv_plugin_impl_1a690daad491d8dc3d446fd4d796ef807e" kindref="member">loaded</ref>)</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lilv_plugin_load((<ref refid="struct_lilv_plugin_impl" kindref="compound">LilvPlugin</ref>*)p);</highlight></codeline>
<codeline lineno="325"><highlight class="normal">}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*</highlight></codeline>
<codeline lineno="328" refid="group__lilv_1gaa462f4594d361e5a79e56f70c1f04d02" refkind="member"><highlight class="normal"><ref refid="group__lilv_1gaa462f4594d361e5a79e56f70c1f04d02" kindref="member">lilv_plugin_get_uri</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_plugin_impl" kindref="compound">LilvPlugin</ref>*<sp/>p)</highlight></codeline>
<codeline lineno="329"><highlight class="normal">{</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ab292523dd2e272ac3bedee38d750c955" kindref="member">plugin_uri</ref>;</highlight></codeline>
<codeline lineno="331"><highlight class="normal">}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*</highlight></codeline>
<codeline lineno="334" refid="group__lilv_1ga6b8302af0054d9942cc928a4229b6585" refkind="member"><highlight class="normal"><ref refid="group__lilv_1ga6b8302af0054d9942cc928a4229b6585" kindref="member">lilv_plugin_get_bundle_uri</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_plugin_impl" kindref="compound">LilvPlugin</ref>*<sp/>p)</highlight></codeline>
<codeline lineno="335"><highlight class="normal">{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1af4f6c03ce7414bd8697e4f2291f15c37" kindref="member">bundle_uri</ref>;</highlight></codeline>
<codeline lineno="337"><highlight class="normal">}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*</highlight></codeline>
<codeline lineno="340" refid="group__lilv_1gab122361bb7e48347a72adcf38c539280" refkind="member"><highlight class="normal"><ref refid="group__lilv_1gab122361bb7e48347a72adcf38c539280" kindref="member">lilv_plugin_get_library_uri</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_plugin_impl" kindref="compound">LilvPlugin</ref>*<sp/>const_p)</highlight></codeline>
<codeline lineno="341"><highlight class="normal">{</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lilv_plugin_impl" kindref="compound">LilvPlugin</ref>*<sp/>p<sp/>=<sp/>(<ref refid="struct_lilv_plugin_impl" kindref="compound">LilvPlugin</ref>*)const_p;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv2_2lilv_2src_2plugin_8c_1a13b6764a993ba40c647b16bda85569f9" kindref="member">lilv_plugin_load_if_necessary</ref>(p);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!p-&gt;<ref refid="struct_lilv_plugin_impl_1a0fb4f626dd8a102784b312cf5f5acbb4" kindref="member">binary_uri</ref>)<sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;plugin&gt;<sp/>lv2:binary<sp/>?binary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_sord_iter_impl" kindref="compound">SordIter</ref>*<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/><ref refid="lilv__internal_8h_1a1c426e96d5bb76a0fdda6a7afe19a49a" kindref="member">lilv_world_query_internal</ref>(p-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>,</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ab292523dd2e272ac3bedee38d750c955" kindref="member">plugin_uri</ref>-&gt;<ref refid="struct_lilv_node_impl_1a10b31ad2e47d09fcb23089c5706e84c0" kindref="member">node</ref>,</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>-&gt;<ref refid="struct_lilv_world_impl_1a24b83785b1723099aabccb42c697954e" kindref="member">uris</ref>.<ref refid="struct_lilv_world_impl_1ac5a98a4fc60e11cadc01170a18f7ac92" kindref="member">lv2_binary</ref>,</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lilv__internal_8h_1a6956468cfb2a38060d841422d84b72a2" kindref="member">FOREACH_MATCH</ref>(i)<sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/>binary_node<sp/>=<sp/><ref refid="group__sord_1ga34db8db692181aca9ffc5506861f95cd" kindref="member">sord_iter_get_node</ref>(i,<sp/><ref refid="group__sord_1ggad8ed181fe76f9085ba4188988527c633a42de0f7687921dc2cd840a122636ff13" kindref="member">SORD_OBJECT</ref>);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__sord_1ga34de2b7b44fbd614e7831c9c1b6d114e" kindref="member">sord_node_get_type</ref>(binary_node)<sp/>==<sp/><ref refid="group__sord_1gga69e82f5abb700cfbde0c9ee8d3574154a7335bbadcb5084cedd7957d7d772aaa5" kindref="member">SORD_URI</ref>)<sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1a0fb4f626dd8a102784b312cf5f5acbb4" kindref="member">binary_uri</ref><sp/>=<sp/><ref refid="lilv__internal_8h_1ab85cc3ce5e142d7141219b15353ee671" kindref="member">lilv_node_new_from_node</ref>(p-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>,<sp/>binary_node);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sord_1ga6450c3214e90ffffc47f756e66d66037" kindref="member">sord_iter_free</ref>(i);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!p-&gt;<ref refid="struct_lilv_plugin_impl_1a0fb4f626dd8a102784b312cf5f5acbb4" kindref="member">binary_uri</ref>)<sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lilv__internal_8h_1aacf7dafbc25cce690952a646f27ce0c3" kindref="member">LILV_WARNF</ref>(</highlight><highlight class="stringliteral">&quot;Plugin<sp/>&lt;%s&gt;<sp/>has<sp/>no<sp/>lv2:binary\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lilv_1ga4f0ffa007aa11aaf30ba37c1ac1513fd" kindref="member">lilv_node_as_uri</ref>(<ref refid="group__lilv_1gaa462f4594d361e5a79e56f70c1f04d02" kindref="member">lilv_plugin_get_uri</ref>(p)));</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1a0fb4f626dd8a102784b312cf5f5acbb4" kindref="member">binary_uri</ref>;</highlight></codeline>
<codeline lineno="364"><highlight class="normal">}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lilv_8h_1a256c2c4443307f320de24bb31198df83" kindref="member">LilvNodes</ref>*</highlight></codeline>
<codeline lineno="367" refid="group__lilv_1ga080436cfbf3b213ac7bdd4ac271abbed" refkind="member"><highlight class="normal"><ref refid="group__lilv_1ga080436cfbf3b213ac7bdd4ac271abbed" kindref="member">lilv_plugin_get_data_uris</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_plugin_impl" kindref="compound">LilvPlugin</ref>*<sp/>p)</highlight></codeline>
<codeline lineno="368"><highlight class="normal">{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1aa551d1d561ff02752bcc09f8b788a8d4" kindref="member">data_uris</ref>;</highlight></codeline>
<codeline lineno="370"><highlight class="normal">}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_plugin_class_impl" kindref="compound">LilvPluginClass</ref>*</highlight></codeline>
<codeline lineno="373" refid="group__lilv_1ga87106089cfc5122c4d5323cb20634ee8" refkind="member"><highlight class="normal"><ref refid="group__lilv_1ga87106089cfc5122c4d5323cb20634ee8" kindref="member">lilv_plugin_get_class</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_plugin_impl" kindref="compound">LilvPlugin</ref>*<sp/>const_p)</highlight></codeline>
<codeline lineno="374"><highlight class="normal">{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lilv_plugin_impl" kindref="compound">LilvPlugin</ref>*<sp/>p<sp/>=<sp/>(<ref refid="struct_lilv_plugin_impl" kindref="compound">LilvPlugin</ref>*)const_p;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv2_2lilv_2src_2plugin_8c_1a13b6764a993ba40c647b16bda85569f9" kindref="member">lilv_plugin_load_if_necessary</ref>(p);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!p-&gt;<ref refid="struct_lilv_plugin_impl_1a5bbafc02157de0f52dcd7bb92a23a547" kindref="member">plugin_class</ref>)<sp/>{</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&lt;plugin&gt;<sp/>a<sp/>?class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_sord_iter_impl" kindref="compound">SordIter</ref>*<sp/>results<sp/>=<sp/><ref refid="lilv__internal_8h_1a1c426e96d5bb76a0fdda6a7afe19a49a" kindref="member">lilv_world_query_internal</ref>(p-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>,</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ab292523dd2e272ac3bedee38d750c955" kindref="member">plugin_uri</ref>-&gt;<ref refid="struct_lilv_node_impl_1a10b31ad2e47d09fcb23089c5706e84c0" kindref="member">node</ref>,</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>-&gt;<ref refid="struct_lilv_world_impl_1a24b83785b1723099aabccb42c697954e" kindref="member">uris</ref>.<ref refid="struct_lilv_world_impl_1aca23d16c84c357ca521a95eb447d5a59" kindref="member">rdf_a</ref>,</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lilv__internal_8h_1a6956468cfb2a38060d841422d84b72a2" kindref="member">FOREACH_MATCH</ref>(results)<sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/>class_node<sp/>=<sp/><ref refid="group__sord_1ga34db8db692181aca9ffc5506861f95cd" kindref="member">sord_iter_get_node</ref>(results,<sp/><ref refid="group__sord_1ggad8ed181fe76f9085ba4188988527c633a42de0f7687921dc2cd840a122636ff13" kindref="member">SORD_OBJECT</ref>);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__sord_1ga34de2b7b44fbd614e7831c9c1b6d114e" kindref="member">sord_node_get_type</ref>(class_node)<sp/>!=<sp/><ref refid="group__sord_1gga69e82f5abb700cfbde0c9ee8d3574154a7335bbadcb5084cedd7957d7d772aaa5" kindref="member">SORD_URI</ref>)<sp/>{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*<sp/>klass<sp/>=<sp/><ref refid="lilv__internal_8h_1ab85cc3ce5e142d7141219b15353ee671" kindref="member">lilv_node_new_from_node</ref>(p-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>,<sp/>class_node);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__lilv_1ga3fd9df99cb05f2f061233d2839e820f1" kindref="member">lilv_node_equals</ref>(klass,<sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>-&gt;<ref refid="struct_lilv_world_impl_1a5f1ff516780893a39fd971fab50ccb15" kindref="member">lv2_plugin_class</ref>-&gt;<ref refid="struct_lilv_plugin_class_impl_1ac1c96a07b2e84e51725d4d9c91d64139" kindref="member">uri</ref>))<sp/>{</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_plugin_class_impl" kindref="compound">LilvPluginClass</ref>*<sp/>pclass<sp/>=<sp/><ref refid="group__lilv_1ga24762b755734a1950b16547f26fc10c5" kindref="member">lilv_plugin_classes_get_by_uri</ref>(</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>-&gt;<ref refid="struct_lilv_world_impl_1a56486065a8949f93f060216ab347938f" kindref="member">plugin_classes</ref>,<sp/>klass);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pclass)<sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((<ref refid="struct_lilv_plugin_impl" kindref="compound">LilvPlugin</ref>*)p)-&gt;plugin_class<sp/>=<sp/>pclass;</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lilv_1gaf4677b15cf1df3ef833f7ef4b6a7511e" kindref="member">lilv_node_free</ref>(klass);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lilv_1gaf4677b15cf1df3ef833f7ef4b6a7511e" kindref="member">lilv_node_free</ref>(klass);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sord_1ga6450c3214e90ffffc47f756e66d66037" kindref="member">sord_iter_free</ref>(results);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p-&gt;<ref refid="struct_lilv_plugin_impl_1a5bbafc02157de0f52dcd7bb92a23a547" kindref="member">plugin_class</ref><sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1a5bbafc02157de0f52dcd7bb92a23a547" kindref="member">plugin_class</ref><sp/>=<sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>-&gt;<ref refid="struct_lilv_world_impl_1a5f1ff516780893a39fd971fab50ccb15" kindref="member">lv2_plugin_class</ref>;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1a5bbafc02157de0f52dcd7bb92a23a547" kindref="member">plugin_class</ref>;</highlight></codeline>
<codeline lineno="409"><highlight class="normal">}</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="lilv_8h_1a256c2c4443307f320de24bb31198df83" kindref="member">LilvNodes</ref>*</highlight></codeline>
<codeline lineno="412"><highlight class="normal">lilv_plugin_get_value_internal(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_plugin_impl" kindref="compound">LilvPlugin</ref>*<sp/>p,</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/><sp/><sp/>predicate)</highlight></codeline>
<codeline lineno="414"><highlight class="normal">{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv2_2lilv_2src_2plugin_8c_1a13b6764a993ba40c647b16bda85569f9" kindref="member">lilv_plugin_load_if_necessary</ref>(p);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="lilv__internal_8h_1ad6757c19986471a3b01eea6ff4fff1dd" kindref="member">lilv_world_find_nodes_internal</ref>(</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>,<sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ab292523dd2e272ac3bedee38d750c955" kindref="member">plugin_uri</ref>-&gt;<ref refid="struct_lilv_node_impl_1a10b31ad2e47d09fcb23089c5706e84c0" kindref="member">node</ref>,<sp/>predicate,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="418"><highlight class="normal">}</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421" refid="group__lilv_1gaa05e5c23836908ffa2d9fc45c0985078" refkind="member"><highlight class="normal"><ref refid="group__lilv_1gaa05e5c23836908ffa2d9fc45c0985078" kindref="member">lilv_plugin_verify</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_plugin_impl" kindref="compound">LilvPlugin</ref>*<sp/><ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>)</highlight></codeline>
<codeline lineno="422"><highlight class="normal">{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*<sp/><sp/>rdf_type<sp/>=<sp/><ref refid="group__lilv_1gaadc0a9397da39725b2aa7030dfea7786" kindref="member">lilv_new_uri</ref>(plugin-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>,<sp/><ref refid="lilv_8h_1a79bfbd6176ec4d579e3041f5c2b277c0" kindref="member">LILV_NS_RDF</ref><sp/></highlight><highlight class="stringliteral">&quot;type&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilv_8h_1a256c2c4443307f320de24bb31198df83" kindref="member">LilvNodes</ref>*<sp/>results<sp/><sp/>=<sp/><ref refid="group__lilv_1gab88f74ed5c9ab2a7a7d72e2546362f72" kindref="member">lilv_plugin_get_value</ref>(plugin,<sp/>rdf_type);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__lilv_1gaf4677b15cf1df3ef833f7ef4b6a7511e" kindref="member">lilv_node_free</ref>(rdf_type);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!results)<sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__lilv_1gac355adeca3dc54366899b6f1ef3b0fc3" kindref="member">lilv_nodes_free</ref>(results);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>results<sp/>=<sp/>lilv_plugin_get_value_internal(plugin,</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plugin-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>-&gt;<ref refid="struct_lilv_world_impl_1a24b83785b1723099aabccb42c697954e" kindref="member">uris</ref>.<ref refid="struct_lilv_world_impl_1a47cd10b3dd35618609b681afb0b22c43" kindref="member">doap_name</ref>);</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!results)<sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__lilv_1gac355adeca3dc54366899b6f1ef3b0fc3" kindref="member">lilv_nodes_free</ref>(results);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*<sp/>lv2_port<sp/>=<sp/><ref refid="group__lilv_1gaadc0a9397da39725b2aa7030dfea7786" kindref="member">lilv_new_uri</ref>(plugin-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>,<sp/><ref refid="lv2_8h_1a56357ed07f32ff4acb79a3c6e6609887" kindref="member">LV2_CORE__port</ref>);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>results<sp/>=<sp/><ref refid="group__lilv_1gab88f74ed5c9ab2a7a7d72e2546362f72" kindref="member">lilv_plugin_get_value</ref>(plugin,<sp/>lv2_port);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__lilv_1gaf4677b15cf1df3ef833f7ef4b6a7511e" kindref="member">lilv_node_free</ref>(lv2_port);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!results)<sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__lilv_1gac355adeca3dc54366899b6f1ef3b0fc3" kindref="member">lilv_nodes_free</ref>(results);</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="447"><highlight class="normal">}</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*</highlight></codeline>
<codeline lineno="450" refid="group__lilv_1gaf0cdf34bbb28cdee19d15d689782a6e5" refkind="member"><highlight class="normal"><ref refid="group__lilv_1gaf0cdf34bbb28cdee19d15d689782a6e5" kindref="member">lilv_plugin_get_name</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_plugin_impl" kindref="compound">LilvPlugin</ref>*<sp/><ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>)</highlight></codeline>
<codeline lineno="451"><highlight class="normal">{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilv_8h_1a256c2c4443307f320de24bb31198df83" kindref="member">LilvNodes</ref>*<sp/>results<sp/>=<sp/>lilv_plugin_get_value_internal(</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plugin,<sp/>plugin-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>-&gt;<ref refid="struct_lilv_world_impl_1a24b83785b1723099aabccb42c697954e" kindref="member">uris</ref>.<ref refid="struct_lilv_world_impl_1a47cd10b3dd35618609b681afb0b22c43" kindref="member">doap_name</ref>);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*<sp/>ret<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(results)<sp/>{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*<sp/>val<sp/>=<sp/><ref refid="group__lilv_1gaebd31ae1b31d01968cf222fe08093c25" kindref="member">lilv_nodes_get_first</ref>(results);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__lilv_1ga0c32acb39dedf93c651e1468e36a0e19" kindref="member">lilv_node_is_string</ref>(val))</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="group__lilv_1gad85bca25ea40812ce8c4222ba40d63d2" kindref="member">lilv_node_duplicate</ref>(val);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lilv_1gac355adeca3dc54366899b6f1ef3b0fc3" kindref="member">lilv_nodes_free</ref>(results);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ret)</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lilv__internal_8h_1aacf7dafbc25cce690952a646f27ce0c3" kindref="member">LILV_WARNF</ref>(</highlight><highlight class="stringliteral">&quot;Plugin<sp/>&lt;%s&gt;<sp/>has<sp/>no<sp/>(mandatory)<sp/>doap:name\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lilv_1ga1291c27ac72d962f3522d8ee7fbe3db0" kindref="member">lilv_node_as_string</ref>(<ref refid="group__lilv_1gaa462f4594d361e5a79e56f70c1f04d02" kindref="member">lilv_plugin_get_uri</ref>(plugin)));</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="468"><highlight class="normal">}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref><sp/><ref refid="lilv_8h_1a256c2c4443307f320de24bb31198df83" kindref="member">LilvNodes</ref>*</highlight></codeline>
<codeline lineno="471" refid="group__lilv_1gab88f74ed5c9ab2a7a7d72e2546362f72" refkind="member"><highlight class="normal"><ref refid="group__lilv_1gab88f74ed5c9ab2a7a7d72e2546362f72" kindref="member">lilv_plugin_get_value</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_plugin_impl" kindref="compound">LilvPlugin</ref>*<sp/>p,</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*<sp/><sp/><sp/>predicate)</highlight></codeline>
<codeline lineno="473"><highlight class="normal">{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv2_2lilv_2src_2plugin_8c_1a13b6764a993ba40c647b16bda85569f9" kindref="member">lilv_plugin_load_if_necessary</ref>(p);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__lilv_1ga1545945352d9baf925fe9f19d1881244" kindref="member">lilv_world_find_nodes</ref>(p-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>,<sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ab292523dd2e272ac3bedee38d750c955" kindref="member">plugin_uri</ref>,<sp/>predicate,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="476"><highlight class="normal">}</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref></highlight></codeline>
<codeline lineno="479" refid="group__lilv_1gafcd5012a82daecb65b476d9b3152de96" refkind="member"><highlight class="normal"><ref refid="group__lilv_1gafcd5012a82daecb65b476d9b3152de96" kindref="member">lilv_plugin_get_num_ports</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_plugin_impl" kindref="compound">LilvPlugin</ref>*<sp/>p)</highlight></codeline>
<codeline lineno="480"><highlight class="normal">{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/>lilv_plugin_load_ports_if_necessary(p);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ac0b1c43adf9e1d65c27a9a603d62615e" kindref="member">num_ports</ref>;</highlight></codeline>
<codeline lineno="483"><highlight class="normal">}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486" refid="group__lilv_1gadd6aa2c341f27f2774da6606492400ad" refkind="member"><highlight class="normal"><ref refid="group__lilv_1gadd6aa2c341f27f2774da6606492400ad" kindref="member">lilv_plugin_get_port_ranges_float</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_plugin_impl" kindref="compound">LilvPlugin</ref>*<sp/>p,</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_values,</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_values,</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>def_values)</highlight></codeline>
<codeline lineno="490"><highlight class="normal">{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>lilv_plugin_load_ports_if_necessary(p);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*<sp/><sp/><ref refid="_compare_audio_command_8cpp_1abd8bbcfabb3ddef2ccaafb9928a37b95" kindref="member">min</ref><sp/><sp/><sp/><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*<sp/><sp/><ref refid="libflac_2src_2flac_2encode_8c_1ac39d9cef6a5e030ba8d9e11121054268" kindref="member">max</ref><sp/><sp/><sp/><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*<sp/><sp/>def<sp/><sp/><sp/><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>**<sp/>minptr<sp/>=<sp/>min_values<sp/>?<sp/>&amp;min<sp/>:<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>**<sp/>maxptr<sp/>=<sp/>max_values<sp/>?<sp/>&amp;max<sp/>:<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>**<sp/>defptr<sp/>=<sp/>def_values<sp/>?<sp/>&amp;def<sp/>:<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ac0b1c43adf9e1d65c27a9a603d62615e" kindref="member">num_ports</ref>;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lilv_1gaa57988fe95d1944202fe2b068788a998" kindref="member">lilv_port_get_range</ref>(p,<sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ab047415ad765783ae57fbe31cdf9249e" kindref="member">ports</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>],<sp/>defptr,<sp/>minptr,<sp/>maxptr);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(min_values)<sp/>{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__lilv_1ga5d899836a404f7421a4cfdc34cd52384" kindref="member">lilv_node_is_float</ref>(min)<sp/>||<sp/><ref refid="group__lilv_1gaf0c597c61514221bc976b30142aaa517" kindref="member">lilv_node_is_int</ref>(min))<sp/>{</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_values[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/><ref refid="group__lilv_1ga8e64cb4e51e6231d0e4cf0d04ec1bf0f" kindref="member">lilv_node_as_float</ref>(min);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min_values[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/><ref refid="mathematics_8h_1a8abfcc76130f3f991d124dd22d7e69bc" kindref="member">NAN</ref>;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(max_values)<sp/>{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__lilv_1ga5d899836a404f7421a4cfdc34cd52384" kindref="member">lilv_node_is_float</ref>(max)<sp/>||<sp/><ref refid="group__lilv_1gaf0c597c61514221bc976b30142aaa517" kindref="member">lilv_node_is_int</ref>(max))<sp/>{</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_values[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/><ref refid="group__lilv_1ga8e64cb4e51e6231d0e4cf0d04ec1bf0f" kindref="member">lilv_node_as_float</ref>(max);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_values[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/><ref refid="mathematics_8h_1a8abfcc76130f3f991d124dd22d7e69bc" kindref="member">NAN</ref>;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(def_values)<sp/>{</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__lilv_1ga5d899836a404f7421a4cfdc34cd52384" kindref="member">lilv_node_is_float</ref>(def)<sp/>||<sp/><ref refid="group__lilv_1gaf0c597c61514221bc976b30142aaa517" kindref="member">lilv_node_is_int</ref>(def))<sp/>{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>def_values[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/><ref refid="group__lilv_1ga8e64cb4e51e6231d0e4cf0d04ec1bf0f" kindref="member">lilv_node_as_float</ref>(def);</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>def_values[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/><ref refid="mathematics_8h_1a8abfcc76130f3f991d124dd22d7e69bc" kindref="member">NAN</ref>;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lilv_1gaf4677b15cf1df3ef833f7ef4b6a7511e" kindref="member">lilv_node_free</ref>(def);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lilv_1gaf4677b15cf1df3ef833f7ef4b6a7511e" kindref="member">lilv_node_free</ref>(min);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lilv_1gaf4677b15cf1df3ef833f7ef4b6a7511e" kindref="member">lilv_node_free</ref>(max);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="530"><highlight class="normal">}</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref></highlight></codeline>
<codeline lineno="533" refid="group__lilv_1gae8594e96160882afb331b833e0c2f1e3" refkind="member"><highlight class="normal"><ref refid="group__lilv_1gae8594e96160882afb331b833e0c2f1e3" kindref="member">lilv_plugin_get_num_ports_of_class_va</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_plugin_impl" kindref="compound">LilvPlugin</ref>*<sp/>p,</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*<sp/><sp/><sp/>class_1,</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_list<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacelv2specgen_1a022f620722f1029244a92eca556aa50a" kindref="member">args</ref>)</highlight></codeline>
<codeline lineno="536"><highlight class="normal">{</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>lilv_plugin_load_ports_if_necessary(p);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref><sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Build<sp/>array<sp/>of<sp/>classes<sp/>from<sp/>args<sp/>so<sp/>we<sp/>can<sp/>walk<sp/>it<sp/>several<sp/>times</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_classes<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>**<sp/><ref refid="namespacewaflib_1_1_context_1a861cac13f54f517cbcbffbbf49db9414" kindref="member">classes</ref><sp/><sp/><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref><sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/>(<ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref><sp/>=<sp/>va_arg(args,<sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*));<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>classes<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>**)realloc(</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>classes,<sp/>++n_classes<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*));</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>classes[n_classes<sp/>-<sp/>1]<sp/>=<sp/><ref refid="poly-fir_8h_1aafc737ea9ef91f59cf9acd287fb8d085" kindref="member">c</ref>;</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>each<sp/>port<sp/>against<sp/>every<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ac0b1c43adf9e1d65c27a9a603d62615e" kindref="member">num_ports</ref>;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_lilv_port_impl" kindref="compound">LilvPort</ref>*<sp/>port<sp/>=<sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ab047415ad765783ae57fbe31cdf9249e" kindref="member">ports</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(port<sp/>&amp;&amp;<sp/><ref refid="group__lilv_1ga67b641e2002e6b68b40bd8f7049201cd" kindref="member">lilv_port_is_a</ref>(p,<sp/>port,<sp/>class_1))<sp/>{</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>matches<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>n_classes;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__lilv_1ga67b641e2002e6b68b40bd8f7049201cd" kindref="member">lilv_port_is_a</ref>(p,<sp/>port,<sp/>classes[j]))<sp/>{</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matches<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(matches)<sp/>{</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++<ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref>;</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/>free(classes);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref>;</highlight></codeline>
<codeline lineno="570"><highlight class="normal">}</highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref></highlight></codeline>
<codeline lineno="573" refid="group__lilv_1ga3b8af621a8ac146dc83631ca0602cfa6" refkind="member"><highlight class="normal"><ref refid="group__lilv_1ga3b8af621a8ac146dc83631ca0602cfa6" kindref="member">lilv_plugin_get_num_ports_of_class</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_plugin_impl" kindref="compound">LilvPlugin</ref>*<sp/>p,</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*<sp/><sp/><sp/>class_1,<sp/>...)</highlight></codeline>
<codeline lineno="575"><highlight class="normal">{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>va_list<sp/><ref refid="namespacelv2specgen_1a022f620722f1029244a92eca556aa50a" kindref="member">args</ref>;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/>va_start(args,<sp/>class_1);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref><sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref><sp/>=<sp/><ref refid="group__lilv_1gae8594e96160882afb331b833e0c2f1e3" kindref="member">lilv_plugin_get_num_ports_of_class_va</ref>(p,<sp/>class_1,<sp/>args);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/>va_end(args);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="cascade_8c_1afea6e77db19a2f8c91419904fe665a3a" kindref="member">count</ref>;</highlight></codeline>
<codeline lineno="583"><highlight class="normal">}</highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586" refid="group__lilv_1ga19c0b4fb6120f413074b7062842736a8" refkind="member"><highlight class="normal"><ref refid="group__lilv_1ga19c0b4fb6120f413074b7062842736a8" kindref="member">lilv_plugin_has_latency</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_plugin_impl" kindref="compound">LilvPlugin</ref>*<sp/>p)</highlight></codeline>
<codeline lineno="587"><highlight class="normal">{</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv2_2lilv_2src_2plugin_8c_1a13b6764a993ba40c647b16bda85569f9" kindref="member">lilv_plugin_load_if_necessary</ref>(p);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_sord_iter_impl" kindref="compound">SordIter</ref>*<sp/>ports<sp/>=<sp/><ref refid="lilv__internal_8h_1a1c426e96d5bb76a0fdda6a7afe19a49a" kindref="member">lilv_world_query_internal</ref>(</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>,</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ab292523dd2e272ac3bedee38d750c955" kindref="member">plugin_uri</ref>-&gt;<ref refid="struct_lilv_node_impl_1a10b31ad2e47d09fcb23089c5706e84c0" kindref="member">node</ref>,</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>-&gt;<ref refid="struct_lilv_world_impl_1a24b83785b1723099aabccb42c697954e" kindref="member">uris</ref>.<ref refid="struct_lilv_world_impl_1a4a93b004a615480d9b7fc95d96a70fee" kindref="member">lv2_port</ref>,</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilv__internal_8h_1a6956468cfb2a38060d841422d84b72a2" kindref="member">FOREACH_MATCH</ref>(ports)<sp/>{</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/>port<sp/>=<sp/><ref refid="group__sord_1ga34db8db692181aca9ffc5506861f95cd" kindref="member">sord_iter_get_node</ref>(ports,<sp/><ref refid="group__sord_1ggad8ed181fe76f9085ba4188988527c633a42de0f7687921dc2cd840a122636ff13" kindref="member">SORD_OBJECT</ref>);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_sord_iter_impl" kindref="compound">SordIter</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>prop<sp/>=<sp/><ref refid="lilv__internal_8h_1a1c426e96d5bb76a0fdda6a7afe19a49a" kindref="member">lilv_world_query_internal</ref>(</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>,</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>port,</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>-&gt;<ref refid="struct_lilv_world_impl_1a24b83785b1723099aabccb42c697954e" kindref="member">uris</ref>.<ref refid="struct_lilv_world_impl_1a7c2ba89510b1f5f19743064d50c19da0" kindref="member">lv2_portProperty</ref>,</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>-&gt;<ref refid="struct_lilv_world_impl_1a24b83785b1723099aabccb42c697954e" kindref="member">uris</ref>.<ref refid="struct_lilv_world_impl_1a7bc09cb6ad148ec21f6e7da67e5c65af" kindref="member">lv2_reportsLatency</ref>);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_sord_iter_impl" kindref="compound">SordIter</ref>*<sp/>des<sp/>=<sp/><ref refid="lilv__internal_8h_1a1c426e96d5bb76a0fdda6a7afe19a49a" kindref="member">lilv_world_query_internal</ref>(</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>,</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>port,</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>-&gt;<ref refid="struct_lilv_world_impl_1a24b83785b1723099aabccb42c697954e" kindref="member">uris</ref>.<ref refid="struct_lilv_world_impl_1a44ba5cede6a4a8464287f186478c8fcb" kindref="member">lv2_designation</ref>,</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>-&gt;<ref refid="struct_lilv_world_impl_1a24b83785b1723099aabccb42c697954e" kindref="member">uris</ref>.<ref refid="struct_lilv_world_impl_1ad9d8cde4108dbc6a270261f0590227ef" kindref="member">lv2_latency</ref>);</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>latent<sp/>=<sp/>!<ref refid="group__sord_1ga287f3764973d96c2f1df566abf569f5e" kindref="member">sord_iter_end</ref>(prop)<sp/>||<sp/>!<ref refid="group__sord_1ga287f3764973d96c2f1df566abf569f5e" kindref="member">sord_iter_end</ref>(des);</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sord_1ga6450c3214e90ffffc47f756e66d66037" kindref="member">sord_iter_free</ref>(prop);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sord_1ga6450c3214e90ffffc47f756e66d66037" kindref="member">sord_iter_free</ref>(des);</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(latent)<sp/>{</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sord_1ga6450c3214e90ffffc47f756e66d66037" kindref="member">sord_iter_free</ref>(ports);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="619"><highlight class="normal">}</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_port_impl" kindref="compound">LilvPort</ref>*</highlight></codeline>
<codeline lineno="622"><highlight class="normal">lilv_plugin_get_port_by_property(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_plugin_impl" kindref="compound">LilvPlugin</ref>*<sp/><ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>,</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/><sp/><sp/>port_property)</highlight></codeline>
<codeline lineno="624"><highlight class="normal">{</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/>lilv_plugin_load_ports_if_necessary(plugin);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>plugin-&gt;<ref refid="struct_lilv_plugin_impl_1ac0b1c43adf9e1d65c27a9a603d62615e" kindref="member">num_ports</ref>;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_lilv_port_impl" kindref="compound">LilvPort</ref>*<sp/>port<sp/>=<sp/>plugin-&gt;<ref refid="struct_lilv_plugin_impl_1ab047415ad765783ae57fbe31cdf9249e" kindref="member">ports</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_sord_iter_impl" kindref="compound">SordIter</ref>*<sp/>iter<sp/>=<sp/><ref refid="lilv__internal_8h_1a1c426e96d5bb76a0fdda6a7afe19a49a" kindref="member">lilv_world_query_internal</ref>(</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plugin-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>,</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>port-&gt;<ref refid="struct_lilv_port_impl_1a70e1a3f6bc29957faff7a2d1068c1a3b" kindref="member">node</ref>-&gt;<ref refid="struct_lilv_node_impl_1a10b31ad2e47d09fcb23089c5706e84c0" kindref="member">node</ref>,</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plugin-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>-&gt;<ref refid="struct_lilv_world_impl_1a24b83785b1723099aabccb42c697954e" kindref="member">uris</ref>.<ref refid="struct_lilv_world_impl_1a7c2ba89510b1f5f19743064d50c19da0" kindref="member">lv2_portProperty</ref>,</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>port_property);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>found<sp/>=<sp/>!<ref refid="group__sord_1ga287f3764973d96c2f1df566abf569f5e" kindref="member">sord_iter_end</ref>(iter);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sord_1ga6450c3214e90ffffc47f756e66d66037" kindref="member">sord_iter_free</ref>(iter);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(found)<sp/>{</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>port;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="643"><highlight class="normal">}</highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_port_impl" kindref="compound">LilvPort</ref>*</highlight></codeline>
<codeline lineno="646" refid="group__lilv_1ga66f7b3acd4721a91084abaa489cc8f12" refkind="member"><highlight class="normal"><ref refid="group__lilv_1ga66f7b3acd4721a91084abaa489cc8f12" kindref="member">lilv_plugin_get_port_by_designation</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_plugin_impl" kindref="compound">LilvPlugin</ref>*<sp/>plugin,</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*<sp/><sp/><sp/>port_class,</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*<sp/><sp/><sp/>designation)</highlight></codeline>
<codeline lineno="649"><highlight class="normal">{</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lilv_world_impl" kindref="compound">LilvWorld</ref>*<sp/><ref refid="namespacelv2__list_1a39bc711f56fd3393bf9013f08a1e5719" kindref="member">world</ref><sp/>=<sp/>plugin-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>lilv_plugin_load_ports_if_necessary(plugin);</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>plugin-&gt;<ref refid="struct_lilv_plugin_impl_1ac0b1c43adf9e1d65c27a9a603d62615e" kindref="member">num_ports</ref>;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_lilv_port_impl" kindref="compound">LilvPort</ref>*<sp/>port<sp/>=<sp/>plugin-&gt;<ref refid="struct_lilv_plugin_impl_1ab047415ad765783ae57fbe31cdf9249e" kindref="member">ports</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_sord_iter_impl" kindref="compound">SordIter</ref>*<sp/>iter<sp/>=<sp/><ref refid="lilv__internal_8h_1a1c426e96d5bb76a0fdda6a7afe19a49a" kindref="member">lilv_world_query_internal</ref>(</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>world,</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>port-&gt;<ref refid="struct_lilv_port_impl_1a70e1a3f6bc29957faff7a2d1068c1a3b" kindref="member">node</ref>-&gt;<ref refid="struct_lilv_node_impl_1a10b31ad2e47d09fcb23089c5706e84c0" kindref="member">node</ref>,</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>world-&gt;<ref refid="struct_lilv_world_impl_1a24b83785b1723099aabccb42c697954e" kindref="member">uris</ref>.<ref refid="struct_lilv_world_impl_1a44ba5cede6a4a8464287f186478c8fcb" kindref="member">lv2_designation</ref>,</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>designation-&gt;<ref refid="struct_lilv_node_impl_1a10b31ad2e47d09fcb23089c5706e84c0" kindref="member">node</ref>);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>found<sp/>=<sp/>!<ref refid="group__sord_1ga287f3764973d96c2f1df566abf569f5e" kindref="member">sord_iter_end</ref>(iter)<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(!port_class<sp/>||<sp/><ref refid="group__lilv_1ga67b641e2002e6b68b40bd8f7049201cd" kindref="member">lilv_port_is_a</ref>(plugin,<sp/>port,<sp/>port_class));</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sord_1ga6450c3214e90ffffc47f756e66d66037" kindref="member">sord_iter_free</ref>(iter);</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(found)<sp/>{</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>port;</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="670"><highlight class="normal">}</highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref></highlight></codeline>
<codeline lineno="673" refid="group__lilv_1ga434a3733a0818c9c7211870c75ba0cff" refkind="member"><highlight class="normal"><ref refid="group__lilv_1ga434a3733a0818c9c7211870c75ba0cff" kindref="member">lilv_plugin_get_latency_port_index</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_plugin_impl" kindref="compound">LilvPlugin</ref>*<sp/>p)</highlight></codeline>
<codeline lineno="674"><highlight class="normal">{</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_port_impl" kindref="compound">LilvPort</ref>*<sp/>prop_port<sp/>=<sp/>lilv_plugin_get_port_by_property(</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p,<sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>-&gt;<ref refid="struct_lilv_world_impl_1a24b83785b1723099aabccb42c697954e" kindref="member">uris</ref>.<ref refid="struct_lilv_world_impl_1a7bc09cb6ad148ec21f6e7da67e5c65af" kindref="member">lv2_reportsLatency</ref>);</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_port_impl" kindref="compound">LilvPort</ref>*<sp/>des_port<sp/>=<sp/>lilv_plugin_get_port_by_property(</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p,<sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>-&gt;<ref refid="struct_lilv_world_impl_1a24b83785b1723099aabccb42c697954e" kindref="member">uris</ref>.<ref refid="struct_lilv_world_impl_1ad9d8cde4108dbc6a270261f0590227ef" kindref="member">lv2_latency</ref>);</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(prop_port)<sp/>{</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>prop_port-&gt;<ref refid="struct_lilv_port_impl_1ac9143be2e423888b95e416fbd388ab33" kindref="member">index</ref>;</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(des_port)<sp/>{</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>des_port-&gt;<ref refid="struct_lilv_port_impl_1ac9143be2e423888b95e416fbd388ab33" kindref="member">index</ref>;</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1ab5eb23180f7cc12b7d6c04a8ec067fdd" kindref="member">UINT32_MAX</ref>;</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="686"><highlight class="normal">}</highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="689" refid="group__lilv_1ga573736542caf84ee945bf74b4aade20c" refkind="member"><highlight class="normal"><ref refid="group__lilv_1ga573736542caf84ee945bf74b4aade20c" kindref="member">lilv_plugin_has_feature</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_plugin_impl" kindref="compound">LilvPlugin</ref>*<sp/>p,</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*<sp/><sp/><sp/><ref refid="namespacewaflib_1_1_task_gen_1a839f18f16539f3131cbe573262099bf1" kindref="member">feature</ref>)</highlight></codeline>
<codeline lineno="691"><highlight class="normal">{</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv2_2lilv_2src_2plugin_8c_1a13b6764a993ba40c647b16bda85569f9" kindref="member">lilv_plugin_load_if_necessary</ref>(p);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/>predicates[]<sp/>=<sp/>{<sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>-&gt;<ref refid="struct_lilv_world_impl_1a24b83785b1723099aabccb42c697954e" kindref="member">uris</ref>.<ref refid="struct_lilv_world_impl_1a50ddf3eb2c2b18c67e97465423c60d86" kindref="member">lv2_requiredFeature</ref>,</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>-&gt;<ref refid="struct_lilv_world_impl_1a24b83785b1723099aabccb42c697954e" kindref="member">uris</ref>.<ref refid="struct_lilv_world_impl_1abd89faa2d41e360c8bd41bfb6edb38a7" kindref="member">lv2_optionalFeature</ref>,</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>};</highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>**<sp/>pred<sp/>=<sp/>predicates;<sp/>*pred;<sp/>++pred)<sp/>{</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="lilv__internal_8h_1a81c6fce0807aec85ff73746b9005db5f" kindref="member">lilv_world_ask_internal</ref>(</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>,<sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ab292523dd2e272ac3bedee38d750c955" kindref="member">plugin_uri</ref>-&gt;<ref refid="struct_lilv_node_impl_1a10b31ad2e47d09fcb23089c5706e84c0" kindref="member">node</ref>,<sp/>*pred,<sp/>feature-&gt;<ref refid="struct_lilv_node_impl_1a10b31ad2e47d09fcb23089c5706e84c0" kindref="member">node</ref>))<sp/>{</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="704"><highlight class="normal">}</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref><sp/><ref refid="lilv_8h_1a256c2c4443307f320de24bb31198df83" kindref="member">LilvNodes</ref>*</highlight></codeline>
<codeline lineno="707" refid="group__lilv_1ga11955be6f9ed180466f37034aad6c747" refkind="member"><highlight class="normal"><ref refid="group__lilv_1ga11955be6f9ed180466f37034aad6c747" kindref="member">lilv_plugin_get_supported_features</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_plugin_impl" kindref="compound">LilvPlugin</ref>*<sp/>p)</highlight></codeline>
<codeline lineno="708"><highlight class="normal">{</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilv_8h_1a256c2c4443307f320de24bb31198df83" kindref="member">LilvNodes</ref>*<sp/>optional<sp/>=<sp/><ref refid="group__lilv_1ga611acd071c9d8980fa9b4e74449f534d" kindref="member">lilv_plugin_get_optional_features</ref>(p);</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilv_8h_1a256c2c4443307f320de24bb31198df83" kindref="member">LilvNodes</ref>*<sp/>required<sp/>=<sp/><ref refid="group__lilv_1ga731529456ac40ec2b673e8fe139a26e7" kindref="member">lilv_plugin_get_required_features</ref>(p);</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilv_8h_1a256c2c4443307f320de24bb31198df83" kindref="member">LilvNodes</ref>*<sp/>result<sp/><sp/><sp/>=<sp/><ref refid="group__lilv_1gaa2be123ffe13621ca66679de7524e76b" kindref="member">lilv_nodes_merge</ref>(optional,<sp/>required);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__lilv_1gac355adeca3dc54366899b6f1ef3b0fc3" kindref="member">lilv_nodes_free</ref>(optional);</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__lilv_1gac355adeca3dc54366899b6f1ef3b0fc3" kindref="member">lilv_nodes_free</ref>(required);</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="715"><highlight class="normal">}</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref><sp/><ref refid="lilv_8h_1a256c2c4443307f320de24bb31198df83" kindref="member">LilvNodes</ref>*</highlight></codeline>
<codeline lineno="718" refid="group__lilv_1ga611acd071c9d8980fa9b4e74449f534d" refkind="member"><highlight class="normal"><ref refid="group__lilv_1ga611acd071c9d8980fa9b4e74449f534d" kindref="member">lilv_plugin_get_optional_features</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_plugin_impl" kindref="compound">LilvPlugin</ref>*<sp/>p)</highlight></codeline>
<codeline lineno="719"><highlight class="normal">{</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv2_2lilv_2src_2plugin_8c_1a13b6764a993ba40c647b16bda85569f9" kindref="member">lilv_plugin_load_if_necessary</ref>(p);</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="lilv__internal_8h_1ad6757c19986471a3b01eea6ff4fff1dd" kindref="member">lilv_world_find_nodes_internal</ref>(p-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>,</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ab292523dd2e272ac3bedee38d750c955" kindref="member">plugin_uri</ref>-&gt;<ref refid="struct_lilv_node_impl_1a10b31ad2e47d09fcb23089c5706e84c0" kindref="member">node</ref>,</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>-&gt;<ref refid="struct_lilv_world_impl_1a24b83785b1723099aabccb42c697954e" kindref="member">uris</ref>.<ref refid="struct_lilv_world_impl_1abd89faa2d41e360c8bd41bfb6edb38a7" kindref="member">lv2_optionalFeature</ref>,</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="725"><highlight class="normal">}</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref><sp/><ref refid="lilv_8h_1a256c2c4443307f320de24bb31198df83" kindref="member">LilvNodes</ref>*</highlight></codeline>
<codeline lineno="728" refid="group__lilv_1ga731529456ac40ec2b673e8fe139a26e7" refkind="member"><highlight class="normal"><ref refid="group__lilv_1ga731529456ac40ec2b673e8fe139a26e7" kindref="member">lilv_plugin_get_required_features</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_plugin_impl" kindref="compound">LilvPlugin</ref>*<sp/>p)</highlight></codeline>
<codeline lineno="729"><highlight class="normal">{</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv2_2lilv_2src_2plugin_8c_1a13b6764a993ba40c647b16bda85569f9" kindref="member">lilv_plugin_load_if_necessary</ref>(p);</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="lilv__internal_8h_1ad6757c19986471a3b01eea6ff4fff1dd" kindref="member">lilv_world_find_nodes_internal</ref>(p-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>,</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ab292523dd2e272ac3bedee38d750c955" kindref="member">plugin_uri</ref>-&gt;<ref refid="struct_lilv_node_impl_1a10b31ad2e47d09fcb23089c5706e84c0" kindref="member">node</ref>,</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>-&gt;<ref refid="struct_lilv_world_impl_1a24b83785b1723099aabccb42c697954e" kindref="member">uris</ref>.<ref refid="struct_lilv_world_impl_1a50ddf3eb2c2b18c67e97465423c60d86" kindref="member">lv2_requiredFeature</ref>,</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="735"><highlight class="normal">}</highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="738" refid="group__lilv_1ga45572544f69e24cb76eb6245374f40fc" refkind="member"><highlight class="normal"><ref refid="group__lilv_1ga45572544f69e24cb76eb6245374f40fc" kindref="member">lilv_plugin_has_extension_data</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_plugin_impl" kindref="compound">LilvPlugin</ref>*<sp/>p,</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*<sp/><sp/><sp/><ref refid="lib_2expat_8h_1a5a9fdd6c2606370ad12f24c078ac6585" kindref="member">uri</ref>)</highlight></codeline>
<codeline lineno="740"><highlight class="normal">{</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="group__lilv_1gafda5218468031732560fb468e78d18e4" kindref="member">lilv_node_is_uri</ref>(uri))<sp/>{</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lilv__internal_8h_1acc82b20fe084dcdaae2eb95863d320b8" kindref="member">LILV_ERRORF</ref>(</highlight><highlight class="stringliteral">&quot;Extension<sp/>data<sp/>`%s&apos;<sp/>is<sp/>not<sp/>a<sp/>URI\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sord_1gaaac09d1114d46785f01bed6e48728c18" kindref="member">sord_node_get_string</ref>(uri-&gt;<ref refid="struct_lilv_node_impl_1a10b31ad2e47d09fcb23089c5706e84c0" kindref="member">node</ref>));</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv2_2lilv_2src_2plugin_8c_1a13b6764a993ba40c647b16bda85569f9" kindref="member">lilv_plugin_load_if_necessary</ref>(p);</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="lilv__internal_8h_1a81c6fce0807aec85ff73746b9005db5f" kindref="member">lilv_world_ask_internal</ref>(</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>,</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ab292523dd2e272ac3bedee38d750c955" kindref="member">plugin_uri</ref>-&gt;<ref refid="struct_lilv_node_impl_1a10b31ad2e47d09fcb23089c5706e84c0" kindref="member">node</ref>,</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>-&gt;<ref refid="struct_lilv_world_impl_1a24b83785b1723099aabccb42c697954e" kindref="member">uris</ref>.<ref refid="struct_lilv_world_impl_1a33e196ac107b7b7bd0264745c06f89be" kindref="member">lv2_extensionData</ref>,</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uri-&gt;<ref refid="struct_lilv_node_impl_1a10b31ad2e47d09fcb23089c5706e84c0" kindref="member">node</ref>);</highlight></codeline>
<codeline lineno="753"><highlight class="normal">}</highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref><sp/><ref refid="lilv_8h_1a256c2c4443307f320de24bb31198df83" kindref="member">LilvNodes</ref>*</highlight></codeline>
<codeline lineno="756" refid="group__lilv_1gab440c12bac6611b38fc1b8cd4fefeb54" refkind="member"><highlight class="normal"><ref refid="group__lilv_1gab440c12bac6611b38fc1b8cd4fefeb54" kindref="member">lilv_plugin_get_extension_data</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_plugin_impl" kindref="compound">LilvPlugin</ref>*<sp/>p)</highlight></codeline>
<codeline lineno="757"><highlight class="normal">{</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lilv_plugin_get_value_internal(p,<sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>-&gt;<ref refid="struct_lilv_world_impl_1a24b83785b1723099aabccb42c697954e" kindref="member">uris</ref>.<ref refid="struct_lilv_world_impl_1a33e196ac107b7b7bd0264745c06f89be" kindref="member">lv2_extensionData</ref>);</highlight></codeline>
<codeline lineno="759"><highlight class="normal">}</highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_port_impl" kindref="compound">LilvPort</ref>*</highlight></codeline>
<codeline lineno="762" refid="group__lilv_1ga445ad016b3e71765a12aab39f9f9a6ea" refkind="member"><highlight class="normal"><ref refid="group__lilv_1ga445ad016b3e71765a12aab39f9f9a6ea" kindref="member">lilv_plugin_get_port_by_index</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_plugin_impl" kindref="compound">LilvPlugin</ref>*<sp/>p,</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index)</highlight></codeline>
<codeline lineno="764"><highlight class="normal">{</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/>lilv_plugin_load_ports_if_necessary(p);</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&lt;<sp/>p-&gt;num_ports)</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ab047415ad765783ae57fbe31cdf9249e" kindref="member">ports</ref>[index];</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="770"><highlight class="normal">}</highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_port_impl" kindref="compound">LilvPort</ref>*</highlight></codeline>
<codeline lineno="773" refid="group__lilv_1ga53d4023368ee05ef2f8ddcc2a49082d3" refkind="member"><highlight class="normal"><ref refid="group__lilv_1ga53d4023368ee05ef2f8ddcc2a49082d3" kindref="member">lilv_plugin_get_port_by_symbol</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_plugin_impl" kindref="compound">LilvPlugin</ref>*<sp/>p,</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*<sp/><sp/><sp/>symbol)</highlight></codeline>
<codeline lineno="775"><highlight class="normal">{</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/>lilv_plugin_load_ports_if_necessary(p);</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ac0b1c43adf9e1d65c27a9a603d62615e" kindref="member">num_ports</ref>;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_lilv_port_impl" kindref="compound">LilvPort</ref>*<sp/>port<sp/>=<sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ab047415ad765783ae57fbe31cdf9249e" kindref="member">ports</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__lilv_1ga3fd9df99cb05f2f061233d2839e820f1" kindref="member">lilv_node_equals</ref>(port-&gt;<ref refid="struct_lilv_port_impl_1a5c5c752bd0daa332344f246dab05065c" kindref="member">symbol</ref>,<sp/>symbol))</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>port;</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="784"><highlight class="normal">}</highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*</highlight></codeline>
<codeline lineno="787" refid="group__lilv_1ga72e18ca0c04b2f6b73910309d4ed7527" refkind="member"><highlight class="normal"><ref refid="group__lilv_1ga72e18ca0c04b2f6b73910309d4ed7527" kindref="member">lilv_plugin_get_project</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_plugin_impl" kindref="compound">LilvPlugin</ref>*<sp/>p)</highlight></codeline>
<codeline lineno="788"><highlight class="normal">{</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv2_2lilv_2src_2plugin_8c_1a13b6764a993ba40c647b16bda85569f9" kindref="member">lilv_plugin_load_if_necessary</ref>(p);</highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/>lv2_project<sp/>=<sp/><ref refid="group__sord_1ga6cee4ab8de97cd6bca7e1587c837fdbf" kindref="member">sord_new_uri</ref>(p-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>-&gt;<ref refid="struct_lilv_world_impl_1a568e68967d35a64821393e5015e826cf" kindref="member">world</ref>,</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*)<ref refid="lv2_8h_1a6088ba40a5731acc36f0d37dc9686fc9" kindref="member">LV2_CORE__project</ref>);</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_sord_iter_impl" kindref="compound">SordIter</ref>*<sp/>projects<sp/>=<sp/><ref refid="lilv__internal_8h_1a1c426e96d5bb76a0fdda6a7afe19a49a" kindref="member">lilv_world_query_internal</ref>(p-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>,</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ab292523dd2e272ac3bedee38d750c955" kindref="member">plugin_uri</ref>-&gt;<ref refid="struct_lilv_node_impl_1a10b31ad2e47d09fcb23089c5706e84c0" kindref="member">node</ref>,</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lv2_project,</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="798"><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sord_1ga89d2f20cde1d09361a73f596ba45b57f" kindref="member">sord_node_free</ref>(p-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>-&gt;<ref refid="struct_lilv_world_impl_1a568e68967d35a64821393e5015e826cf" kindref="member">world</ref>,<sp/>lv2_project);</highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__sord_1ga287f3764973d96c2f1df566abf569f5e" kindref="member">sord_iter_end</ref>(projects))<sp/>{</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sord_1ga6450c3214e90ffffc47f756e66d66037" kindref="member">sord_iter_free</ref>(projects);</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/>project<sp/>=<sp/><ref refid="group__sord_1ga34db8db692181aca9ffc5506861f95cd" kindref="member">sord_iter_get_node</ref>(projects,<sp/><ref refid="group__sord_1ggad8ed181fe76f9085ba4188988527c633a42de0f7687921dc2cd840a122636ff13" kindref="member">SORD_OBJECT</ref>);</highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sord_1ga6450c3214e90ffffc47f756e66d66037" kindref="member">sord_iter_free</ref>(projects);</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="lilv__internal_8h_1ab85cc3ce5e142d7141219b15353ee671" kindref="member">lilv_node_new_from_node</ref>(p-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>,<sp/>project);</highlight></codeline>
<codeline lineno="810"><highlight class="normal">}</highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*</highlight></codeline>
<codeline lineno="813"><highlight class="normal">lilv_plugin_get_author(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_plugin_impl" kindref="compound">LilvPlugin</ref>*<sp/>p)</highlight></codeline>
<codeline lineno="814"><highlight class="normal">{</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv2_2lilv_2src_2plugin_8c_1a13b6764a993ba40c647b16bda85569f9" kindref="member">lilv_plugin_load_if_necessary</ref>(p);</highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/>doap_maintainer<sp/>=<sp/><ref refid="group__sord_1ga6cee4ab8de97cd6bca7e1587c837fdbf" kindref="member">sord_new_uri</ref>(</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>-&gt;<ref refid="struct_lilv_world_impl_1a568e68967d35a64821393e5015e826cf" kindref="member">world</ref>,<sp/><ref refid="lv2_2lilv_2src_2plugin_8c_1a3d8bbfa3c0bf8537d68d439b4227250d" kindref="member">NS_DOAP</ref><sp/></highlight><highlight class="stringliteral">&quot;maintainer&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_sord_iter_impl" kindref="compound">SordIter</ref>*<sp/>maintainers<sp/>=<sp/><ref refid="lilv__internal_8h_1a1c426e96d5bb76a0fdda6a7afe19a49a" kindref="member">lilv_world_query_internal</ref>(</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>,</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ab292523dd2e272ac3bedee38d750c955" kindref="member">plugin_uri</ref>-&gt;<ref refid="struct_lilv_node_impl_1a10b31ad2e47d09fcb23089c5706e84c0" kindref="member">node</ref>,</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doap_maintainer,</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__sord_1ga287f3764973d96c2f1df566abf569f5e" kindref="member">sord_iter_end</ref>(maintainers))<sp/>{</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sord_1ga6450c3214e90ffffc47f756e66d66037" kindref="member">sord_iter_free</ref>(maintainers);</highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*<sp/>project<sp/>=<sp/><ref refid="group__lilv_1ga72e18ca0c04b2f6b73910309d4ed7527" kindref="member">lilv_plugin_get_project</ref>(p);</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!project)<sp/>{</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sord_1ga89d2f20cde1d09361a73f596ba45b57f" kindref="member">sord_node_free</ref>(p-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>-&gt;<ref refid="struct_lilv_world_impl_1a568e68967d35a64821393e5015e826cf" kindref="member">world</ref>,<sp/>doap_maintainer);</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maintainers<sp/>=<sp/><ref refid="lilv__internal_8h_1a1c426e96d5bb76a0fdda6a7afe19a49a" kindref="member">lilv_world_query_internal</ref>(</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>,</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>project-&gt;<ref refid="struct_lilv_node_impl_1a10b31ad2e47d09fcb23089c5706e84c0" kindref="member">node</ref>,</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doap_maintainer,</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lilv_1gaf4677b15cf1df3ef833f7ef4b6a7511e" kindref="member">lilv_node_free</ref>(project);</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sord_1ga89d2f20cde1d09361a73f596ba45b57f" kindref="member">sord_node_free</ref>(p-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>-&gt;<ref refid="struct_lilv_world_impl_1a568e68967d35a64821393e5015e826cf" kindref="member">world</ref>,<sp/>doap_maintainer);</highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__sord_1ga287f3764973d96c2f1df566abf569f5e" kindref="member">sord_iter_end</ref>(maintainers))<sp/>{</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sord_1ga6450c3214e90ffffc47f756e66d66037" kindref="member">sord_iter_free</ref>(maintainers);</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/>author<sp/>=<sp/><ref refid="group__sord_1ga34db8db692181aca9ffc5506861f95cd" kindref="member">sord_iter_get_node</ref>(maintainers,<sp/><ref refid="group__sord_1ggad8ed181fe76f9085ba4188988527c633a42de0f7687921dc2cd840a122636ff13" kindref="member">SORD_OBJECT</ref>);</highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sord_1ga6450c3214e90ffffc47f756e66d66037" kindref="member">sord_iter_free</ref>(maintainers);</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>author;</highlight></codeline>
<codeline lineno="855"><highlight class="normal">}</highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*</highlight></codeline>
<codeline lineno="858" refid="group__lilv_1ga48685f055adfb693ac7a46a7ea380567" refkind="member"><highlight class="normal"><ref refid="group__lilv_1ga48685f055adfb693ac7a46a7ea380567" kindref="member">lilv_plugin_get_author_name</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_plugin_impl" kindref="compound">LilvPlugin</ref>*<sp/>plugin)</highlight></codeline>
<codeline lineno="859"><highlight class="normal">{</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/>author<sp/>=<sp/>lilv_plugin_get_author(plugin);</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(author)<sp/>{</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_sord_world_impl" kindref="compound">SordWorld</ref>*<sp/>sworld<sp/><sp/><sp/><sp/>=<sp/>plugin-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>-&gt;<ref refid="struct_lilv_world_impl_1a568e68967d35a64821393e5015e826cf" kindref="member">world</ref>;</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/><sp/>foaf_name<sp/>=<sp/><ref refid="group__sord_1ga6cee4ab8de97cd6bca7e1587c837fdbf" kindref="member">sord_new_uri</ref>(sworld,<sp/><ref refid="lv2_2lilv_2src_2plugin_8c_1a7b66076ac2df641192b1c2a32c3733a3" kindref="member">NS_FOAF</ref><sp/></highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*<sp/><sp/>ret<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>lilv_plugin_get_one(plugin,<sp/>author,<sp/>foaf_name);</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sord_1ga89d2f20cde1d09361a73f596ba45b57f" kindref="member">sord_node_free</ref>(sworld,<sp/>foaf_name);</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="869"><highlight class="normal">}</highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*</highlight></codeline>
<codeline lineno="872" refid="group__lilv_1ga284e297b4b0701f09b595e90d4c2b901" refkind="member"><highlight class="normal"><ref refid="group__lilv_1ga284e297b4b0701f09b595e90d4c2b901" kindref="member">lilv_plugin_get_author_email</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_plugin_impl" kindref="compound">LilvPlugin</ref>*<sp/>plugin)</highlight></codeline>
<codeline lineno="873"><highlight class="normal">{</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/>author<sp/>=<sp/>lilv_plugin_get_author(plugin);</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(author)<sp/>{</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_sord_world_impl" kindref="compound">SordWorld</ref>*<sp/>sworld<sp/><sp/><sp/><sp/>=<sp/>plugin-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>-&gt;<ref refid="struct_lilv_world_impl_1a568e68967d35a64821393e5015e826cf" kindref="member">world</ref>;</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/><sp/>foaf_mbox<sp/>=<sp/><ref refid="group__sord_1ga6cee4ab8de97cd6bca7e1587c837fdbf" kindref="member">sord_new_uri</ref>(sworld,<sp/><ref refid="lv2_2lilv_2src_2plugin_8c_1a7b66076ac2df641192b1c2a32c3733a3" kindref="member">NS_FOAF</ref><sp/></highlight><highlight class="stringliteral">&quot;mbox&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*<sp/><sp/>ret<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>lilv_plugin_get_one(plugin,<sp/>author,<sp/>foaf_mbox);</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sord_1ga89d2f20cde1d09361a73f596ba45b57f" kindref="member">sord_node_free</ref>(sworld,<sp/>foaf_mbox);</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="883"><highlight class="normal">}</highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*</highlight></codeline>
<codeline lineno="886" refid="group__lilv_1ga0786d4642a8e15c74019f05a71381524" refkind="member"><highlight class="normal"><ref refid="group__lilv_1ga0786d4642a8e15c74019f05a71381524" kindref="member">lilv_plugin_get_author_homepage</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_plugin_impl" kindref="compound">LilvPlugin</ref>*<sp/>plugin)</highlight></codeline>
<codeline lineno="887"><highlight class="normal">{</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/>author<sp/>=<sp/>lilv_plugin_get_author(plugin);</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(author)<sp/>{</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_sord_world_impl" kindref="compound">SordWorld</ref>*<sp/>sworld<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>plugin-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>-&gt;<ref refid="struct_lilv_world_impl_1a568e68967d35a64821393e5015e826cf" kindref="member">world</ref>;</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/><sp/>foaf_homepage<sp/>=<sp/><ref refid="group__sord_1ga6cee4ab8de97cd6bca7e1587c837fdbf" kindref="member">sord_new_uri</ref>(sworld,<sp/><ref refid="lv2_2lilv_2src_2plugin_8c_1a7b66076ac2df641192b1c2a32c3733a3" kindref="member">NS_FOAF</ref><sp/></highlight><highlight class="stringliteral">&quot;homepage&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*<sp/><sp/>ret<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>lilv_plugin_get_one(plugin,<sp/>author,<sp/>foaf_homepage);</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sord_1ga89d2f20cde1d09361a73f596ba45b57f" kindref="member">sord_node_free</ref>(sworld,<sp/>foaf_homepage);</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="897"><highlight class="normal">}</highlight></codeline>
<codeline lineno="898"><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="900" refid="group__lilv_1gad4bff1e2e6b3db77cc2a5c43704d6cf3" refkind="member"><highlight class="normal"><ref refid="group__lilv_1gad4bff1e2e6b3db77cc2a5c43704d6cf3" kindref="member">lilv_plugin_is_replaced</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_plugin_impl" kindref="compound">LilvPlugin</ref>*<sp/>plugin)</highlight></codeline>
<codeline lineno="901"><highlight class="normal">{</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>plugin-&gt;<ref refid="struct_lilv_plugin_impl_1aa1c8afaa2542c54f9dfd821d118fe7d4" kindref="member">replaced</ref>;</highlight></codeline>
<codeline lineno="903"><highlight class="normal">}</highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref><sp/><ref refid="lilv_8h_1af0d073c97d807e531f174ce2ee1b5492" kindref="member">LilvUIs</ref>*</highlight></codeline>
<codeline lineno="906" refid="group__lilv_1ga420636169dd115cf90b2e136309bbca0" refkind="member"><highlight class="normal"><ref refid="group__lilv_1ga420636169dd115cf90b2e136309bbca0" kindref="member">lilv_plugin_get_uis</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_plugin_impl" kindref="compound">LilvPlugin</ref>*<sp/>p)</highlight></codeline>
<codeline lineno="907"><highlight class="normal">{</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv2_2lilv_2src_2plugin_8c_1a13b6764a993ba40c647b16bda85569f9" kindref="member">lilv_plugin_load_if_necessary</ref>(p);</highlight></codeline>
<codeline lineno="909"><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/>ui_ui_node<sp/>=<sp/><ref refid="group__sord_1ga6cee4ab8de97cd6bca7e1587c837fdbf" kindref="member">sord_new_uri</ref>(p-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>-&gt;<ref refid="struct_lilv_world_impl_1a568e68967d35a64821393e5015e826cf" kindref="member">world</ref>,</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*)<ref refid="ui_8h_1a90f847b10d0ad1446500709ec734074a" kindref="member">LV2_UI__ui</ref>);</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/>ui_binary_node<sp/>=<sp/><ref refid="group__sord_1ga6cee4ab8de97cd6bca7e1587c837fdbf" kindref="member">sord_new_uri</ref>(p-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>-&gt;<ref refid="struct_lilv_world_impl_1a568e68967d35a64821393e5015e826cf" kindref="member">world</ref>,</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*)<ref refid="ui_8h_1ad85c2d8a1a9c38274604020ff010de0a" kindref="member">LV2_UI__binary</ref>);</highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilv_8h_1af0d073c97d807e531f174ce2ee1b5492" kindref="member">LilvUIs</ref>*<sp/><sp/>result<sp/>=<sp/><ref refid="collections_8c_1a680114ab41bc8c833ba89b8968a2e2c0" kindref="member">lilv_uis_new</ref>();</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_sord_iter_impl" kindref="compound">SordIter</ref>*<sp/>uis<sp/><sp/><sp/><sp/>=<sp/><ref refid="lilv__internal_8h_1a1c426e96d5bb76a0fdda6a7afe19a49a" kindref="member">lilv_world_query_internal</ref>(p-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>,</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ab292523dd2e272ac3bedee38d750c955" kindref="member">plugin_uri</ref>-&gt;<ref refid="struct_lilv_node_impl_1a10b31ad2e47d09fcb23089c5706e84c0" kindref="member">node</ref>,</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ui_ui_node,</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="920"><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilv__internal_8h_1a6956468cfb2a38060d841422d84b72a2" kindref="member">FOREACH_MATCH</ref>(uis)<sp/>{</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_sord_node_impl" kindref="compound">SordNode</ref>*<sp/>ui<sp/>=<sp/><ref refid="group__sord_1ga34db8db692181aca9ffc5506861f95cd" kindref="member">sord_iter_get_node</ref>(uis,<sp/><ref refid="group__sord_1ggad8ed181fe76f9085ba4188988527c633a42de0f7687921dc2cd840a122636ff13" kindref="member">SORD_OBJECT</ref>);</highlight></codeline>
<codeline lineno="923"><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*<sp/><ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref><sp/><sp/><sp/>=<sp/><ref refid="lv2_2lilv_2src_2plugin_8c_1aa4727d157ee7d9a0f4fa3323d5d6ad9f" kindref="member">lilv_plugin_get_unique</ref>(p,<sp/>ui,<sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>-&gt;<ref refid="struct_lilv_world_impl_1a24b83785b1723099aabccb42c697954e" kindref="member">uris</ref>.<ref refid="struct_lilv_world_impl_1aca23d16c84c357ca521a95eb447d5a59" kindref="member">rdf_a</ref>);</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*<sp/><ref refid="xlmath_8c_1a810b4a27ed7a208ef6bf65d9551dbd7f" kindref="member">binary</ref><sp/>=<sp/><ref refid="lv2_2lilv_2src_2plugin_8c_1aa4727d157ee7d9a0f4fa3323d5d6ad9f" kindref="member">lilv_plugin_get_unique</ref>(p,<sp/>ui,<sp/>ui_binary_node);</highlight></codeline>
<codeline lineno="926"><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__sord_1ga34de2b7b44fbd614e7831c9c1b6d114e" kindref="member">sord_node_get_type</ref>(ui)<sp/>!=<sp/><ref refid="group__sord_1gga69e82f5abb700cfbde0c9ee8d3574154a7335bbadcb5084cedd7957d7d772aaa5" kindref="member">SORD_URI</ref></highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>!<ref refid="group__lilv_1gafda5218468031732560fb468e78d18e4" kindref="member">lilv_node_is_uri</ref>(type)</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>!<ref refid="group__lilv_1gafda5218468031732560fb468e78d18e4" kindref="member">lilv_node_is_uri</ref>(binary))<sp/>{</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lilv_1gaf4677b15cf1df3ef833f7ef4b6a7511e" kindref="member">lilv_node_free</ref>(binary);</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lilv_1gaf4677b15cf1df3ef833f7ef4b6a7511e" kindref="member">lilv_node_free</ref>(type);</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lilv__internal_8h_1acc82b20fe084dcdaae2eb95863d320b8" kindref="member">LILV_ERRORF</ref>(</highlight><highlight class="stringliteral">&quot;Corrupt<sp/>UI<sp/>&lt;%s&gt;\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__sord_1gaaac09d1114d46785f01bed6e48728c18" kindref="member">sord_node_get_string</ref>(ui));</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="935"><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_lilv_u_i_impl" kindref="compound">LilvUI</ref>*<sp/>lilv_ui<sp/>=<sp/><ref refid="lilv__internal_8h_1aec1715d7c454819931f612d0d912e4d7" kindref="member">lilv_ui_new</ref>(</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>,</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lilv__internal_8h_1ab85cc3ce5e142d7141219b15353ee671" kindref="member">lilv_node_new_from_node</ref>(p-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>,<sp/>ui),</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type,</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>binary);</highlight></codeline>
<codeline lineno="941"><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__zix_1gabbf32f6bf3dd802fd36af7ac17cee87c" kindref="member">zix_tree_insert</ref>((<ref refid="struct_zix_tree_impl" kindref="compound">ZixTree</ref>*)result,<sp/>lilv_ui,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sord_1ga6450c3214e90ffffc47f756e66d66037" kindref="member">sord_iter_free</ref>(uis);</highlight></codeline>
<codeline lineno="945"><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sord_1ga89d2f20cde1d09361a73f596ba45b57f" kindref="member">sord_node_free</ref>(p-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>-&gt;<ref refid="struct_lilv_world_impl_1a568e68967d35a64821393e5015e826cf" kindref="member">world</ref>,<sp/>ui_binary_node);</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sord_1ga89d2f20cde1d09361a73f596ba45b57f" kindref="member">sord_node_free</ref>(p-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>-&gt;<ref refid="struct_lilv_world_impl_1a568e68967d35a64821393e5015e826cf" kindref="member">world</ref>,<sp/>ui_ui_node);</highlight></codeline>
<codeline lineno="948"><highlight class="normal"></highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__lilv_1ga1ce4a09a22d08ef940b67f151a1894fb" kindref="member">lilv_uis_size</ref>(result)<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lilv_1ga938f9a32ad1d4c9f8e83d21802764ba2" kindref="member">lilv_uis_free</ref>(result);</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="955"><highlight class="normal">}</highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref><sp/><ref refid="lilv_8h_1a256c2c4443307f320de24bb31198df83" kindref="member">LilvNodes</ref>*</highlight></codeline>
<codeline lineno="958" refid="group__lilv_1ga6070a384fbd949ec78ae7a8e323139f9" refkind="member"><highlight class="normal"><ref refid="group__lilv_1ga6070a384fbd949ec78ae7a8e323139f9" kindref="member">lilv_plugin_get_related</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_plugin_impl" kindref="compound">LilvPlugin</ref>*<sp/>plugin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*<sp/><ref refid="namespacewaflib_1_1_tools_1_1tex_1a7638d43e3ce55594540ea118202a9a40" kindref="member">type</ref>)</highlight></codeline>
<codeline lineno="959"><highlight class="normal">{</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lv2_2lilv_2src_2plugin_8c_1a13b6764a993ba40c647b16bda85569f9" kindref="member">lilv_plugin_load_if_necessary</ref>(plugin);</highlight></codeline>
<codeline lineno="961"><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lilv_world_impl" kindref="compound">LilvWorld</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacelv2__list_1a39bc711f56fd3393bf9013f08a1e5719" kindref="member">world</ref><sp/><sp/><sp/>=<sp/>plugin-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>;</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilv_8h_1a256c2c4443307f320de24bb31198df83" kindref="member">LilvNodes</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>related<sp/>=<sp/><ref refid="lilv__internal_8h_1ad6757c19986471a3b01eea6ff4fff1dd" kindref="member">lilv_world_find_nodes_internal</ref>(</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>world,</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>world-&gt;<ref refid="struct_lilv_world_impl_1a24b83785b1723099aabccb42c697954e" kindref="member">uris</ref>.<ref refid="struct_lilv_world_impl_1a11cff0a5cca4c0572a67089c45742266" kindref="member">lv2_appliesTo</ref>,</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lilv_1gaa462f4594d361e5a79e56f70c1f04d02" kindref="member">lilv_plugin_get_uri</ref>(plugin)-&gt;<ref refid="structnode" kindref="compound">node</ref>);</highlight></codeline>
<codeline lineno="968"><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!type)<sp/>{</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>related;</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="972"><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilv_8h_1a256c2c4443307f320de24bb31198df83" kindref="member">LilvNodes</ref>*<sp/>matches<sp/>=<sp/><ref refid="collections_8c_1ad85dc561f7c943b545dafd49755a8a5c" kindref="member">lilv_nodes_new</ref>();</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__lilv_1gad4848f8348d22d0cfa659ba7ed6ea1b5" kindref="member">LILV_FOREACH</ref>(nodes,<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/>related)<sp/>{</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*<sp/><ref refid="structnode" kindref="compound">node</ref><sp/><sp/>=<sp/>(<ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*)<ref refid="collections_8c_1a9d7d8d5ecf29d39a598e3ef6cd5b4e33" kindref="member">lilv_collection_get</ref>((<ref refid="struct_zix_tree_impl" kindref="compound">ZixTree</ref>*)related,<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>);</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="lilv__internal_8h_1a81c6fce0807aec85ff73746b9005db5f" kindref="member">lilv_world_ask_internal</ref>(</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>world,<sp/>node-&gt;<ref refid="struct_lilv_node_impl_1a10b31ad2e47d09fcb23089c5706e84c0" kindref="member">node</ref>,<sp/>world-&gt;<ref refid="struct_lilv_world_impl_1a24b83785b1723099aabccb42c697954e" kindref="member">uris</ref>.<ref refid="struct_lilv_world_impl_1aca23d16c84c357ca521a95eb447d5a59" kindref="member">rdf_a</ref>,<sp/>type-&gt;<ref refid="struct_lilv_node_impl_1a10b31ad2e47d09fcb23089c5706e84c0" kindref="member">node</ref>))<sp/>{</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__zix_1gabbf32f6bf3dd802fd36af7ac17cee87c" kindref="member">zix_tree_insert</ref>((<ref refid="struct_zix_tree_impl" kindref="compound">ZixTree</ref>*)matches,</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lilv__internal_8h_1ab85cc3ce5e142d7141219b15353ee671" kindref="member">lilv_node_new_from_node</ref>(world,<sp/>node-&gt;<ref refid="struct_lilv_node_impl_1a10b31ad2e47d09fcb23089c5706e84c0" kindref="member">node</ref>),</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="983"><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__lilv_1gac355adeca3dc54366899b6f1ef3b0fc3" kindref="member">lilv_nodes_free</ref>(related);</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>matches;</highlight></codeline>
<codeline lineno="986"><highlight class="normal">}</highlight></codeline>
<codeline lineno="987"><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="struct_serd_env_impl" kindref="compound">SerdEnv</ref>*</highlight></codeline>
<codeline lineno="989"><highlight class="normal">new_lv2_env(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/><ref refid="lib_2expat_8h_1a938e186c531ea86ae9adf3c0a649d8fc" kindref="member">base</ref>)</highlight></codeline>
<codeline lineno="990"><highlight class="normal">{</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_serd_env_impl" kindref="compound">SerdEnv</ref>*<sp/>env<sp/>=<sp/><ref refid="group__serd_1ga64ffdd637dad39a2483e727125c2c285" kindref="member">serd_env_new</ref>(base);</highlight></codeline>
<codeline lineno="992"><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>USTR(s)<sp/>((const<sp/>uint8_t*)s)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__serd_1gac41d573e81de34506463612e0c464889" kindref="member">serd_env_set_prefix_from_strings</ref>(env,<sp/><ref refid="lv2_2lilv_2src_2plugin_8c_1a0fa8d3bb0cc514136f489b0723cdb9d6" kindref="member">USTR</ref>(</highlight><highlight class="stringliteral">&quot;doap&quot;</highlight><highlight class="normal">),<sp/><ref refid="lv2_2lilv_2src_2plugin_8c_1a0fa8d3bb0cc514136f489b0723cdb9d6" kindref="member">USTR</ref>(<ref refid="lilv_8h_1a4bd379bc7d0f09bfe39f3e23c9fd17f8" kindref="member">LILV_NS_DOAP</ref>));</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__serd_1gac41d573e81de34506463612e0c464889" kindref="member">serd_env_set_prefix_from_strings</ref>(env,<sp/><ref refid="lv2_2lilv_2src_2plugin_8c_1a0fa8d3bb0cc514136f489b0723cdb9d6" kindref="member">USTR</ref>(</highlight><highlight class="stringliteral">&quot;foaf&quot;</highlight><highlight class="normal">),<sp/><ref refid="lv2_2lilv_2src_2plugin_8c_1a0fa8d3bb0cc514136f489b0723cdb9d6" kindref="member">USTR</ref>(<ref refid="lilv_8h_1a82ff8f441fac609e842a9d4f9058accd" kindref="member">LILV_NS_FOAF</ref>));</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__serd_1gac41d573e81de34506463612e0c464889" kindref="member">serd_env_set_prefix_from_strings</ref>(env,<sp/><ref refid="lv2_2lilv_2src_2plugin_8c_1a0fa8d3bb0cc514136f489b0723cdb9d6" kindref="member">USTR</ref>(</highlight><highlight class="stringliteral">&quot;lv2&quot;</highlight><highlight class="normal">),<sp/><sp/><ref refid="lv2_2lilv_2src_2plugin_8c_1a0fa8d3bb0cc514136f489b0723cdb9d6" kindref="member">USTR</ref>(<ref refid="lilv_8h_1aeda02bb486dd5bfe8976573d2a973b16" kindref="member">LILV_NS_LV2</ref>));</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__serd_1gac41d573e81de34506463612e0c464889" kindref="member">serd_env_set_prefix_from_strings</ref>(env,<sp/><ref refid="lv2_2lilv_2src_2plugin_8c_1a0fa8d3bb0cc514136f489b0723cdb9d6" kindref="member">USTR</ref>(</highlight><highlight class="stringliteral">&quot;owl&quot;</highlight><highlight class="normal">),<sp/><sp/><ref refid="lv2_2lilv_2src_2plugin_8c_1a0fa8d3bb0cc514136f489b0723cdb9d6" kindref="member">USTR</ref>(<ref refid="lilv_8h_1a92ee11ec942babcf1e6ff2bb577ed1c0" kindref="member">LILV_NS_OWL</ref>));</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__serd_1gac41d573e81de34506463612e0c464889" kindref="member">serd_env_set_prefix_from_strings</ref>(env,<sp/><ref refid="lv2_2lilv_2src_2plugin_8c_1a0fa8d3bb0cc514136f489b0723cdb9d6" kindref="member">USTR</ref>(</highlight><highlight class="stringliteral">&quot;rdf&quot;</highlight><highlight class="normal">),<sp/><sp/><ref refid="lv2_2lilv_2src_2plugin_8c_1a0fa8d3bb0cc514136f489b0723cdb9d6" kindref="member">USTR</ref>(<ref refid="lilv_8h_1a79bfbd6176ec4d579e3041f5c2b277c0" kindref="member">LILV_NS_RDF</ref>));</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__serd_1gac41d573e81de34506463612e0c464889" kindref="member">serd_env_set_prefix_from_strings</ref>(env,<sp/><ref refid="lv2_2lilv_2src_2plugin_8c_1a0fa8d3bb0cc514136f489b0723cdb9d6" kindref="member">USTR</ref>(</highlight><highlight class="stringliteral">&quot;rdfs&quot;</highlight><highlight class="normal">),<sp/><ref refid="lv2_2lilv_2src_2plugin_8c_1a0fa8d3bb0cc514136f489b0723cdb9d6" kindref="member">USTR</ref>(<ref refid="lilv_8h_1a78c00b9b872b1d1f50f40209cf773964" kindref="member">LILV_NS_RDFS</ref>));</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__serd_1gac41d573e81de34506463612e0c464889" kindref="member">serd_env_set_prefix_from_strings</ref>(env,<sp/><ref refid="lv2_2lilv_2src_2plugin_8c_1a0fa8d3bb0cc514136f489b0723cdb9d6" kindref="member">USTR</ref>(</highlight><highlight class="stringliteral">&quot;xsd&quot;</highlight><highlight class="normal">),<sp/><sp/><ref refid="lv2_2lilv_2src_2plugin_8c_1a0fa8d3bb0cc514136f489b0723cdb9d6" kindref="member">USTR</ref>(<ref refid="lilv_8h_1ac9648dceae337e131ab8b692bac360b1" kindref="member">LILV_NS_XSD</ref>));</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>env;</highlight></codeline>
<codeline lineno="1003"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal">maybe_write_prefixes(<ref refid="struct_serd_writer_impl" kindref="compound">SerdWriter</ref>*<sp/>writer,<sp/><ref refid="struct_serd_env_impl" kindref="compound">SerdEnv</ref>*<sp/>env,<sp/>FILE*<sp/>file)</highlight></codeline>
<codeline lineno="1007"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/>fseek(file,<sp/>0,<sp/>SEEK_END);</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ftell(file)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__serd_1ga4e179ef13f5ad5ec23ff0b9b9d944c8e" kindref="member">serd_env_foreach</ref>(</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env,<sp/>(<ref refid="group__serd_1ga692f0bbdf5e2576191ee3556ecde7d55" kindref="member">SerdPrefixSink</ref>)<ref refid="group__serd_1gae850607b6b240aea9d3676b1230c3c63" kindref="member">serd_writer_set_prefix</ref>,<sp/>writer);</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(file,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1015"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1018" refid="group__lilv_1gab1c58f561dd59b2688a3d50fb7c51d55" refkind="member"><highlight class="normal"><ref refid="group__lilv_1gab1c58f561dd59b2688a3d50fb7c51d55" kindref="member">lilv_plugin_write_description</ref>(<ref refid="struct_lilv_world_impl" kindref="compound">LilvWorld</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacelv2__list_1a39bc711f56fd3393bf9013f08a1e5719" kindref="member">world</ref>,</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_plugin_impl" kindref="compound">LilvPlugin</ref>*<sp/>plugin,</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*<sp/><sp/><sp/>base_uri,</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plugin_file)</highlight></codeline>
<codeline lineno="1022"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*<sp/>subject<sp/><sp/><sp/>=<sp/><ref refid="group__lilv_1gaa462f4594d361e5a79e56f70c1f04d02" kindref="member">lilv_plugin_get_uri</ref>(plugin);</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref><sp/><sp/>num_ports<sp/>=<sp/><ref refid="group__lilv_1gafcd5012a82daecb65b476d9b3152de96" kindref="member">lilv_plugin_get_num_ports</ref>(plugin);</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/>base<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="group__sord_1ga497e0859abcc9e6e39c5bcbfcc7c9f70" kindref="member">sord_node_to_serd_node</ref>(base_uri-&gt;<ref refid="struct_lilv_node_impl_1a10b31ad2e47d09fcb23089c5706e84c0" kindref="member">node</ref>);</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_serd_env_impl" kindref="compound">SerdEnv</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>new_lv2_env(base);</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"></highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_serd_writer_impl" kindref="compound">SerdWriter</ref>*<sp/>writer<sp/>=<sp/><ref refid="group__serd_1gae87f48adca211a7fa2c0432e9ba68d29" kindref="member">serd_writer_new</ref>(</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__serd_1gga42683406fcfa9046b28dd951cefd3391a4acfee57d17213dcb55e94c55a4fd78e" kindref="member">SERD_TURTLE</ref>,</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="group__serd_1gae51da58ac1f1886c75ee2326495daeb2" kindref="member">SerdStyle</ref>)(<ref refid="group__serd_1ggae51da58ac1f1886c75ee2326495daeb2aa69f36bfcb18a88f514d5a763f8daaad" kindref="member">SERD_STYLE_ABBREVIATED</ref>|<ref refid="group__serd_1ggae51da58ac1f1886c75ee2326495daeb2a765d540f7a2e3dd87d57fa641c0a8488" kindref="member">SERD_STYLE_CURIED</ref>),</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env,</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__serd_1ga08303ceed3102e9fe2ae6bf39eb5b0ff" kindref="member">serd_file_sink</ref>,</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>plugin_file);</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"></highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>prefixes<sp/>if<sp/>this<sp/>is<sp/>a<sp/>new<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/>maybe_write_prefixes(writer,<sp/>env,<sp/>plugin_file);</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>plugin<sp/>description</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_sord_iter_impl" kindref="compound">SordIter</ref>*<sp/>plug_iter<sp/>=<sp/><ref refid="lilv__internal_8h_1a1c426e96d5bb76a0fdda6a7afe19a49a" kindref="member">lilv_world_query_internal</ref>(</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>world,<sp/>subject-&gt;<ref refid="struct_lilv_node_impl_1a10b31ad2e47d09fcb23089c5706e84c0" kindref="member">node</ref>,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__sord_1gab77fdaf578d114d670e4823a366aa039" kindref="member">sord_write_iter</ref>(plug_iter,<sp/>writer);</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"></highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>port<sp/>descriptions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/>num_ports;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_port_impl" kindref="compound">LilvPort</ref>*<sp/>port<sp/>=<sp/>plugin-&gt;<ref refid="struct_lilv_plugin_impl_1ab047415ad765783ae57fbe31cdf9249e" kindref="member">ports</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_sord_iter_impl" kindref="compound">SordIter</ref>*<sp/>port_iter<sp/>=<sp/><ref refid="lilv__internal_8h_1a1c426e96d5bb76a0fdda6a7afe19a49a" kindref="member">lilv_world_query_internal</ref>(</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>world,<sp/>port-&gt;<ref refid="struct_lilv_port_impl_1a70e1a3f6bc29957faff7a2d1068c1a3b" kindref="member">node</ref>-&gt;<ref refid="struct_lilv_node_impl_1a10b31ad2e47d09fcb23089c5706e84c0" kindref="member">node</ref>,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sord_1gab77fdaf578d114d670e4823a366aa039" kindref="member">sord_write_iter</ref>(port_iter,<sp/>writer);</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"></highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__serd_1ga50c06e138081328c46e9dfa593814f73" kindref="member">serd_writer_free</ref>(writer);</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__serd_1ga09d49846b7fc7dbd9a4c0fdc1e84e915" kindref="member">serd_env_free</ref>(env);</highlight></codeline>
<codeline lineno="1054"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1057" refid="group__lilv_1ga240e433315f29cf81de98904910d501d" refkind="member"><highlight class="normal"><ref refid="group__lilv_1ga240e433315f29cf81de98904910d501d" kindref="member">lilv_plugin_write_manifest_entry</ref>(<ref refid="struct_lilv_world_impl" kindref="compound">LilvWorld</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacelv2__list_1a39bc711f56fd3393bf9013f08a1e5719" kindref="member">world</ref>,</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_plugin_impl" kindref="compound">LilvPlugin</ref>*<sp/>plugin,</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*<sp/><sp/><sp/>base_uri,</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FILE*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>manifest_file,</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>plugin_file_path)</highlight></codeline>
<codeline lineno="1062"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*<sp/>subject<sp/>=<sp/><ref refid="group__lilv_1gaa462f4594d361e5a79e56f70c1f04d02" kindref="member">lilv_plugin_get_uri</ref>(plugin);</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref>*<sp/>base<sp/><sp/><sp/><sp/>=<sp/><ref refid="group__sord_1ga497e0859abcc9e6e39c5bcbfcc7c9f70" kindref="member">sord_node_to_serd_node</ref>(base_uri-&gt;<ref refid="struct_lilv_node_impl_1a10b31ad2e47d09fcb23089c5706e84c0" kindref="member">node</ref>);</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_serd_env_impl" kindref="compound">SerdEnv</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env<sp/><sp/><sp/><sp/><sp/>=<sp/>new_lv2_env(base);</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_serd_writer_impl" kindref="compound">SerdWriter</ref>*<sp/>writer<sp/>=<sp/><ref refid="group__serd_1gae87f48adca211a7fa2c0432e9ba68d29" kindref="member">serd_writer_new</ref>(</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__serd_1gga42683406fcfa9046b28dd951cefd3391a4acfee57d17213dcb55e94c55a4fd78e" kindref="member">SERD_TURTLE</ref>,</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="group__serd_1gae51da58ac1f1886c75ee2326495daeb2" kindref="member">SerdStyle</ref>)(<ref refid="group__serd_1ggae51da58ac1f1886c75ee2326495daeb2aa69f36bfcb18a88f514d5a763f8daaad" kindref="member">SERD_STYLE_ABBREVIATED</ref>|<ref refid="group__serd_1ggae51da58ac1f1886c75ee2326495daeb2a765d540f7a2e3dd87d57fa641c0a8488" kindref="member">SERD_STYLE_CURIED</ref>),</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>env,</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__serd_1ga08303ceed3102e9fe2ae6bf39eb5b0ff" kindref="member">serd_file_sink</ref>,</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>manifest_file);</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>prefixes<sp/>if<sp/>this<sp/>is<sp/>a<sp/>new<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/>maybe_write_prefixes(writer,<sp/>env,<sp/>manifest_file);</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Write<sp/>manifest<sp/>entry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__serd_1ga0c055816f6eb769e55128701402e68b4" kindref="member">serd_writer_write_statement</ref>(</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer,<sp/>0,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sord_1ga497e0859abcc9e6e39c5bcbfcc7c9f70" kindref="member">sord_node_to_serd_node</ref>(subject-&gt;<ref refid="struct_lilv_node_impl_1a10b31ad2e47d09fcb23089c5706e84c0" kindref="member">node</ref>),</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sord_1ga497e0859abcc9e6e39c5bcbfcc7c9f70" kindref="member">sord_node_to_serd_node</ref>(plugin-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>-&gt;<ref refid="struct_lilv_world_impl_1a24b83785b1723099aabccb42c697954e" kindref="member">uris</ref>.<ref refid="struct_lilv_world_impl_1aca23d16c84c357ca521a95eb447d5a59" kindref="member">rdf_a</ref>),</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sord_1ga497e0859abcc9e6e39c5bcbfcc7c9f70" kindref="member">sord_node_to_serd_node</ref>(plugin-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>-&gt;<ref refid="struct_lilv_world_impl_1a24b83785b1723099aabccb42c697954e" kindref="member">uris</ref>.<ref refid="struct_lilv_world_impl_1a6338b09cafac32b69077b76c08be02a5" kindref="member">lv2_Plugin</ref>),<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"></highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref><sp/>file_node<sp/>=<sp/><ref refid="group__serd_1gae76caf1b4e7a6465c9cb73ec11f568ea" kindref="member">serd_node_from_string</ref>(</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__serd_1gga7ccd8d4fb2c3a6ad690ed6d6fe1b45faa7c01ef6de89d3245d4aed20da0736d24" kindref="member">SERD_URI</ref>,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*)plugin_file_path);</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__serd_1ga0c055816f6eb769e55128701402e68b4" kindref="member">serd_writer_write_statement</ref>(</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writer,<sp/>0,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sord_1ga497e0859abcc9e6e39c5bcbfcc7c9f70" kindref="member">sord_node_to_serd_node</ref>(subject-&gt;<ref refid="struct_lilv_node_impl_1a10b31ad2e47d09fcb23089c5706e84c0" kindref="member">node</ref>),</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__sord_1ga497e0859abcc9e6e39c5bcbfcc7c9f70" kindref="member">sord_node_to_serd_node</ref>(plugin-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>-&gt;<ref refid="struct_lilv_world_impl_1a24b83785b1723099aabccb42c697954e" kindref="member">uris</ref>.<ref refid="struct_lilv_world_impl_1ae3f0e317dc158f7f5adc8b97116765f8" kindref="member">rdfs_seeAlso</ref>),</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;file_node,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"></highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__serd_1ga50c06e138081328c46e9dfa593814f73" kindref="member">serd_writer_free</ref>(writer);</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__serd_1ga09d49846b7fc7dbd9a4c0fdc1e84e915" kindref="member">serd_env_free</ref>(env);</highlight></codeline>
<codeline lineno="1095"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/plugin.c"/>
  </compounddef>
</doxygen>
