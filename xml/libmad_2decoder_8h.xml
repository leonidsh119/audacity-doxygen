<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="libmad_2decoder_8h" kind="file" language="C++">
    <compoundname>decoder.h</compoundname>
    <includes refid="stream_8h" local="yes">stream.h</includes>
    <includes refid="libmad_2frame_8h" local="yes">frame.h</includes>
    <includes refid="synth_8h" local="yes">synth.h</includes>
    <includedby refid="decoder_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libmad/decoder.c</includedby>
    <incdepgraph>
      <node id="5984">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libmad/decoder.h</label>
        <link refid="libmad/decoder.h"/>
        <childnode refid="5985" relation="include">
        </childnode>
        <childnode refid="5987" relation="include">
        </childnode>
        <childnode refid="5990" relation="include">
        </childnode>
      </node>
      <node id="5987">
        <label>frame.h</label>
        <link refid="libmad_2frame_8h"/>
        <childnode refid="5988" relation="include">
        </childnode>
        <childnode refid="5989" relation="include">
        </childnode>
        <childnode refid="5985" relation="include">
        </childnode>
      </node>
      <node id="5986">
        <label>bit.h</label>
        <link refid="bit_8h"/>
      </node>
      <node id="5985">
        <label>stream.h</label>
        <link refid="stream_8h"/>
        <childnode refid="5986" relation="include">
        </childnode>
      </node>
      <node id="5990">
        <label>synth.h</label>
        <link refid="synth_8h"/>
        <childnode refid="5988" relation="include">
        </childnode>
        <childnode refid="5987" relation="include">
        </childnode>
      </node>
      <node id="5989">
        <label>timer.h</label>
        <link refid="timer_8h"/>
      </node>
      <node id="5988">
        <label>fixed.h</label>
        <link refid="libmad_2fixed_8h"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="5992">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libmad/decoder.c</label>
        <link refid="decoder_8c"/>
      </node>
      <node id="5991">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libmad/decoder.h</label>
        <link refid="libmad/decoder.h"/>
        <childnode refid="5992" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structmad__decoder" prot="public">mad_decoder</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="libmad_2decoder_8h_1a2a3391e2662667e5d49ae280614654ea" prot="public" static="no">
        <name>mad_decoder_options</name>
        <param><defname>decoder</defname></param>
        <param><defname>opts</defname></param>
        <initializer>((<ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref>) ((decoder)-&gt;options = (opts)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libmad/decoder.h" line="85" column="10" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libmad/decoder.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="libmad_2decoder_8h_1a0d55d67e9f9acf69f677f86053e88b6a" prot="public" static="no">
        <name>mad_decoder_mode</name>
        <enumvalue id="libmad_2decoder_8h_1a0d55d67e9f9acf69f677f86053e88b6aa4670478d6f7c6dd89f794e9a87091ac2" prot="public">
          <name>MAD_DECODER_MODE_SYNC</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="libmad_2decoder_8h_1a0d55d67e9f9acf69f677f86053e88b6aa0d44eb0cd37486eb0c2a67342423c8ca" prot="public">
          <name>MAD_DECODER_MODE_ASYNC</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lib-src_2libmad_2msvc_09_09_2mad_8h_1a0d55d67e9f9acf69f677f86053e88b6aa4670478d6f7c6dd89f794e9a87091ac2" prot="public">
          <name>MAD_DECODER_MODE_SYNC</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lib-src_2libmad_2msvc_09_09_2mad_8h_1a0d55d67e9f9acf69f677f86053e88b6aa0d44eb0cd37486eb0c2a67342423c8ca" prot="public">
          <name>MAD_DECODER_MODE_ASYNC</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="mac_2config_2i386_2lib-src_2libmad_2mad_8h_1a0d55d67e9f9acf69f677f86053e88b6aa4670478d6f7c6dd89f794e9a87091ac2" prot="public">
          <name>MAD_DECODER_MODE_SYNC</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="mac_2config_2i386_2lib-src_2libmad_2mad_8h_1a0d55d67e9f9acf69f677f86053e88b6aa0d44eb0cd37486eb0c2a67342423c8ca" prot="public">
          <name>MAD_DECODER_MODE_ASYNC</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libmad/decoder.h" line="29" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libmad/decoder.h" bodystart="29" bodyend="32"/>
      </memberdef>
      <memberdef kind="enum" id="libmad_2decoder_8h_1a665565932de11bfcb75513a8e61543c3" prot="public" static="no">
        <name>mad_flow</name>
        <enumvalue id="libmad_2decoder_8h_1a665565932de11bfcb75513a8e61543c3a11b96bfcdbf1f442b96c664ccca4db75" prot="public">
          <name>MAD_FLOW_CONTINUE</name>
          <initializer>= 0x0000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="libmad_2decoder_8h_1a665565932de11bfcb75513a8e61543c3ac571b8cfa11b3410216ada267dc3cc58" prot="public">
          <name>MAD_FLOW_STOP</name>
          <initializer>= 0x0010</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="libmad_2decoder_8h_1a665565932de11bfcb75513a8e61543c3a4b1ad981b82f16a00a6f045d75b88cf6" prot="public">
          <name>MAD_FLOW_BREAK</name>
          <initializer>= 0x0011</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="libmad_2decoder_8h_1a665565932de11bfcb75513a8e61543c3a68fce20ac0252d77570ce0be605ad87f" prot="public">
          <name>MAD_FLOW_IGNORE</name>
          <initializer>= 0x0020</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lib-src_2libmad_2msvc_09_09_2mad_8h_1a665565932de11bfcb75513a8e61543c3a11b96bfcdbf1f442b96c664ccca4db75" prot="public">
          <name>MAD_FLOW_CONTINUE</name>
          <initializer>= 0x0000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lib-src_2libmad_2msvc_09_09_2mad_8h_1a665565932de11bfcb75513a8e61543c3ac571b8cfa11b3410216ada267dc3cc58" prot="public">
          <name>MAD_FLOW_STOP</name>
          <initializer>= 0x0010</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lib-src_2libmad_2msvc_09_09_2mad_8h_1a665565932de11bfcb75513a8e61543c3a4b1ad981b82f16a00a6f045d75b88cf6" prot="public">
          <name>MAD_FLOW_BREAK</name>
          <initializer>= 0x0011</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="lib-src_2libmad_2msvc_09_09_2mad_8h_1a665565932de11bfcb75513a8e61543c3a68fce20ac0252d77570ce0be605ad87f" prot="public">
          <name>MAD_FLOW_IGNORE</name>
          <initializer>= 0x0020</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="mac_2config_2i386_2lib-src_2libmad_2mad_8h_1a665565932de11bfcb75513a8e61543c3a11b96bfcdbf1f442b96c664ccca4db75" prot="public">
          <name>MAD_FLOW_CONTINUE</name>
          <initializer>= 0x0000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="mac_2config_2i386_2lib-src_2libmad_2mad_8h_1a665565932de11bfcb75513a8e61543c3ac571b8cfa11b3410216ada267dc3cc58" prot="public">
          <name>MAD_FLOW_STOP</name>
          <initializer>= 0x0010</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="mac_2config_2i386_2lib-src_2libmad_2mad_8h_1a665565932de11bfcb75513a8e61543c3a4b1ad981b82f16a00a6f045d75b88cf6" prot="public">
          <name>MAD_FLOW_BREAK</name>
          <initializer>= 0x0011</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="mac_2config_2i386_2lib-src_2libmad_2mad_8h_1a665565932de11bfcb75513a8e61543c3a68fce20ac0252d77570ce0be605ad87f" prot="public">
          <name>MAD_FLOW_IGNORE</name>
          <initializer>= 0x0020</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libmad/decoder.h" line="34" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libmad/decoder.h" bodystart="34" bodyend="39"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="libmad_2decoder_8h_1ac70e497b9c21d6c01cb1c41658eaa1b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void mad_decoder_init</definition>
        <argsstring>(struct mad_decoder *, void *, enum mad_flow(*)(void *, struct mad_stream *), enum mad_flow(*)(void *, struct mad_header const *), enum mad_flow(*)(void *, struct mad_stream const *, struct mad_frame *), enum mad_flow(*)(void *, struct mad_header const *, struct mad_pcm *), enum mad_flow(*)(void *, struct mad_stream *, struct mad_frame *), enum mad_flow(*)(void *, void *, unsigned int *))</argsstring>
        <name>mad_decoder_init</name>
        <param>
          <type>struct <ref refid="structmad__decoder" kindref="compound">mad_decoder</ref> *</type>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
        </param>
        <param>
          <type>enum </type>
          <declname>mad_flow</declname>
          <array>*)(void *, struct mad_stream *</array>
        </param>
        <param>
          <type>enum </type>
          <declname>mad_flow</declname>
          <array>*)(void *, struct mad_header const *</array>
        </param>
        <param>
          <type>enum </type>
          <declname>mad_flow</declname>
          <array>*)(void *, struct mad_stream const *, struct mad_frame *</array>
        </param>
        <param>
          <type>enum </type>
          <declname>mad_flow</declname>
          <array>*)(void *, struct mad_header const *, struct mad_pcm *</array>
        </param>
        <param>
          <type>enum </type>
          <declname>mad_flow</declname>
          <array>*)(void *, struct mad_stream *, struct mad_frame *</array>
        </param>
        <param>
          <type>enum </type>
          <declname>mad_flow</declname>
          <array>*)(void *, void *, unsigned int *</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libmad/decoder.h" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="libmad_2decoder_8h_1a56b468fcf675abe04387436810a07fda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int mad_decoder_finish</definition>
        <argsstring>(struct mad_decoder *)</argsstring>
        <name>mad_decoder_finish</name>
        <param>
          <type>struct <ref refid="structmad__decoder" kindref="compound">mad_decoder</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libmad/decoder.h" line="83" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libmad/decoder.c" bodystart="96" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="libmad_2decoder_8h_1a15bcb1ee95b6b65d8ec4d54a018c2bbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int mad_decoder_run</definition>
        <argsstring>(struct mad_decoder *, enum mad_decoder_mode)</argsstring>
        <name>mad_decoder_run</name>
        <param>
          <type>struct <ref refid="structmad__decoder" kindref="compound">mad_decoder</ref> *</type>
        </param>
        <param>
          <type>enum</type>
          <declname>mad_decoder_mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libmad/decoder.h" line="88" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libmad/decoder.c" bodystart="533" bodyend="563"/>
      </memberdef>
      <memberdef kind="function" id="libmad_2decoder_8h_1a6ab2b36ad800331d9199cef327116c27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int mad_decoder_message</definition>
        <argsstring>(struct mad_decoder *, void *, unsigned int *)</argsstring>
        <name>mad_decoder_message</name>
        <param>
          <type>struct <ref refid="structmad__decoder" kindref="compound">mad_decoder</ref> *</type>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libmad/decoder.h" line="89" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libmad/decoder.c" bodystart="569" bodyend="582"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>libmad<sp/>-<sp/>MPEG<sp/>audio<sp/>decoder<sp/>library</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2000-2004<sp/>Underbit<sp/>Technologies,<sp/>Inc.</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>along<sp/>with<sp/>this<sp/>program;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>Foundation,<sp/>Inc.,<sp/>59<sp/>Temple<sp/>Place,<sp/>Suite<sp/>330,<sp/>Boston,<sp/>MA<sp/><sp/>02111-1307<sp/><sp/>USA</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>$Id:<sp/>decoder.h,v<sp/>1.2<sp/>2005-09-12<sp/>07:01:30<sp/>dmazzoni<sp/>Exp<sp/>$</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifndef<sp/>LIBMAD_DECODER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>LIBMAD_DECODER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&quot;<ref refid="stream_8h" kindref="compound">stream.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&quot;<ref refid="libmad_2frame_8h" kindref="compound">frame.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&quot;<ref refid="synth_8h" kindref="compound">synth.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="libmad_2decoder_8h_1a0d55d67e9f9acf69f677f86053e88b6a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libmad_2decoder_8h_1a0d55d67e9f9acf69f677f86053e88b6a" kindref="member">mad_decoder_mode</ref><sp/>{</highlight></codeline>
<codeline lineno="30" refid="libmad_2decoder_8h_1a0d55d67e9f9acf69f677f86053e88b6aa4670478d6f7c6dd89f794e9a87091ac2" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="libmad_2decoder_8h_1a0d55d67e9f9acf69f677f86053e88b6aa4670478d6f7c6dd89f794e9a87091ac2" kindref="member">MAD_DECODER_MODE_SYNC</ref><sp/><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="31" refid="libmad_2decoder_8h_1a0d55d67e9f9acf69f677f86053e88b6aa0d44eb0cd37486eb0c2a67342423c8ca" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="libmad_2decoder_8h_1a0d55d67e9f9acf69f677f86053e88b6aa0d44eb0cd37486eb0c2a67342423c8ca" kindref="member">MAD_DECODER_MODE_ASYNC</ref></highlight></codeline>
<codeline lineno="32"><highlight class="normal">};</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="libmad_2decoder_8h_1a665565932de11bfcb75513a8e61543c3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libmad_2decoder_8h_1a665565932de11bfcb75513a8e61543c3" kindref="member">mad_flow</ref><sp/>{</highlight></codeline>
<codeline lineno="35" refid="libmad_2decoder_8h_1a665565932de11bfcb75513a8e61543c3a11b96bfcdbf1f442b96c664ccca4db75" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="libmad_2decoder_8h_1a665565932de11bfcb75513a8e61543c3a11b96bfcdbf1f442b96c664ccca4db75" kindref="member">MAD_FLOW_CONTINUE</ref><sp/>=<sp/>0x0000,<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>continue<sp/>normally<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="libmad_2decoder_8h_1a665565932de11bfcb75513a8e61543c3ac571b8cfa11b3410216ada267dc3cc58" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="libmad_2decoder_8h_1a665565932de11bfcb75513a8e61543c3ac571b8cfa11b3410216ada267dc3cc58" kindref="member">MAD_FLOW_STOP</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>0x0010,<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>stop<sp/>decoding<sp/>normally<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="libmad_2decoder_8h_1a665565932de11bfcb75513a8e61543c3a4b1ad981b82f16a00a6f045d75b88cf6" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="libmad_2decoder_8h_1a665565932de11bfcb75513a8e61543c3a4b1ad981b82f16a00a6f045d75b88cf6" kindref="member">MAD_FLOW_BREAK</ref><sp/><sp/><sp/><sp/>=<sp/>0x0011,<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>stop<sp/>decoding<sp/>and<sp/>signal<sp/>an<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="libmad_2decoder_8h_1a665565932de11bfcb75513a8e61543c3a68fce20ac0252d77570ce0be605ad87f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="libmad_2decoder_8h_1a665565932de11bfcb75513a8e61543c3a68fce20ac0252d77570ce0be605ad87f" kindref="member">MAD_FLOW_IGNORE</ref><sp/><sp/><sp/>=<sp/>0x0020<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>ignore<sp/>the<sp/>current<sp/>frame<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal">};</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="structmad__decoder" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmad__decoder" kindref="compound">mad_decoder</ref><sp/>{</highlight></codeline>
<codeline lineno="42" refid="structmad__decoder_1a4b099e23e17617d7b71d08d10eed7d08" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libmad_2decoder_8h_1a0d55d67e9f9acf69f677f86053e88b6a" kindref="member">mad_decoder_mode</ref><sp/><ref refid="structmad__decoder_1a4b099e23e17617d7b71d08d10eed7d08" kindref="member">mode</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="structmad__decoder_1ae9aa89b5fdbe3927bc168f4334f88196" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structmad__decoder_1ae9aa89b5fdbe3927bc168f4334f88196" kindref="member">options</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="47" refid="structmad__decoder_1a72d64fb82706560651ec3ee6cbf500d2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="structmad__decoder_1a72d64fb82706560651ec3ee6cbf500d2" kindref="member">pid</ref>;</highlight></codeline>
<codeline lineno="48" refid="structmad__decoder_1aecedf7b9ab4d0dd3c8817dc96c07f28e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structmad__decoder_1aecedf7b9ab4d0dd3c8817dc96c07f28e" kindref="member">in</ref>;</highlight></codeline>
<codeline lineno="49" refid="structmad__decoder_1af4e6ba82d0062976edd0b0ca886c1c1e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structmad__decoder_1af4e6ba82d0062976edd0b0ca886c1c1e" kindref="member">out</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>}<sp/><ref refid="structmad__decoder_1a18bc16b02d6ef1f04d6c5d3e63222a37" kindref="member">async</ref>;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="53" refid="structmad__decoder_1a4d0b89b70cb6bbc3172a222ba9c751d1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmad__stream" kindref="compound">mad_stream</ref><sp/><ref refid="structmad__decoder_1a4d0b89b70cb6bbc3172a222ba9c751d1" kindref="member">stream</ref>;</highlight></codeline>
<codeline lineno="54" refid="structmad__decoder_1a35cf3f7b3aaa4336718ff1896808bd70" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmad__frame" kindref="compound">mad_frame</ref><sp/><ref refid="structmad__decoder_1a35cf3f7b3aaa4336718ff1896808bd70" kindref="member">frame</ref>;</highlight></codeline>
<codeline lineno="55" refid="structmad__decoder_1a7fda021db48c654ff0db728dd5c040a3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmad__synth" kindref="compound">mad_synth</ref><sp/><ref refid="structmad__decoder_1a7fda021db48c654ff0db728dd5c040a3" kindref="member">synth</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>}<sp/>*<ref refid="structmad__decoder_1a6359ac37316b99762cf64a4a1be8e3ea" kindref="member">sync</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="structmad__decoder_1a7394a68adf1e161ea618ca1e7295bd5e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structmad__decoder_1a7394a68adf1e161ea618ca1e7295bd5e" kindref="member">cb_data</ref>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="structmad__decoder_1a006915bc94cbb087f5a2073a4b49d1bd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libmad_2decoder_8h_1a665565932de11bfcb75513a8e61543c3" kindref="member">mad_flow</ref><sp/>(*<ref refid="structmad__decoder_1a006915bc94cbb087f5a2073a4b49d1bd" kindref="member">input_func</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmad__stream" kindref="compound">mad_stream</ref><sp/>*);</highlight></codeline>
<codeline lineno="61" refid="structmad__decoder_1ade30180873067a42e095265390dc1ba4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libmad_2decoder_8h_1a665565932de11bfcb75513a8e61543c3" kindref="member">mad_flow</ref><sp/>(*<ref refid="structmad__decoder_1ade30180873067a42e095265390dc1ba4" kindref="member">header_func</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmad__header" kindref="compound">mad_header</ref><sp/><ref refid="getopt_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref><sp/>*);</highlight></codeline>
<codeline lineno="62" refid="structmad__decoder_1ab2c40d16b6339ff1ad4c4142069c3597" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libmad_2decoder_8h_1a665565932de11bfcb75513a8e61543c3" kindref="member">mad_flow</ref><sp/>(*<ref refid="structmad__decoder_1ab2c40d16b6339ff1ad4c4142069c3597" kindref="member">filter_func</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmad__stream" kindref="compound">mad_stream</ref><sp/><ref refid="getopt_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref><sp/>*,<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmad__frame" kindref="compound">mad_frame</ref><sp/>*);</highlight></codeline>
<codeline lineno="64" refid="structmad__decoder_1a48289cb5be13e08b11f880a87d3990ef" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libmad_2decoder_8h_1a665565932de11bfcb75513a8e61543c3" kindref="member">mad_flow</ref><sp/>(*<ref refid="structmad__decoder_1a48289cb5be13e08b11f880a87d3990ef" kindref="member">output_func</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmad__header" kindref="compound">mad_header</ref><sp/><ref refid="getopt_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref><sp/>*,<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmad__pcm" kindref="compound">mad_pcm</ref><sp/>*);</highlight></codeline>
<codeline lineno="66" refid="structmad__decoder_1aad0550e4516e52a1b59a5d2d95ebe3d9" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libmad_2decoder_8h_1a665565932de11bfcb75513a8e61543c3" kindref="member">mad_flow</ref><sp/>(*<ref refid="structmad__decoder_1aad0550e4516e52a1b59a5d2d95ebe3d9" kindref="member">error_func</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmad__stream" kindref="compound">mad_stream</ref><sp/>*,<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structmad__frame" kindref="compound">mad_frame</ref><sp/>*);</highlight></codeline>
<codeline lineno="67" refid="structmad__decoder_1a44577c1d539888c49dcc2f06dc136076" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libmad_2decoder_8h_1a665565932de11bfcb75513a8e61543c3" kindref="member">mad_flow</ref><sp/>(*<ref refid="structmad__decoder_1a44577c1d539888c49dcc2f06dc136076" kindref="member">message_func</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="68"><highlight class="normal">};</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="libmad_2decoder_8h_1ac70e497b9c21d6c01cb1c41658eaa1b6" kindref="member">mad_decoder_init</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structmad__decoder" kindref="compound">mad_decoder</ref><sp/>*,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libmad_2decoder_8h_1a665565932de11bfcb75513a8e61543c3" kindref="member">mad_flow</ref><sp/>(*)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structmad__stream" kindref="compound">mad_stream</ref><sp/>*),</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libmad_2decoder_8h_1a665565932de11bfcb75513a8e61543c3" kindref="member">mad_flow</ref><sp/>(*)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structmad__header" kindref="compound">mad_header</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*),</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libmad_2decoder_8h_1a665565932de11bfcb75513a8e61543c3" kindref="member">mad_flow</ref><sp/>(*)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structmad__stream" kindref="compound">mad_stream</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structmad__frame" kindref="compound">mad_frame</ref><sp/>*),</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libmad_2decoder_8h_1a665565932de11bfcb75513a8e61543c3" kindref="member">mad_flow</ref><sp/>(*)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structmad__header" kindref="compound">mad_header</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structmad__pcm" kindref="compound">mad_pcm</ref><sp/>*),</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libmad_2decoder_8h_1a665565932de11bfcb75513a8e61543c3" kindref="member">mad_flow</ref><sp/>(*)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structmad__stream" kindref="compound">mad_stream</ref><sp/>*,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structmad__frame" kindref="compound">mad_frame</ref><sp/>*),</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libmad_2decoder_8h_1a665565932de11bfcb75513a8e61543c3" kindref="member">mad_flow</ref><sp/>(*)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*));</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="libmad_2decoder_8h_1a56b468fcf675abe04387436810a07fda" kindref="member">mad_decoder_finish</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structmad__decoder" kindref="compound">mad_decoder</ref><sp/>*);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="libmad_2decoder_8h_1a2a3391e2662667e5d49ae280614654ea" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>mad_decoder_options(decoder,<sp/>opts)<sp/><sp/>\</highlight></codeline>
<codeline lineno="86"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>((void)<sp/>((decoder)-&gt;options<sp/>=<sp/>(opts)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="libmad_2decoder_8h_1a15bcb1ee95b6b65d8ec4d54a018c2bbf" kindref="member">mad_decoder_run</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structmad__decoder" kindref="compound">mad_decoder</ref><sp/>*,<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="libmad_2decoder_8h_1a0d55d67e9f9acf69f677f86053e88b6a" kindref="member">mad_decoder_mode</ref>);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="libmad_2decoder_8h_1a6ab2b36ad800331d9199cef327116c27" kindref="member">mad_decoder_message</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structmad__decoder" kindref="compound">mad_decoder</ref><sp/>*,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libmad/decoder.h"/>
  </compounddef>
</doxygen>
