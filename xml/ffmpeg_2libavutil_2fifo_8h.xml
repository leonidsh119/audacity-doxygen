<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="ffmpeg_2libavutil_2fifo_8h" kind="file" language="C++">
    <compoundname>fifo.h</compoundname>
    <includes local="no">stdint.h</includes>
    <includes refid="avutil_8h" local="yes">avutil.h</includes>
    <includes refid="attributes_8h" local="yes">attributes.h</includes>
    <includedby refid="audio__fifo_8h" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/audio_fifo.h</includedby>
    <incdepgraph>
      <node id="3801">
        <label>mathematics.h</label>
        <link refid="mathematics_8h"/>
        <childnode refid="3784" relation="include">
        </childnode>
        <childnode refid="3790" relation="include">
        </childnode>
        <childnode refid="3794" relation="include">
        </childnode>
        <childnode refid="3802" relation="include">
        </childnode>
        <childnode refid="3803" relation="include">
        </childnode>
      </node>
      <node id="3802">
        <label>rational.h</label>
        <link refid="rational_8h"/>
        <childnode refid="3784" relation="include">
        </childnode>
        <childnode refid="3789" relation="include">
        </childnode>
        <childnode refid="3794" relation="include">
        </childnode>
      </node>
      <node id="3805">
        <label>stdarg.h</label>
      </node>
      <node id="3794">
        <label>attributes.h</label>
        <link refid="attributes_8h"/>
      </node>
      <node id="3785">
        <label>avutil.h</label>
        <link refid="avutil_8h"/>
        <childnode refid="3786" relation="include">
        </childnode>
        <childnode refid="3799" relation="include">
        </childnode>
        <childnode refid="3795" relation="include">
        </childnode>
        <childnode refid="3796" relation="include">
        </childnode>
        <childnode refid="3801" relation="include">
        </childnode>
        <childnode refid="3802" relation="include">
        </childnode>
        <childnode refid="3804" relation="include">
        </childnode>
        <childnode refid="3806" relation="include">
        </childnode>
      </node>
      <node id="3784">
        <label>stdint.h</label>
      </node>
      <node id="3797">
        <label>libavutil/avconfig.h</label>
        <link refid="avconfig_8h"/>
      </node>
      <node id="3792">
        <label>stdlib.h</label>
      </node>
      <node id="3787">
        <label>errno.h</label>
      </node>
      <node id="3795">
        <label>version.h</label>
        <link refid="ffmpeg_2libavutil_2version_8h"/>
        <childnode refid="3796" relation="include">
        </childnode>
      </node>
      <node id="3800">
        <label>stddef.h</label>
      </node>
      <node id="3789">
        <label>limits.h</label>
      </node>
      <node id="3783">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/fifo.h</label>
        <link refid="ffmpeg/libavutil/fifo.h"/>
        <childnode refid="3784" relation="include">
        </childnode>
        <childnode refid="3785" relation="include">
        </childnode>
        <childnode refid="3794" relation="include">
        </childnode>
      </node>
      <node id="3799">
        <label>error.h</label>
        <link refid="error_8h"/>
        <childnode refid="3787" relation="include">
        </childnode>
        <childnode refid="3800" relation="include">
        </childnode>
      </node>
      <node id="3804">
        <label>log.h</label>
        <link refid="ffmpeg_2libavutil_2log_8h"/>
        <childnode refid="3805" relation="include">
        </childnode>
        <childnode refid="3785" relation="include">
        </childnode>
        <childnode refid="3794" relation="include">
        </childnode>
      </node>
      <node id="3793">
        <label>string.h</label>
      </node>
      <node id="3798">
        <label>mem.h</label>
        <link refid="ffmpeg_2libavutil_2mem_8h"/>
        <childnode refid="3789" relation="include">
        </childnode>
        <childnode refid="3784" relation="include">
        </childnode>
        <childnode refid="3794" relation="include">
        </childnode>
        <childnode refid="3799" relation="include">
        </childnode>
        <childnode refid="3785" relation="include">
        </childnode>
      </node>
      <node id="3803">
        <label>intfloat.h</label>
        <link refid="intfloat_8h"/>
        <childnode refid="3784" relation="include">
        </childnode>
        <childnode refid="3794" relation="include">
        </childnode>
      </node>
      <node id="3807">
        <label>old_pix_fmts.h</label>
        <link refid="old__pix__fmts_8h"/>
      </node>
      <node id="3790">
        <label>math.h</label>
      </node>
      <node id="3796">
        <label>macros.h</label>
        <link refid="ffmpeg_2libavutil_2macros_8h"/>
      </node>
      <node id="3786">
        <label>common.h</label>
        <link refid="ffmpeg_2libavutil_2common_8h"/>
        <childnode refid="3787" relation="include">
        </childnode>
        <childnode refid="3788" relation="include">
        </childnode>
        <childnode refid="3789" relation="include">
        </childnode>
        <childnode refid="3790" relation="include">
        </childnode>
        <childnode refid="3784" relation="include">
        </childnode>
        <childnode refid="3791" relation="include">
        </childnode>
        <childnode refid="3792" relation="include">
        </childnode>
        <childnode refid="3793" relation="include">
        </childnode>
        <childnode refid="3794" relation="include">
        </childnode>
        <childnode refid="3795" relation="include">
        </childnode>
        <childnode refid="3797" relation="include">
        </childnode>
        <childnode refid="3786" relation="include">
        </childnode>
        <childnode refid="3798" relation="include">
        </childnode>
      </node>
      <node id="3791">
        <label>stdio.h</label>
      </node>
      <node id="3806">
        <label>pixfmt.h</label>
        <link refid="pixfmt_8h"/>
        <childnode refid="3797" relation="include">
        </childnode>
        <childnode refid="3795" relation="include">
        </childnode>
        <childnode refid="3807" relation="include">
        </childnode>
      </node>
      <node id="3788">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3809">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/audio_fifo.h</label>
        <link refid="audio__fifo_8h"/>
      </node>
      <node id="3808">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/fifo.h</label>
        <link refid="ffmpeg/libavutil/fifo.h"/>
        <childnode refid="3809" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_a_v_fifo_buffer" prot="public">AVFifoBuffer</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="ffmpeg_2libavutil_2fifo_8h_1add90208b45fc5b3476120fd8b039d425" prot="public" static="no">
        <type>struct <ref refid="struct_a_v_fifo_buffer" kindref="compound">AVFifoBuffer</ref></type>
        <definition>typedef struct AVFifoBuffer  AVFifoBuffer</definition>
        <argsstring></argsstring>
        <name>AVFifoBuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/fifo.h" line="35" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="ffmpeg_2libavutil_2fifo_8h_1adae9b18c5eed14fe851c5bb984ce374b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_a_v_fifo_buffer" kindref="compound">AVFifoBuffer</ref> *</type>
        <definition>AVFifoBuffer* av_fifo_alloc</definition>
        <argsstring>(unsigned int size)</argsstring>
        <name>av_fifo_alloc</name>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialize an <ref refid="struct_a_v_fifo_buffer" kindref="compound">AVFifoBuffer</ref>. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>of FIFO </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="struct_a_v_fifo_buffer" kindref="compound">AVFifoBuffer</ref> or NULL in case of memory allocation failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/fifo.h" line="42" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ffmpeg_2libavutil_2fifo_8h_1ac41532c140aacb9ad12a22c859f944aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void av_fifo_free</definition>
        <argsstring>(AVFifoBuffer *f)</argsstring>
        <name>av_fifo_free</name>
        <param>
          <type><ref refid="struct_a_v_fifo_buffer" kindref="compound">AVFifoBuffer</ref> *</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Free an <ref refid="struct_a_v_fifo_buffer" kindref="compound">AVFifoBuffer</ref>. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="struct_a_v_fifo_buffer" kindref="compound">AVFifoBuffer</ref> to free </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/fifo.h" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ffmpeg_2libavutil_2fifo_8h_1a2f257d5cd93686b047c9b29ef6493e51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void av_fifo_reset</definition>
        <argsstring>(AVFifoBuffer *f)</argsstring>
        <name>av_fifo_reset</name>
        <param>
          <type><ref refid="struct_a_v_fifo_buffer" kindref="compound">AVFifoBuffer</ref> *</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reset the <ref refid="struct_a_v_fifo_buffer" kindref="compound">AVFifoBuffer</ref> to the state right after av_fifo_alloc, in particular it is emptied. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="struct_a_v_fifo_buffer" kindref="compound">AVFifoBuffer</ref> to reset </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/fifo.h" line="54" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ffmpeg_2libavutil_2fifo_8h_1a5f8d8ccf360235d7302b3390764d7c31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_fifo_size</definition>
        <argsstring>(AVFifoBuffer *f)</argsstring>
        <name>av_fifo_size</name>
        <param>
          <type><ref refid="struct_a_v_fifo_buffer" kindref="compound">AVFifoBuffer</ref> *</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the amount of data in bytes in the <ref refid="struct_a_v_fifo_buffer" kindref="compound">AVFifoBuffer</ref>, that is the amount of data you can read from it. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="struct_a_v_fifo_buffer" kindref="compound">AVFifoBuffer</ref> to read from </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>size </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/fifo.h" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ffmpeg_2libavutil_2fifo_8h_1a36f027f8ee351435448cd69a4e61293d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_fifo_space</definition>
        <argsstring>(AVFifoBuffer *f)</argsstring>
        <name>av_fifo_space</name>
        <param>
          <type><ref refid="struct_a_v_fifo_buffer" kindref="compound">AVFifoBuffer</ref> *</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the amount of space in bytes in the <ref refid="struct_a_v_fifo_buffer" kindref="compound">AVFifoBuffer</ref>, that is the amount of data you can write into it. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="struct_a_v_fifo_buffer" kindref="compound">AVFifoBuffer</ref> to write into </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>size </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/fifo.h" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ffmpeg_2libavutil_2fifo_8h_1ab708d2f19b7a9592caa278256787adb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_fifo_generic_read</definition>
        <argsstring>(AVFifoBuffer *f, void *dest, int buf_size, void(*func)(void *, void *, int))</argsstring>
        <name>av_fifo_generic_read</name>
        <param>
          <type><ref refid="struct_a_v_fifo_buffer" kindref="compound">AVFifoBuffer</ref> *</type>
          <declname>f</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>buf_size</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref>(*)(<ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *, <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *, <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref>)</type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Feed data from an <ref refid="struct_a_v_fifo_buffer" kindref="compound">AVFifoBuffer</ref> to a user-supplied callback. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="struct_a_v_fifo_buffer" kindref="compound">AVFifoBuffer</ref> to read from </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf_size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bytes to read </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>func</parametername>
</parameternamelist>
<parameterdescription>
<para>generic read function </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dest</parametername>
</parameternamelist>
<parameterdescription>
<para>data destination </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/fifo.h" line="79" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ffmpeg_2libavutil_2fifo_8h_1ae95c15dcdd266b4005f8919e4f571180" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_fifo_generic_write</definition>
        <argsstring>(AVFifoBuffer *f, void *src, int size, int(*func)(void *, void *, int))</argsstring>
        <name>av_fifo_generic_write</name>
        <param>
          <type><ref refid="struct_a_v_fifo_buffer" kindref="compound">AVFifoBuffer</ref> *</type>
          <declname>f</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref>(*)(<ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *, <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *, <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref>)</type>
          <declname>func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Feed data from a user-supplied callback to an <ref refid="struct_a_v_fifo_buffer" kindref="compound">AVFifoBuffer</ref>. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="struct_a_v_fifo_buffer" kindref="compound">AVFifoBuffer</ref> to write to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>data source; non-const since it may be used as a modifiable context by the function defined in func </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>number of bytes to write </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>func</parametername>
</parameternamelist>
<parameterdescription>
<para>generic write function; the first parameter is src, the second is dest_buf, the third is dest_buf_size. func must return the number of bytes written to dest_buf, or &lt;= 0 to indicate no more data available to write. If func is NULL, src is interpreted as a simple byte array for source data. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the number of bytes written to the FIFO </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/fifo.h" line="94" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ffmpeg_2libavutil_2fifo_8h_1af50c043864cf09925aa4986e00a57067" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_fifo_realloc2</definition>
        <argsstring>(AVFifoBuffer *f, unsigned int size)</argsstring>
        <name>av_fifo_realloc2</name>
        <param>
          <type><ref refid="struct_a_v_fifo_buffer" kindref="compound">AVFifoBuffer</ref> *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Resize an <ref refid="struct_a_v_fifo_buffer" kindref="compound">AVFifoBuffer</ref>. In case of reallocation failure, the old FIFO is kept unchanged.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="struct_a_v_fifo_buffer" kindref="compound">AVFifoBuffer</ref> to resize </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>new <ref refid="struct_a_v_fifo_buffer" kindref="compound">AVFifoBuffer</ref> size in bytes </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>&lt;0 for failure, &gt;=0 otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/fifo.h" line="104" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ffmpeg_2libavutil_2fifo_8h_1a44a36b44adf5b278eeea1cb6d5b7033b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int av_fifo_grow</definition>
        <argsstring>(AVFifoBuffer *f, unsigned int additional_space)</argsstring>
        <name>av_fifo_grow</name>
        <param>
          <type><ref refid="struct_a_v_fifo_buffer" kindref="compound">AVFifoBuffer</ref> *</type>
          <declname>f</declname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>additional_space</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Enlarge an <ref refid="struct_a_v_fifo_buffer" kindref="compound">AVFifoBuffer</ref>. In case of reallocation failure, the old FIFO is kept unchanged. The new fifo size may be larger than the requested size.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="struct_a_v_fifo_buffer" kindref="compound">AVFifoBuffer</ref> to resize </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>additional_space</parametername>
</parameternamelist>
<parameterdescription>
<para>the amount of space in bytes to allocate in addition to <ref refid="ffmpeg_2libavutil_2fifo_8h_1a5f8d8ccf360235d7302b3390764d7c31" kindref="member">av_fifo_size()</ref> </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>&lt;0 for failure, &gt;=0 otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/fifo.h" line="115" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ffmpeg_2libavutil_2fifo_8h_1a037f66cc2b92aebbc363617387d39f6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void av_fifo_drain</definition>
        <argsstring>(AVFifoBuffer *f, int size)</argsstring>
        <name>av_fifo_drain</name>
        <param>
          <type><ref refid="struct_a_v_fifo_buffer" kindref="compound">AVFifoBuffer</ref> *</type>
          <declname>f</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Read and discard the specified amount of data from an <ref refid="struct_a_v_fifo_buffer" kindref="compound">AVFifoBuffer</ref>. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="struct_a_v_fifo_buffer" kindref="compound">AVFifoBuffer</ref> to read from </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>amount of data to read in bytes </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/fifo.h" line="122" column="1"/>
      </memberdef>
      <memberdef kind="function" id="ffmpeg_2libavutil_2fifo_8h_1aa0212ac6ff8feab8846b9cc6df49149c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref> *</type>
        <definition>static uint8_t* av_fifo_peek2</definition>
        <argsstring>(const AVFifoBuffer *f, int offs)</argsstring>
        <name>av_fifo_peek2</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="struct_a_v_fifo_buffer" kindref="compound">AVFifoBuffer</ref> *</type>
          <declname>f</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>offs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return a pointer to the data stored in a FIFO buffer at a certain offset. The FIFO buffer is not modified.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="struct_a_v_fifo_buffer" kindref="compound">AVFifoBuffer</ref> to peek at, f must be non-NULL </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offs</parametername>
</parameternamelist>
<parameterdescription>
<para>an offset in bytes, its absolute value must be less than the used buffer size or the returned pointer will point outside to the buffer data. The used buffer size can be checked with <ref refid="ffmpeg_2libavutil_2fifo_8h_1a5f8d8ccf360235d7302b3390764d7c31" kindref="member">av_fifo_size()</ref>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/fifo.h" line="134" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/fifo.h" bodystart="134" bodyend="142"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>a very simple circular buffer FIFO implementation </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>FFmpeg.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>FFmpeg<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>License<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>version<sp/>2.1<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>FFmpeg<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/>GNU</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>License<sp/>along<sp/>with<sp/>FFmpeg;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>Street,<sp/>Fifth<sp/>Floor,<sp/>Boston,<sp/>MA<sp/>02110-1301<sp/>USA</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor">#ifndef<sp/>AVUTIL_FIFO_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AVUTIL_FIFO_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="avutil_8h" kindref="compound">avutil.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="attributes_8h" kindref="compound">attributes.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="struct_a_v_fifo_buffer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_a_v_fifo_buffer" kindref="compound">AVFifoBuffer</ref><sp/>{</highlight></codeline>
<codeline lineno="32" refid="struct_a_v_fifo_buffer_1a7ca29002daed8cd1bf486019f3a64fb1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/>*<ref refid="struct_a_v_fifo_buffer_1a7ca29002daed8cd1bf486019f3a64fb1" kindref="member">buffer</ref>;</highlight></codeline>
<codeline lineno="33" refid="struct_a_v_fifo_buffer_1a17c13f1f8557d63a3e031af1fdd80039" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/>*<ref refid="struct_a_v_fifo_buffer_1a3f75cfeac9302cdaf7badcfcba1a2193" kindref="member">rptr</ref>,<sp/>*<ref refid="struct_a_v_fifo_buffer_1a17c13f1f8557d63a3e031af1fdd80039" kindref="member">wptr</ref>,<sp/>*<ref refid="struct_a_v_fifo_buffer_1ad33d3db46bc5644805e2c8df0adedfb4" kindref="member">end</ref>;</highlight></codeline>
<codeline lineno="34" refid="struct_a_v_fifo_buffer_1ac2c3c492ec54ed30f1eb3ec8095f557c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref><sp/><ref refid="struct_a_v_fifo_buffer_1aa45e40b2e1d183fe73df52b91605034d" kindref="member">rndx</ref>,<sp/><ref refid="struct_a_v_fifo_buffer_1ac2c3c492ec54ed30f1eb3ec8095f557c" kindref="member">wndx</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}<sp/><ref refid="ffmpeg_2libavutil_2fifo_8h_1add90208b45fc5b3476120fd8b039d425" kindref="member">AVFifoBuffer</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><ref refid="struct_a_v_fifo_buffer" kindref="compound">AVFifoBuffer</ref><sp/>*<ref refid="ffmpeg_2libavutil_2fifo_8h_1adae9b18c5eed14fe851c5bb984ce374b" kindref="member">av_fifo_alloc</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref>);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ffmpeg_2libavutil_2fifo_8h_1ac41532c140aacb9ad12a22c859f944aa" kindref="member">av_fifo_free</ref>(<ref refid="struct_a_v_fifo_buffer" kindref="compound">AVFifoBuffer</ref><sp/>*<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ffmpeg_2libavutil_2fifo_8h_1a2f257d5cd93686b047c9b29ef6493e51" kindref="member">av_fifo_reset</ref>(<ref refid="struct_a_v_fifo_buffer" kindref="compound">AVFifoBuffer</ref><sp/>*<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ffmpeg_2libavutil_2fifo_8h_1a5f8d8ccf360235d7302b3390764d7c31" kindref="member">av_fifo_size</ref>(<ref refid="struct_a_v_fifo_buffer" kindref="compound">AVFifoBuffer</ref><sp/>*<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ffmpeg_2libavutil_2fifo_8h_1a36f027f8ee351435448cd69a4e61293d" kindref="member">av_fifo_space</ref>(<ref refid="struct_a_v_fifo_buffer" kindref="compound">AVFifoBuffer</ref><sp/>*<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ffmpeg_2libavutil_2fifo_8h_1ab708d2f19b7a9592caa278256787adb6" kindref="member">av_fifo_generic_read</ref>(<ref refid="struct_a_v_fifo_buffer" kindref="compound">AVFifoBuffer</ref><sp/>*<ref refid="rfft2d_test_m_l_8m_1aacd36fb6ac9ce14cec71f2ca852524d4" kindref="member">f</ref>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>buf_size,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*func)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ffmpeg_2libavutil_2fifo_8h_1ae95c15dcdd266b4005f8919e4f571180" kindref="member">av_fifo_generic_write</ref>(<ref refid="struct_a_v_fifo_buffer" kindref="compound">AVFifoBuffer</ref><sp/>*f,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*src,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__lavu__mem_1ga854352f53b148adc24983a58a1866d66" kindref="member">size</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>(*func)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ffmpeg_2libavutil_2fifo_8h_1af50c043864cf09925aa4986e00a57067" kindref="member">av_fifo_realloc2</ref>(<ref refid="struct_a_v_fifo_buffer" kindref="compound">AVFifoBuffer</ref><sp/>*f,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="ffmpeg_2libavutil_2fifo_8h_1a44a36b44adf5b278eeea1cb6d5b7033b" kindref="member">av_fifo_grow</ref>(<ref refid="struct_a_v_fifo_buffer" kindref="compound">AVFifoBuffer</ref><sp/>*f,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>additional_space);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="ffmpeg_2libavutil_2fifo_8h_1a037f66cc2b92aebbc363617387d39f6f" kindref="member">av_fifo_drain</ref>(<ref refid="struct_a_v_fifo_buffer" kindref="compound">AVFifoBuffer</ref><sp/>*f,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/>*av_fifo_peek2(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_a_v_fifo_buffer" kindref="compound">AVFifoBuffer</ref><sp/>*f,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offs)</highlight></codeline>
<codeline lineno="135"><highlight class="normal">{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref><sp/>*ptr<sp/>=<sp/>f-&gt;<ref refid="struct_a_v_fifo_buffer_1a3f75cfeac9302cdaf7badcfcba1a2193" kindref="member">rptr</ref><sp/>+<sp/>offs;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ptr<sp/>&gt;=<sp/>f-&gt;<ref refid="struct_a_v_fifo_buffer_1ad33d3db46bc5644805e2c8df0adedfb4" kindref="member">end</ref>)</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/>f-&gt;<ref refid="struct_a_v_fifo_buffer_1a7ca29002daed8cd1bf486019f3a64fb1" kindref="member">buffer</ref><sp/>+<sp/>(ptr<sp/>-<sp/>f-&gt;<ref refid="struct_a_v_fifo_buffer_1ad33d3db46bc5644805e2c8df0adedfb4" kindref="member">end</ref>);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ptr<sp/>&lt;<sp/>f-&gt;<ref refid="structbuffer" kindref="compound">buffer</ref>)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/>f-&gt;<ref refid="struct_a_v_fifo_buffer_1ad33d3db46bc5644805e2c8df0adedfb4" kindref="member">end</ref><sp/>-<sp/>(f-&gt;<ref refid="struct_a_v_fifo_buffer_1a7ca29002daed8cd1bf486019f3a64fb1" kindref="member">buffer</ref><sp/>-<sp/>ptr);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ptr;</highlight></codeline>
<codeline lineno="142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>AVUTIL_FIFO_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/ffmpeg/libavutil/fifo.h"/>
  </compounddef>
</doxygen>
