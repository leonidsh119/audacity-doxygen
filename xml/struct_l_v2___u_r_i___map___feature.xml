<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="struct_l_v2___u_r_i___map___feature" kind="struct" language="C++" prot="public">
    <compoundname>LV2_URI_Map_Feature</compoundname>
    <includes refid="uri-map_8h" local="no">uri-map.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_l_v2___u_r_i___map___feature_1a59fe3d004c8514ed1bfc60c7cd2958f0" prot="public" static="no" mutable="no">
        <type><ref refid="uri-map_8h_1adbac08f0bf00040db3c0298270df0c62" kindref="member">LV2_URI_Map_Callback_Data</ref></type>
        <definition>LV2_URI_Map_Callback_Data LV2_URI_Map_Feature::callback_data</definition>
        <argsstring></argsstring>
        <name>callback_data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Opaque pointer to host data.</para><para>The plugin MUST pass this to any call to functions in this struct. Otherwise, it must not be interpreted in any way. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/lv2/lv2plug.in/ns/ext/uri-map/uri-map.h" line="60" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/lv2/lv2plug.in/ns/ext/uri-map/uri-map.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_l_v2___u_r_i___map___feature_1aa493702a04a2b8dbdb950ff6eb6c940d" prot="public" static="no" mutable="no">
        <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref>(*</type>
        <definition>uint32_t(* LV2_URI_Map_Feature::uri_to_id) (LV2_URI_Map_Callback_Data callback_data, const char *map, const char *uri)</definition>
        <argsstring>)(LV2_URI_Map_Callback_Data callback_data, const char *map, const char *uri)</argsstring>
        <name>uri_to_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the numeric ID of a URI from the host.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>callback_data</parametername>
</parameternamelist>
<parameterdescription>
<para>Must be the callback_data member of this struct. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>map</parametername>
</parameternamelist>
<parameterdescription>
<para>The &apos;context&apos; of this URI. Certain extensions may define a URI that must be passed here with certain restrictions on the return value (e.g. limited range). This value may be NULL if the plugin needs an ID for a URI in general. Extensions SHOULD NOT define a context unless there is a specific need to do so, e.g. to restrict the range of the returned value. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>uri</parametername>
</parameternamelist>
<parameterdescription>
<para>The URI to be mapped to an integer ID.</para></parameterdescription>
</parameteritem>
</parameterlist>
This function is referentially transparent; any number of calls with the same arguments is guaranteed to return the same value over the life of a plugin instance (though the same URI may return different values with a different map parameter). However, this function is not necessarily very fast: plugins SHOULD cache any IDs they might need in performance critical situations.</para><para>The return value 0 is reserved and indicates that an ID for that URI could not be created for whatever reason. Extensions MAY define more precisely what this means in a certain context, but in general plugins SHOULD handle this situation as gracefully as possible. However, hosts SHOULD NOT return 0 from this function in non-exceptional circumstances (e.g. the URI map SHOULD be dynamic). Hosts that statically support only a fixed set of <ref refid="struct_u_r_is" kindref="compound">URIs</ref> should not expect plugins to function correctly. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/lv2/lv2plug.in/ns/ext/uri-map/uri-map.h" line="89" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/lv2/lv2plug.in/ns/ext/uri-map/uri-map.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>URI Map Feature.</para><para>To support this feature the host must pass an LV2_Feature struct to the plugin&apos;s instantiate method with URI &quot;http://lv2plug.in/ns/ext/uri-map&quot; and data pointed to an instance of this struct. </para>    </detaileddescription>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/lv2/lv2plug.in/ns/ext/uri-map/uri-map.h" line="53" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lv2/lv2/lv2plug.in/ns/ext/uri-map/uri-map.h" bodystart="53" bodyend="92"/>
    <listofallmembers>
      <member refid="struct_l_v2___u_r_i___map___feature_1a59fe3d004c8514ed1bfc60c7cd2958f0" prot="public" virt="non-virtual"><scope>LV2_URI_Map_Feature</scope><name>callback_data</name></member>
      <member refid="struct_l_v2___u_r_i___map___feature_1aa493702a04a2b8dbdb950ff6eb6c940d" prot="public" virt="non-virtual"><scope>LV2_URI_Map_Feature</scope><name>uri_to_id</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
