<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="pa__process_8h" kind="file" language="C++">
    <compoundname>pa_process.h</compoundname>
    <includes refid="portaudio_8h" local="yes">portaudio.h</includes>
    <includes refid="pa__converters_8h" local="yes">pa_converters.h</includes>
    <includes refid="pa__dither_8h" local="yes">pa_dither.h</includes>
    <includedby refid="pa__process_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c</includedby>
    <includedby refid="pa__linux__alsa_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c</includedby>
    <includedby refid="pa__linux__asihpi_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/asihpi/pa_linux_asihpi.c</includedby>
    <includedby refid="pa__asio_8cpp" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/asio/pa_asio.cpp</includedby>
    <includedby refid="pa__mac__core__internal_8h" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/coreaudio/pa_mac_core_internal.h</includedby>
    <includedby refid="pa__mac__core__old_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/coreaudio/pa_mac_core_old.c</includedby>
    <includedby refid="pa__win__ds_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/dsound/pa_win_ds.c</includedby>
    <includedby refid="pa__jack_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/jack/pa_jack.c</includedby>
    <includedby refid="pa__unix__oss_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/oss/pa_unix_oss.c</includedby>
    <includedby refid="pa__hostapi__skeleton_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/skeleton/pa_hostapi_skeleton.c</includedby>
    <includedby refid="pa__win__wasapi_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/wasapi/pa_win_wasapi.c</includedby>
    <includedby refid="pa__win__wdmks_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/wdmks/pa_win_wdmks.c</includedby>
    <includedby refid="pa__win__wmme_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/wmme/pa_win_wmme.c</includedby>
    <incdepgraph>
      <node id="29537">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.h</label>
        <link refid="pa_process.h"/>
        <childnode refid="29538" relation="include">
        </childnode>
        <childnode refid="29539" relation="include">
        </childnode>
        <childnode refid="29540" relation="include">
        </childnode>
      </node>
      <node id="29540">
        <label>pa_dither.h</label>
        <link refid="pa__dither_8h"/>
        <childnode refid="29541" relation="include">
        </childnode>
      </node>
      <node id="29538">
        <label>portaudio.h</label>
        <link refid="portaudio_8h"/>
      </node>
      <node id="29541">
        <label>pa_types.h</label>
        <link refid="pa__types_8h"/>
      </node>
      <node id="29539">
        <label>pa_converters.h</label>
        <link refid="pa__converters_8h"/>
        <childnode refid="29538" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="29552">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/dsound/pa_win_ds.c</label>
        <link refid="pa__win__ds_8c"/>
      </node>
      <node id="29548">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/coreaudio/pa_mac_core.c</label>
        <link refid="pa__mac__core_8c"/>
      </node>
      <node id="29547">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/coreaudio/pa_mac_core_internal.h</label>
        <link refid="pa__mac__core__internal_8h"/>
        <childnode refid="29548" relation="include">
        </childnode>
        <childnode refid="29549" relation="include">
        </childnode>
        <childnode refid="29550" relation="include">
        </childnode>
      </node>
      <node id="29546">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/asio/pa_asio.cpp</label>
        <link refid="pa__asio_8cpp"/>
      </node>
      <node id="29555">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/skeleton/pa_hostapi_skeleton.c</label>
        <link refid="pa__hostapi__skeleton_8c"/>
      </node>
      <node id="29550">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/coreaudio/pa_mac_core_utilities.c</label>
        <link refid="pa__mac__core__utilities_8c"/>
      </node>
      <node id="29557">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/wdmks/pa_win_wdmks.c</label>
        <link refid="pa__win__wdmks_8c"/>
      </node>
      <node id="29543">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c</label>
        <link refid="pa__process_8c"/>
      </node>
      <node id="29542">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.h</label>
        <link refid="pa_process.h"/>
        <childnode refid="29543" relation="include">
        </childnode>
        <childnode refid="29544" relation="include">
        </childnode>
        <childnode refid="29545" relation="include">
        </childnode>
        <childnode refid="29546" relation="include">
        </childnode>
        <childnode refid="29547" relation="include">
        </childnode>
        <childnode refid="29551" relation="include">
        </childnode>
        <childnode refid="29552" relation="include">
        </childnode>
        <childnode refid="29553" relation="include">
        </childnode>
        <childnode refid="29554" relation="include">
        </childnode>
        <childnode refid="29555" relation="include">
        </childnode>
        <childnode refid="29556" relation="include">
        </childnode>
        <childnode refid="29557" relation="include">
        </childnode>
        <childnode refid="29558" relation="include">
        </childnode>
      </node>
      <node id="29554">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/oss/pa_unix_oss.c</label>
        <link refid="pa__unix__oss_8c"/>
      </node>
      <node id="29544">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/alsa/pa_linux_alsa.c</label>
        <link refid="pa__linux__alsa_8c"/>
      </node>
      <node id="29553">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/jack/pa_jack.c</label>
        <link refid="pa__jack_8c"/>
      </node>
      <node id="29558">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/wmme/pa_win_wmme.c</label>
        <link refid="pa__win__wmme_8c"/>
      </node>
      <node id="29545">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/asihpi/pa_linux_asihpi.c</label>
        <link refid="pa__linux__asihpi_8c"/>
      </node>
      <node id="29556">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/wasapi/pa_win_wasapi.c</label>
        <link refid="pa__win__wasapi_8c"/>
      </node>
      <node id="29551">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/coreaudio/pa_mac_core_old.c</label>
        <link refid="pa__mac__core__old_8c"/>
      </node>
      <node id="29549">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/hostapi/coreaudio/pa_mac_core_blocking.c</label>
        <link refid="pa__mac__core__blocking_8c"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_pa_util_channel_descriptor" prot="public">PaUtilChannelDescriptor</innerclass>
    <innerclass refid="struct_pa_util_buffer_processor" prot="public">PaUtilBufferProcessor</innerclass>
      <sectiondef kind="user-defined">
      <header>Initialization, termination, resetting and info</header>
      <memberdef kind="function" id="pa__process_8h_1adbf068f554a245c493eb0817ad8bc67e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref></type>
        <definition>PaError PaUtil_InitializeBufferProcessor</definition>
        <argsstring>(PaUtilBufferProcessor *bufferProcessor, int inputChannelCount, PaSampleFormat userInputSampleFormat, PaSampleFormat hostInputSampleFormat, int outputChannelCount, PaSampleFormat userOutputSampleFormat, PaSampleFormat hostOutputSampleFormat, double sampleRate, PaStreamFlags streamFlags, unsigned long framesPerUserBuffer, unsigned long framesPerHostBuffer, PaUtilHostBufferSizeMode hostBufferSizeMode, PaStreamCallback *streamCallback, void *userData)</argsstring>
        <name>PaUtil_InitializeBufferProcessor</name>
        <param>
          <type><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref> *</type>
          <declname>bufferProcessor</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>inputChannelCount</declname>
        </param>
        <param>
          <type><ref refid="portaudio_8h_1a4582d93c2c2e60e12be3d74c5fe00b96" kindref="member">PaSampleFormat</ref></type>
          <declname>userInputSampleFormat</declname>
        </param>
        <param>
          <type><ref refid="portaudio_8h_1a4582d93c2c2e60e12be3d74c5fe00b96" kindref="member">PaSampleFormat</ref></type>
          <declname>hostInputSampleFormat</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>outputChannelCount</declname>
        </param>
        <param>
          <type><ref refid="portaudio_8h_1a4582d93c2c2e60e12be3d74c5fe00b96" kindref="member">PaSampleFormat</ref></type>
          <declname>userOutputSampleFormat</declname>
        </param>
        <param>
          <type><ref refid="portaudio_8h_1a4582d93c2c2e60e12be3d74c5fe00b96" kindref="member">PaSampleFormat</ref></type>
          <declname>hostOutputSampleFormat</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sampleRate</declname>
        </param>
        <param>
          <type><ref refid="portaudio_8h_1a37c7ac3ace7d2dd1430f40ecdee4ebb6" kindref="member">PaStreamFlags</ref></type>
          <declname>streamFlags</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>framesPerUserBuffer</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>framesPerHostBuffer</declname>
        </param>
        <param>
          <type><ref refid="pa__process_8h_1a16c84d8c0ac62944797f530bf852484f" kindref="member">PaUtilHostBufferSizeMode</ref></type>
          <declname>hostBufferSizeMode</declname>
        </param>
        <param>
          <type><ref refid="portaudio_8h_1a8a60fb2a5ec9cbade3f54a9c978e2710" kindref="member">PaStreamCallback</ref> *</type>
          <declname>streamCallback</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>userData</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialize a buffer processor&apos;s representation stored in a <ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref> structure. Be sure to call PaUtil_TerminateBufferProcessor after finishing with a buffer processor.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bufferProcessor</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer processor structure to initialize.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inputChannelCount</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of input channels as passed to Pa_OpenStream or 0 for an output-only stream.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>userInputSampleFormat</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_format" kindref="compound">Format</ref> of user input samples, as passed to Pa_OpenStream. This parameter is ignored for ouput-only streams.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hostInputSampleFormat</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_format" kindref="compound">Format</ref> of host input samples. This parameter is ignored for output-only streams. See note about host buffer interleave below.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>outputChannelCount</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of output channels as passed to Pa_OpenStream or 0 for an input-only stream.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>userOutputSampleFormat</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_format" kindref="compound">Format</ref> of user output samples, as passed to Pa_OpenStream. This parameter is ignored for input-only streams.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hostOutputSampleFormat</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="class_format" kindref="compound">Format</ref> of host output samples. This parameter is ignored for input-only streams. See note about host buffer interleave below.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sampleRate</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="struct_sample" kindref="compound">Sample</ref> rate of the stream. The more accurate this is the better - it is used for updating time stamps when adapting buffers.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>streamFlags</parametername>
</parameternamelist>
<parameterdescription>
<para>Stream flags as passed to Pa_OpenStream, this parameter is used for selecting special sample conversion options such as clipping and dithering.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>framesPerUserBuffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of frames per user buffer, as requested by the framesPerBuffer parameter to Pa_OpenStream. This parameter may be zero to indicate that the user will accept any (and varying) buffer sizes.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>framesPerHostBuffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the number of frames per host buffer for the fixed buffer size mode, and the maximum number of frames per host buffer for the bounded host buffer size mode. It is ignored for the other modes.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hostBufferSizeMode</parametername>
</parameternamelist>
<parameterdescription>
<para>A mode flag indicating the size variability of host buffers that will be passed to the buffer processor. See PaUtilHostBufferSizeMode for further details.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>streamCallback</parametername>
</parameternamelist>
<parameterdescription>
<para>The user stream callback passed to Pa_OpenStream.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>userData</parametername>
</parameternamelist>
<parameterdescription>
<para>The user data field passed to Pa_OpenStream.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>The interleave flag is ignored for host buffer formats. Host interleave is determined by the use of different SetInput and SetOutput functions.</para></simplesect>
<simplesect kind="return"><para>An error code indicating whether the initialization was successful. If the error code is not PaNoError, the buffer processor was not initialized and should not be used.</para></simplesect>
<simplesect kind="see"><para><ref refid="pa__front_8c_1a443ad16338191af364e3be988014cbbe" kindref="member">Pa_OpenStream</ref>, <ref refid="pa__process_8h_1a16c84d8c0ac62944797f530bf852484f" kindref="member">PaUtilHostBufferSizeMode</ref>, <ref refid="pa__process_8h_1af872943fc77bbc32f0196e86f16a7c24" kindref="member">PaUtil_TerminateBufferProcessor</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.h" line="377" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" bodystart="90" bodyend="383"/>
      </memberdef>
      <memberdef kind="function" id="pa__process_8h_1af872943fc77bbc32f0196e86f16a7c24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void PaUtil_TerminateBufferProcessor</definition>
        <argsstring>(PaUtilBufferProcessor *bufferProcessor)</argsstring>
        <name>PaUtil_TerminateBufferProcessor</name>
        <param>
          <type><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref> *</type>
          <declname>bufferProcessor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Terminate a buffer processor&apos;s representation. Deallocates any temporary buffers allocated by PaUtil_InitializeBufferProcessor.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bufferProcessor</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer processor structure to terminate.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="pa__process_8h_1adbf068f554a245c493eb0817ad8bc67e" kindref="member">PaUtil_InitializeBufferProcessor</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.h" line="397" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" bodystart="386" bodyend="405"/>
      </memberdef>
      <memberdef kind="function" id="pa__process_8h_1a6f82fd15e56b10ed8e858be9ad8765e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void PaUtil_ResetBufferProcessor</definition>
        <argsstring>(PaUtilBufferProcessor *bufferProcessor)</argsstring>
        <name>PaUtil_ResetBufferProcessor</name>
        <param>
          <type><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref> *</type>
          <declname>bufferProcessor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Clear any internally buffered data. If you call PaUtil_InitializeBufferProcessor in your OpenStream routine, make sure you call PaUtil_ResetBufferProcessor in your StartStream call.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bufferProcessor</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer processor to reset. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.h" line="406" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" bodystart="408" bodyend="428"/>
      </memberdef>
      <memberdef kind="function" id="pa__process_8h_1a4871dfd93b00739e0dafdd4ea7671c9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long PaUtil_GetBufferProcessorInputLatencyFrames</definition>
        <argsstring>(PaUtilBufferProcessor *bufferProcessor)</argsstring>
        <name>PaUtil_GetBufferProcessorInputLatencyFrames</name>
        <param>
          <type><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref> *</type>
          <declname>bufferProcessor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieve the input latency of a buffer processor, in frames.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bufferProcessor</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer processor examine.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The input latency introduced by the buffer processor, in frames.</para></simplesect>
<simplesect kind="see"><para><ref refid="pa__process_8h_1a92a70efcd9dd7c8e1ea735580dee7e4a" kindref="member">PaUtil_GetBufferProcessorOutputLatencyFrames</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.h" line="417" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" bodystart="431" bodyend="434"/>
      </memberdef>
      <memberdef kind="function" id="pa__process_8h_1a92a70efcd9dd7c8e1ea735580dee7e4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long PaUtil_GetBufferProcessorOutputLatencyFrames</definition>
        <argsstring>(PaUtilBufferProcessor *bufferProcessor)</argsstring>
        <name>PaUtil_GetBufferProcessorOutputLatencyFrames</name>
        <param>
          <type><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref> *</type>
          <declname>bufferProcessor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Retrieve the output latency of a buffer processor, in frames.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bufferProcessor</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer processor examine.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The output latency introduced by the buffer processor, in frames.</para></simplesect>
<simplesect kind="see"><para><ref refid="pa__process_8h_1a4871dfd93b00739e0dafdd4ea7671c9a" kindref="member">PaUtil_GetBufferProcessorInputLatencyFrames</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.h" line="427" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" bodystart="437" bodyend="440"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Host buffer pointer configuration</header>
      <description><para>Functions to set host input and output buffers, used by both callback streams and blocking read/write streams. </para></description>
      <memberdef kind="function" id="pa__process_8h_1a5201db0d922fac6e3b513bf8c4d59149" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void PaUtil_SetInputFrameCount</definition>
        <argsstring>(PaUtilBufferProcessor *bufferProcessor, unsigned long frameCount)</argsstring>
        <name>PaUtil_SetInputFrameCount</name>
        <param>
          <type><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref> *</type>
          <declname>bufferProcessor</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>frameCount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the number of frames in the input host <ref refid="xmlparse_8c_1aaadc06b5dac8070de2c8677210967bdb" kindref="member">buffer(s)</ref> specified by the PaUtil_Set*InputChannel functions.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bufferProcessor</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer processor.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>frameCount</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of host input frames. A 0 frameCount indicates to use the framesPerHostBuffer value passed to PaUtil_InitializeBufferProcessor.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="pa__process_8h_1a46c4eca9005b038a32877bdcebc1dbc9" kindref="member">PaUtil_SetNoInput</ref>, <ref refid="pa__process_8h_1a98b89245c209d2a0b367ed8d82bde5ca" kindref="member">PaUtil_SetInputChannel</ref>, <ref refid="pa__process_8h_1ab62cb33b10a25676a03a0bc0c0134eaa" kindref="member">PaUtil_SetInterleavedInputChannels</ref>, <ref refid="pa__process_8h_1a309097fe924b746ac3e05260993abb42" kindref="member">PaUtil_SetNonInterleavedInputChannel</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.h" line="451" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" bodystart="443" bodyend="450"/>
      </memberdef>
      <memberdef kind="function" id="pa__process_8h_1a46c4eca9005b038a32877bdcebc1dbc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void PaUtil_SetNoInput</definition>
        <argsstring>(PaUtilBufferProcessor *bufferProcessor)</argsstring>
        <name>PaUtil_SetNoInput</name>
        <param>
          <type><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref> *</type>
          <declname>bufferProcessor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Indicate that no input is avalable. This function should be used when priming the output of a full-duplex stream opened with the paPrimeOutputBuffersUsingStreamCallback flag. Note that it is not necessary to call this or any othe PaUtil_Set*Input* functions for ouput-only streams.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bufferProcessor</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer processor. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.h" line="462" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" bodystart="453" bodyend="458"/>
      </memberdef>
      <memberdef kind="function" id="pa__process_8h_1a98b89245c209d2a0b367ed8d82bde5ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void PaUtil_SetInputChannel</definition>
        <argsstring>(PaUtilBufferProcessor *bufferProcessor, unsigned int channel, void *data, unsigned int stride)</argsstring>
        <name>PaUtil_SetInputChannel</name>
        <param>
          <type><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref> *</type>
          <declname>bufferProcessor</declname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>channel</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>stride</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Provide the buffer processor with a pointer to a host input channel.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bufferProcessor</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer processor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>The channel number. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stride</parametername>
</parameternamelist>
<parameterdescription>
<para>The stride from one sample to the next, in samples. For interleaved host buffers, the stride will usually be the same as the number of channels in the buffer. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.h" line="474" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" bodystart="461" bodyend="468"/>
      </memberdef>
      <memberdef kind="function" id="pa__process_8h_1ab62cb33b10a25676a03a0bc0c0134eaa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void PaUtil_SetInterleavedInputChannels</definition>
        <argsstring>(PaUtilBufferProcessor *bufferProcessor, unsigned int firstChannel, void *data, unsigned int channelCount)</argsstring>
        <name>PaUtil_SetInterleavedInputChannels</name>
        <param>
          <type><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref> *</type>
          <declname>bufferProcessor</declname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>firstChannel</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>channelCount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Provide the buffer processor with a pointer to an number of interleaved host input channels.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bufferProcessor</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer processor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>firstChannel</parametername>
</parameternamelist>
<parameterdescription>
<para>The first channel number. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channelCount</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of interleaved channels in the buffer. If channelCount is zero, the number of channels specified to PaUtil_InitializeBufferProcessor will be used. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.h" line="488" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" bodystart="471" bodyend="491"/>
      </memberdef>
      <memberdef kind="function" id="pa__process_8h_1a309097fe924b746ac3e05260993abb42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void PaUtil_SetNonInterleavedInputChannel</definition>
        <argsstring>(PaUtilBufferProcessor *bufferProcessor, unsigned int channel, void *data)</argsstring>
        <name>PaUtil_SetNonInterleavedInputChannel</name>
        <param>
          <type><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref> *</type>
          <declname>bufferProcessor</declname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>channel</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Provide the buffer processor with a pointer to one non-interleaved host output channel.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bufferProcessor</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer processor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>The channel number. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.h" line="499" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" bodystart="494" bodyend="502"/>
      </memberdef>
      <memberdef kind="function" id="pa__process_8h_1a469724724e74e5e1a8ea97f98f2d76bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void PaUtil_Set2ndInputFrameCount</definition>
        <argsstring>(PaUtilBufferProcessor *bufferProcessor, unsigned long frameCount)</argsstring>
        <name>PaUtil_Set2ndInputFrameCount</name>
        <param>
          <type><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref> *</type>
          <declname>bufferProcessor</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>frameCount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Use for the second buffer half when the input buffer is split in two halves. <simplesect kind="see"><para><ref refid="pa__process_8h_1a5201db0d922fac6e3b513bf8c4d59149" kindref="member">PaUtil_SetInputFrameCount</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.h" line="506" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" bodystart="505" bodyend="509"/>
      </memberdef>
      <memberdef kind="function" id="pa__process_8h_1a89d233c8e934e1495f4b40d6baf2c8c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void PaUtil_Set2ndInputChannel</definition>
        <argsstring>(PaUtilBufferProcessor *bufferProcessor, unsigned int channel, void *data, unsigned int stride)</argsstring>
        <name>PaUtil_Set2ndInputChannel</name>
        <param>
          <type><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref> *</type>
          <declname>bufferProcessor</declname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>channel</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>stride</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Use for the second buffer half when the input buffer is split in two halves. <simplesect kind="see"><para><ref refid="pa__process_8h_1a98b89245c209d2a0b367ed8d82bde5ca" kindref="member">PaUtil_SetInputChannel</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.h" line="512" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" bodystart="512" bodyend="519"/>
      </memberdef>
      <memberdef kind="function" id="pa__process_8h_1ad483fb76f7a894c0c085b7b054fcc993" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void PaUtil_Set2ndInterleavedInputChannels</definition>
        <argsstring>(PaUtilBufferProcessor *bufferProcessor, unsigned int firstChannel, void *data, unsigned int channelCount)</argsstring>
        <name>PaUtil_Set2ndInterleavedInputChannels</name>
        <param>
          <type><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref> *</type>
          <declname>bufferProcessor</declname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>firstChannel</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>channelCount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Use for the second buffer half when the input buffer is split in two halves. <simplesect kind="see"><para><ref refid="pa__process_8h_1ab62cb33b10a25676a03a0bc0c0134eaa" kindref="member">PaUtil_SetInterleavedInputChannels</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.h" line="518" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" bodystart="522" bodyend="542"/>
      </memberdef>
      <memberdef kind="function" id="pa__process_8h_1a7a0f949512c7b443c72dbc8fdee2cb5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void PaUtil_Set2ndNonInterleavedInputChannel</definition>
        <argsstring>(PaUtilBufferProcessor *bufferProcessor, unsigned int channel, void *data)</argsstring>
        <name>PaUtil_Set2ndNonInterleavedInputChannel</name>
        <param>
          <type><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref> *</type>
          <declname>bufferProcessor</declname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>channel</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Use for the second buffer half when the input buffer is split in two halves. <simplesect kind="see"><para><ref refid="pa__process_8h_1a309097fe924b746ac3e05260993abb42" kindref="member">PaUtil_SetNonInterleavedInputChannel</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.h" line="524" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" bodystart="545" bodyend="553"/>
      </memberdef>
      <memberdef kind="function" id="pa__process_8h_1aafe79d7110067c783ec401e8961bebe8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void PaUtil_SetOutputFrameCount</definition>
        <argsstring>(PaUtilBufferProcessor *bufferProcessor, unsigned long frameCount)</argsstring>
        <name>PaUtil_SetOutputFrameCount</name>
        <param>
          <type><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref> *</type>
          <declname>bufferProcessor</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>frameCount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the number of frames in the output host <ref refid="xmlparse_8c_1aaadc06b5dac8070de2c8677210967bdb" kindref="member">buffer(s)</ref> specified by the PaUtil_Set*OutputChannel functions.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bufferProcessor</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer processor.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>frameCount</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of host output frames. A 0 frameCount indicates to use the framesPerHostBuffer value passed to PaUtil_InitializeBufferProcessor.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="pa__process_8h_1a7d622722b03549d8f274aae5b8e5a93c" kindref="member">PaUtil_SetOutputChannel</ref>, <ref refid="pa__process_8h_1a3e31c5710305b2beb153f8f39b922623" kindref="member">PaUtil_SetInterleavedOutputChannels</ref>, <ref refid="pa__process_8h_1a8108f7e3e890843830654e7cc4d176f1" kindref="member">PaUtil_SetNonInterleavedOutputChannel</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.h" line="539" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" bodystart="556" bodyend="563"/>
      </memberdef>
      <memberdef kind="function" id="pa__process_8h_1acf981028bf1d439959fe2287f51306fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void PaUtil_SetNoOutput</definition>
        <argsstring>(PaUtilBufferProcessor *bufferProcessor)</argsstring>
        <name>PaUtil_SetNoOutput</name>
        <param>
          <type><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref> *</type>
          <declname>bufferProcessor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Indicate that the output will be discarded. This function should be used when implementing the paNeverDropInput mode for full duplex streams.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bufferProcessor</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer processor. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.h" line="548" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" bodystart="566" bodyend="573"/>
      </memberdef>
      <memberdef kind="function" id="pa__process_8h_1a7d622722b03549d8f274aae5b8e5a93c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void PaUtil_SetOutputChannel</definition>
        <argsstring>(PaUtilBufferProcessor *bufferProcessor, unsigned int channel, void *data, unsigned int stride)</argsstring>
        <name>PaUtil_SetOutputChannel</name>
        <param>
          <type><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref> *</type>
          <declname>bufferProcessor</declname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>channel</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>stride</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Provide the buffer processor with a pointer to a host output channel.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bufferProcessor</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer processor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>The channel number. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stride</parametername>
</parameternamelist>
<parameterdescription>
<para>The stride from one sample to the next, in samples. For interleaved host buffers, the stride will usually be the same as the number of channels in the buffer. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.h" line="560" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" bodystart="576" bodyend="584"/>
      </memberdef>
      <memberdef kind="function" id="pa__process_8h_1a3e31c5710305b2beb153f8f39b922623" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void PaUtil_SetInterleavedOutputChannels</definition>
        <argsstring>(PaUtilBufferProcessor *bufferProcessor, unsigned int firstChannel, void *data, unsigned int channelCount)</argsstring>
        <name>PaUtil_SetInterleavedOutputChannels</name>
        <param>
          <type><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref> *</type>
          <declname>bufferProcessor</declname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>firstChannel</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>channelCount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Provide the buffer processor with a pointer to a number of interleaved host output channels.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bufferProcessor</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer processor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>firstChannel</parametername>
</parameternamelist>
<parameterdescription>
<para>The first channel number. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channelCount</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of interleaved channels in the buffer. If channelCount is zero, the number of channels specified to PaUtil_InitializeBufferProcessor will be used. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.h" line="574" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" bodystart="587" bodyend="606"/>
      </memberdef>
      <memberdef kind="function" id="pa__process_8h_1a8108f7e3e890843830654e7cc4d176f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void PaUtil_SetNonInterleavedOutputChannel</definition>
        <argsstring>(PaUtilBufferProcessor *bufferProcessor, unsigned int channel, void *data)</argsstring>
        <name>PaUtil_SetNonInterleavedOutputChannel</name>
        <param>
          <type><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref> *</type>
          <declname>bufferProcessor</declname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>channel</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Provide the buffer processor with a pointer to one non-interleaved host output channel.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bufferProcessor</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer processor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel</parametername>
</parameternamelist>
<parameterdescription>
<para>The channel number. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.h" line="585" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" bodystart="609" bodyend="616"/>
      </memberdef>
      <memberdef kind="function" id="pa__process_8h_1a24af08a401dcc32a29a155f196ac3839" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void PaUtil_Set2ndOutputFrameCount</definition>
        <argsstring>(PaUtilBufferProcessor *bufferProcessor, unsigned long frameCount)</argsstring>
        <name>PaUtil_Set2ndOutputFrameCount</name>
        <param>
          <type><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref> *</type>
          <declname>bufferProcessor</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>frameCount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Use for the second buffer half when the output buffer is split in two halves. <simplesect kind="see"><para><ref refid="pa__process_8h_1aafe79d7110067c783ec401e8961bebe8" kindref="member">PaUtil_SetOutputFrameCount</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.h" line="592" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" bodystart="619" bodyend="623"/>
      </memberdef>
      <memberdef kind="function" id="pa__process_8h_1ad67081555880d451b1c5c6c5ab2189b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void PaUtil_Set2ndOutputChannel</definition>
        <argsstring>(PaUtilBufferProcessor *bufferProcessor, unsigned int channel, void *data, unsigned int stride)</argsstring>
        <name>PaUtil_Set2ndOutputChannel</name>
        <param>
          <type><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref> *</type>
          <declname>bufferProcessor</declname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>channel</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>stride</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Use for the second buffer half when the output buffer is split in two halves. <simplesect kind="see"><para><ref refid="pa__process_8h_1a7d622722b03549d8f274aae5b8e5a93c" kindref="member">PaUtil_SetOutputChannel</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.h" line="598" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" bodystart="626" bodyend="634"/>
      </memberdef>
      <memberdef kind="function" id="pa__process_8h_1a9077bfaf0ac1f9f06f3afd9359a842d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void PaUtil_Set2ndInterleavedOutputChannels</definition>
        <argsstring>(PaUtilBufferProcessor *bufferProcessor, unsigned int firstChannel, void *data, unsigned int channelCount)</argsstring>
        <name>PaUtil_Set2ndInterleavedOutputChannels</name>
        <param>
          <type><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref> *</type>
          <declname>bufferProcessor</declname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>firstChannel</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>channelCount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Use for the second buffer half when the output buffer is split in two halves. <simplesect kind="see"><para><ref refid="pa__process_8h_1a3e31c5710305b2beb153f8f39b922623" kindref="member">PaUtil_SetInterleavedOutputChannels</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.h" line="604" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" bodystart="637" bodyend="656"/>
      </memberdef>
      <memberdef kind="function" id="pa__process_8h_1abf2be8935e0862a1fbe157260ed1f8b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void PaUtil_Set2ndNonInterleavedOutputChannel</definition>
        <argsstring>(PaUtilBufferProcessor *bufferProcessor, unsigned int channel, void *data)</argsstring>
        <name>PaUtil_Set2ndNonInterleavedOutputChannel</name>
        <param>
          <type><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref> *</type>
          <declname>bufferProcessor</declname>
        </param>
        <param>
          <type>unsigned <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>channel</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Use for the second buffer half when the output buffer is split in two halves. <simplesect kind="see"><para><ref refid="pa__process_8h_1a8108f7e3e890843830654e7cc4d176f1" kindref="member">PaUtil_SetNonInterleavedOutputChannel</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.h" line="610" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" bodystart="659" bodyend="666"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Buffer processing functions for callback streams</header>
      <memberdef kind="function" id="pa__process_8h_1ae791a33948eed0a902d618bfd0e0a825" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void PaUtil_BeginBufferProcessing</definition>
        <argsstring>(PaUtilBufferProcessor *bufferProcessor, PaStreamCallbackTimeInfo *timeInfo, PaStreamCallbackFlags callbackStatusFlags)</argsstring>
        <name>PaUtil_BeginBufferProcessing</name>
        <param>
          <type><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref> *</type>
          <declname>bufferProcessor</declname>
        </param>
        <param>
          <type><ref refid="struct_pa_stream_callback_time_info" kindref="compound">PaStreamCallbackTimeInfo</ref> *</type>
          <declname>timeInfo</declname>
        </param>
        <param>
          <type><ref refid="portaudio_8h_1a55a005924bcfa0424594f4f65cd4ae82" kindref="member">PaStreamCallbackFlags</ref></type>
          <declname>callbackStatusFlags</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Commence processing a host buffer (or a pair of host buffers in the full-duplex case) for a callback stream.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bufferProcessor</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer processor.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>timeInfo</parametername>
</parameternamelist>
<parameterdescription>
<para>Timing information for the first sample of the host <ref refid="xmlparse_8c_1aaadc06b5dac8070de2c8677210967bdb" kindref="member">buffer(s)</ref>. This information may be adjusted when buffer adaption is being performed.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callbackStatusFlags</parametername>
</parameternamelist>
<parameterdescription>
<para>Flags indicating whether underruns and overruns have occurred since the last time the buffer processor was called. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.h" line="632" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" bodystart="669" bodyend="692"/>
      </memberdef>
      <memberdef kind="function" id="pa__process_8h_1afbbc470b417a31de0b9944d476adaaa0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long PaUtil_EndBufferProcessing</definition>
        <argsstring>(PaUtilBufferProcessor *bufferProcessor, int *callbackResult)</argsstring>
        <name>PaUtil_EndBufferProcessing</name>
        <param>
          <type><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref> *</type>
          <declname>bufferProcessor</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>callbackResult</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Finish processing a host buffer (or a pair of host buffers in the full-duplex case) for a callback stream.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bufferProcessor</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer processor.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>callbackResult</parametername>
</parameternamelist>
<parameterdescription>
<para>On input, indicates a previous callback result, and on exit, the result of the user stream callback, if it is called. On entry callbackResult should contain one of { paContinue, paComplete, or paAbort}. If paComplete is passed, the stream callback will not be called but any audio that was generated by previous stream callbacks will be copied to the output <ref refid="xmlparse_8c_1aaadc06b5dac8070de2c8677210967bdb" kindref="member">buffer(s)</ref>. You can check whether the buffer processor&apos;s internal buffer is empty by calling PaUtil_IsBufferProcessorOutputEmpty.</para></parameterdescription>
</parameteritem>
</parameterlist>
If the stream callback is called its result is stored in *callbackResult. If the stream callback returns paComplete or paAbort, all output buffers will be full of valid data - some of which may be zeros to acount for data that wasn&apos;t generated by the terminating callback.</para><para><simplesect kind="return"><para>The number of frames processed. This usually corresponds to the number of frames specified by the PaUtil_Set*FrameCount functions, exept in the paUtilVariableHostBufferSizePartialUsageAllowed buffer size mode when a smaller value may be returned. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.h" line="659" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" bodystart="1484" bodyend="1653"/>
      </memberdef>
      <memberdef kind="function" id="pa__process_8h_1aa330f62537935124788387624d6a5362" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int PaUtil_IsBufferProcessorOutputEmpty</definition>
        <argsstring>(PaUtilBufferProcessor *bufferProcessor)</argsstring>
        <name>PaUtil_IsBufferProcessorOutputEmpty</name>
        <param>
          <type><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref> *</type>
          <declname>bufferProcessor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Determine whether any callback generated output remains in the bufffer processor&apos;s internal buffers. This method may be used to determine when to continue calling <ref refid="pa__process_8h_1afbbc470b417a31de0b9944d476adaaa0" kindref="member">PaUtil_EndBufferProcessing()</ref> after the callback has returned a callbackResult of paComplete.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bufferProcessor</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer processor.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns non-zero when callback generated output remains in the internal buffer and zero (0) when there internal buffer contains no callback generated data. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.h" line="674" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" bodystart="1656" bodyend="1659"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Buffer processing functions for blocking read/write streams</header>
      <memberdef kind="function" id="pa__process_8h_1a9a8ada1e97f38a135c1cd229affc538c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long PaUtil_CopyInput</definition>
        <argsstring>(PaUtilBufferProcessor *bufferProcessor, void **buffer, unsigned long frameCount)</argsstring>
        <name>PaUtil_CopyInput</name>
        <param>
          <type><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref> *</type>
          <declname>bufferProcessor</declname>
        </param>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> **</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>frameCount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy samples from host input channels set up by the PaUtil_Set*InputChannels functions to a user supplied buffer. This function is intended for use with blocking read/write streams. Copies the minimum of the number of user frames (specified by the frameCount parameter) and the number of available host frames (specified in a previous call to SetInputFrameCount()).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bufferProcessor</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer processor.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the user buffer pointer, or a pointer to a pointer to an array of user buffer pointers for a non-interleaved stream. It is important that this parameter points to a copy of the user buffer pointers, not to the actual user buffer pointers, because this function updates the pointers before returning.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>frameCount</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of frames of data in the <ref refid="xmlparse_8c_1aaadc06b5dac8070de2c8677210967bdb" kindref="member">buffer(s)</ref> pointed to by the buffer parameter.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The number of frames copied. The buffer pointer(s) pointed to by the buffer parameter are advanced to point to the frame(s) following the last one filled. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.h" line="704" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" bodystart="1662" bodyend="1731"/>
      </memberdef>
      <memberdef kind="function" id="pa__process_8h_1af32b13037c9e4fcda0e1af1041102d9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long PaUtil_CopyOutput</definition>
        <argsstring>(PaUtilBufferProcessor *bufferProcessor, const void **buffer, unsigned long frameCount)</argsstring>
        <name>PaUtil_CopyOutput</name>
        <param>
          <type><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref> *</type>
          <declname>bufferProcessor</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> **</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>frameCount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.h" line="729" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" bodystart="1733" bodyend="1804"/>
      </memberdef>
      <memberdef kind="function" id="pa__process_8h_1a59efdbd92383b5388e484188827c2eb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long PaUtil_ZeroOutput</definition>
        <argsstring>(PaUtilBufferProcessor *bufferProcessor, unsigned long frameCount)</argsstring>
        <name>PaUtil_ZeroOutput</name>
        <param>
          <type><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref> *</type>
          <declname>bufferProcessor</declname>
        </param>
        <param>
          <type>unsigned long</type>
          <declname>frameCount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.h" line="744" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.c" bodystart="1807" bodyend="1831"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="pa__process_8h_1a16c84d8c0ac62944797f530bf852484f" prot="public" static="no">
        <name>PaUtilHostBufferSizeMode</name>
        <enumvalue id="pa__process_8h_1a16c84d8c0ac62944797f530bf852484fa5e79e1ea4d8f114cfe83caa9b08610d8" prot="public">
          <name>paUtilFixedHostBufferSize</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The host buffer size is a fixed known size. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="pa__process_8h_1a16c84d8c0ac62944797f530bf852484fa2e97156fbdf5444b7bcc53b60f368d8b" prot="public">
          <name>paUtilBoundedHostBufferSize</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The host buffer size may vary, but has a known maximum size. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="pa__process_8h_1a16c84d8c0ac62944797f530bf852484fa4273c3f42fdaa887af00afa2bdb03cc0" prot="public">
          <name>paUtilUnknownHostBufferSize</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>Nothing is known about the host buffer size. </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="pa__process_8h_1a16c84d8c0ac62944797f530bf852484fa90f2d4ab46cdebfe7efaadc602bf3c78" prot="public">
          <name>paUtilVariableHostBufferSizePartialUsageAllowed</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>The host buffer size varies, and the client does not require the buffer processor to consume all of the input and fill all of the output buffer. This is useful when the implementation has access to the host API&apos;s circular buffer and only needs to consume/fill some of it, not necessarily all of it, with each call to the buffer processor. This is the only mode where <ref refid="pa__process_8h_1afbbc470b417a31de0b9944d476adaaa0" kindref="member">PaUtil_EndBufferProcessing()</ref> may not consume the whole buffer. </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Mode flag passed to PaUtil_InitializeBufferProcessor indicating the type of buffering that the host API uses. </para>        </briefdescription>
        <detaileddescription>
<para>The mode used depends on whether the host API or the implementation manages the buffers, and how these buffers are used (scatter gather, circular buffer). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.h" line="219" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.h" bodystart="219" bodyend="237"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="pa__process_8h_1ab595814fb534b35f08ed1a34bfbbf923" prot="public" static="no">
        <type>struct <ref refid="struct_pa_util_channel_descriptor" kindref="compound">PaUtilChannelDescriptor</ref></type>
        <definition>typedef struct PaUtilChannelDescriptor PaUtilChannelDescriptor</definition>
        <argsstring></argsstring>
        <name>PaUtilChannelDescriptor</name>
        <briefdescription>
<para>An auxilliary data structure used internally by the buffer processor to represent host input and output buffers. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.h" line="245" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Buffer Processor prototypes. A Buffer Processor performs buffer length adaption, coordinates sample format conversion, and interleaves/deinterleaves channels. </para>    </briefdescription>
    <detaileddescription>
<para><heading level="3">Overview</heading>
</para><para>The &quot;Buffer Processor&quot; (<ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref>) manages conversion of audio data from host buffers to user buffers and back again. Where required, the buffer processor takes care of converting between host and user sample formats, interleaving and deinterleaving multichannel buffers, and adapting between host and user buffers with different lengths. The buffer processor may be used with full and half duplex streams, for both callback streams and blocking read/write streams.</para><para>One of the important capabilities provided by the buffer processor is the ability to adapt between user and host buffer sizes of different lengths with minimum latency. Although this task is relatively easy to perform when the host buffer size is an integer multiple of the user buffer size, the problem is more complicated when this is not the case - especially for full-duplex callback streams. Where necessary the adaption is implemented by internally buffering some input and/or output data. The buffer adation algorithm used by the buffer processor was originally implemented by Stephan Letz for the ASIO version of PortAudio, and is described in his Callback_adaption_.pdf which is included in the distribution.</para><para>The buffer processor performs sample conversion using the functions provided by pa_converters.c.</para><para>The following sections provide an overview of how to use the buffer processor. Interested readers are advised to consult the host API implementations for examples of buffer processor usage.</para><para><heading level="4">Initialization, resetting and termination</heading>
</para><para>When a stream is opened, the buffer processor should be initialized using PaUtil_InitializeBufferProcessor. This function initializes internal state and allocates temporary buffers as neccesary according to the supplied configuration parameters. Some of the parameters correspond to those requested by the user in their call to <ref refid="portaudio_8h_1a443ad16338191af364e3be988014cbbe" kindref="member">Pa_OpenStream()</ref>, others reflect the requirements of the host API implementation - they indicate host buffer sizes, formats, and the type of buffering which the Host API uses. The buffer processor should be initialized for callback streams and blocking read/write streams.</para><para>Call PaUtil_ResetBufferProcessor to clear any sample data which is present in the buffer processor before starting to use it (for example when Pa_StartStream is called).</para><para>When the buffer processor is no longer used call PaUtil_TerminateBufferProcessor.</para><para><heading level="4">Using the buffer processor for a callback stream</heading>
</para><para>The buffer processor&apos;s role in a callback stream is to take host input buffers process them with the stream callback, and fill host output buffers. For a full duplex stream, the buffer processor handles input and output simultaneously due to the requirements of the minimum-latency buffer adation algorithm.</para><para>When a host buffer becomes available, the implementation should call the buffer processor to process the buffer. The buffer processor calls the stream callback to consume and/or produce audio data as necessary. The buffer processor will convert sample formats, interleave/deinterleave channels, and slice or chunk the data to the appropriate buffer lengths according to the requirements of the stream callback and the host API.</para><para>To process a host buffer (or a pair of host buffers for a full-duplex stream) use the following calling sequence:</para><para><orderedlist>
<listitem><para>Call PaUtil_BeginBufferProcessing</para></listitem><listitem><para>For a stream which takes input:<itemizedlist>
<listitem><para>Call PaUtil_SetInputFrameCount with the number of frames in the host input buffer.</para></listitem><listitem><para>Call one of the following functions one or more times to tell the buffer processor about the host input <ref refid="xmlparse_8c_1aaadc06b5dac8070de2c8677210967bdb" kindref="member">buffer(s)</ref>: PaUtil_SetInputChannel, PaUtil_SetInterleavedInputChannels, PaUtil_SetNonInterleavedInputChannel. Which function you call will depend on whether the host <ref refid="xmlparse_8c_1aaadc06b5dac8070de2c8677210967bdb" kindref="member">buffer(s)</ref> are interleaved or not.</para></listitem><listitem><para>If the available host data is split accross two buffers (for example a data range at the end of a circular buffer and another range at the beginning of the circular buffer), also call PaUtil_Set2ndInputFrameCount, PaUtil_Set2ndInputChannel, PaUtil_Set2ndInterleavedInputChannels, PaUtil_Set2ndNonInterleavedInputChannel as necessary to tell the buffer processor about the second buffer.</para></listitem></itemizedlist>
</para></listitem><listitem><para>For a stream which generates output:<itemizedlist>
<listitem><para>Call PaUtil_SetOutputFrameCount with the number of frames in the host output buffer.</para></listitem><listitem><para>Call one of the following functions one or more times to tell the buffer processor about the host output <ref refid="xmlparse_8c_1aaadc06b5dac8070de2c8677210967bdb" kindref="member">buffer(s)</ref>: PaUtil_SetOutputChannel, PaUtil_SetInterleavedOutputChannels, PaUtil_SetNonInterleavedOutputChannel. Which function you call will depend on whether the host <ref refid="xmlparse_8c_1aaadc06b5dac8070de2c8677210967bdb" kindref="member">buffer(s)</ref> are interleaved or not.</para></listitem><listitem><para>If the available host output buffer space is split accross two buffers (for example a data range at the end of a circular buffer and another range at the beginning of the circular buffer), call PaUtil_Set2ndOutputFrameCount, PaUtil_Set2ndOutputChannel, PaUtil_Set2ndInterleavedOutputChannels, PaUtil_Set2ndNonInterleavedOutputChannel as necessary to tell the buffer processor about the second buffer.</para></listitem></itemizedlist>
</para></listitem><listitem><para>Call PaUtil_EndBufferProcessing, this function performs the actual data conversion and processing.</para></listitem></orderedlist>
</para><para><heading level="4">Using the buffer processor for a blocking read/write stream</heading>
</para><para>Blocking read/write streams use the buffer processor to convert and copy user output data to a host buffer, and to convert and copy host input data to the user&apos;s buffer. The buffer processor does not perform any buffer adaption. When using the buffer processor in a blocking read/write stream the input and output conversion are performed separately by the PaUtil_CopyInput and PaUtil_CopyOutput functions.</para><para>To copy data from a host input buffer to the <ref refid="xmlparse_8c_1aaadc06b5dac8070de2c8677210967bdb" kindref="member">buffer(s)</ref> which the user supplies to Pa_ReadStream, use the following calling sequence.</para><para><itemizedlist>
<listitem><para>Repeat the following three steps until the user <ref refid="xmlparse_8c_1aaadc06b5dac8070de2c8677210967bdb" kindref="member">buffer(s)</ref> have been filled with samples from the host input buffers:<orderedlist>
<listitem><para>Call PaUtil_SetInputFrameCount with the number of frames in the host input buffer.</para></listitem><listitem><para>Call one of the following functions one or more times to tell the buffer processor about the host input <ref refid="xmlparse_8c_1aaadc06b5dac8070de2c8677210967bdb" kindref="member">buffer(s)</ref>: PaUtil_SetInputChannel, PaUtil_SetInterleavedInputChannels, PaUtil_SetNonInterleavedInputChannel. Which function you call will depend on whether the host <ref refid="xmlparse_8c_1aaadc06b5dac8070de2c8677210967bdb" kindref="member">buffer(s)</ref> are interleaved or not.</para></listitem><listitem><para>Call PaUtil_CopyInput with the user buffer pointer (or a copy of the array of buffer pointers for a non-interleaved stream) passed to Pa_ReadStream, along with the number of frames in the user <ref refid="xmlparse_8c_1aaadc06b5dac8070de2c8677210967bdb" kindref="member">buffer(s)</ref>. Be careful to pass a <emphasis>copy</emphasis> of the user buffer pointers to PaUtil_CopyInput because PaUtil_CopyInput advances the pointers to the start of the next region to copy.</para></listitem></orderedlist>
</para></listitem><listitem><para>PaUtil_CopyInput will not copy more data than is available in the host <ref refid="xmlparse_8c_1aaadc06b5dac8070de2c8677210967bdb" kindref="member">buffer(s)</ref>, so the above steps need to be repeated until the user <ref refid="xmlparse_8c_1aaadc06b5dac8070de2c8677210967bdb" kindref="member">buffer(s)</ref> are full.</para></listitem></itemizedlist>
</para><para>To copy data to the host output buffer from the user buffers(s) supplied to Pa_WriteStream use the following calling sequence.</para><para><itemizedlist>
<listitem><para>Repeat the following three steps until all frames from the user <ref refid="xmlparse_8c_1aaadc06b5dac8070de2c8677210967bdb" kindref="member">buffer(s)</ref> have been copied to the host API:<orderedlist>
<listitem><para>Call PaUtil_SetOutputFrameCount with the number of frames in the host output buffer.</para></listitem><listitem><para>Call one of the following functions one or more times to tell the buffer processor about the host output <ref refid="xmlparse_8c_1aaadc06b5dac8070de2c8677210967bdb" kindref="member">buffer(s)</ref>: PaUtil_SetOutputChannel, PaUtil_SetInterleavedOutputChannels, PaUtil_SetNonInterleavedOutputChannel. Which function you call will depend on whether the host <ref refid="xmlparse_8c_1aaadc06b5dac8070de2c8677210967bdb" kindref="member">buffer(s)</ref> are interleaved or not.</para></listitem><listitem><para>Call PaUtil_CopyOutput with the user buffer pointer (or a copy of the array of buffer pointers for a non-interleaved stream) passed to Pa_WriteStream, along with the number of frames in the user <ref refid="xmlparse_8c_1aaadc06b5dac8070de2c8677210967bdb" kindref="member">buffer(s)</ref>. Be careful to pass a <emphasis>copy</emphasis> of the user buffer pointers to PaUtil_CopyOutput because PaUtil_CopyOutput advances the pointers to the start of the next region to copy.</para></listitem></orderedlist>
</para></listitem><listitem><para>PaUtil_CopyOutput will not copy more data than fits in the host <ref refid="xmlparse_8c_1aaadc06b5dac8070de2c8677210967bdb" kindref="member">buffer(s)</ref>, so the above steps need to be repeated until all user data is copied. </para></listitem></itemizedlist>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>PA_PROCESS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PA_PROCESS_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>$Id:<sp/>pa_process.h<sp/>1668<sp/>2011-05-02<sp/>17:07:11Z<sp/>rossb<sp/>$</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Portable<sp/>Audio<sp/>I/O<sp/>Library<sp/>callback<sp/>buffer<sp/>processing<sp/>adapters</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>Based<sp/>on<sp/>the<sp/>Open<sp/>Source<sp/>API<sp/>proposed<sp/>by<sp/>Ross<sp/>Bencina</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>1999-2002<sp/>Phil<sp/>Burk,<sp/>Ross<sp/>Bencina</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>a<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Software<sp/>without<sp/>restriction,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Software,</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is<sp/>furnished<sp/>to<sp/>do<sp/>so,</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>included<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>The<sp/>text<sp/>above<sp/>constitutes<sp/>the<sp/>entire<sp/>PortAudio<sp/>license;<sp/>however,<sp/></highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>the<sp/>PortAudio<sp/>community<sp/>also<sp/>makes<sp/>the<sp/>following<sp/>non-binding<sp/>requests:</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>Any<sp/>person<sp/>wishing<sp/>to<sp/>distribute<sp/>modifications<sp/>to<sp/>the<sp/>Software<sp/>is</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/>requested<sp/>to<sp/>send<sp/>the<sp/>modifications<sp/>to<sp/>the<sp/>original<sp/>developer<sp/>so<sp/>that</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/>they<sp/>can<sp/>be<sp/>incorporated<sp/>into<sp/>the<sp/>canonical<sp/>version.<sp/>It<sp/>is<sp/>also<sp/></highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>requested<sp/>that<sp/>these<sp/>non-binding<sp/>requests<sp/>be<sp/>included<sp/>along<sp/>with<sp/>the<sp/></highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>license<sp/>above.</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="203"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="portaudio_8h" kindref="compound">portaudio.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pa__converters_8h" kindref="compound">pa_converters.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pa__dither_8h" kindref="compound">pa_dither.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal">{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>__cplusplus<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="219" refid="pa__process_8h_1a16c84d8c0ac62944797f530bf852484f" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="221" refid="pa__process_8h_1a16c84d8c0ac62944797f530bf852484fa5e79e1ea4d8f114cfe83caa9b08610d8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__process_8h_1a16c84d8c0ac62944797f530bf852484fa5e79e1ea4d8f114cfe83caa9b08610d8" kindref="member">paUtilFixedHostBufferSize</ref>,</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="224" refid="pa__process_8h_1a16c84d8c0ac62944797f530bf852484fa2e97156fbdf5444b7bcc53b60f368d8b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__process_8h_1a16c84d8c0ac62944797f530bf852484fa2e97156fbdf5444b7bcc53b60f368d8b" kindref="member">paUtilBoundedHostBufferSize</ref>,</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="227" refid="pa__process_8h_1a16c84d8c0ac62944797f530bf852484fa4273c3f42fdaa887af00afa2bdb03cc0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__process_8h_1a16c84d8c0ac62944797f530bf852484fa4273c3f42fdaa887af00afa2bdb03cc0" kindref="member">paUtilUnknownHostBufferSize</ref>,</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="236" refid="pa__process_8h_1a16c84d8c0ac62944797f530bf852484fa90f2d4ab46cdebfe7efaadc602bf3c78" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__process_8h_1a16c84d8c0ac62944797f530bf852484fa90f2d4ab46cdebfe7efaadc602bf3c78" kindref="member">paUtilVariableHostBufferSizePartialUsageAllowed</ref></highlight></codeline>
<codeline lineno="237"><highlight class="normal">}<ref refid="pa__process_8h_1a16c84d8c0ac62944797f530bf852484f" kindref="member">PaUtilHostBufferSizeMode</ref>;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="242" refid="struct_pa_util_channel_descriptor" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_pa_util_channel_descriptor" kindref="compound">PaUtilChannelDescriptor</ref>{</highlight></codeline>
<codeline lineno="243" refid="struct_pa_util_channel_descriptor_1a4304aa36eb3b1655d4eb14a6bd5f4872" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="struct_pa_util_channel_descriptor_1a4304aa36eb3b1655d4eb14a6bd5f4872" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="244" refid="struct_pa_util_channel_descriptor_1a9c9ef6ca4556396d20eac3eebb81e27b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_pa_util_channel_descriptor_1a9c9ef6ca4556396d20eac3eebb81e27b" kindref="member">stride</ref>;<sp/><sp/></highlight></codeline>
<codeline lineno="245"><highlight class="normal">}<ref refid="pa__process_8h_1ab595814fb534b35f08ed1a34bfbbf923" kindref="member">PaUtilChannelDescriptor</ref>;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="253" refid="struct_pa_util_buffer_processor" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="254" refid="struct_pa_util_buffer_processor_1a2a61168f6d216e6aaade39b77452bcb9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="struct_pa_util_buffer_processor_1a2a61168f6d216e6aaade39b77452bcb9" kindref="member">framesPerUserBuffer</ref>;</highlight></codeline>
<codeline lineno="255" refid="struct_pa_util_buffer_processor_1aeec9ebf0c415b1e8aa4b1667ebbc839a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="struct_pa_util_buffer_processor_1aeec9ebf0c415b1e8aa4b1667ebbc839a" kindref="member">framesPerHostBuffer</ref>;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257" refid="struct_pa_util_buffer_processor_1a71c934464b2671889ec3e20192e6e8d9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>PaUtilHostBufferSizeMode<sp/><ref refid="struct_pa_util_buffer_processor_1a71c934464b2671889ec3e20192e6e8d9" kindref="member">hostBufferSizeMode</ref>;</highlight></codeline>
<codeline lineno="258" refid="struct_pa_util_buffer_processor_1a58c81d2f3c782274e0ab7ad6ab006034" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_pa_util_buffer_processor_1a58c81d2f3c782274e0ab7ad6ab006034" kindref="member">useNonAdaptingProcess</ref>;</highlight></codeline>
<codeline lineno="259" refid="struct_pa_util_buffer_processor_1ad791f8650ed327dc106a6f97c3ec5799" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_pa_util_buffer_processor_1ad791f8650ed327dc106a6f97c3ec5799" kindref="member">userOutputSampleFormatIsEqualToHost</ref>;</highlight></codeline>
<codeline lineno="260" refid="struct_pa_util_buffer_processor_1a8667d06325ee28d95c48159ff49e044e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_pa_util_buffer_processor_1a8667d06325ee28d95c48159ff49e044e" kindref="member">userInputSampleFormatIsEqualToHost</ref>;</highlight></codeline>
<codeline lineno="261" refid="struct_pa_util_buffer_processor_1a583f3db6161dbf7a79fb9b56f7c578a0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="struct_pa_util_buffer_processor_1a583f3db6161dbf7a79fb9b56f7c578a0" kindref="member">framesPerTempBuffer</ref>;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263" refid="struct_pa_util_buffer_processor_1a878ec922a2464a3d57119d175f362366" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_pa_util_buffer_processor_1a878ec922a2464a3d57119d175f362366" kindref="member">inputChannelCount</ref>;</highlight></codeline>
<codeline lineno="264" refid="struct_pa_util_buffer_processor_1ad7d3d4973cfe90f69dbb2fcf16a59d92" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_pa_util_buffer_processor_1ad7d3d4973cfe90f69dbb2fcf16a59d92" kindref="member">bytesPerHostInputSample</ref>;</highlight></codeline>
<codeline lineno="265" refid="struct_pa_util_buffer_processor_1aaa4aba8c617b56f63f165e35b28fe393" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_pa_util_buffer_processor_1aaa4aba8c617b56f63f165e35b28fe393" kindref="member">bytesPerUserInputSample</ref>;</highlight></codeline>
<codeline lineno="266" refid="struct_pa_util_buffer_processor_1a08fb4a5b71ccc3aa1893d8e6c035d192" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_pa_util_buffer_processor_1a08fb4a5b71ccc3aa1893d8e6c035d192" kindref="member">userInputIsInterleaved</ref>;</highlight></codeline>
<codeline lineno="267" refid="struct_pa_util_buffer_processor_1a8bad04b047411362da5a81c38dde04af" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__converters_8h_1a4f65f7c2e9e185e7f8caebe85ae9575c" kindref="member">PaUtilConverter</ref><sp/>*<ref refid="struct_pa_util_buffer_processor_1a8bad04b047411362da5a81c38dde04af" kindref="member">inputConverter</ref>;</highlight></codeline>
<codeline lineno="268" refid="struct_pa_util_buffer_processor_1a032b5f8772cc7fe2ec6a43219afdf367" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__converters_8h_1a6f0dab7cde48b5f41801024ed20be7e7" kindref="member">PaUtilZeroer</ref><sp/>*<ref refid="struct_pa_util_buffer_processor_1a032b5f8772cc7fe2ec6a43219afdf367" kindref="member">inputZeroer</ref>;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="270" refid="struct_pa_util_buffer_processor_1af2c3ba9b0cc5bd8eb2fad8b73b40ad18" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_pa_util_buffer_processor_1af2c3ba9b0cc5bd8eb2fad8b73b40ad18" kindref="member">outputChannelCount</ref>;</highlight></codeline>
<codeline lineno="271" refid="struct_pa_util_buffer_processor_1a8a796dfdfac7c79bfffe8a44e690b358" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_pa_util_buffer_processor_1a8a796dfdfac7c79bfffe8a44e690b358" kindref="member">bytesPerHostOutputSample</ref>;</highlight></codeline>
<codeline lineno="272" refid="struct_pa_util_buffer_processor_1aa390974cb52943cf40efed34c1daf52b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_pa_util_buffer_processor_1aa390974cb52943cf40efed34c1daf52b" kindref="member">bytesPerUserOutputSample</ref>;</highlight></codeline>
<codeline lineno="273" refid="struct_pa_util_buffer_processor_1a3be95f50566a88ebdc2697cde95d042e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_pa_util_buffer_processor_1a3be95f50566a88ebdc2697cde95d042e" kindref="member">userOutputIsInterleaved</ref>;</highlight></codeline>
<codeline lineno="274" refid="struct_pa_util_buffer_processor_1ac6a539ab66c9a4a71d8603e7ed7394ad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__converters_8h_1a4f65f7c2e9e185e7f8caebe85ae9575c" kindref="member">PaUtilConverter</ref><sp/>*<ref refid="struct_pa_util_buffer_processor_1ac6a539ab66c9a4a71d8603e7ed7394ad" kindref="member">outputConverter</ref>;</highlight></codeline>
<codeline lineno="275" refid="struct_pa_util_buffer_processor_1a25fadc2a2170fbd7c8ca85b06860ca3c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pa__converters_8h_1a6f0dab7cde48b5f41801024ed20be7e7" kindref="member">PaUtilZeroer</ref><sp/>*<ref refid="struct_pa_util_buffer_processor_1a25fadc2a2170fbd7c8ca85b06860ca3c" kindref="member">outputZeroer</ref>;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277" refid="struct_pa_util_buffer_processor_1a4deddc94ba71c17171e8ae823b89e832" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="struct_pa_util_buffer_processor_1a4deddc94ba71c17171e8ae823b89e832" kindref="member">initialFramesInTempInputBuffer</ref>;</highlight></codeline>
<codeline lineno="278" refid="struct_pa_util_buffer_processor_1aec8e9dfce47109ff1f1d8cfa3c411c74" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="struct_pa_util_buffer_processor_1aec8e9dfce47109ff1f1d8cfa3c411c74" kindref="member">initialFramesInTempOutputBuffer</ref>;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280" refid="struct_pa_util_buffer_processor_1a327f8e240df961caa6c47bb9a35a9b76" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="struct_pa_util_buffer_processor_1a327f8e240df961caa6c47bb9a35a9b76" kindref="member">tempInputBuffer</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="281" refid="struct_pa_util_buffer_processor_1ad4fa78d30f36f82c45278b9fda2322f9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**<ref refid="struct_pa_util_buffer_processor_1ad4fa78d30f36f82c45278b9fda2322f9" kindref="member">tempInputBufferPtrs</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="282" refid="struct_pa_util_buffer_processor_1a8b1a7ccf36beec18977244c4dd9c6af2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="struct_pa_util_buffer_processor_1a8b1a7ccf36beec18977244c4dd9c6af2" kindref="member">framesInTempInputBuffer</ref>;<sp/></highlight></codeline>
<codeline lineno="284" refid="struct_pa_util_buffer_processor_1a6aaded76991a6014bc78290fca38124e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="struct_pa_util_buffer_processor_1a6aaded76991a6014bc78290fca38124e" kindref="member">tempOutputBuffer</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="285" refid="struct_pa_util_buffer_processor_1a893544dc94d125b204167cf61f87ff9a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**<ref refid="struct_pa_util_buffer_processor_1a893544dc94d125b204167cf61f87ff9a" kindref="member">tempOutputBufferPtrs</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="286" refid="struct_pa_util_buffer_processor_1a7cb25636fa0e415bdbd87469b5fa4a03" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="struct_pa_util_buffer_processor_1a7cb25636fa0e415bdbd87469b5fa4a03" kindref="member">framesInTempOutputBuffer</ref>;<sp/></highlight></codeline>
<codeline lineno="288" refid="struct_pa_util_buffer_processor_1addae164599da4e3cad4498350cc9e39e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_stream_callback_time_info" kindref="compound">PaStreamCallbackTimeInfo</ref><sp/>*<ref refid="struct_pa_util_buffer_processor_1addae164599da4e3cad4498350cc9e39e" kindref="member">timeInfo</ref>;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290" refid="struct_pa_util_buffer_processor_1a269d950005d05b2c15d13d0e643c936e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a55a005924bcfa0424594f4f65cd4ae82" kindref="member">PaStreamCallbackFlags</ref><sp/><ref refid="struct_pa_util_buffer_processor_1a269d950005d05b2c15d13d0e643c936e" kindref="member">callbackStatusFlags</ref>;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292" refid="struct_pa_util_buffer_processor_1a5bcaa1f67c5f868a2947c1026880f6d6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_pa_util_buffer_processor_1a5bcaa1f67c5f868a2947c1026880f6d6" kindref="member">hostInputIsInterleaved</ref>;</highlight></codeline>
<codeline lineno="293" refid="struct_pa_util_buffer_processor_1a9a72a362c2a3b03b6badd0ecfd72837c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>hostInputFrameCount[2];</highlight></codeline>
<codeline lineno="294" refid="struct_pa_util_buffer_processor_1a03ea3d7816db14d4fc8ee8bde013d99e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_util_channel_descriptor" kindref="compound">PaUtilChannelDescriptor</ref><sp/>*hostInputChannels[2];<sp/></highlight></codeline>
<codeline lineno="299" refid="struct_pa_util_buffer_processor_1a3be5c10e3f9e36326103443929547e25" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_pa_util_buffer_processor_1a3be5c10e3f9e36326103443929547e25" kindref="member">hostOutputIsInterleaved</ref>;</highlight></codeline>
<codeline lineno="300" refid="struct_pa_util_buffer_processor_1ac5e048842fdfdee1764ab049a1306cfe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>hostOutputFrameCount[2];</highlight></codeline>
<codeline lineno="301" refid="struct_pa_util_buffer_processor_1a6d78b9d008d30e6addc9a83470756831" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_util_channel_descriptor" kindref="compound">PaUtilChannelDescriptor</ref><sp/>*hostOutputChannels[2];<sp/></highlight></codeline>
<codeline lineno="307" refid="struct_pa_util_buffer_processor_1a113fbcc8dab47dc9eb29b9541520084b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_pa_util_triangular_dither_generator" kindref="compound">PaUtilTriangularDitherGenerator</ref><sp/><ref refid="struct_pa_util_buffer_processor_1a113fbcc8dab47dc9eb29b9541520084b" kindref="member">ditherGenerator</ref>;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309" refid="struct_pa_util_buffer_processor_1aea54ceb550e1d66824d6f8cf55af8489" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="struct_pa_util_buffer_processor_1aea54ceb550e1d66824d6f8cf55af8489" kindref="member">samplePeriod</ref>;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311" refid="struct_pa_util_buffer_processor_1af6577f767ed4c58d5e511d125e6b1c4a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a8a60fb2a5ec9cbade3f54a9c978e2710" kindref="member">PaStreamCallback</ref><sp/>*<ref refid="struct_pa_util_buffer_processor_1af6577f767ed4c58d5e511d125e6b1c4a" kindref="member">streamCallback</ref>;</highlight></codeline>
<codeline lineno="312" refid="struct_pa_util_buffer_processor_1aa0c7b972bd1494d40373e9e13475af4b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="struct_pa_util_buffer_processor_1aa0c7b972bd1494d40373e9e13475af4b" kindref="member">userData</ref>;</highlight></codeline>
<codeline lineno="313"><highlight class="normal">}<sp/><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref>;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"></codeline>
<codeline lineno="377"><highlight class="normal"><ref refid="portaudio_8h_1a4949e4a8ef9f9dbe8cbee414ce69841d" kindref="member">PaError</ref><sp/><ref refid="pa__process_8h_1adbf068f554a245c493eb0817ad8bc67e" kindref="member">PaUtil_InitializeBufferProcessor</ref>(<sp/><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref>*<sp/>bufferProcessor,</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inputChannelCount,<sp/><ref refid="portaudio_8h_1a4582d93c2c2e60e12be3d74c5fe00b96" kindref="member">PaSampleFormat</ref><sp/>userInputSampleFormat,</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a4582d93c2c2e60e12be3d74c5fe00b96" kindref="member">PaSampleFormat</ref><sp/>hostInputSampleFormat,</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>outputChannelCount,<sp/><ref refid="portaudio_8h_1a4582d93c2c2e60e12be3d74c5fe00b96" kindref="member">PaSampleFormat</ref><sp/>userOutputSampleFormat,</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a4582d93c2c2e60e12be3d74c5fe00b96" kindref="member">PaSampleFormat</ref><sp/>hostOutputSampleFormat,</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacepatest__suggested__vs__streaminfo__latency_1a14f2ecd6f756d329f6df4096833062d0" kindref="member">sampleRate</ref>,</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a37c7ac3ace7d2dd1430f40ecdee4ebb6" kindref="member">PaStreamFlags</ref><sp/>streamFlags,</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>framesPerUserBuffer,<sp/></highlight><highlight class="comment">/*<sp/>0<sp/>indicates<sp/>don&apos;t<sp/>care<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>framesPerHostBuffer,</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PaUtilHostBufferSizeMode<sp/>hostBufferSizeMode,</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="portaudio_8h_1a8a60fb2a5ec9cbade3f54a9c978e2710" kindref="member">PaStreamCallback</ref><sp/>*streamCallback,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="xmlparse_8c_1a4b666535c828e23ccd16510a0a1a1943" kindref="member">userData</ref><sp/>);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pa__process_8h_1af872943fc77bbc32f0196e86f16a7c24" kindref="member">PaUtil_TerminateBufferProcessor</ref>(<sp/><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref>*<sp/>bufferProcessor<sp/>);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pa__process_8h_1a6f82fd15e56b10ed8e858be9ad8765e3" kindref="member">PaUtil_ResetBufferProcessor</ref>(<sp/><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref>*<sp/>bufferProcessor<sp/>);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="pa__process_8h_1a4871dfd93b00739e0dafdd4ea7671c9a" kindref="member">PaUtil_GetBufferProcessorInputLatencyFrames</ref>(<sp/><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref>*<sp/>bufferProcessor<sp/>);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="pa__process_8h_1a92a70efcd9dd7c8e1ea735580dee7e4a" kindref="member">PaUtil_GetBufferProcessorOutputLatencyFrames</ref>(<sp/><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref>*<sp/>bufferProcessor<sp/>);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pa__process_8h_1a5201db0d922fac6e3b513bf8c4d59149" kindref="member">PaUtil_SetInputFrameCount</ref>(<sp/><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref>*<sp/>bufferProcessor,</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>frameCount<sp/>);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="462"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pa__process_8h_1a46c4eca9005b038a32877bdcebc1dbc9" kindref="member">PaUtil_SetNoInput</ref>(<sp/><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref>*<sp/>bufferProcessor<sp/>);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pa__process_8h_1a98b89245c209d2a0b367ed8d82bde5ca" kindref="member">PaUtil_SetInputChannel</ref>(<sp/><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref>*<sp/>bufferProcessor,</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channel,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_pa_util_channel_descriptor_1a9c9ef6ca4556396d20eac3eebb81e27b" kindref="member">stride</ref><sp/>);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pa__process_8h_1ab62cb33b10a25676a03a0bc0c0134eaa" kindref="member">PaUtil_SetInterleavedInputChannels</ref>(<sp/><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref>*<sp/>bufferProcessor,</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>firstChannel,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channelCount<sp/>);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pa__process_8h_1a309097fe924b746ac3e05260993abb42" kindref="member">PaUtil_SetNonInterleavedInputChannel</ref>(<sp/><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref>*<sp/>bufferProcessor,</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channel,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref><sp/>);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pa__process_8h_1a469724724e74e5e1a8ea97f98f2d76bd" kindref="member">PaUtil_Set2ndInputFrameCount</ref>(<sp/><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref>*<sp/>bufferProcessor,</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>frameCount<sp/>);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pa__process_8h_1a89d233c8e934e1495f4b40d6baf2c8c9" kindref="member">PaUtil_Set2ndInputChannel</ref>(<sp/><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref>*<sp/>bufferProcessor,</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channel,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_pa_util_channel_descriptor_1a9c9ef6ca4556396d20eac3eebb81e27b" kindref="member">stride</ref><sp/>);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pa__process_8h_1ad483fb76f7a894c0c085b7b054fcc993" kindref="member">PaUtil_Set2ndInterleavedInputChannels</ref>(<sp/><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref>*<sp/>bufferProcessor,</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>firstChannel,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channelCount<sp/>);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pa__process_8h_1a7a0f949512c7b443c72dbc8fdee2cb5b" kindref="member">PaUtil_Set2ndNonInterleavedInputChannel</ref>(<sp/><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref>*<sp/>bufferProcessor,</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channel,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref><sp/>);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="539"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pa__process_8h_1aafe79d7110067c783ec401e8961bebe8" kindref="member">PaUtil_SetOutputFrameCount</ref>(<sp/><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref>*<sp/>bufferProcessor,</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>frameCount<sp/>);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pa__process_8h_1acf981028bf1d439959fe2287f51306fa" kindref="member">PaUtil_SetNoOutput</ref>(<sp/><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref>*<sp/>bufferProcessor<sp/>);</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pa__process_8h_1a7d622722b03549d8f274aae5b8e5a93c" kindref="member">PaUtil_SetOutputChannel</ref>(<sp/><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref>*<sp/>bufferProcessor,</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channel,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_pa_util_channel_descriptor_1a9c9ef6ca4556396d20eac3eebb81e27b" kindref="member">stride</ref><sp/>);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pa__process_8h_1a3e31c5710305b2beb153f8f39b922623" kindref="member">PaUtil_SetInterleavedOutputChannels</ref>(<sp/><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref>*<sp/>bufferProcessor,</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>firstChannel,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channelCount<sp/>);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="585"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pa__process_8h_1a8108f7e3e890843830654e7cc4d176f1" kindref="member">PaUtil_SetNonInterleavedOutputChannel</ref>(<sp/><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref>*<sp/>bufferProcessor,</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channel,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref><sp/>);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pa__process_8h_1a24af08a401dcc32a29a155f196ac3839" kindref="member">PaUtil_Set2ndOutputFrameCount</ref>(<sp/><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref>*<sp/>bufferProcessor,</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>frameCount<sp/>);</highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pa__process_8h_1ad67081555880d451b1c5c6c5ab2189b0" kindref="member">PaUtil_Set2ndOutputChannel</ref>(<sp/><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref>*<sp/>bufferProcessor,</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channel,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_pa_util_channel_descriptor_1a9c9ef6ca4556396d20eac3eebb81e27b" kindref="member">stride</ref><sp/>);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pa__process_8h_1a9077bfaf0ac1f9f06f3afd9359a842d6" kindref="member">PaUtil_Set2ndInterleavedOutputChannels</ref>(<sp/><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref>*<sp/>bufferProcessor,</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>firstChannel,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channelCount<sp/>);</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pa__process_8h_1abf2be8935e0862a1fbe157260ed1f8b8" kindref="member">PaUtil_Set2ndNonInterleavedOutputChannel</ref>(<sp/><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref>*<sp/>bufferProcessor,</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>channel,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="lib_2expat_8h_1ac39e72a1de1cb50dbdc54b08d0432a24" kindref="member">data</ref><sp/>);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="619"></codeline>
<codeline lineno="632"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="pa__process_8h_1ae791a33948eed0a902d618bfd0e0a825" kindref="member">PaUtil_BeginBufferProcessing</ref>(<sp/><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref>*<sp/>bufferProcessor,</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_pa_stream_callback_time_info" kindref="compound">PaStreamCallbackTimeInfo</ref>*<sp/>timeInfo,<sp/><ref refid="portaudio_8h_1a55a005924bcfa0424594f4f65cd4ae82" kindref="member">PaStreamCallbackFlags</ref><sp/>callbackStatusFlags<sp/>);</highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="659"><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="pa__process_8h_1afbbc470b417a31de0b9944d476adaaa0" kindref="member">PaUtil_EndBufferProcessing</ref>(<sp/><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref>*<sp/>bufferProcessor,</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*callbackResult<sp/>);</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="pa__process_8h_1aa330f62537935124788387624d6a5362" kindref="member">PaUtil_IsBufferProcessorOutputEmpty</ref>(<sp/><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref>*<sp/>bufferProcessor<sp/>);</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="682"></codeline>
<codeline lineno="704"><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="pa__process_8h_1a9a8ada1e97f38a135c1cd229affc538c" kindref="member">PaUtil_CopyInput</ref>(<sp/><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref>*<sp/>bufferProcessor,</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**<ref refid="structbuffer" kindref="compound">buffer</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>frameCount<sp/>);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Copy<sp/>samples<sp/>from<sp/>a<sp/>user<sp/>supplied<sp/>buffer<sp/>to<sp/>host<sp/>output<sp/>channels<sp/>set<sp/>up<sp/>by</highlight></codeline>
<codeline lineno="709"><highlight class="comment"><sp/>the<sp/>PaUtil_Set*OutputChannels<sp/>functions.<sp/>This<sp/>function<sp/>is<sp/>intended<sp/>for<sp/>use<sp/>with</highlight></codeline>
<codeline lineno="710"><highlight class="comment"><sp/>blocking<sp/>read/write<sp/>streams.<sp/>Copies<sp/>the<sp/>minimum<sp/>of<sp/>the<sp/>number<sp/>of</highlight></codeline>
<codeline lineno="711"><highlight class="comment"><sp/>user<sp/>frames<sp/>(specified<sp/>by<sp/>the<sp/>frameCount<sp/>parameter)<sp/>and<sp/>the<sp/>number<sp/>of</highlight></codeline>
<codeline lineno="712"><highlight class="comment"><sp/>host<sp/>frames<sp/>(specified<sp/>in<sp/>a<sp/>previous<sp/>call<sp/>to<sp/>SetOutputFrameCount()).</highlight></codeline>
<codeline lineno="713"><highlight class="comment"></highlight></codeline>
<codeline lineno="714"><highlight class="comment"><sp/>@param<sp/>bufferProcessor<sp/>The<sp/>buffer<sp/>processor.</highlight></codeline>
<codeline lineno="715"><highlight class="comment"></highlight></codeline>
<codeline lineno="716"><highlight class="comment"><sp/>@param<sp/>buffer<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>user<sp/>buffer<sp/>pointer,<sp/>or<sp/>a<sp/>pointer<sp/>to<sp/>a<sp/>pointer</highlight></codeline>
<codeline lineno="717"><highlight class="comment"><sp/>to<sp/>an<sp/>array<sp/>of<sp/>user<sp/>buffer<sp/>pointers<sp/>for<sp/>a<sp/>non-interleaved<sp/>stream.<sp/>It<sp/>is</highlight></codeline>
<codeline lineno="718"><highlight class="comment"><sp/>important<sp/>that<sp/>this<sp/>parameter<sp/>points<sp/>to<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>user<sp/>buffer<sp/>pointers,</highlight></codeline>
<codeline lineno="719"><highlight class="comment"><sp/>not<sp/>to<sp/>the<sp/>actual<sp/>user<sp/>buffer<sp/>pointers,<sp/>because<sp/>this<sp/>function<sp/>updates<sp/>the</highlight></codeline>
<codeline lineno="720"><highlight class="comment"><sp/>pointers<sp/>before<sp/>returning.</highlight></codeline>
<codeline lineno="721"><highlight class="comment"></highlight></codeline>
<codeline lineno="722"><highlight class="comment"><sp/>@param<sp/>frameCount<sp/>The<sp/>number<sp/>of<sp/>frames<sp/>of<sp/>data<sp/>in<sp/>the<sp/>buffer(s)<sp/>pointed<sp/>to<sp/>by</highlight></codeline>
<codeline lineno="723"><highlight class="comment"><sp/>the<sp/>buffer<sp/>parameter.</highlight></codeline>
<codeline lineno="724"><highlight class="comment"></highlight></codeline>
<codeline lineno="725"><highlight class="comment"><sp/>@return<sp/>The<sp/>number<sp/>of<sp/>frames<sp/>copied.<sp/>The<sp/>buffer<sp/>pointer(s)<sp/>pointed<sp/>to<sp/>by<sp/>the</highlight></codeline>
<codeline lineno="726"><highlight class="comment"><sp/>buffer<sp/>parameter<sp/>are<sp/>advanced<sp/>to<sp/>point<sp/>to<sp/>the<sp/>frame(s)<sp/>following<sp/>the<sp/>last<sp/>one</highlight></codeline>
<codeline lineno="727"><highlight class="comment"><sp/>copied.</highlight></codeline>
<codeline lineno="728"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="pa__process_8h_1af32b13037c9e4fcda0e1af1041102d9c" kindref="member">PaUtil_CopyOutput</ref>(<sp/><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref>*<sp/>bufferProcessor,</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**<sp/><ref refid="structbuffer" kindref="compound">buffer</ref>,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>frameCount<sp/>);</highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Zero<sp/>samples<sp/>in<sp/>host<sp/>output<sp/>channels<sp/>set<sp/>up<sp/>by<sp/>the<sp/>PaUtil_Set*OutputChannels</highlight></codeline>
<codeline lineno="734"><highlight class="comment"><sp/>functions.<sp/>This<sp/>function<sp/>is<sp/>useful<sp/>for<sp/>flushing<sp/>streams.</highlight></codeline>
<codeline lineno="735"><highlight class="comment"><sp/>Zeros<sp/>the<sp/>minimum<sp/>of<sp/>frameCount<sp/>and<sp/>the<sp/>number<sp/>of<sp/>host<sp/>frames<sp/>specified<sp/>in<sp/>a</highlight></codeline>
<codeline lineno="736"><highlight class="comment"><sp/>previous<sp/>call<sp/>to<sp/>SetOutputFrameCount().</highlight></codeline>
<codeline lineno="737"><highlight class="comment"></highlight></codeline>
<codeline lineno="738"><highlight class="comment"><sp/>@param<sp/>bufferProcessor<sp/>The<sp/>buffer<sp/>processor.</highlight></codeline>
<codeline lineno="739"><highlight class="comment"></highlight></codeline>
<codeline lineno="740"><highlight class="comment"><sp/>@param<sp/>frameCount<sp/>The<sp/>maximum<sp/>number<sp/>of<sp/>frames<sp/>to<sp/>zero.</highlight></codeline>
<codeline lineno="741"><highlight class="comment"><sp/></highlight></codeline>
<codeline lineno="742"><highlight class="comment"><sp/>@return<sp/>The<sp/>number<sp/>of<sp/>frames<sp/>zeroed.</highlight></codeline>
<codeline lineno="743"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="pa__process_8h_1a59efdbd92383b5388e484188827c2eb1" kindref="member">PaUtil_ZeroOutput</ref>(<sp/><ref refid="struct_pa_util_buffer_processor" kindref="compound">PaUtilBufferProcessor</ref>*<sp/>bufferProcessor,</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>frameCount<sp/>);</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal">}</highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>__cplusplus<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>PA_PROCESS_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portaudio-v19/src/common/pa_process.h"/>
  </compounddef>
</doxygen>
