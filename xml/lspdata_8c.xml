<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="lspdata_8c" kind="file" language="C++">
    <compoundname>lspdata.c</compoundname>
    <includes local="no">stdlib.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">stdio.h</includes>
    <includes refid="vqgen_8h" local="yes">vqgen.h</includes>
    <includes refid="vqext_8h" local="yes">vqext.h</includes>
    <includes refid="codebook_8h" local="yes">codebook.h</includes>
    <incdepgraph>
      <node id="24205">
        <label>sys/types.h</label>
        <link refid="lib-src_2libvorbis_2macos_2compat_2sys_2_types_8h"/>
        <childnode refid="24206" relation="include">
        </childnode>
        <childnode refid="24207" relation="include">
        </childnode>
        <childnode refid="24208" relation="include">
        </childnode>
      </node>
      <node id="24204">
        <label>stdint.h</label>
      </node>
      <node id="24193">
        <label>stdlib.h</label>
      </node>
      <node id="24196">
        <label>vqgen.h</label>
        <link refid="vqgen_8h"/>
      </node>
      <node id="24200">
        <label>stddef.h</label>
      </node>
      <node id="24207">
        <label>alloca.h</label>
      </node>
      <node id="24201">
        <label>ogg/os_types.h</label>
        <link refid="os__types_8h"/>
        <childnode refid="24202" relation="include">
        </childnode>
      </node>
      <node id="24198">
        <label>codebook.h</label>
        <link refid="codebook_8h"/>
        <childnode refid="24199" relation="include">
        </childnode>
      </node>
      <node id="24206">
        <label>MacTypes.h</label>
      </node>
      <node id="24208">
        <label>string.h</label>
      </node>
      <node id="24192">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/lspdata.c</label>
        <link refid="lspdata.c"/>
        <childnode refid="24193" relation="include">
        </childnode>
        <childnode refid="24194" relation="include">
        </childnode>
        <childnode refid="24195" relation="include">
        </childnode>
        <childnode refid="24196" relation="include">
        </childnode>
        <childnode refid="24197" relation="include">
        </childnode>
        <childnode refid="24198" relation="include">
        </childnode>
      </node>
      <node id="24199">
        <label>ogg/ogg.h</label>
        <link refid="ogg_8h"/>
        <childnode refid="24200" relation="include">
        </childnode>
        <childnode refid="24201" relation="include">
        </childnode>
      </node>
      <node id="24194">
        <label>math.h</label>
      </node>
      <node id="24202">
        <label>ogg/config_types.h</label>
        <link refid="config__types_8h"/>
        <childnode refid="24203" relation="include">
        </childnode>
        <childnode refid="24204" relation="include">
        </childnode>
        <childnode refid="24205" relation="include">
        </childnode>
      </node>
      <node id="24197">
        <label>vqext.h</label>
        <link refid="vqext_8h"/>
        <childnode refid="24196" relation="include">
        </childnode>
      </node>
      <node id="24195">
        <label>stdio.h</label>
      </node>
      <node id="24203">
        <label>inttypes.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="lspdata_8c_1ac7352a7dfd2613809689914aa876b868" prot="public" static="no">
        <name>FUDGE</name>
        <initializer>1.<ref refid="checksum_8c_1ae747d72a1a803f5ff4a4b2602857d93b" kindref="member">f</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/lspdata.c" line="101" column="10" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/lspdata.c" bodystart="101" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="lspdata_8c_1a8d4990893142a55d1107363a46b3e6b7" prot="public" static="no" mutable="no">
        <type>char *</type>
        <definition>char* vqext_booktype</definition>
        <argsstring></argsstring>
        <name>vqext_booktype</name>
        <initializer>=&quot;LSPdata&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/lspdata.c" line="25" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/lspdata.c" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="lspdata_8c_1aed566b4fd5f50587a3ee550f7cd010ae" prot="public" static="no" mutable="no">
        <type><ref refid="structquant__meta" kindref="compound">quant_meta</ref></type>
        <definition>quant_meta q</definition>
        <argsstring></argsstring>
        <name>q</name>
        <initializer>={0,0,0,1}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/lspdata.c" line="26" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/lspdata.c" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="lspdata_8c_1a3812044c98180800648b276298c6fb2b" prot="public" static="no" mutable="no">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int vqext_aux</definition>
        <argsstring></argsstring>
        <name>vqext_aux</name>
        <initializer>=1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/lspdata.c" line="27" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/lspdata.c" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="lspdata_8c_1a76eac6c4642c95fa083e4d0388f6d079" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float global_maxdel</definition>
        <argsstring></argsstring>
        <name>global_maxdel</name>
        <initializer>=<ref refid="_voice_key_8h_1ae71449b1cc6e6250b91f539153a7a0d3" kindref="member">M_PI</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/lspdata.c" line="29" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/lspdata.c" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="lspdata_8c_1af77036c3a95171a82548406c04c95a79" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float global_mindel</definition>
        <argsstring></argsstring>
        <name>global_mindel</name>
        <initializer>=<ref refid="_voice_key_8h_1ae71449b1cc6e6250b91f539153a7a0d3" kindref="member">M_PI</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/lspdata.c" line="30" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/lspdata.c" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="lspdata_8c_1a188f5f4011d6169f76ee43763c198076" prot="public" static="no" mutable="no">
        <type>float *</type>
        <definition>float* weight</definition>
        <argsstring></argsstring>
        <name>weight</name>
        <initializer>=<ref refid="px__mixer_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/lspdata.c" line="78" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/lspdata.c" bodystart="78" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="lspdata_8c_1ab02622a882d94b454daac75f02cb31ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void vqext_quantize</definition>
        <argsstring>(vqgen *v, quant_meta *q)</argsstring>
        <name>vqext_quantize</name>
        <param>
          <type><ref refid="structvqgen" kindref="compound">vqgen</ref> *</type>
          <declname>v</declname>
        </param>
        <param>
          <type><ref refid="structquant__meta" kindref="compound">quant_meta</ref> *</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/lspdata.c" line="73" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/lspdata.c" bodystart="73" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="lspdata_8c_1a81ad49bed8ca0fb82874e15fd0605410" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float *</type>
        <definition>float* vqext_weight</definition>
        <argsstring>(vqgen *v, float *p)</argsstring>
        <name>vqext_weight</name>
        <param>
          <type><ref refid="structvqgen" kindref="compound">vqgen</ref> *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/lspdata.c" line="102" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/lspdata.c" bodystart="102" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="lspdata_8c_1a782e334154df41b321d2130becc66481" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float vqext_metric</definition>
        <argsstring>(vqgen *v, float *e, float *p)</argsstring>
        <name>vqext_metric</name>
        <param>
          <type><ref refid="structvqgen" kindref="compound">vqgen</ref> *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/lspdata.c" line="108" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/lspdata.c" bodystart="108" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="lspdata_8c_1a42449324950d7a9d21906e7581695ede" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void vqext_addpoint_adj</definition>
        <argsstring>(vqgen *v, float *b, int start, int dim, int cols, int num)</argsstring>
        <name>vqext_addpoint_adj</name>
        <param>
          <type><ref refid="structvqgen" kindref="compound">vqgen</ref> *</type>
          <declname>v</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>b</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>start</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>dim</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>cols</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>num</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/lspdata.c" line="123" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/lspdata.c" bodystart="123" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="lspdata_8c_1ae47cdf7e9bfab97696c950b6338a3165" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void vqext_preprocess</definition>
        <argsstring>(vqgen *v)</argsstring>
        <name>vqext_preprocess</name>
        <param>
          <type><ref refid="structvqgen" kindref="compound">vqgen</ref> *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/lspdata.c" line="140" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/lspdata.c" bodystart="140" bodyend="156"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/********************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>THIS<sp/>FILE<sp/>IS<sp/>PART<sp/>OF<sp/>THE<sp/>OggVorbis<sp/>SOFTWARE<sp/>CODEC<sp/>SOURCE<sp/>CODE.<sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>USE,<sp/>DISTRIBUTION<sp/>AND<sp/>REPRODUCTION<sp/>OF<sp/>THIS<sp/>LIBRARY<sp/>SOURCE<sp/>IS<sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>GOVERNED<sp/>BY<sp/>A<sp/>BSD-STYLE<sp/>SOURCE<sp/>LICENSE<sp/>INCLUDED<sp/>WITH<sp/>THIS<sp/>SOURCE<sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>IN<sp/>&apos;COPYING&apos;.<sp/>PLEASE<sp/>READ<sp/>THESE<sp/>TERMS<sp/>BEFORE<sp/>DISTRIBUTING.<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>THE<sp/>OggVorbis<sp/>SOURCE<sp/>CODE<sp/>IS<sp/>(C)<sp/>COPYRIGHT<sp/>1994-2001<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>by<sp/>the<sp/>Xiph.Org<sp/>Foundation<sp/>http://www.xiph.org/<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>********************************************************************</highlight></codeline>
<codeline lineno="12"><highlight class="comment"></highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>function:<sp/>metrics<sp/>and<sp/>quantization<sp/>code<sp/>for<sp/>LSP<sp/>VQ<sp/>codebooks</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>last<sp/>mod:<sp/>$Id:<sp/>lspdata.c,v<sp/>1.4<sp/>2008-02-02<sp/>15:54:08<sp/>richardash1981<sp/>Exp<sp/>$</highlight></codeline>
<codeline lineno="15"><highlight class="comment"></highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>********************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="vqgen_8h" kindref="compound">vqgen.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="vqext_8h" kindref="compound">vqext.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="codebook_8h" kindref="compound">codebook.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="lspdata_8c_1a8d4990893142a55d1107363a46b3e6b7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="lspdata_8c_1a8d4990893142a55d1107363a46b3e6b7" kindref="member">vqext_booktype</ref>=</highlight><highlight class="stringliteral">&quot;LSPdata&quot;</highlight><highlight class="normal">;<sp/><sp/></highlight></codeline>
<codeline lineno="26" refid="lspdata_8c_1aed566b4fd5f50587a3ee550f7cd010ae" refkind="member"><highlight class="normal"><ref refid="structquant__meta" kindref="compound">quant_meta</ref><sp/><ref refid="lspdata_8c_1aed566b4fd5f50587a3ee550f7cd010ae" kindref="member">q</ref>={0,0,0,1};<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>sequence<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="lspdata_8c_1a3812044c98180800648b276298c6fb2b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lspdata_8c_1a3812044c98180800648b276298c6fb2b" kindref="member">vqext_aux</ref>=1;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="lspdata_8c_1a76eac6c4642c95fa083e4d0388f6d079" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="lspdata_8c_1a76eac6c4642c95fa083e4d0388f6d079" kindref="member">global_maxdel</ref>=<ref refid="mathematics_8h_1ae71449b1cc6e6250b91f539153a7a0d3" kindref="member">M_PI</ref>;</highlight></codeline>
<codeline lineno="30" refid="lspdata_8c_1af77036c3a95171a82548406c04c95a79" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="lspdata_8c_1af77036c3a95171a82548406c04c95a79" kindref="member">global_mindel</ref>=<ref refid="mathematics_8h_1ae71449b1cc6e6250b91f539153a7a0d3" kindref="member">M_PI</ref>;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lspdata_8c_1ab02622a882d94b454daac75f02cb31ef" kindref="member">vqext_quantize</ref>(<ref refid="structvqgen" kindref="compound">vqgen</ref><sp/>*v,<ref refid="structquant__meta" kindref="compound">quant_meta</ref><sp/>*q){</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>delta,mindel;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>maxquant=((1&lt;&lt;q-&gt;<ref refid="structquant__meta_1ac6db75436255c267e1db09b1f24fc634" kindref="member">quant</ref>)-1);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>first<sp/>find<sp/>the<sp/>basic<sp/>delta<sp/>amount<sp/>from<sp/>the<sp/>maximum<sp/>span<sp/>to<sp/>be</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>encoded.<sp/><sp/>Loosen<sp/>the<sp/>delta<sp/>slightly<sp/>to<sp/>allow<sp/>for<sp/>additional<sp/>error</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>during<sp/>sequence<sp/>quantization<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>delta=(<ref refid="lspdata_8c_1a76eac6c4642c95fa083e4d0388f6d079" kindref="member">global_maxdel</ref>-<ref refid="lspdata_8c_1af77036c3a95171a82548406c04c95a79" kindref="member">global_mindel</ref>)/((1&lt;&lt;q-&gt;<ref refid="structquant__meta_1ac6db75436255c267e1db09b1f24fc634" kindref="member">quant</ref>)-1.5f);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>q-&gt;<ref refid="structquant__meta_1a5994b11f43c8e9582499578b39db0ff4" kindref="member">min</ref>=<ref refid="codebook_8h_1a16d0b0a2056b4288ceedcef15b35d3fe" kindref="member">_float32_pack</ref>(<ref refid="lspdata_8c_1af77036c3a95171a82548406c04c95a79" kindref="member">global_mindel</ref>);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>q-&gt;<ref refid="structquant__meta_1adb028305209592c4135b07a1769ab8dc" kindref="member">delta</ref>=<ref refid="codebook_8h_1a16d0b0a2056b4288ceedcef15b35d3fe" kindref="member">_float32_pack</ref>(delta);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>mindel=<ref refid="codebook_8h_1a414000078eb7696277bab0bcede52a8b" kindref="member">_float32_unpack</ref>(q-&gt;<ref refid="structquant__meta_1a5994b11f43c8e9582499578b39db0ff4" kindref="member">min</ref>);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>delta=<ref refid="codebook_8h_1a414000078eb7696277bab0bcede52a8b" kindref="member">_float32_unpack</ref>(q-&gt;<ref refid="structquant__meta_1adb028305209592c4135b07a1769ab8dc" kindref="member">delta</ref>);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;v-&gt;<ref refid="structvqgen_1a1e787843315b3dfd83e0eaa9e5711043" kindref="member">entries</ref>;j++){</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="record_8c_1a6c49eed6a71ecf58a51b1f64f4ec8e55" kindref="member">last</ref>=0;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(k=0;k&lt;v-&gt;<ref refid="structvqgen_1ae9cf105abbc253ea85749b1a3c542967" kindref="member">elements</ref>;k++){</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>val=_now(v,j)[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>];</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>now=rint((val-last-mindel)/delta);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>_now(v,j)[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>]=now;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(now&lt;0){</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>be<sp/>paranoid;<sp/>this<sp/>should<sp/>be<sp/>impossible<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;fault;<sp/>quantized<sp/>value&lt;0\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(now&gt;maxquant){</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>be<sp/>paranoid;<sp/>this<sp/>should<sp/>be<sp/>impossible<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,</highlight><highlight class="stringliteral">&quot;fault;<sp/>quantized<sp/>value&gt;max\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>last=(now*delta)+mindel+last;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="lspdata_8c_1ab02622a882d94b454daac75f02cb31ef" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lspdata_8c_1ab02622a882d94b454daac75f02cb31ef" kindref="member">vqext_quantize</ref>(<ref refid="structvqgen" kindref="compound">vqgen</ref><sp/>*v,<ref refid="structquant__meta" kindref="compound">quant_meta</ref><sp/>*q){</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><ref refid="vqgen_8c_1ad233f82cf85e81e802b45fa1e07977ee" kindref="member">vqgen_quantize</ref>(v,q);</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="lspdata_8c_1a188f5f4011d6169f76ee43763c198076" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="lspdata_8c_1a188f5f4011d6169f76ee43763c198076" kindref="member">weight</ref>=<ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>LSP<sp/>training<sp/>metric.<sp/><sp/>We<sp/>weight<sp/>error<sp/>proportional<sp/>to<sp/>distance</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/><sp/><sp/>*between*<sp/>LSP<sp/>vector<sp/>values.<sp/><sp/>The<sp/>idea<sp/>of<sp/>this<sp/>metric<sp/>is<sp/>not<sp/>to<sp/>set</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/><sp/><sp/>final<sp/>cells,<sp/>but<sp/>get<sp/>the<sp/>midpoint<sp/>spacing<sp/>into<sp/>a<sp/>form<sp/>conducive<sp/>to</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/><sp/><sp/>what<sp/>we<sp/>want,<sp/>which<sp/>is<sp/>weighting<sp/>toward<sp/>preserving<sp/>narrower</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/><sp/><sp/>features.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FUDGE<sp/>(global_maxdel-weight[i])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="lspdata_8c_1a81ad49bed8ca0fb82874e15fd0605410" kindref="member">vqext_weight</ref>(<ref refid="structvqgen" kindref="compound">vqgen</ref><sp/>*v,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>){</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>el=v-&gt;<ref refid="structvqgen_1ae9cf105abbc253ea85749b1a3c542967" kindref="member">elements</ref>;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>lastp=0.f;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;el;i++){</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>predist=(p[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-lastp);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>postdist=(p[i+1]-p[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lspdata_8c_1a188f5f4011d6169f76ee43763c198076" kindref="member">weight</ref>[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]=(predist&lt;postdist?predist:postdist);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>lastp=p[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="lspdata_8c_1ac7352a7dfd2613809689914aa876b868" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FUDGE<sp/>1.f</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="lspdata_8c_1a81ad49bed8ca0fb82874e15fd0605410" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="lspdata_8c_1a81ad49bed8ca0fb82874e15fd0605410" kindref="member">vqext_weight</ref>(<ref refid="structvqgen" kindref="compound">vqgen</ref><sp/>*v,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>){</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>candidate,actual<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="lspdata_8c_1a782e334154df41b321d2130becc66481" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="lspdata_8c_1a782e334154df41b321d2130becc66481" kindref="member">vqext_metric</ref>(<ref refid="structvqgen" kindref="compound">vqgen</ref><sp/>*v,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="namespacelv2docgen_1a4405dc5a2509537b9ff3b4de10bc28d6" kindref="member">e</ref>,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>){</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>el=v-&gt;<ref refid="structvqgen_1ae9cf105abbc253ea85749b1a3c542967" kindref="member">elements</ref>;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>acc=0.f;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;el;i++){</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>val=(p[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]-e[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>])*<ref refid="lspdata_8c_1ac7352a7dfd2613809689914aa876b868" kindref="member">FUDGE</ref>;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>acc+=val*val;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sqrt(acc/v-&gt;<ref refid="structvqgen_1ae9cf105abbc253ea85749b1a3c542967" kindref="member">elements</ref>);</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Data<sp/>files<sp/>are<sp/>line-vectors,<sp/>now<sp/>just<sp/>deltas.<sp/><sp/>The<sp/>codebook<sp/>entries</highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/><sp/><sp/>want<sp/>to<sp/>be<sp/>monotonically<sp/>increasing,<sp/>so<sp/>we<sp/>adjust<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>assume<sp/>vqext_aux==1<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="lspdata_8c_1a42449324950d7a9d21906e7581695ede" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lspdata_8c_1a42449324950d7a9d21906e7581695ede" kindref="member">vqext_addpoint_adj</ref>(<ref refid="structvqgen" kindref="compound">vqgen</ref><sp/>*v,</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="poly-fir_8h_1ab2d05693952610f937e5acb3c4a8fa1b" kindref="member">b</ref>,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dim,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cols,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num){</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="poly-fir_8h_1a8d3c3518d793541417a4845125da1ae1" kindref="member">a</ref>=alloca(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)*(dim+1));<sp/></highlight><highlight class="comment">/*<sp/>+aux<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1a938e186c531ea86ae9adf3c0a649d8fc" kindref="member">base</ref>=0;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;i&lt;dim;i++)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>base=a[i]=b[i+start]+base;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(start+dim+1&gt;cols)<sp/></highlight><highlight class="comment">/*<sp/>+aux<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>a[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]=<ref refid="mathematics_8h_1ae71449b1cc6e6250b91f539153a7a0d3" kindref="member">M_PI</ref>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>a[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]=b[i+<ref refid="seqread_8c_1ac503262ae470564980711da4f78b1181" kindref="member">start</ref>]+<ref refid="lib_2expat_8h_1a938e186c531ea86ae9adf3c0a649d8fc" kindref="member">base</ref>;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><ref refid="vqgen_8c_1a40bce29459d623c2147e830ecb825894" kindref="member">vqgen_addpoint</ref>(v,a,a+dim);</highlight></codeline>
<codeline lineno="137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>we<sp/>just<sp/>need<sp/>to<sp/>calc<sp/>the<sp/>global_maxdel<sp/>from<sp/>the<sp/>training<sp/>set<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140" refid="lspdata_8c_1ae47cdf7e9bfab97696c950b6338a3165" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lspdata_8c_1ae47cdf7e9bfab97696c950b6338a3165" kindref="member">vqext_preprocess</ref>(<ref refid="structvqgen" kindref="compound">vqgen</ref><sp/>*v){</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>j,<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><ref refid="lspdata_8c_1a76eac6c4642c95fa083e4d0388f6d079" kindref="member">global_maxdel</ref>=0.f;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><ref refid="lspdata_8c_1af77036c3a95171a82548406c04c95a79" kindref="member">global_mindel</ref>=<ref refid="mathematics_8h_1ae71449b1cc6e6250b91f539153a7a0d3" kindref="member">M_PI</ref>;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;j&lt;v-&gt;<ref refid="structvqgen_1a95e0e94fc47cf59d894937e2a5695fec" kindref="member">points</ref>;j++){</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="record_8c_1a6c49eed6a71ecf58a51b1f64f4ec8e55" kindref="member">last</ref>=0.;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(k=0;k&lt;v-&gt;<ref refid="structvqgen_1ae9cf105abbc253ea85749b1a3c542967" kindref="member">elements</ref>+v-&gt;<ref refid="structvqgen_1a0552a2f8ee4b71b1e5f81b7a9ed04165" kindref="member">aux</ref>;k++){</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>=_point(v,j)[<ref refid="rfft2d_test_m_l_8m_1adc468c70fb574ebd07287b38d0d0676d" kindref="member">k</ref>];</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(p-last&gt;<ref refid="lspdata_8c_1a76eac6c4642c95fa083e4d0388f6d079" kindref="member">global_maxdel</ref>)<ref refid="lspdata_8c_1a76eac6c4642c95fa083e4d0388f6d079" kindref="member">global_maxdel</ref>=p-<ref refid="record_8c_1a6c49eed6a71ecf58a51b1f64f4ec8e55" kindref="member">last</ref>;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(p-last&lt;<ref refid="lspdata_8c_1af77036c3a95171a82548406c04c95a79" kindref="member">global_mindel</ref>)<ref refid="lspdata_8c_1af77036c3a95171a82548406c04c95a79" kindref="member">global_mindel</ref>=p-<ref refid="record_8c_1a6c49eed6a71ecf58a51b1f64f4ec8e55" kindref="member">last</ref>;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>last=<ref refid="xmltok_8h_1a94b60f3beb36ae85555d36dc9816769c" kindref="member">p</ref>;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><ref refid="lspdata_8c_1a188f5f4011d6169f76ee43763c198076" kindref="member">weight</ref>=<ref refid="os__types_8h_1a7eab9f24b6449f036ff799c89035036d" kindref="member">_ogg_malloc</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)*v-&gt;<ref refid="structvqgen_1ae9cf105abbc253ea85749b1a3c542967" kindref="member">elements</ref>);</highlight></codeline>
<codeline lineno="156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libvorbis/vq/lspdata.c"/>
  </compounddef>
</doxygen>
