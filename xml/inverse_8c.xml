<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="inverse_8c" kind="file" language="C++">
    <compoundname>inverse.c</compoundname>
    <includes local="yes">stdio.h</includes>
    <includes local="yes">stdlib.h</includes>
    <includes refid="xlisp_8h" local="yes">xlisp.h</includes>
    <includes refid="sound_8h" local="yes">sound.h</includes>
    <includes refid="cext_8h" local="yes">cext.h</includes>
    <includes refid="falloc_8h" local="yes">falloc.h</includes>
    <includes refid="inverse_8h" local="yes">inverse.h</includes>
    <incdepgraph>
      <node id="12520">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/inverse.c</label>
        <link refid="inverse.c"/>
        <childnode refid="12521" relation="include">
        </childnode>
        <childnode refid="12522" relation="include">
        </childnode>
        <childnode refid="12523" relation="include">
        </childnode>
        <childnode refid="12527" relation="include">
        </childnode>
        <childnode refid="12530" relation="include">
        </childnode>
        <childnode refid="12535" relation="include">
        </childnode>
        <childnode refid="12538" relation="include">
        </childnode>
      </node>
      <node id="12538">
        <label>inverse.h</label>
        <link refid="inverse_8h"/>
      </node>
      <node id="12522">
        <label>stdlib.h</label>
      </node>
      <node id="12525">
        <label>setjmp.h</label>
      </node>
      <node id="12535">
        <label>falloc.h</label>
        <link refid="falloc_8h"/>
        <childnode refid="12536" relation="include">
        </childnode>
        <childnode refid="12537" relation="include">
        </childnode>
      </node>
      <node id="12523">
        <label>xlisp.h</label>
        <link refid="xlisp_8h"/>
        <childnode refid="12522" relation="include">
        </childnode>
        <childnode refid="12521" relation="include">
        </childnode>
        <childnode refid="12524" relation="include">
        </childnode>
        <childnode refid="12525" relation="include">
        </childnode>
        <childnode refid="12526" relation="include">
        </childnode>
      </node>
      <node id="12534">
        <label>cleanup.h</label>
        <link refid="cleanup_8h"/>
      </node>
      <node id="12533">
        <label>mem.h</label>
        <link refid="libnyquist_2nyquist_2cmt_2mem_8h"/>
      </node>
      <node id="12532">
        <label>string.h</label>
      </node>
      <node id="12536">
        <label>cque.h</label>
        <link refid="cque_8h"/>
      </node>
      <node id="12527">
        <label>sound.h</label>
        <link refid="sound_8h"/>
        <childnode refid="12528" relation="include">
        </childnode>
        <childnode refid="12529" relation="include">
        </childnode>
      </node>
      <node id="12528">
        <label>math.h</label>
      </node>
      <node id="12531">
        <label>switches.h</label>
      </node>
      <node id="12529">
        <label>stdefs.h</label>
        <link refid="stdefs_8h"/>
        <childnode refid="12530" relation="include">
        </childnode>
      </node>
      <node id="12526">
        <label>xldmem.h</label>
        <link refid="xldmem_8h"/>
      </node>
      <node id="12524">
        <label>ctype.h</label>
      </node>
      <node id="12537">
        <label>debug.h</label>
        <link refid="libnyquist_2nyquist_2nyqsrc_2debug_8h"/>
      </node>
      <node id="12521">
        <label>stdio.h</label>
      </node>
      <node id="12530">
        <label>cext.h</label>
        <link refid="cext_8h"/>
        <childnode refid="12531" relation="include">
        </childnode>
        <childnode refid="12521" relation="include">
        </childnode>
        <childnode refid="12532" relation="include">
        </childnode>
        <childnode refid="12528" relation="include">
        </childnode>
        <childnode refid="12533" relation="include">
        </childnode>
        <childnode refid="12534" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="structinverse__susp__struct" prot="public">inverse_susp_struct</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="inverse_8c_1af40f4dcd5d293f4290323f27036f8e74" prot="public" static="no">
        <type>struct <ref refid="structinverse__susp__struct" kindref="compound">inverse_susp_struct</ref></type>
        <definition>typedef struct inverse_susp_struct  inverse_susp_node</definition>
        <argsstring></argsstring>
        <name>inverse_susp_node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/inverse.c" line="35" column="1"/>
      </memberdef>
      <memberdef kind="typedef" id="inverse_8c_1a9ddbde6b37d5de3a5950916c98a53bab" prot="public" static="no">
        <type>struct <ref refid="structinverse__susp__struct" kindref="compound">inverse_susp_struct</ref> *</type>
        <definition>typedef struct inverse_susp_struct * inverse_susp_type</definition>
        <argsstring></argsstring>
        <name>inverse_susp_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/inverse.c" line="35" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="inverse_8c_1aa002373c21b4b29944b1b194c2058db3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void inverse_free</definition>
        <argsstring>()</argsstring>
        <name>inverse_free</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/inverse.c" line="20" column="1"/>
      </memberdef>
      <memberdef kind="function" id="inverse_8c_1a7f77c66b67f5349481064621a8adf2b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void inverse_fetch</definition>
        <argsstring>(snd_susp_type a_susp, snd_list_type snd_list)</argsstring>
        <name>inverse_fetch</name>
        <param>
          <type><ref refid="sound_8h_1ab2d3b7883b72a75324f6636f10c7f903" kindref="member">snd_susp_type</ref></type>
          <declname>a_susp</declname>
        </param>
        <param>
          <type><ref refid="sound_8h_1ab05388854adb60c2855a70276d2ceb65" kindref="member">snd_list_type</ref></type>
          <declname>snd_list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/inverse.c" line="37" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/inverse.c" bodystart="37" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="inverse_8c_1aa93c94098c1253dfb68ed24f750226fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void inverse_toss_fetch</definition>
        <argsstring>(snd_susp_type a_susp, snd_list_type snd_list)</argsstring>
        <name>inverse_toss_fetch</name>
        <param>
          <type><ref refid="sound_8h_1ab2d3b7883b72a75324f6636f10c7f903" kindref="member">snd_susp_type</ref></type>
          <declname>a_susp</declname>
        </param>
        <param>
          <type><ref refid="sound_8h_1ab05388854adb60c2855a70276d2ceb65" kindref="member">snd_list_type</ref></type>
          <declname>snd_list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/inverse.c" line="132" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/inverse.c" bodystart="132" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="inverse_8c_1ae6494e47410337c718f9045b54bb36fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void inverse_mark</definition>
        <argsstring>(snd_susp_type a_susp)</argsstring>
        <name>inverse_mark</name>
        <param>
          <type><ref refid="sound_8h_1ab2d3b7883b72a75324f6636f10c7f903" kindref="member">snd_susp_type</ref></type>
          <declname>a_susp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/inverse.c" line="160" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/inverse.c" bodystart="160" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="inverse_8c_1af10bf971a51821bc3018fbd219ca27ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void inverse_free</definition>
        <argsstring>(snd_susp_type a_susp)</argsstring>
        <name>inverse_free</name>
        <param>
          <type><ref refid="sound_8h_1ab2d3b7883b72a75324f6636f10c7f903" kindref="member">snd_susp_type</ref></type>
          <declname>a_susp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/inverse.c" line="167" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/inverse.c" bodystart="167" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="inverse_8c_1a8866e5ff50e5fa8fdab1f4e76064332b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void inverse_print_tree</definition>
        <argsstring>(snd_susp_type a_susp, int n)</argsstring>
        <name>inverse_print_tree</name>
        <param>
          <type><ref refid="sound_8h_1ab2d3b7883b72a75324f6636f10c7f903" kindref="member">snd_susp_type</ref></type>
          <declname>a_susp</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/inverse.c" line="175" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/inverse.c" bodystart="175" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="inverse_8c_1a964f4efd987c32882ec796f82331f8ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8h_1a792cec4ed9d6d636d342d9365ba265ea" kindref="member">sound_type</ref></type>
        <definition>sound_type snd_make_inverse</definition>
        <argsstring>(sound_type s, time_type t0, rate_type sr)</argsstring>
        <name>snd_make_inverse</name>
        <param>
          <type><ref refid="sound_8h_1a792cec4ed9d6d636d342d9365ba265ea" kindref="member">sound_type</ref></type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="midifns_8h_1a3f787491db5dbc75c21b27d54e9ebae6" kindref="member">time_type</ref></type>
          <declname>t0</declname>
        </param>
        <param>
          <type><ref refid="sound_8h_1a80a6a98ce803ce7a00e744aa2103f9a1" kindref="member">rate_type</ref></type>
          <declname>sr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/inverse.c" line="184" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/inverse.c" bodystart="184" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="inverse_8c_1a7b22492d820e4d6a2518dcc9ef0c39b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="sound_8h_1a792cec4ed9d6d636d342d9365ba265ea" kindref="member">sound_type</ref></type>
        <definition>sound_type snd_inverse</definition>
        <argsstring>(sound_type s, time_type t0, rate_type sr)</argsstring>
        <name>snd_inverse</name>
        <param>
          <type><ref refid="sound_8h_1a792cec4ed9d6d636d342d9365ba265ea" kindref="member">sound_type</ref></type>
          <declname>s</declname>
        </param>
        <param>
          <type><ref refid="midifns_8h_1a3f787491db5dbc75c21b27d54e9ebae6" kindref="member">time_type</ref></type>
          <declname>t0</declname>
        </param>
        <param>
          <type><ref refid="sound_8h_1a80a6a98ce803ce7a00e744aa2103f9a1" kindref="member">rate_type</ref></type>
          <declname>sr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/inverse.c" line="213" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/inverse.c" bodystart="213" bodyend="217"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>inverse.c<sp/>--<sp/>compute<sp/>the<sp/>inverse<sp/>of<sp/>a<sp/>sampled<sp/>function<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>CHANGE<sp/>LOG</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>--------------------------------------------------------------------</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>28Apr03<sp/><sp/>dm<sp/><sp/>changes<sp/>for<sp/>portability<sp/>and<sp/>fix<sp/>compiler<sp/>warnings</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stdio.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>mips</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stdlib.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="xlisp_8h" kindref="compound">xlisp.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sound_8h" kindref="compound">sound.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="cext_8h" kindref="compound">cext.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="falloc_8h" kindref="compound">falloc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="inverse_8h" kindref="compound">inverse.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="inverse_8c_1aa002373c21b4b29944b1b194c2058db3" kindref="member">inverse_free</ref>();</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="structinverse__susp__struct" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structinverse__susp__struct" kindref="compound">inverse_susp_struct</ref><sp/>{</highlight></codeline>
<codeline lineno="24" refid="structinverse__susp__struct_1a3e4d8a81ba9aeb75c5798f433b7872b9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsnd__susp__struct" kindref="compound">snd_susp_node</ref><sp/><ref refid="structinverse__susp__struct_1a3e4d8a81ba9aeb75c5798f433b7872b9" kindref="member">susp</ref>;</highlight></codeline>
<codeline lineno="25" refid="structinverse__susp__struct_1afae99e5ec29d78eef546540a92425900" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="structinverse__susp__struct_1afae99e5ec29d78eef546540a92425900" kindref="member">terminate_cnt</ref>;</highlight></codeline>
<codeline lineno="26" refid="structinverse__susp__struct_1a93383cac985083a74fa2bc39f6741f27" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="structinverse__susp__struct_1a93383cac985083a74fa2bc39f6741f27" kindref="member">logically_stopped</ref>;</highlight></codeline>
<codeline lineno="27" refid="structinverse__susp__struct_1a1ba42536d4e45c1731c0a6a32dd2bdf7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/><ref refid="structinverse__susp__struct_1a1ba42536d4e45c1731c0a6a32dd2bdf7" kindref="member">s</ref>;</highlight></codeline>
<codeline lineno="28" refid="structinverse__susp__struct_1afa1ae7c0882c610e616f285cf93db762" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="structinverse__susp__struct_1afa1ae7c0882c610e616f285cf93db762" kindref="member">s_cnt</ref>;</highlight></codeline>
<codeline lineno="29" refid="structinverse__susp__struct_1a3ef6bc40880154d13de858fe604d63e2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sound_8h_1a83d17f7b465d1591f27cd28fc5eb8a03" kindref="member">sample_block_values_type</ref><sp/><ref refid="structinverse__susp__struct_1a3ef6bc40880154d13de858fe604d63e2" kindref="member">s_ptr</ref>;</highlight></codeline>
<codeline lineno="30" refid="structinverse__susp__struct_1a02fa4f43e6e0989f887263bf7a0ba2ed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structinverse__susp__struct_1a02fa4f43e6e0989f887263bf7a0ba2ed" kindref="member">s_prev</ref>;</highlight></codeline>
<codeline lineno="31" refid="structinverse__susp__struct_1a5c331c9531e0a3cad7806d42eccd98d4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structinverse__susp__struct_1a5c331c9531e0a3cad7806d42eccd98d4" kindref="member">s_time</ref>;</highlight></codeline>
<codeline lineno="32" refid="structinverse__susp__struct_1ac369d11a35bbed9919216c35ddb4af91" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structinverse__susp__struct_1ac369d11a35bbed9919216c35ddb4af91" kindref="member">s_time_increment</ref>;</highlight></codeline>
<codeline lineno="33" refid="structinverse__susp__struct_1a9438a2fbfadc862ab87cb42bf6e203e8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="structinverse__susp__struct_1a9438a2fbfadc862ab87cb42bf6e203e8" kindref="member">out_time_increment</ref>;</highlight></codeline>
<codeline lineno="34" refid="structinverse__susp__struct_1a73ece63594332b6cacb03dcead97e50b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">boolean</highlight><highlight class="normal"><sp/><ref refid="structinverse__susp__struct_1a73ece63594332b6cacb03dcead97e50b" kindref="member">started</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}<sp/><ref refid="inverse_8c_1af40f4dcd5d293f4290323f27036f8e74" kindref="member">inverse_susp_node</ref>,<sp/>*<ref refid="inverse_8c_1a9ddbde6b37d5de3a5950916c98a53bab" kindref="member">inverse_susp_type</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="inverse_8c_1a7f77c66b67f5349481064621a8adf2b8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="inverse_8c_1a7f77c66b67f5349481064621a8adf2b8" kindref="member">inverse_fetch</ref>(<ref refid="structsnd__susp__struct" kindref="compound">snd_susp_type</ref><sp/>a_susp,<sp/><ref refid="structsnd__list__struct" kindref="compound">snd_list_type</ref><sp/>snd_list)</highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>inverse_susp_type<sp/><ref refid="structinverse__susp__struct_1a3e4d8a81ba9aeb75c5798f433b7872b9" kindref="member">susp</ref><sp/>=<sp/>(<ref refid="inverse_8c_1a9ddbde6b37d5de3a5950916c98a53bab" kindref="member">inverse_susp_type</ref>)<sp/>a_susp;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cnt<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>how<sp/>many<sp/>samples<sp/>read<sp/>from<sp/>s<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>out_cnt<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>how<sp/>many<sp/>samples<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>togo<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>how<sp/>many<sp/>more<sp/>to<sp/>read<sp/>from<sp/>s<sp/>in<sp/>inner<sp/>loop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsample__block__node" kindref="compound">sample_block_type</ref><sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>out_time<sp/>=<sp/>susp-&gt;<ref refid="structinverse__susp__struct_1a3e4d8a81ba9aeb75c5798f433b7872b9" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a8f9e3b02c2fc0ccbb63d88b97d44c89c" kindref="member">current</ref><sp/>*<sp/>susp-&gt;<ref refid="structinverse__susp__struct_1a9438a2fbfadc862ab87cb42bf6e203e8" kindref="member">out_time_increment</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="sound_8h_1a83d17f7b465d1591f27cd28fc5eb8a03" kindref="member">sample_block_values_type</ref><sp/>out_ptr;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/><ref refid="sound_8h_1a83d17f7b465d1591f27cd28fc5eb8a03" kindref="member">sample_block_values_type</ref><sp/>s_ptr_reg;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="falloc_8h_1aed8e636a68eb95ea3c7dc90189e78b43" kindref="member">falloc_sample_block</ref>(out,<sp/></highlight><highlight class="stringliteral">&quot;inverse_fetch&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>out_ptr<sp/>=<sp/>out-&gt;<ref refid="structsample__block__node_1a921e4cd2359010f8ed736a116da8867e" kindref="member">samples</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_list-&gt;<ref refid="structsnd__list__struct_1aaf6e754e36ceada326133f729fc4462c" kindref="member">block</ref><sp/>=<sp/><ref refid="lilv__test_8c_1af5a45dbcaa926b186e6f71d08212acc3" kindref="member">out</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>make<sp/>sure<sp/>we<sp/>are<sp/>primed<sp/>with<sp/>first<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>This<sp/>is<sp/>a<sp/>lot<sp/>of<sp/>work<sp/>just<sp/>to<sp/>prefetch<sp/>susp-&gt;s_prev!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!susp-&gt;<ref refid="structinverse__susp__struct_1a73ece63594332b6cacb03dcead97e50b" kindref="member">started</ref>)<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structinverse__susp__struct_1a73ece63594332b6cacb03dcead97e50b" kindref="member">started</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>see<sp/>comments<sp/>below<sp/>about<sp/>susp_check_term_log_samples()<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(susp-&gt;<ref refid="structinverse__susp__struct_1afa1ae7c0882c610e616f285cf93db762" kindref="member">s_cnt</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sound_8h_1ad22725f391fa884b1160dad4c7aaf5a5" kindref="member">susp_get_samples</ref>(<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>,<sp/><ref refid="structinverse__susp__struct_1a3ef6bc40880154d13de858fe604d63e2" kindref="member">s_ptr</ref>,<sp/><ref refid="structinverse__susp__struct_1afa1ae7c0882c610e616f285cf93db762" kindref="member">s_cnt</ref>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(susp-&gt;<ref refid="structinverse__susp__struct_1a3ef6bc40880154d13de858fe604d63e2" kindref="member">s_ptr</ref><sp/>==<sp/><ref refid="sound_8c_1a5917e1ea52952f15fd755fa27432113b" kindref="member">zero_block</ref>-&gt;<ref refid="structsample__block__node_1a921e4cd2359010f8ed736a116da8867e" kindref="member">samples</ref>)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structinverse__susp__struct_1afae99e5ec29d78eef546540a92425900" kindref="member">terminate_cnt</ref><sp/>=<sp/>susp-&gt;<ref refid="structinverse__susp__struct_1a3e4d8a81ba9aeb75c5798f433b7872b9" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a8f9e3b02c2fc0ccbb63d88b97d44c89c" kindref="member">current</ref>;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structinverse__susp__struct_1a02fa4f43e6e0989f887263bf7a0ba2ed" kindref="member">s_prev</ref><sp/>=<sp/><ref refid="sound_8h_1a6357419b059b370b295ea9691d2d0cd3" kindref="member">susp_fetch_sample</ref>(<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>,<sp/><ref refid="structinverse__susp__struct_1a3ef6bc40880154d13de858fe604d63e2" kindref="member">s_ptr</ref>,<sp/><ref refid="structinverse__susp__struct_1afa1ae7c0882c610e616f285cf93db762" kindref="member">s_cnt</ref>);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(out_cnt<sp/>&lt;<sp/><ref refid="sound_8h_1a3871670a207dd661a524b1328410fb0c" kindref="member">max_sample_block_len</ref>)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>outer<sp/>loop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>first<sp/>compute<sp/>how<sp/>many<sp/>samples<sp/>to<sp/>generate<sp/>in<sp/>inner<sp/>loop:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>don&apos;t<sp/>run<sp/>past<sp/>the<sp/>s<sp/>input<sp/>sample<sp/>block:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>most<sp/>fetch<sp/>routines<sp/>call<sp/>susp_check_term_log_samples()<sp/>here</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>but<sp/>we<sp/>can&apos;t<sp/>becasue<sp/>susp_check_term_log_samples()<sp/>assumes</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>that<sp/>output<sp/>time<sp/>progresses<sp/>at<sp/>the<sp/>same<sp/>rate<sp/>as<sp/>input<sp/>time.</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Here,<sp/>some<sp/>time<sp/>warping<sp/>is<sp/>going<sp/>on,<sp/>so<sp/>this<sp/>doesn&apos;t<sp/>work.</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>Instead,<sp/>check<sp/>for<sp/>termination<sp/>of<sp/>s<sp/>and<sp/>fix<sp/>terminate_cnt<sp/>to</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>be<sp/>the<sp/>current<sp/>output<sp/>count<sp/>rather<sp/>than<sp/>the<sp/>current<sp/>input<sp/>time.</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(susp-&gt;<ref refid="structinverse__susp__struct_1afa1ae7c0882c610e616f285cf93db762" kindref="member">s_cnt</ref><sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sound_8h_1ad22725f391fa884b1160dad4c7aaf5a5" kindref="member">susp_get_samples</ref>(<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>,<sp/><ref refid="structinverse__susp__struct_1a3ef6bc40880154d13de858fe604d63e2" kindref="member">s_ptr</ref>,<sp/><ref refid="structinverse__susp__struct_1afa1ae7c0882c610e616f285cf93db762" kindref="member">s_cnt</ref>);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(susp-&gt;<ref refid="structinverse__susp__struct_1a3ef6bc40880154d13de858fe604d63e2" kindref="member">s_ptr</ref><sp/>==<sp/><ref refid="sound_8c_1a5917e1ea52952f15fd755fa27432113b" kindref="member">zero_block</ref>-&gt;<ref refid="structsample__block__node_1a921e4cd2359010f8ed736a116da8867e" kindref="member">samples</ref>)<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structinverse__susp__struct_1afae99e5ec29d78eef546540a92425900" kindref="member">terminate_cnt</ref><sp/>=<sp/>susp-&gt;<ref refid="structinverse__susp__struct_1a3e4d8a81ba9aeb75c5798f433b7872b9" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a8f9e3b02c2fc0ccbb63d88b97d44c89c" kindref="member">current</ref><sp/>+<sp/>out_cnt;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>can&apos;t<sp/>simply<sp/>terminate<sp/>here<sp/>because<sp/>we<sp/>might<sp/>have<sp/></highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>some<sp/>output<sp/>samples<sp/>computed<sp/>already,<sp/>in<sp/>which<sp/>case<sp/>we</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>want<sp/>to<sp/>return<sp/>them<sp/>now<sp/>and<sp/>terminate<sp/>the<sp/>NEXT<sp/>time<sp/>we&apos;re</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>called.</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>togo<sp/>=<sp/>susp-&gt;<ref refid="structinverse__susp__struct_1afa1ae7c0882c610e616f285cf93db762" kindref="member">s_cnt</ref>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>we<sp/>ran<sp/>past<sp/>terminate<sp/>time,<sp/>fix<sp/>up<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(susp-&gt;<ref refid="structinverse__susp__struct_1afae99e5ec29d78eef546540a92425900" kindref="member">terminate_cnt</ref><sp/>!=<sp/><ref refid="sound_8h_1ac1ae4add974b9cfc6b5aaf8a578f01ab" kindref="member">UNKNOWN</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structinverse__susp__struct_1afae99e5ec29d78eef546540a92425900" kindref="member">terminate_cnt</ref><sp/>&lt;=<sp/>susp-&gt;<ref refid="structinverse__susp__struct_1a3e4d8a81ba9aeb75c5798f433b7872b9" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a8f9e3b02c2fc0ccbb63d88b97d44c89c" kindref="member">current</ref><sp/>+<sp/>out_cnt)<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>pretend<sp/>like<sp/>we<sp/>computed<sp/>the<sp/>correct<sp/>number<sp/>of<sp/>samples<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>togo<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_cnt<sp/>=<sp/>susp-&gt;<ref refid="structinverse__susp__struct_1afae99e5ec29d78eef546540a92425900" kindref="member">terminate_cnt</ref><sp/>-<sp/>susp-&gt;<ref refid="structinverse__susp__struct_1a3e4d8a81ba9aeb75c5798f433b7872b9" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a8f9e3b02c2fc0ccbb63d88b97d44c89c" kindref="member">current</ref>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>exit<sp/>the<sp/>loop<sp/>to<sp/>complete<sp/>the<sp/>termination<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>togo;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s_ptr_reg<sp/>=<sp/>susp-&gt;<ref refid="structinverse__susp__struct_1a3ef6bc40880154d13de858fe604d63e2" kindref="member">s_ptr</ref>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n)<sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>the<sp/>inner<sp/>sample<sp/>computation<sp/>loop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>scan<sp/>s_ptr_reg<sp/>to<sp/>time<sp/>t,<sp/>output<sp/>and<sp/>loop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>next_value<sp/>=<sp/>*s_ptr_reg++;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(out_time<sp/>&lt;<sp/>next_value)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out_ptr++<sp/>=<sp/>(float)<sp/>(susp-&gt;<ref refid="structinverse__susp__struct_1a5c331c9531e0a3cad7806d42eccd98d4" kindref="member">s_time</ref><sp/>+</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(out_time<sp/>-<sp/>susp-&gt;<ref refid="structinverse__susp__struct_1a02fa4f43e6e0989f887263bf7a0ba2ed" kindref="member">s_prev</ref>)<sp/>/</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(susp-&gt;<ref refid="structinverse__susp__struct_1a1ba42536d4e45c1731c0a6a32dd2bdf7" kindref="member">s</ref>-&gt;<ref refid="structsound__struct_1aafecd01e13520f7fb83fe8e2ac2cd026" kindref="member">sr</ref><sp/>*<sp/>(next_value<sp/>-<sp/>susp-&gt;<ref refid="structinverse__susp__struct_1a02fa4f43e6e0989f887263bf7a0ba2ed" kindref="member">s_prev</ref>)));</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out_time<sp/>+=<sp/>susp-&gt;<ref refid="structinverse__susp__struct_1a9438a2fbfadc862ab87cb42bf6e203e8" kindref="member">out_time_increment</ref>;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(++out_cnt<sp/>&gt;=<sp/><ref refid="sound_8h_1a3871670a207dd661a524b1328410fb0c" kindref="member">max_sample_block_len</ref>)<sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>output_full;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structinverse__susp__struct_1a02fa4f43e6e0989f887263bf7a0ba2ed" kindref="member">s_prev</ref><sp/>=<sp/>next_value;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structinverse__susp__struct_1a5c331c9531e0a3cad7806d42eccd98d4" kindref="member">s_time</ref><sp/>+=<sp/>susp-&gt;<ref refid="structinverse__susp__struct_1ac369d11a35bbed9919216c35ddb4af91" kindref="member">s_time_increment</ref>;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(--n);<sp/></highlight><highlight class="comment">/*<sp/>inner<sp/>loop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>output_full:</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>using<sp/>s_ptr_reg<sp/>is<sp/>a<sp/>bad<sp/>idea<sp/>on<sp/>RS/6000:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structinverse__susp__struct_1a3ef6bc40880154d13de858fe604d63e2" kindref="member">s_ptr</ref><sp/>+=<sp/>(togo<sp/>-<sp/>n);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sound_8h_1a68ee99d63015ca2a41d7c82d8717cfeb" kindref="member">susp_took</ref>(<ref refid="structinverse__susp__struct_1afa1ae7c0882c610e616f285cf93db762" kindref="member">s_cnt</ref>,<sp/>(togo<sp/>-<sp/>n));</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cnt<sp/>+=<sp/>(togo<sp/>-<sp/>n);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>outer<sp/>loop<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>test<sp/>for<sp/>termination<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(togo<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>out_cnt<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sound_8c_1a64f075d27a7672293c0c8d657aa51647" kindref="member">snd_list_terminate</ref>(snd_list);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>snd_list-&gt;<ref refid="structsnd__list__struct_1a809aedecf6147df4ec4b45404cfab414" kindref="member">block_len</ref><sp/>=<sp/>out_cnt;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structinverse__susp__struct_1a3e4d8a81ba9aeb75c5798f433b7872b9" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a8f9e3b02c2fc0ccbb63d88b97d44c89c" kindref="member">current</ref><sp/>+=<sp/>out_cnt;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>inverse_fetch<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="inverse_8c_1aa93c94098c1253dfb68ed24f750226fb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="inverse_8c_1aa93c94098c1253dfb68ed24f750226fb" kindref="member">inverse_toss_fetch</ref>(<ref refid="structsnd__susp__struct" kindref="compound">snd_susp_type</ref><sp/>a_susp,<sp/><ref refid="structsnd__list__struct" kindref="compound">snd_list_type</ref><sp/>snd_list)</highlight></codeline>
<codeline lineno="133"><highlight class="normal">{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>inverse_susp_type<sp/><ref refid="structinverse__susp__struct_1a3e4d8a81ba9aeb75c5798f433b7872b9" kindref="member">susp</ref><sp/>=<sp/>(<ref refid="inverse_8c_1a9ddbde6b37d5de3a5950916c98a53bab" kindref="member">inverse_susp_type</ref>)<sp/>a_susp;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>final_count<sp/>=<sp/><ref refid="libflac_2src_2lib_f_l_a_c_2include_2private_2macros_8h_1a74e75242132eaabbc1c512488a135926" kindref="member">MIN</ref>(susp-&gt;<ref refid="structinverse__susp__struct_1a3e4d8a81ba9aeb75c5798f433b7872b9" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a8f9e3b02c2fc0ccbb63d88b97d44c89c" kindref="member">current</ref><sp/>+<sp/><ref refid="sound_8h_1a3871670a207dd661a524b1328410fb0c" kindref="member">max_sample_block_len</ref>,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structinverse__susp__struct_1a3e4d8a81ba9aeb75c5798f433b7872b9" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1afc2b723720dc47ea6889620660684494" kindref="member">toss_cnt</ref>);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="midifns_8h_1a3f787491db5dbc75c21b27d54e9ebae6" kindref="member">time_type</ref><sp/>final_time<sp/>=<sp/>susp-&gt;<ref refid="structinverse__susp__struct_1a3e4d8a81ba9aeb75c5798f433b7872b9" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a5e783b62d30b458070fb80dc0e112594" kindref="member">t0</ref><sp/>+<sp/>final_count<sp/>/<sp/>susp-&gt;<ref refid="structinverse__susp__struct_1a3e4d8a81ba9aeb75c5798f433b7872b9" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a89e4d9a7c1f50a9a0b4bca5ec1c253be" kindref="member">sr</ref>;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>fetch<sp/>samples<sp/>from<sp/>s<sp/>up<sp/>to<sp/>final_time<sp/>for<sp/>this<sp/>block<sp/>of<sp/>zeros<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(((</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>((final_time<sp/>-<sp/>susp-&gt;<ref refid="structinverse__susp__struct_1a1ba42536d4e45c1731c0a6a32dd2bdf7" kindref="member">s</ref>-&gt;<ref refid="structsound__struct_1a397d52ba2da4602200e85f49f62f28ea" kindref="member">t0</ref>)<sp/>*<sp/>susp-&gt;<ref refid="structinverse__susp__struct_1a1ba42536d4e45c1731c0a6a32dd2bdf7" kindref="member">s</ref>-&gt;<ref refid="structsound__struct_1aafecd01e13520f7fb83fe8e2ac2cd026" kindref="member">sr</ref><sp/>+<sp/>0.5))<sp/>&gt;=</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structinverse__susp__struct_1a1ba42536d4e45c1731c0a6a32dd2bdf7" kindref="member">s</ref>-&gt;<ref refid="structsound__struct_1a36de08aa7f68cf01c3f197548bc3e00f" kindref="member">current</ref>)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sound_8h_1ad22725f391fa884b1160dad4c7aaf5a5" kindref="member">susp_get_samples</ref>(<ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>,<sp/><ref refid="structinverse__susp__struct_1a3ef6bc40880154d13de858fe604d63e2" kindref="member">s_ptr</ref>,<sp/><ref refid="structinverse__susp__struct_1afa1ae7c0882c610e616f285cf93db762" kindref="member">s_cnt</ref>);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>convert<sp/>to<sp/>normal<sp/>processing<sp/>when<sp/>we<sp/>hit<sp/>final_count<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>we<sp/>want<sp/>each<sp/>signal<sp/>positioned<sp/>at<sp/>final_time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(final_count<sp/>==<sp/>susp-&gt;<ref refid="structinverse__susp__struct_1a3e4d8a81ba9aeb75c5798f433b7872b9" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1afc2b723720dc47ea6889620660684494" kindref="member">toss_cnt</ref>)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/><ref refid="cext_8h_1acd66e8cacf954c3bc3bba81d09425a12" kindref="member">ROUND</ref>((final_time<sp/>-<sp/>susp-&gt;<ref refid="structinverse__susp__struct_1a1ba42536d4e45c1731c0a6a32dd2bdf7" kindref="member">s</ref>-&gt;<ref refid="structsound__struct_1a397d52ba2da4602200e85f49f62f28ea" kindref="member">t0</ref>)<sp/>*<sp/>susp-&gt;<ref refid="structinverse__susp__struct_1a1ba42536d4e45c1731c0a6a32dd2bdf7" kindref="member">s</ref>-&gt;<ref refid="structsound__struct_1aafecd01e13520f7fb83fe8e2ac2cd026" kindref="member">sr</ref><sp/>-</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(susp-&gt;<ref refid="structinverse__susp__struct_1a1ba42536d4e45c1731c0a6a32dd2bdf7" kindref="member">s</ref>-&gt;<ref refid="structsound__struct_1a36de08aa7f68cf01c3f197548bc3e00f" kindref="member">current</ref><sp/>-<sp/>susp-&gt;<ref refid="structinverse__susp__struct_1afa1ae7c0882c610e616f285cf93db762" kindref="member">s_cnt</ref>));</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structinverse__susp__struct_1a3ef6bc40880154d13de858fe604d63e2" kindref="member">s_ptr</ref><sp/>+=<sp/>n;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sound_8h_1a68ee99d63015ca2a41d7c82d8717cfeb" kindref="member">susp_took</ref>(<ref refid="structinverse__susp__struct_1afa1ae7c0882c610e616f285cf93db762" kindref="member">s_cnt</ref>,<sp/>n);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structinverse__susp__struct_1a3e4d8a81ba9aeb75c5798f433b7872b9" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1addb182d5c03b9b8f864e4fd9871f7722" kindref="member">fetch</ref><sp/>=<sp/>susp-&gt;<ref refid="structinverse__susp__struct_1a3e4d8a81ba9aeb75c5798f433b7872b9" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1aef3e12bfaaf19ddbdb630ab20d40c3f7" kindref="member">keep_fetch</ref>;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_list-&gt;<ref refid="structsnd__list__struct_1a809aedecf6147df4ec4b45404cfab414" kindref="member">block_len</ref><sp/>=<sp/>(short)<sp/>(final_count<sp/>-<sp/>susp-&gt;<ref refid="structinverse__susp__struct_1a3e4d8a81ba9aeb75c5798f433b7872b9" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a8f9e3b02c2fc0ccbb63d88b97d44c89c" kindref="member">current</ref>);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structinverse__susp__struct_1a3e4d8a81ba9aeb75c5798f433b7872b9" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a8f9e3b02c2fc0ccbb63d88b97d44c89c" kindref="member">current</ref><sp/>=<sp/>final_count;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_list-&gt;<ref refid="structsnd__list__struct_1a7eb4e39c02b1fa81d1000b204f888777" kindref="member">u</ref>.<ref refid="structsnd__list__struct_1a3a9e571a923a7496eabe0d721e497fbf" kindref="member">next</ref><sp/>=<sp/><ref refid="sound_8c_1a58f82dfd9acaae997e982fd56e81e11d" kindref="member">snd_list_create</ref>((<ref refid="structsnd__susp__struct" kindref="compound">snd_susp_type</ref>)<sp/>susp);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>snd_list-&gt;<ref refid="structsnd__list__struct_1aaf6e754e36ceada326133f729fc4462c" kindref="member">block</ref><sp/>=<sp/><ref refid="sound_8c_1abb923c4be4a1beafa5f79463091c3925" kindref="member">internal_zero_block</ref>;</highlight></codeline>
<codeline lineno="157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160" refid="inverse_8c_1ae6494e47410337c718f9045b54bb36fc" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="inverse_8c_1ae6494e47410337c718f9045b54bb36fc" kindref="member">inverse_mark</ref>(<ref refid="structsnd__susp__struct" kindref="compound">snd_susp_type</ref><sp/>a_susp)</highlight></codeline>
<codeline lineno="161"><highlight class="normal">{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>inverse_susp_type<sp/><ref refid="structinverse__susp__struct_1a3e4d8a81ba9aeb75c5798f433b7872b9" kindref="member">susp</ref><sp/>=<sp/>(<ref refid="inverse_8c_1a9ddbde6b37d5de3a5950916c98a53bab" kindref="member">inverse_susp_type</ref>)<sp/>a_susp;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sound_8c_1aacbcd25bfdd21a0dfd009fe0bfbe4ff5" kindref="member">sound_xlmark</ref>(susp-&gt;<ref refid="structinverse__susp__struct_1a1ba42536d4e45c1731c0a6a32dd2bdf7" kindref="member">s</ref>);</highlight></codeline>
<codeline lineno="164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167" refid="inverse_8c_1af10bf971a51821bc3018fbd219ca27ce" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="inverse_8c_1aa002373c21b4b29944b1b194c2058db3" kindref="member">inverse_free</ref>(<ref refid="structsnd__susp__struct" kindref="compound">snd_susp_type</ref><sp/>a_susp)</highlight></codeline>
<codeline lineno="168"><highlight class="normal">{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>inverse_susp_type<sp/><ref refid="structinverse__susp__struct_1a3e4d8a81ba9aeb75c5798f433b7872b9" kindref="member">susp</ref><sp/>=<sp/>(<ref refid="inverse_8c_1a9ddbde6b37d5de3a5950916c98a53bab" kindref="member">inverse_susp_type</ref>)<sp/>a_susp;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sound_8c_1a6160c7ed8621e6ca60d9c0875cd25f9f" kindref="member">sound_unref</ref>(susp-&gt;<ref refid="structinverse__susp__struct_1a1ba42536d4e45c1731c0a6a32dd2bdf7" kindref="member">s</ref>);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="falloc_8h_1a90be646acd537771c5401524877e0844" kindref="member">ffree_generic</ref>(susp,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structinverse__susp__struct" kindref="compound">inverse_susp_node</ref>),<sp/></highlight><highlight class="stringliteral">&quot;inverse_free&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175" refid="inverse_8c_1a8866e5ff50e5fa8fdab1f4e76064332b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="inverse_8c_1a8866e5ff50e5fa8fdab1f4e76064332b" kindref="member">inverse_print_tree</ref>(<ref refid="structsnd__susp__struct" kindref="compound">snd_susp_type</ref><sp/>a_susp,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="176"><highlight class="normal">{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>inverse_susp_type<sp/><ref refid="structinverse__susp__struct_1a3e4d8a81ba9aeb75c5798f433b7872b9" kindref="member">susp</ref><sp/>=<sp/>(<ref refid="inverse_8c_1a9ddbde6b37d5de3a5950916c98a53bab" kindref="member">inverse_susp_type</ref>)<sp/>a_susp;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sound_8c_1ad9f5e076a5a83912c647d0164fd9cf98" kindref="member">indent</ref>(n);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="xlio_8c_1a48c6474ff667334385f7c6e4c350c51d" kindref="member">stdputstr</ref>(</highlight><highlight class="stringliteral">&quot;s:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="sound_8c_1a1b2ca7c132e90e3ded840d25f8baa088" kindref="member">sound_print_tree_1</ref>(susp-&gt;<ref refid="structinverse__susp__struct_1a1ba42536d4e45c1731c0a6a32dd2bdf7" kindref="member">s</ref>,<sp/>n);</highlight></codeline>
<codeline lineno="181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184" refid="inverse_8h_1a964f4efd987c32882ec796f82331f8ac" refkind="member"><highlight class="normal"><ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/><ref refid="inverse_8c_1a964f4efd987c32882ec796f82331f8ac" kindref="member">snd_make_inverse</ref>(<ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>,<sp/><ref refid="midifns_8h_1a3f787491db5dbc75c21b27d54e9ebae6" kindref="member">time_type</ref><sp/>t0,<sp/><ref refid="sound_8h_1a80a6a98ce803ce7a00e744aa2103f9a1" kindref="member">rate_type</ref><sp/>sr)</highlight></codeline>
<codeline lineno="185"><highlight class="normal">{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">register</highlight><highlight class="normal"><sp/>inverse_susp_type<sp/><ref refid="structinverse__susp__struct_1a3e4d8a81ba9aeb75c5798f433b7872b9" kindref="member">susp</ref>;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="falloc_8h_1a187500f957dfc9510ad0c87c0c92e39e" kindref="member">falloc_generic</ref>(susp,<sp/><ref refid="structinverse__susp__struct" kindref="compound">inverse_susp_node</ref>,<sp/></highlight><highlight class="stringliteral">&quot;snd_make_inverse&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structinverse__susp__struct_1a3e4d8a81ba9aeb75c5798f433b7872b9" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1addb182d5c03b9b8f864e4fd9871f7722" kindref="member">fetch</ref><sp/>=<sp/><ref refid="inverse_8c_1a7f77c66b67f5349481064621a8adf2b8" kindref="member">inverse_fetch</ref>;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structinverse__susp__struct_1afae99e5ec29d78eef546540a92425900" kindref="member">terminate_cnt</ref><sp/>=<sp/><ref refid="sound_8h_1ac1ae4add974b9cfc6b5aaf8a578f01ab" kindref="member">UNKNOWN</ref>;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>initialize<sp/>susp<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structinverse__susp__struct_1a3e4d8a81ba9aeb75c5798f433b7872b9" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a39cc18ad890efb4f088c9d7636e3b5c0" kindref="member">free</ref><sp/>=<sp/><ref refid="inverse_8c_1aa002373c21b4b29944b1b194c2058db3" kindref="member">inverse_free</ref>;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structinverse__susp__struct_1a3e4d8a81ba9aeb75c5798f433b7872b9" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a89e4d9a7c1f50a9a0b4bca5ec1c253be" kindref="member">sr</ref><sp/>=<sp/>sr;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structinverse__susp__struct_1a3e4d8a81ba9aeb75c5798f433b7872b9" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a5e783b62d30b458070fb80dc0e112594" kindref="member">t0</ref><sp/>=<sp/>t0;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structinverse__susp__struct_1a3e4d8a81ba9aeb75c5798f433b7872b9" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a077478e200df3bc42489892597f15d47" kindref="member">mark</ref><sp/>=<sp/><ref refid="inverse_8c_1ae6494e47410337c718f9045b54bb36fc" kindref="member">inverse_mark</ref>;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structinverse__susp__struct_1a3e4d8a81ba9aeb75c5798f433b7872b9" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a4403d10e525f61c551eaa74440ee6b7d" kindref="member">print_tree</ref><sp/>=<sp/><ref refid="inverse_8c_1a8866e5ff50e5fa8fdab1f4e76064332b" kindref="member">inverse_print_tree</ref>;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structinverse__susp__struct_1a3e4d8a81ba9aeb75c5798f433b7872b9" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a4d5fa6ba6ea209e5159d06ea00320041" kindref="member">name</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;inverse&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structinverse__susp__struct_1a93383cac985083a74fa2bc39f6741f27" kindref="member">logically_stopped</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structinverse__susp__struct_1a3e4d8a81ba9aeb75c5798f433b7872b9" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a8044ae9d2cfcbccffd2a60c9b6ce16fa" kindref="member">log_stop_cnt</ref><sp/>=<sp/><ref refid="sound_8h_1ac1ae4add974b9cfc6b5aaf8a578f01ab" kindref="member">UNKNOWN</ref>;<sp/></highlight><highlight class="comment">/*<sp/>log<sp/>stop<sp/>time<sp/>=<sp/>term<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structinverse__susp__struct_1a3e4d8a81ba9aeb75c5798f433b7872b9" kindref="member">susp</ref>.<ref refid="structsnd__susp__struct_1a8f9e3b02c2fc0ccbb63d88b97d44c89c" kindref="member">current</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structinverse__susp__struct_1a1ba42536d4e45c1731c0a6a32dd2bdf7" kindref="member">s</ref><sp/>=<sp/><ref refid="structinverse__susp__struct_1a1ba42536d4e45c1731c0a6a32dd2bdf7" kindref="member">s</ref>;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structinverse__susp__struct_1afa1ae7c0882c610e616f285cf93db762" kindref="member">s_cnt</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structinverse__susp__struct_1a02fa4f43e6e0989f887263bf7a0ba2ed" kindref="member">s_prev</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structinverse__susp__struct_1a5c331c9531e0a3cad7806d42eccd98d4" kindref="member">s_time</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structinverse__susp__struct_1ac369d11a35bbed9919216c35ddb4af91" kindref="member">s_time_increment</ref><sp/>=<sp/>1<sp/>/<sp/>s-&gt;<ref refid="structsound__struct_1aafecd01e13520f7fb83fe8e2ac2cd026" kindref="member">sr</ref>;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structinverse__susp__struct_1a9438a2fbfadc862ab87cb42bf6e203e8" kindref="member">out_time_increment</ref><sp/>=<sp/>1<sp/>/<sp/>(sr<sp/>*<sp/>s-&gt;<ref refid="structsound__struct_1a7531e5d5bc141fa994e5d787bb2dea01" kindref="member">scale</ref>);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>susp-&gt;<ref refid="structinverse__susp__struct_1a73ece63594332b6cacb03dcead97e50b" kindref="member">started</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="sound_8c_1a11255fe781080fb7915f6ab9a5afc4ae" kindref="member">sound_create</ref>((<ref refid="structsnd__susp__struct" kindref="compound">snd_susp_type</ref>)susp,<sp/>t0,<sp/>sr,<sp/>1.0<sp/></highlight><highlight class="comment">/*<sp/>scale<sp/>*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213" refid="inverse_8h_1a7b22492d820e4d6a2518dcc9ef0c39b2" refkind="member"><highlight class="normal"><ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/><ref refid="inverse_8c_1a7b22492d820e4d6a2518dcc9ef0c39b2" kindref="member">snd_inverse</ref>(<ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/><ref refid="lib_2expat_8h_1a755339d27872b13735c2cab829e47157" kindref="member">s</ref>,<sp/><ref refid="midifns_8h_1a3f787491db5dbc75c21b27d54e9ebae6" kindref="member">time_type</ref><sp/>t0,<sp/><ref refid="sound_8h_1a80a6a98ce803ce7a00e744aa2103f9a1" kindref="member">rate_type</ref><sp/>sr)</highlight></codeline>
<codeline lineno="214"><highlight class="normal">{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structsound__struct" kindref="compound">sound_type</ref><sp/>s_copy<sp/>=<sp/><ref refid="sound_8c_1ad56b2f689f0d4897c4d2c79356d6102d" kindref="member">sound_copy</ref>(s);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="inverse_8c_1a964f4efd987c32882ec796f82331f8ac" kindref="member">snd_make_inverse</ref>(s_copy,<sp/>t0,<sp/>sr);</highlight></codeline>
<codeline lineno="217"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libnyquist/nyquist/nyqsrc/inverse.c"/>
  </compounddef>
</doxygen>
