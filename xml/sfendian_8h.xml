<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="sfendian_8h" kind="file" language="C++">
    <compoundname>sfendian.h</compoundname>
    <includes refid="sfconfig_8h" local="yes">sfconfig.h</includes>
    <includedby refid="aiff_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/aiff.c</includedby>
    <includedby refid="au_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/au.c</includedby>
    <includedby refid="avr_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/avr.c</includedby>
    <includedby refid="caf_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/caf.c</includedby>
    <includedby refid="chunk_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/chunk.c</includedby>
    <includedby refid="src_2common_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c</includedby>
    <includedby refid="libsndfile_2src_2dither_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/dither.c</includedby>
    <includedby refid="double64_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/double64.c</includedby>
    <includedby refid="dwd_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/dwd.c</includedby>
    <includedby refid="dwvw_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/dwvw.c</includedby>
    <includedby refid="float32_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/float32.c</includedby>
    <includedby refid="g72x_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/g72x.c</includedby>
    <includedby refid="gsm610_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/gsm610.c</includedby>
    <includedby refid="htk_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/htk.c</includedby>
    <includedby refid="id3_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/id3.c</includedby>
    <includedby refid="ima__adpcm_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/ima_adpcm.c</includedby>
    <includedby refid="interleave_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/interleave.c</includedby>
    <includedby refid="ircam_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/ircam.c</includedby>
    <includedby refid="macbinary3_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/macbinary3.c</includedby>
    <includedby refid="macos_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/macos.c</includedby>
    <includedby refid="mat4_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/mat4.c</includedby>
    <includedby refid="mat5_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/mat5.c</includedby>
    <includedby refid="mpc2k_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/mpc2k.c</includedby>
    <includedby refid="ms__adpcm_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/ms_adpcm.c</includedby>
    <includedby refid="nist_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/nist.c</includedby>
    <includedby refid="ogg_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/ogg.c</includedby>
    <includedby refid="paf_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/paf.c</includedby>
    <includedby refid="pcm_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/pcm.c</includedby>
    <includedby refid="pvf_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/pvf.c</includedby>
    <includedby refid="rf64_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/rf64.c</includedby>
    <includedby refid="rx2_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/rx2.c</includedby>
    <includedby refid="sd2_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/sd2.c</includedby>
    <includedby refid="sds_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/sds.c</includedby>
    <includedby refid="sndfile_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/sndfile.c</includedby>
    <includedby refid="svx_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/svx.c</includedby>
    <includedby refid="test__audio__detect_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/test_audio_detect.c</includedby>
    <includedby refid="test__endswap_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/test_endswap.c</includedby>
    <includedby refid="txw_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/txw.c</includedby>
    <includedby refid="voc_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/voc.c</includedby>
    <includedby refid="vox__adpcm_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/vox_adpcm.c</includedby>
    <includedby refid="w64_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/w64.c</includedby>
    <includedby refid="wav_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/wav.c</includedby>
    <includedby refid="wav__w64_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/wav_w64.c</includedby>
    <includedby refid="wve_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/wve.c</includedby>
    <includedby refid="xi_8c" local="yes">C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/xi.c</includedby>
    <incdepgraph>
      <node id="20173">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/sfendian.h</label>
        <link refid="sfendian.h"/>
        <childnode refid="20174" relation="include">
        </childnode>
      </node>
      <node id="20174">
        <label>sfconfig.h</label>
        <link refid="sfconfig_8h"/>
        <childnode refid="20175" relation="include">
        </childnode>
      </node>
      <node id="20175">
        <label>config.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="20179">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/avr.c</label>
        <link refid="avr_8c"/>
      </node>
      <node id="20186">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/dwvw.c</label>
        <link refid="dwvw_8c"/>
      </node>
      <node id="20191">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/id3.c</label>
        <link refid="id3_8c"/>
      </node>
      <node id="20193">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/interleave.c</label>
        <link refid="interleave_8c"/>
      </node>
      <node id="20198">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/mat5.c</label>
        <link refid="mat5_8c"/>
      </node>
      <node id="20176">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/sfendian.h</label>
        <link refid="sfendian.h"/>
        <childnode refid="20177" relation="include">
        </childnode>
        <childnode refid="20178" relation="include">
        </childnode>
        <childnode refid="20179" relation="include">
        </childnode>
        <childnode refid="20180" relation="include">
        </childnode>
        <childnode refid="20181" relation="include">
        </childnode>
        <childnode refid="20182" relation="include">
        </childnode>
        <childnode refid="20183" relation="include">
        </childnode>
        <childnode refid="20184" relation="include">
        </childnode>
        <childnode refid="20185" relation="include">
        </childnode>
        <childnode refid="20186" relation="include">
        </childnode>
        <childnode refid="20187" relation="include">
        </childnode>
        <childnode refid="20188" relation="include">
        </childnode>
        <childnode refid="20189" relation="include">
        </childnode>
        <childnode refid="20190" relation="include">
        </childnode>
        <childnode refid="20191" relation="include">
        </childnode>
        <childnode refid="20192" relation="include">
        </childnode>
        <childnode refid="20193" relation="include">
        </childnode>
        <childnode refid="20194" relation="include">
        </childnode>
        <childnode refid="20195" relation="include">
        </childnode>
        <childnode refid="20196" relation="include">
        </childnode>
        <childnode refid="20197" relation="include">
        </childnode>
        <childnode refid="20198" relation="include">
        </childnode>
        <childnode refid="20199" relation="include">
        </childnode>
        <childnode refid="20200" relation="include">
        </childnode>
        <childnode refid="20201" relation="include">
        </childnode>
        <childnode refid="20202" relation="include">
        </childnode>
        <childnode refid="20203" relation="include">
        </childnode>
        <childnode refid="20204" relation="include">
        </childnode>
        <childnode refid="20205" relation="include">
        </childnode>
        <childnode refid="20206" relation="include">
        </childnode>
        <childnode refid="20207" relation="include">
        </childnode>
        <childnode refid="20208" relation="include">
        </childnode>
        <childnode refid="20209" relation="include">
        </childnode>
        <childnode refid="20210" relation="include">
        </childnode>
        <childnode refid="20211" relation="include">
        </childnode>
        <childnode refid="20212" relation="include">
        </childnode>
        <childnode refid="20213" relation="include">
        </childnode>
        <childnode refid="20214" relation="include">
        </childnode>
        <childnode refid="20215" relation="include">
        </childnode>
        <childnode refid="20216" relation="include">
        </childnode>
        <childnode refid="20217" relation="include">
        </childnode>
        <childnode refid="20218" relation="include">
        </childnode>
        <childnode refid="20219" relation="include">
        </childnode>
        <childnode refid="20220" relation="include">
        </childnode>
        <childnode refid="20221" relation="include">
        </childnode>
      </node>
      <node id="20204">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/pcm.c</label>
        <link refid="pcm_8c"/>
      </node>
      <node id="20209">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/sds.c</label>
        <link refid="sds_8c"/>
      </node>
      <node id="20184">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/double64.c</label>
        <link refid="double64_8c"/>
      </node>
      <node id="20205">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/pvf.c</label>
        <link refid="pvf_8c"/>
      </node>
      <node id="20208">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/sd2.c</label>
        <link refid="sd2_8c"/>
      </node>
      <node id="20217">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/w64.c</label>
        <link refid="w64_8c"/>
      </node>
      <node id="20202">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/ogg.c</label>
        <link refid="ogg_8c"/>
      </node>
      <node id="20194">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/ircam.c</label>
        <link refid="ircam_8c"/>
      </node>
      <node id="20219">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/wav_w64.c</label>
        <link refid="wav__w64_8c"/>
      </node>
      <node id="20212">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/test_audio_detect.c</label>
        <link refid="test__audio__detect_8c"/>
      </node>
      <node id="20183">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/dither.c</label>
        <link refid="libsndfile_2src_2dither_8c"/>
      </node>
      <node id="20201">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/nist.c</label>
        <link refid="nist_8c"/>
      </node>
      <node id="20206">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/rf64.c</label>
        <link refid="rf64_8c"/>
      </node>
      <node id="20190">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/htk.c</label>
        <link refid="htk_8c"/>
      </node>
      <node id="20189">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/gsm610.c</label>
        <link refid="gsm610_8c"/>
      </node>
      <node id="20207">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/rx2.c</label>
        <link refid="rx2_8c"/>
      </node>
      <node id="20200">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/ms_adpcm.c</label>
        <link refid="ms__adpcm_8c"/>
      </node>
      <node id="20218">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/wav.c</label>
        <link refid="wav_8c"/>
      </node>
      <node id="20180">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/caf.c</label>
        <link refid="caf_8c"/>
      </node>
      <node id="20187">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/float32.c</label>
        <link refid="float32_8c"/>
      </node>
      <node id="20211">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/svx.c</label>
        <link refid="svx_8c"/>
      </node>
      <node id="20188">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/g72x.c</label>
        <link refid="g72x_8c"/>
      </node>
      <node id="20214">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/txw.c</label>
        <link refid="txw_8c"/>
      </node>
      <node id="20203">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/paf.c</label>
        <link refid="paf_8c"/>
      </node>
      <node id="20196">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/macos.c</label>
        <link refid="macos_8c"/>
      </node>
      <node id="20185">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/dwd.c</label>
        <link refid="dwd_8c"/>
      </node>
      <node id="20182">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/common.c</label>
        <link refid="src_2common_8c"/>
      </node>
      <node id="20195">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/macbinary3.c</label>
        <link refid="macbinary3_8c"/>
      </node>
      <node id="20178">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/au.c</label>
        <link refid="au_8c"/>
      </node>
      <node id="20192">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/ima_adpcm.c</label>
        <link refid="ima__adpcm_8c"/>
      </node>
      <node id="20199">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/mpc2k.c</label>
        <link refid="mpc2k_8c"/>
      </node>
      <node id="20181">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/chunk.c</label>
        <link refid="chunk_8c"/>
      </node>
      <node id="20210">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/sndfile.c</label>
        <link refid="sndfile_8c"/>
      </node>
      <node id="20216">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/vox_adpcm.c</label>
        <link refid="vox__adpcm_8c"/>
      </node>
      <node id="20197">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/mat4.c</label>
        <link refid="mat4_8c"/>
      </node>
      <node id="20215">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/voc.c</label>
        <link refid="voc_8c"/>
      </node>
      <node id="20221">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/xi.c</label>
        <link refid="xi_8c"/>
      </node>
      <node id="20213">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/test_endswap.c</label>
        <link refid="test__endswap_8c"/>
      </node>
      <node id="20177">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/aiff.c</label>
        <link refid="aiff_8c"/>
      </node>
      <node id="20220">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/wve.c</label>
        <link refid="wve_8c"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="sfendian_8h_1a31ae71595214465f5b2cdfeda2cd50c9" prot="public" static="no">
        <name>ENDSWAP_SHORT</name>
        <param><defname>x</defname></param>
        <initializer>((((x) &gt;&gt; 8) &amp; 0xFF) + (((x) &amp; 0xFF) &lt;&lt; 8))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/sfendian.h" line="51" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/sfendian.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sfendian_8h_1a6e885c01da1b383c0876148b53e512e7" prot="public" static="no">
        <name>ENDSWAP_INT</name>
        <param><defname>x</defname></param>
        <initializer>((((x) &gt;&gt; 24) &amp; 0xFF) + (((x) &gt;&gt; 8) &amp; 0xFF00) + (((x) &amp; 0xFF00) &lt;&lt; 8) + (((x) &amp; 0xFF) &lt;&lt; 24))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/sfendian.h" line="52" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/sfendian.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sfendian_8h_1a0cd46464b69e46f6def628d2c07ef23d" prot="public" static="no">
        <name>LET2H_SHORT_PTR</name>
        <param><defname>x</defname></param>
        <initializer>((x) [1] + ((x) [2] &lt;&lt; 8))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/sfendian.h" line="102" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/sfendian.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sfendian_8h_1a420f2cc8302486c5504bc682f15bd885" prot="public" static="no">
        <name>LET2H_INT_PTR</name>
        <param><defname>x</defname></param>
        <initializer>(((x) [0] &lt;&lt; 8) + ((x) [1] &lt;&lt; 16) + ((x) [2] &lt;&lt; 24))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/sfendian.h" line="103" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/sfendian.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sfendian_8h_1a40b4b92c37d809e9ef83a715846812f5" prot="public" static="no">
        <name>BET2H_SHORT_PTR</name>
        <param><defname>x</defname></param>
        <initializer>(((x) [0] &lt;&lt; 8) + (x) [1])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/sfendian.h" line="105" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/sfendian.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sfendian_8h_1ad53526f04233628d698ca42952baaa4d" prot="public" static="no">
        <name>BET2H_INT_PTR</name>
        <param><defname>x</defname></param>
        <initializer>(((x) [0] &lt;&lt; 24) + ((x) [1] &lt;&lt; 16) + ((x) [2] &lt;&lt; 8))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/sfendian.h" line="106" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/sfendian.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="sfendian_8h_1a76d976287f2aa82a14ede041c368c2a6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void endswap_short_array</definition>
        <argsstring>(short *ptr, int len)</argsstring>
        <name>endswap_short_array</name>
        <param>
          <type>short *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/sfendian.h" line="113" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/sfendian.h" bodystart="113" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="sfendian_8h_1a8b9baa974f5ba9bdc9d8a55c7d235d5b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void endswap_short_copy</definition>
        <argsstring>(short *dest, const short *src, int len)</argsstring>
        <name>endswap_short_copy</name>
        <param>
          <type>short *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> short *</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/sfendian.h" line="123" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/sfendian.h" bodystart="123" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="sfendian_8h_1aa1c81d6c56a34f5839b75e468dc462a5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void endswap_int_array</definition>
        <argsstring>(int *ptr, int len)</argsstring>
        <name>endswap_int_array</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/sfendian.h" line="131" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/sfendian.h" bodystart="131" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="sfendian_8h_1a768dca525b26f47fdfee56d25b6a5e53" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void endswap_int_copy</definition>
        <argsstring>(int *dest, const int *src, int len)</argsstring>
        <name>endswap_int_copy</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/sfendian.h" line="141" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/sfendian.h" bodystart="141" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="sfendian_8h_1a9237cdf7a68d52410fe3318546f89052" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void endswap_int64_t_array</definition>
        <argsstring>(int64_t *ptr, int len)</argsstring>
        <name>endswap_int64_t_array</name>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref> *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/sfendian.h" line="176" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/sfendian.h" bodystart="176" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="sfendian_8h_1af127dd85e8dcad0156971a114ef005ad" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void endswap_int64_t_copy</definition>
        <argsstring>(int64_t *dest, const int64_t *src, int len)</argsstring>
        <name>endswap_int64_t_copy</name>
        <param>
          <type><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref> *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref> *</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/sfendian.h" line="203" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/sfendian.h" bodystart="203" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="sfendian_8h_1a3c6eb6e0b1ef31985c8157e258e5542e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void endswap_float_array</definition>
        <argsstring>(float *ptr, int len)</argsstring>
        <name>endswap_float_array</name>
        <param>
          <type>float *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/sfendian.h" line="234" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/sfendian.h" bodystart="234" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="sfendian_8h_1aa6e41d6c581dbccec97a06e819c2407b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void endswap_double_array</definition>
        <argsstring>(double *ptr, int len)</argsstring>
        <name>endswap_double_array</name>
        <param>
          <type>double *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/sfendian.h" line="239" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/sfendian.h" bodystart="239" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="sfendian_8h_1adf0495d39213e70cec8d1126f0743296" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void endswap_float_copy</definition>
        <argsstring>(float *dest, const float *src, int len)</argsstring>
        <name>endswap_float_copy</name>
        <param>
          <type>float *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> float *</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/sfendian.h" line="244" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/sfendian.h" bodystart="244" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="sfendian_8h_1acbe2fa1e28760a8e75d622a985e5a660" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>static void endswap_double_copy</definition>
        <argsstring>(double *dest, const double *src, int len)</argsstring>
        <name>endswap_double_copy</name>
        <param>
          <type>double *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> double *</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>len</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/sfendian.h" line="249" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/sfendian.h" bodystart="249" bodyend="251"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">**<sp/>Copyright<sp/>(C)<sp/>1999-2011<sp/>Erik<sp/>de<sp/>Castro<sp/>Lopo<sp/>&lt;erikd@mega-nerd.com&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment">**</highlight></codeline>
<codeline lineno="4"><highlight class="comment">**<sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="5"><highlight class="comment">**<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="6"><highlight class="comment">**<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2.1<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="7"><highlight class="comment">**<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="8"><highlight class="comment">**</highlight></codeline>
<codeline lineno="9"><highlight class="comment">**<sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="10"><highlight class="comment">**<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="11"><highlight class="comment">**<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="12"><highlight class="comment">**<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="13"><highlight class="comment">**</highlight></codeline>
<codeline lineno="14"><highlight class="comment">**<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="15"><highlight class="comment">**<sp/>along<sp/>with<sp/>this<sp/>program;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software</highlight></codeline>
<codeline lineno="16"><highlight class="comment">**<sp/>Foundation,<sp/>Inc.,<sp/>59<sp/>Temple<sp/>Place<sp/>-<sp/>Suite<sp/>330,<sp/>Boston,<sp/>MA<sp/>02111-1307,<sp/>USA.</highlight></codeline>
<codeline lineno="17"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SFENDIAN_INCLUDED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SFENDIAN_INCLUDED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="sfconfig_8h" kindref="compound">sfconfig.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HAVE_STDINT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>HAVE_INTTYPES_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;inttypes.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(defined<sp/>(SIZEOF_INT64_T)<sp/>&amp;&amp;<sp/>(SIZEOF_INT64_T<sp/>==<sp/>8))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Good,<sp/>we<sp/>have<sp/>int64_t.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>(defined<sp/>(SIZEOF_LONG_LONG)<sp/>&amp;&amp;<sp/>(SIZEOF_LONG_LONG<sp/>==<sp/>8))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref><sp/>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>(defined<sp/>(SIZEOF_LONG)<sp/>&amp;&amp;<sp/>(SIZEOF_LONG<sp/>==<sp/>8))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref><sp/>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>(defined<sp/>(WIN32)<sp/>||<sp/>defined<sp/>(_WIN32))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>__int64<sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref><sp/>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>&quot;No<sp/>64<sp/>bit<sp/>integer<sp/>type.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>HAVE_BYTESWAP_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;byteswap.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENDSWAP_SHORT(x)<sp/><sp/><sp/><sp/>((short)<sp/>bswap_16<sp/>(x))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENDSWAP_INT(x)<sp/><sp/><sp/><sp/><sp/><sp/>((int)<sp/>bswap_32<sp/>(x))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="sfendian_8h_1a31ae71595214465f5b2cdfeda2cd50c9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENDSWAP_SHORT(x)<sp/><sp/><sp/><sp/>((((x)<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0xFF)<sp/>+<sp/>(((x)<sp/>&amp;<sp/>0xFF)<sp/>&lt;&lt;<sp/>8))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="sfendian_8h_1a6e885c01da1b383c0876148b53e512e7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ENDSWAP_INT(x)<sp/><sp/><sp/><sp/><sp/><sp/>((((x)<sp/>&gt;&gt;<sp/>24)<sp/>&amp;<sp/>0xFF)<sp/>+<sp/>(((x)<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0xFF00)<sp/>+<sp/>(((x)<sp/>&amp;<sp/>0xFF00)<sp/>&lt;&lt;<sp/>8)<sp/>+<sp/>(((x)<sp/>&amp;<sp/>0xFF)<sp/>&lt;&lt;<sp/>24))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="57"><highlight class="comment">**<sp/>Many<sp/>file<sp/>types<sp/>(ie<sp/>WAV,<sp/>AIFF)<sp/>use<sp/>sets<sp/>of<sp/>four<sp/>consecutive<sp/>bytes<sp/>as<sp/>a</highlight></codeline>
<codeline lineno="58"><highlight class="comment">**<sp/>marker<sp/>indicating<sp/>different<sp/>sections<sp/>of<sp/>the<sp/>file.</highlight></codeline>
<codeline lineno="59"><highlight class="comment">**<sp/>The<sp/>following<sp/>MAKE_MARKER<sp/>macro<sp/>allows<sp/>th<sp/>creation<sp/>of<sp/>integer<sp/>constants</highlight></codeline>
<codeline lineno="60"><highlight class="comment">**<sp/>for<sp/>these<sp/>markers.</highlight></codeline>
<codeline lineno="61"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(CPU_IS_LITTLE_ENDIAN<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>MAKE_MARKER(a,b,c,d)<sp/><sp/><sp/><sp/>((a)<sp/>|<sp/>((b)<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>((c)<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>((d)<sp/>&lt;&lt;<sp/>24))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>(CPU_IS_BIG_ENDIAN<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>MAKE_MARKER(a,b,c,d)<sp/><sp/><sp/><sp/>(((a)<sp/>&lt;&lt;<sp/>24)<sp/>|<sp/>((b)<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>((c)<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>(d))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#error<sp/>&quot;Target<sp/>CPU<sp/>endian-ness<sp/>unknown.<sp/>May<sp/>need<sp/>to<sp/>hand<sp/>edit<sp/>src/sfconfig.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="72"><highlight class="comment">**<sp/>Macros<sp/>to<sp/>handle<sp/>reading<sp/>of<sp/>data<sp/>of<sp/>a<sp/>specific<sp/>endian-ness<sp/>into<sp/>host<sp/>endian</highlight></codeline>
<codeline lineno="73"><highlight class="comment">**<sp/>shorts<sp/>and<sp/>ints.<sp/>The<sp/>single<sp/>input<sp/>is<sp/>an<sp/>unsigned<sp/>char*<sp/>pointer<sp/>to<sp/>the<sp/>start</highlight></codeline>
<codeline lineno="74"><highlight class="comment">**<sp/>of<sp/>the<sp/>object.<sp/>There<sp/>are<sp/>two<sp/>versions<sp/>of<sp/>each<sp/>macro<sp/>as<sp/>we<sp/>need<sp/>to<sp/>deal<sp/>with</highlight></codeline>
<codeline lineno="75"><highlight class="comment">**<sp/>both<sp/>big<sp/>and<sp/>little<sp/>endian<sp/>CPUs.</highlight></codeline>
<codeline lineno="76"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(CPU_IS_LITTLE_ENDIAN<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LES2H_SHORT(x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LEI2H_INT(x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>BES2H_SHORT(x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ENDSWAP_SHORT<sp/>(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>BEI2H_INT(x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ENDSWAP_INT<sp/>(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>H2BE_SHORT(x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ENDSWAP_SHORT<sp/>(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>H2BE_INT(x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ENDSWAP_INT<sp/>(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>(CPU_IS_BIG_ENDIAN<sp/>==<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LES2H_SHORT(x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ENDSWAP_SHORT<sp/>(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>LEI2H_INT(x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ENDSWAP_INT<sp/>(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>BES2H_SHORT(x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>BEI2H_INT(x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>H2LE_SHORT(x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ENDSWAP_SHORT<sp/>(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>H2LE_INT(x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ENDSWAP_INT<sp/>(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#error<sp/>&quot;Target<sp/>CPU<sp/>endian-ness<sp/>unknown.<sp/>May<sp/>need<sp/>to<sp/>hand<sp/>edit<sp/>src/sfconfig.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="sfendian_8h_1a0cd46464b69e46f6def628d2c07ef23d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LET2H_SHORT_PTR(x)<sp/><sp/><sp/><sp/><sp/><sp/>((x)<sp/>[1]<sp/>+<sp/>((x)<sp/>[2]<sp/>&lt;&lt;<sp/>8))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="sfendian_8h_1a420f2cc8302486c5504bc682f15bd885" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LET2H_INT_PTR(x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((x)<sp/>[0]<sp/>&lt;&lt;<sp/>8)<sp/>+<sp/>((x)<sp/>[1]<sp/>&lt;&lt;<sp/>16)<sp/>+<sp/>((x)<sp/>[2]<sp/>&lt;&lt;<sp/>24))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="sfendian_8h_1a40b4b92c37d809e9ef83a715846812f5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BET2H_SHORT_PTR(x)<sp/><sp/><sp/><sp/><sp/><sp/>(((x)<sp/>[0]<sp/>&lt;&lt;<sp/>8)<sp/>+<sp/>(x)<sp/>[1])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="sfendian_8h_1ad53526f04233628d698ca42952baaa4d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BET2H_INT_PTR(x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((x)<sp/>[0]<sp/>&lt;&lt;<sp/>24)<sp/>+<sp/>((x)<sp/>[1]<sp/>&lt;&lt;<sp/>16)<sp/>+<sp/>((x)<sp/>[2]<sp/>&lt;&lt;<sp/>8))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment">/*-----------------------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="109"><highlight class="comment">**<sp/>Generic<sp/>functions<sp/>for<sp/>performing<sp/>endian<sp/>swapping<sp/>on<sp/>integer<sp/>arrays.</highlight></codeline>
<codeline lineno="110"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal">endswap_short_array<sp/>(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*ptr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>)</highlight></codeline>
<codeline lineno="114"><highlight class="normal">{<sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><sp/><sp/>temp<sp/>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(--len<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>temp<sp/>=<sp/>ptr<sp/>[<ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>]<sp/>;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>[<ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>]<sp/>=<sp/><ref refid="sfendian_8h_1a31ae71595214465f5b2cdfeda2cd50c9" kindref="member">ENDSWAP_SHORT</ref><sp/>(temp)<sp/>;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="120"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>endswap_short_array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal">endswap_short_copy<sp/>(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*<ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*src,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>)</highlight></codeline>
<codeline lineno="124"><highlight class="normal">{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(--len<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref><sp/>[<ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>]<sp/>=<sp/><ref refid="sfendian_8h_1a31ae71595214465f5b2cdfeda2cd50c9" kindref="member">ENDSWAP_SHORT</ref><sp/>(src<sp/>[len])<sp/>;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="128"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>endswap_short_copy<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal">endswap_int_array<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*ptr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>)</highlight></codeline>
<codeline lineno="132"><highlight class="normal">{<sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>temp<sp/>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(--len<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>temp<sp/>=<sp/>ptr<sp/>[<ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>]<sp/>;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>[<ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>]<sp/>=<sp/><ref refid="sfendian_8h_1a6e885c01da1b383c0876148b53e512e7" kindref="member">ENDSWAP_INT</ref><sp/>(temp)<sp/>;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="138"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>endswap_int_array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal">endswap_int_copy<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*src,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>)</highlight></codeline>
<codeline lineno="142"><highlight class="normal">{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(--len<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref><sp/>[<ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>]<sp/>=<sp/><ref refid="sfendian_8h_1a6e885c01da1b383c0876148b53e512e7" kindref="member">ENDSWAP_INT</ref><sp/>(src<sp/>[len])<sp/>;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="146"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>endswap_int_copy<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="comment">/*========================================================================================</highlight></codeline>
<codeline lineno="149"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(HAVE_BYTESWAP_H<sp/>&amp;&amp;<sp/>defined<sp/>(SIZEOF_INT64_T)<sp/>&amp;&amp;<sp/>(SIZEOF_INT64_T<sp/>==<sp/>8))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal">endswap_int64_t_array<sp/>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref><sp/>*ptr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>)</highlight></codeline>
<codeline lineno="155"><highlight class="normal">{<sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref><sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref><sp/>;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(--len<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>value<sp/>=<sp/>ptr<sp/>[<ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>]<sp/>;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>[<ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>]<sp/>=<sp/>bswap_64<sp/>(value)<sp/>;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="161"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>endswap_int64_t_array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal">endswap_int64_t_copy<sp/>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref><sp/>*<ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref><sp/>*src,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>)</highlight></codeline>
<codeline lineno="165"><highlight class="normal">{<sp/><sp/><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref><sp/><ref refid="lib_2expat_8h_1a4a30a13b813682e68c5b689b45c65971" kindref="member">value</ref><sp/>;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(--len<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>value<sp/>=<sp/>src<sp/>[<ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>]<sp/>;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref><sp/>[<ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>]<sp/>=<sp/>bswap_64<sp/>(value)<sp/>;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="171"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>endswap_int64_t_copy<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal">endswap_int64_t_array<sp/>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref><sp/>*ptr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>)</highlight></codeline>
<codeline lineno="177"><highlight class="normal">{<sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ucptr,<sp/>temp<sp/>;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>ucptr<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>ptr<sp/>;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>ucptr<sp/>+=<sp/>8<sp/>*<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref><sp/>;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(--len<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>ucptr<sp/>-=<sp/>8<sp/>;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>ucptr<sp/>[0]<sp/>;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ucptr<sp/>[0]<sp/>=<sp/>ucptr<sp/>[7]<sp/>;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ucptr<sp/>[7]<sp/>=<sp/>temp<sp/>;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>ucptr<sp/>[1]<sp/>;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ucptr<sp/>[1]<sp/>=<sp/>ucptr<sp/>[6]<sp/>;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ucptr<sp/>[6]<sp/>=<sp/>temp<sp/>;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>ucptr<sp/>[2]<sp/>;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ucptr<sp/>[2]<sp/>=<sp/>ucptr<sp/>[5]<sp/>;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ucptr<sp/>[5]<sp/>=<sp/>temp<sp/>;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/>ucptr<sp/>[3]<sp/>;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ucptr<sp/>[3]<sp/>=<sp/>ucptr<sp/>[4]<sp/>;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ucptr<sp/>[4]<sp/>=<sp/>temp<sp/>;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="200"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>endswap_int64_t_array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal">endswap_int64_t_copy<sp/>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref><sp/>*<ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref><sp/>*src,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>)</highlight></codeline>
<codeline lineno="204"><highlight class="normal">{<sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*psrc<sp/>;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pdest<sp/>;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref><sp/>==<sp/>src)</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>endswap_int64_t_array<sp/>(<ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>,<sp/>len)<sp/>;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="hashrout_8h_1a9842e92184417c07866419916b2b3ce3" kindref="member">return</ref><sp/>;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>psrc<sp/>=<sp/>((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>src)<sp/>+<sp/>8<sp/>*<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref><sp/>;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>pdest<sp/>=<sp/>((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/><ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>)<sp/>+<sp/>8<sp/>*<sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref><sp/>;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(--len<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>psrc<sp/>-=<sp/>8<sp/>;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pdest<sp/>-=<sp/>8<sp/>;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pdest<sp/>[0]<sp/>=<sp/>psrc<sp/>[7]<sp/>;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pdest<sp/>[2]<sp/>=<sp/>psrc<sp/>[5]<sp/>;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pdest<sp/>[4]<sp/>=<sp/>psrc<sp/>[3]<sp/>;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pdest<sp/>[6]<sp/>=<sp/>psrc<sp/>[1]<sp/>;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pdest<sp/>[7]<sp/>=<sp/>psrc<sp/>[0]<sp/>;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pdest<sp/>[1]<sp/>=<sp/>psrc<sp/>[6]<sp/>;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pdest<sp/>[3]<sp/>=<sp/>psrc<sp/>[4]<sp/>;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pdest<sp/>[5]<sp/>=<sp/>psrc<sp/>[2]<sp/>;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>;</highlight></codeline>
<codeline lineno="227"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>endswap_int64_t_copy<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>A<sp/>couple<sp/>of<sp/>wrapper<sp/>functions.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal">endswap_float_array<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*ptr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>)</highlight></codeline>
<codeline lineno="235"><highlight class="normal">{<sp/><sp/><sp/>endswap_int_array<sp/>((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>ptr,<sp/>len)<sp/>;</highlight></codeline>
<codeline lineno="236"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>endswap_float_array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal">endswap_double_array<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*ptr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>)</highlight></codeline>
<codeline lineno="240"><highlight class="normal">{<sp/><sp/><sp/>endswap_int64_t_array<sp/>((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>ptr,<sp/>len)<sp/>;</highlight></codeline>
<codeline lineno="241"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>endswap_double_array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal">endswap_float_copy<sp/>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*<ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*src,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>)</highlight></codeline>
<codeline lineno="245"><highlight class="normal">{<sp/><sp/><sp/>endswap_int_copy<sp/>((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*)<sp/><ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*)<sp/>src,<sp/>len)<sp/>;</highlight></codeline>
<codeline lineno="246"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>endswap_float_copy<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal">endswap_double_copy<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*src,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib_2expat_8h_1af86d325fecfc8f47b61fbf5a5146f582" kindref="member">len</ref>)</highlight></codeline>
<codeline lineno="250"><highlight class="normal">{<sp/><sp/><sp/>endswap_int64_t_copy<sp/>((<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref><sp/>*)<sp/><ref refid="namespacelv2specgen_1af69976955f051ccef12ad2f85392e818" kindref="member">dest</ref>,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a67a9885ef4908cb72ce26d75b694386c" kindref="member">int64_t</ref><sp/>*)<sp/>src,<sp/>len)<sp/>;</highlight></codeline>
<codeline lineno="251"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>endswap_double_copy<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>SFENDIAN_INCLUDED<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libsndfile/src/sfendian.h"/>
  </compounddef>
</doxygen>
