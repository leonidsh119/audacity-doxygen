<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="lilv_2src_2instance_8c" kind="file" language="C++">
    <compoundname>instance.c</compoundname>
    <includes refid="assert_8h" local="no">assert.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes refid="lilv__internal_8h" local="yes">lilv_internal.h</includes>
    <incdepgraph>
      <node id="24470">
        <label>lilv_internal.h</label>
        <link refid="lilv__internal_8h"/>
        <childnode refid="24471" relation="include">
        </childnode>
        <childnode refid="24472" relation="include">
        </childnode>
        <childnode refid="24468" relation="include">
        </childnode>
        <childnode refid="24473" relation="include">
        </childnode>
        <childnode refid="24475" relation="include">
        </childnode>
        <childnode refid="24476" relation="include">
        </childnode>
        <childnode refid="24479" relation="include">
        </childnode>
        <childnode refid="24480" relation="include">
        </childnode>
        <childnode refid="24482" relation="include">
        </childnode>
        <childnode refid="24483" relation="include">
        </childnode>
      </node>
      <node id="24478">
        <label>stdbool.h</label>
      </node>
      <node id="24477">
        <label>stdarg.h</label>
      </node>
      <node id="24481">
        <label>zix/common.h</label>
      </node>
      <node id="24474">
        <label>FLAC/ordinals.h</label>
        <link refid="ordinals_8h"/>
        <childnode refid="24472" relation="include">
        </childnode>
      </node>
      <node id="24472">
        <label>stdint.h</label>
      </node>
      <node id="24468">
        <label>stdlib.h</label>
      </node>
      <node id="24476">
        <label>serd/serd.h</label>
        <link refid="serd_8h"/>
        <childnode refid="24477" relation="include">
        </childnode>
        <childnode refid="24471" relation="include">
        </childnode>
        <childnode refid="24472" relation="include">
        </childnode>
        <childnode refid="24467" relation="include">
        </childnode>
        <childnode refid="24478" relation="include">
        </childnode>
      </node>
      <node id="24471">
        <label>stddef.h</label>
      </node>
      <node id="24466">
        <label>assert.h</label>
        <link refid="assert_8h"/>
      </node>
      <node id="24479">
        <label>sord/sord.h</label>
        <link refid="sord_8h"/>
        <childnode refid="24471" relation="include">
        </childnode>
        <childnode refid="24472" relation="include">
        </childnode>
        <childnode refid="24467" relation="include">
        </childnode>
        <childnode refid="24476" relation="include">
        </childnode>
        <childnode refid="24478" relation="include">
        </childnode>
      </node>
      <node id="24485">
        <label>lv2/lv2plug.in/ns/ext/urid/urid.h</label>
        <link refid="urid_8h"/>
        <childnode refid="24472" relation="include">
        </childnode>
      </node>
      <node id="24465">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/instance.c</label>
        <link refid="lilv/src/instance.c"/>
        <childnode refid="24466" relation="include">
        </childnode>
        <childnode refid="24467" relation="include">
        </childnode>
        <childnode refid="24468" relation="include">
        </childnode>
        <childnode refid="24469" relation="include">
        </childnode>
        <childnode refid="24470" relation="include">
        </childnode>
      </node>
      <node id="24469">
        <label>string.h</label>
      </node>
      <node id="24473">
        <label>float.h</label>
        <link refid="float_8h"/>
        <childnode refid="24474" relation="include">
        </childnode>
      </node>
      <node id="24483">
        <label>lilv/lilv.h</label>
        <link refid="lilv_8h"/>
        <childnode refid="24477" relation="include">
        </childnode>
        <childnode refid="24471" relation="include">
        </childnode>
        <childnode refid="24472" relation="include">
        </childnode>
        <childnode refid="24467" relation="include">
        </childnode>
        <childnode refid="24484" relation="include">
        </childnode>
        <childnode refid="24485" relation="include">
        </childnode>
        <childnode refid="24478" relation="include">
        </childnode>
      </node>
      <node id="24482">
        <label>lilv_config.h</label>
      </node>
      <node id="24484">
        <label>lv2/lv2plug.in/ns/lv2core/lv2.h</label>
        <link refid="lv2_8h"/>
        <childnode refid="24472" relation="include">
        </childnode>
      </node>
      <node id="24467">
        <label>stdio.h</label>
      </node>
      <node id="24480">
        <label>zix/tree.h</label>
        <link refid="lilv_2src_2zix_2tree_8h"/>
        <childnode refid="24471" relation="include">
        </childnode>
        <childnode refid="24481" relation="include">
        </childnode>
      </node>
      <node id="24475">
        <label>dlfcn.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__lilv_1ga10eec215ea5fa4fa45d0508e840f3c8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref> <ref refid="lilv_8h_1acdb0d241e2506a6f59bd2d8dd427b99c" kindref="member">LilvInstance</ref> *</type>
        <definition>LILV_API LilvInstance* lilv_plugin_instantiate</definition>
        <argsstring>(const LilvPlugin *plugin, double sample_rate, const LV2_Feature *const *features)</argsstring>
        <name>lilv_plugin_instantiate</name>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lilv_8h_1a94e36303167a78a0c392f881136b461b" kindref="member">LilvPlugin</ref> *</type>
          <declname>plugin</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sample_rate</declname>
        </param>
        <param>
          <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> <ref refid="lv2_8h_1a78d13b607443404459db283371723234" kindref="member">LV2_Feature</ref> *<ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> *</type>
          <declname>features</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Instantiate a plugin. The returned value is a lightweight handle for an LV2 plugin instance, it does not refer to <computeroutput>plugin</computeroutput>, or any other <ref refid="namespace_lilv" kindref="compound">Lilv</ref> state. The caller must eventually free it with <ref refid="group__lilv_1gadad7cb14d78818de84d642c39a0c19d8" kindref="member">lilv_instance_free()</ref>. <computeroutput>features</computeroutput> is a NULL-terminated array of features the host supports. NULL may be passed if the host supports no additional features. <simplesect kind="return"><para>NULL if instantiation failed. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/instance.c" line="25" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/instance.c" bodystart="25" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="group__lilv_1gadad7cb14d78818de84d642c39a0c19d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref> <ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>LILV_API void lilv_instance_free</definition>
        <argsstring>(LilvInstance *instance)</argsstring>
        <name>lilv_instance_free</name>
        <param>
          <type><ref refid="lilv_8h_1acdb0d241e2506a6f59bd2d8dd427b99c" kindref="member">LilvInstance</ref> *</type>
          <declname>instance</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Free a plugin instance. It is safe to call this function on NULL. <computeroutput>instance</computeroutput> is invalid after this call. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/instance.c" line="113" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/instance.c" bodystart="113" bodyend="123"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/>Copyright<sp/>2007-2014<sp/>David<sp/>Robillard<sp/>&lt;http://drobilla.net&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/><sp/>Permission<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>and/or<sp/>distribute<sp/>this<sp/>software<sp/>for<sp/>any</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/>purpose<sp/>with<sp/>or<sp/>without<sp/>fee<sp/>is<sp/>hereby<sp/>granted,<sp/>provided<sp/>that<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>appear<sp/>in<sp/>all<sp/>copies.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"></highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;<sp/>AND<sp/>THE<sp/>AUTHOR<sp/>DISCLAIMS<sp/>ALL<sp/>WARRANTIES</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/>WITH<sp/>REGARD<sp/>TO<sp/>THIS<sp/>SOFTWARE<sp/>INCLUDING<sp/>ALL<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/>ANY<sp/>SPECIAL,<sp/>DIRECT,<sp/>INDIRECT,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>OR<sp/>ANY<sp/>DAMAGES</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/>WHATSOEVER<sp/>RESULTING<sp/>FROM<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA<sp/>OR<sp/>PROFITS,<sp/>WHETHER<sp/>IN<sp/>AN</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>NEGLIGENCE<sp/>OR<sp/>OTHER<sp/>TORTIOUS<sp/>ACTION,<sp/>ARISING<sp/>OUT<sp/>OF</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>USE<sp/>OR<sp/>PERFORMANCE<sp/>OF<sp/>THIS<sp/>SOFTWARE.</highlight></codeline>
<codeline lineno="15"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="assert_8h" kindref="compound">assert.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lilv__internal_8h" kindref="compound">lilv_internal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref><sp/><ref refid="lilv_8h_1acdb0d241e2506a6f59bd2d8dd427b99c" kindref="member">LilvInstance</ref>*</highlight></codeline>
<codeline lineno="25" refid="group__lilv_1ga10eec215ea5fa4fa45d0508e840f3c8b" refkind="member"><highlight class="normal"><ref refid="group__lilv_1ga10eec215ea5fa4fa45d0508e840f3c8b" kindref="member">lilv_plugin_instantiate</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_plugin_impl" kindref="compound">LilvPlugin</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacelv2docgen_1afc728ef34e814436971ab700cb7db3de" kindref="member">plugin</ref>,</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sample_rate,</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct___l_v2___feature" kindref="compound">LV2_Feature</ref>*</highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>features)</highlight></codeline>
<codeline lineno="28"><highlight class="normal">{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilv__internal_8h_1a13b6764a993ba40c647b16bda85569f9" kindref="member">lilv_plugin_load_if_necessary</ref>(plugin);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lilv_8h_1acdb0d241e2506a6f59bd2d8dd427b99c" kindref="member">LilvInstance</ref>*<sp/>result<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>lib_uri<sp/><sp/><sp/><sp/>=<sp/><ref refid="group__lilv_1gab122361bb7e48347a72adcf38c539280" kindref="member">lilv_plugin_get_library_uri</ref>(plugin);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_lilv_node_impl" kindref="compound">LilvNode</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>bundle_uri<sp/>=<sp/><ref refid="group__lilv_1ga6b8302af0054d9942cc928a4229b6585" kindref="member">lilv_plugin_get_bundle_uri</ref>(plugin);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>bundle_path<sp/>=<sp/><ref refid="group__lilv_1gada8ce596e1147a59d1711444c197a23d" kindref="member">lilv_uri_to_path</ref>(</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lilv_1ga4f0ffa007aa11aaf30ba37c1ac1513fd" kindref="member">lilv_node_as_uri</ref>(<ref refid="group__lilv_1ga6b8302af0054d9942cc928a4229b6585" kindref="member">lilv_plugin_get_bundle_uri</ref>(plugin)));</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_lilv_lib" kindref="compound">LilvLib</ref>*<sp/>lib<sp/>=<sp/><ref refid="lib_8c_1aaa0c351c196f91e189dffe8db7c76195" kindref="member">lilv_lib_open</ref>(plugin-&gt;<ref refid="struct_lilv_plugin_impl_1ae4ce79504dd83ecc9919c54cfab37ace" kindref="member">world</ref>,<sp/>lib_uri,<sp/>bundle_path,<sp/>features);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!lib)<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Parse<sp/>bundle<sp/>URI<sp/>to<sp/>use<sp/>as<sp/>base<sp/>URI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>bundle_uri_str<sp/>=<sp/><ref refid="group__lilv_1ga4f0ffa007aa11aaf30ba37c1ac1513fd" kindref="member">lilv_node_as_uri</ref>(bundle_uri);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_serd_u_r_i" kindref="compound">SerdURI</ref><sp/><sp/><sp/><sp/><sp/>base_uri;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="group__serd_1ga448a194144052f3edea6030d3a950eb0" kindref="member">serd_uri_parse</ref>((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*)bundle_uri_str,<sp/>&amp;base_uri))<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib_8c_1a8da63ebaa149daeb65d8c218a918b0ff" kindref="member">lilv_lib_close</ref>(lib);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct___l_v2___feature" kindref="compound">LV2_Feature</ref>**<sp/>local_features<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(features<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>local_features<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct___l_v2___feature" kindref="compound">LV2_Feature</ref>**)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct___l_v2___feature" kindref="compound">LV2_Feature</ref>));</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>local_features[0]<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Search<sp/>for<sp/>plugin<sp/>by<sp/>URI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct___l_v2___descriptor" kindref="compound">LV2_Descriptor</ref>*<sp/>ld<sp/>=<sp/><ref refid="lib_8c_1ad3c55d86bc60a0ad82f0b56043da0bf0" kindref="member">lilv_lib_get_plugin</ref>(lib,<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!ld)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lilv__internal_8h_1acc82b20fe084dcdaae2eb95863d320b8" kindref="member">LILV_ERRORF</ref>(</highlight><highlight class="stringliteral">&quot;No<sp/>plugin<sp/>&lt;%s&gt;<sp/>in<sp/>&lt;%s&gt;\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lilv_1ga4f0ffa007aa11aaf30ba37c1ac1513fd" kindref="member">lilv_node_as_uri</ref>(<ref refid="group__lilv_1gaa462f4594d361e5a79e56f70c1f04d02" kindref="member">lilv_plugin_get_uri</ref>(plugin)),</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lilv_1ga4f0ffa007aa11aaf30ba37c1ac1513fd" kindref="member">lilv_node_as_uri</ref>(lib_uri));</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib_8c_1a8da63ebaa149daeb65d8c218a918b0ff" kindref="member">lilv_lib_close</ref>(lib);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>NULL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Resolve<sp/>library<sp/>plugin<sp/>URI<sp/>against<sp/>base<sp/>URI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_u_r_i" kindref="compound">SerdURI</ref><sp/><sp/>abs_uri;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_serd_node" kindref="compound">SerdNode</ref><sp/>abs_uri_node<sp/>=<sp/><ref refid="group__serd_1ga4285ae7168a9fd4a9dfb5c8ccce66222" kindref="member">serd_node_new_uri_from_string</ref>(</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a9a941819355e6f658991890ff66b4b0e" kindref="member">uint8_t</ref>*)ld-&gt;<ref refid="struct___l_v2___descriptor_1a4d26065676fcaaf06ba1fb242de0fc72" kindref="member">URI</ref>,<sp/>&amp;base_uri,<sp/>&amp;abs_uri);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!abs_uri_node.<ref refid="struct_serd_node_1a50033bcc22d7a31e8515088ebf7d50ed" kindref="member">buf</ref>)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lilv__internal_8h_1acc82b20fe084dcdaae2eb95863d320b8" kindref="member">LILV_ERRORF</ref>(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>parse<sp/>plugin<sp/>URI<sp/>`%s&apos;\n&quot;</highlight><highlight class="normal">,<sp/>ld-&gt;<ref refid="struct___l_v2___descriptor_1a4d26065676fcaaf06ba1fb242de0fc72" kindref="member">URI</ref>);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lib_8c_1a8da63ebaa149daeb65d8c218a918b0ff" kindref="member">lilv_lib_close</ref>(lib);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)abs_uri_node.<ref refid="struct_serd_node_1a50033bcc22d7a31e8515088ebf7d50ed" kindref="member">buf</ref>,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__lilv_1ga4f0ffa007aa11aaf30ba37c1ac1513fd" kindref="member">lilv_node_as_uri</ref>(<ref refid="group__lilv_1gaa462f4594d361e5a79e56f70c1f04d02" kindref="member">lilv_plugin_get_uri</ref>(plugin))))<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>LilvInstance<sp/>to<sp/>return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>(<ref refid="lilv_8h_1acdb0d241e2506a6f59bd2d8dd427b99c" kindref="member">LilvInstance</ref>*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="lilv_8h_1acdb0d241e2506a6f59bd2d8dd427b99c" kindref="member">LilvInstance</ref>));</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result-&gt;lv2_descriptor<sp/>=<sp/>ld;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result-&gt;lv2_handle<sp/>=<sp/>ld-&gt;<ref refid="struct___l_v2___descriptor_1a2f7e1c335ddf27d3a0017207421fe9f5" kindref="member">instantiate</ref>(</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ld,<sp/>sample_rate,<sp/>bundle_path,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(features)<sp/>?<sp/>features<sp/>:<sp/>local_features);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result-&gt;pimpl<sp/>=<sp/>lib;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__serd_1ga037ef71317b8afff0a020072099cd14f" kindref="member">serd_node_free</ref>(&amp;abs_uri_node);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__serd_1ga037ef71317b8afff0a020072099cd14f" kindref="member">serd_node_free</ref>(&amp;abs_uri_node);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>free(local_features);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Failed<sp/>to<sp/>instantiate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result-&gt;lv2_handle<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(result);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>&quot;Connect&quot;<sp/>all<sp/>ports<sp/>to<sp/>NULL<sp/>(catches<sp/>bugs)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="lib-src_2ffmpeg_2win32_2stdint_8h_1a6eb1e68cc391dd753bc8ce896dbb8315" kindref="member">uint32_t</ref><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref><sp/>&lt;<sp/><ref refid="group__lilv_1gafcd5012a82daecb65b476d9b3152de96" kindref="member">lilv_plugin_get_num_ports</ref>(plugin);<sp/>++<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result-&gt;lv2_descriptor-&gt;connect_port(result-&gt;lv2_handle,<sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>,<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><ref refid="lilv_8h_1aa5182eee7ddff96862d0171967ee6f77" kindref="member">LILV_API</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="group__lilv_1gadad7cb14d78818de84d642c39a0c19d8" refkind="member"><highlight class="normal"><ref refid="group__lilv_1gadad7cb14d78818de84d642c39a0c19d8" kindref="member">lilv_instance_free</ref>(<ref refid="lilv_8h_1acdb0d241e2506a6f59bd2d8dd427b99c" kindref="member">LilvInstance</ref>*<sp/>instance)</highlight></codeline>
<codeline lineno="114"><highlight class="normal">{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!instance)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>instance-&gt;lv2_descriptor-&gt;cleanup(instance-&gt;lv2_handle);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>instance-&gt;lv2_descriptor<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lib_8c_1a8da63ebaa149daeb65d8c218a918b0ff" kindref="member">lilv_lib_close</ref>((<ref refid="struct_lilv_lib" kindref="compound">LilvLib</ref>*)instance-&gt;pimpl);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>instance-&gt;pimpl<sp/>=<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>free(instance);</highlight></codeline>
<codeline lineno="123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/lv2/lilv/src/instance.c"/>
  </compounddef>
</doxygen>
