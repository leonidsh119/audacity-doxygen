<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="lib-src_2libflac_2examples_2cpp_2encode_2file_2main_8cpp" kind="file" language="C++">
    <compoundname>main.cpp</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="yes">FLAC++/metadata.h</includes>
    <includes refid="encoder_8h" local="yes">FLAC++/encoder.h</includes>
    <includes refid="libflac_2include_2share_2compat_8h" local="yes">share/compat.h</includes>
    <includes local="no">cstring</includes>
    <incdepgraph>
      <node id="5866">
        <label>format.h</label>
        <link refid="include_2_f_l_a_c_2format_8h"/>
        <childnode refid="5865" relation="include">
        </childnode>
        <childnode refid="5867" relation="include">
        </childnode>
      </node>
      <node id="5863">
        <label>export.h</label>
        <link refid="lib-src_2libflac_2include_2_f_l_a_c_09_09_2export_8h"/>
      </node>
      <node id="5876">
        <label>sys/types.h</label>
        <link refid="lib-src_2libvorbis_2macos_2compat_2sys_2_types_8h"/>
        <childnode refid="5877" relation="include">
        </childnode>
        <childnode refid="5878" relation="include">
        </childnode>
        <childnode refid="5860" relation="include">
        </childnode>
      </node>
      <node id="5880">
        <label>stdarg.h</label>
      </node>
      <node id="5872">
        <label>metadata.h</label>
        <link refid="include_2_f_l_a_c_09_09_2metadata_8h"/>
        <childnode refid="5863" relation="include">
        </childnode>
        <childnode refid="5873" relation="include">
        </childnode>
      </node>
      <node id="5867">
        <label>ordinals.h</label>
        <link refid="ordinals_8h"/>
        <childnode refid="5868" relation="include">
        </childnode>
      </node>
      <node id="5869">
        <label>stream_decoder.h</label>
        <link refid="include_2_f_l_a_c_2stream__decoder_8h"/>
        <childnode refid="5858" relation="include">
        </childnode>
        <childnode refid="5865" relation="include">
        </childnode>
        <childnode refid="5866" relation="include">
        </childnode>
      </node>
      <node id="5868">
        <label>stdint.h</label>
      </node>
      <node id="5859">
        <label>stdlib.h</label>
      </node>
      <node id="5864">
        <label>FLAC/stream_encoder.h</label>
        <link refid="include_2_f_l_a_c_2stream__encoder_8h"/>
        <childnode refid="5858" relation="include">
        </childnode>
        <childnode refid="5865" relation="include">
        </childnode>
        <childnode refid="5866" relation="include">
        </childnode>
        <childnode refid="5869" relation="include">
        </childnode>
      </node>
      <node id="5862">
        <label>FLAC++/encoder.h</label>
        <link refid="encoder_8h"/>
        <childnode refid="5863" relation="include">
        </childnode>
        <childnode refid="5864" relation="include">
        </childnode>
        <childnode refid="5870" relation="include">
        </childnode>
        <childnode refid="5872" relation="include">
        </childnode>
      </node>
      <node id="5871">
        <label>string</label>
      </node>
      <node id="5878">
        <label>alloca.h</label>
      </node>
      <node id="5873">
        <label>FLAC/metadata.h</label>
      </node>
      <node id="5870">
        <label>decoder.h</label>
        <link refid="libflac_2include_2_f_l_a_c_09_09_2decoder_8h"/>
        <childnode refid="5863" relation="include">
        </childnode>
        <childnode refid="5871" relation="include">
        </childnode>
        <childnode refid="5869" relation="include">
        </childnode>
      </node>
      <node id="5877">
        <label>MacTypes.h</label>
      </node>
      <node id="5860">
        <label>string.h</label>
      </node>
      <node id="5879">
        <label>utime.h</label>
      </node>
      <node id="5865">
        <label>export.h</label>
        <link refid="lib-src_2libflac_2include_2_f_l_a_c_2export_8h"/>
      </node>
      <node id="5875">
        <label>unistd.h</label>
      </node>
      <node id="5874">
        <label>share/compat.h</label>
        <link refid="libflac_2include_2share_2compat_8h"/>
        <childnode refid="5875" relation="include">
        </childnode>
        <childnode refid="5876" relation="include">
        </childnode>
        <childnode refid="5879" relation="include">
        </childnode>
        <childnode refid="5880" relation="include">
        </childnode>
      </node>
      <node id="5861">
        <label>FLAC++/metadata.h</label>
      </node>
      <node id="5857">
        <label>C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/examples/cpp/encode/file/main.cpp</label>
        <link refid="lib-src/libflac/examples/cpp/encode/file/main.cpp"/>
        <childnode refid="5858" relation="include">
        </childnode>
        <childnode refid="5859" relation="include">
        </childnode>
        <childnode refid="5860" relation="include">
        </childnode>
        <childnode refid="5861" relation="include">
        </childnode>
        <childnode refid="5862" relation="include">
        </childnode>
        <childnode refid="5874" relation="include">
        </childnode>
        <childnode refid="5881" relation="include">
        </childnode>
      </node>
      <node id="5858">
        <label>stdio.h</label>
      </node>
      <node id="5881">
        <label>cstring</label>
      </node>
    </incdepgraph>
    <innerclass refid="class_our_encoder" prot="public">OurEncoder</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="lib-src_2libflac_2examples_2cpp_2encode_2file_2main_8cpp_1a54bf24043fc6dd562b2ce3597993943c" prot="public" static="no">
        <name>READSIZE</name>
        <initializer>1024</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/examples/cpp/encode/file/main.cpp" line="49" column="9" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/examples/cpp/encode/file/main.cpp" bodystart="49" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="lib-src_2libflac_2examples_2cpp_2encode_2file_2main_8cpp_1a45fbc7e1478f172d8b8555e663984056" prot="public" static="yes" mutable="no">
        <type>unsigned</type>
        <definition>unsigned total_samples</definition>
        <argsstring></argsstring>
        <name>total_samples</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/examples/cpp/encode/file/main.cpp" line="51" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/examples/cpp/encode/file/main.cpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="lib-src_2libflac_2examples_2cpp_2encode_2file_2main_8cpp_1aee38676f3075ed67d05b70f6487cc614" prot="public" static="yes" mutable="no">
        <type><ref refid="ordinals_8h_1a5eb569b12d5b047cdacada4d57924ee3" kindref="member">FLAC__byte</ref></type>
        <definition>FLAC__byte buffer[READSIZE *2 *2]</definition>
        <argsstring>[READSIZE *2 *2]</argsstring>
        <name>buffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/examples/cpp/encode/file/main.cpp" line="52" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/examples/cpp/encode/file/main.cpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="lib-src_2libflac_2examples_2cpp_2encode_2file_2main_8cpp_1ae99da0bd8a2c26d03930187f6e896012" prot="public" static="yes" mutable="no">
        <type><ref refid="ordinals_8h_1a33fd77bfe6d685541a0c034a75deccdc" kindref="member">FLAC__int32</ref></type>
        <definition>FLAC__int32 pcm[READSIZE *2]</definition>
        <argsstring>[READSIZE *2]</argsstring>
        <name>pcm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/examples/cpp/encode/file/main.cpp" line="53" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/examples/cpp/encode/file/main.cpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="lib-src_2libflac_2examples_2cpp_2encode_2file_2main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
        <definition>int main</definition>
        <argsstring>(int argc, char *argv[])</argsstring>
        <name>main</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/examples/cpp/encode/file/main.cpp" line="55" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/examples/cpp/encode/file/main.cpp" bodystart="55" bodyend="171"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>example_cpp_encode_file<sp/>-<sp/>Simple<sp/>FLAC<sp/>file<sp/>encoder<sp/>using<sp/>libFLAC</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2007-2009<sp/><sp/>Josh<sp/>Coalson</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(C)<sp/>2011-2014<sp/><sp/>Xiph.Org<sp/>Foundation</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>along</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>with<sp/>this<sp/>program;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.,</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>51<sp/>Franklin<sp/>Street,<sp/>Fifth<sp/>Floor,<sp/>Boston,<sp/>MA<sp/>02110-1301<sp/>USA.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>This<sp/>example<sp/>shows<sp/>how<sp/>to<sp/>use<sp/>libFLAC++<sp/>to<sp/>encode<sp/>a<sp/>WAVE<sp/>file<sp/>to<sp/>a<sp/>FLAC</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>file.<sp/><sp/>It<sp/>only<sp/>supports<sp/>16-bit<sp/>stereo<sp/>files<sp/>in<sp/>canonical<sp/>WAVE<sp/>format.</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>Complete<sp/>API<sp/>documentation<sp/>can<sp/>be<sp/>found<sp/>at:</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/><sp/><sp/>http://xiph.org/flac/api/</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>HAVE_CONFIG_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>include<sp/>&lt;config.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;FLAC++/metadata.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="encoder_8h" kindref="compound">FLAC++/encoder.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="libflac_2include_2share_2compat_8h" kindref="compound">share/compat.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="class_our_encoder" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_our_encoder" kindref="compound">OurEncoder</ref>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_f_l_a_c_1_1_encoder_1_1_file" kindref="compound">FLAC::Encoder::File</ref><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="44" refid="class_our_encoder_1aa2af31049a348a077d4afe85474d2f7e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_our_encoder_1aa2af31049a348a077d4afe85474d2f7e" kindref="member">OurEncoder</ref>():<sp/><ref refid="namespace_f_l_a_c" kindref="compound">FLAC</ref>::Encoder::<ref refid="class_f_l_a_c_1_1_encoder_1_1_file_1a6006981e7a5b94ae92c53b6ceae90e51" kindref="member">File</ref>()<sp/>{<sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_our_encoder_1a0f1c9e8faa23094567a4c354be8e796e" kindref="member">progress_callback</ref>(<ref refid="ordinals_8h_1aa78c8c70a3eb8a58af7436f278acde8e" kindref="member">FLAC__uint64</ref><sp/>bytes_written,<sp/><ref refid="ordinals_8h_1aa78c8c70a3eb8a58af7436f278acde8e" kindref="member">FLAC__uint64</ref><sp/>samples_written,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>frames_written,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>total_frames_estimate);</highlight></codeline>
<codeline lineno="47"><highlight class="normal">};</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="lib-src_2libflac_2examples_2cpp_2encode_2file_2main_8cpp_1a54bf24043fc6dd562b2ce3597993943c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>READSIZE<sp/>1024</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>total_samples<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>can<sp/>use<sp/>a<sp/>32-bit<sp/>number<sp/>due<sp/>to<sp/>WAVE<sp/>size<sp/>limitations<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="ordinals_8h_1a5eb569b12d5b047cdacada4d57924ee3" kindref="member">FLAC__byte</ref><sp/><ref refid="structbuffer" kindref="compound">buffer</ref>[<ref refid="lib-src_2libflac_2examples_2cpp_2encode_2file_2main_8cpp_1a54bf24043fc6dd562b2ce3597993943c" kindref="member">READSIZE</ref></highlight><highlight class="comment">/*samples*/</highlight><highlight class="normal"><sp/>*<sp/>2</highlight><highlight class="comment">/*bytes_per_sample*/</highlight><highlight class="normal"><sp/>*<sp/>2</highlight><highlight class="comment">/*channels*/</highlight><highlight class="normal">];<sp/></highlight><highlight class="comment">/*<sp/>we<sp/>read<sp/>the<sp/>WAVE<sp/>data<sp/>into<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="ordinals_8h_1a33fd77bfe6d685541a0c034a75deccdc" kindref="member">FLAC__int32</ref><sp/>pcm[<ref refid="lib-src_2libflac_2examples_2cpp_2encode_2file_2main_8cpp_1a54bf24043fc6dd562b2ce3597993943c" kindref="member">READSIZE</ref></highlight><highlight class="comment">/*samples*/</highlight><highlight class="normal"><sp/>*<sp/>2</highlight><highlight class="comment">/*channels*/</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="lib-src_2libflac_2examples_2cpp_2encode_2file_2main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lib-src_2libflac_2examples_2cpp_2decode_2file_2main_8cpp_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cmdline_8c_1aaffeb1bf2056ea44af5b5d0ee4d6ff07" kindref="member">argc</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="cmdline_8c_1ad407d5ba91709bd9b092003858600723" kindref="member">argv</ref>[])</highlight></codeline>
<codeline lineno="56"><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>ok<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_our_encoder" kindref="compound">OurEncoder</ref><sp/>encoder;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__flac__stream__encoder_1ga3bb869620af2b188d77982a5c30b047d" kindref="member">FLAC__StreamEncoderInitStatus</ref><sp/>init_status;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_f_l_a_c_____stream_metadata" kindref="compound">FLAC__StreamMetadata</ref><sp/>*metadata[2];</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_f_l_a_c_____stream_metadata___vorbis_comment___entry" kindref="compound">FLAC__StreamMetadata_VorbisComment_Entry</ref><sp/>entry;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*fin;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>sample_rate<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>channels<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>bps<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(argc<sp/>!=<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;usage:<sp/>%s<sp/>infile.wav<sp/>outfile.flac\n&quot;</highlight><highlight class="normal">,<sp/>argv[0]);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((fin<sp/>=<sp/>fopen(argv[1],<sp/></highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">))<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>opening<sp/>%s<sp/>for<sp/>output\n&quot;</highlight><highlight class="normal">,<sp/>argv[1]);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>wav<sp/>header<sp/>and<sp/>validate<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fread(<ref refid="structbuffer" kindref="compound">buffer</ref>,<sp/>1,<sp/>44,<sp/>fin)<sp/>!=<sp/>44<sp/>||</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcmp(<ref refid="structbuffer" kindref="compound">buffer</ref>,<sp/></highlight><highlight class="stringliteral">&quot;RIFF&quot;</highlight><highlight class="normal">,<sp/>4)<sp/>||</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcmp(<ref refid="structbuffer" kindref="compound">buffer</ref>+8,<sp/></highlight><highlight class="stringliteral">&quot;WAVEfmt<sp/>\020\000\000\000\001\000\002\000&quot;</highlight><highlight class="normal">,<sp/>16)<sp/>||</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcmp(<ref refid="structbuffer" kindref="compound">buffer</ref>+32,<sp/></highlight><highlight class="stringliteral">&quot;\004\000\020\000data&quot;</highlight><highlight class="normal">,<sp/>8)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>invalid/unsupported<sp/>WAVE<sp/>file,<sp/>only<sp/>16bps<sp/>stereo<sp/>WAVE<sp/>in<sp/>canonical<sp/>form<sp/>allowed\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conv2dtest_8m_1ae93e9d524fd1ef618af3d5070a8126eb" kindref="member">fclose</ref>(fin);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>sample_rate<sp/>=<sp/>((((((unsigned)<ref refid="structbuffer" kindref="compound">buffer</ref>[27]<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/><ref refid="structbuffer" kindref="compound">buffer</ref>[26])<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/><ref refid="structbuffer" kindref="compound">buffer</ref>[25])<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/><ref refid="structbuffer" kindref="compound">buffer</ref>[24];</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>channels<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>bps<sp/>=<sp/>16;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>total_samples<sp/>=<sp/>(((((((unsigned)<ref refid="structbuffer" kindref="compound">buffer</ref>[43]<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/><ref refid="structbuffer" kindref="compound">buffer</ref>[42])<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/><ref refid="structbuffer" kindref="compound">buffer</ref>[41])<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/><ref refid="structbuffer" kindref="compound">buffer</ref>[40])<sp/>/<sp/>4;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>the<sp/>encoder<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!encoder)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>allocating<sp/>encoder\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="conv2dtest_8m_1ae93e9d524fd1ef618af3d5070a8126eb" kindref="member">fclose</ref>(fin);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>&amp;=<sp/>encoder.<ref refid="class_f_l_a_c_1_1_encoder_1_1_stream_1a67d44e83d8c94a04d602ec7daf90966a" kindref="member">set_verify</ref>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>&amp;=<sp/>encoder.<ref refid="class_f_l_a_c_1_1_encoder_1_1_stream_1a7b0829473587e15d10b128fd5e27b3cf" kindref="member">set_compression_level</ref>(5);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>&amp;=<sp/>encoder.<ref refid="class_f_l_a_c_1_1_encoder_1_1_stream_1a5b3b843c1294a88ec3ce142a8c771cea" kindref="member">set_channels</ref>(channels);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>&amp;=<sp/>encoder.<ref refid="class_f_l_a_c_1_1_encoder_1_1_stream_1a05a63153a5e0a7c4122834beafbe9e66" kindref="member">set_bits_per_sample</ref>(bps);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>&amp;=<sp/>encoder.<ref refid="class_f_l_a_c_1_1_encoder_1_1_stream_1af35ccb46fda06b30e1b2d03af0996098" kindref="member">set_sample_rate</ref>(sample_rate);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>&amp;=<sp/>encoder.<ref refid="class_f_l_a_c_1_1_encoder_1_1_stream_1a6a9dfe3cb7943751888b486853577237" kindref="member">set_total_samples_estimate</ref>(total_samples);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>now<sp/>add<sp/>some<sp/>metadata;<sp/>we&apos;ll<sp/>add<sp/>some<sp/>tags<sp/>and<sp/>a<sp/>padding<sp/>block<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ok)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(metadata[0]<sp/>=<sp/><ref refid="group__flac__metadata__object_1ga0d21a62648d8c5321b4b47f8ee5a52f0" kindref="member">FLAC__metadata_object_new</ref>(<ref refid="group__flac__format_1ggac71714ba8ddbbd66d26bb78a427fac01ad013576bc5196b907547739518605520" kindref="member">FLAC__METADATA_TYPE_VORBIS_COMMENT</ref>))<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(metadata[1]<sp/>=<sp/><ref refid="group__flac__metadata__object_1ga0d21a62648d8c5321b4b47f8ee5a52f0" kindref="member">FLAC__metadata_object_new</ref>(<ref refid="group__flac__format_1ggac71714ba8ddbbd66d26bb78a427fac01a6dcb741fc0aef389580f110e88beb896" kindref="member">FLAC__METADATA_TYPE_PADDING</ref>))<sp/>==<sp/><ref refid="getopt1_8c_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>there<sp/>are<sp/>many<sp/>tag<sp/>(vorbiscomment)<sp/>functions<sp/>but<sp/>these<sp/>are<sp/>convenient<sp/>for<sp/>this<sp/>particular<sp/>use:<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="group__flac__metadata__object_1ga0ec0c7ddd3a8832ee7a75bf47956b1c7" kindref="member">FLAC__metadata_object_vorbiscomment_entry_from_name_value_pair</ref>(&amp;entry,<sp/></highlight><highlight class="stringliteral">&quot;ARTIST&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Some<sp/>Artist&quot;</highlight><highlight class="normal">)<sp/>||</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="group__flac__metadata__object_1gad04ef80ae5f852db8f3729a6ef8c1631" kindref="member">FLAC__metadata_object_vorbiscomment_append_comment</ref>(metadata[0],<sp/>entry,<sp/></highlight><highlight class="comment">/*copy=*/</highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>||<sp/></highlight><highlight class="comment">/*<sp/>copy=false:<sp/>let<sp/>metadata<sp/>object<sp/>take<sp/>control<sp/>of<sp/>entry&apos;s<sp/>allocated<sp/>string<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="group__flac__metadata__object_1ga0ec0c7ddd3a8832ee7a75bf47956b1c7" kindref="member">FLAC__metadata_object_vorbiscomment_entry_from_name_value_pair</ref>(&amp;entry,<sp/></highlight><highlight class="stringliteral">&quot;YEAR&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;1984&quot;</highlight><highlight class="normal">)<sp/>||</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="group__flac__metadata__object_1gad04ef80ae5f852db8f3729a6ef8c1631" kindref="member">FLAC__metadata_object_vorbiscomment_append_comment</ref>(metadata[0],<sp/>entry,<sp/></highlight><highlight class="comment">/*copy=*/</highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>out<sp/>of<sp/>memory<sp/>or<sp/>tag<sp/>error\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ok<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>metadata[1]-&gt;<ref refid="struct_f_l_a_c_____stream_metadata_1a3fd615e41609837a5672f9081d9d2183" kindref="member">length</ref><sp/>=<sp/>1234;<sp/></highlight><highlight class="comment">/*<sp/>set<sp/>the<sp/>padding<sp/>length<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ok<sp/>=<sp/>encoder.<ref refid="class_f_l_a_c_1_1_encoder_1_1_stream_1ade255a7fd915ebe4d4b3a1623beeb0a9" kindref="member">set_metadata</ref>(metadata,<sp/>2);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>initialize<sp/>encoder<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ok)<sp/>{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>init_status<sp/>=<sp/>encoder.<ref refid="class_f_l_a_c_1_1_encoder_1_1_file_1abc91903fbc5cabbdc28dc6777b3e7c19" kindref="member">init</ref>(argv[2]);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(init_status<sp/>!=<sp/><ref refid="group__flac__stream__encoder_1gga3bb869620af2b188d77982a5c30b047da20501dce552da74c5df935eeaa0c9ee3" kindref="member">FLAC__STREAM_ENCODER_INIT_STATUS_OK</ref>)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>initializing<sp/>encoder:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="group__flac__stream__encoder_1ga05203d2cf0390dfbbc2b57b0f0b8e2df" kindref="member">FLAC__StreamEncoderInitStatusString</ref>[init_status]);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ok<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>read<sp/>blocks<sp/>of<sp/>samples<sp/>from<sp/>WAVE<sp/>file<sp/>and<sp/>feed<sp/>to<sp/>encoder<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(ok)<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>left<sp/>=<sp/>(size_t)total_samples;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(ok<sp/>&amp;&amp;<sp/>left)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>need<sp/>=<sp/>(left&gt;<ref refid="lib-src_2libflac_2examples_2cpp_2encode_2file_2main_8cpp_1a54bf24043fc6dd562b2ce3597993943c" kindref="member">READSIZE</ref>?<sp/>(size_t)<ref refid="lib-src_2libflac_2examples_2cpp_2encode_2file_2main_8cpp_1a54bf24043fc6dd562b2ce3597993943c" kindref="member">READSIZE</ref><sp/>:<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)left);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fread(<ref refid="structbuffer" kindref="compound">buffer</ref>,<sp/>channels*(bps/8),<sp/>need,<sp/>fin)<sp/>!=<sp/>need)<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>reading<sp/>from<sp/>WAVE<sp/>file\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ok<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>convert<sp/>the<sp/>packed<sp/>little-endian<sp/>16-bit<sp/>PCM<sp/>samples<sp/>from<sp/>WAVE<sp/>into<sp/>an<sp/>interleaved<sp/>FLAC__int32<sp/>buffer<sp/>for<sp/>libFLAC<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>need*channels;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>inefficient<sp/>but<sp/>simple<sp/>and<sp/>works<sp/>on<sp/>big-<sp/>or<sp/>little-endian<sp/>machines<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pcm[<ref refid="checksum_8c_1ab80e330a3bc9e38c1297fe17381e92b4" kindref="member">i</ref>]<sp/>=<sp/>(<ref refid="ordinals_8h_1a33fd77bfe6d685541a0c034a75deccdc" kindref="member">FLAC__int32</ref>)(((<ref refid="ordinals_8h_1ae4907c2639411fa7da0fe7a008a5f911" kindref="member">FLAC__int16</ref>)(<ref refid="ordinals_8h_1adda332f32eb8c143b14c09425285df1b" kindref="member">FLAC__int8</ref>)<ref refid="structbuffer" kindref="compound">buffer</ref>[2*i+1]<sp/>&lt;&lt;<sp/>8)<sp/>|<sp/>(<ref refid="ordinals_8h_1ae4907c2639411fa7da0fe7a008a5f911" kindref="member">FLAC__int16</ref>)<ref refid="structbuffer" kindref="compound">buffer</ref>[2*i]);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>feed<sp/>samples<sp/>to<sp/>encoder<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ok<sp/>=<sp/>encoder.<ref refid="class_f_l_a_c_1_1_encoder_1_1_stream_1aac4cb649f8a41c7a310d610af2f5445b" kindref="member">process_interleaved</ref>(pcm,<sp/>need);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left<sp/>-=<sp/>need;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>ok<sp/>&amp;=<sp/>encoder.<ref refid="class_f_l_a_c_1_1_encoder_1_1_stream_1a90e5e82bf38eb2300f2420bae2114b21" kindref="member">finish</ref>();</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;encoding:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>ok?<sp/></highlight><highlight class="stringliteral">&quot;succeeded&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;FAILED&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>state:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>encoder.<ref refid="class_f_l_a_c_1_1_encoder_1_1_stream_1a7d02295b73cbf9a073af5f16d1c0e8bf" kindref="member">get_state</ref>().<ref refid="class_f_l_a_c_1_1_encoder_1_1_stream_1_1_state_1a7cbc1b32b54af4606abf81b6c336262e" kindref="member">resolved_as_cstring</ref>(encoder));</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>now<sp/>that<sp/>encoding<sp/>is<sp/>finished,<sp/>the<sp/>metadata<sp/>can<sp/>be<sp/>freed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__flac__metadata__object_1ga66bbe27dba68ba77be5af83986a280ea" kindref="member">FLAC__metadata_object_delete</ref>(metadata[0]);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__flac__metadata__object_1ga66bbe27dba68ba77be5af83986a280ea" kindref="member">FLAC__metadata_object_delete</ref>(metadata[1]);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="conv2dtest_8m_1ae93e9d524fd1ef618af3d5070a8126eb" kindref="member">fclose</ref>(fin);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173" refid="class_our_encoder_1a0f1c9e8faa23094567a4c354be8e796e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_our_encoder_1a0f1c9e8faa23094567a4c354be8e796e" kindref="member">OurEncoder::progress_callback</ref>(<ref refid="ordinals_8h_1aa78c8c70a3eb8a58af7436f278acde8e" kindref="member">FLAC__uint64</ref><sp/>bytes_written,<sp/><ref refid="ordinals_8h_1aa78c8c70a3eb8a58af7436f278acde8e" kindref="member">FLAC__uint64</ref><sp/>samples_written,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>frames_written,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>total_frames_estimate)</highlight></codeline>
<codeline lineno="174"><highlight class="normal">{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(<ref refid="namespacewaflib_1_1ansiterm_1a44bedfddf1392d636441272f5f3c95d4" kindref="member">stderr</ref>,<sp/></highlight><highlight class="stringliteral">&quot;wrote<sp/>%&quot;</highlight><highlight class="normal"><sp/><ref refid="ffmpeg_2win32_2inttypes_8h_1ac582131d7a7c8ee57e73180d1714f9d5" kindref="member">PRIu64</ref><sp/></highlight><highlight class="stringliteral">&quot;<sp/>bytes,<sp/>%&quot;</highlight><highlight class="normal"><sp/><ref refid="ffmpeg_2win32_2inttypes_8h_1ac582131d7a7c8ee57e73180d1714f9d5" kindref="member">PRIu64</ref><sp/></highlight><highlight class="stringliteral">&quot;/%u<sp/>samples,<sp/>%u/%u<sp/>frames\n&quot;</highlight><highlight class="normal">,<sp/>bytes_written,<sp/>samples_written,<sp/>total_samples,<sp/>frames_written,<sp/>total_frames_estimate);</highlight></codeline>
<codeline lineno="176"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/libflac/examples/cpp/encode/file/main.cpp"/>
  </compounddef>
</doxygen>
