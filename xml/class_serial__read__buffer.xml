<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="class_serial__read__buffer" kind="class" language="C++" prot="public">
    <compoundname>Serial_read_buffer</compoundname>
    <basecompoundref refid="class_serial__buffer" prot="public" virt="non-virtual">Serial_buffer</basecompoundref>
    <includes refid="allegro_8h" local="no">allegro.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_serial__read__buffer_1ac33a4bbfe671a2a3aaa3c6ab23723ebf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual Serial_read_buffer::~Serial_read_buffer</definition>
        <argsstring>()</argsstring>
        <name>~Serial_read_buffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portsmf/allegro.h" line="550" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portsmf/allegro.h" bodystart="550" bodyend="550"/>
      </memberdef>
      <memberdef kind="function" id="class_serial__read__buffer_1abf3bfe78050a52c406b903417a0616a5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void Serial_read_buffer::get_pad</definition>
        <argsstring>()</argsstring>
        <name>get_pad</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portsmf/allegro.h" line="555" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portsmf/allegro.h" bodystart="555" bodyend="555"/>
      </memberdef>
      <memberdef kind="function" id="class_serial__read__buffer_1a006cf2105a0cb63fe1c2f8cdba1711b6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void Serial_read_buffer::init_for_read</definition>
        <argsstring>(void *buf, long n)</argsstring>
        <name>init_for_read</name>
        <param>
          <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref> *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>long</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portsmf/allegro.h" line="562" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portsmf/allegro.h" bodystart="562" bodyend="566"/>
      </memberdef>
      <memberdef kind="function" id="class_serial__read__buffer_1a48e6eeffcae860a5103b5cbccb6796eb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>char</type>
        <definition>char Serial_read_buffer::get_char</definition>
        <argsstring>()</argsstring>
        <name>get_char</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portsmf/allegro.h" line="567" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portsmf/allegro.h" bodystart="567" bodyend="567"/>
      </memberdef>
      <memberdef kind="function" id="class_serial__read__buffer_1ad2aefc6dbda7bbd4bd3e7b8db45af2c7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void Serial_read_buffer::unget_chars</definition>
        <argsstring>(int n)</argsstring>
        <name>unget_chars</name>
        <param>
          <type><ref refid="xmltok_8h_1a5a0d4a5641ce434f1d23533f2b2e6653" kindref="member">int</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portsmf/allegro.h" line="568" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portsmf/allegro.h" bodystart="568" bodyend="568"/>
      </memberdef>
      <memberdef kind="function" id="class_serial__read__buffer_1a9cbdae0a27cdc8973605c374dc8f5be1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>long Serial_read_buffer::get_int32</definition>
        <argsstring>()</argsstring>
        <name>get_int32</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portsmf/allegro.h" line="569" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portsmf/allegro.h" bodystart="569" bodyend="569"/>
      </memberdef>
      <memberdef kind="function" id="class_serial__read__buffer_1af6b268f77befde5dbbe1aefedeb665a4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float Serial_read_buffer::get_float</definition>
        <argsstring>()</argsstring>
        <name>get_float</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portsmf/allegro.h" line="570" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portsmf/allegro.h" bodystart="570" bodyend="570"/>
      </memberdef>
      <memberdef kind="function" id="class_serial__read__buffer_1a5bdc704d96dbc7a7ef9003301e01a0b4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Serial_read_buffer::get_double</definition>
        <argsstring>()</argsstring>
        <name>get_double</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portsmf/allegro.h" line="571" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portsmf/allegro.h" bodystart="571" bodyend="572"/>
      </memberdef>
      <memberdef kind="function" id="class_serial__read__buffer_1aef81232675eb624676b3f0a9adcfc46a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="getopt1_8c_1a2c212835823e3c54a8ab6d95c652660e" kindref="member">const</ref> char *</type>
        <definition>const char* Serial_read_buffer::get_string</definition>
        <argsstring>()</argsstring>
        <name>get_string</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portsmf/allegro.h" line="573" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portsmf/allegro.h" bodystart="573" bodyend="577"/>
      </memberdef>
      <memberdef kind="function" id="class_serial__read__buffer_1af33bbfe712eea854d02273df3f3cc313" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="sound_8c_1ae35f5844602719cf66324f4de2a658b3" kindref="member">void</ref></type>
        <definition>void Serial_read_buffer::check_input_buffer</definition>
        <argsstring>(long needed)</argsstring>
        <name>check_input_buffer</name>
        <param>
          <type>long</type>
          <declname>needed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portsmf/allegro.h" line="578" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portsmf/allegro.h" bodystart="578" bodyend="579"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="10078">
        <label>Serial_buffer</label>
        <link refid="class_serial__buffer"/>
      </node>
      <node id="10077">
        <label>Serial_read_buffer</label>
        <link refid="class_serial__read__buffer"/>
        <childnode refid="10078" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="10080">
        <label>Serial_buffer</label>
        <link refid="class_serial__buffer"/>
      </node>
      <node id="10079">
        <label>Serial_read_buffer</label>
        <link refid="class_serial__read__buffer"/>
        <childnode refid="10080" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="C:/_dev/OpenU/Audacity/audacity/lib-src/portsmf/allegro.h" line="544" column="1" bodyfile="C:/_dev/OpenU/Audacity/audacity/lib-src/portsmf/allegro.h" bodystart="544" bodyend="580"/>
    <listofallmembers>
      <member refid="class_serial__buffer_1a0daee3ecf8d774980250eecd243ecc70" prot="protected" virt="non-virtual"><scope>Serial_read_buffer</scope><name>buffer</name></member>
      <member refid="class_serial__read__buffer_1af33bbfe712eea854d02273df3f3cc313" prot="public" virt="non-virtual"><scope>Serial_read_buffer</scope><name>check_input_buffer</name></member>
      <member refid="class_serial__read__buffer_1a48e6eeffcae860a5103b5cbccb6796eb" prot="public" virt="non-virtual"><scope>Serial_read_buffer</scope><name>get_char</name></member>
      <member refid="class_serial__read__buffer_1a5bdc704d96dbc7a7ef9003301e01a0b4" prot="public" virt="non-virtual"><scope>Serial_read_buffer</scope><name>get_double</name></member>
      <member refid="class_serial__read__buffer_1af6b268f77befde5dbbe1aefedeb665a4" prot="public" virt="non-virtual"><scope>Serial_read_buffer</scope><name>get_float</name></member>
      <member refid="class_serial__read__buffer_1a9cbdae0a27cdc8973605c374dc8f5be1" prot="public" virt="non-virtual"><scope>Serial_read_buffer</scope><name>get_int32</name></member>
      <member refid="class_serial__buffer_1a826d3504ea1da67627b1a7482cebbf58" prot="public" virt="non-virtual"><scope>Serial_read_buffer</scope><name>get_len</name></member>
      <member refid="class_serial__read__buffer_1abf3bfe78050a52c406b903417a0616a5" prot="public" virt="non-virtual"><scope>Serial_read_buffer</scope><name>get_pad</name></member>
      <member refid="class_serial__buffer_1a8130ec8288aacf5a35f93bda0a8273ea" prot="public" virt="non-virtual"><scope>Serial_read_buffer</scope><name>get_posn</name></member>
      <member refid="class_serial__read__buffer_1aef81232675eb624676b3f0a9adcfc46a" prot="public" virt="non-virtual"><scope>Serial_read_buffer</scope><name>get_string</name></member>
      <member refid="class_serial__read__buffer_1a006cf2105a0cb63fe1c2f8cdba1711b6" prot="public" virt="non-virtual"><scope>Serial_read_buffer</scope><name>init_for_read</name></member>
      <member refid="class_serial__buffer_1ac61bd539ff999551abc6f2723caa9602" prot="protected" virt="non-virtual"><scope>Serial_read_buffer</scope><name>len</name></member>
      <member refid="class_serial__buffer_1ab39b90533bf801d77ab85c4543360297" prot="protected" virt="non-virtual"><scope>Serial_read_buffer</scope><name>ptr</name></member>
      <member refid="class_serial__buffer_1aa36c343afb4905c83c81c82d78d5e819" prot="public" virt="non-virtual"><scope>Serial_read_buffer</scope><name>Serial_buffer</name></member>
      <member refid="class_serial__read__buffer_1ad2aefc6dbda7bbd4bd3e7b8db45af2c7" prot="public" virt="non-virtual"><scope>Serial_read_buffer</scope><name>unget_chars</name></member>
      <member refid="class_serial__buffer_1ac87e7f08b3085d3d9baad85568008139" prot="public" virt="virtual"><scope>Serial_read_buffer</scope><name>~Serial_buffer</name></member>
      <member refid="class_serial__read__buffer_1ac33a4bbfe671a2a3aaa3c6ab23723ebf" prot="public" virt="virtual"><scope>Serial_read_buffer</scope><name>~Serial_read_buffer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
